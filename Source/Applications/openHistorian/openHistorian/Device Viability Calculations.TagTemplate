# Device Viability Calculations Template
#
# File format is tab-delimited with the following columns:
#     Tag Name->Inputs->Equation->Type->Description
#
# For custom action adapter types, the format can be interpreted as:
#     Tag Name = Adapter Instance Name
#     Inputs = Connection String
#     Equation = Assembly Name (i.e., DLL file name)
#     Type = Fully Qualified Type Name
#     Description = Local Comments
#
# Otherwise format defines dynamic signal based calculations based on input configuration:
#     Tag Name = Identifier that becomes part of the point tag name of the calculation result
#     Inputs = Particular inputs for the specified calculation type
#     Equation = Calculation equation, if applicable to the calculation type
#     Type = Calculation type, one of: CalculatePower, SumPhase or DynamicCalculator
#     Description = Textual description of calculation purpose included in measurement description field
#
# CalculatePower type creates power calculations for paired voltage/current phasors where
# Inputs column is one of: +, A, B or C
#
# SumPhase type creates a 3-phase power summation when A, B and C power calculations are available where
# Inputs column is one of: MW, MVAR or MVA
#     
# DynamicCalculator type creates an equation-based calculation using one or more selected inputs separated by semi-colon where
# Inputs column variables are as follows - note that phasor based inputs will create one calculation per phasor type (V or I):
#     VNOM: Nominal Voltage = derived from per voltage phasor screen input in kV
#      VAM: Voltage A-Phase Magnitude also VBM, VCM, VNM for B, C & N phases and VPOSM, VNEGM, VZM for +, -, 0 sequence
#      VAA: Voltage A-Phase Angle     also VBA, VCA, VNA            ^            VPOSA, VNEGA, VZA
#      IAM: Current A-Phase Magnitude also IBM, ICM, INM         Neutral         IPOSM, INEGM, IZM
#      IAA: Current A-Phase Angle     also IBA, ICA, INA                         IPOSA, INEGA, IZA
#     FREQ: Frequency
#     FNOM: Constant nominal frequency per defined global system configuration, defaults to 60
#     FAVG: Current average frequency - must be pre-calculated with signal reference of "SYSTEM!FREQ-AVG-FQ"
#    FLAGS: Status Flags, e.g., IEEE C37.118 STAT word
#
# Phasor type variables and the Tag Name column, which become system output measurements, can also be used to create device
# level aggregate equation-based calculations using one or more selected array type inputs. The aggregate equations still use
# the DynamicCalculator type where the Inputs column variables separated by semi-colon, however the Inputs are always arrays.
# When using outputs from previous calculations as inputs to an aggregation calculation, only those that can produce multiple
# outputs per device can be used. Also, the outputs to be used as inputs must be defined in the same tag template file and be
# defined before they are used as inputs. Names of Inputs should be the Inputs variable name or the Tag Name suffixed with an
# array indicator "[]". For example, the VAM Inputs variable as an array Input would be VAM[]. All operations in the Equation
# column are performed on array inputs and the following aggregate functions are defined: Count, Sum, Min, Max, Avg, and StDev
# all of which operate on a single array input. There are also two special functions called "Any" and "All" which accepts an
# array input and a string with a simple comparison equation, for example: Any(VPOSM, "> 0").
#
# Tag Name	Inputs	Equation	Type	Description
VMAG_DEV_VA	VNOM;VAM	100*((VAM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal A
VMAG_DEV_VB	VNOM;VBM	100*((VBM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal B
VMAG_DEV_VC	VNOM;VCM	100*((VCM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal C
VMAG_DEV_XP	VAM;VBM;VCM	100*((Max(VAM,Max(VBM,VCM))-Min(VAM,Min(VBM,VCM)))/Min(VAM,Min(VBM,VCM)))	DynamicCalculator	Voltage Deviation across Phases
VANG_DIFF_BA	VBA;VAA	VBA-VAA	DynamicCalculator	Voltage Angle Difference B to A
VANG_DIFF_CA	VCA;VAA	VCA-VAA	DynamicCalculator	Voltage Angle Difference C to A
IMAG_DEV_XP	IAM;IBM;ICM	100*((Max(IAM,Max(IBM,ICM))-Min(IAM,Min(IBM,ICM)))/Min(IAM,Min(IBM,ICM)))	DynamicCalculator	Current Deviation across Phases
IANG_DIFF_BA	IBA;IAA	IBA-IAA	DynamicCalculator	Current Angle Difference B to A
IANG_DIFF_CA	ICA;IAA	ICA-IAA	DynamicCalculator	Current Angle Difference C to A
DEVICE_VA	VMAG_DEV_VA[]	IF(Any(VMAG_DEV_VA, "> 10"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal A Alarm
DEVICE_VB	VMAG_DEV_VB[]	IF(Any(VMAG_DEV_VB, "> 10"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal B Alarm
DEVICE_VC	VMAG_DEV_VC[]	IF(Any(VMAG_DEV_VC, "> 10"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal C Alarm
DEVICE_VX	VMAG_DEV_XP[]	IF(Any(VMAG_DEV_XP, "> 10"), 0, 1)	DynamicCalculator	Device Voltage Deviation across Phases Alarm
DEVICE_IA	IAM[]	IF(Any(IAM, "< 100") OR Any(IAM, "> 3000"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal A Alarm
DEVICE_IB	IBM[]	IF(Any(IBM, "< 100") OR Any(IBM, "> 3000"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal B Alarm
DEVICE_IC	ICM[]	IF(Any(ICM, "< 100") OR Any(ICM, "> 3000"), 0, 1)	DynamicCalculator	Device Voltage Deviation from Nominal C Alarm
DEVICE_IX	IMAG_DEV_XP[]	IF(Any(IMAG_DEV_XP, "> 10"), 0, 1)	DynamicCalculator	Device Current Deviation across Phases Alarm
FREQ_ALARM	FREQ	IF(FREQ < 59.7 OR FREQ > 60.3, 0, 1)	DynamicCalculator	Frequency Alarm
DEVICE_VB_ANG	VANG_DIFF_BA[]	IF(Any(VANG_DIFF_BA, "< -130") OR Any(VANG_DIFF_BA, "> -110"), 0, 1)	DynamicCalculator	Device Voltage Angle Difference B to A Alarm
DEVICE_VC_ANG	VANG_DIFF_CA[]	IF(Any(VANG_DIFF_CA, "< 110") OR Any(VANG_DIFF_CA, "> 130"), 0, 1)	DynamicCalculator	Device Voltage Angle Difference C to A Alarm
DEVICE_IB_ANG	IANG_DIFF_BA[]	IF(Any(IANG_DIFF_BA, "< -130") OR Any(IANG_DIFF_BA, "> -110"), 0, 1)	DynamicCalculator	Device Current Angle Difference B to A Alarm
DEVICE_IC_ANG	IANG_DIFF_CA[]	IF(Any(IANG_DIFF_CA, "< 110") OR Any(IANG_DIFF_CA, "> 130"), 0, 1)	DynamicCalculator	Device Current Angle Difference C to A Alarm
DEVICE_MONITOR	TargetParentDevices=False	GrafanaAdapters.dll	GrafanaAdapters.DeviceAlarmStateAdapter	Sets up device alarm state monitoring