{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///./css/config-editor.css","webpack:///./css/query-editor.css","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/nonce","webpack:///external commonjs \"@grafana/data\"","webpack:///external commonjs \"@grafana/runtime\"","webpack:///./js/constants.ts","webpack:///external commonjs \"react\"","webpack:///external commonjs \"@grafana/ui\"","webpack:///./css/query-editor.css?edf4","webpack:///./components/AnnotationEditor.tsx","webpack:///./datasource.ts","webpack:///./css/config-editor.css?a65e","webpack:///external commonjs \"lodash\"","webpack:///./components/ElementQueryEditor.tsx","webpack:///./components/MetaDataFieldSelector.tsx","webpack:///./components/TextQueryEditor.tsx","webpack:///./components/CommandLevelSelection.tsx","webpack:///./module.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./components/VariableQueryEditor.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.dark-box {\r\n  background-color: rgba(32, 34, 38); \r\n  padding: 8px; \r\n  border-radius: 4px;\r\n  border-color: 1px darkgray;\r\n}\r\n\r\n.dark-box .switch {\r\n  background-color: blue; /* Change the background color */\r\n}\r\n\r\n.dark-box .switch::before {\r\n  background-color: white; /* Change the color of the switch thumb */\r\n}\r\n\r\n.dark-button {\r\n  background-color: rgb(34,37,43); \r\n  color: rgb(199,204,220); \r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/config-editor.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kCAAkC;EAClC,YAAY;EACZ,kBAAkB;EAClB,0BAA0B;AAC5B;;AAEA;EACE,sBAAsB,EAAE,gCAAgC;AAC1D;;AAEA;EACE,uBAAuB,EAAE,yCAAyC;AACpE;;AAEA;EACE,+BAA+B;EAC/B,uBAAuB;AACzB\",\"sourcesContent\":[\".dark-box {\\r\\n  background-color: rgba(32, 34, 38); \\r\\n  padding: 8px; \\r\\n  border-radius: 4px;\\r\\n  border-color: 1px darkgray;\\r\\n}\\r\\n\\r\\n.dark-box .switch {\\r\\n  background-color: blue; /* Change the background color */\\r\\n}\\r\\n\\r\\n.dark-box .switch::before {\\r\\n  background-color: white; /* Change the color of the switch thumb */\\r\\n}\\r\\n\\r\\n.dark-button {\\r\\n  background-color: rgb(34,37,43); \\r\\n  color: rgb(199,204,220); \\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.dark-box {\r\n    background-color: rgba(17, 18, 23);\r\n    padding: 6px;\r\n    border-radius: 2px;\r\n    border: 1px solid darkgray;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n  \r\n.dark-box span {\r\n    margin: 0;\r\n    padding: 2px; \r\n}\r\n\r\n.auto-width {\r\n    width: auto;\r\n}\r\n  \r\n  `, \"\",{\"version\":3,\"sources\":[\"webpack://./css/query-editor.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,kCAAkC;IAClC,YAAY;IACZ,kBAAkB;IAClB,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\".dark-box {\\r\\n    background-color: rgba(17, 18, 23);\\r\\n    padding: 6px;\\r\\n    border-radius: 2px;\\r\\n    border: 1px solid darkgray;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n}\\r\\n  \\r\\n.dark-box span {\\r\\n    margin: 0;\\r\\n    padding: 2px; \\r\\n}\\r\\n\\r\\n.auto-width {\\r\\n    width: auto;\\r\\n}\\r\\n  \\r\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@grafana/data\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@grafana/runtime\");","export const QuerySelectOptions = [\r\n    { label: 'Query Wizard', value: 'Elements' },\r\n    { label: 'Text Editor', value: 'Text' },\r\n];\r\n\r\nexport const VariableQuerySelectOptions = [\r\n    { label: 'All Points', value: 'All' },\r\n    { label: 'Elements', value: 'Elements' },\r\n    { label: 'Text Editor', value: 'Text' },\r\n];\r\n\r\n\r\nexport const DefaultFlags = {\r\n    'Select All': { Value: false, Order: -1, Flag: 0 },\r\n    Normal: { Value: false, Order: 0, Flag: 0  },\r\n    BadData: { Value: false, Order: 1, Flag: 1 << 0  },\r\n    SuspectData: { Value: false, Order: 2, Flag: 1 << 1 },\r\n    OverRangeError: { Value: false, Order: 3, Flag: 1 << 2 },\r\n    UnderRangeError: { Value: false, Order: 4, Flag: 1 << 3 },\r\n    AlarmHigh: { Value: false, Order: 5, Flag: 1 << 4 },\r\n    AlarmLow: { Value: false, Order: 6, Flag: 1 << 5 },\r\n    WarningHigh: { Value: false, Order: 7, Flag: 1 << 6 },\r\n    WarningLow: { Value: false, Order: 8, Flag: 1 << 7 },\r\n    FlatlineAlarm: { Value: false, Order: 9, Flag: 1 << 8 },\r\n    ComparisonAlarm: { Value: false, Order: 10, Flag: 1 << 9 },\r\n    ROCAlarm: { Value: false, Order: 11, Flag: 1 << 10 },\r\n    ReceivedAsBad: { Value: false, Order: 12, Flag: 1 << 11 },\r\n    CalculatedValue: { Value: false, Order: 13, Flag: 1 << 12 },\r\n    CalculationError: { Value: false, Order: 14, Flag: 1 << 13 },\r\n    CalculationWarning: { Value: false, Order: 15, Flag: 1 << 14 },\r\n    ReservedQualityFlag: { Value: false, Order: 16, Flag: 1 << 15 },\r\n    BadTime: { Value: false, Order: 17, Flag: 1 << 16 },\r\n    SuspectTime: { Value: false, Order: 18, Flag: 1 << 17 },\r\n    LateTimeAlarm: { Value: false, Order: 19, Flag: 1 << 18 },\r\n    FutureTimeAlarm: { Value: false, Order: 20, Flag: 1 << 19 },\r\n    UpSampled: { Value: false, Order: 21, Flag: 1 << 20 },\r\n    DownSampled: { Value: false, Order: 22, Flag: 1 << 21 },\r\n    DiscardedValue: { Value: false, Order: 23, Flag: 1 << 22 },\r\n    ReservedTimeFlag: { Value: false, Order: 24, Flag: 1 << 23 },\r\n    UserDefinedFlag1: { Value: false, Order: 25, Flag: 1 << 24 },\r\n    UserDefinedFlag2: { Value: false, Order: 26, Flag: 1 << 25 },\r\n    UserDefinedFlag3: { Value: false, Order: 27, Flag: 1 << 26 },\r\n    UserDefinedFlag4: { Value: false, Order: 28, Flag: 1 << 27 },\r\n    UserDefinedFlag5: { Value: false, Order: 29, Flag: 1 << 28 },\r\n    SystemError: { Value: false, Order: 30, Flag: 1 << 29 },\r\n    SystemWarning: { Value: false, Order: 31, Flag: 1 << 30 },\r\n    MeasurementError: { Value: false, Order: 32, Flag: 1 << 31 }\r\n}\r\n\r\nexport const WhereOperators = ['=', '<>', '<', '<=', '>', '>=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'IS', 'IS NOT'];\r\n\r\nexport const Booleans = ['true', 'false'];\r\n\r\nexport const AngleUnits = ['Radians', 'Degrees', 'Grads', 'ArcMinutes', 'ArcSeconds', 'AngularMil']\r\n\r\nexport const TimeUnits = ['Weeks', 'Days', 'Hours', 'Minutes', 'Seconds', 'Milliseconds', 'Microseconds', 'Nanoseconds', 'Ticks', 'PlankTime', 'AtomicUnitsOfTime', 'Ke']\r\n\r\nexport const DefaultTimeUnits = ['Seconds', 'Minutes', 'Hours', 'Days', 'Weeks', 'Ticks', 'AtomicUnitsOfTime', 'PlanckTime', 'Ke']\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@grafana/ui\");","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./query-editor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./query-editor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\r\nimport { FieldSet, InlineField, TextArea } from '@grafana/ui';\r\nimport { QueryEditorProps } from '@grafana/data';\r\nimport { DataSource } from '../datasource';\r\nimport { openHistorianDataSourceOptions, openHistorianQuery } from '../types';\r\nimport \"../css/query-editor.css\";\r\n\r\ntype Props = QueryEditorProps<DataSource, openHistorianQuery, openHistorianDataSourceOptions>;\r\n\r\nexport function AnnotationEditor({ query, onChange }: Props) {\r\n\r\n  React.useEffect(() => {\r\n    if (query.queryType !== 'Annotations') {\r\n      onChange({ ...query, queryType: 'Annotations' })\r\n    }\r\n  }, [query, onChange])\r\n\r\n  return (\r\n    <FieldSet style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <InlineField label=\"Query\" labelWidth={'auto'} grow={true} shrink={true}>\r\n        <TextArea\r\n          value={query.queryText}\r\n          onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) => onChange({ ...query, queryText: evt.target.value })}\r\n          rows={5}\r\n          width={150}\r\n        />\r\n      </InlineField>\r\n    </FieldSet>\r\n  );\r\n}\r\n\r\n","import {\r\n  DataQueryRequest,\r\n  DataQueryResponse,\r\n  DataQueryError,\r\n  DataSourceApi,\r\n  DataSourceInstanceSettings,\r\n  MutableDataFrame,\r\n  FieldType,\r\n} from \"@grafana/data\";\r\nimport {\r\n  openHistorianQuery,\r\n  openHistorianDataSourceOptions,\r\n  QueryRequest,\r\n  Target,\r\n  FunctionQuery,\r\n  ParsedQuery,\r\n  MyVariableQuery,\r\n  QueryBase,\r\n  MetaDataSelection,\r\n  QueryResponse\r\n} from \"./types\";\r\nimport { getBackendSrv, getTemplateSrv } from \"@grafana/runtime\";\r\nimport _ from \"lodash\";\r\nimport { DefaultFlags } from \"./js/constants\";\r\nimport { AnnotationEditor } from \"./components/AnnotationEditor\";\r\n\r\n\r\nexport class DataSource extends DataSourceApi<openHistorianQuery, openHistorianDataSourceOptions> {\r\n  url: string;\r\n  flags: {\r\n    [key: string]: boolean;\r\n  };\r\n  valueTypeIndex: number;\r\n  valueTypeName: string;\r\n  timeSeriesDefinitions: string[];\r\n  metadataTableName: string;\r\n\r\n  constructor(\r\n    instanceSettings: DataSourceInstanceSettings<openHistorianDataSourceOptions>\r\n  ) {\r\n    super(instanceSettings);\r\n\r\n    this.annotations = {\r\n      QueryEditor: AnnotationEditor\r\n    }\r\n    this.url = instanceSettings.jsonData.http.url || \"\";\r\n    this.flags = instanceSettings.jsonData.flags || {};\r\n    this.valueTypeIndex = parseInt(instanceSettings.jsonData.valueTypeIndex || \"0\", 10);\r\n    this.valueTypeName = instanceSettings.jsonData.valueTypeName || \"\";\r\n    this.timeSeriesDefinitions = instanceSettings.jsonData.timeSeriesDefinitions ?? [''];\r\n    this.metadataTableName = instanceSettings.jsonData.metadataTableName || \"\";\r\n  }\r\n\r\n  // This builds the Variable Query\r\n  async metricFindQuery(query: MyVariableQuery, options?: any) {\r\n    // Retrieve DataQueryResponse based on query.\r\n    if (query.tableName === undefined || query.fieldNames === undefined) { return; }\r\n\r\n    if (query.tableName.length === 0) {\r\n      query.tableName = \"ActiveMeasurements\";\r\n\r\n      if (query.fieldNames.length === 0 || query.fieldNames[0] === '*') {\r\n        query.fieldNames = [\"PointTag\"];\r\n      }\r\n    }\r\n\r\n    if (query.fieldNames.length === 0) {\r\n      query.fieldNames = [\"*\"];\r\n    }\r\n\r\n    let data = await getBackendSrv().post(this.url + \"/Search\", {\r\n      dataTypeIndex: -1 /* unrestricted search */,\r\n      expression: `SELECT DISTINCT ${query.fieldNames} FROM ${query.tableName} ${query.condition?.length ?? 0 === 0 ? \"\" : ` WHERE ${query.condition}`}`\r\n    })\r\n    return data.map((s: string) => ({ text: s }));\r\n  }\r\n\r\n  //Generate value of excluded flags\r\n  calculateFlags() {\r\n    let excludedValue = 0;\r\n\r\n    for (const [key, value] of Object.entries(this.flags)) {\r\n      if (key !== \"Select All\" && key !== \"Normal\" && value === true) {\r\n        excludedValue ^= DefaultFlags[key as keyof typeof DefaultFlags].Flag;\r\n      }\r\n    }\r\n\r\n    return excludedValue;\r\n  }\r\n\r\n  targetToString(target: QueryBase) {\r\n    if (target === undefined) {\r\n      return \"\";\r\n    }\r\n\r\n    if (target.queryType === \"Elements\" || target.queryType === undefined) {\r\n      return this.parsedQueryToString(target.parsedQuery)\r\n    }\r\n    else if (target.queryType === \"Text\") {\r\n      return target.queryText\r\n    }\r\n    else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  functionToString(fx: FunctionQuery) {\r\n    const parameter = fx.Parameters.map((p) => {\r\n      if (p.type.type.includes('IAsyncEnumerable')) {\r\n        return this.parsedQueryToString(p.value as ParsedQuery)\r\n      }\r\n      return p.value.toString()\r\n    }).join(',')\r\n    return `${fx.Function}(${parameter})`;\r\n  }\r\n\r\n  parsedQueryToString(query: ParsedQuery) {\r\n    if (query === undefined) {\r\n      return \"\";\r\n    }\r\n    const parts: string[] = [];\r\n    if (query.Elements !== undefined) {\r\n      parts.push(query.Elements.join(\";\"));\r\n    }\r\n    if (query.Filters !== undefined) {\r\n      parts.push(query.Filters.map(f => `FILTER ${f.NumberMode === '' ? '' : `${f.NumberMode} ${f.Number}`} ${f.Table}${f.Condition?.length > 0 ? ` WHERE ${f.Condition}` : ''}`).join(\";\"))\r\n    }\r\n    if (query.Functions !== undefined) {\r\n      parts.push(query.Functions.map(f => this.functionToString(f)).join(';'))\r\n    }\r\n    return parts.filter(s => s.length > 0).join(\";\");\r\n  }\r\n\r\n  buildQueryParameters(options: DataQueryRequest<openHistorianQuery>): QueryRequest {\r\n    const excludedFlags = this.calculateFlags();\r\n    const excludeNormalFlags = this.flags[\"Normal\"] ?? false;\r\n\r\n    const targets: Target[] = options.targets.filter(t => !(t.hide ?? false) && t.queryType !== 'Annotations').map((t) => {\r\n\r\n      const metadataSelections: MetaDataSelection[] = [];\r\n\r\n      if (t.metadataOptions !== undefined) {\r\n        t.metadataOptions.forEach((m) => {\r\n          if (metadataSelections.find(t => t.tableName === m.Table) !== undefined) {\r\n            metadataSelections.find(t => t.tableName === m.Table)?.fieldNames.push(m.FieldName);\r\n          }\r\n          else {\r\n            metadataSelections.push({ tableName: m.Table, fieldNames: [m.FieldName] })\r\n          }\r\n        })\r\n      }\r\n\r\n      let queryExpression = getTemplateSrv().replace(this.targetToString(t), options.scopedVars);\r\n\r\n      if (t.commandLevel?.DropEmpty ?? false) {\r\n        queryExpression = `${queryExpression}; dropEmptySeries`;\r\n      }\r\n\r\n      if (t.commandLevel?.IncludePeaks ?? false) {\r\n        queryExpression = `${queryExpression}; includePeaks`;\r\n      }\r\n\r\n      if (t.commandLevel?.FullResolution ?? false) {\r\n        queryExpression = `${queryExpression}; fullResolutionQuery`;\r\n      }\r\n\r\n      if (t.commandLevel?.RadialDistribution ?? false) {\r\n        queryExpression = `${queryExpression}; radialDistribution={radius=${(t.commandLevel?.Radius ?? 1.5)}; zoom=${(t.commandLevel?.Zoom ?? 2)}}`;\r\n      }\r\n\r\n      return ({\r\n        refID: t.refId,\r\n        target: queryExpression,\r\n        metadataSelections: metadataSelections,\r\n      })\r\n    });\r\n\r\n    return {\r\n      dataTypeIndex: this.valueTypeIndex,\r\n      range: { from: options.range.from.toISOString(), to: options.range.to.toISOString() },\r\n      interval: options.interval,\r\n      targets: targets,\r\n      adhocFilters: [],\r\n      excludedFlags: excludedFlags,\r\n      excludeNormalFlags: excludeNormalFlags,\r\n      maxDataPoints: options.maxDataPoints ?? 1000\r\n    };\r\n  }\r\n\r\n  async query(options: DataQueryRequest<openHistorianQuery>): Promise<DataQueryResponse> {\r\n    const target = options.targets[0];\r\n\r\n    const metaDataTypes = options.targets.map(i => i.metadataOptions).flat();\r\n\r\n    const hasDataQuery = options.targets.some(t => t.queryType !== 'Annotations');\r\n    const hasAnnotationQuery = options.targets.some(t => t.queryType === 'Annotations');;\r\n\r\n    let data: Array<(MutableDataFrame<any> | undefined)> = [];\r\n    let error: DataQueryError = {};\r\n    let syntaxErrors: string[] = [];\r\n\r\n    // Generate query\r\n    if (hasDataQuery) {\r\n      let query: QueryRequest = this.buildQueryParameters(options);\r\n\r\n      // Get Data\r\n      let pointsData: QueryResponse[] = await getBackendSrv().post(this.url + \"/query\", query);\r\n\r\n      const tags = this.timeSeriesDefinitions;\r\n\r\n      const transposeFrame = new MutableDataFrame({\r\n        refId: target.refId,\r\n        fields: tags.map((s, i) => ({\r\n          name: s,\r\n          type: (i < (tags.length - 1) ? FieldType.number : FieldType.time)\r\n        })),\r\n      });\r\n\r\n      // Add metadata fields\r\n      const frames = pointsData.map((d) => {\r\n        // Cumulate any reported syntax errors\r\n        if (d.syntaxError) {\r\n          syntaxErrors.push(d.syntaxError);\r\n        }\r\n\r\n        const metaData: string[] = Object.keys(d.metadata);\r\n\r\n        if (options.targets.find(item => item.refId === d.refID)?.transpose ?? false) {\r\n          const row: { [k: string]: any } = {};\r\n          tags.forEach((t, i) => { row[t] = d.datapoints[0][i] });\r\n          metaData.forEach((m) => {\r\n            if (!transposeFrame.fields.map(f => f.name).includes(m)) {\r\n              transposeFrame.addField({ name: m, type: FieldType.other })\r\n            }\r\n            row[m] = d.metadata[m];\r\n          })\r\n\r\n          transposeFrame.add(row);\r\n          return undefined;\r\n        }\r\n        else {\r\n\r\n          const frame = new MutableDataFrame({\r\n            refId: target.refId,\r\n            fields: metaData.concat(tags).map((s, i) => ({\r\n              name: s,\r\n              type: (i < metaData.length ? this.metaDataDataType(metaDataTypes.find(m => m.FieldName === metaData[i] || `${m.Table}.${m.FieldName}` === metaData[i])?.Type ?? \"\")\r\n                : (i < (metaData.length + tags.length - 1)\r\n                  ? FieldType.number : FieldType.time))\r\n            })),\r\n          });\r\n\r\n          frame.refId = d.refID;\r\n          frame.name = d.target;\r\n\r\n          d.datapoints.forEach((pt) => {\r\n            const row: { [k: string]: any } = {};\r\n            tags.forEach((t, i) => { row[t] = pt[i] });\r\n            metaData.forEach((m) => { row[m] = d.metadata[m] })\r\n            frame.add(row);\r\n          })\r\n\r\n          return frame;\r\n        }\r\n      })\r\n\r\n      if (options.targets.some(t => t.transpose)) {\r\n        frames.push(transposeFrame);\r\n      }\r\n      data = frames.filter(f => f !== undefined);\r\n    }\r\n    if (hasAnnotationQuery) {\r\n      data.push(await this.queryAnnotations(options))\r\n    }\r\n\r\n    if (syntaxErrors.length > 0) {\r\n      error = {\r\n        message: syntaxErrors.join('\\n\\n')\r\n      }\r\n    }\r\n\r\n    return { data, error };\r\n  }\r\n\r\n  async testDatasource() {\r\n    return await getBackendSrv().get(this.url + \"/\")\r\n      .then(() => ({\r\n        status: \"success\",\r\n        message: \"Data source is working\",\r\n        title: \"Success\",\r\n      }), () => ({\r\n        status: \"error\",\r\n        message: \"Data source is not working\",\r\n        title: \"Error\",\r\n      }))\r\n  }\r\n\r\n  metaDataDataType(type: string) {\r\n    if (type === 'Int16') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Int32') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Int64') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'UInt16') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'UInt32') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'UInt64') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'IntPtr') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'UIntPtr') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Boolean') {\r\n      return FieldType.boolean;\r\n    }\r\n    if (type === 'Byte') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'SByte') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Char') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Decimal') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Double') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'Single') {\r\n      return FieldType.number;\r\n    }\r\n    if (type === 'String') {\r\n      return FieldType.string;\r\n    }\r\n    if (type === 'Guid') {\r\n      return FieldType.string;\r\n    }\r\n\r\n    return FieldType.other;\r\n\r\n  }\r\n  async queryAnnotations(options: DataQueryRequest<openHistorianQuery>): Promise<MutableDataFrame<any>> {\r\n\r\n    const queyText = options.targets\r\n      .map((t) => getTemplateSrv().replace(t.queryText, options.scopedVars))\r\n      .join(';');\r\n\r\n    const annotationQuery = {\r\n      range: options.range,\r\n      annotationQuery: queyText,\r\n      rangeRaw: options.rangeRaw\r\n    };\r\n\r\n    const data = await getBackendSrv().post(this.url + '/annotations', annotationQuery);\r\n    if (data.length > 500) {\r\n      throw Error(`There are ${data.length} annotations. Grafana can not display more than 500.`)\r\n    }\r\n    const frame = new MutableDataFrame({\r\n      refId: options.targets[0].refId,\r\n      fields: [\r\n        { name: \"time\", type: FieldType.time },\r\n        { name: \"timeEnd\", type: FieldType.time },\r\n        { name: \"title\", type: FieldType.string },\r\n        { name: \"text\", type: FieldType.string },\r\n        { name: \"tags\", type: FieldType.string },\r\n      ],\r\n    });\r\n    data.forEach((a: any) => {\r\n      frame.add(\r\n        {\r\n          \"time\": a[\"time\"],\r\n          \"timeEnd\": a[\"endTime\"],\r\n          \"title\": a[\"title\"],\r\n          \"text\": a[\"text\"],\r\n          \"tags\": a[\"tags\"]\r\n        })\r\n    })\r\n    return frame;\r\n  }\r\n}\r\n\r\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./config-editor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./config-editor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import React from 'react';\r\nimport { InlineField, AsyncMultiSelect, Select, Input, InlineFieldRow, Collapse, FieldSet, IconButton, Card, InlineLabel, Button } from '@grafana/ui';\r\nimport { SelectableValue } from '@grafana/data';\r\nimport { DataSource } from '../datasource';\r\nimport { FilterQuery, FunctionDescription, FunctionQuery, ParameterType, ParsedQuery, QueryBase } from '../types';\r\nimport \"../css/query-editor.css\";\r\nimport { getBackendSrv } from \"@grafana/runtime\";\r\nimport _ from 'lodash';\r\n\r\ninterface Props { onChange: (value: QueryBase) => void, query: QueryBase, datasource: DataSource, includeFunctions?: boolean }\r\n\r\nexport const QueryEditorWizard = (props: Props) => {\r\n  const [elements, setElements] = React.useState<string[]>(props.query.parsedQuery?.Elements ?? []);\r\n  const [functions, setFunctions] = React.useState<FunctionQuery[]>(props.query.parsedQuery?.Functions ?? []);\r\n  const [availableFunctions, setAvailableFunctions] = React.useState<FunctionDescription[]>([]);\r\n  const [tableOptions, setTableOptions] = React.useState<string[]>([]);\r\n  const [filters, setFilters] = React.useState<FilterQuery[]>(props.query.parsedQuery?.Filters ?? []);\r\n\r\n  React.useEffect(() => {\r\n    if (!(props.includeFunctions ?? true)) {\r\n      setAvailableFunctions([]);\r\n      return;\r\n    }\r\n\r\n    getBackendSrv().post(props.datasource.url + \"/GetValueTypeFunctions\", {\r\n      dataTypeIndex: props.datasource.valueTypeIndex,\r\n      expression: \"\"\r\n    }).then((d) => {\r\n      setAvailableFunctions(d);\r\n    });\r\n  }, [props.datasource.url, props.includeFunctions, props.datasource.valueTypeIndex])\r\n\r\n  React.useEffect(() => {\r\n    getBackendSrv().post(props.datasource.url + \"/GetValueTypeTables\", { dataTypeIndex: props.datasource.valueTypeIndex, expression: \"\" })\r\n      .then((d: string[]) => { setTableOptions(d); })\r\n  }, [props.datasource.url, props.datasource.valueTypeIndex])\r\n\r\n\r\n  function onElementChange(e: string[], fx: string | undefined, filter: boolean) {\r\n    setElements(e);\r\n    if (fx !== undefined) {\r\n      setFunctions(f => {\r\n        let u = _.clone(f); u.push({\r\n          Function: fx,\r\n          Parameters: availableFunctions.find(f => f.name === fx)?.parameters.map(p => ({ type: p, value: p.type.includes(\"IAsyncEnumerable\") ? { Elements: [], Functions: [], Filters: [] } : p.default } as ParameterType)) ?? [],\r\n        }); return u;\r\n      })\r\n    }\r\n    const u = { ...props.query };\r\n    if (u.parsedQuery === undefined) {\r\n      u.parsedQuery = { Elements: [], Functions: [], Filters: [] }\r\n    }\r\n    u.parsedQuery.Elements = e;\r\n    if (filter) {\r\n      u.parsedQuery.Filters.push({ Table: props.datasource.metadataTableName, Condition: '', Number: 10, NumberMode: 'TOP' });\r\n      setFilters(u.parsedQuery.Filters);\r\n    }\r\n    props.onChange(u);\r\n  }\r\n\r\n  function onFilterChange(f: FilterQuery | undefined, index: number) {\r\n    const u = { ...props.query };\r\n    if (u.parsedQuery === undefined) {\r\n      u.parsedQuery = { Elements: [], Functions: [], Filters: [] }\r\n    }\r\n    if (f === undefined) {\r\n      u.parsedQuery.Filters.splice(index, 1);\r\n    }\r\n    else {\r\n      u.parsedQuery.Filters[index] = f;\r\n    }\r\n    setFilters(u.parsedQuery.Filters);\r\n    props.onChange(u);\r\n  }\r\n\r\n  function onFunctionChange(f: FunctionQuery | undefined, index: number) {\r\n    const u = { ...props.query };\r\n    if (u.parsedQuery === undefined) {\r\n      u.parsedQuery = { Elements: [], Functions: [], Filters: [] }\r\n    }\r\n    if (f === undefined) {\r\n      u.parsedQuery.Functions.splice(index, 1);\r\n    }\r\n    else {\r\n      u.parsedQuery.Functions[index] = f;\r\n    }\r\n    setFunctions(u.parsedQuery.Functions);\r\n    props.onChange(u);\r\n  }\r\n\r\n\r\n  return <div style={{ width: '100%' }}>\r\n    <ElementQuery\r\n      datasource={props.datasource}\r\n      elements={elements} update={onElementChange}\r\n      availableFunctions={availableFunctions}\r\n    />\r\n    {functions?.map((f, i) => <FunctionQueryUI key={f.Function}\r\n      update={(f) => onFunctionChange(f, i)}\r\n      func={f} availableFunctions={availableFunctions}\r\n      availableTables={tableOptions}\r\n      datasource={props.datasource}\r\n    />)}\r\n    {filters?.map((f, i) => <FilterQueryUI\r\n      key={i}\r\n      availableTables={tableOptions}\r\n      update={(f) => onFilterChange(f, i)} filter={f} />)}\r\n  </div>;\r\n}\r\n\r\ninterface ElementQueryProps {\r\n  datasource: DataSource,\r\n  update: (elements: string[], fx: string | undefined, filter: boolean) => void,\r\n  elements: string[],\r\n  availableFunctions: FunctionDescription[]\r\n}\r\n\r\nexport const ElementQuery = (props: ElementQueryProps) => {\r\n  const selectedOptions = React.useMemo(() => props.elements.map((d) => ({ value: d, label: d })), [props.elements]);\r\n\r\n  const loadOptions = async (inputValue: string) => {\r\n    const d = await getBackendSrv().post(props.datasource.url + \"/Search\", {\r\n      dataTypeIndex: props.datasource.valueTypeIndex,\r\n      expression: inputValue\r\n    })\r\n    const r: any[] = d.map((p: string) => ({ value: p, label: p }));\r\n    if ('filter'.includes(inputValue.toLocaleLowerCase())) {\r\n      r.push({ value: 'FILTER', label: 'FILTER' });\r\n    }\r\n    props.availableFunctions.filter((f) => f.name.toLocaleLowerCase().includes(inputValue.toLocaleLowerCase()) ||\r\n      (f.aliases?.some((a) => a.toLocaleLowerCase().includes(inputValue.toLocaleLowerCase())) ?? false))\r\n      .forEach((f) => {\r\n        r.push({ label: f.name, value: 'fx-' + f.name })\r\n      })\r\n    return r;\r\n  };\r\n\r\n  const onElementsChange = (selected: Array<SelectableValue<string>>) => {\r\n    const selectedValues = selected.map((item) => item.value) as string[];\r\n    let hasFilter = selectedValues.includes('FILTER');\r\n    const fx = selectedValues.filter(s => s.startsWith('fx-'));\r\n    let func: string | undefined = undefined;\r\n    if (fx.length > 0) {\r\n      func = fx[0].substring(3);\r\n    }\r\n\r\n    props.update(selectedValues.filter(i => i !== 'FILTER' && !i.startsWith('fx-')), func, hasFilter);\r\n  };\r\n\r\n  return <InlineFieldRow>\r\n    <InlineField label=\"Query\" labelWidth={'auto'}>\r\n      <AsyncMultiSelect\r\n        loadOptions={loadOptions}\r\n        defaultOptions={true}\r\n        value={selectedOptions}\r\n        onChange={onElementsChange}\r\n        isSearchable\r\n      />\r\n    </InlineField>\r\n    <Button size={'sm'} variant='secondary' fill='solid' icon='plus-circle' style={{ marginTop: 4, marginLeft: 5 }}\r\n      onClick={() => props.update(selectedOptions.map(d => d.value), undefined, true)}>\r\n      Filter\r\n    </Button>\r\n    <Button size={'sm'} variant='secondary' fill='solid' icon='plus-circle' style={{ marginTop: 4, marginLeft: 5 }}\r\n      onClick={() => props.update(selectedOptions.map(d => d.value), props.availableFunctions.find(() => true)?.name, false)}>\r\n      Function\r\n    </Button>\r\n  </InlineFieldRow>\r\n}\r\n\r\ninterface FilterQueryProps {\r\n  update: (filter: FilterQuery | undefined) => void,\r\n  filter: FilterQuery,\r\n  availableTables: string[]\r\n}\r\n\r\nconst FilterQueryUI = (props: FilterQueryProps) => {\r\n  const numberOptions = [\r\n    { label: 'TOP', value: 'TOP' },\r\n    { label: 'ALL', value: '' }]\r\n\r\n  const tableOptions: Array<SelectableValue<string>> = React.useMemo(() => props.availableTables.map((t) => ({ label: t, value: t })), [props.availableTables])\r\n  const selectedOptions: Array<SelectableValue<string>> = React.useMemo(() => props.filter.Table === '' ? [] : [{ value: props.filter.Table, label: props.filter.Table }], [props.filter.Table]);\r\n\r\n  function onNumberModeChange(val: SelectableValue<string>) {\r\n    props.update({ ...props.filter, NumberMode: val.value as ('TOP' | '') })\r\n  }\r\n\r\n  function OnNumberChange(val: any) {\r\n    const n = val.target.value;\r\n    props.update({ ...props.filter, Number: parseInt(n, 10) })\r\n  }\r\n\r\n  function onTableChange(t: SelectableValue<string>) {\r\n    props.update({ ...props.filter, Table: t.value ?? '' })\r\n  }\r\n\r\n  function onConditionChange(val: any) {\r\n    props.update({ ...props.filter, Condition: val.target.value })\r\n  }\r\n\r\n  return <FieldSet>\r\n    <InlineFieldRow>\r\n      <IconButton name={'trash-alt'} size='xl' iconType='default' variant='destructive' style={{ marginTop: 4, marginRight: 0 }} onClick={() => props.update(undefined)} />\r\n      <InlineField label={\r\n        <InlineLabel style={{ flexShrink: 1 }}><IconButton name={'filter'} size='md' iconType='default' variant='secondary' style={{ marginLeft: -2 }} />FILTER</InlineLabel>\r\n      } labelWidth={'auto'}>\r\n        <Select\r\n          value={props.filter.NumberMode}\r\n          options={numberOptions}\r\n          onChange={onNumberModeChange}\r\n        />\r\n      </InlineField>\r\n      {props.filter.NumberMode !== '' ? <Input type={'number'}\r\n        min={0} max={99999}\r\n        value={props.filter.Number}\r\n        onChange={OnNumberChange}\r\n        width={10}\r\n      /> : null}\r\n      <InlineField label=\"\" labelWidth={1} transparent={true} style={{ marginLeft: -16 }}>\r\n        <Select\r\n          value={selectedOptions}\r\n          options={tableOptions}\r\n          isLoading={tableOptions.length === 0}\r\n          onChange={onTableChange}\r\n          isSearchable\r\n          width={'auto'}\r\n        />\r\n      </InlineField>\r\n    </InlineFieldRow>\r\n    <InlineFieldRow>\r\n      <InlineField label=\"WHERE\" grow>\r\n        <Input\r\n          value={props.filter.Condition}\r\n          onChange={onConditionChange}\r\n          placeholder=\"SignalType = 'FREQ'\"\r\n        />\r\n      </InlineField>\r\n    </InlineFieldRow>\r\n  </FieldSet>\r\n}\r\n\r\ninterface FunctionQueryProps {\r\n  update: (func: FunctionQuery | undefined) => void,\r\n  func: FunctionQuery,\r\n  availableFunctions: FunctionDescription[],\r\n  availableTables: string[],\r\n  datasource: DataSource\r\n}\r\n\r\n\r\nconst FunctionQueryUI = (props: FunctionQueryProps) => {\r\n  const [isOpen, setIsOpen] = React.useState<boolean>(true);\r\n  const fxDescription = React.useMemo(() => props.availableFunctions.find(f => f.name === props.func.Function), [props.func, props.availableFunctions]);\r\n  const fxOptions = React.useMemo(() => props.availableFunctions.map((f) => ({ value: f.name, label: f.name })), [props.availableFunctions])\r\n\r\n  function onFunctionChange(val: SelectableValue<string>) {\r\n    const fx = props.availableFunctions.find(f => f.name === val.value)\r\n    if (fx === null) {\r\n      return\r\n    }\r\n    const p = fx?.parameters.map((p) => {\r\n      const param: ParameterType = { type: p, value: p.type.includes(\"IAsyncEnumerable\") ? { Elements: [], Functions: [], Filters: [] } : p.default };\r\n      return param;\r\n    }) ?? [];\r\n    props.update({\r\n      Function: val.value ?? 'AbsoluteValue', Parameters: p\r\n    });\r\n\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function onValueChange(val: ParameterType, index: number) {\r\n    const u = _.cloneDeep(props.func);\r\n    u.Parameters[index] = val;\r\n    props.update(u);\r\n  }\r\n\r\n  return <Collapse collapsible={true} label={\r\n    <InlineFieldRow>\r\n      <IconButton name={'trash-alt'} size='xl' iconType='default' variant='destructive' style={{ marginTop: 4, marginRight: 6 }} onClick={() => props.update(undefined)} />\r\n      <span style={{ marginTop: 5, marginRight: 4, fontSize: 'small' }}>ƒ(x)</span>\r\n      <Select\r\n        value={props.func.Function}\r\n        options={fxOptions}\r\n        onChange={onFunctionChange}\r\n        isSearchable\r\n        tabSelectsValue={true}\r\n        width={'auto'}\r\n      />\r\n      <div style={{ marginTop: 5, marginLeft: 10 }}>{getCategory(fxDescription)} {fxDescription?.returnType.toLowerCase()}{getGroupOperation(fxDescription)} function{extractGroupOperations(fxDescription)}.</div>\r\n    </InlineFieldRow>\r\n  } isOpen={isOpen} onToggle={() => setIsOpen((x) => !x)}>\r\n    <p>{fxDescription?.description}</p>\r\n    <ul>\r\n\r\n      {props.func.Parameters.map((p, i) => <li key={p.type.name}>\r\n        <ParameterUI update={(val) => onValueChange(val, i)}\r\n          param={p}\r\n          availableFunctions={props.availableFunctions}\r\n          availableTables={props.availableTables}\r\n          datasource={props.datasource} />\r\n      </li>)}\r\n\r\n    </ul>\r\n  </Collapse>;\r\n}\r\n\r\ninterface ParameterQueryProps {\r\n  update: (p: ParameterType) => void,\r\n  param: ParameterType,\r\n  availableFunctions: FunctionDescription[],\r\n  availableTables: string[],\r\n  datasource: DataSource,\r\n}\r\nconst ParameterUI = (props: ParameterQueryProps) => {\r\n\r\n  const AngleOptions: Array<SelectableValue<string>> = [{ value: 'Radians', label: 'Radians' }, { value: 'Degrees', label: 'Degrees' }\r\n    , { value: 'Grads', label: 'Grads' }, { value: 'ArcMinutes', label: 'ArcMinutes' },\r\n  { value: 'ArcSeconds', label: 'ArcSeconds' }, { value: 'AngularMil', label: 'AngularMil' }];\r\n\r\n  const TimeOption = [\r\n    { value: 'Seconds', label: 'Seconds' },\r\n    { value: 'Nanoseconds', label: 'Nanoseconds' },\r\n    { value: 'Microseconds', label: 'Microseconds' },\r\n    { value: 'Milliseconds', label: 'Milliseconds' },\r\n    { value: 'Minutes', label: 'Minutes' },\r\n    { value: 'Hours', label: 'Hours' },\r\n    { value: 'Days', label: 'Days' },\r\n    { value: 'Weeks', label: 'Weeks' },\r\n    { value: 'Ke', label: 'Ke (traditional Chinese)' },\r\n    { value: 'Ticks', label: 'Ticks' },\r\n    { value: 'PlanckTime', label: 'PlanckTime' },\r\n    { value: 'AtomicUnitsOfTime', label: 'AtomicUnitsOfTime' }];\r\n\r\n  const BooleanOption = [{ value: '1', label: 'True' }, { value: '0', label: 'False' },]\r\n\r\n\r\n  function onElementChange(e: string[], fx: string | undefined, filter: boolean) {\r\n    let u = _.cloneDeep(props.param) as ParameterType;\r\n    if (u === undefined) {\r\n      u = { type: props.param.type, value: { Elements: [], Functions: [], Filters: [] } }\r\n    }\r\n    if (fx !== undefined) {\r\n      const fxParsed = props.availableFunctions.find(f => f.name === fx)\r\n      if (fxParsed === null) {\r\n        return\r\n      }\r\n      const p = fxParsed?.parameters.map((p) => {\r\n        const param: ParameterType = { type: p, value: p.type.includes(\"IAsyncEnumerable\") ? { Elements: [], Functions: [], Filters: [] } : p.default };\r\n        return param;\r\n      }) ?? [];\r\n\r\n      (u.value as ParsedQuery)?.Functions.push({\r\n        Function: fx,\r\n        Parameters: p,\r\n      })\r\n    }\r\n\r\n    (u.value as ParsedQuery).Elements = e;\r\n    if (filter) {\r\n      (u.value as ParsedQuery)?.Filters.push({ Table: props.datasource.metadataTableName, Condition: '', Number: 10, NumberMode: 'TOP' });\r\n    }\r\n    props.update(u);\r\n  }\r\n\r\n  function onFilterChange(f: FilterQuery | undefined, index: number) {\r\n    let u = _.cloneDeep(props.param) as ParameterType;\r\n    if (u === undefined) {\r\n      u = { type: props.param.type, value: { Elements: [], Functions: [], Filters: [] } }\r\n    }\r\n    if (f === undefined) {\r\n      (u.value as ParsedQuery)?.Filters.splice(index, 1)\r\n    } else {\r\n      (u.value as ParsedQuery).Filters[index] = f;\r\n    }\r\n    props.update(u);\r\n  }\r\n\r\n  function onFunctionChange(f: FunctionQuery | undefined, index: number) {\r\n    let u = _.cloneDeep(props.param) as ParameterType;\r\n    if (u === undefined) {\r\n      u = { type: props.param.type, value: { Elements: [], Functions: [], Filters: [] } }\r\n    }\r\n    if (f === undefined) {\r\n      (u.value as ParsedQuery)?.Functions.splice(index, 1);\r\n    } else {\r\n      (u.value as ParsedQuery).Functions[index] = f;\r\n    }\r\n    props.update(u);\r\n  }\r\n\r\n  function onStringChange(val: any) {\r\n    props.update({ type: props.param.type, value: val.target.value })\r\n  }\r\n\r\n  function onSelectChange(val: SelectableValue<string>) {\r\n    props.update({ type: props.param.type, value: val.value as string })\r\n  }\r\n\r\n  return <Card>\r\n    <Card.Heading>{props.param.type.name} ({props.param.type.required ? 'required' : 'optional'})</Card.Heading>\r\n    <Card.Description>\r\n      <>\r\n        <p>{props.param.type.description} ({props.param.type.type}{!props.param.type.required && props.param.type.default?.length > 0 ? `: default = ${props.param.type.default}` : ''})</p>\r\n\r\n        {props.param.type.type.includes(\"IAsyncEnumerable\") ? <>\r\n          <ElementQuery\r\n            datasource={props.datasource}\r\n            elements={(props.param?.value as ParsedQuery)?.Elements ?? []}\r\n            update={onElementChange}\r\n            availableFunctions={props.availableFunctions}\r\n          />\r\n          {(props.param?.value as ParsedQuery)?.Functions?.map((f, i) => <FunctionQueryUI key={f.Function}\r\n            update={(f) => onFunctionChange(f, i)}\r\n            func={f} availableFunctions={props.availableFunctions}\r\n            availableTables={props.availableTables}\r\n            datasource={props.datasource}\r\n          />)}\r\n          {(props.param?.value as ParsedQuery)?.Filters?.map((f, i) => <FilterQueryUI\r\n            key={i}\r\n            availableTables={props.availableTables}\r\n            update={(f) => onFilterChange(f, i)} filter={f} />)}\r\n        </> : null}\r\n        {props.param.type.type === 'Double' ? <Input type={'number'}\r\n          value={(props.param?.value as string) ?? '1.0'}\r\n          onChange={onStringChange}\r\n          width={20}\r\n        /> : null}\r\n        {props.param.type.type === 'String' ? <Input type={'text'}\r\n          value={(props.param?.value as string) ?? ''}\r\n          onChange={onStringChange}\r\n          width={20}\r\n        /> : null}\r\n        {props.param.type.type === 'Int32' ? <Input type={'number'}\r\n          min={0} max={99999}\r\n          value={(props.param?.value as string) ?? '1'}\r\n          onChange={onStringChange}\r\n          width={20}\r\n        /> : null}\r\n        {props.param.type.type === 'AngleUnit' ? <Select\r\n          value={(props.param?.value as string) ?? 'Degrees'}\r\n          options={AngleOptions}\r\n          onChange={onSelectChange}\r\n          isSearchable\r\n        /> : null}\r\n        {props.param.type.type === 'TargetTimeUnit' ? <Select\r\n          value={(props.param?.value as string) ?? 'Seconds'}\r\n          options={TimeOption}\r\n          onChange={onSelectChange}\r\n          isSearchable\r\n        /> : null}\r\n        {props.param.type.type === 'Boolean' ? <Select\r\n          value={(props.param?.value as string) ?? '1'}\r\n          options={BooleanOption}\r\n          onChange={onSelectChange}\r\n          isSearchable\r\n        /> : null}\r\n      </>\r\n    </Card.Description>\r\n  </Card>;\r\n};\r\n\r\nconst getCategory = (fxDescription: FunctionDescription | undefined): string => {\r\n  return (fxDescription?.category ?? 'BuiltIn') === 'BuiltIn' ? 'Built-in' : 'Custom';\r\n}\r\n\r\nconst getGroupOperation = (fxDescription: FunctionDescription | undefined): string => {\r\n  const functionName = fxDescription?.name ?? '';\r\n\r\n  if (functionName.startsWith('Slice')) {\r\n    return ' slice';\r\n  } else if (functionName.startsWith('Set')) {\r\n    return ' set';\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nconst extractGroupOperations = (fxDescription: FunctionDescription | undefined): string => {\r\n  const allowedGroupOperations = fxDescription?.allowedGroupOperations.split(',').map(operation => operation.trim()) ?? [];\r\n  let publishedGroupOperations = fxDescription?.publishedGroupOperations.split(',').map(operation => operation.trim()) ?? [];\r\n\r\n  if (publishedGroupOperations.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const allowedGroupOperationsSet = new Set(allowedGroupOperations);\r\n  let functionName = fxDescription?.name ?? '';\r\n\r\n  // If published group operations are not a subset of allowed group operations,\r\n  // use the allowed group operations as the published group operations\r\n  if (!publishedGroupOperations.every(element => allowedGroupOperationsSet.has(element))) {\r\n    functionName = allowedGroupOperations[0];\r\n    publishedGroupOperations = allowedGroupOperations;\r\n  }\r\n\r\n  const publishedGroupOperationsSet = new Set(publishedGroupOperations);\r\n  const supportedGroupOperations: string[] = [];\r\n  let supportsNonGroupedOperation = false;\r\n\r\n  if (functionName.startsWith('Slice')) {\r\n    // If slice-type function is selected, show possible support for 'None' and 'Set' group operations\r\n    if (publishedGroupOperationsSet.has('None')) {\r\n      supportsNonGroupedOperation = true;\r\n    }\r\n\r\n    if (publishedGroupOperationsSet.has('Set')) {\r\n      supportedGroupOperations.push('set');\r\n    }\r\n  } else if (functionName.startsWith('Set')) {\r\n    // If set-type function is selected, show possible support for 'None' and 'Slice' group operations\r\n    if (publishedGroupOperationsSet.has('None')) {\r\n      supportsNonGroupedOperation = true;\r\n    }\r\n\r\n    if (publishedGroupOperationsSet.has('Slice')) {\r\n      supportedGroupOperations.push('slice');\r\n    }\r\n  }\r\n  else {\r\n    // If standard non-grouped function is selected, show possible support for 'Slice' and 'Set' group operations\r\n    if (publishedGroupOperationsSet.has('Slice')) {\r\n      supportedGroupOperations.push('slice');\r\n    }\r\n\r\n    if (publishedGroupOperationsSet.has('Set')) {\r\n      supportedGroupOperations.push('set');\r\n    }\r\n  }\r\n\r\n  if (!supportsNonGroupedOperation && supportedGroupOperations.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const groupOperationsDisplay: string[] = [];\r\n\r\n  if (supportsNonGroupedOperation) {\r\n    groupOperationsDisplay.push('standard non-grouped');\r\n  }\r\n\r\n  if (supportedGroupOperations.length > 0) {\r\n    if (groupOperationsDisplay.length > 0) {\r\n      groupOperationsDisplay.push(' and ');\r\n    }\r\n\r\n    groupOperationsDisplay.push(supportedGroupOperations.join(' and '));\r\n    groupOperationsDisplay.push(' group');\r\n\r\n    if (supportedGroupOperations.length > 1) {\r\n      groupOperationsDisplay.push('ed');\r\n    }\r\n  }\r\n\r\n  groupOperationsDisplay.push(' operation');\r\n\r\n  if ((supportsNonGroupedOperation ? 1 : 0) + supportedGroupOperations.length > 1) {\r\n    groupOperationsDisplay.push('s');\r\n  }\r\n\r\n  return `, also supports ${groupOperationsDisplay.join('')}`;\r\n}\r\n","import React from 'react';\r\nimport { InlineField, InlineFieldRow, Select, IconButton, Button, FieldSet } from '@grafana/ui';\r\nimport { SelectableValue } from '@grafana/data';\r\nimport { DataSource } from '../datasource';\r\nimport { FieldDescription, MetaDataField } from '../types';\r\nimport \"../css/query-editor.css\";\r\nimport { getBackendSrv } from \"@grafana/runtime\";\r\nimport _ from 'lodash';\r\n\r\ninterface MetaDataProps { datasource: DataSource, onChange: (value: MetaDataField[]) => void, query: MetaDataField[] }\r\n\r\nexport const MetaDataSelector = (props: MetaDataProps) => {\r\n  const [tableOptions, setTableOptions] = React.useState<Array<SelectableValue<string>>>([]);\r\n\r\n  React.useEffect(() => {\r\n    getBackendSrv().post(props.datasource.url + \"/GetValueTypeTables\", { dataTypeIndex: props.datasource.valueTypeIndex, expression: \"\" })\r\n      .then((d: string[]) => { setTableOptions(d?.map((t) => ({ value: t, label: t })) ?? []); })\r\n  }, [props.datasource.valueTypeIndex, props.datasource.url])\r\n\r\n  const onRemoveField = (index: number) => {\r\n    let u = [...props.query];\r\n    u.splice(index, 1);\r\n    props.onChange(u);\r\n  };\r\n\r\n  const onAddFld = () => {\r\n    if (props.query === undefined) {\r\n      props.onChange([{ Table: props.datasource.metadataTableName, FieldName: \"\", Type: \"\" }]);\r\n    }\r\n    props.onChange([...props.query, { Table: props.datasource.metadataTableName, FieldName: \"\", Type: \"\" }]);\r\n  };\r\n\r\n  const onUpdateFld = (fld: MetaDataField, index: number) => {\r\n\r\n    let u = [...props.query];\r\n    u[index] = fld;\r\n    props.onChange(u);\r\n  };\r\n\r\n  return (\r\n    <FieldSet>\r\n      {props.query?.map((q, i) => <MetaDataFieldSelector\r\n        Field={q} key={i} Remove={() => onRemoveField(i)} Update={(fld) => onUpdateFld(fld, i)}\r\n        TableOptions={tableOptions} Datasource={props.datasource} />)}\r\n      <InlineFieldRow>\r\n        <InlineField>\r\n          <Button size='md' icon={'plus-circle'} variant='secondary' onClick={() => onAddFld()}>Add Metadata</Button>\r\n        </InlineField>\r\n      </InlineFieldRow>\r\n    </FieldSet>)\r\n}\r\n\r\ninterface MetaDataFieldSelectorProps {\r\n  Field: MetaDataField,\r\n  Remove: () => void,\r\n  Update: (fld: MetaDataField) => void,\r\n  TableOptions: Array<SelectableValue<string>>,\r\n  Datasource: DataSource\r\n}\r\n\r\nconst MetaDataFieldSelector = (props: MetaDataFieldSelectorProps) => {\r\n  const [fields, setFields] = React.useState<MetaDataField[]>([])\r\n  const fieldOptions: Array<SelectableValue<string>> = React.useMemo(() => fields.map((f) => ({ value: f.FieldName, label: f.FieldName })), [fields]);\r\n\r\n  React.useEffect(() => {\r\n    setFields([]);\r\n    if (props.Field.Table === undefined) {\r\n      return;\r\n    }\r\n    getBackendSrv().post(props.Datasource.url + \"/GetValueTypeTableFields\", {\r\n      dataTypeIndex: props.Datasource.valueTypeIndex,\r\n      expression: props.Field.Table\r\n    }).then((d: FieldDescription[]) => setFields(d?.map((fld) => ({ FieldName: fld.name, Table: props.Field.Table, Type: fld.type })) ?? []))\r\n  }, [props.Field.Table, props.Datasource.url, props.Datasource.valueTypeIndex])\r\n\r\n  const updateTable = (val: SelectableValue<string>) => {\r\n    props.Update({ Table: val.value ?? \"\", FieldName: \"\", Type: \"\" })\r\n  };\r\n\r\n  const updateField = (val: SelectableValue<string>) => {\r\n    const fld = fields.find(d => d.FieldName === val.value)\r\n    if (fld === undefined) {\r\n      return;\r\n    }\r\n    props.Update(fld)\r\n  };\r\n\r\n  return <InlineFieldRow>\r\n    <InlineField label=\"Table\" labelWidth={12}>\r\n      <Select\r\n        value={props.Field.Table}\r\n        options={props.TableOptions}\r\n        onChange={updateTable}\r\n        isLoading={props.TableOptions.length === 0}\r\n        invalid={(props.Field?.Table?.length ?? 0) === 0}\r\n      />\r\n    </InlineField>\r\n    <InlineField label=\"Field\" labelWidth={12}>\r\n      <Select\r\n        value={props.Field?.FieldName}\r\n        options={fieldOptions}\r\n        onChange={updateField}\r\n        isLoading={fieldOptions.length === 0}\r\n        invalid={(props.Field?.FieldName?.length ?? 0) === 0}\r\n        disabled={(props.Field?.Table?.length ?? 0) === 0}\r\n      />\r\n    </InlineField>\r\n    <InlineField>\r\n      <IconButton name={'trash-alt'} size='xl' iconType='default' variant='destructive' style={{ marginTop: 4, marginLeft: 4 }} onClick={() => props.Remove()} />\r\n    </InlineField>\r\n  </InlineFieldRow>\r\n\r\n}\r\n","import React from 'react';\r\nimport { FieldSet, InlineField, TextArea } from '@grafana/ui';\r\nimport \"../css/query-editor.css\";\r\n\r\n\r\ninterface TextQueryProps { onChange: (value: string) => void, query: string }\r\n\r\nexport const TextQuery = (props: TextQueryProps) => {\r\n  return <FieldSet>\r\n    <InlineField label=\"Query Editor\" labelWidth={12} grow={true} shrink={true}>\r\n      <TextArea\r\n        value={props.query}\r\n        onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) => props.onChange(evt.target.value)}\r\n        rows={10}\r\n        width={150}\r\n      />\r\n    </InlineField>\r\n  </FieldSet>;\r\n}\r\n","import React from 'react';\r\nimport { FieldSet, InlineField, InlineFieldRow, InlineSwitch, Input } from '@grafana/ui';\r\nimport \"../css/query-editor.css\";\r\nimport { CommandLevelFlags } from '../types';\r\n\r\n\r\ninterface CommandLevelSelectorProps { onChange: (value: CommandLevelFlags) => void, query?: CommandLevelFlags }\r\n\r\nexport const CommandLevelSelector = (props: CommandLevelSelectorProps) => {\r\n\r\n  const getInitialUpdatedValue = (query: CommandLevelFlags | undefined): CommandLevelFlags => {\r\n    return query ?? {\r\n      DropEmpty: false,\r\n      IncludePeaks: false,\r\n      FullResolution: false,\r\n      RadialDistribution: false,\r\n      Radius: 1.5,\r\n      Zoom: 2.0\r\n    };\r\n  };\r\n\r\n  const onChange = (event: React.FormEvent<HTMLInputElement>, setting: 'DropEmpty' | 'IncludePeaks' | 'FullResolution' | 'RadialDistribution') => {\r\n    let updated: CommandLevelFlags = getInitialUpdatedValue(props.query);\r\n    updated[setting] = !updated[setting];\r\n    props.onChange(updated);\r\n  };\r\n\r\n  function onRadiusChange(val: any) {\r\n    let updated: CommandLevelFlags = getInitialUpdatedValue(props.query);\r\n    updated.Radius = parseFloat(val.toString());\r\n    props.onChange(updated);\r\n  }\r\n\r\n  function onZoomChange(val: any) {\r\n    let updated: CommandLevelFlags = getInitialUpdatedValue(props.query);\r\n    updated.Zoom = parseFloat(val.toString());\r\n    props.onChange(updated);\r\n  }\r\n\r\n  return <FieldSet>\r\n    <InlineFieldRow>\r\n      <InlineField label={'Drop Empty Series'} labelWidth={24} tooltip={'Requests that series that return no data be removed from the the visualization targets'}>\r\n        <InlineSwitch\r\n          disabled={false}\r\n          value={props.query?.DropEmpty ?? false}\r\n          onChange={(e) => onChange(e, 'DropEmpty')}\r\n        />\r\n      </InlineField>\r\n      <InlineField label={'Include Peaks'} labelWidth={24} tooltip={'Requests that decimated data from query source include both minimum and maximum interval peaks, note that this can reduce query performance.'}>\r\n        <InlineSwitch\r\n          disabled={false}\r\n          value={props.query?.IncludePeaks ?? false}\r\n          onChange={(e) => onChange(e, 'IncludePeaks')}\r\n        />\r\n      </InlineField>\r\n    </InlineFieldRow>\r\n    <InlineFieldRow>\r\n      <InlineField label={'Full Resolution Data'} labelWidth={24} tooltip={'Requests that query source return full resolution data, note that this can reduce query and/or visualization performance.'}>\r\n        <InlineSwitch\r\n          disabled={false}\r\n          value={props.query?.FullResolution ?? false}\r\n          onChange={(e) => onChange(e, 'FullResolution')}\r\n        />\r\n      </InlineField>\r\n      <InlineField label={'Radial Geo Distribution'} labelWidth={24} tooltip={'Requests that overlapping geo-coordinates, i.e., longitude and latitude, when included as selected as metadata, be distributed radially.'}>\r\n        <InlineSwitch\r\n          disabled={false}\r\n          value={props.query?.RadialDistribution ?? false}\r\n          onChange={(e) => onChange(e, 'RadialDistribution')}\r\n        />\r\n      </InlineField>\r\n    </InlineFieldRow>\r\n    {(props.query?.RadialDistribution ?? false) ? <InlineFieldRow>\r\n      <InlineField label={'Radius'}>\r\n        <Input type={'number'}\r\n          value={(props.query?.Radius ?? 1.5).toString()}\r\n          onChange={onRadiusChange}\r\n        />\r\n      </InlineField>\r\n      <InlineField label={'Zoom'}>\r\n        <Input type={'number'}\r\n          value={(props.query?.Zoom ?? 2.0).toString()}\r\n          onChange={onZoomChange}\r\n        />\r\n      </InlineField>\r\n    </InlineFieldRow> : null}\r\n  </FieldSet>;\r\n}\r\n\r\n","import { DataSourcePlugin } from '@grafana/data';\r\nimport { DataSource } from './datasource';\r\nimport { ConfigEditor } from './components/ConfigEditor';\r\nimport { QueryEditor } from './components/QueryEditor';\r\nimport { openHistorianQuery, openHistorianDataSourceOptions } from './types';\r\nimport { VariableQueryEditor } from 'components/VariableQueryEditor';\r\n\r\n\r\nexport const plugin = new DataSourcePlugin<DataSource, openHistorianQuery, openHistorianDataSourceOptions>(DataSource)\r\n  .setConfigEditor(ConfigEditor)\r\n  .setQueryEditor(QueryEditor)\r\n  .setVariableQueryEditor(VariableQueryEditor)\r\n  ;\r\n","import {\r\n  DataSourceHttpSettings,\r\n  FieldSet,\r\n  InlineFieldRow,\r\n  InlineField,\r\n  Switch,\r\n  Tooltip,\r\n  Select,\r\n  Card,\r\n  TagList,\r\n} from \"@grafana/ui\";\r\n\r\nimport React from \"react\";\r\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from \"@grafana/data\";\r\nimport { DataSourceValueType, openHistorianDataSourceOptions } from \"../types\";\r\nimport { DefaultFlags } from \"../js/constants\";\r\nimport \"../css/config-editor.css\";\r\nimport { getBackendSrv } from \"@grafana/runtime\";\r\n\r\ninterface Props\r\n  extends DataSourcePluginOptionsEditorProps<openHistorianDataSourceOptions> { }\r\n\r\nexport function ConfigEditor(props: Props) {\r\n  const { onOptionsChange, options } = props;\r\n  const [dataSourceTypes, setDataSourceTypes] = React.useState<DataSourceValueType[]>([])\r\n  const dataSourceTypeOptions = React.useMemo(() => dataSourceTypes.map(s => ({ value: s.index.toString(), label: s.name })), [dataSourceTypes]);\r\n  const url = React.useMemo(() => (options?.jsonData?.http?.url ?? ''), [options])\r\n  const [isInitialAssignment, setIsInitialAssignment] = React.useState(true);\r\n\r\n  // Fetch data source value types when exiting URL area\r\n  const onBlur = () => {\r\n    if (url.length === 0) {\r\n      return;\r\n    }\r\n\r\n    getBackendSrv().post(url + \"/GetValueTypes\", {})\r\n      .then((d: DataSourceValueType[]) => setDataSourceTypes(d))\r\n      .catch((error) => console.error(\"Error fetching data source types:\", error));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (dataSourceTypeOptions.length < 1) {\r\n      return;\r\n    }\r\n    if (options.jsonData.valueTypeIndex === undefined) {\r\n      onTypeChange(dataSourceTypeOptions[0]);\r\n      return;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dataSourceTypeOptions, options.jsonData])\r\n\r\n  const onHttpChange = (config: DataSourceSettings<openHistorianDataSourceOptions>) => {\r\n    if (url.length === 0 && isInitialAssignment) {\r\n      setIsInitialAssignment(false);\r\n      config.url = '../api/grafana'; // Set the default URL\r\n    }\r\n\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      flags: options.jsonData.flags || {},\r\n      http: config,\r\n    };\r\n\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  const onFlagsChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const input = event.target as HTMLInputElement;\r\n    const { name, checked } = input;\r\n\r\n    let updatedFlags: { [key: string]: boolean } = {};\r\n\r\n    // Select All\r\n    if (name === \"Select All\") {\r\n      const selectAllState = !options.jsonData.flags || !options.jsonData.flags[\"Select All\"];\r\n\r\n      // Set all flags to the selectAllState\r\n      updatedFlags = Object.keys(DefaultFlags).reduce((acc: { [key: string]: boolean }, flag) => {\r\n        acc[flag] = selectAllState;\r\n        return acc;\r\n      }, {} as { [key: string]: boolean });\r\n    } else {\r\n      // If individual flag is toggled, update its value\r\n      updatedFlags = {\r\n        ...options.jsonData.flags,\r\n        [name]: checked,\r\n      };\r\n\r\n      // If any individual flag is unchecked, uncheck the \"Select All\" flag\r\n      if (!checked) {\r\n        updatedFlags[\"Select All\"] = false;\r\n      }\r\n    }\r\n\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      flags: updatedFlags,\r\n    };\r\n\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  const onTypeChange = (val: SelectableValue<string>) => {\r\n    const index: string = (val.value ?? '0').toString();\r\n    const dataSource: DataSourceValueType | undefined = dataSourceTypes.find(d => d.index.toString() === index);\r\n\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      valueTypeIndex: index,\r\n      valueTypeName: dataSource?.name ?? '',\r\n      timeSeriesDefinitions: dataSource?.timeSeriesDefinition?.split(',') ?? [''],\r\n      metadataTableName: dataSource?.metadataTableName ?? '',\r\n    };\r\n\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  return (\r\n    <FieldSet onBlur={onBlur}>\r\n      <DataSourceHttpSettings\r\n        defaultUrl={'../api/grafana'}\r\n        dataSourceConfig={options.jsonData.http ? options.jsonData.http : options}\r\n        showAccessOptions={true}\r\n        onChange={onHttpChange}\r\n      />\r\n      <FieldSet>\r\n        <h3 className=\"page-heading\">\r\n          Excluded Data Flags\r\n          <Tooltip content=\"Mark flags which you want excluded\">\r\n            <span style={{ cursor: \"help\" }}> 🛈</span>\r\n          </Tooltip>\r\n        </h3>\r\n        <InlineFieldRow>\r\n          {Object.keys(DefaultFlags).map((element, index) => (\r\n            <InlineField key={index} label={element} labelWidth={16}>\r\n              <div className=\"dark-box\">\r\n                <Switch\r\n                  name={element}\r\n                  disabled={false}\r\n                  value={\r\n                    options.jsonData.flags && options.jsonData.flags[element]\r\n                      ? options.jsonData.flags[element]\r\n                      : false\r\n                  }\r\n                  onChange={onFlagsChange}\r\n                />\r\n              </div>\r\n            </InlineField>\r\n          ))}\r\n        </InlineFieldRow>\r\n      </FieldSet>\r\n      <FieldSet>\r\n        <h3 className=\"page-heading\">\r\n          Data Source Type\r\n          <Tooltip content=\"Determines the type of data that is being queried\">\r\n            <span style={{ cursor: \"help\" }}> 🛈</span>\r\n          </Tooltip>\r\n        </h3>\r\n        <FieldSet>\r\n          <InlineFieldRow>\r\n            <InlineField label=\"Data Type\" labelWidth={24}>\r\n              <Select\r\n                value={options.jsonData.valueTypeIndex}\r\n                options={dataSourceTypeOptions}\r\n                onChange={onTypeChange}\r\n                isLoading={dataSourceTypeOptions.length === 0}\r\n                invalid={options.jsonData.valueTypeIndex === undefined}\r\n              />\r\n            </InlineField>\r\n          </InlineFieldRow>\r\n        </FieldSet>\r\n        <Card>\r\n          <Card.Heading>{options.jsonData.valueTypeName}</Card.Heading>\r\n          <Card.Description>\r\n            <p>This type includes the following elements: </p>\r\n            <TagList className=\"pull-left\" tags={options.jsonData.timeSeriesDefinitions ?? ['']} />\r\n          </Card.Description>\r\n        </Card>\r\n      </FieldSet>\r\n    </FieldSet>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { InlineFieldRow, InlineField, Select, InlineSwitch, FieldSet, IconButton, ConfirmModal } from '@grafana/ui';\r\nimport { SelectableValue, QueryEditorProps } from '@grafana/data';\r\nimport { DataSource } from '../datasource';\r\nimport { openHistorianDataSourceOptions, openHistorianQuery, QueryBase, QueryTypes } from '../types';\r\nimport { QuerySelectOptions } from '../js/constants'\r\nimport \"../css/query-editor.css\";\r\nimport { QueryEditorWizard } from './ElementQueryEditor';\r\nimport { MetaDataSelector } from './MetaDataFieldSelector';\r\nimport { TextQuery } from './TextQueryEditor';\r\nimport { CommandLevelSelector } from './CommandLevelSelection';\r\n\r\ntype Props = QueryEditorProps<DataSource, openHistorianQuery, openHistorianDataSourceOptions>;\r\n\r\nexport function QueryEditor({ query, onChange, datasource, onRunQuery }: Props) {\r\n\r\n  const selectedMode = React.useMemo(() => (query.queryType ?? 'Elements'), [query])\r\n  const [tmpText, setTmpText] = React.useState<string | undefined>(undefined);\r\n\r\n  const modeChange = (selected: SelectableValue<string>) => {\r\n    const newMode = ((selected.value ?? 'Elements') as QueryTypes);\r\n    const oldMode = ((query?.queryType ?? 'Elements') as QueryTypes);\r\n\r\n    if (oldMode === 'Elements' && newMode === 'Text') {\r\n      if (queryTextMatches()) {\r\n        onChange({ ...query, queryText: generateTextQuery(query), queryType: newMode })\r\n      }\r\n      else {\r\n        setTmpText(generateTextQuery(query));\r\n      }\r\n      return;\r\n    }\r\n    onChange({ ...query, queryType: newMode })\r\n  }\r\n\r\n  const queryTextMatches = (): boolean => {\r\n    if ((query.queryText?.length ?? 0) === 0) {\r\n      return true;\r\n    }\r\n\r\n    const src: string = generateTextQuery(query).replace(/\\s+/g, '').toLowerCase();\r\n    const dest: string = query.queryText.replace(/\\s+/g, '').toLowerCase();\r\n\r\n    return src === dest;\r\n  }\r\n\r\n  const generateTextQuery = (q: openHistorianQuery) => {\r\n    let text = datasource.targetToString(q as QueryBase);\r\n\r\n    if (q.commandLevel?.DropEmpty ?? false) {\r\n      text = `${text}; dropEmptySeries`;\r\n    }\r\n\r\n    if (q.commandLevel?.IncludePeaks ?? false) {\r\n      text = `${text}; includePeaks`;\r\n    }\r\n\r\n    if (q.commandLevel?.FullResolution ?? false) {\r\n      text = `${text}; fullResolutionQuery`;\r\n    }\r\n\r\n    if (q.commandLevel?.RadialDistribution ?? false) {\r\n      text = `${text}; radialDistribution={radius=${(q.commandLevel?.Radius ?? 1.5)}; zoom=${(q.commandLevel?.Zoom ?? 2)}}`;\r\n    }\r\n    return text;\r\n  }\r\n\r\n  const elementsOnChange = (p: openHistorianQuery) => {\r\n    onChange(p);\r\n    onRunQuery();\r\n  }\r\n\r\n  const textOnChange = (p: openHistorianQuery) => {\r\n    onChange(p);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onRunQuery();\r\n  };\r\n\r\n  return (\r\n    <FieldSet style={{ display: 'flex', flexDirection: 'column' }} onBlur={onBlur}>\r\n      <FieldSet style={{ marginBottom: 0 }}>\r\n        <h3 className=\"page-heading\" style={{ marginTop: 16 }}>General Settings</h3>\r\n        <FieldSet style={{ marginBottom: 16 }}>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <InlineFieldRow>\r\n                  <InlineField label=\"Data Selection Mode\" labelWidth={24}>\r\n                    <Select options={QuerySelectOptions} value={selectedMode} onChange={modeChange} allowCustomValue={false} />\r\n                  </InlineField>\r\n                  {selectedMode === 'Elements' ? <IconButton name={'question-circle'} size='lg' iconType='default' variant='secondary' style={{ marginTop: 4, marginRight: 0 }}\r\n                    tooltip={<div>\r\n                      <p style={{ marginBottom: 8 }}>Current Query Expression:</p>\r\n                      <p><em>{generateTextQuery(query)}</em></p>\r\n                    </div>} /> : null}\r\n                  <InlineField label=\"Transpose Query Results\" labelWidth={24} style={{ marginLeft: 16 }}>\r\n                    <InlineSwitch value={query.transpose ?? false}\r\n                      onChange={(v) => elementsOnChange({ ...query, transpose: !(query.transpose ?? false) })}\r\n                      showLabel={true}\r\n                    />\r\n                  </InlineField>\r\n                </InlineFieldRow>\r\n              </td>\r\n            </tr>\r\n            <tr style={{ height: 16 }}>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                {selectedMode === 'Elements' ? <CommandLevelSelector query={query.commandLevel} onChange={(q) => elementsOnChange({ ...query, commandLevel: q })} /> : null}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </FieldSet>\r\n      </FieldSet>\r\n      <FieldSet style={{ marginBottom: 16 }}>\r\n        <h3 className=\"page-heading\">Metadata</h3>\r\n        <MetaDataSelector datasource={datasource} onChange={(fields) => elementsOnChange({ ...query, metadataOptions: fields })} query={query.metadataOptions} />\r\n      </FieldSet>\r\n      <FieldSet>\r\n        <h3 className=\"page-heading\">Data Selection</h3>\r\n        {query.queryType === 'Text' ? <TextQuery onChange={(t) => textOnChange({ ...query, queryText: t })} query={query.queryText} /> : null}\r\n        {query.queryType === 'Elements' || query.queryType === undefined ? <QueryEditorWizard\r\n          onChange={(q) => elementsOnChange({ ...query, queryText: q.queryText, parsedQuery: q.parsedQuery })} query={query}\r\n          datasource={datasource} /> : null}\r\n      </FieldSet>\r\n      <ConfirmModal\r\n        isOpen={tmpText !== undefined}\r\n        title=\"Replace Existing Text Query\"\r\n        body=\"Text mode has existing, distinct query expression text. Do you want replace the existing text query expression with the one that was built here?\"\r\n        confirmText=\"Confirm\"\r\n        icon=\"exclamation-triangle\"\r\n        onConfirm={() => {\r\n          onChange({ ...query, queryText: tmpText ?? '', queryType: 'Text' });\r\n          setTmpText(undefined);\r\n        }}\r\n        onDismiss={() => {\r\n          setTmpText(undefined);\r\n          onChange({ ...query, queryType: 'Text' });\r\n        }}\r\n      />\r\n    </FieldSet >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { FieldSet, InlineField, InlineFieldRow, Input, MultiSelect, Select } from '@grafana/ui';\r\nimport { DataSource } from '../datasource';\r\nimport { FieldDescription, MyVariableQuery } from '../types';\r\nimport \"../css/query-editor.css\";\r\nimport { SelectableValue } from '@grafana/data';\r\nimport { getBackendSrv } from '@grafana/runtime';\r\n\r\ninterface VariableQueryProps {\r\n  query: MyVariableQuery;\r\n  onChange: (query: MyVariableQuery) => void;\r\n  datasource: DataSource\r\n}\r\n\r\nexport function VariableQueryEditor(props: VariableQueryProps) {\r\n  const [tableOptions, setTableOptions] = React.useState<Array<SelectableValue<string>>>([]);\r\n  const [fieldOptions, setFieldOptions] = React.useState<Array<SelectableValue<string>>>([]);\r\n  const [isInitialLoad, setIsInitialLoad] = React.useState(true);\r\n  const { onChange, query } = props;\r\n\r\n  // Effect for setting default tableName\r\n  React.useEffect(() => {\r\n    if (isInitialLoad && !query.tableName) {\r\n      onChange({ ...query, tableName: 'ActiveMeasurements', fieldNames: ['PointTag'] });\r\n    }\r\n    setIsInitialLoad(false);\r\n  }, [isInitialLoad, onChange, query]);\r\n\r\n  React.useEffect(() => {\r\n    getBackendSrv().post(props.datasource.url + \"/GetValueTypeTables\", {\r\n      dataTypeIndex: -1 /* no restriction */,\r\n      expression: \"\"\r\n    })\r\n      .then((d: string[]) => { setTableOptions(d.map(t => ({ value: t, label: t }))); })\r\n  }, [props.datasource.url, props.datasource.valueTypeIndex, query.tableName])\r\n\r\n  React.useEffect(() => {\r\n    if (!query.tableName) {\r\n      return;\r\n    }\r\n\r\n    getBackendSrv().post(props.datasource.url + \"/GetValueTypeTableFields\", {\r\n      dataTypeIndex: -1 /* no restriction */,\r\n      expression: query.tableName\r\n    })\r\n      .then((d: FieldDescription[]) => { setFieldOptions(d.map(t => ({ value: t.name, label: t.name }))); })\r\n  }, [props.datasource.url, props.datasource.valueTypeIndex, query.tableName])\r\n\r\n  function onTableChange(t: SelectableValue<string>) {\r\n    let newFieldNames = props.query.fieldNames;\r\n\r\n    if (t.value === 'ActiveMeasurements') {\r\n      if (!newFieldNames.includes('PointTag')) {\r\n        newFieldNames = ['PointTag'];\r\n      }\r\n    } else {\r\n      newFieldNames = ['*'];\r\n    }\r\n\r\n    props.onChange({ ...props.query, tableName: t.value ?? '', fieldNames: newFieldNames });\r\n  }\r\n\r\n  function onFieldChange(t: Array<SelectableValue<string>>) {\r\n    let newFieldNames = t.map(sv => sv.value?.toString() ?? '');\r\n\r\n    // Handle special case for ActiveMeasurements (allows 'PointTag` field to be deselected)\r\n    if (props.query.tableName === 'ActiveMeasurements' && newFieldNames.length === 0) {\r\n      newFieldNames = ['*'];\r\n    }\r\n\r\n    props.onChange({ ...props.query, fieldNames: newFieldNames });\r\n  }\r\n\r\n  function onConditionChange(val: any) {\r\n    props.onChange({ ...props.query, condition: val.target.value })\r\n  }\r\n\r\n  return (\r\n    <FieldSet style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <FieldSet>\r\n        <InlineFieldRow>\r\n          <InlineField label=\"Select\" labelWidth={12}>\r\n            <MultiSelect\r\n              value={props.query?.fieldNames}\r\n              options={fieldOptions}\r\n              isLoading={fieldOptions.length === 0}\r\n              onChange={onFieldChange}\r\n              isSearchable\r\n              invalid={(props.query?.fieldNames?.length ?? 0) === 0}\r\n              disabled={(props.query?.tableName?.length ?? 0) === 0}\r\n            />\r\n          </InlineField>\r\n          <InlineField label=\"FROM\" labelWidth={12}>\r\n            <Select\r\n              value={props.query?.tableName}\r\n              options={tableOptions}\r\n              isLoading={tableOptions.length === 0}\r\n              onChange={onTableChange}\r\n              isSearchable\r\n              invalid={(props.query?.tableName?.length ?? 0) === 0}\r\n            />\r\n          </InlineField>\r\n        </InlineFieldRow>\r\n        <InlineFieldRow>\r\n          <InlineField label=\"WHERE\" labelWidth={12}>\r\n            <Input\r\n              value={props.query?.condition}\r\n              onChange={onConditionChange}\r\n            />\r\n          </InlineField>\r\n        </InlineFieldRow>\r\n      </FieldSet>\r\n    </FieldSet>\r\n  );\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nc","require","QuerySelectOptions","label","DefaultFlags","Value","Order","Flag","Normal","BadData","SuspectData","OverRangeError","UnderRangeError","AlarmHigh","AlarmLow","WarningHigh","WarningLow","FlatlineAlarm","ComparisonAlarm","ROCAlarm","ReceivedAsBad","CalculatedValue","CalculationError","CalculationWarning","ReservedQualityFlag","BadTime","SuspectTime","LateTimeAlarm","FutureTimeAlarm","UpSampled","DownSampled","DiscardedValue","ReservedTimeFlag","UserDefinedFlag1","UserDefinedFlag2","UserDefinedFlag3","UserDefinedFlag4","UserDefinedFlag5","SystemError","SystemWarning","MeasurementError","AnnotationEditor","query","onChange","React","queryType","FieldSet","display","flexDirection","InlineField","labelWidth","grow","shrink","TextArea","queryText","evt","rows","width","locals","DataSource","DataSourceApi","metricFindQuery","tableName","fieldNames","getBackendSrv","post","url","dataTypeIndex","expression","condition","s","text","calculateFlags","excludedValue","entries","flags","targetToString","parsedQueryToString","parsedQuery","functionToString","fx","parameter","Parameters","p","type","includes","Function","parts","Elements","Filters","f","NumberMode","Number","Table","Condition","Functions","filter","buildQueryParameters","excludedFlags","excludeNormalFlags","targets","t","hide","metadataSelections","metadataOptions","forEach","m","find","FieldName","queryExpression","getTemplateSrv","replace","scopedVars","commandLevel","DropEmpty","IncludePeaks","FullResolution","RadialDistribution","Radius","Zoom","refID","refId","valueTypeIndex","range","from","toISOString","to","interval","adhocFilters","maxDataPoints","metaDataTypes","flat","hasDataQuery","some","hasAnnotationQuery","error","syntaxErrors","pointsData","tags","timeSeriesDefinitions","transposeFrame","MutableDataFrame","fields","name","FieldType","number","time","frames","syntaxError","metaData","keys","metadata","transpose","row","datapoints","addField","other","add","frame","metaDataDataType","Type","pt","queryAnnotations","message","testDatasource","then","status","title","boolean","string","queyText","annotationQuery","rangeRaw","constructor","instanceSettings","super","valueTypeName","metadataTableName","annotations","QueryEditor","jsonData","http","parseInt","QueryEditorWizard","props","elements","setElements","functions","setFunctions","availableFunctions","setAvailableFunctions","tableOptions","setTableOptions","filters","setFilters","includeFunctions","datasource","div","ElementQuery","u","_","parameters","default","FunctionQueryUI","onFunctionChange","func","availableTables","FilterQueryUI","onFilterChange","selectedOptions","loadOptions","inputValue","toLocaleLowerCase","aliases","InlineFieldRow","AsyncMultiSelect","defaultOptions","selected","selectedValues","hasFilter","startsWith","substring","isSearchable","Button","size","variant","fill","icon","marginTop","marginLeft","onClick","IconButton","iconType","marginRight","InlineLabel","flexShrink","Select","val","Input","min","max","transparent","isLoading","placeholder","isOpen","setIsOpen","fxDescription","fxOptions","Collapse","collapsible","span","fontSize","tabSelectsValue","getCategory","returnType","toLowerCase","getGroupOperation","extractGroupOperations","onToggle","x","description","ul","li","ParameterUI","onValueChange","param","onStringChange","onSelectChange","Card","Heading","required","Description","fxParsed","category","functionName","allowedGroupOperations","split","operation","trim","publishedGroupOperations","allowedGroupOperationsSet","Set","every","has","publishedGroupOperationsSet","supportedGroupOperations","supportsNonGroupedOperation","groupOperationsDisplay","MetaDataSelector","q","MetaDataFieldSelector","Field","Remove","onRemoveField","Update","fld","onUpdateFld","TableOptions","Datasource","setFields","fieldOptions","invalid","disabled","TextQuery","CommandLevelSelector","getInitialUpdatedValue","event","setting","updated","tooltip","InlineSwitch","parseFloat","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","dataSourceTypes","setDataSourceTypes","dataSourceTypeOptions","isInitialAssignment","setIsInitialAssignment","onTypeChange","onFlagsChange","input","checked","updatedFlags","selectAllState","reduce","acc","flag","dataSource","timeSeriesDefinition","onBlur","catch","console","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","config","h3","className","Tooltip","cursor","Switch","TagList","setQueryEditor","onRunQuery","selectedMode","tmpText","setTmpText","generateTextQuery","elementsOnChange","marginBottom","table","tr","td","newMode","allowCustomValue","em","v","showLabel","height","textOnChange","ConfirmModal","body","confirmText","onConfirm","onDismiss","setVariableQueryEditor","setFieldOptions","isInitialLoad","setIsInitialLoad","MultiSelect","newFieldNames","sv"],"sourceRoot":""}