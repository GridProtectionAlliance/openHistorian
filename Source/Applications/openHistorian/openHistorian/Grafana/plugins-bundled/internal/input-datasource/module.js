define(["@grafana/data","@grafana/ui","react"],((e,t,r)=>(()=>{"use strict";var a=[t=>{t.exports=e},e=>{e.exports=r},e=>{e.exports=t}],n={};function o(e){var t=n[e];if(void 0!==t)return t.exports;var r=n[e]={exports:{}};return a[e](r,r.exports,o),r.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};return(()=>{o.r(s),o.d(s,{plugin:()=>S});var e,t,r,a=o(0),n=o(1),i=o.n(n),l=o(2);function u(e){return e&&e.length?(0,a.toCSV)(e.map((e=>(0,a.toDataFrame)(e)))):""}function d(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var a=r.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class c extends n.PureComponent{constructor(){super(...arguments),d(this,"state",{text:""}),d(this,"onSeriesParsed",((e,t)=>{const{options:r,onOptionsChange:n}=this.props;e||(e=[new a.MutableDataFrame]);const o=Object.assign({},r.jsonData,{data:e});n(Object.assign({},r,{jsonData:o})),this.setState({text:t})}))}componentDidMount(){const{options:e}=this.props;if(e.jsonData.data){const t=u(e.jsonData.data);this.setState({text:t})}}render(){const{text:a}=this.state;return i().createElement("div",null,i().createElement("div",{className:"gf-form-group"},e||(e=i().createElement("h4",null,"Shared Data:")),t||(t=i().createElement("span",null,"Enter CSV")),i().createElement(l.TableInputCSV,{text:a,onSeriesParsed:this.onSeriesParsed,width:"100%",height:200})),r||(r=i().createElement("div",{className:"grafana-info-box"},"This data is stored in the datasource json and is returned to every user in the initial request for any datasource. This is an appropriate place to enter a few values. Large datasets will perform better in other datasources.",i().createElement("br",null),i().createElement("br",null),i().createElement("b",null,"NOTE:")," Changes to this data will only be reflected after a browser refresh.")))}}function f(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var a=r.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class h extends a.DataSourceApi{constructor(e){super(e),f(this,"data",[]),e.jsonData.data&&(this.data=e.jsonData.data.map((e=>(0,a.toDataFrame)(e))))}getQueryDisplayText(e){return e.data?"Panel Data: "+m(e.data):`Shared Data From: ${this.name} (${m(this.data)})`}metricFindQuery(e,t){return new Promise(((e,t)=>{const r=[];for(const e of this.data)for(const t of e.fields)r.push({text:t.name});e(r)}))}query(e){const t=[];for(const r of e.targets){if(r.hide)continue;let e=this.data;r.data&&(e=r.data.map((e=>(0,a.toDataFrame)(e))));for(let a=0;a<e.length;a++)t.push(Object.assign({},e[a],{refId:r.refId}))}return Promise.resolve({data:t})}testDatasource(){return new Promise(((e,t)=>{let r=0,a=`${this.data.length} Series:`;for(const e of this.data){const t=e.length;a+=` [${e.fields.length} Fields, ${t} Rows]`,r+=t}r>0&&e({status:"success",message:a}),t({status:"error",message:"No Data Entered"})}))}}function p(e){return e&&e.fields&&e.fields.length?e.hasOwnProperty("length")?e.length:e.fields[0].values.length:0}function m(e){if(!e||!e.length)return"";if(e.length>1){const t=e.reduce(((e,t)=>e+p(t)),0);return`${e.length} Series, ${t} Rows`}const t=e[0];if(!t.fields)return"Missing Fields";const r=p(t);return`${t.fields.length} Fields, ${r} Rows`}var g;function b(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var a=r.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const v=[{value:"panel",label:"Panel",description:"Save data in the panel configuration."},{value:"shared",label:"Shared",description:"Save data in the shared datasource object."}];class y extends n.PureComponent{constructor(){super(...arguments),b(this,"state",{text:""}),b(this,"onSourceChange",(e=>{const{datasource:t,query:r,onChange:n,onRunQuery:o}=this.props;let s;if("panel"===e.value){if(r.data)return;s=[...t.data],s||(s=[new a.MutableDataFrame]),this.setState({text:(0,a.toCSV)(s)})}n(Object.assign({},r,{data:s})),o()})),b(this,"onSeriesParsed",((e,t)=>{const{query:r,onChange:n,onRunQuery:o}=this.props;this.setState({text:t}),e||(e=[new a.MutableDataFrame]),n(Object.assign({},r,{data:e})),o()}))}onComponentDidMount(){const{query:e}=this.props,t=u(e.data);this.setState({text:t})}render(){const{datasource:e,query:t}=this.props,{uid:r,name:a}=e,{text:n}=this.state,o=t.data?v[0]:v[1];return i().createElement("div",null,i().createElement(l.InlineField,{label:"Data",labelWidth:8},i().createElement(i().Fragment,null,i().createElement(l.Select,{width:20,options:v,value:o,onChange:this.onSourceChange}),t.data?i().createElement("div",{style:{alignSelf:"center"}},m(t.data)):i().createElement(l.LinkButton,{fill:"text",href:`datasources/edit/${r}/`},a,": ",m(e.data),"   ",g||(g=i().createElement(l.Icon,{name:"pen"}))))),t.data&&i().createElement(l.TableInputCSV,{text:n,onSeriesParsed:this.onSeriesParsed,width:"100%",height:200}))}}const S=new a.DataSourcePlugin(h).setConfigEditor(c).setQueryEditor(y)})(),s})()));
//# sourceMappingURL=module.js.map