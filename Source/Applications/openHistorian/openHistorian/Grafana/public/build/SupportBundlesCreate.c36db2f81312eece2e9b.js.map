{"version":3,"file":"SupportBundlesCreate.c36db2f81312eece2e9b.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/Form/Form.tsx","webpack://grafana/./public/app/features/support-bundles/SupportBundlesCreate.tsx","webpack://grafana/./public/app/features/support-bundles/state/actions.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport { HTMLProps, useEffect } from 'react';\nimport * as React from 'react';\nimport {\n  useForm,\n  Mode,\n  DefaultValues,\n  SubmitHandler,\n  FieldValues,\n  UseFormReturn,\n  FieldErrors,\n  FieldPath,\n} from 'react-hook-form';\n\nexport type FormAPI<T extends FieldValues> = Omit<UseFormReturn<T>, 'handleSubmit'> & {\n  errors: FieldErrors<T>;\n};\n\ninterface FormProps<T extends FieldValues> extends Omit<HTMLProps<HTMLFormElement>, 'onSubmit' | 'children'> {\n  validateOn?: Mode;\n  validateOnMount?: boolean;\n  validateFieldsOnMount?: FieldPath<T> | Array<FieldPath<T>>;\n  defaultValues?: DefaultValues<T>;\n  onSubmit: SubmitHandler<T>;\n  children: (api: FormAPI<T>) => React.ReactNode;\n  /** Sets max-width for container. Use it instead of setting individual widths on inputs.*/\n  maxWidth?: number | 'none';\n}\n\nexport function Form<T extends FieldValues>({\n  defaultValues,\n  onSubmit,\n  validateOnMount = false,\n  validateFieldsOnMount,\n  children,\n  validateOn = 'onSubmit',\n  maxWidth = 600,\n  ...htmlProps\n}: FormProps<T>) {\n  const { handleSubmit, trigger, formState, ...rest } = useForm<T>({\n    mode: validateOn,\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (validateOnMount) {\n      trigger(validateFieldsOnMount);\n    }\n  }, [trigger, validateFieldsOnMount, validateOnMount]);\n\n  return (\n    <form\n      className={css({\n        maxWidth: maxWidth !== 'none' ? maxWidth + 'px' : maxWidth,\n        width: '100%',\n      })}\n      onSubmit={handleSubmit(onSubmit)}\n      {...htmlProps}\n    >\n      {children({ errors: formState.errors, formState, trigger, ...rest })}\n    </form>\n  );\n}\n","import { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Button, Field, Checkbox, LinkButton, Stack, Alert } from '@grafana/ui';\nimport { Form } from 'app/core/components/Form/Form';\nimport { Page } from 'app/core/components/Page/Page';\nimport { StoreState } from 'app/types';\n\nimport { loadSupportBundleCollectors, createSupportBundle } from './state/actions';\n\nconst subTitle = (\n  <span>\n    Choose the components for the support bundle. The support bundle will be available for 3 days after creation.\n  </span>\n);\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    collectors: state.supportBundles.supportBundleCollectors,\n    isLoading: state.supportBundles.createBundlePageLoading,\n    loadCollectorsError: state.supportBundles.loadBundlesError,\n    createBundleError: state.supportBundles.createBundleError,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadSupportBundleCollectors,\n  createSupportBundle,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nexport const SupportBundlesCreateUnconnected = ({\n  collectors,\n  isLoading,\n  loadCollectorsError,\n  createBundleError,\n  loadSupportBundleCollectors,\n  createSupportBundle,\n}: Props): JSX.Element => {\n  const onSubmit = (data: Record<string, boolean>) => {\n    const selectedLabelsArray = Object.keys(data).filter((key) => data[key]);\n    createSupportBundle({ collectors: selectedLabelsArray });\n  };\n\n  useEffect(() => {\n    loadSupportBundleCollectors();\n  }, [loadSupportBundleCollectors]);\n\n  // turn components into a uuid -> enabled map\n  const values: Record<string, boolean> = collectors.reduce((acc, curr) => {\n    return { ...acc, [curr.uid]: curr.default };\n  }, {});\n\n  return (\n    <Page navId=\"support-bundles\" pageNav={{ text: 'Create support bundle' }} subTitle={subTitle}>\n      <Page.Contents isLoading={isLoading}>\n        {loadCollectorsError && <Alert title={loadCollectorsError} severity=\"error\" />}\n        {createBundleError && <Alert title={createBundleError} severity=\"error\" />}\n        {!!collectors.length && (\n          <Form defaultValues={values} onSubmit={onSubmit} validateOn=\"onSubmit\">\n            {({ register }) => {\n              return (\n                <>\n                  {[...collectors]\n                    .sort((a, b) => a.displayName.localeCompare(b.displayName))\n                    .map((component) => {\n                      return (\n                        <Field key={component.uid}>\n                          <Checkbox\n                            {...register(component.uid)}\n                            label={component.displayName}\n                            id={component.uid}\n                            description={component.description}\n                            defaultChecked={component.default}\n                            disabled={component.includedByDefault}\n                          />\n                        </Field>\n                      );\n                    })}\n                  <Stack>\n                    <Button type=\"submit\">Create</Button>\n                    <LinkButton href=\"/support-bundles\" variant=\"secondary\">\n                      Cancel\n                    </LinkButton>\n                  </Stack>\n                </>\n              );\n            }}\n          </Form>\n        )}\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(SupportBundlesCreateUnconnected);\n","import { throttle } from 'lodash';\n\nimport { getBackendSrv, locationService } from '@grafana/runtime';\nimport { SupportBundle, SupportBundleCollector, SupportBundleCreateRequest, ThunkResult } from 'app/types';\n\nimport {\n  collectorsFetchBegin,\n  collectorsFetchEnd,\n  fetchBegin,\n  fetchEnd,\n  setCreateBundleError,\n  setLoadBundleError,\n  supportBundleCollectorsLoaded,\n  supportBundlesLoaded,\n} from './reducers';\n\nexport function loadBundles(skipPageRefresh = false): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      if (!skipPageRefresh) {\n        dispatch(fetchBegin());\n      }\n      const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n      dispatch(supportBundlesLoaded(result));\n    } finally {\n      dispatch(fetchEnd());\n    }\n  };\n}\n\nconst checkBundlesStatusThrottled = throttle(async (dispatch) => {\n  const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n  dispatch(supportBundlesLoaded(result));\n}, 1000);\n\nexport function checkBundles(): ThunkResult<void> {\n  return async (dispatch) => {\n    dispatch(checkBundlesStatusThrottled);\n  };\n}\n\nexport function removeBundle(uid: string): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().delete(`/api/support-bundles/${uid}`);\n    dispatch(loadBundles(true));\n  };\n}\n\nexport function loadSupportBundleCollectors(): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      dispatch(collectorsFetchBegin());\n      const result = await getBackendSrv().get<SupportBundleCollector[]>('/api/support-bundles/collectors');\n      dispatch(supportBundleCollectorsLoaded(result));\n    } catch (err) {\n      dispatch(setLoadBundleError('Error loading support bundles data collectors'));\n    } finally {\n      dispatch(collectorsFetchEnd());\n    }\n  };\n}\n\nexport function createSupportBundle(data: SupportBundleCreateRequest): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      await getBackendSrv().post('/api/support-bundles', data);\n      locationService.push('/support-bundles');\n    } catch (err) {\n      dispatch(setCreateBundleError('Error creating support bundle'));\n    }\n  };\n}\n"],"names":["Form","defaultValues","onSubmit","validateOnMount","validateFieldsOnMount","children","validateOn","maxWidth","htmlProps","handleSubmit","trigger","formState","rest","subTitle","mapStateToProps","state","mapDispatchToProps","connector","SupportBundlesCreateUnconnected","collectors","isLoading","loadCollectorsError","createBundleError","loadSupportBundleCollectors","createSupportBundle","data","selectedLabelsArray","key","values","acc","curr","register","a","b","component","loadBundles","skipPageRefresh","dispatch","result","checkBundlesStatusThrottled","checkBundles","removeBundle","uid"],"sourceRoot":""}