{"version":3,"file":"LoginPage.337a8fe1cc0c69e91c08.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/ForgottenPassword/ChangePassword.tsx","webpack://grafana/./public/app/core/components/Login/LoginCtrl.tsx","webpack://grafana/./public/app/core/components/Login/LoginForm.tsx","webpack://grafana/./public/app/core/components/Login/LoginLayout.tsx","webpack://grafana/./public/app/core/components/Login/LoginServiceButtons.tsx","webpack://grafana/./public/app/core/components/Login/UserSignup.tsx","webpack://grafana/./public/app/core/components/Login/LoginPage.tsx","webpack://grafana/./public/app/core/components/PasswordField/PasswordField.tsx","webpack://grafana/./public/app/core/components/ValidationLabels/ValidationLabels.tsx"],"sourcesContent":["import { SyntheticEvent, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config } from '@grafana/runtime';\nimport { Tooltip, Field, Button, Alert, useStyles2, Stack } from '@grafana/ui';\n\nimport { getStyles } from '../Login/LoginForm';\nimport { PasswordField } from '../PasswordField/PasswordField';\nimport {\n  ValidationLabels,\n  strongPasswordValidations,\n  strongPasswordValidationRegister,\n} from '../ValidationLabels/ValidationLabels';\n\ninterface Props {\n  onSubmit: (pw: string) => void;\n  onSkip?: (event?: SyntheticEvent) => void;\n  showDefaultPasswordWarning?: boolean;\n}\n\ninterface PasswordDTO {\n  newPassword: string;\n  confirmNew: string;\n}\n\nexport const ChangePassword = ({ onSubmit, onSkip, showDefaultPasswordWarning }: Props) => {\n  const styles = useStyles2(getStyles);\n  const [displayValidationLabels, setDisplayValidationLabels] = useState(false);\n  const [pristine, setPristine] = useState(true);\n\n  const {\n    handleSubmit,\n    register,\n    getValues,\n    formState: { errors },\n    watch,\n  } = useForm<PasswordDTO>({\n    defaultValues: {\n      newPassword: '',\n      confirmNew: '',\n    },\n  });\n\n  const newPassword = watch('newPassword');\n  const submit = (passwords: PasswordDTO) => {\n    onSubmit(passwords.newPassword);\n  };\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      {showDefaultPasswordWarning && (\n        <Alert severity=\"info\" title=\"Continuing to use the default password exposes you to security risks.\" />\n      )}\n      <Field label=\"New password\" invalid={!!errors.newPassword} error={errors?.newPassword?.message}>\n        <PasswordField\n          onFocus={() => setDisplayValidationLabels(true)}\n          {...register('newPassword', {\n            required: 'New Password is required',\n            onBlur: () => setPristine(false),\n            validate: { strongPasswordValidationRegister },\n          })}\n          id=\"new-password\"\n          autoFocus\n          autoComplete=\"new-password\"\n        />\n      </Field>\n      {displayValidationLabels && (\n        <ValidationLabels\n          pristine={pristine}\n          password={newPassword}\n          strongPasswordValidations={strongPasswordValidations}\n        />\n      )}\n      <Field label=\"Confirm new password\" invalid={!!errors.confirmNew} error={errors?.confirmNew?.message}>\n        <PasswordField\n          {...register('confirmNew', {\n            required: 'Confirmed Password is required',\n            validate: (v: string) => v === getValues().newPassword || 'Passwords must match!',\n          })}\n          id=\"confirm-new-password\"\n          autoComplete=\"new-password\"\n        />\n      </Field>\n      <Stack direction=\"column\">\n        <Button type=\"submit\" className={styles.submitButton}>\n          Submit\n        </Button>\n\n        {!config.auth.basicAuthStrongPasswordPolicy && onSkip && (\n          <Tooltip\n            content=\"If you skip you will be prompted to change password next time you log in.\"\n            placement=\"bottom\"\n          >\n            <Button\n              className={styles.skipButton}\n              fill=\"text\"\n              onClick={onSkip}\n              type=\"button\"\n              data-testid={selectors.pages.Login.skip}\n            >\n              Skip\n            </Button>\n          </Tooltip>\n        )}\n      </Stack>\n    </form>\n  );\n};\n","import { PureComponent } from 'react';\n\nimport { FetchError, getBackendSrv, isFetchError } from '@grafana/runtime';\nimport config from 'app/core/config';\nimport { t } from 'app/core/internationalization';\n\nimport { LoginDTO } from './types';\n\nconst isOauthEnabled = () => {\n  return !!config.oauth && Object.keys(config.oauth).length > 0;\n};\n\nexport interface FormModel {\n  user: string;\n  password: string;\n  email: string;\n}\n\ninterface Props {\n  resetCode?: string;\n\n  children: (props: {\n    isLoggingIn: boolean;\n    changePassword: (pw: string) => void;\n    isChangingPassword: boolean;\n    skipPasswordChange: Function;\n    login: (data: FormModel) => void;\n    disableLoginForm: boolean;\n    disableUserSignUp: boolean;\n    isOauthEnabled: boolean;\n    loginHint: string;\n    passwordHint: string;\n    showDefaultPasswordWarning: boolean;\n    loginErrorMessage: string | undefined;\n  }) => JSX.Element;\n}\n\ninterface State {\n  isLoggingIn: boolean;\n  isChangingPassword: boolean;\n  showDefaultPasswordWarning: boolean;\n  loginErrorMessage?: string;\n}\n\nexport class LoginCtrl extends PureComponent<Props, State> {\n  result: LoginDTO | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoggingIn: false,\n      isChangingPassword: false,\n      showDefaultPasswordWarning: false,\n      // oAuth unauthorized sets the redirect error message in the bootdata, hence we need to check the key here\n      loginErrorMessage: getBootDataErrMessage(config.loginError),\n    };\n  }\n\n  changePassword = (password: string) => {\n    const pw = {\n      newPassword: password,\n      confirmNew: password,\n      oldPassword: 'admin',\n    };\n\n    if (this.props.resetCode) {\n      const resetModel = {\n        code: this.props.resetCode,\n        newPassword: password,\n        confirmPassword: password,\n      };\n\n      getBackendSrv()\n        .post('/api/user/password/reset', resetModel)\n        .then(() => {\n          this.toGrafana();\n        });\n    } else {\n      getBackendSrv()\n        .put('/api/user/password', pw)\n        .then(() => {\n          this.toGrafana();\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  login = (formModel: FormModel) => {\n    this.setState({\n      loginErrorMessage: undefined,\n      isLoggingIn: true,\n    });\n\n    getBackendSrv()\n      .post<LoginDTO>('/login', formModel, { showErrorAlert: false })\n      .then((result) => {\n        this.result = result;\n        if (formModel.password !== 'admin' || config.ldapEnabled || config.authProxyEnabled) {\n          this.toGrafana();\n          return;\n        } else {\n          this.changeView(formModel.password === 'admin');\n        }\n      })\n      .catch((err) => {\n        const fetchErrorMessage = isFetchError(err) ? getErrorMessage(err) : undefined;\n        this.setState({\n          isLoggingIn: false,\n          loginErrorMessage: fetchErrorMessage || t('login.error.unknown', 'Unknown error occurred'),\n        });\n      });\n  };\n\n  changeView = (showDefaultPasswordWarning: boolean) => {\n    this.setState({\n      isChangingPassword: true,\n      showDefaultPasswordWarning,\n    });\n  };\n\n  toGrafana = () => {\n    if (config.featureToggles.useSessionStorageForRedirection) {\n      window.location.assign(config.appSubUrl + '/');\n      return;\n    }\n\n    if (this.result?.redirectUrl) {\n      if (config.appSubUrl !== '' && !this.result.redirectUrl.startsWith(config.appSubUrl)) {\n        window.location.assign(config.appSubUrl + this.result.redirectUrl);\n      } else {\n        window.location.assign(this.result.redirectUrl);\n      }\n    } else {\n      window.location.assign(config.appSubUrl + '/');\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggingIn, isChangingPassword, showDefaultPasswordWarning, loginErrorMessage } = this.state;\n    const { login, toGrafana, changePassword } = this;\n    const { loginHint, passwordHint, disableLoginForm, disableUserSignUp } = config;\n\n    return (\n      <>\n        {children({\n          isOauthEnabled: isOauthEnabled(),\n          loginHint,\n          passwordHint,\n          disableLoginForm,\n          disableUserSignUp,\n          login,\n          isLoggingIn,\n          changePassword,\n          skipPasswordChange: toGrafana,\n          isChangingPassword,\n          showDefaultPasswordWarning,\n          loginErrorMessage,\n        })}\n      </>\n    );\n  }\n}\n\nexport default LoginCtrl;\n\nfunction getErrorMessage(err: FetchError<undefined | { messageId?: string; message?: string }>): string | undefined {\n  switch (err.data?.messageId) {\n    case 'password-auth.empty':\n    case 'password-auth.failed':\n    case 'password-auth.invalid':\n      return t('login.error.invalid-user-or-password', 'Invalid username or password');\n    case 'login-attempt.blocked':\n      return t(\n        'login.error.blocked',\n        'You have exceeded the number of login attempts for this user. Please try again later.'\n      );\n    default:\n      return err.data?.message;\n  }\n}\n\nfunction getBootDataErrMessage(str?: string) {\n  switch (str) {\n    case 'oauth.login.error':\n      return t('oauth.login.error', 'Login provider denied login request');\n    default:\n      return str;\n  }\n}\n","import { css } from '@emotion/css';\nimport { ReactElement, useId } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, Input, Field, useStyles2 } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nimport { PasswordField } from '../PasswordField/PasswordField';\n\nimport { FormModel } from './LoginCtrl';\n\ninterface Props {\n  children: ReactElement;\n  onSubmit: (data: FormModel) => void;\n  isLoggingIn: boolean;\n  passwordHint: string;\n  loginHint: string;\n}\n\nexport const LoginForm = ({ children, onSubmit, isLoggingIn, passwordHint, loginHint }: Props) => {\n  const styles = useStyles2(getStyles);\n  const usernameId = useId();\n  const passwordId = useId();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<FormModel>({ mode: 'onChange' });\n\n  return (\n    <div className={styles.wrapper}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Field\n          label={t('login.form.username-label', 'Email or username')}\n          invalid={!!errors.user}\n          error={errors.user?.message}\n        >\n          <Input\n            {...register('user', { required: t('login.form.username-required', 'Email or username is required') })}\n            id={usernameId}\n            autoFocus\n            autoCapitalize=\"none\"\n            placeholder={loginHint || t('login.form.username-placeholder', 'email or username')}\n            data-testid={selectors.pages.Login.username}\n          />\n        </Field>\n        <Field\n          label={t('login.form.password-label', 'Password')}\n          invalid={!!errors.password}\n          error={errors.password?.message}\n        >\n          <PasswordField\n            {...register('password', { required: t('login.form.password-required', 'Password is required') })}\n            id={passwordId}\n            autoComplete=\"current-password\"\n            placeholder={passwordHint || t('login.form.password-placeholder', 'password')}\n          />\n        </Field>\n        <Button\n          type=\"submit\"\n          data-testid={selectors.pages.Login.submit}\n          className={styles.submitButton}\n          disabled={isLoggingIn}\n        >\n          {isLoggingIn ? t('login.form.submit-loading-label', 'Logging in...') : t('login.form.submit-label', 'Log in')}\n        </Button>\n        {children}\n      </form>\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      width: '100%',\n      paddingBottom: theme.spacing(2),\n    }),\n\n    submitButton: css({\n      justifyContent: 'center',\n      width: '100%',\n    }),\n\n    skipButton: css({\n      alignSelf: 'flex-start',\n    }),\n  };\n};\n","import { cx, css, keyframes } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { Branding } from '../Branding/Branding';\nimport { BrandingSettings } from '../Branding/types';\nimport { Footer } from '../Footer/Footer';\n\ninterface InnerBoxProps {\n  enterAnimation?: boolean;\n}\nexport const InnerBox = ({ children, enterAnimation = true }: React.PropsWithChildren<InnerBoxProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  return <div className={cx(loginStyles.loginInnerBox, enterAnimation && loginStyles.enterAnimation)}>{children}</div>;\n};\n\nexport interface LoginLayoutProps {\n  /** Custom branding settings that can be used e.g. for previewing the Login page changes */\n  branding?: BrandingSettings;\n  isChangingPassword?: boolean;\n}\n\nexport const LoginLayout = ({ children, branding, isChangingPassword }: React.PropsWithChildren<LoginLayoutProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  const [startAnim, setStartAnim] = useState(false);\n  const subTitle = branding?.loginSubtitle ?? Branding.GetLoginSubTitle();\n  const loginTitle = branding?.loginTitle ?? Branding.LoginTitle;\n  const loginBoxBackground = branding?.loginBoxBackground || Branding.LoginBoxBackground();\n  const loginLogo = branding?.loginLogo;\n  const hideEdition = branding?.hideEdition ?? Branding.HideEdition;\n\n  useEffect(() => setStartAnim(true), []);\n\n  return (\n    <Branding.LoginBackground\n      className={cx(loginStyles.container, startAnim && loginStyles.loginAnim, branding?.loginBackground)}\n    >\n      <div className={loginStyles.loginMain}>\n        <div className={cx(loginStyles.loginContent, loginBoxBackground, 'login-content-box')}>\n          <div className={loginStyles.loginLogoWrapper}>\n            <Branding.LoginLogo className={loginStyles.loginLogo} logo={loginLogo} />\n            <div className={loginStyles.titleWrapper}>\n              {isChangingPassword ? (\n                <h1 className={loginStyles.mainTitle}>Update your password</h1>\n              ) : (\n                <>\n                  <h1 className={loginStyles.mainTitle}>{loginTitle}</h1>\n                  {subTitle && <h3 className={loginStyles.subTitle}>{subTitle}</h3>}\n                </>\n              )}\n            </div>\n          </div>\n          <div className={loginStyles.loginOuterBox}>{children}</div>\n        </div>\n      </div>\n      {branding?.hideFooter ? <></> : <Footer hideEdition={hideEdition} customLinks={branding?.footerLinks} />}\n    </Branding.LoginBackground>\n  );\n};\n\nconst flyInAnimation = keyframes`\nfrom{\n  opacity: 0;\n  transform: translate(-60px, 0px);\n}\n\nto{\n  opacity: 1;\n  transform: translate(0px, 0px);\n}`;\n\nexport const getLoginStyles = (theme: GrafanaTheme2) => {\n  return {\n    loginMain: css({\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '100%',\n    }),\n    container: css({\n      minHeight: '100%',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      flex: 1,\n      minWidth: '100%',\n      marginLeft: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginAnim: css({\n      ['&:before']: {\n        opacity: 1,\n      },\n\n      ['.login-content-box']: {\n        opacity: 1,\n      },\n    }),\n    submitButton: css({\n      justifyContent: 'center',\n      width: '100%',\n    }),\n    loginLogo: css({\n      width: '100%',\n      maxWidth: 60,\n      marginBottom: theme.spacing(2),\n\n      [theme.breakpoints.up('sm')]: {\n        maxWidth: 100,\n      },\n    }),\n    loginLogoWrapper: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      padding: theme.spacing(3),\n    }),\n    titleWrapper: css({\n      textAlign: 'center',\n    }),\n    mainTitle: css({\n      fontSize: 22,\n\n      [theme.breakpoints.up('sm')]: {\n        fontSize: 32,\n      },\n    }),\n    subTitle: css({\n      fontSize: theme.typography.size.md,\n      color: theme.colors.text.secondary,\n    }),\n    loginContent: css({\n      maxWidth: 478,\n      width: `calc(100% - 2rem)`,\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      position: 'relative',\n      justifyContent: 'flex-start',\n      zIndex: 1,\n      minHeight: 320,\n      borderRadius: theme.shape.radius.default,\n      padding: theme.spacing(2, 0),\n      opacity: 0,\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        transition: 'opacity 0.5s ease-in-out',\n      },\n\n      [theme.breakpoints.up('sm')]: {\n        minHeight: theme.spacing(40),\n        justifyContent: 'center',\n      },\n    }),\n    loginOuterBox: css({\n      display: 'flex',\n      overflowY: 'hidden',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginInnerBox: css({\n      padding: theme.spacing(0, 2, 2, 2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexGrow: 1,\n      maxWidth: 415,\n      width: '100%',\n      transform: 'translate(0px, 0px)',\n      [theme.transitions.handleMotion('no-preference')]: {\n        transition: '0.25s ease',\n      },\n    }),\n    enterAnimation: css({\n      [theme.transitions.handleMotion('no-preference')]: {\n        animation: `${flyInAnimation} ease-out 0.2s`,\n      },\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { pickBy } from 'lodash';\n\nimport { GrafanaTheme2, DEFAULT_SAML_NAME } from '@grafana/data';\nimport { Icon, IconName, LinkButton, Stack, useStyles2, useTheme2 } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { Trans } from 'app/core/internationalization';\n\nexport interface LoginService {\n  bgColor: string;\n  enabled: boolean;\n  name: string;\n  hrefName?: string;\n  icon: IconName;\n}\n\nexport interface LoginServices {\n  [key: string]: LoginService;\n}\n\nconst loginServices: () => LoginServices = () => {\n  const oauthEnabled = !!config.oauth;\n\n  return {\n    saml: {\n      bgColor: '#464646',\n      enabled: config.samlEnabled,\n      name: config.samlName || DEFAULT_SAML_NAME,\n      icon: 'key-skeleton-alt',\n    },\n    google: {\n      bgColor: '#e84d3c',\n      enabled: oauthEnabled && Boolean(config.oauth.google),\n      name: config.oauth?.google?.name || 'Google',\n      icon: config.oauth?.google?.icon || ('google' as const),\n    },\n    azuread: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.azuread),\n      name: config.oauth?.azuread?.name || 'Microsoft',\n      icon: config.oauth?.azuread?.icon || ('microsoft' as const),\n    },\n    github: {\n      bgColor: '#464646',\n      enabled: oauthEnabled && Boolean(config.oauth.github),\n      name: config.oauth?.github?.name || 'GitHub',\n      icon: config.oauth?.github?.icon || ('github' as const),\n    },\n    gitlab: {\n      bgColor: '#fc6d26',\n      enabled: oauthEnabled && Boolean(config.oauth.gitlab),\n      name: config.oauth?.gitlab?.name || 'GitLab',\n      icon: config.oauth?.gitlab?.icon || ('gitlab' as const),\n    },\n    grafanacom: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.grafana_com),\n      name: config.oauth?.grafana_com?.name || 'Grafana.com',\n      icon: config.oauth?.grafana_com?.icon || ('grafana' as const),\n      hrefName: 'grafana_com',\n    },\n    okta: {\n      bgColor: '#2f2f2f',\n      enabled: oauthEnabled && Boolean(config.oauth.okta),\n      name: config.oauth?.okta?.name || 'Okta',\n      icon: config.oauth?.okta?.icon || ('okta' as const),\n    },\n    oauth: {\n      bgColor: '#262628',\n      enabled: oauthEnabled && Boolean(config.oauth.generic_oauth),\n      name: config.oauth?.generic_oauth?.name || 'OAuth',\n      icon: config.oauth?.generic_oauth?.icon || ('signin' as const),\n      hrefName: 'generic_oauth',\n    },\n  };\n};\n\nconst getServiceStyles = (theme: GrafanaTheme2) => {\n  return {\n    button: css({\n      color: '#d8d9da',\n      position: 'relative',\n    }),\n    buttonIcon: css({\n      position: 'absolute',\n      left: theme.spacing(1),\n      top: '50%',\n      transform: 'translateY(-50%)',\n    }),\n    divider: {\n      base: css({\n        color: theme.colors.text.primary,\n        display: 'flex',\n        marginBottom: theme.spacing(1),\n        justifyContent: 'space-between',\n        textAlign: 'center',\n        width: '100%',\n      }),\n      line: css({\n        width: 100,\n        height: 10,\n        borderBottom: `1px solid ${theme.colors.text}`,\n      }),\n    },\n  };\n};\n\nconst LoginDivider = () => {\n  const styles = useStyles2(getServiceStyles);\n  return (\n    <div className={styles.divider.base}>\n      <div>\n        <div className={styles.divider.line} />\n      </div>\n      <div>\n        <span>{!config.disableLoginForm && <span>or</span>}</span>\n      </div>\n      <div>\n        <div className={styles.divider.line} />\n      </div>\n    </div>\n  );\n};\n\nfunction getButtonStyleFor(service: LoginService, styles: ReturnType<typeof getServiceStyles>, theme: GrafanaTheme2) {\n  return cx(\n    styles.button,\n    css({\n      backgroundColor: service.bgColor,\n      color: theme.colors.getContrastText(service.bgColor),\n\n      ['&:hover']: {\n        backgroundColor: theme.colors.emphasize(service.bgColor, 0.15),\n        boxShadow: theme.shadows.z1,\n      },\n    })\n  );\n}\n\nexport const LoginServiceButtons = () => {\n  const enabledServices = pickBy(loginServices(), (service) => service.enabled);\n  const hasServices = Object.keys(enabledServices).length > 0;\n  const theme = useTheme2();\n  const styles = useStyles2(getServiceStyles);\n\n  if (hasServices) {\n    return (\n      <Stack direction={'column'} width={'100%'}>\n        <LoginDivider />\n        {Object.entries(enabledServices).map(([key, service]) => {\n          const serviceName = service.name;\n          return (\n            <LinkButton\n              key={key}\n              className={getButtonStyleFor(service, styles, theme)}\n              href={`login/${service.hrefName ? service.hrefName : key}`}\n              target=\"_self\"\n              fullWidth\n            >\n              <Icon className={styles.buttonIcon} name={service.icon} />\n              <Trans i18nKey=\"login.services.sing-in-with-prefix\">Sign in with {{ serviceName }}</Trans>\n            </LinkButton>\n          );\n        })}\n      </Stack>\n    );\n  }\n\n  return null;\n};\n","import { css } from '@emotion/css';\n\nimport { LinkButton, Stack } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { Trans } from 'app/core/internationalization';\n\nexport const UserSignup = () => {\n  const href = getConfig().verifyEmailEnabled ? `${getConfig().appSubUrl}/verify` : `${getConfig().appSubUrl}/signup`;\n  const paddingTop = css({ paddingTop: '16px' });\n\n  return (\n    <Stack direction=\"column\">\n      <div className={paddingTop}>\n        <Trans i18nKey=\"login.signup.new-to-question\">New to Grafana?</Trans>\n      </div>\n      <LinkButton\n        className={css({\n          width: '100%',\n          justifyContent: 'center',\n        })}\n        href={href}\n        variant=\"secondary\"\n        fill=\"outline\"\n      >\n        <Trans i18nKey=\"login.signup.button-label\">Sign up</Trans>\n      </LinkButton>\n    </Stack>\n  );\n};\n","// Libraries\nimport { css } from '@emotion/css';\n\n// Components\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, LinkButton, Stack, useStyles2 } from '@grafana/ui';\nimport { Branding } from 'app/core/components/Branding/Branding';\nimport { t, Trans } from 'app/core/internationalization';\n\nimport { ChangePassword } from '../ForgottenPassword/ChangePassword';\n\nimport LoginCtrl from './LoginCtrl';\nimport { LoginForm } from './LoginForm';\nimport { LoginLayout, InnerBox } from './LoginLayout';\nimport { LoginServiceButtons } from './LoginServiceButtons';\nimport { UserSignup } from './UserSignup';\n\nconst LoginPage = () => {\n  const styles = useStyles2(getStyles);\n  document.title = Branding.AppTitle;\n\n  return (\n    <LoginCtrl>\n      {({\n        loginHint,\n        passwordHint,\n        disableLoginForm,\n        disableUserSignUp,\n        login,\n        isLoggingIn,\n        changePassword,\n        skipPasswordChange,\n        isChangingPassword,\n        showDefaultPasswordWarning,\n        loginErrorMessage,\n      }) => (\n        <LoginLayout isChangingPassword={isChangingPassword}>\n          {!isChangingPassword && (\n            <InnerBox>\n              {loginErrorMessage && (\n                <Alert className={styles.alert} severity=\"error\" title={t('login.error.title', 'Login failed')}>\n                  {loginErrorMessage}\n                </Alert>\n              )}\n\n              {!disableLoginForm && (\n                <LoginForm onSubmit={login} loginHint={loginHint} passwordHint={passwordHint} isLoggingIn={isLoggingIn}>\n                  <Stack justifyContent=\"flex-end\">\n                    {!config.auth.disableLogin && (\n                      <LinkButton\n                        className={styles.forgottenPassword}\n                        fill=\"text\"\n                        href={`${config.appSubUrl}/user/password/send-reset-email`}\n                      >\n                        <Trans i18nKey=\"login.forgot-password\">Forgot your password?</Trans>\n                      </LinkButton>\n                    )}\n                  </Stack>\n                </LoginForm>\n              )}\n              <LoginServiceButtons />\n              {!disableUserSignUp && <UserSignup />}\n            </InnerBox>\n          )}\n\n          {isChangingPassword && (\n            <InnerBox>\n              <ChangePassword\n                showDefaultPasswordWarning={showDefaultPasswordWarning}\n                onSubmit={changePassword}\n                onSkip={() => skipPasswordChange()}\n              />\n            </InnerBox>\n          )}\n        </LoginLayout>\n      )}\n    </LoginCtrl>\n  );\n};\n\nexport default LoginPage;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    forgottenPassword: css({\n      padding: 0,\n      marginTop: theme.spacing(0.5),\n    }),\n\n    alert: css({\n      width: '100%',\n    }),\n  };\n};\n","import { forwardRef, useState } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Input, IconButton } from '@grafana/ui';\nimport { Props as InputProps } from '@grafana/ui/src/components/Input/Input';\n\ninterface Props extends Omit<InputProps, 'type'> {}\n\nexport const PasswordField = forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Input\n      {...props}\n      type={showPassword ? 'text' : 'password'}\n      data-testid={selectors.pages.Login.password}\n      ref={ref}\n      suffix={\n        <IconButton\n          name={showPassword ? 'eye-slash' : 'eye'}\n          aria-controls={props.id}\n          role=\"switch\"\n          aria-checked={showPassword}\n          onClick={() => {\n            setShowPassword(!showPassword);\n          }}\n          tooltip={showPassword ? 'Hide password' : 'Show password'}\n        />\n      }\n    />\n  );\n});\n\nPasswordField.displayName = 'PasswordField';\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Box, Icon, Text, useStyles2 } from '@grafana/ui';\nimport config from 'app/core/config';\nimport { t } from 'app/core/internationalization';\n\ninterface StrongPasswordValidation {\n  message: string;\n  validation: (value: string) => boolean;\n}\n\nexport interface ValidationLabelsProps {\n  strongPasswordValidations: StrongPasswordValidation[];\n  password: string;\n  pristine: boolean;\n}\n\nexport interface ValidationLabelProps {\n  strongPasswordValidation: StrongPasswordValidation;\n  password: string;\n  pristine: boolean;\n}\n\nexport const strongPasswordValidations: StrongPasswordValidation[] = [\n  {\n    message: 'At least 12 characters',\n    validation: (value: string) => value.length >= 12,\n  },\n  {\n    message: 'One uppercase letter',\n    validation: (value: string) => /[A-Z]+/.test(value),\n  },\n  {\n    message: 'One lowercase letter',\n    validation: (value: string) => /[a-z]+/.test(value),\n  },\n  {\n    message: 'One number',\n    validation: (value: string) => /[0-9]+/.test(value),\n  },\n  {\n    message: 'One symbol',\n    validation: (value: string) => /[\\W]/.test(value),\n  },\n];\n\nexport const strongPasswordValidationRegister = (value: string) => {\n  return (\n    !config.auth.basicAuthStrongPasswordPolicy ||\n    strongPasswordValidations.every((validation) => validation.validation(value)) ||\n    t(\n      'profile.change-password.strong-password-validation-register',\n      'Password does not comply with the strong password policy'\n    )\n  );\n};\n\nexport const ValidationLabels = ({ strongPasswordValidations, password, pristine }: ValidationLabelsProps) => {\n  return (\n    <Box marginBottom={2}>\n      {strongPasswordValidations.map((validation) => (\n        <ValidationLabel\n          key={validation.message}\n          strongPasswordValidation={validation}\n          password={password}\n          pristine={pristine}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport const ValidationLabel = ({ strongPasswordValidation, password, pristine }: ValidationLabelProps) => {\n  const styles = useStyles2(getStyles);\n\n  const { basicAuthStrongPasswordPolicy } = config.auth;\n  if (!basicAuthStrongPasswordPolicy) {\n    return null;\n  }\n\n  const { message, validation } = strongPasswordValidation;\n  const result = password.length > 0 && validation(password);\n\n  const iconName = result || pristine ? 'check' : 'exclamation-triangle';\n  const textColor = result ? 'secondary' : pristine ? 'primary' : 'error';\n\n  let iconClassName = undefined;\n  if (result) {\n    iconClassName = styles.icon.valid;\n  } else if (pristine) {\n    iconClassName = styles.icon.pending;\n  } else {\n    iconClassName = styles.icon.error;\n  }\n\n  return (\n    <Box key={message} display={'flex'} alignItems={'center'} marginTop={1}>\n      <Icon className={cx(styles.icon.style, iconClassName)} name={iconName} />\n      <Text color={textColor}>{message}</Text>\n    </Box>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: {\n      style: css({\n        marginRight: theme.spacing(1),\n      }),\n      valid: css({\n        color: theme.colors.success.text,\n      }),\n      pending: css({\n        color: theme.colors.secondary.text,\n      }),\n      error: css({\n        color: theme.colors.error.text,\n      }),\n    },\n  };\n};\n"],"names":["ChangePassword","onSubmit","onSkip","showDefaultPasswordWarning","styles","displayValidationLabels","setDisplayValidationLabels","pristine","setPristine","handleSubmit","register","getValues","errors","watch","newPassword","submit","passwords","v","isOauthEnabled","LoginCtrl","props","password","pw","resetModel","err","formModel","result","fetchErrorMessage","getErrorMessage","getBootDataErrMessage","children","isLoggingIn","isChangingPassword","loginErrorMessage","login","toGrafana","changePassword","loginHint","passwordHint","disableLoginForm","disableUserSignUp","str","LoginForm","getStyles","usernameId","passwordId","theme","InnerBox","enterAnimation","loginStyles","getLoginStyles","LoginLayout","branding","startAnim","setStartAnim","subTitle","loginTitle","loginBoxBackground","loginLogo","hideEdition","flyInAnimation","loginServices","oauthEnabled","getServiceStyles","LoginDivider","getButtonStyleFor","service","LoginServiceButtons","enabledServices","hasServices","Stack","key","serviceName","Icon","UserSignup","href","paddingTop","Branding","skipPasswordChange","Alert","config","PasswordField","ref","showPassword","setShowPassword","strongPasswordValidations","value","strongPasswordValidationRegister","validation","ValidationLabels","ValidationLabel","strongPasswordValidation","basicAuthStrongPasswordPolicy","message","iconName","textColor","iconClassName"],"sourceRoot":""}