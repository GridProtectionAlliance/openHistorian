{"version":3,"file":"NotificationsPage.bf926a5fbfcf2b839d62.js","mappings":"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","sources":["webpack://grafana/../../opt/drone/yarncache/date-fns-npm-2.29.3-fef7e3c72c-e01cf5b62a.zip/node_modules/date-fns/esm/_lib/assign/index.js","webpack://grafana/../../opt/drone/yarncache/date-fns-npm-2.29.3-fef7e3c72c-e01cf5b62a.zip/node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack://grafana/../../opt/drone/yarncache/date-fns-npm-2.29.3-fef7e3c72c-e01cf5b62a.zip/node_modules/date-fns/esm/formatDistance/index.js","webpack://grafana/../../opt/drone/yarncache/date-fns-npm-2.29.3-fef7e3c72c-e01cf5b62a.zip/node_modules/date-fns/esm/formatDistanceToNow/index.js","webpack://grafana/./public/app/core/components/AppNotifications/StoredNotificationItem.tsx","webpack://grafana/./public/app/features/notifications/StoredNotifications.tsx","webpack://grafana/./public/app/features/notifications/NotificationsPage.tsx"],"sourcesContent":["export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import { css } from '@emotion/css';\nimport { formatDistanceToNow } from 'date-fns';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Checkbox, useTheme2 } from '@grafana/ui';\n\nexport type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\nexport interface Props {\n  children?: ReactNode;\n  className?: string;\n  isSelected: boolean;\n  onClick: () => void;\n  severity?: AlertVariant;\n  title: string;\n  timestamp?: number;\n  traceId?: string;\n}\n\nexport const StoredNotificationItem = ({\n  children,\n  className,\n  isSelected,\n  onClick,\n  severity = 'error',\n  title,\n  traceId,\n  timestamp,\n}: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <Card className={className} onClick={onClick}>\n      <Card.Heading>{title}</Card.Heading>\n      <Card.Description>{children}</Card.Description>\n      <Card.Figure>\n        <Checkbox onChange={onClick} tabIndex={-1} value={isSelected} />\n      </Card.Figure>\n      <Card.Tags className={styles.trace}>\n        {traceId && <span>{`Trace ID: ${traceId}`}</span>}\n        {timestamp && formatDistanceToNow(timestamp, { addSuffix: true })}\n      </Card.Tags>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    trace: css({\n      alignItems: 'flex-end',\n      alignSelf: 'flex-end',\n      color: theme.colors.text.secondary,\n      display: 'flex',\n      flexDirection: 'column',\n      fontSize: theme.typography.pxToRem(10),\n      justifySelf: 'flex-end',\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useRef, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, Button, Checkbox, Icon, useStyles2 } from '@grafana/ui';\nimport { StoredNotificationItem } from 'app/core/components/AppNotifications/StoredNotificationItem';\nimport {\n  clearAllNotifications,\n  clearNotification,\n  readAllNotifications,\n  selectWarningsAndErrors,\n  selectLastReadTimestamp,\n} from 'app/core/reducers/appNotification';\nimport { useDispatch, useSelector } from 'app/types';\n\nexport function StoredNotifications() {\n  const dispatch = useDispatch();\n  const notifications = useSelector((state) => selectWarningsAndErrors(state.appNotifications));\n  const [selectedNotificationIds, setSelectedNotificationIds] = useState<string[]>([]);\n  const allNotificationsSelected = notifications.every((notification) =>\n    selectedNotificationIds.includes(notification.id)\n  );\n  const lastReadTimestamp = useRef(useSelector((state) => selectLastReadTimestamp(state.appNotifications)));\n  const styles = useStyles2(getStyles);\n\n  useEffectOnce(() => {\n    dispatch(readAllNotifications(Date.now()));\n  });\n\n  const clearSelectedNotifications = () => {\n    if (allNotificationsSelected) {\n      dispatch(clearAllNotifications());\n    } else {\n      selectedNotificationIds.forEach((id) => {\n        dispatch(clearNotification(id));\n      });\n    }\n    setSelectedNotificationIds([]);\n  };\n\n  const handleAllCheckboxToggle = (isChecked: boolean) => {\n    setSelectedNotificationIds(isChecked ? notifications.map((n) => n.id) : []);\n  };\n\n  const handleCheckboxToggle = (id: string) => {\n    setSelectedNotificationIds((prevState) => {\n      if (!prevState.includes(id)) {\n        return [...prevState, id];\n      } else {\n        return prevState.filter((notificationId) => notificationId !== id);\n      }\n    });\n  };\n\n  if (notifications.length === 0) {\n    return (\n      <div className={styles.noNotifsWrapper}>\n        <Icon name=\"bell\" size=\"xxl\" />\n        <span>Notifications you have received will appear here.</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <Alert\n        severity=\"info\"\n        title=\"This page displays past errors and warnings. Once dismissed, they cannot be retrieved.\"\n      />\n      <div className={styles.topRow}>\n        <Checkbox\n          value={allNotificationsSelected}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleAllCheckboxToggle(event.target.checked)}\n        />\n        <Button disabled={selectedNotificationIds.length === 0} onClick={clearSelectedNotifications}>\n          Dismiss notifications\n        </Button>\n      </div>\n      <ul className={styles.list}>\n        {notifications.map((notif) => (\n          <li key={notif.id} className={styles.listItem}>\n            <StoredNotificationItem\n              className={cx({ [styles.newItem]: notif.timestamp > lastReadTimestamp.current })}\n              isSelected={selectedNotificationIds.includes(notif.id)}\n              onClick={() => handleCheckboxToggle(notif.id)}\n              severity={notif.severity}\n              title={notif.title}\n              timestamp={notif.timestamp}\n              traceId={notif.traceId}\n            >\n              <span>{notif.text}</span>\n            </StoredNotificationItem>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    topRow: css({\n      alignItems: 'center',\n      display: 'flex',\n      gap: theme.spacing(2),\n    }),\n    list: css({\n      display: 'flex',\n      flexDirection: 'column',\n    }),\n    listItem: css({\n      alignItems: 'center',\n      display: 'flex',\n      gap: theme.spacing(2),\n      listStyle: 'none',\n      position: 'relative',\n    }),\n    newItem: css({\n      '&::before': {\n        content: '\"\"',\n        height: '100%',\n        position: 'absolute',\n        left: '-7px',\n        top: 0,\n        background: theme.colors.gradients.brandVertical,\n        width: theme.spacing(0.5),\n        borderRadius: theme.shape.borderRadius(1),\n      },\n    }),\n    noNotifsWrapper: css({\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: theme.spacing(1),\n    }),\n    wrapper: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(2),\n    }),\n  };\n}\n","import React from 'react';\n\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { StoredNotifications } from './StoredNotifications';\n\nexport const NotificationsPage = () => {\n  return (\n    <Page navId=\"profile/notifications\">\n      <Page.Contents>\n        <StoredNotifications />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default NotificationsPage;\n"],"names":["target","object","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","formatDistance","dirtyDate","dirtyBaseDate","options","_ref","_options$locale","requiredArgs","defaultOptions","locale","defaultLocale","comparison","compareAsc","localizeOptions","dateLeft","dateRight","toDate","seconds","differenceInSeconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","months","hours","days","differenceInMonths","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","StoredNotificationItem","children","className","isSelected","onClick","severity","title","traceId","timestamp","theme","styles","getStyles","Card","Checkbox","StoredNotifications","dispatch","notifications","state","selectedNotificationIds","setSelectedNotificationIds","allNotificationsSelected","notification","lastReadTimestamp","useEffectOnce","clearSelectedNotifications","id","handleAllCheckboxToggle","isChecked","n","handleCheckboxToggle","prevState","notificationId","Icon","Alert","event","Button","notif","NotificationsPage","Page"],"sourceRoot":""}