{"version":3,"file":"SupportBundles.93d917b23f485c5c2a81.js","mappings":"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","sources":["webpack://grafana/./public/app/features/support-bundles/SupportBundles.tsx","webpack://grafana/./public/app/features/support-bundles/state/actions.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { dateTimeFormat } from '@grafana/data';\nimport { LinkButton, Spinner, IconButton } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, StoreState } from 'app/types';\n\nimport { loadBundles, removeBundle, checkBundles } from './state/actions';\n\nconst subTitle = (\n  <span>\n    Support bundles allow you to easily collect and share Grafana logs, configuration, and data with the Grafana Labs\n    team.\n  </span>\n);\n\nconst NewBundleButton = (\n  <LinkButton icon=\"plus\" href=\"support-bundles/create\" variant=\"primary\">\n    New support bundle\n  </LinkButton>\n);\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    supportBundles: state.supportBundles.supportBundles,\n    isLoading: state.supportBundles.isLoading,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadBundles,\n  removeBundle,\n  checkBundles,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst SupportBundlesUnconnected = ({ supportBundles, isLoading, loadBundles, removeBundle, checkBundles }: Props) => {\n  const isPending = supportBundles.some((b) => b.state === 'pending');\n\n  useEffect(() => {\n    loadBundles();\n  }, [loadBundles]);\n\n  useEffect(() => {\n    if (isPending) {\n      checkBundles();\n    }\n  });\n\n  const hasAccess = contextSrv.hasPermission(AccessControlAction.ActionSupportBundlesCreate);\n  const hasDeleteAccess = contextSrv.hasPermission(AccessControlAction.ActionSupportBundlesDelete);\n\n  const actions = hasAccess ? NewBundleButton : undefined;\n\n  return (\n    <Page navId=\"support-bundles\" subTitle={subTitle} actions={actions}>\n      <Page.Contents isLoading={isLoading}>\n        <table className=\"filter-table form-inline\">\n          <thead>\n            <tr>\n              <th>Created on</th>\n              <th>Requested by</th>\n              <th>Expires</th>\n              <th style={{ width: '32px' }} />\n              <th style={{ width: '1%' }} />\n              <th style={{ width: '1%' }} />\n            </tr>\n          </thead>\n          <tbody>\n            {supportBundles?.map((bundle) => (\n              <tr key={bundle.uid}>\n                <th>{dateTimeFormat(bundle.createdAt * 1000)}</th>\n                <th>{bundle.creator}</th>\n                <th>{dateTimeFormat(bundle.expiresAt * 1000)}</th>\n                <th>{bundle.state === 'pending' && <Spinner />}</th>\n                <th>\n                  <LinkButton\n                    fill=\"outline\"\n                    disabled={bundle.state !== 'complete'}\n                    target={'_self'}\n                    href={`/api/support-bundles/${bundle.uid}`}\n                  >\n                    Download\n                  </LinkButton>\n                </th>\n                <th>\n                  {hasDeleteAccess && (\n                    <IconButton\n                      onClick={() => removeBundle(bundle.uid)}\n                      name=\"trash-alt\"\n                      variant=\"destructive\"\n                      tooltip=\"Remove bundle\"\n                    />\n                  )}\n                </th>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(SupportBundlesUnconnected);\n","import { throttle } from 'lodash';\n\nimport { getBackendSrv, locationService } from '@grafana/runtime';\nimport { SupportBundle, SupportBundleCollector, SupportBundleCreateRequest, ThunkResult } from 'app/types';\n\nimport {\n  collectorsFetchBegin,\n  collectorsFetchEnd,\n  fetchBegin,\n  fetchEnd,\n  setCreateBundleError,\n  setLoadBundleError,\n  supportBundleCollectorsLoaded,\n  supportBundlesLoaded,\n} from './reducers';\n\nexport function loadBundles(skipPageRefresh = false): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      if (!skipPageRefresh) {\n        dispatch(fetchBegin());\n      }\n      const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n      dispatch(supportBundlesLoaded(result));\n    } finally {\n      dispatch(fetchEnd());\n    }\n  };\n}\n\nconst checkBundlesStatusThrottled = throttle(async (dispatch) => {\n  const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n  dispatch(supportBundlesLoaded(result));\n}, 1000);\n\nexport function checkBundles(): ThunkResult<void> {\n  return async (dispatch) => {\n    dispatch(checkBundlesStatusThrottled);\n  };\n}\n\nexport function removeBundle(uid: string): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().delete(`/api/support-bundles/${uid}`);\n    dispatch(loadBundles(true));\n  };\n}\n\nexport function loadSupportBundleCollectors(): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      dispatch(collectorsFetchBegin());\n      const result = await getBackendSrv().get<SupportBundleCollector[]>('/api/support-bundles/collectors');\n      dispatch(supportBundleCollectorsLoaded(result));\n    } catch (err) {\n      dispatch(setLoadBundleError('Error loading support bundles data collectors'));\n    } finally {\n      dispatch(collectorsFetchEnd());\n    }\n  };\n}\n\nexport function createSupportBundle(data: SupportBundleCreateRequest): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      await getBackendSrv().post('/api/support-bundles', data);\n      locationService.push('/support-bundles');\n    } catch (err) {\n      dispatch(setCreateBundleError('Error creating support bundle'));\n    }\n  };\n}\n"],"names":["subTitle","NewBundleButton","mapStateToProps","state","mapDispatchToProps","supportBundles","isLoading","loadBundles","removeBundle","checkBundles","isPending","b","hasAccess","hasDeleteAccess","actions","bundle","skipPageRefresh","dispatch","result","checkBundlesStatusThrottled","uid","loadSupportBundleCollectors","createSupportBundle","data"],"sourceRoot":""}