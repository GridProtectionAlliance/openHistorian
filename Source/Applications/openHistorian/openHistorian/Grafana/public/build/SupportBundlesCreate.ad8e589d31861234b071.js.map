{"version":3,"file":"SupportBundlesCreate.ad8e589d31861234b071.js","mappings":"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","sources":["webpack://grafana/./public/app/features/support-bundles/SupportBundlesCreate.tsx","webpack://grafana/./public/app/features/support-bundles/state/actions.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Form, Button, Field, Checkbox, LinkButton, HorizontalGroup, Alert } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { StoreState } from 'app/types';\n\nimport { loadSupportBundleCollectors, createSupportBundle } from './state/actions';\n\nconst subTitle = (\n  <span>\n    Choose the components for the support bundle. The support bundle will be available for 3 days after creation.\n  </span>\n);\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    collectors: state.supportBundles.supportBundleCollectors,\n    isLoading: state.supportBundles.createBundlePageLoading,\n    loadCollectorsError: state.supportBundles.loadBundlesError,\n    createBundleError: state.supportBundles.createBundleError,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadSupportBundleCollectors,\n  createSupportBundle,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nexport const SupportBundlesCreateUnconnected = ({\n  collectors,\n  isLoading,\n  loadCollectorsError,\n  createBundleError,\n  loadSupportBundleCollectors,\n  createSupportBundle,\n}: Props): JSX.Element => {\n  const onSubmit = (data: Record<string, boolean>) => {\n    const selectedLabelsArray = Object.keys(data).filter((key) => data[key]);\n    createSupportBundle({ collectors: selectedLabelsArray });\n  };\n\n  useEffect(() => {\n    loadSupportBundleCollectors();\n  }, [loadSupportBundleCollectors]);\n\n  // turn components into a uuid -> enabled map\n  const values: Record<string, boolean> = collectors.reduce((acc, curr) => {\n    return { ...acc, [curr.uid]: curr.default };\n  }, {});\n\n  return (\n    <Page navId=\"support-bundles\" pageNav={{ text: 'Create support bundle' }} subTitle={subTitle}>\n      <Page.Contents isLoading={isLoading}>\n        <Page.OldNavOnly>\n          <h3 className=\"page-sub-heading\">Create support bundle</h3>\n        </Page.OldNavOnly>\n        {loadCollectorsError && <Alert title={loadCollectorsError} severity=\"error\" />}\n        {createBundleError && <Alert title={createBundleError} severity=\"error\" />}\n        {!!collectors.length && (\n          <Form defaultValues={values} onSubmit={onSubmit} validateOn=\"onSubmit\">\n            {({ register, errors }) => {\n              return (\n                <>\n                  {[...collectors]\n                    .sort((a, b) => a.displayName.localeCompare(b.displayName))\n                    .map((component) => {\n                      return (\n                        <Field key={component.uid}>\n                          <Checkbox\n                            {...register(component.uid)}\n                            label={component.displayName}\n                            id={component.uid}\n                            description={component.description}\n                            defaultChecked={component.default}\n                            disabled={component.includedByDefault}\n                          />\n                        </Field>\n                      );\n                    })}\n                  <HorizontalGroup>\n                    <Button type=\"submit\">Create</Button>\n                    <LinkButton href=\"/support-bundles\" variant=\"secondary\">\n                      Cancel\n                    </LinkButton>\n                  </HorizontalGroup>\n                </>\n              );\n            }}\n          </Form>\n        )}\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(SupportBundlesCreateUnconnected);\n","import { throttle } from 'lodash';\n\nimport { getBackendSrv, locationService } from '@grafana/runtime';\nimport { SupportBundle, SupportBundleCollector, SupportBundleCreateRequest, ThunkResult } from 'app/types';\n\nimport {\n  collectorsFetchBegin,\n  collectorsFetchEnd,\n  fetchBegin,\n  fetchEnd,\n  setCreateBundleError,\n  setLoadBundleError,\n  supportBundleCollectorsLoaded,\n  supportBundlesLoaded,\n} from './reducers';\n\nexport function loadBundles(skipPageRefresh = false): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      if (!skipPageRefresh) {\n        dispatch(fetchBegin());\n      }\n      const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n      dispatch(supportBundlesLoaded(result));\n    } finally {\n      dispatch(fetchEnd());\n    }\n  };\n}\n\nconst checkBundlesStatusThrottled = throttle(async (dispatch) => {\n  const result = await getBackendSrv().get<SupportBundle[]>('/api/support-bundles');\n  dispatch(supportBundlesLoaded(result));\n}, 1000);\n\nexport function checkBundles(): ThunkResult<void> {\n  return async (dispatch) => {\n    dispatch(checkBundlesStatusThrottled);\n  };\n}\n\nexport function removeBundle(uid: string): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().delete(`/api/support-bundles/${uid}`);\n    dispatch(loadBundles(true));\n  };\n}\n\nexport function loadSupportBundleCollectors(): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      dispatch(collectorsFetchBegin());\n      const result = await getBackendSrv().get<SupportBundleCollector[]>('/api/support-bundles/collectors');\n      dispatch(supportBundleCollectorsLoaded(result));\n    } catch (err) {\n      dispatch(setLoadBundleError('Error loading support bundles data collectors'));\n    } finally {\n      dispatch(collectorsFetchEnd());\n    }\n  };\n}\n\nexport function createSupportBundle(data: SupportBundleCreateRequest): ThunkResult<void> {\n  return async (dispatch) => {\n    try {\n      await getBackendSrv().post('/api/support-bundles', data);\n      locationService.push('/support-bundles');\n    } catch (err) {\n      dispatch(setCreateBundleError('Error creating support bundle'));\n    }\n  };\n}\n"],"names":["subTitle","mapStateToProps","state","mapDispatchToProps","connector","SupportBundlesCreateUnconnected","collectors","isLoading","loadCollectorsError","createBundleError","loadSupportBundleCollectors","createSupportBundle","onSubmit","data","selectedLabelsArray","key","values","acc","curr","register","errors","a","b","component","loadBundles","skipPageRefresh","dispatch","result","checkBundlesStatusThrottled","checkBundles","removeBundle","uid"],"sourceRoot":""}