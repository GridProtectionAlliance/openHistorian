{"version":3,"file":"8528.f5d5b8670d10a26b32a5.js","mappings":"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","sources":["webpack://grafana/./public/app/features/canvas/element.ts","webpack://grafana/./public/app/features/canvas/elements/icon.tsx","webpack://grafana/./public/app/features/canvas/elements/notFound.tsx","webpack://grafana/./public/app/features/canvas/elements/button.tsx","webpack://grafana/./public/app/features/canvas/elements/droneFront.tsx","webpack://grafana/./public/app/features/canvas/elements/droneSide.tsx","webpack://grafana/./public/app/features/canvas/elements/droneTop.tsx","webpack://grafana/./public/app/features/canvas/elements/metricValue.tsx","webpack://grafana/./public/app/features/canvas/elements/rectangle.tsx","webpack://grafana/./public/app/features/canvas/elements/server/types/database.tsx","webpack://grafana/./public/app/features/canvas/elements/server/types/single.tsx","webpack://grafana/./public/app/features/canvas/elements/server/types/stack.tsx","webpack://grafana/./public/app/features/canvas/elements/server/types/terminal.tsx","webpack://grafana/./public/app/features/canvas/elements/server/server.tsx","webpack://grafana/./public/app/features/canvas/elements/text.tsx","webpack://grafana/./public/app/features/canvas/elements/windTurbine.tsx","webpack://grafana/./public/app/features/canvas/registry.ts","webpack://grafana/./public/app/features/canvas/runtime/element.tsx","webpack://grafana/./public/app/features/canvas/runtime/frame.tsx","webpack://grafana/./public/app/features/canvas/types.ts","webpack://grafana/./public/app/plugins/panel/canvas/editor/APIEditor.tsx","webpack://grafana/./public/app/features/dimensions/editors/BackgroundSizeEditor.tsx","webpack://grafana/./public/app/plugins/panel/canvas/editor/options.ts","webpack://grafana/./public/app/plugins/panel/canvas/types.ts","webpack://grafana/./public/app/plugins/panel/canvas/utils.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { RegistryItem } from '@grafana/data';\nimport { PanelOptionsSupplier } from '@grafana/data/src/panel/PanelPlugin';\nimport { config } from 'app/core/config';\n\nimport { DimensionContext } from '../dimensions/context';\n\nimport { BackgroundConfig, Constraint, LineConfig, Placement } from './types';\n\n/**\n * This gets saved in panel json\n *\n * depending on the type, it may have additional config\n *\n * @alpha\n */\nexport interface CanvasElementOptions<TConfig = any> {\n  name: string; // configured unique display name\n  type: string;\n\n  // Custom options depending on the type\n  config?: TConfig;\n\n  // Standard options available for all elements\n  constraint?: Constraint; // defaults vertical - top, horizontal - left\n  placement?: Placement;\n  background?: BackgroundConfig;\n  border?: LineConfig;\n  connections?: CanvasConnection[];\n}\n\n// Unit is percentage from the middle of the element\n// 0, 0 middle; -1, -1 bottom left; 1, 1 top right\nexport interface ConnectionCoordinates {\n  x: number;\n  y: number;\n}\n\nexport enum ConnectionPath {\n  Straight = 'straight',\n}\n\nexport interface CanvasConnection {\n  source: ConnectionCoordinates;\n  target: ConnectionCoordinates;\n  targetName?: string;\n  path: ConnectionPath;\n  // See https://github.com/anseki/leader-line#options for more examples of more properties\n}\n\nexport interface CanvasElementProps<TConfig = any, TData = any> {\n  // Saved config\n  config: TConfig;\n\n  // Raw data\n  data?: TData;\n\n  // If the element is currently selected\n  isSelected?: boolean;\n}\n\n/**\n * Canvas item builder\n *\n * @alpha\n */\nexport interface CanvasElementItem<TConfig = any, TData = any> extends RegistryItem {\n  /** The default width/height to use when adding  */\n  defaultSize?: Placement;\n\n  prepareData?: (ctx: DimensionContext, cfg: TConfig) => TData;\n\n  /** Component used to draw */\n  display: ComponentType<CanvasElementProps<TConfig, TData>>;\n\n  getNewOptions: (options?: CanvasElementOptions) => Omit<CanvasElementOptions<TConfig>, 'type' | 'name'>;\n\n  /** Build the configuration UI */\n  registerOptionsUI?: PanelOptionsSupplier<CanvasElementOptions<TConfig>>;\n\n  /** If item has an edit mode */\n  hasEditMode?: boolean;\n}\n\nexport const defaultBgColor = '#D9D9D9';\nexport const defaultTextColor = '#000000';\nexport const defaultThemeTextColor = config.theme2.colors.text.primary;\n","import { css } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React, { CSSProperties } from 'react';\n\nimport { SanitizedSVG } from 'app/core/components/SVG/SanitizedSVG';\nimport {\n  ColorDimensionConfig,\n  ResourceDimensionConfig,\n  ResourceDimensionMode,\n  getPublicOrAbsoluteUrl,\n} from 'app/features/dimensions';\nimport { DimensionContext } from 'app/features/dimensions/context';\nimport { ColorDimensionEditor, ResourceDimensionEditor } from 'app/features/dimensions/editors';\nimport { APIEditorConfig, callApi } from 'app/plugins/panel/canvas/editor/APIEditor';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\nimport { LineConfig } from '../types';\n\nexport interface IconConfig {\n  path?: ResourceDimensionConfig;\n  fill?: ColorDimensionConfig;\n  stroke?: LineConfig;\n  api?: APIEditorConfig;\n}\n\ninterface IconData {\n  path: string;\n  fill: string;\n  strokeColor?: string;\n  stroke?: number;\n  api?: APIEditorConfig;\n}\n\n// When a stoke is defined, we want the path to be in page units\nconst svgStrokePathClass = css`\n  path {\n    vector-effect: non-scaling-stroke;\n  }\n`;\n\nexport function IconDisplay(props: CanvasElementProps) {\n  const { data } = props;\n  if (!data?.path) {\n    return null;\n  }\n\n  const onClick = () => {\n    if (data?.api) {\n      callApi(data.api);\n    }\n  };\n\n  const svgStyle: CSSProperties = {\n    fill: data?.fill,\n    stroke: data?.strokeColor,\n    strokeWidth: data?.stroke,\n    height: '100%',\n    width: '100%',\n  };\n\n  return (\n    <SanitizedSVG\n      onClick={onClick}\n      src={data.path}\n      style={svgStyle}\n      className={svgStyle.strokeWidth ? svgStrokePathClass : undefined}\n    />\n  );\n}\n\nexport const iconItem: CanvasElementItem<IconConfig, IconData> = {\n  id: 'icon',\n  name: 'Icon',\n  description: 'SVG Icon display',\n\n  display: IconDisplay,\n\n  getNewOptions: (options) => ({\n    placement: {\n      width: 100,\n      height: 100,\n      top: 0,\n      left: 0,\n    },\n    ...options,\n    config: {\n      path: {\n        mode: ResourceDimensionMode.Fixed,\n        fixed: 'img/icons/unicons/question-circle.svg',\n      },\n      fill: { fixed: defaultBgColor },\n    },\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: IconConfig) => {\n    let path: string | undefined = undefined;\n    if (cfg.path) {\n      path = ctx.getResource(cfg.path).value();\n    }\n    if (!path || !isString(path)) {\n      path = getPublicOrAbsoluteUrl('img/icons/unicons/question-circle.svg');\n    }\n\n    const data: IconData = {\n      path,\n      fill: cfg.fill ? ctx.getColor(cfg.fill).value() : defaultBgColor,\n      api: cfg?.api ?? undefined,\n    };\n\n    if (cfg.stroke?.width && cfg.stroke.color) {\n      if (cfg.stroke.width > 0) {\n        data.stroke = cfg.stroke?.width;\n        data.strokeColor = ctx.getColor(cfg.stroke.color).value();\n      }\n    }\n    return data;\n  },\n\n  // Heatmap overlay options\n  registerOptionsUI: (builder) => {\n    const category = ['Icon'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'iconSelector',\n        path: 'config.path',\n        name: 'SVG Path',\n        editor: ResourceDimensionEditor,\n        settings: {\n          resourceType: 'icon',\n        },\n      })\n      .addCustomEditor({\n        category,\n        id: 'config.fill',\n        path: 'config.fill',\n        name: 'Fill color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {\n          // Configured values\n          fixed: 'grey',\n        },\n      });\n    // .addSliderInput({\n    //   category,\n    //   path: 'config.stroke.width',\n    //   name: 'Stroke',\n    //   defaultValue: 0,\n    //   settings: {\n    //     min: 0,\n    //     max: 10,\n    //   },\n    // })\n    // .addCustomEditor({\n    //   category,\n    //   id: 'config.stroke.color',\n    //   path: 'config.stroke.color',\n    //   name: 'Stroke color',\n    //   editor: ColorDimensionEditor,\n    //   settings: {},\n    //   defaultValue: {\n    //     // Configured values\n    //     fixed: 'grey',\n    //   },\n    //   showIf: (cfg) => Boolean(cfg?.config?.stroke?.width),\n    // })\n    // .addCustomEditor({\n    //   category,\n    //   id: 'apiSelector',\n    //   path: 'config.api',\n    //   name: 'API',\n    //   editor: APIEditor,\n    // });\n  },\n};\n","import React, { PureComponent } from 'react';\n\nimport { CanvasElementItem, CanvasElementProps } from '../element';\n\ninterface NotFoundConfig {\n  orig?: any;\n}\n\nclass NotFoundDisplay extends PureComponent<CanvasElementProps<NotFoundConfig>> {\n  render() {\n    const { config } = this.props;\n    return (\n      <div>\n        <h3>NOT FOUND:</h3>\n        <pre>{JSON.stringify(config, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n\nexport const notFoundItem: CanvasElementItem<NotFoundConfig> = {\n  id: 'not-found',\n  name: 'Not found',\n  description: 'Display when element type is not found in the registry',\n\n  display: NotFoundDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 100,\n  },\n\n  getNewOptions: () => ({\n    config: {},\n  }),\n};\n","import React, { PureComponent } from 'react';\n\nimport { PluginState } from '@grafana/data/src';\nimport { Button } from '@grafana/ui';\nimport { DimensionContext } from 'app/features/dimensions/context';\nimport { TextDimensionEditor } from 'app/features/dimensions/editors/TextDimensionEditor';\nimport { TextDimensionConfig } from 'app/features/dimensions/types';\nimport { APIEditor, APIEditorConfig, callApi } from 'app/plugins/panel/canvas/editor/APIEditor';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\n\ninterface ButtonData {\n  text?: string;\n  api?: APIEditorConfig;\n}\n\ninterface ButtonConfig {\n  text?: TextDimensionConfig;\n  api?: APIEditorConfig;\n}\n\nclass ButtonDisplay extends PureComponent<CanvasElementProps<ButtonConfig, ButtonData>> {\n  render() {\n    const { data } = this.props;\n    const onClick = () => {\n      if (data?.api) {\n        callApi(data.api);\n      }\n    };\n\n    return (\n      <Button type=\"submit\" onClick={onClick} style={{ background: defaultBgColor }}>\n        {data?.text}\n      </Button>\n    );\n  }\n}\n\nexport const buttonItem: CanvasElementItem<ButtonConfig, ButtonData> = {\n  id: 'button',\n  name: 'Button',\n  description: 'Button',\n  state: PluginState.alpha,\n\n  display: ButtonDisplay,\n\n  defaultSize: {\n    width: 32,\n    height: 32,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n    placement: {\n      width: 32,\n      height: 32,\n      top: 0,\n      left: 0,\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: ButtonConfig) => {\n    const data: ButtonData = {\n      text: cfg?.text ? ctx.getText(cfg.text).value() : '',\n      api: cfg?.api ?? undefined,\n    };\n\n    return data;\n  },\n\n  // Heatmap overlay options\n  registerOptionsUI: (builder) => {\n    const category = ['Button'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'textSelector',\n        path: 'config.text',\n        name: 'Text',\n        editor: TextDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'apiSelector',\n        path: 'config.api',\n        name: 'API',\n        editor: APIEditor,\n      });\n  },\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { DimensionContext, ScalarDimensionConfig } from 'app/features/dimensions';\nimport { ScalarDimensionEditor } from 'app/features/dimensions/editors';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\n\ninterface DroneFrontData {\n  rollAngle?: number;\n}\n\ninterface DroneFrontConfig {\n  rollAngle?: ScalarDimensionConfig;\n}\n\nconst DroneFrontDisplay = ({ data }: CanvasElementProps<DroneFrontConfig, DroneFrontData>) => {\n  const styles = useStyles2(getStyles);\n\n  const droneFrontTransformStyle = `rotate(${data?.rollAngle ? data.rollAngle : 0}deg)`;\n\n  return (\n    <svg\n      className={styles.droneFront}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 1300 290\"\n      style={{ transform: droneFrontTransformStyle, stroke: defaultBgColor }}\n    >\n      <g className=\"arms\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <line x1=\"510\" x2=\"320\" y1=\"100\" y2=\"150\" />\n        <line x1=\"510\" x2=\"320\" y1=\"190\" y2=\"210\" />\n        <line x1=\"790\" x2=\"980\" y1=\"190\" y2=\"210\" />\n        <line x1=\"790\" x2=\"980\" y1=\"100\" y2=\"150\" />\n      </g>\n      <g className=\"body\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <path\n          fill=\"none\"\n          d=\" M 510 130 C 510 124 510 110 510 100 C 510 90 530 71 540 70 C 640 61 670 60 760 70 C 770 71 790 90 790 100 Q 790 120 790 130 L 790 130 Q 790 177 790 196 C 790 207 770 225 760 226 C 670 236 640 236 540 226 C 530 226 510 206 510 196 Q 510 177 510 130 Q 510 133 510 130 Z \"\n        />\n        <circle cx=\"650\" cy=\"160\" r=\"40\" fill=\"none\" />\n      </g>\n      <g className=\"motors\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <path\n          className=\"motor\"\n          fill=\"none\"\n          d=\" M 320 60 L 250 60 L 250 230 L 260 290 L 310 290 L 320 230 L 320 60 Z \"\n        />\n        <path\n          className=\"motor\"\n          fill=\"none\"\n          d=\" M 1050 60 L 980 60 L 980 230 L 990 290 L 1040 290 L 1050 230 L 1050 60 Z \"\n        />\n      </g>\n      <g className=\"propellers\" fill={defaultBgColor}>\n        <path\n          className=\"prop\"\n          d=\" M 270 60 L 300 60 L 300 20 Q 311 30 330 30 Q 349 30 570 10 L 300 10 Q 300 0 290 0 C 286 0 284 0 280 0 Q 270 0 270 10 L 0 10 Q 220 30 240 30 Q 260 30 270 20 L 270 60 Z \"\n        />\n        <path\n          className=\"prop\"\n          d=\" M 1000 60 L 1030 60 L 1030 20 Q 1041 30 1060 30 Q 1079 30 1300 10 L 1030 10 Q 1030 0 1020 0 C 1016 0 1014 0 1010 0 Q 1000 0 1000 10 L 730 10 Q 950 30 970 30 Q 990 30 1000 20 L 1000 60 Z \"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const droneFrontItem: CanvasElementItem<any, any> = {\n  id: 'droneFront',\n  name: 'Drone Front',\n  description: 'Drone front',\n\n  display: DroneFrontDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 26,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n    placement: {\n      width: options?.placement?.width ?? 100,\n      height: options?.placement?.height ?? 26,\n      top: options?.placement?.top,\n      left: options?.placement?.left,\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: DroneFrontConfig) => {\n    const data: DroneFrontData = {\n      rollAngle: cfg?.rollAngle ? ctx.getScalar(cfg.rollAngle).value() : 0,\n    };\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Drone Front'];\n    builder.addCustomEditor({\n      category,\n      id: 'rollAngle',\n      path: 'config.rollAngle',\n      name: 'Roll Angle',\n      editor: ScalarDimensionEditor,\n    });\n  },\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  droneFront: css`\n    transition: transform 0.4s;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { DimensionContext, ScalarDimensionConfig } from 'app/features/dimensions';\nimport { ScalarDimensionEditor } from 'app/features/dimensions/editors';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\n\ninterface DroneSideData {\n  pitchAngle?: number;\n}\n\ninterface DroneSideConfig {\n  pitchAngle?: ScalarDimensionConfig;\n}\n\nconst DroneSideDisplay = ({ data }: CanvasElementProps<DroneSideConfig, DroneSideData>) => {\n  const styles = useStyles2(getStyles);\n\n  const droneSidePitchTransformStyle = `rotate(${data?.pitchAngle ? data.pitchAngle : 0}deg)`;\n\n  return (\n    <svg\n      className={styles.droneSide}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 1300 290\"\n      style={{ transform: droneSidePitchTransformStyle, stroke: defaultBgColor }}\n    >\n      <g className=\"arms\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <line x1=\"510\" x2=\"320\" y1=\"100\" y2=\"150\" />\n        <line x1=\"510\" x2=\"320\" y1=\"190\" y2=\"210\" />\n        <line x1=\"790\" x2=\"980\" y1=\"190\" y2=\"210\" />\n        <line x1=\"790\" x2=\"980\" y1=\"100\" y2=\"150\" />\n      </g>\n      <g className=\"body\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <path\n          fill=\"none\"\n          d=\" M 510 130 C 510 124 510 110 510 100 C 510 90 530 71 540 70 C 640 61 670 60 760 70 C 770 71 790 90 790 100 Q 790 120 790 130 L 790 130 Q 790 177 790 196 C 790 207 770 225 760 226 C 670 236 640 236 540 226 C 530 226 510 206 510 196 Q 510 177 510 130 Q 510 133 510 130 Z \"\n        />\n      </g>\n      <g className=\"motors\" stroke={defaultBgColor} strokeWidth=\"28px\">\n        <path\n          className=\"motor\"\n          fill=\"none\"\n          d=\" M 320 60 L 250 60 L 250 230 L 260 290 L 310 290 L 320 230 L 320 60 Z \"\n        />\n        <path\n          className=\"motor\"\n          fill=\"none\"\n          d=\" M 1050 60 L 980 60 L 980 230 L 990 290 L 1040 290 L 1050 230 L 1050 60 Z \"\n        />\n      </g>\n      <g className=\"propellers\" fill={defaultBgColor}>\n        <path\n          className=\"prop\"\n          d=\" M 270 60 L 300 60 L 300 20 Q 311 30 330 30 Q 349 30 570 10 L 300 10 Q 300 0 290 0 C 286 0 284 0 280 0 Q 270 0 270 10 L 0 10 Q 220 30 240 30 Q 260 30 270 20 L 270 60 Z \"\n        />\n        <path\n          className=\"prop\"\n          d=\" M 1000 60 L 1030 60 L 1030 20 Q 1041 30 1060 30 Q 1079 30 1300 10 L 1030 10 Q 1030 0 1020 0 C 1016 0 1014 0 1010 0 Q 1000 0 1000 10 L 730 10 Q 950 30 970 30 Q 990 30 1000 20 L 1000 60 Z \"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const droneSideItem: CanvasElementItem<any, any> = {\n  id: 'droneSide',\n  name: 'Drone Side',\n  description: 'Drone Side',\n\n  display: DroneSideDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 26,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n    placement: {\n      width: options?.placement?.width ?? 100,\n      height: options?.placement?.height ?? 26,\n      top: options?.placement?.top,\n      left: options?.placement?.left,\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: DroneSideConfig) => {\n    const data: DroneSideData = {\n      pitchAngle: cfg?.pitchAngle ? ctx.getScalar(cfg.pitchAngle).value() : 0,\n    };\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Drone Side'];\n    builder.addCustomEditor({\n      category,\n      id: 'pitchAngle',\n      path: 'config.pitchAngle',\n      name: 'Pitch Angle',\n      editor: ScalarDimensionEditor,\n    });\n  },\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  droneSide: css`\n    transition: transform 0.4s;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { DimensionContext, ScalarDimensionConfig } from 'app/features/dimensions';\nimport { ScalarDimensionEditor } from 'app/features/dimensions/editors';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\n\ninterface DroneTopData {\n  bRightRotorRPM?: number;\n  bLeftRotorRPM?: number;\n  fRightRotorRPM?: number;\n  fLeftRotorRPM?: number;\n  yawAngle?: number;\n}\n\ninterface DroneTopConfig {\n  bRightRotorRPM?: ScalarDimensionConfig;\n  bLeftRotorRPM?: ScalarDimensionConfig;\n  fRightRotorRPM?: ScalarDimensionConfig;\n  fLeftRotorRPM?: ScalarDimensionConfig;\n  yawAngle?: ScalarDimensionConfig;\n}\n\nconst DroneTopDisplay = ({ data }: CanvasElementProps<DroneTopConfig, DroneTopData>) => {\n  const styles = useStyles2(getStyles);\n\n  const fRightRotorAnimation = `spin ${data?.fRightRotorRPM ? 60 / Math.abs(data.fRightRotorRPM) : 0}s linear infinite`;\n\n  const fLeftRotorAnimation = `spin ${data?.fLeftRotorRPM ? 60 / Math.abs(data.fLeftRotorRPM) : 0}s linear infinite`;\n\n  const bRightRotorAnimation = `spin ${data?.bRightRotorRPM ? 60 / Math.abs(data.bRightRotorRPM) : 0}s linear infinite`;\n\n  const bLeftRotorAnimation = `spin ${data?.bLeftRotorRPM ? 60 / Math.abs(data.bLeftRotorRPM) : 0}s linear infinite`;\n\n  const droneTopTransformStyle = `rotate(${data?.yawAngle ? data.yawAngle : 0}deg)`;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"-43 -43 640 640\"\n      xmlSpace=\"preserve\"\n      style={{ transform: droneTopTransformStyle, fill: defaultBgColor }}\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\" M 137.95 127.967 C 137.14 127.157 136.189 126.58 135.178 126.218 C 138.173 121.545 139.967 116.036 140.125 110.123 L 217.64 151.862 C 214.049 157.411 211.8 163.922 211.386 170.95 L 209.694 199.712 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 L 137.95 127.967 Z  M 134.268 426.981 C 130.211 421.314 124.328 417.045 117.482 415.041 L 201.999 330.523 L 201.385 340.955 C 200.67 353.107 202.829 364.914 207.563 375.673 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 L 134.268 426.981 Z  M 324.765 373.673 L 228.527 373.673 Q 215.374 358.611 216.361 341.835 L 226.361 171.832 C 226.825 163.94 231.012 157.096 237.146 152.957 L 316.146 152.957 C 322.28 157.096 326.466 163.94 326.931 171.832 L 336.931 341.835 Q 337.918 358.611 324.765 373.673 L 324.765 373.673 L 324.765 373.673 L 324.765 373.673 L 324.765 373.673 L 324.765 373.673 L 324.765 373.673 Z  M 435.81 415.041 C 428.964 417.045 423.081 421.314 419.024 426.981 L 345.727 375.673 C 350.461 364.914 352.62 353.107 351.905 340.955 L 351.291 330.523 L 435.81 415.041 L 435.81 415.041 L 435.81 415.041 L 435.81 415.041 L 435.81 415.041 L 435.81 415.041 Z  M 343.596 199.713 L 341.904 170.951 C 341.49 163.923 339.242 157.411 335.651 151.863 L 413.167 110.124 C 413.325 116.037 415.119 121.546 418.114 126.219 C 417.103 126.581 416.152 127.158 415.342 127.968 L 343.596 199.713 L 343.596 199.713 L 343.596 199.713 L 343.596 199.713 L 343.596 199.713 Z  M 444.646 92.771 C 453.744 92.771 461.146 100.172 461.146 109.271 C 461.146 118.369 453.744 125.771 444.646 125.771 C 435.548 125.771 428.146 118.369 428.146 109.271 C 428.146 100.172 435.548 92.771 444.646 92.771 L 444.646 92.771 L 444.646 92.771 L 444.646 92.771 Z  M 108.647 92.771 C 117.745 92.771 125.147 100.172 125.147 109.271 C 125.147 118.369 117.745 125.771 108.647 125.771 C 99.549 125.771 92.147 118.369 92.147 109.271 C 92.147 100.172 99.549 92.771 108.647 92.771 L 108.647 92.771 L 108.647 92.771 Z  M 108.647 461.771 C 99.549 461.771 92.147 454.369 92.147 445.271 C 92.147 436.172 99.549 428.771 108.647 428.771 C 117.745 428.771 125.147 436.172 125.147 445.271 C 125.147 454.369 117.745 461.771 108.647 461.771 L 108.647 461.771 Z  M 92.322 136.202 C 97.086 139.1 102.675 140.771 108.647 140.771 C 114.883 140.771 120.697 138.941 125.594 135.802 C 125.956 136.813 126.534 137.764 127.343 138.573 L 207.342 218.573 C 207.711 218.942 208.109 219.264 208.528 219.54 L 203.212 309.908 C 201.794 310.182 200.44 310.869 199.342 311.967 L 95.343 415.967 C 94.954 416.356 94.62 416.779 94.335 417.224 C 93.651 417.575 92.976 417.942 92.322 418.34 Q 84.615 424.182 81.716 428.946 C 78.817 433.71 77.147 439.299 77.147 445.271 C 77.147 462.64 91.278 476.771 108.647 476.771 C 114.619 476.771 120.208 475.1 124.972 472.202 C 129.736 469.304 132.678 466.36 135.577 461.596 C 138.476 456.832 140.147 451.243 140.147 445.271 C 140.147 443.943 140.055 442.637 139.895 441.352 L 214.997 388.78 C 217.05 391.677 336.242 391.678 338.295 388.78 L 413.398 441.352 C 413.238 442.637 413.146 443.943 413.146 445.271 C 413.146 451.243 414.817 456.832 417.715 461.596 C 420.613 466.36 423.557 469.304 428.321 472.202 C 433.085 475.1 438.674 476.771 444.646 476.771 C 462.015 476.771 476.146 462.64 476.146 445.271 C 476.146 439.299 474.475 433.71 471.577 428.946 C 468.679 424.182 459.642 417.575 458.958 417.224 C 458.672 416.779 458.339 416.356 457.95 415.967 L 353.95 311.967 C 352.852 310.869 351.498 310.182 350.08 309.908 L 344.764 219.54 C 345.183 219.264 345.581 218.942 345.95 218.573 L 425.95 138.573 C 426.76 137.763 427.337 136.812 427.699 135.802 C 432.596 138.941 438.409 140.771 444.646 140.771 C 450.618 140.771 456.207 139.1 460.971 136.202 C 465.735 133.304 468.679 130.36 471.577 125.596 C 474.475 120.832 476.146 115.243 476.146 109.271 C 476.146 91.903 462.015 77.772 444.646 77.772 C 438.674 77.772 433.085 79.442 428.321 82.34 L 416.215 91.446 L 324.765 140.688 C 318.402 136.324 310.718 133.771 302.473 133.771 L 250.819 133.771 C 242.574 133.771 234.89 136.324 228.527 140.688 L 137.078 91.446 L 124.972 82.34 C 120.208 79.442 114.619 77.772 108.647 77.772 C 91.278 77.772 77.147 91.903 77.147 109.271 C 77.147 115.243 78.818 120.832 81.716 125.595 C 84.614 130.358 87.558 133.304 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 L 92.322 136.202 Z  M 444.646 461.771 C 435.548 461.771 428.146 454.369 428.146 445.271 C 428.146 436.172 435.548 428.771 444.646 428.771 C 453.744 428.771 461.146 436.172 461.146 445.271 C 461.146 454.369 453.744 461.771 444.646 461.771 Z \"\n      />\n      <path\n        fillRule=\"evenodd\"\n        d=\" M 259.458 334.235 L 259.458 337.211 L 254.514 337.211 L 254.514 350.795 L 250.842 350.795 L 250.842 337.211 L 245.898 337.211 L 245.898 334.235 L 259.458 334.235 Z  M 266.226 347.939 L 272.586 347.939 L 272.754 350.627 L 272.754 350.627 Q 270.498 350.867 265.074 350.867 L 265.074 350.867 L 265.074 350.867 Q 263.418 350.867 262.434 349.967 L 262.434 349.967 L 262.434 349.967 Q 261.45 349.067 261.426 347.531 L 261.426 347.531 L 261.426 337.499 L 261.426 337.499 Q 261.45 335.963 262.434 335.063 L 262.434 335.063 L 262.434 335.063 Q 263.418 334.163 265.074 334.163 L 265.074 334.163 L 265.074 334.163 Q 270.498 334.163 272.754 334.403 L 272.754 334.403 L 272.586 337.115 L 266.226 337.115 L 266.226 337.115 Q 265.626 337.115 265.362 337.403 L 265.362 337.403 L 265.362 337.403 Q 265.098 337.691 265.098 338.339 L 265.098 338.339 L 265.098 340.859 L 271.698 340.859 L 271.698 343.499 L 265.098 343.499 L 265.098 346.691 L 265.098 346.691 Q 265.098 347.363 265.362 347.651 L 265.362 347.651 L 265.362 347.651 Q 265.626 347.939 266.226 347.939 L 266.226 347.939 Z  M 275.202 333.995 L 278.73 333.995 L 278.73 346.931 L 278.73 346.931 Q 278.73 348.131 280.074 348.131 L 280.074 348.131 L 281.034 348.131 L 281.442 350.603 L 281.442 350.603 Q 280.53 351.083 278.61 351.083 L 278.61 351.083 L 278.61 351.083 Q 277.026 351.083 276.114 350.231 L 276.114 350.231 L 276.114 350.231 Q 275.202 349.379 275.202 347.819 L 275.202 347.819 L 275.202 333.995 Z  M 283.05 333.995 L 286.578 333.995 L 286.578 346.931 L 286.578 346.931 Q 286.578 348.131 287.922 348.131 L 287.922 348.131 L 288.882 348.131 L 289.29 350.603 L 289.29 350.603 Q 288.378 351.083 286.458 351.083 L 286.458 351.083 L 286.458 351.083 Q 284.874 351.083 283.962 350.231 L 283.962 350.231 L 283.962 350.231 Q 283.05 349.379 283.05 347.819 L 283.05 347.819 L 283.05 333.995 Z  M 292.086 335.759 L 292.086 335.759 L 292.086 335.759 Q 293.634 333.923 297.618 333.923 L 297.618 333.923 L 297.618 333.923 Q 301.602 333.923 303.162 335.759 L 303.162 335.759 L 303.162 335.759 Q 304.722 337.595 304.722 342.515 L 304.722 342.515 L 304.722 342.515 Q 304.722 347.435 303.162 349.271 L 303.162 349.271 L 303.162 349.271 Q 301.602 351.107 297.618 351.107 L 297.618 351.107 L 297.618 351.107 Q 293.634 351.107 292.086 349.271 L 292.086 349.271 L 292.086 349.271 Q 290.538 347.435 290.538 342.515 L 290.538 342.515 L 290.538 342.515 Q 290.538 337.595 292.086 335.759 Z  M 300.174 338.051 L 300.174 338.051 L 300.174 338.051 Q 299.49 336.875 297.618 336.875 L 297.618 336.875 L 297.618 336.875 Q 295.746 336.875 295.062 338.051 L 295.062 338.051 L 295.062 338.051 Q 294.378 339.227 294.378 342.515 L 294.378 342.515 L 294.378 342.515 Q 294.378 345.803 295.062 346.979 L 295.062 346.979 L 295.062 346.979 Q 295.746 348.155 297.618 348.155 L 297.618 348.155 L 297.618 348.155 Q 299.49 348.155 300.174 346.979 L 300.174 346.979 L 300.174 346.979 Q 300.858 345.803 300.858 342.515 L 300.858 342.515 L 300.858 342.515 Q 300.858 339.227 300.174 338.051 Z \"\n      />\n      <g className=\"propeller-group\">\n        <path\n          className={`${styles.propeller} ${styles.propellerCW}`}\n          style={{ animation: bRightRotorAnimation }}\n          d=\" M 461.563 418.77 L 463.992 416.34 Q 465.495 407.116 466.461 400.395 C 467.426 393.675 469.363 388.087 474.731 383.284 Q 533.862 341.514 538.196 338.859 C 542.529 336.203 548.345 334.299 551.492 338.29 C 554.639 342.282 553.481 346.02 549.419 350.082 L 471.147 428.354 L 461.563 418.77 Z  M 427.729 471.772 L 425.299 474.202 Q 423.797 483.426 422.831 490.146 C 421.866 496.867 419.929 502.454 414.561 507.257 Q 355.43 549.028 351.096 551.683 C 346.763 554.338 340.947 556.243 337.8 552.251 C 334.653 548.26 335.811 544.522 339.873 540.46 L 418.145 462.187 L 427.729 471.772 Z \"\n        />\n        <path\n          className={`${styles.propeller} ${styles.propellerCCW}`}\n          style={{ animation: fRightRotorAnimation }}\n          d=\" M 461.563 135.773 L 463.992 138.203 Q 465.495 147.426 466.461 154.147 C 467.426 160.868 469.363 166.455 474.731 171.258 Q 533.862 213.028 538.196 215.684 C 542.529 218.339 548.345 220.244 551.492 216.252 C 554.639 212.26 553.481 208.523 549.419 204.46 L 471.147 126.188 L 461.563 135.773 Z  M 427.729 82.77 L 425.299 80.34 Q 423.797 71.117 422.831 64.396 C 421.866 57.675 419.929 52.088 414.561 47.285 Q 355.43 5.515 351.096 2.859 C 346.763 0.204 340.947 -1.701 337.8 2.291 C 334.653 6.282 335.811 10.02 339.873 14.082 L 418.145 92.355 L 427.729 82.77 Z \"\n        />\n        <path\n          className={`${styles.propeller} ${styles.propellerCCW}`}\n          style={{ animation: bLeftRotorAnimation }}\n          d=\" M 125.563 471.772 L 127.993 474.202 Q 129.496 483.426 130.461 490.146 C 131.427 496.867 133.363 502.454 138.731 507.257 Q 197.863 549.028 202.196 551.683 C 206.53 554.338 212.345 556.243 215.492 552.251 C 218.639 548.26 217.482 544.522 213.419 540.46 L 135.148 462.187 L 125.563 471.772 Z  M 91.73 418.77 L 89.3 416.34 Q 87.797 407.116 86.832 400.395 C 85.866 393.675 83.93 388.087 78.562 383.284 Q 19.431 341.514 15.097 338.859 C 10.763 336.203 4.948 334.299 1.801 338.29 C -1.346 342.282 -0.189 346.02 3.874 350.082 L 82.146 428.354 L 91.73 418.77 Z \"\n        />\n        <path\n          className={`${styles.propeller} ${styles.propellerCW}`}\n          style={{ animation: fLeftRotorAnimation }}\n          d=\" M 125.563 82.77 L 127.993 80.34 Q 129.496 71.117 130.461 64.396 C 131.427 57.675 133.363 52.088 138.731 47.285 Q 197.863 5.515 202.196 2.859 C 206.53 0.204 212.345 -1.701 215.492 2.291 C 218.639 6.282 217.482 10.02 213.419 14.083 L 135.147 92.355 L 125.563 82.77 Z  M 91.73 135.773 L 89.3 138.203 Q 87.797 147.426 86.832 154.147 C 85.866 160.868 83.93 166.455 78.562 171.258 Q 19.431 213.028 15.097 215.684 C 10.763 218.339 4.948 220.243 1.801 216.252 C -1.346 212.26 -0.189 208.523 3.874 204.46 L 82.146 126.188 L 91.73 135.773 Z \"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const droneTopItem: CanvasElementItem<any, any> = {\n  id: 'droneTop',\n  name: 'Drone Top',\n  description: 'Drone top',\n\n  display: DroneTopDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 100,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: DroneTopConfig) => {\n    const data: DroneTopData = {\n      bRightRotorRPM: cfg?.bRightRotorRPM ? ctx.getScalar(cfg.bRightRotorRPM).value() : 0,\n      bLeftRotorRPM: cfg?.bLeftRotorRPM ? ctx.getScalar(cfg.bLeftRotorRPM).value() : 0,\n      fRightRotorRPM: cfg?.fRightRotorRPM ? ctx.getScalar(cfg.fRightRotorRPM).value() : 0,\n      fLeftRotorRPM: cfg?.fLeftRotorRPM ? ctx.getScalar(cfg.fLeftRotorRPM).value() : 0,\n      yawAngle: cfg?.yawAngle ? ctx.getScalar(cfg.yawAngle).value() : 0,\n    };\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Drone Top'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'yawAngle',\n        path: 'config.yawAngle',\n        name: 'Yaw Angle',\n        editor: ScalarDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'fRightRotorRPM',\n        path: 'config.fRightRotorRPM',\n        name: 'Front Right Rotor RPM',\n        editor: ScalarDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'fLeftRotorRPM',\n        path: 'config.fLeftRotorRPM',\n        name: 'Front Left Rotor RPM',\n        editor: ScalarDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'bRightRotorRPM',\n        path: 'config.bRightRotorRPM',\n        name: 'Back Right Rotor RPM',\n        editor: ScalarDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'bLeftRotorRPM',\n        path: 'config.bLeftRotorRPM',\n        name: 'Back Left Rotor RPM',\n        editor: ScalarDimensionEditor,\n      });\n  },\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  propeller: css`\n    transform-origin: 50% 50%;\n    transform-box: fill-box;\n    display: block;\n    @keyframes spin {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  `,\n  propellerCW: css`\n    animation-direction: normal;\n  `,\n  propellerCCW: css`\n    animation-direction: reverse;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport { useObservable } from 'react-use';\nimport { of } from 'rxjs';\n\nimport { DataFrame, FieldNamePickerConfigSettings, GrafanaTheme2, StandardEditorsRegistryItem } from '@grafana/data';\nimport { usePanelContext, useStyles2 } from '@grafana/ui';\nimport { FieldNamePicker } from '@grafana/ui/src/components/MatchersUI/FieldNamePicker';\nimport { TextDimensionMode } from 'app/features/dimensions';\nimport { DimensionContext } from 'app/features/dimensions/context';\nimport { ColorDimensionEditor } from 'app/features/dimensions/editors/ColorDimensionEditor';\nimport { TextDimensionEditor } from 'app/features/dimensions/editors/TextDimensionEditor';\n\nimport { getDataLinks } from '../../../plugins/panel/canvas/utils';\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor, defaultTextColor } from '../element';\nimport { ElementState } from '../runtime/element';\nimport { Align, TextConfig, TextData, VAlign } from '../types';\n\n// eslint-disable-next-line\nconst dummyFieldSettings: StandardEditorsRegistryItem<string, FieldNamePickerConfigSettings> = {\n  settings: {},\n} as StandardEditorsRegistryItem<string, FieldNamePickerConfigSettings>;\n\nconst MetricValueDisplay = (props: CanvasElementProps<TextConfig, TextData>) => {\n  const { data, isSelected, config } = props;\n  const styles = useStyles2(getStyles(data));\n\n  const context = usePanelContext();\n  const scene = context.instanceState?.scene;\n  let panelData: DataFrame[];\n  panelData = context.instanceState?.scene?.data.series;\n\n  const isEditMode = useObservable<boolean>(scene?.editModeEnabled ?? of(false));\n\n  const getDisplayValue = () => {\n    if (panelData && config.text?.field && fieldNotFound()) {\n      return 'Field not found';\n    }\n\n    return data?.text ? data.text : 'Double click to set field';\n  };\n\n  const fieldNotFound = () => {\n    const field = panelData.filter((series) => series.fields.find((field) => field.name === config.text?.field));\n    return !field.length;\n  };\n\n  if (isEditMode && isSelected) {\n    return <MetricValueEdit {...props} />;\n  }\n\n  return (\n    <div className={styles.container}>\n      <span className={styles.span}>{getDisplayValue()}</span>\n    </div>\n  );\n};\n\nconst MetricValueEdit = (props: CanvasElementProps<TextConfig, TextData>) => {\n  let { data, config } = props;\n  const context = usePanelContext();\n  let panelData: DataFrame[];\n  panelData = context.instanceState?.scene?.data.series;\n\n  const onFieldChange = useCallback(\n    (field: string | undefined) => {\n      let selectedElement: ElementState;\n      selectedElement = context.instanceState?.selected[0];\n      if (selectedElement) {\n        const options = selectedElement.options;\n        selectedElement.onChange({\n          ...options,\n          config: {\n            ...options.config,\n            text: { fixed: '', field: field, mode: TextDimensionMode.Field },\n          },\n          background: {\n            color: { field: field, fixed: options.background?.color?.fixed ?? '' },\n          },\n        });\n\n        // Force a re-render (update scene data after config update)\n        const scene = context.instanceState?.scene;\n        if (scene) {\n          scene.editModeEnabled.next(false);\n          scene.updateData(scene.data);\n        }\n      }\n    },\n    [context.instanceState?.scene, context.instanceState?.selected]\n  );\n\n  const styles = useStyles2(getStyles(data));\n  return (\n    <div className={styles.inlineEditorContainer}>\n      {panelData && (\n        <FieldNamePicker\n          context={{ data: panelData }}\n          value={config.text?.field ?? ''}\n          onChange={onFieldChange}\n          item={dummyFieldSettings}\n        />\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (data: TextData | undefined) => (theme: GrafanaTheme2) => ({\n  container: css`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    display: table;\n  `,\n  inlineEditorContainer: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 10px;\n  `,\n  span: css`\n    display: table-cell;\n    vertical-align: ${data?.valign};\n    text-align: ${data?.align};\n    font-size: ${data?.size}px;\n    color: ${data?.color};\n  `,\n});\n\nexport const metricValueItem: CanvasElementItem<TextConfig, TextData> = {\n  id: 'metric-value',\n  name: 'Metric Value',\n  description: 'Display a field value',\n\n  display: MetricValueDisplay,\n\n  hasEditMode: true,\n\n  defaultSize: {\n    width: 260,\n    height: 50,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    config: {\n      align: Align.Center,\n      valign: VAlign.Middle,\n      color: {\n        fixed: defaultTextColor,\n      },\n      text: { mode: TextDimensionMode.Field, fixed: '', field: '' },\n      size: 20,\n    },\n    background: {\n      color: {\n        fixed: defaultBgColor,\n      },\n    },\n    placement: {\n      top: 100,\n      left: 100,\n    },\n  }),\n\n  prepareData: (ctx: DimensionContext, cfg: TextConfig) => {\n    const data: TextData = {\n      text: cfg.text ? ctx.getText(cfg.text).value() : '',\n      align: cfg.align ?? Align.Center,\n      valign: cfg.valign ?? VAlign.Middle,\n      size: cfg.size,\n    };\n\n    if (cfg.color) {\n      data.color = ctx.getColor(cfg.color).value();\n    }\n\n    data.links = getDataLinks(ctx, cfg, data.text);\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Metric value'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'textSelector',\n        path: 'config.text',\n        name: 'Text',\n        editor: TextDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'config.color',\n        path: 'config.color',\n        name: 'Text color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {},\n      })\n      .addRadio({\n        category,\n        path: 'config.align',\n        name: 'Align text',\n        settings: {\n          options: [\n            { value: Align.Left, label: 'Left' },\n            { value: Align.Center, label: 'Center' },\n            { value: Align.Right, label: 'Right' },\n          ],\n        },\n        defaultValue: Align.Left,\n      })\n      .addRadio({\n        category,\n        path: 'config.valign',\n        name: 'Vertical align',\n        settings: {\n          options: [\n            { value: VAlign.Top, label: 'Top' },\n            { value: VAlign.Middle, label: 'Middle' },\n            { value: VAlign.Bottom, label: 'Bottom' },\n          ],\n        },\n        defaultValue: VAlign.Middle,\n      })\n      .addNumberInput({\n        category,\n        path: 'config.size',\n        name: 'Text size',\n        settings: {\n          placeholder: 'Auto',\n        },\n      });\n  },\n};\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { DimensionContext } from 'app/features/dimensions/context';\nimport { ColorDimensionEditor } from 'app/features/dimensions/editors/ColorDimensionEditor';\nimport { TextDimensionEditor } from 'app/features/dimensions/editors/TextDimensionEditor';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor, defaultTextColor } from '../element';\nimport { Align, TextConfig, TextData, VAlign } from '../types';\n\nclass RectangleDisplay extends PureComponent<CanvasElementProps<TextConfig, TextData>> {\n  render() {\n    const { data } = this.props;\n    const styles = getStyles(config.theme2, data);\n    return (\n      <div className={styles.container}>\n        <span className={styles.span}>{data?.text}</span>\n      </div>\n    );\n  }\n}\nconst getStyles = stylesFactory((theme: GrafanaTheme2, data) => ({\n  container: css`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    display: table;\n  `,\n  span: css`\n    display: table-cell;\n    vertical-align: ${data?.valign};\n    text-align: ${data?.align};\n    font-size: ${data?.size}px;\n    color: ${data?.color};\n  `,\n}));\nexport const rectangleItem: CanvasElementItem<TextConfig, TextData> = {\n  id: 'rectangle',\n  name: 'Rectangle',\n  description: 'Rectangle',\n\n  display: RectangleDisplay,\n\n  defaultSize: {\n    width: 240,\n    height: 160,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    config: {\n      align: Align.Center,\n      valign: VAlign.Middle,\n      color: {\n        fixed: defaultTextColor,\n      },\n    },\n    background: {\n      color: {\n        fixed: defaultBgColor,\n      },\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: TextConfig) => {\n    const data: TextData = {\n      text: cfg.text ? ctx.getText(cfg.text).value() : '',\n      align: cfg.align ?? Align.Center,\n      valign: cfg.valign ?? VAlign.Middle,\n      size: cfg.size,\n    };\n\n    if (cfg.color) {\n      data.color = ctx.getColor(cfg.color).value();\n    }\n\n    return data;\n  },\n\n  // Heatmap overlay options\n  registerOptionsUI: (builder) => {\n    const category = ['Rectangle'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'textSelector',\n        path: 'config.text',\n        name: 'Text',\n        editor: TextDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'config.color',\n        path: 'config.color',\n        name: 'Text color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {},\n      })\n      .addRadio({\n        category,\n        path: 'config.align',\n        name: 'Align text',\n        settings: {\n          options: [\n            { value: Align.Left, label: 'Left' },\n            { value: Align.Center, label: 'Center' },\n            { value: Align.Right, label: 'Right' },\n          ],\n        },\n        defaultValue: Align.Left,\n      })\n      .addRadio({\n        category,\n        path: 'config.valign',\n        name: 'Vertical align',\n        settings: {\n          options: [\n            { value: VAlign.Top, label: 'Top' },\n            { value: VAlign.Middle, label: 'Middle' },\n            { value: VAlign.Bottom, label: 'Bottom' },\n          ],\n        },\n        defaultValue: VAlign.Middle,\n      })\n      .addNumberInput({\n        category,\n        path: 'config.size',\n        name: 'Text size',\n        settings: {\n          placeholder: 'Auto',\n        },\n      });\n  },\n};\n","import React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getServerStyles, ServerData } from '../server';\n\nexport const ServerDatabase = (data: ServerData) => {\n  const styles = useStyles2(getServerStyles(data));\n  return (\n    <g className={styles.outline}>\n      <g className={styles.server}>\n        <path d=\"m2.6953 37.5v20.883c0 7.6725 15.592 13.922 34.805 13.922s34.805-6.2493 34.805-13.922v-20.883\" />\n        <path d=\"m2.6953 16.617v20.883c0 7.7035 15.592 13.922 34.805 13.922s34.805-6.2184 34.805-13.922v-20.883\" />\n        <path d=\"m37.5 30.539c19.212 0 34.805-6.2185 34.805-13.922 0-7.7034-15.592-13.922-34.805-13.922s-34.805 6.2184-34.805 13.922c0 7.7035 15.592 13.922 34.805 13.922z\" />\n      </g>\n      <g className={styles.circleBack}>\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -132.86 -110.58)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -122.04 -111.7)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -111.21 -114.77)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n      </g>\n      <g className={styles.circle}>\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -52.337 -30.65)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -41.518 -31.769)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -30.688 -34.842)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n      </g>\n    </g>\n  );\n};\n","import React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getServerStyles, ServerData } from '../server';\n\nexport const ServerSingle = (data: ServerData) => {\n  const styles = useStyles2(getServerStyles(data));\n  return (\n    <g>\n      <g className={styles.outline} transform=\"matrix(1.01 0 0 1.01 -.375 -.375)\">\n        <g className={styles.server}>\n          <path d=\"m3.2812 55.659 9.125-52.377h50.188l9.125 52.377\" />\n          <path d=\"m3.2812 56.328c0-2.5246 2.0379-4.5625 4.5625-4.5625h59.313c2.5245 0 4.5625 2.0379 4.5625 4.5625v10.828c0 2.5245-2.038 4.5625-4.5625 4.5625h-59.313c-2.5246 0-4.5625-2.038-4.5625-4.5625z\" />\n        </g>\n        <path d=\"m12.406 61.742h30.69\" />\n        <path d=\"m52.8 51.765v19.953\" />\n        <path\n          className={styles.circleBack}\n          transform=\"matrix(2.7592 0 0 2.7592 -109.42 -108.61)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          className={styles.circle}\n          transform=\"matrix(1.4775 0 0 1.4775 -29.697 -29.479)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n      </g>\n    </g>\n  );\n};\n","import React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getServerStyles, ServerData } from '../server';\n\nexport const ServerStack = (data: ServerData) => {\n  const styles = useStyles2(getServerStyles(data));\n  return (\n    <g className={styles.outline} transform=\"translate(.5 .49865)\">\n      <g className={styles.server}>\n        <path d=\"m3.4834 21.768 8.0783-19.456h50.875l8.0784 19.456\" />\n        <path d=\"m2.3125 24.852c0-2.5592 2.0658-4.625 4.625-4.625h60.125c2.5592 0 4.625 2.0658 4.625 4.625v7.8933c0 2.5592-2.0658 4.625-4.625 4.625h-60.125c-2.5592 0-4.625-2.0658-4.625-4.625z\" />\n        <path d=\"m2.3125 42.031c0-2.5592 2.0658-4.6251 4.625-4.6251h60.125c2.5592 0 4.625 2.0659 4.625 4.6251v7.8933c0 2.5592-2.0658 4.625-4.625 4.625h-60.125c-2.5592 0-4.625-2.0658-4.625-4.625z\" />\n        <path d=\"m2.3125 59.172c0-2.5592 2.0658-4.625 4.625-4.625h60.125c2.5592 0 4.625 2.0658 4.625 4.625v7.8933c0 2.5592-2.0658 4.625-4.625 4.625h-60.125c-2.5592 0-4.625-2.0658-4.625-4.625z\" />\n      </g>\n      <path d=\"m11.562 28.797h31.111\" />\n      <path d=\"m52.508 20.227v17.143\" />\n      <path d=\"m11.562 63.117h31.111\" />\n      <path d=\"m52.508 54.547v17.143\" />\n      <path d=\"m11.562 45.977h31.111\" />\n      <path d=\"m52.508 37.406v17.143\" />\n      <g className={styles.circleBack}>\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -111.31 -143.2)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -111.31 -126.14)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(2.7868 0 0 2.7868 -111.31 -108.86)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n      </g>\n      <g className={styles.circle}>\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -30.794 -63.277)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -30.794 -46.209)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n        <path\n          transform=\"matrix(1.4922 0 0 1.4922 -30.794 -28.93)\"\n          d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n        />\n      </g>\n    </g>\n  );\n};\n","import React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getServerStyles, ServerData } from '../server';\n\nexport const ServerTerminal = (data: ServerData) => {\n  const styles = useStyles2(getServerStyles(data));\n  return (\n    <g className={styles.outline}>\n      <g className={styles.server}>\n        <path d=\"m5.3125 9.6562c0-3.5621 2.8754-6.4375 6.4375-6.4375h51.5c3.5621 0 6.4375 2.8754 6.4375 6.4375v28.625c0 3.5621-2.8754 6.4375-6.4375 6.4375h-51.5c-3.5621 0-6.4375-2.8754-6.4375-6.4375z\" />\n        <path d=\"m2.8125 59.859c0-2.5592 2.0658-4.625 4.625-4.625h60.125c2.5592 0 4.625 2.0658 4.625 4.625v7.8933c0 2.5592-2.0658 4.625-4.625 4.625h-60.125c-2.5592 0-4.625-2.0658-4.625-4.625z\" />\n      </g>\n      <path d=\"m37.5 46.719v2.875\" />\n      <path d=\"m24.625 51.343h25.75\" />\n      <path d=\"m12.062 63.804h31.111\" />\n      <path d=\"m53.008 55.234v17.143\" />\n      <path\n        className={styles.circleBack}\n        transform=\"matrix(2.7868 0 0 2.7868 -110.81 -108.2)\"\n        d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n      />\n      <path\n        className={styles.circle}\n        transform=\"matrix(1.4922 0 0 1.4922 -30.294 -28.27)\"\n        d=\"m62.198 60.586c.6388 0 1.1558.5171 1.1558 1.1559 0 .6387-.517 1.1558-1.1558 1.1558-.6387 0-1.1558-.5171-1.1558-1.1558 0-.6388.5171-1.1559 1.1558-1.1559z\"\n      />\n    </g>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport config from 'app/core/config';\nimport { ColorDimensionConfig, DimensionContext, ScalarDimensionConfig } from 'app/features/dimensions';\nimport { ColorDimensionEditor, ScalarDimensionEditor } from 'app/features/dimensions/editors';\n\nimport { CanvasElementItem, CanvasElementProps } from '../../element';\n\nimport { ServerDatabase } from './types/database';\nimport { ServerSingle } from './types/single';\nimport { ServerStack } from './types/stack';\nimport { ServerTerminal } from './types/terminal';\n\ninterface ServerConfig {\n  blinkRate?: ScalarDimensionConfig;\n  statusColor?: ColorDimensionConfig;\n  bulbColor?: ColorDimensionConfig;\n  type: ServerType;\n}\n\nexport interface ServerData {\n  blinkRate?: number;\n  statusColor?: string;\n  bulbColor?: string;\n  type: ServerType;\n}\n\nenum ServerType {\n  Single = 'Single',\n  Stack = 'Stack',\n  Database = 'Database',\n  Terminal = 'Terminal',\n}\n\ntype Props = CanvasElementProps<ServerConfig, ServerData>;\nconst outlineColor = config.theme2.colors.text.primary;\n\nconst ServerDisplay = ({ data }: Props) => {\n  return data ? (\n    <svg viewBox=\"0 0 75 75\">\n      {data.type === ServerType.Single ? (\n        <ServerSingle {...data} />\n      ) : data.type === ServerType.Stack ? (\n        <ServerStack {...data} />\n      ) : data.type === ServerType.Database ? (\n        <ServerDatabase {...data} />\n      ) : data.type === ServerType.Terminal ? (\n        <ServerTerminal {...data} />\n      ) : null}\n    </svg>\n  ) : null;\n};\n\nexport const serverItem: CanvasElementItem<ServerConfig, ServerData> = {\n  id: 'server',\n  name: 'Server',\n  description: 'Basic server with status',\n\n  display: ServerDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 100,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n    placement: {\n      width: options?.placement?.width ?? 100,\n      height: options?.placement?.height ?? 100,\n      top: options?.placement?.top,\n      left: options?.placement?.left,\n    },\n    config: {\n      type: ServerType.Single,\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: ServerConfig) => {\n    const data: ServerData = {\n      blinkRate: cfg?.blinkRate ? ctx.getScalar(cfg.blinkRate).value() : 0,\n      statusColor: cfg?.statusColor ? ctx.getColor(cfg.statusColor).value() : 'transparent',\n      bulbColor: cfg?.bulbColor ? ctx.getColor(cfg.bulbColor).value() : 'green',\n      type: cfg.type,\n    };\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Server'];\n    builder\n      .addSelect({\n        category,\n        path: 'config.type',\n        name: 'Type',\n        settings: {\n          options: [\n            { value: ServerType.Single, label: ServerType.Single },\n            { value: ServerType.Stack, label: ServerType.Stack },\n            { value: ServerType.Database, label: ServerType.Database },\n            { value: ServerType.Terminal, label: ServerType.Terminal },\n          ],\n        },\n        defaultValue: ServerType.Single,\n      })\n      .addCustomEditor({\n        category,\n        id: 'statusColor',\n        path: 'config.statusColor',\n        name: 'Status color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {\n          fixed: 'transparent',\n        },\n      })\n      .addCustomEditor({\n        category,\n        id: 'bulbColor',\n        path: 'config.bulbColor',\n        name: 'Bulb color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {\n          fixed: 'green',\n        },\n      })\n      .addCustomEditor({\n        category,\n        id: 'blinkRate',\n        path: 'config.blinkRate',\n        name: 'Blink rate [hz] (0 = off)',\n        editor: ScalarDimensionEditor,\n        settings: { min: 0, max: 100 },\n      });\n  },\n};\n\nexport const getServerStyles = (data: ServerData | undefined) => (theme: GrafanaTheme2) => ({\n  bulb: css`\n    @keyframes blink {\n      0% {\n        fill-opacity: 0;\n      }\n      50% {\n        fill-opacity: 1;\n      }\n      100% {\n        fill-opacity: 0;\n      }\n    }\n  `,\n  server: css`\n    fill: ${data?.statusColor ?? 'transparent'};\n  `,\n  circle: css`\n    animation: blink ${data?.blinkRate ? 1 / data.blinkRate : 0}s infinite step-end;\n    fill: ${data?.bulbColor};\n    stroke: none;\n  `,\n  circleBack: css`\n    fill: ${outlineColor};\n    stroke: none;\n    opacity: 1;\n  `,\n  outline: css`\n    stroke: ${outlineColor};\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-width: 4px;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useObservable } from 'react-use';\nimport { of } from 'rxjs';\n\nimport { DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { Input, usePanelContext, useStyles2 } from '@grafana/ui';\nimport { DimensionContext } from 'app/features/dimensions/context';\nimport { ColorDimensionEditor } from 'app/features/dimensions/editors/ColorDimensionEditor';\nimport { TextDimensionEditor } from 'app/features/dimensions/editors/TextDimensionEditor';\n\nimport { getDataLinks } from '../../../plugins/panel/canvas/utils';\nimport { CanvasElementItem, CanvasElementProps, defaultThemeTextColor } from '../element';\nimport { ElementState } from '../runtime/element';\nimport { Align, TextConfig, TextData, VAlign } from '../types';\n\nconst TextDisplay = (props: CanvasElementProps<TextConfig, TextData>) => {\n  const { data, isSelected } = props;\n  const styles = useStyles2(getStyles(data));\n\n  const context = usePanelContext();\n  const scene = context.instanceState?.scene;\n\n  const isEditMode = useObservable<boolean>(scene?.editModeEnabled ?? of(false));\n\n  if (isEditMode && isSelected) {\n    return <TextEdit {...props} />;\n  }\n  return (\n    <div className={styles.container}>\n      <span className={styles.span}>{data?.text ? data.text : 'Double click to set text'}</span>\n    </div>\n  );\n};\n\nconst TextEdit = (props: CanvasElementProps<TextConfig, TextData>) => {\n  let { data, config } = props;\n  const context = usePanelContext();\n  let panelData: DataFrame[];\n  panelData = context.instanceState?.scene?.data.series;\n\n  const textRef = useRef<string>(config.text?.fixed ?? '');\n\n  // Save text on TextEdit unmount\n  useEffect(() => {\n    return () => {\n      saveText(textRef.current);\n    };\n  });\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const scene = context.instanceState?.scene;\n      if (scene) {\n        scene.editModeEnabled.next(false);\n      }\n    }\n  };\n\n  const onKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    textRef.current = event.currentTarget.value;\n  };\n\n  const saveText = useCallback(\n    (textValue: string) => {\n      let selectedElement: ElementState;\n      selectedElement = context.instanceState?.selected[0];\n      if (selectedElement) {\n        const options = selectedElement.options;\n        selectedElement.onChange({\n          ...options,\n          config: {\n            ...options.config,\n            text: { ...selectedElement.options.config.text, fixed: textValue },\n          },\n        });\n\n        // Force a re-render (update scene data after config update)\n        const scene = context.instanceState?.scene;\n        if (scene) {\n          scene.updateData(scene.data);\n        }\n      }\n    },\n    [context.instanceState?.scene, context.instanceState?.selected]\n  );\n\n  const styles = useStyles2(getStyles(data));\n  return (\n    <div className={styles.inlineEditorContainer}>\n      {panelData && <Input defaultValue={config.text?.fixed ?? ''} onKeyDown={onKeyDown} onKeyUp={onKeyUp} autoFocus />}\n    </div>\n  );\n};\n\nconst getStyles = (data: TextData | undefined) => (theme: GrafanaTheme2) => ({\n  container: css`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    display: table;\n  `,\n  inlineEditorContainer: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 10px;\n  `,\n  span: css`\n    display: table-cell;\n    vertical-align: ${data?.valign};\n    text-align: ${data?.align};\n    font-size: ${data?.size}px;\n    color: ${data?.color};\n  `,\n});\n\nexport const textItem: CanvasElementItem<TextConfig, TextData> = {\n  id: 'text',\n  name: 'Text',\n  description: 'Display text',\n\n  display: TextDisplay,\n\n  hasEditMode: true,\n\n  defaultSize: {\n    width: 100,\n    height: 50,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    config: {\n      align: Align.Center,\n      valign: VAlign.Middle,\n      color: {\n        fixed: defaultThemeTextColor,\n      },\n      size: 16,\n    },\n    placement: {\n      top: 100,\n      left: 100,\n    },\n  }),\n\n  prepareData: (ctx: DimensionContext, cfg: TextConfig) => {\n    const data: TextData = {\n      text: cfg.text ? ctx.getText(cfg.text).value() : '',\n      align: cfg.align ?? Align.Center,\n      valign: cfg.valign ?? VAlign.Middle,\n      size: cfg.size,\n    };\n\n    if (cfg.color) {\n      data.color = ctx.getColor(cfg.color).value();\n    }\n\n    data.links = getDataLinks(ctx, cfg, data.text);\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Text'];\n    builder\n      .addCustomEditor({\n        category,\n        id: 'textSelector',\n        path: 'config.text',\n        name: 'Text',\n        editor: TextDimensionEditor,\n      })\n      .addCustomEditor({\n        category,\n        id: 'config.color',\n        path: 'config.color',\n        name: 'Text color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {},\n      })\n      .addRadio({\n        category,\n        path: 'config.align',\n        name: 'Align text',\n        settings: {\n          options: [\n            { value: Align.Left, label: 'Left' },\n            { value: Align.Center, label: 'Center' },\n            { value: Align.Right, label: 'Right' },\n          ],\n        },\n        defaultValue: Align.Left,\n      })\n      .addRadio({\n        category,\n        path: 'config.valign',\n        name: 'Vertical align',\n        settings: {\n          options: [\n            { value: VAlign.Top, label: 'Top' },\n            { value: VAlign.Middle, label: 'Middle' },\n            { value: VAlign.Bottom, label: 'Bottom' },\n          ],\n        },\n        defaultValue: VAlign.Middle,\n      })\n      .addNumberInput({\n        category,\n        path: 'config.size',\n        name: 'Text size',\n        settings: {\n          placeholder: 'Auto',\n        },\n      });\n  },\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { DimensionContext, ScalarDimensionConfig } from 'app/features/dimensions';\nimport { ScalarDimensionEditor } from 'app/features/dimensions/editors';\n\nimport { CanvasElementItem, CanvasElementProps, defaultBgColor } from '../element';\n\ninterface WindTurbineData {\n  rpm?: number;\n}\n\ninterface WindTurbineConfig {\n  rpm?: ScalarDimensionConfig;\n}\n\nconst WindTurbineDisplay = ({ data }: CanvasElementProps<WindTurbineConfig, WindTurbineData>) => {\n  const styles = useStyles2(getStyles);\n\n  const windTurbineAnimation = `spin ${data?.rpm ? 60 / Math.abs(data.rpm) : 0}s linear infinite`;\n\n  return (\n    <svg viewBox=\"0 0 189.326 283.989\" preserveAspectRatio=\"xMidYMid meet\" style={{ fill: defaultBgColor }}>\n      <symbol id=\"blade\">\n        <path\n          fill=\"#e6e6e6\"\n          id=\"blade-front\"\n          d=\"M14.6491879,1.85011601 C14.2684455,-0.0535962877 10.7150812,-0.815081206 9.06473318,3.37308585 L0.434338747,70.7658933 L8.93805104,91.9607889 L15.4106729,90.437819 L17.5684455,78.3807425 L14.5218097,1.97679814 L14.6491879,1.85011601 Z\"\n        />\n        <path\n          fill=\"#d0d6d7\"\n          id=\"blade-side\"\n          d=\"M11.0951276,0.581206497 C10.3336427,0.961948956 9.57215777,1.85011601 8.93735499,3.24640371 L0.306960557,70.6392111 L8.81067285,91.8341067 L3.35359629,70.0044084 L11.0951276,0.581206497 Z\"\n        />\n      </symbol>\n\n      <g>\n        <g id=\"structure\" transform=\"translate(58.123, 82.664)\" fillRule=\"nonzero\">\n          <polygon id=\"tower\" fill=\"#e6e6e6\" points=\"33.111,10.984 39.965,10.984 44.28,196.176 28.796,196.176\" />\n          <path\n            id=\"yaw\"\n            fill=\"rgba(0,0,0,0.25)\"\n            d=\"M40.3454756,23.2948956 L40.7262181,34.8445476 C38.8225058,35.0986079 35.7765661,35.0986079 32.349884,34.337123 L32.7306265,23.2955916 L40.3454756,23.2955916 L40.3454756,23.2948956 Z\"\n          />\n          <path\n            id=\"base\"\n            fill=\"#d0d6d7\"\n            transform=\"translate(0 42)\"\n            d=\"M26.3846868,150.591647 L46.5640371,150.591647 C48.8484919,150.591647 50.7522042,152.49536 50.7522042,154.779814 L50.7522042,158.967981 L22.0691415,158.967981 L22.0691415,154.779814 C22.0691415,152.49536 23.9728538,150.591647 26.2573086,150.591647 L26.3846868,150.591647 Z\"\n          />\n          <circle id=\"nacelle\" fill=\"#e6e6e6\" cx=\"36.54\" cy=\"12\" r=\"11.93\" />\n          <circle id=\"gearbox\" fill=\"none\" stroke=\"#d0d6d7\" strokeWidth=\"2.75\" cx=\"36.538\" cy=\"11.999\" r=\"5.8\" />\n        </g>\n        <g className={styles.blade} style={{ animation: windTurbineAnimation }}>\n          <use id=\"blade1\" href=\"#blade\" x=\"83.24\" y=\"0\" />\n          <use id=\"blade2\" href=\"#blade\" x=\"83.24\" y=\"0\" transform=\"rotate(120 94.663 94.663)\" />\n          <use id=\"blade3\" href=\"#blade\" x=\"83.24\" y=\"0\" transform=\"rotate(-120 94.663 94.663)\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const windTurbineItem: CanvasElementItem<any, any> = {\n  id: 'windTurbine',\n  name: 'Wind Turbine',\n  description: 'Spinny spinny',\n\n  display: WindTurbineDisplay,\n\n  defaultSize: {\n    width: 100,\n    height: 155,\n  },\n\n  getNewOptions: (options) => ({\n    ...options,\n    background: {\n      color: {\n        fixed: 'transparent',\n      },\n    },\n    placement: {\n      width: options?.placement?.width ?? 100,\n      height: options?.placement?.height ?? 155,\n      top: options?.placement?.top,\n      left: options?.placement?.left,\n    },\n  }),\n\n  // Called when data changes\n  prepareData: (ctx: DimensionContext, cfg: WindTurbineConfig) => {\n    const data: WindTurbineData = {\n      rpm: cfg?.rpm ? ctx.getScalar(cfg.rpm).value() : 0,\n    };\n\n    return data;\n  },\n\n  registerOptionsUI: (builder) => {\n    const category = ['Wind Turbine'];\n    builder.addCustomEditor({\n      category,\n      id: 'rpm',\n      path: 'config.rpm',\n      name: 'RPM',\n      editor: ScalarDimensionEditor,\n    });\n  },\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  blade: css`\n    @keyframes spin {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    transform-origin: 94.663px 94.663px;\n    transform: rotate(15deg);\n  `,\n});\n","import { Registry } from '@grafana/data';\n\nimport { CanvasElementItem, CanvasElementOptions } from './element';\nimport { buttonItem } from './elements/button';\nimport { droneFrontItem } from './elements/droneFront';\nimport { droneSideItem } from './elements/droneSide';\nimport { droneTopItem } from './elements/droneTop';\nimport { iconItem } from './elements/icon';\nimport { metricValueItem } from './elements/metricValue';\nimport { rectangleItem } from './elements/rectangle';\nimport { serverItem } from './elements/server/server';\nimport { textItem } from './elements/text';\nimport { windTurbineItem } from './elements/windTurbine';\n\nexport const DEFAULT_CANVAS_ELEMENT_CONFIG: CanvasElementOptions = {\n  ...metricValueItem.getNewOptions(),\n  placement: { ...metricValueItem.getNewOptions().placement, ...metricValueItem.defaultSize },\n  type: metricValueItem.id,\n  name: `Element 1`,\n};\n\nexport const defaultElementItems = [\n  metricValueItem, // default for now\n  textItem,\n  rectangleItem,\n  iconItem,\n  serverItem,\n];\n\nexport const advancedElementItems = [buttonItem, windTurbineItem, droneTopItem, droneFrontItem, droneSideItem];\n\nexport const canvasElementRegistry = new Registry<CanvasElementItem>(() => [\n  ...defaultElementItems,\n  ...advancedElementItems,\n]);\n","import React, { CSSProperties } from 'react';\nimport { OnDrag, OnResize } from 'react-moveable/declaration/types';\n\nimport { LayerElement } from 'app/core/components/Layers/types';\nimport {\n  BackgroundImageSize,\n  CanvasElementItem,\n  CanvasElementOptions,\n  canvasElementRegistry,\n} from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { DimensionContext } from 'app/features/dimensions';\nimport { getConnectionsByTarget, isConnectionTarget } from 'app/plugins/panel/canvas/utils';\n\nimport { Constraint, HorizontalConstraint, Placement, VerticalConstraint } from '../types';\n\nimport { FrameState } from './frame';\nimport { RootElement } from './root';\nimport { Scene } from './scene';\n\nlet counter = 0;\n\nexport class ElementState implements LayerElement {\n  // UID necessary for moveable to work (for now)\n  readonly UID = counter++;\n  revId = 0;\n  sizeStyle: CSSProperties = {};\n  dataStyle: CSSProperties = {};\n\n  // Temp stored constraint for visualization purposes (switch to top / left constraint to simplify some functionality)\n  tempConstraint: Constraint | undefined;\n\n  // Filled in by ref\n  div?: HTMLDivElement;\n\n  // Calculated\n  data?: any; // depends on the type\n\n  constructor(public item: CanvasElementItem, public options: CanvasElementOptions, public parent?: FrameState) {\n    const fallbackName = `Element ${Date.now()}`;\n    if (!options) {\n      this.options = { type: item.id, name: fallbackName };\n    }\n\n    options.constraint = options.constraint ?? {\n      vertical: VerticalConstraint.Top,\n      horizontal: HorizontalConstraint.Left,\n    };\n    options.placement = options.placement ?? { width: 100, height: 100, top: 0, left: 0 };\n    options.background = options.background ?? { color: { fixed: 'transparent' } };\n    options.border = options.border ?? { color: { fixed: 'dark-green' } };\n    const scene = this.getScene();\n    if (!options.name) {\n      const newName = scene?.getNextElementName();\n      options.name = newName ?? fallbackName;\n    }\n    scene?.byName.set(options.name, this);\n  }\n\n  private getScene(): Scene | undefined {\n    let trav = this.parent;\n    while (trav) {\n      if (trav.isRoot()) {\n        return trav.scene;\n      }\n      trav = trav.parent;\n    }\n\n    return undefined;\n  }\n\n  getName() {\n    return this.options.name;\n  }\n\n  /** Use the configured options to update CSS style properties directly on the wrapper div **/\n  applyLayoutStylesToDiv(disablePointerEvents?: boolean) {\n    if (this.isRoot()) {\n      // Root supersedes layout engine and is always 100% width + height of panel\n      return;\n    }\n\n    const { constraint } = this.options;\n    const { vertical, horizontal } = constraint ?? {};\n    const placement = this.options.placement ?? ({} as Placement);\n\n    const editingEnabled = this.getScene()?.isEditingEnabled;\n\n    const style: React.CSSProperties = {\n      cursor: editingEnabled ? 'grab' : 'auto',\n      pointerEvents: disablePointerEvents ? 'none' : 'auto',\n      position: 'absolute',\n      // Minimum element size is 10x10\n      minWidth: '10px',\n      minHeight: '10px',\n    };\n\n    const translate = ['0px', '0px'];\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = placement.top ?? 0;\n        placement.height = placement.height ?? 100;\n        style.top = `${placement.top}px`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n      case VerticalConstraint.Bottom:\n        placement.bottom = placement.bottom ?? 0;\n        placement.height = placement.height ?? 100;\n        style.bottom = `${placement.bottom}px`;\n        style.height = `${placement.height}px`;\n        delete placement.top;\n        break;\n      case VerticalConstraint.TopBottom:\n        placement.top = placement.top ?? 0;\n        placement.bottom = placement.bottom ?? 0;\n        style.top = `${placement.top}px`;\n        style.bottom = `${placement.bottom}px`;\n        delete placement.height;\n        style.height = '';\n        break;\n      case VerticalConstraint.Center:\n        placement.top = placement.top ?? 0;\n        placement.height = placement.height ?? 100;\n        translate[1] = '-50%';\n        style.top = `calc(50% - ${placement.top}px)`;\n        style.height = `${placement.height}px`;\n        delete placement.bottom;\n        break;\n      case VerticalConstraint.Scale:\n        placement.top = placement.top ?? 0;\n        placement.bottom = placement.bottom ?? 0;\n        style.top = `${placement.top}%`;\n        style.bottom = `${placement.bottom}%`;\n        delete placement.height;\n        style.height = '';\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = placement.left ?? 0;\n        placement.width = placement.width ?? 100;\n        style.left = `${placement.left}px`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n      case HorizontalConstraint.Right:\n        placement.right = placement.right ?? 0;\n        placement.width = placement.width ?? 100;\n        style.right = `${placement.right}px`;\n        style.width = `${placement.width}px`;\n        delete placement.left;\n        break;\n      case HorizontalConstraint.LeftRight:\n        placement.left = placement.left ?? 0;\n        placement.right = placement.right ?? 0;\n        style.left = `${placement.left}px`;\n        style.right = `${placement.right}px`;\n        delete placement.width;\n        style.width = '';\n        break;\n      case HorizontalConstraint.Center:\n        placement.left = placement.left ?? 0;\n        placement.width = placement.width ?? 100;\n        translate[0] = '-50%';\n        style.left = `calc(50% - ${placement.left}px)`;\n        style.width = `${placement.width}px`;\n        delete placement.right;\n        break;\n      case HorizontalConstraint.Scale:\n        placement.left = placement.left ?? 0;\n        placement.right = placement.right ?? 0;\n        style.left = `${placement.left}%`;\n        style.right = `${placement.right}%`;\n        delete placement.width;\n        style.width = '';\n        break;\n    }\n\n    style.transform = `translate(${translate[0]}, ${translate[1]})`;\n    this.options.placement = placement;\n    this.sizeStyle = style;\n    if (this.div) {\n      for (const key in this.sizeStyle) {\n        this.div.style[key as any] = (this.sizeStyle as any)[key];\n      }\n\n      for (const key in this.dataStyle) {\n        this.div.style[key as any] = (this.dataStyle as any)[key];\n      }\n    }\n  }\n\n  setPlacementFromConstraint(elementContainer?: DOMRect, parentContainer?: DOMRect) {\n    const { constraint } = this.options;\n    const { vertical, horizontal } = constraint ?? {};\n\n    if (!elementContainer) {\n      elementContainer = this.div && this.div.getBoundingClientRect();\n    }\n    let parentBorderWidth = 0;\n    if (!parentContainer) {\n      parentContainer = this.div && this.div.parentElement?.getBoundingClientRect();\n      parentBorderWidth = this.parent?.isRoot()\n        ? 0\n        : parseFloat(getComputedStyle(this.div?.parentElement!).borderWidth);\n    }\n\n    const relativeTop =\n      elementContainer && parentContainer\n        ? Math.round(elementContainer.top - parentContainer.top - parentBorderWidth)\n        : 0;\n    const relativeBottom =\n      elementContainer && parentContainer\n        ? Math.round(parentContainer.bottom - parentBorderWidth - elementContainer.bottom)\n        : 0;\n    const relativeLeft =\n      elementContainer && parentContainer\n        ? Math.round(elementContainer.left - parentContainer.left - parentBorderWidth)\n        : 0;\n    const relativeRight =\n      elementContainer && parentContainer\n        ? Math.round(parentContainer.right - parentBorderWidth - elementContainer.right)\n        : 0;\n\n    const placement = {} as Placement;\n\n    const width = elementContainer?.width ?? 100;\n    const height = elementContainer?.height ?? 100;\n\n    switch (vertical) {\n      case VerticalConstraint.Top:\n        placement.top = relativeTop;\n        placement.height = height;\n        break;\n      case VerticalConstraint.Bottom:\n        placement.bottom = relativeBottom;\n        placement.height = height;\n        break;\n      case VerticalConstraint.TopBottom:\n        placement.top = relativeTop;\n        placement.bottom = relativeBottom;\n        break;\n      case VerticalConstraint.Center:\n        const elementCenter = elementContainer ? relativeTop + height / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.height / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.top = distanceFromCenter;\n        placement.height = height;\n        break;\n      case VerticalConstraint.Scale:\n        placement.top = (relativeTop / (parentContainer?.height ?? height)) * 100;\n        placement.bottom = (relativeBottom / (parentContainer?.height ?? height)) * 100;\n        break;\n    }\n\n    switch (horizontal) {\n      case HorizontalConstraint.Left:\n        placement.left = relativeLeft;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.Right:\n        placement.right = relativeRight;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.LeftRight:\n        placement.left = relativeLeft;\n        placement.right = relativeRight;\n        break;\n      case HorizontalConstraint.Center:\n        const elementCenter = elementContainer ? relativeLeft + width / 2 : 0;\n        const parentCenter = parentContainer ? parentContainer.width / 2 : 0;\n        const distanceFromCenter = parentCenter - elementCenter;\n        placement.left = distanceFromCenter;\n        placement.width = width;\n        break;\n      case HorizontalConstraint.Scale:\n        placement.left = (relativeLeft / (parentContainer?.width ?? width)) * 100;\n        placement.right = (relativeRight / (parentContainer?.width ?? width)) * 100;\n        break;\n    }\n\n    this.options.placement = placement;\n\n    this.applyLayoutStylesToDiv();\n    this.revId++;\n\n    this.getScene()?.save();\n  }\n\n  updateData(ctx: DimensionContext) {\n    if (this.item.prepareData) {\n      this.data = this.item.prepareData(ctx, this.options.config);\n      this.revId++; // rerender\n    }\n\n    const { background, border } = this.options;\n    const css: CSSProperties = {};\n    if (background) {\n      if (background.color) {\n        const color = ctx.getColor(background.color);\n        css.backgroundColor = color.value();\n      }\n      if (background.image) {\n        const image = ctx.getResource(background.image);\n        if (image) {\n          const v = image.value();\n          if (v) {\n            css.backgroundImage = `url(\"${v}\")`;\n            switch (background.size ?? BackgroundImageSize.Contain) {\n              case BackgroundImageSize.Contain:\n                css.backgroundSize = 'contain';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Cover:\n                css.backgroundSize = 'cover';\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Original:\n                css.backgroundRepeat = 'no-repeat';\n                break;\n              case BackgroundImageSize.Tile:\n                css.backgroundRepeat = 'repeat';\n                break;\n              case BackgroundImageSize.Fill:\n                css.backgroundSize = '100% 100%';\n                break;\n            }\n          } else {\n            css.backgroundImage = '';\n          }\n        }\n      }\n    }\n\n    if (border && border.color && border.width !== undefined) {\n      const color = ctx.getColor(border.color);\n      css.borderWidth = `${border.width}px`;\n      css.borderStyle = 'solid';\n      css.borderColor = color.value();\n\n      // Move the image to inside the border\n      if (css.backgroundImage) {\n        css.backgroundOrigin = 'padding-box';\n      }\n    }\n\n    this.dataStyle = css;\n    this.applyLayoutStylesToDiv();\n  }\n\n  isRoot(): this is RootElement {\n    return false;\n  }\n\n  /** Recursively visit all nodes */\n  visit(visitor: (v: ElementState) => void) {\n    visitor(this);\n  }\n\n  onChange(options: CanvasElementOptions) {\n    if (this.item.id !== options.type) {\n      this.item = canvasElementRegistry.getIfExists(options.type) ?? notFoundItem;\n    }\n\n    // rename handling\n    const oldName = this.options.name;\n    const newName = options.name;\n\n    this.revId++;\n    this.options = { ...options };\n    let trav = this.parent;\n    while (trav) {\n      if (trav.isRoot()) {\n        trav.scene.save();\n        break;\n      }\n      trav.revId++;\n      trav = trav.parent;\n    }\n\n    const scene = this.getScene();\n    if (oldName !== newName && scene) {\n      if (isConnectionTarget(this, scene.byName)) {\n        getConnectionsByTarget(this, scene).forEach((connection) => {\n          connection.info.targetName = newName;\n        });\n      }\n\n      scene.byName.delete(oldName);\n      scene.byName.set(newName, this);\n    }\n  }\n\n  getSaveModel() {\n    return { ...this.options };\n  }\n\n  initElement = (target: HTMLDivElement) => {\n    this.div = target;\n    this.applyLayoutStylesToDiv();\n  };\n\n  applyDrag = (event: OnDrag) => {\n    const hasHorizontalCenterConstraint = this.options.constraint?.horizontal === HorizontalConstraint.Center;\n    const hasVerticalCenterConstraint = this.options.constraint?.vertical === VerticalConstraint.Center;\n    if (hasHorizontalCenterConstraint || hasVerticalCenterConstraint) {\n      const numberOfTargets = this.getScene()?.selecto?.getSelectedTargets().length ?? 0;\n      const isMultiSelection = numberOfTargets > 1;\n      if (!isMultiSelection) {\n        const elementContainer = this.div?.getBoundingClientRect();\n        const height = elementContainer?.height ?? 100;\n        const yOffset = hasVerticalCenterConstraint ? height / 4 : 0;\n        event.target.style.transform = `translate(${event.translate[0]}px, ${event.translate[1] - yOffset}px)`;\n        return;\n      }\n    }\n\n    event.target.style.transform = event.transform;\n  };\n\n  // kinda like:\n  // https://github.com/grafana/grafana-edge-app/blob/main/src/panels/draw/WrapItem.tsx#L44\n  applyResize = (event: OnResize) => {\n    const placement = this.options.placement!;\n\n    const style = event.target.style;\n    const deltaX = event.delta[0];\n    const deltaY = event.delta[1];\n    const dirLR = event.direction[0];\n    const dirTB = event.direction[1];\n\n    if (dirLR === 1) {\n      placement.width = event.width;\n      style.width = `${placement.width}px`;\n    } else if (dirLR === -1) {\n      placement.left! -= deltaX;\n      placement.width = event.width;\n      style.left = `${placement.left}px`;\n      style.width = `${placement.width}px`;\n    }\n\n    if (dirTB === -1) {\n      placement.top! -= deltaY;\n      placement.height = event.height;\n      style.top = `${placement.top}px`;\n      style.height = `${placement.height}px`;\n    } else if (dirTB === 1) {\n      placement.height = event.height;\n      style.height = `${placement.height}px`;\n    }\n  };\n\n  handleMouseEnter = (event: React.MouseEvent, isSelected: boolean | undefined) => {\n    const scene = this.getScene();\n    if (!scene?.isEditingEnabled) {\n      this.handleTooltip(event);\n    } else if (!isSelected) {\n      scene?.connections.handleMouseEnter(event);\n    }\n  };\n\n  handleTooltip = (event: React.MouseEvent) => {\n    const scene = this.getScene();\n    if (scene?.tooltipCallback) {\n      const rect = this.div?.getBoundingClientRect();\n      scene.tooltipCallback({\n        anchorPoint: { x: rect?.right ?? event.pageX, y: rect?.top ?? event.pageY },\n        element: this,\n        isOpen: false,\n      });\n    }\n  };\n\n  handleMouseLeave = (event: React.MouseEvent) => {\n    const scene = this.getScene();\n    if (scene?.tooltipCallback && !scene?.tooltip?.isOpen) {\n      scene.tooltipCallback(undefined);\n    }\n  };\n\n  onElementClick = (event: React.MouseEvent) => {\n    const scene = this.getScene();\n    if (scene?.tooltipCallback && scene.tooltip?.anchorPoint) {\n      scene.tooltipCallback({\n        anchorPoint: { x: scene.tooltip.anchorPoint.x, y: scene.tooltip.anchorPoint.y },\n        element: this,\n        isOpen: true,\n      });\n    }\n  };\n\n  render() {\n    const { item, div } = this;\n    const scene = this.getScene();\n    // TODO: Rethink selected state handling\n    const isSelected = div && scene && scene.selecto && scene.selecto.getSelectedTargets().includes(div);\n\n    return (\n      <div\n        key={this.UID}\n        ref={this.initElement}\n        onMouseEnter={(e: React.MouseEvent) => this.handleMouseEnter(e, isSelected)}\n        onMouseLeave={!scene?.isEditingEnabled ? this.handleMouseLeave : undefined}\n        onClick={!scene?.isEditingEnabled ? this.onElementClick : undefined}\n      >\n        <item.display\n          key={`${this.UID}/${this.revId}`}\n          config={this.options.config}\n          data={this.data}\n          isSelected={isSelected}\n        />\n      </div>\n    );\n  }\n}\n","import { cloneDeep } from 'lodash';\nimport React from 'react';\n\nimport { canvasElementRegistry, CanvasFrameOptions } from 'app/features/canvas';\nimport { notFoundItem } from 'app/features/canvas/elements/notFound';\nimport { DimensionContext } from 'app/features/dimensions';\nimport { LayerActionID } from 'app/plugins/panel/canvas/types';\n\nimport { updateConnectionsForSource } from '../../../plugins/panel/canvas/utils';\nimport { CanvasElementItem } from '../element';\nimport { HorizontalConstraint, Placement, VerticalConstraint } from '../types';\n\nimport { ElementState } from './element';\nimport { RootElement } from './root';\nimport { Scene } from './scene';\n\nconst DEFAULT_OFFSET = 10;\nconst HORIZONTAL_OFFSET = 50;\n\nexport const frameItemDummy: CanvasElementItem = {\n  id: 'frame',\n  name: 'Frame',\n  description: 'Frame',\n\n  getNewOptions: () => ({\n    config: {},\n  }),\n\n  // eslint-disable-next-line react/display-name\n  display: () => {\n    return <div>FRAME!</div>;\n  },\n};\n\nexport class FrameState extends ElementState {\n  elements: ElementState[] = [];\n  scene: Scene;\n\n  constructor(public options: CanvasFrameOptions, scene: Scene, public parent?: FrameState) {\n    super(frameItemDummy, options, parent);\n\n    this.scene = scene;\n\n    // mutate options object\n    let { elements } = this.options;\n    if (!elements) {\n      this.options.elements = elements = [];\n    }\n\n    for (const c of elements) {\n      if (c.type === 'frame') {\n        this.elements.push(new FrameState(c as CanvasFrameOptions, scene, this));\n      } else {\n        const item = canvasElementRegistry.getIfExists(c.type) ?? notFoundItem;\n        this.elements.push(new ElementState(item, c, this));\n      }\n    }\n  }\n\n  isRoot(): this is RootElement {\n    return false;\n  }\n\n  updateData(ctx: DimensionContext) {\n    super.updateData(ctx);\n    for (const elem of this.elements) {\n      elem.updateData(ctx);\n    }\n  }\n\n  // used in the layer editor\n  reorder(startIndex: number, endIndex: number) {\n    const result = Array.from(this.elements);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    this.elements = result;\n\n    this.reinitializeMoveable();\n  }\n\n  // used for tree view\n  reorderTree(src: ElementState, dest: ElementState, firstPosition = false) {\n    const result = Array.from(this.elements);\n    const srcIndex = this.elements.indexOf(src);\n    const destIndex = firstPosition ? this.elements.length - 1 : this.elements.indexOf(dest);\n\n    const [removed] = result.splice(srcIndex, 1);\n    result.splice(destIndex, 0, removed);\n    this.elements = result;\n\n    this.reinitializeMoveable();\n  }\n\n  doMove(child: ElementState, action: LayerActionID) {\n    const vals = this.elements.filter((v) => v !== child);\n    if (action === LayerActionID.MoveBottom) {\n      vals.unshift(child);\n    } else {\n      vals.push(child);\n    }\n    this.elements = vals;\n    this.scene.save();\n    this.reinitializeMoveable();\n  }\n\n  reinitializeMoveable() {\n    // Need to first clear current selection and then re-init moveable with slight delay\n    this.scene.clearCurrentSelection();\n    setTimeout(() => this.scene.initMoveable(true, this.scene.isEditingEnabled));\n  }\n\n  // ??? or should this be on the element directly?\n  // are actions scoped to layers?\n  doAction = (action: LayerActionID, element: ElementState, updateName = true, shiftItemsOnDuplicate = true) => {\n    switch (action) {\n      case LayerActionID.Delete:\n        this.elements = this.elements.filter((e) => e !== element);\n        updateConnectionsForSource(element, this.scene);\n        this.scene.byName.delete(element.options.name);\n        this.scene.save();\n        this.reinitializeMoveable();\n        break;\n      case LayerActionID.Duplicate:\n        if (element.item.id === 'frame') {\n          console.log('Can not duplicate frames (yet)', action, element);\n          return;\n        }\n        const opts = cloneDeep(element.options);\n\n        if (shiftItemsOnDuplicate) {\n          const { constraint, placement: oldPlacement } = element.options;\n          const { vertical, horizontal } = constraint ?? {};\n          const placement = { ...oldPlacement } ?? ({} as Placement);\n\n          switch (vertical) {\n            case VerticalConstraint.Top:\n              if (placement.top == null) {\n                placement.top = 25;\n              } else {\n                placement.top += DEFAULT_OFFSET;\n              }\n              break;\n            case VerticalConstraint.Bottom:\n              if (placement.bottom == null) {\n                placement.bottom = 100;\n              } else {\n                placement.bottom -= DEFAULT_OFFSET;\n              }\n              break;\n            case VerticalConstraint.TopBottom:\n              if (placement.top == null) {\n                placement.top = 25;\n              } else {\n                placement.top += DEFAULT_OFFSET;\n              }\n\n              if (placement.bottom == null) {\n                placement.bottom = 100;\n              } else {\n                placement.bottom -= DEFAULT_OFFSET;\n              }\n              break;\n            case VerticalConstraint.Center:\n              if (placement.top != null) {\n                placement.top -= DEFAULT_OFFSET;\n              }\n              break;\n          }\n\n          switch (horizontal) {\n            case HorizontalConstraint.Left:\n              if (placement.left == null) {\n                placement.left = HORIZONTAL_OFFSET;\n              } else {\n                placement.left += DEFAULT_OFFSET;\n              }\n              break;\n            case HorizontalConstraint.Right:\n              if (placement.right == null) {\n                placement.right = HORIZONTAL_OFFSET;\n              } else {\n                placement.right -= DEFAULT_OFFSET;\n              }\n              break;\n            case HorizontalConstraint.LeftRight:\n              if (placement.left == null) {\n                placement.left = HORIZONTAL_OFFSET;\n              } else {\n                placement.left += DEFAULT_OFFSET;\n              }\n\n              if (placement.right == null) {\n                placement.right = HORIZONTAL_OFFSET;\n              } else {\n                placement.right -= DEFAULT_OFFSET;\n              }\n              break;\n            case HorizontalConstraint.Center:\n              if (placement.left != null) {\n                placement.left -= DEFAULT_OFFSET;\n              }\n              break;\n          }\n\n          opts.placement = placement;\n        }\n\n        // Clear connections on duplicate\n        opts.connections = undefined;\n\n        const copy = new ElementState(element.item, opts, this);\n        copy.updateData(this.scene.context);\n        if (updateName) {\n          copy.options.name = this.scene.getNextElementName();\n        }\n        this.elements.push(copy);\n        this.scene.byName.set(copy.options.name, copy);\n\n        // Update scene byName map for original element (to avoid stale references (e.g. for connections))\n        this.scene.byName.set(element.options.name, element);\n\n        this.scene.save();\n        this.reinitializeMoveable();\n\n        setTimeout(() => {\n          this.scene.targetsToSelect.add(copy.div!);\n        });\n        break;\n      case LayerActionID.MoveTop:\n      case LayerActionID.MoveBottom:\n        element.parent?.doMove(element, action);\n        break;\n\n      default:\n        console.log('DO action', action, element);\n        return;\n    }\n  };\n\n  render() {\n    return (\n      <div key={this.UID} ref={this.initElement}>\n        {this.elements.map((v) => v.render())}\n      </div>\n    );\n  }\n\n  /** Recursively visit all nodes */\n  visit(visitor: (v: ElementState) => void) {\n    super.visit(visitor);\n    for (const e of this.elements) {\n      visitor(e);\n    }\n  }\n\n  getSaveModel() {\n    return {\n      ...this.options,\n      elements: this.elements.map((v) => v.getSaveModel()),\n    };\n  }\n}\n","import { LinkModel } from '@grafana/data/src';\nimport { ColorDimensionConfig, ResourceDimensionConfig, TextDimensionConfig } from 'app/features/dimensions/types';\n\nexport interface Placement {\n  top?: number;\n  left?: number;\n  right?: number;\n  bottom?: number;\n\n  width?: number;\n  height?: number;\n}\n\nexport interface Constraint {\n  horizontal?: HorizontalConstraint;\n  vertical?: VerticalConstraint;\n}\n\nexport enum HorizontalConstraint {\n  Left = 'left',\n  Right = 'right',\n  LeftRight = 'leftright',\n  Center = 'center',\n  Scale = 'scale',\n}\n\nexport enum VerticalConstraint {\n  Top = 'top',\n  Bottom = 'bottom',\n  TopBottom = 'topbottom',\n  Center = 'center',\n  Scale = 'scale',\n}\n\nexport enum BackgroundImageSize {\n  Original = 'original',\n  Contain = 'contain',\n  Cover = 'cover',\n  Fill = 'fill',\n  Tile = 'tile',\n}\n\nexport interface BackgroundConfig {\n  color?: ColorDimensionConfig;\n  image?: ResourceDimensionConfig;\n  size?: BackgroundImageSize;\n}\n\nexport interface LineConfig {\n  color?: ColorDimensionConfig;\n  width?: number;\n}\n\nexport enum QuickPlacement {\n  Top = 'top',\n  Bottom = 'bottom',\n  Left = 'left',\n  Right = 'right',\n  HorizontalCenter = 'hcenter',\n  VerticalCenter = 'vcenter',\n}\n\nexport enum Align {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right',\n}\n\nexport enum VAlign {\n  Top = 'top',\n  Middle = 'middle',\n  Bottom = 'bottom',\n}\n\nexport interface TextData {\n  text?: string;\n  color?: string;\n  size?: number; // 0 or missing will \"auto size\"\n  align: Align;\n  valign: VAlign;\n  links?: LinkModel[];\n}\n\nexport interface TextConfig {\n  text?: TextDimensionConfig;\n  color?: ColorDimensionConfig;\n  size?: number; // 0 or missing will \"auto size\"\n  align: Align;\n  valign: VAlign;\n}\n","import React, { useCallback } from 'react';\n\nimport { AppEvents, StandardEditorProps, StandardEditorsRegistryItem, StringFieldConfigSettings } from '@grafana/data';\nimport { config, getBackendSrv } from '@grafana/runtime';\nimport { Button, InlineField, InlineFieldRow, JSONFormatter } from '@grafana/ui';\nimport { StringValueEditor } from 'app/core/components/OptionsUI/string';\nimport { appEvents } from 'app/core/core';\n\nexport interface APIEditorConfig {\n  endpoint: string;\n  data?: string;\n}\n\nconst dummyStringSettings: StandardEditorsRegistryItem<string, StringFieldConfigSettings> = {\n  settings: {},\n} as any;\n\nexport const callApi = (api: APIEditorConfig, isTest = false) => {\n  if (api) {\n    getBackendSrv()\n      .fetch({\n        url: api.endpoint!,\n        method: 'POST',\n        data: api.data ?? {},\n      })\n      .subscribe({\n        error: (error: any) => {\n          if (isTest) {\n            appEvents.emit(AppEvents.alertError, ['Error has occurred: ', JSON.stringify(error)]);\n            console.error(error);\n          }\n        },\n        complete: () => {\n          if (isTest) {\n            appEvents.emit(AppEvents.alertSuccess, ['Test successful']);\n          }\n        },\n      });\n  }\n};\n\ntype Props = StandardEditorProps<APIEditorConfig, any, any>;\n\nexport function APIEditor({ value, context, onChange }: Props) {\n  const labelWidth = 9;\n\n  const onEndpointChange = useCallback(\n    (endpoint = '') => {\n      onChange({\n        ...value,\n        endpoint,\n      });\n    },\n    [onChange, value]\n  );\n\n  const onDataChange = useCallback(\n    (data?: string) => {\n      onChange({\n        ...value,\n        data,\n      });\n    },\n    [onChange, value]\n  );\n\n  const renderJSON = (data: string) => {\n    try {\n      const json = JSON.parse(data);\n      return <JSONFormatter json={json} />;\n    } catch (error) {\n      if (error instanceof Error) {\n        return `Invalid JSON provided: ${error.message}`;\n      } else {\n        return 'Invalid JSON provided';\n      }\n    }\n  };\n\n  const renderTestAPIButton = (api: APIEditorConfig) => {\n    if (api && api.endpoint) {\n      return (\n        <Button onClick={() => callApi(api, true)} title={'Test API'}>\n          Test API\n        </Button>\n      );\n    }\n\n    return;\n  };\n\n  return config.disableSanitizeHtml ? (\n    <>\n      <InlineFieldRow>\n        <InlineField label={'Endpoint'} labelWidth={labelWidth} grow={true}>\n          <StringValueEditor\n            context={context}\n            value={value?.endpoint}\n            onChange={onEndpointChange}\n            item={dummyStringSettings}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label={'Data'} labelWidth={labelWidth} grow={true}>\n          <StringValueEditor\n            context={context}\n            value={value?.data ?? '{}'}\n            onChange={onDataChange}\n            item={dummyStringSettings}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      {renderTestAPIButton(value)}\n      <br />\n      {renderJSON(value?.data ?? '{}')}\n    </>\n  ) : (\n    <>Must enable disableSanitizeHtml feature flag to access</>\n  );\n}\n","import React, { useCallback } from 'react';\n\nimport { SelectableValue, StandardEditorProps } from '@grafana/data';\nimport { InlineField, InlineFieldRow, RadioButtonGroup } from '@grafana/ui/src';\nimport { BackgroundImageSize } from 'app/features/canvas';\n\nconst options: Array<SelectableValue<BackgroundImageSize>> = [\n  { value: BackgroundImageSize.Original, label: 'Original' },\n  { value: BackgroundImageSize.Contain, label: 'Contain' },\n  { value: BackgroundImageSize.Cover, label: 'Cover' },\n  { value: BackgroundImageSize.Fill, label: 'Fill' },\n  { value: BackgroundImageSize.Tile, label: 'Tile' },\n];\n\nexport const BackgroundSizeEditor = ({ value, onChange }: StandardEditorProps<string, undefined, undefined>) => {\n  const imageSize = value ?? BackgroundImageSize.Cover;\n\n  const onImageSizeChange = useCallback(\n    (size: string) => {\n      onChange(size);\n    },\n    [onChange]\n  );\n\n  return (\n    <InlineFieldRow>\n      <InlineField grow={true}>\n        <RadioButtonGroup value={imageSize} options={options} onChange={onImageSizeChange} fullWidth />\n      </InlineField>\n    </InlineFieldRow>\n  );\n};\n","import { PanelOptionsSupplier } from '@grafana/data/src/panel/PanelPlugin';\nimport { CanvasElementOptions } from 'app/features/canvas';\nimport { ColorDimensionEditor, ResourceDimensionEditor } from 'app/features/dimensions/editors';\nimport { BackgroundSizeEditor } from 'app/features/dimensions/editors/BackgroundSizeEditor';\n\ninterface OptionSuppliers {\n  addBackground: PanelOptionsSupplier<CanvasElementOptions>;\n  addBorder: PanelOptionsSupplier<CanvasElementOptions>;\n}\n\nconst getCategoryName = (str: string, type: string | undefined) => {\n  if (type !== 'frame' && type !== undefined) {\n    return [str + ` (${type})`];\n  }\n  return [str];\n};\n\nexport const optionBuilder: OptionSuppliers = {\n  addBackground: (builder, context) => {\n    const category = getCategoryName('Background', context.options?.type);\n    builder\n      .addCustomEditor({\n        category,\n        id: 'background.color',\n        path: 'background.color',\n        name: 'Color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {\n          // Configured values\n          fixed: '',\n        },\n      })\n      .addCustomEditor({\n        category,\n        id: 'background.image',\n        path: 'background.image',\n        name: 'Image',\n        editor: ResourceDimensionEditor,\n        settings: {\n          resourceType: 'image',\n        },\n      })\n      .addCustomEditor({\n        category,\n        id: 'background.size',\n        path: 'background.size',\n        name: 'Image size',\n        editor: BackgroundSizeEditor,\n        settings: {\n          resourceType: 'image',\n        },\n      });\n  },\n\n  addBorder: (builder, context) => {\n    const category = getCategoryName('Border', context.options?.type);\n    builder.addSliderInput({\n      category,\n      path: 'border.width',\n      name: 'Width',\n      defaultValue: 2,\n      settings: {\n        min: 0,\n        max: 20,\n      },\n    });\n\n    if (context.options?.border?.width) {\n      builder.addCustomEditor({\n        category,\n        id: 'border.color',\n        path: 'border.color',\n        name: 'Color',\n        editor: ColorDimensionEditor,\n        settings: {},\n        defaultValue: {\n          // Configured values\n          fixed: '',\n        },\n      });\n    }\n  },\n};\n","import { CanvasConnection } from '../../../features/canvas';\nimport { ElementState } from '../../../features/canvas/runtime/element';\n\nexport enum LayerActionID {\n  Delete = 'delete',\n  Duplicate = 'duplicate',\n  MoveTop = 'move-top',\n  MoveBottom = 'move-bottom',\n}\n\nexport interface DragNode {\n  key: number;\n  dataRef: ElementState;\n}\n\nexport interface DropNode extends DragNode {\n  pos: string;\n}\n\nexport enum InlineEditTabs {\n  ElementManagement = 'element-management',\n  SelectedElement = 'selected-element',\n}\n\nexport type AnchorPoint = {\n  x: number;\n  y: number;\n};\n\nexport interface CanvasTooltipPayload {\n  anchorPoint: AnchorPoint | undefined;\n  element: ElementState | undefined;\n  isOpen?: boolean;\n}\n\nexport interface ConnectionInfo {\n  source: ElementState;\n  target: ElementState;\n  info: CanvasConnection;\n}\n","import { AppEvents, Field, LinkModel, PluginState, SelectableValue } from '@grafana/data';\nimport { hasAlphaPanels } from 'app/core/config';\n\nimport appEvents from '../../../core/app_events';\nimport {\n  advancedElementItems,\n  CanvasElementItem,\n  CanvasElementOptions,\n  canvasElementRegistry,\n  defaultElementItems,\n  TextConfig,\n} from '../../../features/canvas';\nimport { notFoundItem } from '../../../features/canvas/elements/notFound';\nimport { ElementState } from '../../../features/canvas/runtime/element';\nimport { FrameState } from '../../../features/canvas/runtime/frame';\nimport { Scene, SelectionParams } from '../../../features/canvas/runtime/scene';\nimport { DimensionContext } from '../../../features/dimensions';\n\nimport { AnchorPoint, ConnectionInfo } from './types';\n\nexport function doSelect(scene: Scene, element: ElementState | FrameState) {\n  try {\n    let selection: SelectionParams = { targets: [] };\n    if (element instanceof FrameState) {\n      const targetElements: HTMLDivElement[] = [];\n      targetElements.push(element?.div!);\n      selection.targets = targetElements;\n      selection.frame = element;\n      scene.select(selection);\n    } else {\n      scene.currentLayer = element.parent;\n      selection.targets = [element?.div!];\n      scene.select(selection);\n    }\n  } catch (error) {\n    appEvents.emit(AppEvents.alertError, ['Unable to select element, try selecting element in panel instead']);\n  }\n}\n\nexport function getElementTypes(shouldShowAdvancedTypes: boolean | undefined, current?: string): RegistrySelectInfo {\n  if (shouldShowAdvancedTypes) {\n    return getElementTypesOptions([...defaultElementItems, ...advancedElementItems], current);\n  }\n\n  return getElementTypesOptions([...defaultElementItems], current);\n}\n\ninterface RegistrySelectInfo {\n  options: Array<SelectableValue<string>>;\n  current: Array<SelectableValue<string>>;\n}\n\nexport function getElementTypesOptions(items: CanvasElementItem[], current: string | undefined): RegistrySelectInfo {\n  const selectables: RegistrySelectInfo = { options: [], current: [] };\n  const alpha: Array<SelectableValue<string>> = [];\n\n  for (const item of items) {\n    const option: SelectableValue<string> = { label: item.name, value: item.id, description: item.description };\n    if (item.state === PluginState.alpha) {\n      if (!hasAlphaPanels) {\n        continue;\n      }\n      option.label = `${item.name} (Alpha)`;\n      alpha.push(option);\n    } else {\n      selectables.options.push(option);\n    }\n\n    if (item.id === current) {\n      selectables.current.push(option);\n    }\n  }\n\n  for (const a of alpha) {\n    selectables.options.push(a);\n  }\n\n  return selectables;\n}\n\nexport function onAddItem(sel: SelectableValue<string>, rootLayer: FrameState | undefined, anchorPoint?: AnchorPoint) {\n  const newItem = canvasElementRegistry.getIfExists(sel.value) ?? notFoundItem;\n  const newElementOptions = newItem.getNewOptions() as CanvasElementOptions;\n  newElementOptions.type = newItem.id;\n\n  if (anchorPoint) {\n    newElementOptions.placement = { ...newElementOptions.placement, top: anchorPoint.y, left: anchorPoint.x };\n  }\n\n  if (newItem.defaultSize) {\n    newElementOptions.placement = { ...newElementOptions.placement, ...newItem.defaultSize };\n  }\n\n  if (rootLayer) {\n    const newElement = new ElementState(newItem, newElementOptions, rootLayer);\n    newElement.updateData(rootLayer.scene.context);\n    rootLayer.elements.push(newElement);\n    rootLayer.scene.save();\n    rootLayer.reinitializeMoveable();\n\n    setTimeout(() => doSelect(rootLayer.scene, newElement));\n  }\n}\n\nexport function getDataLinks(ctx: DimensionContext, cfg: TextConfig, textData: string | undefined): LinkModel[] {\n  const panelData = ctx.getPanelData();\n  const frames = panelData?.series;\n\n  const links: Array<LinkModel<Field>> = [];\n  const linkLookup = new Set<string>();\n\n  frames?.forEach((frame) => {\n    const visibleFields = frame.fields.filter((field) => !Boolean(field.config.custom?.hideFrom?.tooltip));\n\n    if (cfg.text?.field && visibleFields.some((f) => f.name === cfg.text?.field)) {\n      const field = visibleFields.filter((field) => field.name === cfg.text?.field)[0];\n      if (field?.getLinks) {\n        const disp = field.display ? field.display(textData) : { text: `${textData}`, numeric: +textData! };\n        field.getLinks({ calculatedValue: disp }).forEach((link) => {\n          const key = `${link.title}/${link.href}`;\n          if (!linkLookup.has(key)) {\n            links.push(link);\n            linkLookup.add(key);\n          }\n        });\n      }\n    }\n  });\n\n  return links;\n}\n\nexport function isConnectionSource(element: ElementState) {\n  return element.options.connections && element.options.connections.length > 0;\n}\nexport function isConnectionTarget(element: ElementState, sceneByName: Map<string, ElementState>) {\n  const connections = getConnections(sceneByName);\n  return connections.some((connection) => connection.target === element);\n}\n\nexport function getConnections(sceneByName: Map<string, ElementState>) {\n  const connections: ConnectionInfo[] = [];\n  for (let v of sceneByName.values()) {\n    if (v.options.connections) {\n      for (let c of v.options.connections) {\n        const target = c.targetName ? sceneByName.get(c.targetName) : v.parent;\n        if (target) {\n          connections.push({\n            source: v,\n            target,\n            info: c,\n          });\n        }\n      }\n    }\n  }\n\n  return connections;\n}\n\nexport function getConnectionsByTarget(element: ElementState, scene: Scene) {\n  return getConnections(scene.byName).filter((connection) => connection.target === element);\n}\n\nexport function updateConnectionsForSource(element: ElementState, scene: Scene) {\n  const targetConnections = getConnectionsByTarget(element, scene);\n  targetConnections.forEach((connection) => {\n    const sourceConnections = connection.source.options.connections?.splice(0) ?? [];\n    const connections = sourceConnections.filter((con) => con.targetName !== element.getName());\n    connection.source.onChange({ ...connection.source.options, connections });\n  });\n}\n"],"names":["ConnectionPath","defaultBgColor","defaultTextColor","defaultThemeTextColor","svgStrokePathClass","IconDisplay","props","data","onClick","svgStyle","iconItem","options","ctx","cfg","path","builder","category","NotFoundDisplay","config","notFoundItem","ButtonDisplay","Button","buttonItem","TextDimensionEditor","APIEditor","droneFrontItem","styles","getStyles","droneFrontTransformStyle","theme","droneSideItem","droneSidePitchTransformStyle","droneTopItem","fRightRotorAnimation","fLeftRotorAnimation","bRightRotorAnimation","bLeftRotorAnimation","droneTopTransformStyle","dummyFieldSettings","MetricValueDisplay","isSelected","context","scene","panelData","isEditMode","useObservable","of","getDisplayValue","fieldNotFound","series","field","MetricValueEdit","onFieldChange","selectedElement","FieldNamePicker","metricValueItem","ColorDimensionEditor","RectangleDisplay","stylesFactory","rectangleItem","ServerDatabase","getServerStyles","ServerSingle","ServerStack","ServerTerminal","ServerType","outlineColor","serverItem","TextDisplay","TextEdit","textRef","saveText","onKeyDown","event","onKeyUp","textValue","Input","textItem","windTurbineItem","windTurbineAnimation","DEFAULT_CANVAS_ELEMENT_CONFIG","defaultElementItems","icon","advancedElementItems","canvasElementRegistry","Registry","counter","ElementState","item","parent","target","hasHorizontalCenterConstraint","hasVerticalCenterConstraint","height","yOffset","placement","style","deltaX","deltaY","dirLR","dirTB","rect","fallbackName","newName","trav","disablePointerEvents","constraint","vertical","horizontal","translate","key","elementContainer","parentContainer","parentBorderWidth","relativeTop","relativeBottom","relativeLeft","relativeRight","width","elementCenter","distanceFromCenter","background","border","css","color","image","v","visitor","oldName","connection","div","e","DEFAULT_OFFSET","HORIZONTAL_OFFSET","frameItemDummy","FrameState","action","element","updateName","shiftItemsOnDuplicate","opts","oldPlacement","copy","elements","c","elem","startIndex","endIndex","result","removed","src","dest","firstPosition","srcIndex","destIndex","child","vals","HorizontalConstraint","VerticalConstraint","BackgroundImageSize","QuickPlacement","Align","VAlign","dummyStringSettings","callApi","api","isTest","error","value","onChange","onEndpointChange","endpoint","onDataChange","renderJSON","json","renderTestAPIButton","BackgroundSizeEditor","imageSize","onImageSizeChange","size","InlineFieldRow","InlineField","RadioButtonGroup","getCategoryName","str","type","optionBuilder","LayerActionID","InlineEditTabs","doSelect","selection","targetElements","getElementTypes","shouldShowAdvancedTypes","current","getElementTypesOptions","items","selectables","alpha","option","a","onAddItem","sel","rootLayer","anchorPoint","newItem","newElementOptions","newElement","getDataLinks","textData","frames","links","linkLookup","frame","visibleFields","f","disp","link","isConnectionSource","isConnectionTarget","sceneByName","getConnections","connections","getConnectionsByTarget","updateConnectionsForSource","con"],"sourceRoot":""}