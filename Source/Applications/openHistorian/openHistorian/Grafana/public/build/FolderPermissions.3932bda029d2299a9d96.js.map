{"version":3,"sources":["webpack:///./public/app/features/folders/FolderPermissions.tsx"],"names":["FolderPermissions","_super","props","_this","call","this","onOpenAddPermissions","setState","isAdding","onRemoveItem","item","removeFolderPermission","onPermissionChanged","level","updateFolderPermission","onAddPermission","newItem","addFolderPermission","onCancelAddPermission","state","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","componentDidMount","getFolderByUid","folderUid","getFolderPermissions","render","_a","navModel","folder","id","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_4__","Contents","isLoading","folderInfo","title","url","className","_grafana_ui__WEBPACK_IMPORTED_MODULE_5__","placement","content","app_core_components_PermissionList_PermissionsInfo__WEBPACK_IMPORTED_MODULE_12__","onClick","disabled","app_core_components_Animations_SlideDown__WEBPACK_IMPORTED_MODULE_6__","in","app_core_components_PermissionList_AddPermission__WEBPACK_IMPORTED_MODULE_11__","onCancel","app_core_components_PermissionList_PermissionList__WEBPACK_IMPORTED_MODULE_10__","items","permissions","isFetching","react__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_state_actions__WEBPACK_IMPORTED_MODULE_8__","__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","uid","location","routeParams","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_7__","navIndex","_state_navModel__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"uUAqCAA,EAAA,SAAAC,GACE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAYdF,EAAAG,qBAAuB,WACrBH,EAAKI,SAAS,CAAEC,UAAU,KAG5BL,EAAAM,aAAe,SAACC,GACdP,EAAKD,MAAMS,uBAAuBD,IAGpCP,EAAAS,oBAAsB,SAACF,EAAoBG,GACzCV,EAAKD,MAAMY,uBAAuBJ,EAAMG,IAG1CV,EAAAY,gBAAkB,SAACC,GACjB,OAAOb,EAAKD,MAAMe,oBAAoBD,IAGxCb,EAAAe,sBAAwB,WACtBf,EAAKI,SAAS,CAAEC,UAAU,KA3B1BL,EAAKgB,MAAQ,CACXX,UAAU,KA0EhB,OA/EuCY,EAAA,EAAApB,EAAAC,GASrCD,EAAAqB,UAAAC,kBAAA,WACEjB,KAAKH,MAAMqB,eAAelB,KAAKH,MAAMsB,WACrCnB,KAAKH,MAAMuB,qBAAqBpB,KAAKH,MAAMsB,YAuB7CxB,EAAAqB,UAAAK,OAAA,WACQ,IAAAC,EAAAtB,KAAAH,MAAE0B,EAAAD,EAAAC,SAAUC,EAAAF,EAAAE,OACVrB,EAAAH,KAAAc,MAAAX,SAER,GAAkB,IAAdqB,EAAOC,GACT,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACN,SAAUA,GACdG,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,CAACC,WAAW,GACxBL,EAAAC,EAAAC,cAAA,eAMR,IAAMI,EAAa,CAAEC,MAAOT,EAAOS,MAAOC,IAAKV,EAAOU,IAAKT,GAAID,EAAOC,IAEtE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACN,SAAUA,GACdG,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,KACZJ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,oBAAkB,sBAChCT,EAAAC,EAAAC,cAACQ,EAAA,QAAO,CAACC,UAAU,OAAOC,QAASZ,EAAAC,EAAAC,cAACW,EAAA,EAAe,OACjDb,EAAAC,EAAAC,cAAA,OAAKO,UAAU,yBACbT,EAAAC,EAAAC,cAAA,KAAGO,UAAU,4CAGjBT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,4BACfT,EAAAC,EAAAC,cAAA,UAAQO,UAAU,6BAA6BK,QAASxC,KAAKC,qBAAsBwC,SAAUtC,GAAQ,mBAIvGuB,EAAAC,EAAAC,cAACc,EAAA,EAAS,CAACC,GAAIxC,GACbuB,EAAAC,EAAAC,cAACgB,EAAA,EAAa,CAAClC,gBAAiBV,KAAKU,gBAAiBmC,SAAU7C,KAAKa,yBAEvEa,EAAAC,EAAAC,cAACkB,EAAA,EAAc,CACbC,MAAOvB,EAAOwB,YACd5C,aAAcJ,KAAKI,aACnBG,oBAAqBP,KAAKO,oBAC1B0C,YAAY,EACZjB,WAAYA,OAMxBrC,EA/EA,CAAuCuD,EAAA,eA0FjCC,EAAqB,CACzBjC,eAAckC,EAAA,EACdhC,qBAAoBgC,EAAA,EACpB3C,uBAAsB2C,EAAA,EACtB9C,uBAAsB8C,EAAA,EACtBxC,oBAAmBwC,EAAA,GAGNC,EAAA,QAAAC,OAAAC,EAAA,IAAAD,CAAIE,EAAJ,CACbF,OAAAG,EAAA,EAAAH,CAlBsB,SAACxC,GACvB,IAAM4C,EAAM5C,EAAM6C,SAASC,YAAYF,IACvC,MAAO,CACLnC,SAAU+B,OAAAO,EAAA,EAAAP,CAAYxC,EAAMgD,SAAU,sBAAsBJ,EAAOJ,OAAAS,EAAA,EAAAT,CAAc,IACjFnC,UAAWuC,EACXlC,OAAQV,EAAMU,SAed2B,EAFFG,CAGE3D","file":"FolderPermissions.3932bda029d2299a9d96.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport Page from 'app/core/components/Page/Page';\nimport { Tooltip } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState, FolderState } from 'app/types';\nimport { DashboardAcl, PermissionLevel, NewDashboardAclItem } from 'app/types/acl';\nimport {\n  getFolderByUid,\n  getFolderPermissions,\n  updateFolderPermission,\n  removeFolderPermission,\n  addFolderPermission,\n} from './state/actions';\nimport { getLoadingNav } from './state/navModel';\nimport PermissionList from 'app/core/components/PermissionList/PermissionList';\nimport AddPermission from 'app/core/components/PermissionList/AddPermission';\nimport PermissionsInfo from 'app/core/components/PermissionList/PermissionsInfo';\n\nexport interface Props {\n  navModel: NavModel;\n  folderUid: string;\n  folder: FolderState;\n  getFolderByUid: typeof getFolderByUid;\n  getFolderPermissions: typeof getFolderPermissions;\n  updateFolderPermission: typeof updateFolderPermission;\n  removeFolderPermission: typeof removeFolderPermission;\n  addFolderPermission: typeof addFolderPermission;\n}\n\nexport interface State {\n  isAdding: boolean;\n}\n\nexport class FolderPermissions extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isAdding: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getFolderByUid(this.props.folderUid);\n    this.props.getFolderPermissions(this.props.folderUid);\n  }\n\n  onOpenAddPermissions = () => {\n    this.setState({ isAdding: true });\n  };\n\n  onRemoveItem = (item: DashboardAcl) => {\n    this.props.removeFolderPermission(item);\n  };\n\n  onPermissionChanged = (item: DashboardAcl, level: PermissionLevel) => {\n    this.props.updateFolderPermission(item, level);\n  };\n\n  onAddPermission = (newItem: NewDashboardAclItem) => {\n    return this.props.addFolderPermission(newItem);\n  };\n\n  onCancelAddPermission = () => {\n    this.setState({ isAdding: false });\n  };\n\n  render() {\n    const { navModel, folder } = this.props;\n    const { isAdding } = this.state;\n\n    if (folder.id === 0) {\n      return (\n        <Page navModel={navModel}>\n          <Page.Contents isLoading={true}>\n            <span />\n          </Page.Contents>\n        </Page>\n      );\n    }\n\n    const folderInfo = { title: folder.title, url: folder.url, id: folder.id };\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents>\n          <div className=\"page-action-bar\">\n            <h3 className=\"page-sub-heading\">Folder Permissions</h3>\n            <Tooltip placement=\"auto\" content={<PermissionsInfo />}>\n              <div className=\"page-sub-heading-icon\">\n                <i className=\"gicon gicon-question gicon--has-hover\" />\n              </div>\n            </Tooltip>\n            <div className=\"page-action-bar__spacer\" />\n            <button className=\"btn btn-primary pull-right\" onClick={this.onOpenAddPermissions} disabled={isAdding}>\n              Add Permission\n            </button>\n          </div>\n          <SlideDown in={isAdding}>\n            <AddPermission onAddPermission={this.onAddPermission} onCancel={this.onCancelAddPermission} />\n          </SlideDown>\n          <PermissionList\n            items={folder.permissions}\n            onRemoveItem={this.onRemoveItem}\n            onPermissionChanged={this.onPermissionChanged}\n            isFetching={false}\n            folderInfo={folderInfo}\n          />\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  const uid = state.location.routeParams.uid;\n  return {\n    navModel: getNavModel(state.navIndex, `folder-permissions-${uid}`, getLoadingNav(1)),\n    folderUid: uid,\n    folder: state.folder,\n  };\n};\n\nconst mapDispatchToProps = {\n  getFolderByUid,\n  getFolderPermissions,\n  updateFolderPermission,\n  removeFolderPermission,\n  addFolderPermission,\n};\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(FolderPermissions)\n);\n"],"sourceRoot":""}