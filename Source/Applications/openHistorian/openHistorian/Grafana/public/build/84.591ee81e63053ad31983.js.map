{"version":3,"sources":["webpack:///./public/app/plugins/datasource/dashboard/datasource.ts","webpack:///./public/app/plugins/datasource/dashboard/module.ts"],"names":["DashboardDatasource","instanceSettings","query","panelId","options","Promise","reject","resolve","DataSourceApi","plugin","DataSourcePlugin"],"mappings":"45BAMO,IAAMA,EAAb,YACE,WAAYC,GAA8C,O,4FAAA,+BAClDA,I,UAFV,O,kOAAA,M,EAAA,G,EAAA,wCAKmBC,GACf,qCAA+BA,EAAMC,WANzC,4BASQC,GACJ,OAAOC,QAAQC,OAAO,wCAV1B,uCAcI,OAAOD,QAAQE,QAAQ,S,2BAd3B,GAAyCC,iBCNzC,uCAGO,IAAMC,EAAS,IAAIC,mBAAiBV","file":"84.591ee81e63053ad31983.js","sourcesContent":["import { DataSourceApi, DataQueryRequest, DataQueryResponse, DataSourceInstanceSettings } from '@grafana/data';\nimport { DashboardQuery } from './types';\n\n/**\n * This should not really be called\n */\nexport class DashboardDatasource extends DataSourceApi<DashboardQuery> {\n  constructor(instanceSettings: DataSourceInstanceSettings) {\n    super(instanceSettings);\n  }\n\n  getCollapsedText(query: DashboardQuery) {\n    return `Dashboard Reference: ${query.panelId}`;\n  }\n\n  query(options: DataQueryRequest<DashboardQuery>): Promise<DataQueryResponse> {\n    return Promise.reject('This should not be called directly');\n  }\n\n  testDatasource() {\n    return Promise.resolve({});\n  }\n}\n","import { DashboardDatasource } from './datasource';\nimport { DataSourcePlugin } from '@grafana/data';\n\nexport const plugin = new DataSourcePlugin(DashboardDatasource);\n"],"sourceRoot":""}