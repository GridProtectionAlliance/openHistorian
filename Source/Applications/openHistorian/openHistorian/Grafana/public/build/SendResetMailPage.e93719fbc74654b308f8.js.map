{"version":3,"file":"SendResetMailPage.e93719fbc74654b308f8.js","mappings":"+RAYA,MAAMA,EAAmBC,GAAyB;AAAA,WACvCA,EAAM,OAAO,KAAK;AAAA,eACdA,EAAM,WAAW,UAAU;AAAA,iBACzBA,EAAM,WAAW;AAAA,gBAClBA,EAAM,QAAQ,CAAC;AAAA;AAAA,EAIlBC,EAAoB,IAAM,CACrC,KAAM,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAC1CC,KAAS,MAAWL,CAAe,EACnCM,EAAY,GAAGC,EAAA,qBAEfC,EAAY,MAAOC,GAAwB,CACnC,QAAM,KAAc,EAAE,KAAK,sCAAuCA,CAAS,GAErFL,EAAa,EAAI,CAErB,EAEA,OAAID,EAEA,gBAAC,WACC,gBAAC,SAAE,+FAA6F,EAChG,gBAAC,KAAS,CAAC,OAAO,IAAK,GACvB,gBAAC,KAAU,CAAC,QAAQ,UAAU,KAAMG,CAAA,EAAW,eAE/C,CACF,EAIF,gBAACI,EAAA,EAAI,CAAC,SAAUF,CAAA,EACb,CAAC,CAAE,SAAAG,EAAU,OAAAC,CAAO,IACnB,gCACE,gBAACC,EAAA,EAAM,KAAC,gBAAc,EACtB,gBAACC,EAAA,GACC,MAAM,OACN,YAAY,yDACZ,QAAS,CAAC,CAACF,EAAO,YAClB,MAAOA,GAAQ,aAAa,SAE5B,gBAACG,EAAA,GACC,GAAG,aACH,YAAY,oBACX,GAAGJ,EAAS,cAAe,CAAE,SAAU,+BAAgC,CAAC,EAC3E,CACF,EACA,gBAAC,KAAe,KACd,gBAACK,EAAA,GAAM,CAAC,KAAK,UAAS,kBAAgB,EACtC,gBAAC,KAAU,CAAC,KAAK,OAAO,KAAMV,CAAA,EAAW,eAEzC,CACF,EAEA,gBAAC,KAAE,UAAWD,CAAA,EAAQ,4EAA0E,CAClG,CAEJ,CAEJ,EClEaY,EAAoB,IAC/B,gBAACC,EAAA,GAAW,KACV,gBAAC,KAAQ,KACP,gBAAChB,EAAiB,IAAC,CACrB,CACF,EAGF,EAAee,C","sources":["webpack://grafana/./public/app/core/components/ForgottenPassword/ForgottenPassword.tsx","webpack://grafana/./public/app/core/components/ForgottenPassword/SendResetMailPage.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Field, Input, Button, Legend, Container, useStyles2, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport config from 'app/core/config';\n\ninterface EmailDTO {\n  userOrEmail: string;\n}\n\nconst paragraphStyles = (theme: GrafanaTheme2) => css`\n  color: ${theme.colors.text.secondary};\n  font-size: ${theme.typography.bodySmall.fontSize};\n  font-weight: ${theme.typography.fontWeightRegular};\n  margin-top: ${theme.spacing(1)};\n  display: block;\n`;\n\nexport const ForgottenPassword = () => {\n  const [emailSent, setEmailSent] = useState(false);\n  const styles = useStyles2(paragraphStyles);\n  const loginHref = `${config.appSubUrl}/login`;\n\n  const sendEmail = async (formModel: EmailDTO) => {\n    const res = await getBackendSrv().post('/api/user/password/send-reset-email', formModel);\n    if (res) {\n      setEmailSent(true);\n    }\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a reset link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={loginHref}>\n          Back to login\n        </LinkButton>\n      </div>\n    );\n  }\n  return (\n    <Form onSubmit={sendEmail}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Reset password</Legend>\n          <Field\n            label=\"User\"\n            description=\"Enter your information to get a reset link sent to you\"\n            invalid={!!errors.userOrEmail}\n            error={errors?.userOrEmail?.message}\n          >\n            <Input\n              id=\"user-input\"\n              placeholder=\"Email or username\"\n              {...register('userOrEmail', { required: 'Email or username is required' })}\n            />\n          </Field>\n          <HorizontalGroup>\n            <Button type=\"submit\">Send reset email</Button>\n            <LinkButton fill=\"text\" href={loginHref}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n\n          <p className={styles}>Did you forget your username or email? Contact your Grafana administrator.</p>\n        </>\n      )}\n    </Form>\n  );\n};\n","import React from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { ForgottenPassword } from './ForgottenPassword';\n\nexport const SendResetMailPage = () => (\n  <LoginLayout>\n    <InnerBox>\n      <ForgottenPassword />\n    </InnerBox>\n  </LoginLayout>\n);\n\nexport default SendResetMailPage;\n"],"names":["paragraphStyles","theme","ForgottenPassword","emailSent","setEmailSent","styles","loginHref","config","sendEmail","formModel","Form","register","errors","Legend","Field","Input","Button","SendResetMailPage","LoginLayout"],"sourceRoot":""}