{"version":3,"sources":["webpack:///./public/app/features/teams/CreateTeam.tsx"],"names":["CreateTeam","_super","_this","apply","this","arguments","state","name","email","create","event","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","preventDefault","_a","_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__","post","result","_b","sent","teamId","props","updateLocation","path","onEmailChange","setState","target","value","onNameChange","prototype","render","navModel","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_2__","Contents","Fragment","className","onSubmit","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","label","onChange","inputWidth","labelWidth","required","type","placeholder","tooltip","variant","react__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_core_actions__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_3__","module","react_redux__WEBPACK_IMPORTED_MODULE_7__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_8__","navIndex"],"mappings":"kRAqBAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,MAAe,CACbC,KAAM,GACNC,MAAO,IAGTN,EAAAO,OAAS,SAAOC,GAAuC,OAAAC,OAAAC,EAAA,UAAAD,CAAAT,OAAA,qGAKtC,OAJfQ,EAAMG,iBAEAC,EAAkBV,KAAKE,MAArBC,EAAIO,EAAAP,KAAEC,EAAKM,EAAAN,MAEJ,GAAMG,OAAAI,EAAA,cAAAJ,GAAgBK,KAAK,aAAc,CAAET,KAAIA,EAAEC,MAAKA,mBAA/DS,EAASC,EAAAC,QACJC,QACThB,KAAKiB,MAAMC,eAAe,CAAEC,KAAM,mBAAmBN,EAAOG,mBAIhElB,EAAAsB,cAAgB,SAACd,GACfR,EAAKuB,SAAS,CACZjB,MAAOE,EAAMgB,OAAOC,SAIxBzB,EAAA0B,aAAe,SAAClB,GACdR,EAAKuB,SAAS,CACZlB,KAAMG,EAAMgB,OAAOC,WA8CzB,OAvEgChB,OAAAC,EAAA,UAAAD,CAAAX,EAAAC,GA6B9BD,EAAA6B,UAAAC,OAAA,WACU,IAAAC,EAAA3B,KAAAiB,MAAAU,SACFjB,EAAAV,KAAAE,MAAEC,EAAAO,EAAAP,KAAMC,EAAAM,EAAAN,MAEd,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,SAAUA,GACdC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,KACZJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAA,MAAII,UAAU,oBAAkB,YAEhCN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAgBC,SAAUnC,KAAKK,QAC7CuB,EAAAC,EAAAC,cAACM,EAAA,UAAS,CACRF,UAAU,UACVG,MAAM,OACNd,MAAOpB,EACPmC,SAAUtC,KAAKwB,aACfe,WAAY,GACZC,WAAY,GACZC,UAAQ,IAEVb,EAAAC,EAAAC,cAACM,EAAA,UAAS,CACRM,KAAK,QACLR,UAAU,UACVG,MAAM,QACNd,MAAOnB,EACPkC,SAAUtC,KAAKoB,cACfmB,WAAY,GACZC,WAAY,GACZG,YAAY,iBACZC,QAAQ,6EAEVhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAACM,EAAA,OAAM,CAACM,KAAK,SAASG,QAAQ,WAAS,gBAUvDjD,EAvEA,CAAgCkD,EAAA,eA+EhC,IAAMC,EAAqB,CACzB7B,eAAc8B,EAAA,GAGDC,EAAA,QAAA1C,OAAA2C,EAAA,IAAA3C,CAAI4C,EAAJ,CAAY5C,OAAA6C,EAAA,QAAA7C,CAV3B,SAAyBL,GACvB,MAAO,CACLyB,SAAUpB,OAAA8C,EAAA,EAAA9C,CAAYL,EAAMoD,SAAU,WAQUP,EAAzBxC,CAA6CX","file":"CreateTeam.4d0490a94b199a11f40c.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { hot } from 'react-hot-loader';\nimport { FormField, Button } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { updateLocation } from '../../core/actions';\nimport { connect } from 'react-redux';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nexport interface Props {\n  navModel: NavModel;\n  updateLocation: typeof updateLocation;\n}\n\ninterface State {\n  name: string;\n  email: string;\n}\n\nexport class CreateTeam extends PureComponent<Props, State> {\n  state: State = {\n    name: '',\n    email: '',\n  };\n\n  create = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { name, email } = this.state;\n\n    const result = await getBackendSrv().post('/api/teams', { name, email });\n    if (result.teamId) {\n      this.props.updateLocation({ path: `/org/teams/edit/${result.teamId}` });\n    }\n  };\n\n  onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n\n  onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  render() {\n    const { navModel } = this.props;\n    const { name, email } = this.state;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents>\n          <>\n            <h3 className=\"page-sub-heading\">New Team</h3>\n\n            <form className=\"gf-form-group\" onSubmit={this.create}>\n              <FormField\n                className=\"gf-form\"\n                label=\"Name\"\n                value={name}\n                onChange={this.onNameChange}\n                inputWidth={30}\n                labelWidth={10}\n                required\n              />\n              <FormField\n                type=\"email\"\n                className=\"gf-form\"\n                label=\"Email\"\n                value={email}\n                onChange={this.onEmailChange}\n                inputWidth={30}\n                labelWidth={10}\n                placeholder=\"email@test.com\"\n                tooltip=\"This is optional and is primarily used for allowing custom team avatars.\"\n              />\n              <div className=\"gf-form-button-row\">\n                <Button type=\"submit\" variant=\"primary\">\n                  Create\n                </Button>\n              </div>\n            </form>\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n  };\n}\n\nconst mapDispatchToProps = {\n  updateLocation,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(CreateTeam));\n"],"sourceRoot":""}