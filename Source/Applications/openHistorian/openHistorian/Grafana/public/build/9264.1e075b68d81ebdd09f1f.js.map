{"version":3,"file":"9264.1e075b68d81ebdd09f1f.js","mappings":"iPAYA,MAAMA,KAAoB,OAAC,IAAc,CAAC,OAAO,uBAAwB,GAqCzE,EAnC4B,IAAM,CAChC,KAAM,CAAE,KAAAC,CAAK,KAAI,KAA4B,EACvCC,EAAcD,EAAO,mBAAmBA,CAAI,EAAI,OAEhD,CAAE,qBAAAE,CAAqB,KAAI,MAAgB,EAC3C,CAAE,YAAAC,EAAa,UAAAC,EAAW,MAAAC,CAAM,KAAI,MAA2B,CACnE,aAAcH,GAAwB,GACtC,IAAKD,GAAe,EACtB,CAAC,EAED,OAAKA,EAIDG,KACK,OAAC,IAAkB,CAAC,KAAK,qBAAsB,GAGpDC,KACK,KAAgBA,CAAK,EAC1BN,KAEA,OAAC,IAAK,CAAC,SAAS,QAAQ,MAAM,wCAC3B,kBAAmBM,CAAK,EAC3B,EAICF,KAIE,OAAC,KAAY,CAAC,aAAcD,GAAwB,GAAI,iBAAkBC,CAAA,CAAa,EAHrFJ,KAlBA,OAAC,IAAc,CAAC,OAAO,uBAAwB,EAsB1D,C","sources":["webpack://grafana/./public/app/features/alerting/unified/components/contact-points/EditMessageTemplate.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nimport { Alert, LoadingPlaceholder } from '@grafana/ui';\nimport { EntityNotFound } from 'app/core/components/PageNotFound/EntityNotFound';\n\nimport { isNotFoundError } from '../../api/util';\nimport { useAlertmanager } from '../../state/AlertmanagerContext';\nimport { stringifyErrorLike } from '../../utils/misc';\nimport { TemplateForm } from '../receivers/TemplateForm';\n\nimport { useGetNotificationTemplate } from './useNotificationTemplates';\n\nconst notFoundComponent = <EntityNotFound entity=\"Notification template\" />;\n\nconst EditMessageTemplate = () => {\n  const { name } = useParams<{ name: string }>();\n  const templateUid = name ? decodeURIComponent(name) : undefined;\n\n  const { selectedAlertmanager } = useAlertmanager();\n  const { currentData, isLoading, error } = useGetNotificationTemplate({\n    alertmanager: selectedAlertmanager ?? '',\n    uid: templateUid ?? '',\n  });\n\n  if (!templateUid) {\n    return <EntityNotFound entity=\"Notification template\" />;\n  }\n\n  if (isLoading) {\n    return <LoadingPlaceholder text=\"Loading template...\" />;\n  }\n\n  if (error) {\n    return isNotFoundError(error) ? (\n      notFoundComponent\n    ) : (\n      <Alert severity=\"error\" title=\"Failed to fetch notification template\">\n        {stringifyErrorLike(error)}\n      </Alert>\n    );\n  }\n\n  if (!currentData) {\n    return notFoundComponent;\n  }\n\n  return <TemplateForm alertmanager={selectedAlertmanager ?? ''} originalTemplate={currentData} />;\n};\n\nexport default EditMessageTemplate;\n"],"names":["notFoundComponent","name","templateUid","selectedAlertmanager","currentData","isLoading","error"],"sourceRoot":""}