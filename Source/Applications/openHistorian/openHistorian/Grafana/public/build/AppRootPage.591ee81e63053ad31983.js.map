{"version":3,"sources":["webpack:///./node_modules/react-reverse-portal/dist/web/index.js","webpack:///./public/app/features/plugins/AppRootPage.tsx"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","createPortalNode","elementType","parent","lastPlaceholder","element","initialProps","document","createElement","Error","createElementNS","portalNode","setPortalProps","props","getInitialPortalProps","mount","newParent","newPlaceholder","unmount","domElement","HTMLElement","SVGElement","validateElementType","tagName","replaceChild","expectedPlaceholder","undefined","InPortal","_super","_this","call","addPropsChannel","assign","node","setState","nodeProps","state","componentDidMount","componentDidUpdate","render","_a","children","map","child","OutPortal","placeholderNode","passPropsThroughPortal","propsForTarget","currentPortalNode","placeholder","current","parentNode","componentWillUnmount","ref","createHtmlPortalNode","bind","getAppPluginPageError","meta","type","PluginType","app","enabled","AppRootPage","onNavChanged","nav","loading","pluginId","getPluginSettings","then","info","error","appEvents","emit","AppEvents","alertError","getWarningNav","importAppPlugin","plugin","getNotFoundNav","path","query","root","navModel","Contents","isLoading","Component","hot","module","connect","location","routeParams","slug"],"mappings":"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","file":"AppRootPage.591ee81e63053ad31983.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n// Internally, the portalNode must be for either HTML or SVG elements\nvar ELEMENT_TYPE_HTML = 'html';\nvar ELEMENT_TYPE_SVG = 'svg';\n// ReactDOM can handle several different namespaces, but they're not exported publicly\n// https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/DOMNamespaces.js#L8-L10\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nvar validateElementType = function (domElement, elementType) {\n    if (elementType === ELEMENT_TYPE_HTML) {\n        return domElement instanceof HTMLElement;\n    }\n    if (elementType === ELEMENT_TYPE_SVG) {\n        return domElement instanceof SVGElement;\n    }\n    throw new Error(\"Unrecognized element type \\\"\" + elementType + \"\\\" for validateElementType.\");\n};\n// This is the internal implementation: the public entry points set elementType to an appropriate value\nvar createPortalNode = function (elementType) {\n    var initialProps = {};\n    var parent;\n    var lastPlaceholder;\n    var element;\n    if (elementType === ELEMENT_TYPE_HTML) {\n        element = document.createElement('div');\n    }\n    else if (elementType === ELEMENT_TYPE_SVG) {\n        element = document.createElementNS(SVG_NAMESPACE, 'g');\n    }\n    else {\n        throw new Error(\"Invalid element type \\\"\" + elementType + \"\\\" for createPortalNode: must be \\\"html\\\" or \\\"svg\\\".\");\n    }\n    var portalNode = {\n        element: element,\n        elementType: elementType,\n        setPortalProps: function (props) {\n            initialProps = props;\n        },\n        getInitialPortalProps: function () {\n            return initialProps;\n        },\n        mount: function (newParent, newPlaceholder) {\n            if (newPlaceholder === lastPlaceholder) {\n                // Already mounted - noop.\n                return;\n            }\n            portalNode.unmount();\n            // To support SVG and other non-html elements, the portalNode's elementType needs to match\n            // the elementType it's being rendered into\n            if (newParent !== parent) {\n                if (!validateElementType(newParent, elementType)) {\n                    throw new Error(\"Invalid element type for portal: \\\"\" + elementType + \"\\\" portalNodes must be used with \" + elementType + \" elements, but OutPortal is within <\" + newParent.tagName + \">.\");\n                }\n            }\n            newParent.replaceChild(portalNode.element, newPlaceholder);\n            parent = newParent;\n            lastPlaceholder = newPlaceholder;\n        },\n        unmount: function (expectedPlaceholder) {\n            if (expectedPlaceholder && expectedPlaceholder !== lastPlaceholder) {\n                // Skip unmounts for placeholders that aren't currently mounted\n                // They will have been automatically unmounted already by a subsequent mount()\n                return;\n            }\n            if (parent && lastPlaceholder) {\n                parent.replaceChild(lastPlaceholder, portalNode.element);\n                parent = undefined;\n                lastPlaceholder = undefined;\n            }\n        }\n    };\n    return portalNode;\n};\nvar InPortal = /** @class */ (function (_super) {\n    __extends(InPortal, _super);\n    function InPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.addPropsChannel = function () {\n            Object.assign(_this.props.node, {\n                setPortalProps: function (props) {\n                    // Rerender the child node here if/when the out portal props change\n                    _this.setState({ nodeProps: props });\n                }\n            });\n        };\n        _this.state = {\n            nodeProps: _this.props.node.getInitialPortalProps(),\n        };\n        return _this;\n    }\n    InPortal.prototype.componentDidMount = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.componentDidUpdate = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, node = _a.node;\n        return ReactDOM.createPortal(React.Children.map(children, function (child) {\n            if (!React.isValidElement(child))\n                return child;\n            return React.cloneElement(child, _this.state.nodeProps);\n        }), node.element);\n    };\n    return InPortal;\n}(React.PureComponent));\nvar OutPortal = /** @class */ (function (_super) {\n    __extends(OutPortal, _super);\n    function OutPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.placeholderNode = React.createRef();\n        _this.passPropsThroughPortal();\n        return _this;\n    }\n    OutPortal.prototype.passPropsThroughPortal = function () {\n        var propsForTarget = Object.assign({}, this.props, { node: undefined });\n        this.props.node.setPortalProps(propsForTarget);\n    };\n    OutPortal.prototype.componentDidMount = function () {\n        var node = this.props.node;\n        this.currentPortalNode = node;\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentDidUpdate = function () {\n        // We re-mount on update, just in case we were unmounted (e.g. by\n        // a second OutPortal, which has now been removed)\n        var node = this.props.node;\n        // If we're switching portal nodes, we need to clean up the current one first.\n        if (this.currentPortalNode && node !== this.currentPortalNode) {\n            this.currentPortalNode.unmount(this.placeholderNode.current);\n            this.currentPortalNode = node;\n        }\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentWillUnmount = function () {\n        var node = this.props.node;\n        node.unmount(this.placeholderNode.current);\n    };\n    OutPortal.prototype.render = function () {\n        // Render a placeholder to the DOM, so we can get a reference into\n        // our location in the DOM, and swap it out for the portaled node.\n        // A <div> placeholder works fine even for SVG.\n        return React.createElement(\"div\", { ref: this.placeholderNode });\n    };\n    return OutPortal;\n}(React.PureComponent));\nvar createHtmlPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_HTML);\nvar createSvgPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_SVG);\nexport { createHtmlPortalNode, createSvgPortalNode, InPortal, OutPortal, };\n//# sourceMappingURL=index.js.map","// Libraries\nimport React, { Component } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\n// Types\nimport { StoreState } from 'app/types';\nimport { AppEvents, AppPlugin, AppPluginMeta, NavModel, PluginType, UrlQueryMap } from '@grafana/data';\nimport { createHtmlPortalNode, InPortal, OutPortal, HtmlPortalNode } from 'react-reverse-portal';\n\nimport Page from 'app/core/components/Page/Page';\nimport { getPluginSettings } from './PluginSettingsCache';\nimport { importAppPlugin } from './plugin_loader';\nimport { getNotFoundNav, getWarningNav, getExceptionNav } from 'app/core/nav_model_srv';\nimport { appEvents } from 'app/core/core';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\n\ninterface Props {\n  pluginId: string; // From the angular router\n  query: UrlQueryMap;\n  path: string;\n  slug?: string;\n}\n\ninterface State {\n  loading: boolean;\n  portalNode: HtmlPortalNode;\n  plugin?: AppPlugin | null;\n  nav?: NavModel;\n}\n\nexport function getAppPluginPageError(meta: AppPluginMeta) {\n  if (!meta) {\n    return 'Unknown Plugin';\n  }\n  if (meta.type !== PluginType.app) {\n    return 'Plugin must be an app';\n  }\n  if (!meta.enabled) {\n    return 'Application Not Enabled';\n  }\n  return null;\n}\n\nclass AppRootPage extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      portalNode: createHtmlPortalNode(),\n    };\n  }\n\n  async componentDidMount() {\n    const { pluginId } = this.props;\n\n    try {\n      const app = await getPluginSettings(pluginId).then(info => {\n        const error = getAppPluginPageError(info);\n        if (error) {\n          appEvents.emit(AppEvents.alertError, [error]);\n          this.setState({ nav: getWarningNav(error) });\n          return null;\n        }\n        return importAppPlugin(info);\n      });\n      this.setState({ plugin: app, loading: false });\n    } catch (err) {\n      this.setState({\n        plugin: null,\n        loading: false,\n        nav: process.env.NODE_ENV === 'development' ? getExceptionNav(err) : getNotFoundNav(),\n      });\n    }\n  }\n\n  onNavChanged = (nav: NavModel) => {\n    this.setState({ nav });\n  };\n\n  render() {\n    const { path, query } = this.props;\n    const { loading, plugin, nav, portalNode } = this.state;\n\n    if (plugin && !plugin.root) {\n      // TODO? redirect to plugin page?\n      return <div>No Root App</div>;\n    }\n\n    return (\n      <>\n        <InPortal node={portalNode}>\n          {plugin && plugin.root && (\n            <plugin.root meta={plugin.meta} query={query} path={path} onNavChanged={this.onNavChanged} />\n          )}\n        </InPortal>\n        {nav ? (\n          <Page navModel={nav}>\n            <Page.Contents isLoading={loading}>\n              <OutPortal node={portalNode} />\n            </Page.Contents>\n          </Page>\n        ) : (\n          <>\n            <OutPortal node={portalNode} />\n            {loading && <PageLoader />}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  pluginId: state.location.routeParams.pluginId,\n  slug: state.location.routeParams.slug,\n  query: state.location.query,\n  path: state.location.path,\n});\n\nexport default hot(module)(connect(mapStateToProps)(AppRootPage));\n"],"sourceRoot":""}