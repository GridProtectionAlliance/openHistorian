{"version":3,"sources":["webpack:///./public/app/features/folders/FolderSettingsPage.tsx"],"names":["FolderSettingsPage","_super","props","_this","call","this","onTitleChange","evt","setFolderTitle","target","value","onSave","tslib__WEBPACK_IMPORTED_MODULE_0__","preventDefault","stopPropagation","setState","isLoading","saveFolder","folder","_a","sent","onDelete","app_core_app_events__WEBPACK_IMPORTED_MODULE_6__","emit","title","text","icon","yesText","onConfirm","deleteFolder","uid","state","prototype","componentDidMount","getFolderByUid","folderUid","render","navModel","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_5__","Contents","className","name","onSubmit","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","type","onChange","disabled","canSave","hasChanged","onClick","react__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_state_actions__WEBPACK_IMPORTED_MODULE_8__","__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","location","routeParams","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_7__","navIndex","_state_navModel__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"qSA0BAA,EAAA,SAAAC,GACE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAUdF,EAAAG,cAAgB,SAACC,GACfJ,EAAKD,MAAMM,eAAeD,EAAIE,OAAOC,QAGvCP,EAAAQ,OAAS,SAAOJ,GAAqC,OAAAK,EAAA,EAAAT,OAAA,uEAInD,OAHAI,EAAIM,iBACJN,EAAIO,kBACJT,KAAKU,SAAS,CAAEC,WAAW,IAC3B,GAAMX,KAAKH,MAAMe,WAAWZ,KAAKH,MAAMgB,uBAAvCC,EAAAC,OACAf,KAAKU,SAAS,CAAEC,WAAW,cAG7Bb,EAAAkB,SAAW,SAACd,GACVA,EAAIO,kBACJP,EAAIM,iBAEJS,EAAA,EAAUC,KAAK,gBAAiB,CAC9BC,MAAO,SACPC,KAAM,4DACNC,KAAM,WACNC,QAAS,SACTC,UAAW,WACTzB,EAAKD,MAAM2B,aAAa1B,EAAKD,MAAMgB,OAAOY,SA/B9C3B,EAAK4B,MAAQ,CACXf,WAAW,KAoEjB,OAxEwCJ,EAAA,EAAAZ,EAAAC,GAQtCD,EAAAgC,UAAAC,kBAAA,WACE5B,KAAKH,MAAMgC,eAAe7B,KAAKH,MAAMiC,YA8BvCnC,EAAAgC,UAAAI,OAAA,WACQ,IAAAjB,EAAAd,KAAAH,MAAEmC,EAAAlB,EAAAkB,SAAUnB,EAAAC,EAAAD,OAElB,OACEoB,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,SAAUA,GACdC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,CAAC1B,UAAWX,KAAK0B,MAAMf,WACnCsB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,oBAAkB,mBAEhCL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACbL,EAAAC,EAAAC,cAAA,QAAMI,KAAK,qBAAqBC,SAAUxC,KAAKM,QAC7C2B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,SAAOG,UAAU,yBAAuB,QACxCL,EAAAC,EAAAC,cAACM,EAAA,MAAK,CACJC,KAAK,OACLJ,UAAU,yBACVjC,MAAOQ,EAAOM,MACdwB,SAAU3C,KAAKC,iBAGnBgC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASJ,UAAU,kBAAkBM,UAAW/B,EAAOgC,UAAYhC,EAAOiC,YAAU,QAGjGb,EAAAC,EAAAC,cAAA,UAAQG,UAAU,iBAAiBS,QAAS/C,KAAKgB,SAAU4B,UAAW/B,EAAOgC,SAAO,gBAUpGlD,EAxEA,CAAwCqD,EAAA,eAoFlCC,EAAqB,CACzBpB,eAAcqB,EAAA,EACdtC,WAAUsC,EAAA,EACV/C,eAAc+C,EAAA,EACd1B,aAAY0B,EAAA,GAGCC,EAAA,QAAAC,OAAAC,EAAA,IAAAD,CAAIE,EAAJ,CACbF,OAAAG,EAAA,EAAAH,CAlBsB,SAAC1B,GACvB,IAAMD,EAAMC,EAAM8B,SAASC,YAAYhC,IAEvC,MAAO,CACLO,SAAUoB,OAAAM,EAAA,EAAAN,CAAY1B,EAAMiC,SAAU,mBAAmBlC,EAAO2B,OAAAQ,EAAA,EAAAR,CAAc,IAC9EtB,UAAWL,EACXZ,OAAQa,EAAMb,SAcdoC,EAFFG,CAGEzD","file":"FolderSettingsPage.3932bda029d2299a9d96.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { NavModel } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport appEvents from 'app/core/app_events';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState, FolderState } from 'app/types';\nimport { getFolderByUid, setFolderTitle, saveFolder, deleteFolder } from './state/actions';\nimport { getLoadingNav } from './state/navModel';\n\nexport interface Props {\n  navModel: NavModel;\n  folderUid: string;\n  folder: FolderState;\n  getFolderByUid: typeof getFolderByUid;\n  setFolderTitle: typeof setFolderTitle;\n  saveFolder: typeof saveFolder;\n  deleteFolder: typeof deleteFolder;\n}\n\nexport interface State {\n  isLoading: boolean;\n}\n\nexport class FolderSettingsPage extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getFolderByUid(this.props.folderUid);\n  }\n\n  onTitleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.setFolderTitle(evt.target.value);\n  };\n\n  onSave = async (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.setState({ isLoading: true });\n    await this.props.saveFolder(this.props.folder);\n    this.setState({ isLoading: false });\n  };\n\n  onDelete = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: `Do you want to delete this folder and all its dashboards?`,\n      icon: 'fa-trash',\n      yesText: 'Delete',\n      onConfirm: () => {\n        this.props.deleteFolder(this.props.folder.uid);\n      },\n    });\n  };\n\n  render() {\n    const { navModel, folder } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={this.state.isLoading}>\n          <h3 className=\"page-sub-heading\">Folder Settings</h3>\n\n          <div className=\"section gf-form-group\">\n            <form name=\"folderSettingsForm\" onSubmit={this.onSave}>\n              <div className=\"gf-form\">\n                <label className=\"gf-form-label width-7\">Name</label>\n                <Input\n                  type=\"text\"\n                  className=\"gf-form-input width-30\"\n                  value={folder.title}\n                  onChange={this.onTitleChange}\n                />\n              </div>\n              <div className=\"gf-form-button-row\">\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={!folder.canSave || !folder.hasChanged}>\n                  Save\n                </button>\n                <button className=\"btn btn-danger\" onClick={this.onDelete} disabled={!folder.canSave}>\n                  Delete\n                </button>\n              </div>\n            </form>\n          </div>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => {\n  const uid = state.location.routeParams.uid;\n\n  return {\n    navModel: getNavModel(state.navIndex, `folder-settings-${uid}`, getLoadingNav(2)),\n    folderUid: uid,\n    folder: state.folder,\n  };\n};\n\nconst mapDispatchToProps = {\n  getFolderByUid,\n  saveFolder,\n  setFolderTitle,\n  deleteFolder,\n};\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(FolderSettingsPage)\n);\n"],"sourceRoot":""}