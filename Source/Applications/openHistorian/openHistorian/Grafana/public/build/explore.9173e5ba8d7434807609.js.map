{"version":3,"file":"explore.9173e5ba8d7434807609.js","mappings":"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","sources":["webpack://grafana/./public/app/features/correlations/useCorrelations.ts","webpack://grafana/./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/FlameGraphExploreContainer.tsx","webpack://grafana/./public/app/features/explore/Graph/exploreGraphStyleUtils.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useUpdate.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/misc/hookState.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useGetSet.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useCounter.js","webpack://grafana/./public/app/features/explore/Graph/useStructureRev.ts","webpack://grafana/./public/app/features/explore/Graph/ExploreGraph.tsx","webpack://grafana/./public/app/features/explore/Graph/ExploreGraphLabel.tsx","webpack://grafana/./public/app/features/explore/Graph/utils.ts","webpack://grafana/./public/app/features/explore/Graph/GraphContainer.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/SupplementaryResultError.tsx","webpack://grafana/./public/app/features/explore/utils/logsVolumeResponse.ts","webpack://grafana/./public/app/features/explore/LogsVolumePanelList.tsx","webpack://grafana/./public/app/features/explore/utils/logs.ts","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/LogsSamplePanel.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/utils/getRawPrometheusListItemsFromDataFrame.ts","webpack://grafana/./public/app/features/explore/PrometheusListView/ItemValues.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListItemAttributes.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListItem.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/ItemLabels.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListContainer.tsx","webpack://grafana/./public/app/features/explore/RawPrometheusContainer.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/ExplorePage.tsx","webpack://grafana/./public/app/features/explore/EmptyStateWrapper.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./public/app/features/inspector/types.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useSetState.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useCopyToClipboard.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-720cbd4f86/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useInterval.js","webpack://grafana/../../opt/drone/yarncache/copy-to-clipboard-npm-3.3.1-18029bce99-3c7b1c333d.zip/node_modules/copy-to-clipboard/index.js","webpack://grafana/../../opt/drone/yarncache/toggle-selection-npm-1.0.6-c506b73005-a90dc80ed1.zip/node_modules/toggle-selection/index.js"],"sourcesContent":["import { useAsyncFn } from 'react-use';\nimport { lastValueFrom } from 'rxjs';\n\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { getDataSourceSrv, FetchResponse } from '@grafana/runtime';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\n\nimport { Correlation, CreateCorrelationParams, RemoveCorrelationParams, UpdateCorrelationParams } from './types';\n\nexport interface CorrelationData extends Omit<Correlation, 'sourceUID' | 'targetUID'> {\n  source: DataSourceInstanceSettings;\n  target: DataSourceInstanceSettings;\n}\n\nconst toEnrichedCorrelationData = ({ sourceUID, targetUID, ...correlation }: Correlation): CorrelationData => ({\n  ...correlation,\n  source: getDataSourceSrv().getInstanceSettings(sourceUID)!,\n  target: getDataSourceSrv().getInstanceSettings(targetUID)!,\n});\n\nconst toEnrichedCorrelationsData = (correlations: Correlation[]) => correlations.map(toEnrichedCorrelationData);\nfunction getData<T>(response: FetchResponse<T>) {\n  return response.data;\n}\n\n/**\n * hook for managing correlations data.\n * TODO: ideally this hook shouldn't have any side effect like showing notifications on error\n * and let consumers handle them. It works nicely with the correlations settings page, but when we'll\n * expose this we'll have to remove those side effects.\n */\nexport const useCorrelations = () => {\n  const { backend } = useGrafana();\n\n  const [getInfo, get] = useAsyncFn<() => Promise<CorrelationData[]>>(\n    () =>\n      lastValueFrom(\n        backend.fetch<Correlation[]>({ url: '/api/datasources/correlations', method: 'GET', showErrorAlert: false })\n      )\n        .then(getData)\n        .then(toEnrichedCorrelationsData),\n    [backend]\n  );\n\n  const [createInfo, create] = useAsyncFn<(params: CreateCorrelationParams) => Promise<CorrelationData>>(\n    ({ sourceUID, ...correlation }) =>\n      backend.post(`/api/datasources/uid/${sourceUID}/correlations`, correlation).then(toEnrichedCorrelationData),\n    [backend]\n  );\n\n  const [removeInfo, remove] = useAsyncFn<(params: RemoveCorrelationParams) => Promise<{ message: string }>>(\n    ({ sourceUID, uid }) => backend.delete(`/api/datasources/uid/${sourceUID}/correlations/${uid}`),\n    [backend]\n  );\n\n  const [updateInfo, update] = useAsyncFn<(params: UpdateCorrelationParams) => Promise<CorrelationData>>(\n    ({ sourceUID, uid, ...correlation }) =>\n      backend\n        .patch(`/api/datasources/uid/${sourceUID}/correlations/${uid}`, correlation)\n        .then(toEnrichedCorrelationData),\n    [backend]\n  );\n\n  return {\n    create: {\n      execute: create,\n      ...createInfo,\n    },\n    update: {\n      execute: update,\n      ...updateInfo,\n    },\n    get: {\n      execute: get,\n      ...getInfo,\n    },\n    remove: {\n      execute: remove,\n      ...removeInfo,\n    },\n  };\n};\n","import {\n  ByNamesMatcherMode,\n  ConfigOverrideRule,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  fieldMatchers,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName, ...getNamesOfHiddenFields(overrides, data)]);\n\n      return {\n        ...fieldConfig,\n        overrides: [...fieldConfig.overrides, override],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, override],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    let existing = getExistingDisplayNames(current);\n    const nameOfHiddenFields = getNamesOfHiddenFields(overridesCopy, data);\n\n    if (nameOfHiddenFields.length > 0) {\n      existing = existing.filter((el) => nameOfHiddenFields.indexOf(el) < 0);\n    }\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName, ...nameOfHiddenFields]);\n\n    return {\n      ...fieldConfig,\n      overrides: [...overridesCopy, override],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [...overridesCopy, override],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return [...names];\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n\nconst getNamesOfHiddenFields = (overrides: ConfigOverrideRule[], data: DataFrame[]): string[] => {\n  let names: string[] = [];\n\n  for (const override of overrides) {\n    const property = override.properties.find((p) => p.id === 'custom.hideFrom');\n\n    if (property !== undefined && property.value?.legend === true) {\n      const info = fieldMatchers.get(override.matcher.id);\n      const matcher = info.get(override.matcher.options);\n\n      for (const frame of data) {\n        for (const field of frame.fields) {\n          if (field.type !== FieldType.number) {\n            continue;\n          }\n\n          const name = getFieldDisplayName(field, frame, data);\n\n          if (matcher(field, frame, data)) {\n            names.push(name);\n          }\n        }\n      }\n    }\n  }\n\n  return names;\n};\n","import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { useEffect, useState } from 'react';\n\nimport { ExploreId, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\n\ninterface Props {\n  exploreIdLeft: ExploreId;\n  exploreIdRight?: ExploreId;\n}\n\nexport const ExploreActions = ({ exploreIdLeft, exploreIdRight }: Props) => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n\n  useEffect(() => {\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      if (exploreIdRight) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdLeft));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [exploreIdLeft, exploreIdRight, splitted, query, dispatch]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","import React, { CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn = (props: Props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size) { return Math.round(n / size) * size; };\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith('%')) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        // For v18, update state sync\n        flushSync(function () {\n            _this.setState(newState);\n        });\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.navbarFixed};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide(theme)};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: ${theme.shape.radius.pill};\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: `${theme.components.horizontalDrawer.defaultHeight}px` }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  let errors = queryResponse?.errors;\n  if (!errors?.length && queryResponse?.error) {\n    errors = [queryResponse.error];\n  }\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (errors?.length) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab errors={errors} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\n\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'canvas'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\nimport { ExploreId } from 'app/types';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        isOnCanvas\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'canvas';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React, { useCallback } from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import { css } from '@emotion/css';\nimport React, { lazy, PureComponent, RefObject, Suspense } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { config, DataSourcePicker, reportInteraction } from '@grafana/runtime';\nimport { defaultIntervals, PageToolbar, RefreshPicker, SetInterval, ToolbarButton, ButtonGroup } from '@grafana/ui';\nimport { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\nimport { contextSrv } from 'app/core/core';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { AccessControlAction } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types/store';\n\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\nimport { getTimeSrv } from '../dashboard/services/TimeSrv';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen, maximizePaneAction, evenPaneResizeAction } from './state/main';\nimport { cancelQueries, runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\nconst getStyles = (exploreId: ExploreId, isLargerExploreId: boolean) => {\n  return {\n    rotateIcon: css({\n      '> div > svg': {\n        transform:\n          (exploreId === 'left' && isLargerExploreId) || (exploreId === 'right' && !isLargerExploreId)\n            ? 'rotate(180deg)'\n            : 'none',\n      },\n    }),\n  };\n};\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nclass UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    const { changeDatasource, exploreId } = this.props;\n    changeDatasource(exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  onCopyShortLink = async () => {\n    await createAndCopyShortLink(window.location.href);\n    reportInteraction('grafana_explore_shortened_link_clicked');\n  };\n\n  onOpenSplitView = () => {\n    const { split } = this.props;\n    split();\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  onCloseSplitView = () => {\n    const { closeSplit, exploreId } = this.props;\n    closeSplit(exploreId);\n    reportInteraction('grafana_explore_split_view_closed');\n  };\n\n  renderRefreshPicker = (showSmallTimePicker: boolean) => {\n    const { loading, refreshInterval, isLive } = this.props;\n\n    let refreshPickerText: string | undefined = loading ? 'Cancel' : 'Run query';\n    let refreshPickerTooltip = undefined;\n    let refreshPickerWidth = '108px';\n    if (showSmallTimePicker) {\n      refreshPickerTooltip = refreshPickerText;\n      refreshPickerText = undefined;\n      refreshPickerWidth = '35px';\n    }\n\n    return (\n      <RefreshPicker\n        key=\"refreshPicker\"\n        onIntervalChanged={this.onChangeRefreshInterval}\n        value={refreshInterval}\n        isLoading={loading}\n        text={refreshPickerText}\n        tooltip={refreshPickerTooltip}\n        intervals={getTimeSrv().getValidIntervals(defaultIntervals)}\n        isLive={isLive}\n        onRefresh={() => this.onRunQuery(loading)}\n        noIntervalPicker={isLive}\n        primary={true}\n        width={refreshPickerWidth}\n      />\n    );\n  };\n\n  renderActions = () => {\n    const {\n      splitted,\n      isLive,\n      exploreId,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      onChangeTime,\n      syncedTimes,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n      isPaused,\n      hasLiveOption,\n      containerWidth,\n      largerExploreId,\n    } = this.props;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n    const isLargerExploreId = largerExploreId === exploreId;\n    const styles = getStyles(exploreId, isLargerExploreId);\n\n    const showExploreToDashboard =\n      contextSrv.hasAccess(AccessControlAction.DashboardsCreate, contextSrv.isEditor) ||\n      contextSrv.hasAccess(AccessControlAction.DashboardsWrite, contextSrv.isEditor);\n\n    const onClickResize = () => {\n      if (isLargerExploreId) {\n        this.props.evenPaneResizeAction();\n      } else {\n        this.props.maximizePaneAction({ exploreId: exploreId });\n      }\n    };\n\n    return [\n      !splitted ? (\n        <ToolbarButton\n          variant=\"canvas\"\n          key=\"split\"\n          tooltip=\"Split the pane\"\n          onClick={this.onOpenSplitView}\n          icon=\"columns\"\n          disabled={isLive}\n        >\n          Split\n        </ToolbarButton>\n      ) : (\n        <ButtonGroup key=\"split-controls\">\n          <ToolbarButton\n            variant=\"canvas\"\n            tooltip={`${isLargerExploreId ? 'Narrow' : 'Widen'} pane`}\n            onClick={onClickResize}\n            icon={isLargerExploreId ? 'gf-movepane-left' : 'gf-movepane-right'}\n            iconOnly={true}\n            className={styles.rotateIcon}\n          />\n          <ToolbarButton tooltip=\"Close split pane\" onClick={this.onCloseSplitView} icon=\"times\" variant=\"canvas\">\n            Close\n          </ToolbarButton>\n        </ButtonGroup>\n      ),\n\n      showExploreToDashboard && (\n        <Suspense key=\"addToDashboard\" fallback={null}>\n          <AddToDashboard exploreId={exploreId} />\n        </Suspense>\n      ),\n\n      !isLive && (\n        <ExploreTimeControls\n          key=\"timeControls\"\n          exploreId={exploreId}\n          range={range}\n          timeZone={timeZone}\n          fiscalYearStartMonth={fiscalYearStartMonth}\n          onChangeTime={onChangeTime}\n          splitted={splitted}\n          syncedTimes={syncedTimes}\n          onChangeTimeSync={this.onChangeTimeSync}\n          hideText={showSmallTimePicker}\n          onChangeTimeZone={onChangeTimeZone}\n          onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n        />\n      ),\n\n      this.renderRefreshPicker(showSmallTimePicker),\n\n      hasLiveOption && (\n        <LiveTailControls key=\"liveControls\" exploreId={exploreId}>\n          {(c) => {\n            const controls = {\n              ...c,\n              start: () => {\n                reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                  datasourceType: this.props.datasourceType,\n                });\n                c.start();\n              },\n            };\n            return (\n              <LiveTailButton\n                splitted={splitted}\n                isLive={isLive}\n                isPaused={isPaused}\n                start={controls.start}\n                pause={controls.pause}\n                resume={controls.resume}\n                stop={controls.stop}\n              />\n            );\n          }}\n        </LiveTailControls>\n      ),\n    ].filter(Boolean);\n  };\n\n  render() {\n    const { datasourceMissing, exploreId, splitted, containerWidth, topOfViewRef, refreshInterval, loading } =\n      this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const isTopnav = config.featureToggles.topnav;\n\n    const shareButton = (\n      <DashNavButton\n        key=\"share\"\n        tooltip=\"Copy shortened link\"\n        icon=\"share-alt\"\n        onClick={this.onCopyShortLink}\n        aria-label=\"Copy shortened link\"\n      />\n    );\n\n    const getDataSourcePicker = () =>\n      !datasourceMissing && (\n        <DataSourcePicker\n          key={`${exploreId}-ds-picker`}\n          mixed={config.featureToggles.exploreMixedDatasource === true}\n          onChange={this.onChangeDatasource}\n          current={this.props.datasourceRef}\n          hideTextValue={showSmallDataSourcePicker}\n          width={showSmallDataSourcePicker ? 8 : undefined}\n        />\n      );\n\n    const toolbarLeftItems = [\n      // We only want to show the shortened link button in the left Toolbar if topnav is not enabled as with topnav enabled it sits next to the brecrumbs\n      !isTopnav && exploreId === ExploreId.left && shareButton,\n      getDataSourcePicker(),\n    ].filter(Boolean);\n\n    return (\n      <div ref={topOfViewRef}>\n        {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n        {isTopnav && (\n          <div ref={topOfViewRef}>\n            <AppChromeUpdate actions={[shareButton, <div style={{ flex: 1 }} key=\"spacer\" />]} />\n          </div>\n        )}\n        <PageToolbar\n          aria-label=\"Explore toolbar\"\n          title={exploreId === ExploreId.left && !isTopnav ? 'Explore' : undefined}\n          pageIcon={exploreId === ExploreId.left && !isTopnav ? 'compass' : undefined}\n          leftItems={toolbarLeftItems}\n          forceShowLeftItems\n        >\n          {this.renderActions()}\n        </PageToolbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const { syncedTimes, largerExploreId } = state.explore;\n  const exploreItem = state.explore[exploreId]!;\n  const { datasourceInstance, datasourceMissing, range, refreshInterval, loading, isLive, isPaused, containerWidth } =\n    exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceRef: datasourceInstance?.getRef(),\n    datasourceType: datasourceInstance?.type,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n    largerExploreId,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n  maximizePaneAction,\n  evenPaneResizeAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2, CoreApp } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport FlameGraphContainer from '../../plugins/panel/flamegraph/components/FlameGraphContainer';\n\ninterface Props {\n  dataFrames: DataFrame[];\n}\n\nexport const FlameGraphExploreContainer = (props: Props) => {\n  const styles = useStyles2((theme) => getStyles(theme));\n\n  return (\n    <div className={styles.container}>\n      <FlameGraphContainer data={props.dataFrames[0]} app={CoreApp.Explore} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    background: ${theme.colors.background.primary};\n    display: flow-root;\n    padding: 0 ${theme.spacing(1)} ${theme.spacing(1)} ${theme.spacing(1)};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-radius: ${theme.shape.borderRadius(1)};\n  `,\n});\n","import produce from 'immer';\n\nimport { FieldConfigSource } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig, StackingMode } from '@grafana/schema';\nimport { ExploreGraphStyle } from 'app/types';\n\nexport type FieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport function applyGraphStyle(config: FieldConfig, style: ExploreGraphStyle): FieldConfig {\n  return produce(config, (draft) => {\n    if (draft.defaults.custom === undefined) {\n      draft.defaults.custom = {};\n    }\n\n    const { custom } = draft.defaults;\n\n    if (custom.stacking === undefined) {\n      custom.stacking = { group: 'A' };\n    }\n\n    switch (style) {\n      case 'lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 100;\n        break;\n      case 'points':\n        custom.drawStyle = GraphDrawStyle.Points;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'stacked_lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      case 'stacked_bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      default: {\n        // should never happen\n        // NOTE: casting to `never` will cause typescript\n        // to verify that the switch statement checks every possible\n        // enum-value\n        const invalidValue: never = style;\n        throw new Error(`Invalid graph-style: ${invalidValue}`);\n      }\n    }\n  });\n}\n","import { useReducer } from 'react';\nvar updateReducer = function (num) { return (num + 1) % 1000000; };\nexport default function useUpdate() {\n    var _a = useReducer(updateReducer, 0), update = _a[1];\n    return update;\n}\n","export function resolveHookState(nextState, currentState) {\n    if (typeof nextState === 'function') {\n        return nextState.length ? nextState(currentState) : nextState();\n    }\n    return nextState;\n}\n","import { useMemo, useRef } from 'react';\nimport useUpdate from './useUpdate';\nimport { resolveHookState } from './misc/hookState';\nexport default function useGetSet(initialState) {\n    var state = useRef(resolveHookState(initialState));\n    var update = useUpdate();\n    return useMemo(function () { return [\n        function () { return state.current; },\n        function (newState) {\n            state.current = resolveHookState(newState, state.current);\n            update();\n        },\n    ]; }, []);\n}\n","import { useMemo } from 'react';\nimport useGetSet from './useGetSet';\nimport { resolveHookState } from './misc/hookState';\nexport default function useCounter(initialValue, max, min) {\n    if (initialValue === void 0) { initialValue = 0; }\n    if (max === void 0) { max = null; }\n    if (min === void 0) { min = null; }\n    var init = resolveHookState(initialValue);\n    typeof init !== 'number' &&\n        console.error('initialValue has to be a number, got ' + typeof initialValue);\n    if (typeof min === 'number') {\n        init = Math.max(init, min);\n    }\n    else if (min !== null) {\n        console.error('min has to be a number, got ' + typeof min);\n    }\n    if (typeof max === 'number') {\n        init = Math.min(init, max);\n    }\n    else if (max !== null) {\n        console.error('max has to be a number, got ' + typeof max);\n    }\n    var _a = useGetSet(init), get = _a[0], setInternal = _a[1];\n    return [\n        get(),\n        useMemo(function () {\n            var set = function (newState) {\n                var prevState = get();\n                var rState = resolveHookState(newState, prevState);\n                if (prevState !== rState) {\n                    if (typeof min === 'number') {\n                        rState = Math.max(rState, min);\n                    }\n                    if (typeof max === 'number') {\n                        rState = Math.min(rState, max);\n                    }\n                    prevState !== rState && setInternal(rState);\n                }\n            };\n            return {\n                get: get,\n                set: set,\n                inc: function (delta) {\n                    if (delta === void 0) { delta = 1; }\n                    var rDelta = resolveHookState(delta, get());\n                    if (typeof rDelta !== 'number') {\n                        console.error('delta has to be a number or function returning a number, got ' + typeof rDelta);\n                    }\n                    set(function (num) { return num + rDelta; });\n                },\n                dec: function (delta) {\n                    if (delta === void 0) { delta = 1; }\n                    var rDelta = resolveHookState(delta, get());\n                    if (typeof rDelta !== 'number') {\n                        console.error('delta has to be a number or function returning a number, got ' + typeof rDelta);\n                    }\n                    set(function (num) { return num - rDelta; });\n                },\n                reset: function (value) {\n                    if (value === void 0) { value = init; }\n                    var rValue = resolveHookState(value, get());\n                    if (typeof rValue !== 'number') {\n                        console.error('value has to be a number or function returning a number, got ' + typeof rValue);\n                    }\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\n                    init = rValue;\n                    set(rValue);\n                },\n            };\n        }, [init, min, max]),\n    ];\n}\n","import { useMemo } from 'react';\nimport { useCounter, usePrevious } from 'react-use';\n\nimport { DataFrame, compareArrayValues, compareDataFrameStructures } from '@grafana/data';\n\nexport function useStructureRev(frames: DataFrame[]) {\n  const [structureRev, { inc }] = useCounter(0);\n  const previousFrames = usePrevious(frames);\n\n  // We need to increment structureRev when the number of series changes.\n  // the function passed to useMemo runs during rendering, so when we get a different\n  // amount of data, structureRev is incremented before we render it\n  useMemo(() => {\n    if (previousFrames && !compareArrayValues(frames, previousFrames, compareDataFrameStructures)) {\n      inc();\n    }\n  }, [frames, previousFrames, inc]);\n\n  return structureRev;\n}\n","import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n  DashboardCursorSync,\n  EventBus,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode, SortOrder } from '@grafana/schema';\nimport {\n  Button,\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { PanelOptions as TimeSeriesOptions } from 'app/plugins/panel/timeseries/panelcfg.gen';\nimport { ExploreGraphStyle } from 'app/types';\n\nimport { seriesVisibilityConfigFactory } from '../../dashboard/dashgrid/SeriesVisibilityConfigFactory';\n\nimport { applyGraphStyle } from './exploreGraphStyleUtils';\nimport { useStructureRev } from './useStructureRev';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n  graphStyle: ExploreGraphStyle;\n  anchorToZero?: boolean;\n  eventBus: EventBus;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  graphStyle,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n  anchorToZero = false,\n  eventBus,\n}: Props) {\n  const theme = useTheme2();\n  const style = useStyles2(getStyles);\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const fieldConfigRegistry = useMemo(\n    () => createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore'),\n    []\n  );\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      min: anchorToZero ? 0 : undefined,\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const styledFieldConfig = useMemo(() => applyGraphStyle(fieldConfig, graphStyle), [fieldConfig, graphStyle]);\n\n  const dataWithConfig = useMemo(() => {\n    return applyFieldOverrides({\n      fieldConfig: styledFieldConfig,\n      data: showAllTimeSeries ? data : data.slice(0, MAX_NUMBER_OF_TIME_SERIES),\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry,\n    });\n  }, [fieldConfigRegistry, data, timeZone, theme, styledFieldConfig, showAllTimeSeries]);\n\n  const structureRev = useStructureRev(dataWithConfig);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const panelContext: PanelContext = {\n    eventBus,\n    sync: () => DashboardCursorSync.Crosshair,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  const panelOptions: TimeSeriesOptions = useMemo(\n    () => ({\n      tooltip: { mode: tooltipDisplayMode, sort: SortOrder.None },\n      legend: {\n        displayMode: LegendDisplayMode.List,\n        showLegend: true,\n        placement: 'bottom',\n        calcs: [],\n      },\n    }),\n    [tooltipDisplayMode]\n  );\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {data.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={style.timeSeriesDisclaimer}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          Showing only {MAX_NUMBER_OF_TIME_SERIES} time series.\n          <Button\n            variant=\"primary\"\n            fill=\"text\"\n            onClick={() => setShowAllTimeSeries(true)}\n            className={style.showAllButton}\n          >\n            Show all {data.length}\n          </Button>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: dataWithConfig, timeRange, state: loadingState, annotations, structureRev }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        timeZone={timeZone}\n        options={panelOptions}\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    text-align: center;\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllButton: css`\n    margin-left: ${theme.spacing(0.5)};\n  `,\n});\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup, HorizontalGroup } from '@grafana/ui';\nimport { EXPLORE_GRAPH_STYLES, ExploreGraphStyle } from 'app/types';\n\nconst ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<ExploreGraphStyle>> = EXPLORE_GRAPH_STYLES.map((style) => ({\n  value: style,\n  // capital-case it and switch `_` to ` `\n  label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n}));\n\ntype Props = {\n  graphStyle: ExploreGraphStyle;\n  onChangeGraphStyle: (style: ExploreGraphStyle) => void;\n};\n\nexport function ExploreGraphLabel(props: Props) {\n  const { graphStyle, onChangeGraphStyle } = props;\n  return (\n    <HorizontalGroup justify=\"space-between\" wrap>\n      Graph\n      <RadioButtonGroup size=\"sm\" options={ALL_GRAPH_STYLE_OPTIONS} value={graphStyle} onChange={onChangeGraphStyle} />\n    </HorizontalGroup>\n  );\n}\n","import store from 'app/core/store';\nimport { ExploreGraphStyle, EXPLORE_GRAPH_STYLES } from 'app/types';\n\nconst GRAPH_STYLE_KEY = 'grafana.explore.style.graph';\nexport const storeGraphStyle = (graphStyle: string): void => {\n  store.set(GRAPH_STYLE_KEY, graphStyle);\n};\n\nexport const loadGraphStyle = (): ExploreGraphStyle => {\n  return toGraphStyle(store.get(GRAPH_STYLE_KEY));\n};\n\nconst DEFAULT_GRAPH_STYLE: ExploreGraphStyle = 'lines';\n// we use this function to take any kind of data we loaded\n// from an external source (URL, localStorage, whatever),\n// and extract the graph-style from it, or return the default\n// graph-style if we are not able to do that.\n// it is important that this function is able to take any form of data,\n// (be it objects, or arrays, or booleans or whatever),\n// and produce a best-effort graphStyle.\n// note that typescript makes sure we make no mistake in this function.\n// we do not rely on ` as ` or ` any `.\nexport const toGraphStyle = (data: unknown): ExploreGraphStyle => {\n  const found = EXPLORE_GRAPH_STYLES.find((v) => v === data);\n  return found ?? DEFAULT_GRAPH_STYLE;\n};\n","import React, { useCallback, useState } from 'react';\n\nimport { DataFrame, EventBus, AbsoluteTimeRange, TimeZone, SplitOpen, LoadingState } from '@grafana/data';\nimport { Collapse, useTheme2 } from '@grafana/ui';\nimport { ExploreGraphStyle } from 'app/types';\n\nimport { storeGraphStyle } from '../state/utils';\n\nimport { ExploreGraph } from './ExploreGraph';\nimport { ExploreGraphLabel } from './ExploreGraphLabel';\nimport { loadGraphStyle } from './utils';\n\ninterface Props {\n  loading: boolean;\n  data: DataFrame[];\n  annotations?: DataFrame[];\n  eventBus: EventBus;\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  onChangeTime: (absoluteRange: AbsoluteTimeRange) => void;\n  splitOpenFn: SplitOpen;\n  loadingState: LoadingState;\n}\n\nexport const GraphContainer = ({\n  loading,\n  data,\n  eventBus,\n  height,\n  width,\n  absoluteRange,\n  timeZone,\n  annotations,\n  onChangeTime,\n  splitOpenFn,\n  loadingState,\n}: Props) => {\n  const [graphStyle, setGraphStyle] = useState(loadGraphStyle);\n  const theme = useTheme2();\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n\n  const onGraphStyleChange = useCallback((graphStyle: ExploreGraphStyle) => {\n    storeGraphStyle(graphStyle);\n    setGraphStyle(graphStyle);\n  }, []);\n\n  return (\n    <Collapse\n      label={<ExploreGraphLabel graphStyle={graphStyle} onChangeGraphStyle={onGraphStyleChange} />}\n      loading={loading}\n      isOpen\n    >\n      <ExploreGraph\n        graphStyle={graphStyle}\n        data={data}\n        height={height}\n        width={width - spacing}\n        absoluteRange={absoluteRange}\n        onChangeTime={onChangeTime}\n        timeZone={timeZone}\n        annotations={annotations}\n        splitOpenFn={splitOpenFn}\n        loadingState={loadingState}\n        eventBus={eventBus}\n      />\n    </Collapse>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime = ({ resetKey, humanize, className }: ElapsedTimeProps) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../logs/components/getLogRowStyles';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: center;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import { css } from '@emotion/css';\nimport saveAs from 'file-saver';\nimport React from 'react';\n\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel, CoreApp, dateTimeFormat } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Dropdown, Menu, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { downloadLogsModelAsTxt } from '../inspector/utils/download';\nimport { LogLabels } from '../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../logs/components/LogRowMessage';\nimport { logRowsToReadableJson } from '../logs/utils';\n\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nconst getStyles = () => ({\n  metaContainer: css`\n    flex: 1;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  displayedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nenum DownloadFormat {\n  Text = 'text',\n  Json = 'json',\n}\n\nexport const LogsMetaRow = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    displayedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const style = useStyles2(getStyles);\n\n    const downloadLogs = (format: DownloadFormat) => {\n      reportInteraction('grafana_logs_download_logs_clicked', {\n        app: CoreApp.Explore,\n        format,\n        area: 'logs-meta-row',\n      });\n\n      switch (format) {\n        case DownloadFormat.Text:\n          downloadLogsModelAsTxt({ meta, rows: logRows }, 'Explore');\n          break;\n        case DownloadFormat.Json:\n          const jsonLogs = logRowsToReadableJson(logRows);\n          const blob = new Blob([JSON.stringify(jsonLogs)], {\n            type: 'application/json;charset=utf-8',\n          });\n\n          const fileName = `Explore-logs-${dateTimeFormat(new Date())}.json`;\n          saveAs(blob, fileName);\n          break;\n      }\n    };\n\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Deduplication count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (displayedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only selected fields',\n          value: renderMetaItem(displayedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n    const downloadMenu = (\n      <Menu>\n        <Menu.Item label=\"txt\" onClick={() => downloadLogs(DownloadFormat.Text)} />\n        <Menu.Item label=\"json\" onClick={() => downloadLogs(DownloadFormat.Json)} />\n      </Menu>\n    );\n    return (\n      <>\n        {logsMetaItem && (\n          <div className={style.metaContainer}>\n            <MetaInfoText\n              metaItems={logsMetaItem.map((item) => {\n                return {\n                  label: item.label,\n                  value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n                };\n              })}\n            />\n            <Dropdown overlay={downloadMenu}>\n              <ToolbarButton isOpen={false} variant=\"canvas\" icon=\"download-alt\">\n                Download\n              </ToolbarButton>\n            </Dropdown>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { CustomScrollbar, Spinner, useTheme2, clearButtonStyles } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <button\n              type=\"button\"\n              data-testid={`page${index + 1}`}\n              className={cx(clearButtonStyles(theme), styles.page)}\n              key={page.queryRange.to}\n              onClick={() => {\n                reportInteraction('grafana_explore_logs_pagination_clicked', {\n                  pageType: 'page',\n                  pageNumber: index + 1,\n                });\n                !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n              }}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport React, { memo, useEffect, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, GrafanaTheme2, LogsSortOrder, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { TOP_BAR_LEVEL_HEIGHT } from 'app/core/components/AppChrome/types';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component is mounted.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  const navContainerHeight = theme.flags.topnav\n    ? `calc(100vh - 2*${theme.spacing(2)} - 2*${TOP_BAR_LEVEL_HEIGHT}px)`\n    : '95vh';\n  return {\n    navContainer: css`\n      max-height: ${navContainerHeight};\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryResponse,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n  EventBus,\n  isLogsVolumeLimited,\n  getLogsVolumeAbsoluteRange,\n  GrafanaTheme2,\n  getLogsVolumeDataSourceInfo,\n} from '@grafana/data';\nimport { Icon, Tooltip, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { ExploreGraph } from './Graph/ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n};\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, timeZone, splitOpen, onUpdateTimeRange, onHiddenSeriesChanged } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  if (props.logsVolumeData === undefined) {\n    return null;\n  }\n\n  const logsVolumeData = props.logsVolumeData;\n\n  const logsVolumeInfo = getLogsVolumeDataSourceInfo(logsVolumeData?.data);\n  let extraInfo = logsVolumeInfo ? `${logsVolumeInfo.name}` : '';\n\n  if (isLogsVolumeLimited(logsVolumeData.data)) {\n    extraInfo = [\n      extraInfo,\n      'This datasource does not support full-range histograms. The graph below is based on the logs seen in the response.',\n    ]\n      .filter(identity)\n      .join('. ');\n  }\n\n  const range = isLogsVolumeLimited(logsVolumeData.data)\n    ? getLogsVolumeAbsoluteRange(logsVolumeData.data, props.absoluteRange)\n    : props.absoluteRange;\n\n  let LogsVolumePanelContent;\n\n  if (logsVolumeData?.data) {\n    if (logsVolumeData.data.length > 0) {\n      LogsVolumePanelContent = (\n        <ExploreGraph\n          graphStyle=\"lines\"\n          loadingState={logsVolumeData.state ?? LoadingState.Done}\n          data={logsVolumeData.data}\n          height={height}\n          width={width - spacing * 2}\n          absoluteRange={range}\n          onChangeTime={onUpdateTimeRange}\n          timeZone={timeZone}\n          splitOpenFn={splitOpen}\n          tooltipDisplayMode={TooltipDisplayMode.Multi}\n          onHiddenSeriesChanged={onHiddenSeriesChanged}\n          anchorToZero\n          eventBus={props.eventBus}\n        />\n      );\n    } else {\n      LogsVolumePanelContent = <span>No volume data.</span>;\n    }\n  }\n\n  let extraInfoComponent = <span>{extraInfo}</span>;\n\n  if (logsVolumeData.state === LoadingState.Streaming) {\n    extraInfoComponent = (\n      <>\n        {extraInfoComponent}\n        <Tooltip content=\"Streaming\">\n          <Icon name=\"circle-mono\" size=\"md\" className={styles.streaming} data-testid=\"logs-volume-streaming\" />\n        </Tooltip>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ height }} className={styles.contentContainer}>\n      {LogsVolumePanelContent}\n      {extraInfoComponent && <div className={styles.extraInfoContainer}>{extraInfoComponent}</div>}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: -10px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    `,\n    streaming: css`\n      color: ${theme.colors.success.text};\n    `,\n  };\n};\n","import React, { useState } from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, AlertVariant, Button } from '@grafana/ui';\n\ntype Props = {\n  error?: DataQueryError;\n  title: string;\n  severity?: AlertVariant;\n  suggestedAction?: string;\n  onSuggestedAction?(): void;\n  onRemove?(): void;\n};\nexport function SupplementaryResultError(props: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const SHORT_ERROR_MESSAGE_LIMIT = 100;\n  const { error, title, suggestedAction, onSuggestedAction, onRemove, severity = 'warning' } = props;\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = error?.message || error?.data?.message || '';\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n\n  return (\n    <Alert title={title} severity={severity} onRemove={onRemove}>\n      {showButton ? (\n        <Button\n          variant=\"secondary\"\n          size=\"xs\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Show details\n        </Button>\n      ) : (\n        message\n      )}\n      {suggestedAction && onSuggestedAction && (\n        <Button variant=\"primary\" size=\"xs\" onClick={onSuggestedAction}>\n          {suggestedAction}\n        </Button>\n      )}\n    </Alert>\n  );\n}\n","import { DataQueryError, DataQueryResponse } from '@grafana/data';\n\n// Currently we can only infer if an error response is a timeout or not.\nexport function isTimeoutErrorResponse(response: DataQueryResponse | undefined): boolean {\n  if (!response) {\n    return false;\n  }\n  if (!response.error && !response.errors) {\n    return false;\n  }\n\n  const errors = response.error ? [response.error] : response.errors || [];\n\n  return errors.some((error: DataQueryError) => {\n    const message = `${error.message || error.data?.message}`?.toLowerCase();\n    return message.includes('timeout');\n  });\n}\n","import { css } from '@emotion/css';\nimport { groupBy, mapValues } from 'lodash';\nimport React, { useMemo } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  DataQueryResponse,\n  EventBus,\n  GrafanaTheme2,\n  isLogsVolumeLimited,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { Button, InlineField, useStyles2 } from '@grafana/ui';\n\nimport { mergeLogsVolumeDataFrames } from '../logs/utils';\n\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { SupplementaryResultError } from './SupplementaryResultError';\nimport { isTimeoutErrorResponse } from './utils/logsVolumeResponse';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  onClose?(): void;\n};\n\nexport const LogsVolumePanelList = ({\n  logsVolumeData,\n  absoluteRange,\n  onUpdateTimeRange,\n  width,\n  onLoadLogsVolume,\n  onHiddenSeriesChanged,\n  eventBus,\n  splitOpen,\n  timeZone,\n  onClose,\n}: Props) => {\n  const logVolumes: Record<string, DataFrame[]> = useMemo(() => {\n    const grouped = groupBy(logsVolumeData?.data || [], 'meta.custom.datasourceName');\n    return mapValues(grouped, (value) => {\n      return mergeLogsVolumeDataFrames(value);\n    });\n  }, [logsVolumeData]);\n\n  const styles = useStyles2(getStyles);\n\n  const numberOfLogVolumes = Object.keys(logVolumes).length;\n\n  const containsZoomed = Object.values(logVolumes).some((data: DataFrame[]) => {\n    const zoomRatio = logsLevelZoomRatio(data, absoluteRange);\n    return !isLogsVolumeLimited(data) && zoomRatio && zoomRatio < 1;\n  });\n\n  const timeoutError = isTimeoutErrorResponse(logsVolumeData);\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    return <span>Loading...</span>;\n  } else if (timeoutError) {\n    return (\n      <SupplementaryResultError\n        title=\"The logs volume query is taking too long and has timed out\"\n        // Using info to avoid users thinking that the actual query has failed.\n        severity=\"info\"\n        suggestedAction=\"Retry\"\n        onSuggestedAction={onLoadLogsVolume}\n        onRemove={onClose}\n      />\n    );\n  } else if (logsVolumeData?.error !== undefined) {\n    return <SupplementaryResultError error={logsVolumeData.error} title=\"Failed to load log volume for this query\" />;\n  }\n  return (\n    <div className={styles.listContainer}>\n      {Object.keys(logVolumes).map((name, index) => {\n        const logsVolumeData = { data: logVolumes[name] };\n        return (\n          <LogsVolumePanel\n            key={index}\n            absoluteRange={absoluteRange}\n            width={width}\n            logsVolumeData={logsVolumeData}\n            onUpdateTimeRange={onUpdateTimeRange}\n            timeZone={timeZone}\n            splitOpen={splitOpen}\n            onLoadLogsVolume={onLoadLogsVolume}\n            // TODO: Support filtering level from multiple log levels\n            onHiddenSeriesChanged={numberOfLogVolumes > 1 ? () => {} : onHiddenSeriesChanged}\n            eventBus={eventBus}\n          />\n        );\n      })}\n      {containsZoomed && (\n        <div className={styles.extraInfoContainer}>\n          <InlineField label=\"Reload log volume\" transparent>\n            <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n          </InlineField>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    listContainer: css`\n      padding-top: 10px;\n    `,\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataFrame[] | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData[0] && logsVolumeData[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","export const SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n  logsSortOrder: 'grafana.explore.logs.sortOrder',\n};\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent, createRef } from 'react';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  DataQueryResponse,\n  CoreApp,\n  DataHoverEvent,\n  DataHoverClearEvent,\n  EventBus,\n  DataSourceWithLogsContextSupport,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  RadioButtonGroup,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n  Collapse,\n} from '@grafana/ui';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logsModel';\nimport store from 'app/core/store';\nimport { ExploreId } from 'app/types/explore';\n\nimport { RowContextOptions } from '../logs/components/LogRowContextProvider';\nimport { LogRows } from '../logs/components/LogRows';\n\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { LogsVolumePanelList } from './LogsVolumePanelList';\nimport { SETTINGS_KEYS } from './utils/logs';\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: ExploreId;\n  datasourceType?: string;\n  logsVolumeEnabled: boolean;\n  logsVolumeData: DataQueryResponse | undefined;\n  scrollElement?: HTMLDivElement;\n  onSetLogsVolumeEnabled: (enabled: boolean) => void;\n  loadLogsVolumeData: () => void;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel: (key: string, value: string) => void;\n  onClickFilterOutLabel: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getLogRowContextUi?: DataSourceWithLogsContextSupport['getLogRowContextUi'];\n  getFieldLinks: (field: Field, rowIndex: number, dataFrame: DataFrame) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n  eventBus: EventBus;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  displayedFields: string[];\n  forceEscape: boolean;\n}\n\n// We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\nconst styleOverridesForStickyNavigation = css`\n  & > div {\n    overflow: visible;\n    & > div {\n      overflow: visible;\n    }\n  }\n`;\n\n// we need to define the order of these explicitly\nconst DEDUP_OPTIONS = [\n  LogsDedupStrategy.none,\n  LogsDedupStrategy.exact,\n  LogsDedupStrategy.numbers,\n  LogsDedupStrategy.signature,\n];\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n  logsVolumeEventBus: EventBus;\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    displayedFields: [],\n    forceEscape: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.logsVolumeEventBus = props.eventBus.newScopedBus('logsvolume', { onlyLocal: false });\n  }\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onLogRowHover = (row?: LogRowModel) => {\n    if (!row) {\n      this.props.eventBus.publish(new DataHoverClearEvent());\n    } else {\n      this.props.eventBus.publish(\n        new DataHoverEvent({\n          point: {\n            time: row.timeEpochMs,\n          },\n        })\n      );\n    }\n  };\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    reportInteraction('grafana_explore_logs_deduplication_clicked', {\n      deduplicationType: dedupStrategy,\n      datasourceType: this.props.datasourceType,\n    });\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangeWrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onToggleLogsVolumeCollapse = (isOpen: boolean) => {\n    this.props.onSetLogsVolumeEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_histogram_toggle_clicked', {\n      datasourceType: this.props.datasourceType,\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        displayedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n    if (!logRows || logRows.length === 0) {\n      return undefined;\n    }\n    const firstTimeStamp = logRows[0].timeEpochMs;\n    const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n    if (lastTimeStamp < firstTimeStamp) {\n      return { from: lastTimeStamp, to: firstTimeStamp };\n    }\n\n    return { from: firstTimeStamp, to: lastTimeStamp };\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      splitOpen,\n      logRows,\n      logsMeta,\n      logsVolumeEnabled,\n      logsVolumeData,\n      loadLogsVolumeData,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n      exploreId,\n      scrollElement,\n      getRowContext,\n      getLogRowContextUi,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      displayedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n    const navigationRange = this.createNavigationRange(logRows);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <Collapse label=\"Logs volume\" collapsible isOpen={logsVolumeEnabled} onToggle={this.onToggleLogsVolumeCollapse}>\n          {logsVolumeEnabled && (\n            <LogsVolumePanelList\n              absoluteRange={absoluteRange}\n              width={width}\n              logsVolumeData={logsVolumeData}\n              onUpdateTimeRange={onChangeTime}\n              timeZone={timeZone}\n              splitOpen={splitOpen}\n              onLoadLogsVolume={loadLogsVolumeData}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n              eventBus={this.logsVolumeEventBus}\n              onClose={() => this.onToggleLogsVolumeCollapse(false)}\n            />\n          )}\n        </Collapse>\n        <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n          <div className={styles.logOptions} ref={this.topLogsRef}>\n            <InlineFieldRow>\n              <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={showTime}\n                  onChange={this.onChangeTime}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`show-time_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={showLabels}\n                  onChange={this.onChangeLabels}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`unique-labels_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={wrapLogMessage}\n                  onChange={this.onChangeWrapLogMessage}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`wrap-lines_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={prettifyLogMessage}\n                  onChange={this.onChangePrettifyLogMessage}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`prettify_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Deduplication\" className={styles.horizontalInlineLabel} transparent>\n                <RadioButtonGroup\n                  options={DEDUP_OPTIONS.map((dedupType) => ({\n                    label: capitalize(dedupType),\n                    value: dedupType,\n                    description: LogsDedupDescription[dedupType],\n                  }))}\n                  value={dedupStrategy}\n                  onChange={this.onChangeDedup}\n                  className={styles.radioButtons}\n                />\n              </InlineField>\n            </InlineFieldRow>\n            <div>\n              <InlineField label=\"Display results\" className={styles.horizontalInlineLabel} transparent>\n                <RadioButtonGroup\n                  disabled={isFlipping}\n                  options={[\n                    {\n                      label: 'Newest first',\n                      value: LogsSortOrder.Descending,\n                      description: 'Show results newest to oldest',\n                    },\n                    {\n                      label: 'Oldest first',\n                      value: LogsSortOrder.Ascending,\n                      description: 'Show results oldest to newest',\n                    },\n                  ]}\n                  value={logsSortOrder}\n                  onChange={this.onChangeLogsSortOrder}\n                  className={styles.radioButtons}\n                />\n              </InlineField>\n            </div>\n          </div>\n          <LogsMetaRow\n            logRows={logRows}\n            meta={logsMeta || []}\n            dedupStrategy={dedupStrategy}\n            dedupCount={dedupCount}\n            hasUnescapedContent={hasUnescapedContent}\n            forceEscape={forceEscape}\n            displayedFields={displayedFields}\n            onEscapeNewlines={this.onEscapeNewlines}\n            clearDetectedFields={this.clearDetectedFields}\n          />\n          <div className={styles.logsSection}>\n            <div className={styles.logRows} data-testid=\"logRows\">\n              <LogRows\n                logRows={logRows}\n                deduplicatedRows={dedupedRows}\n                dedupStrategy={dedupStrategy}\n                getRowContext={getRowContext}\n                getLogRowContextUi={getLogRowContextUi}\n                onClickFilterLabel={onClickFilterLabel}\n                onClickFilterOutLabel={onClickFilterOutLabel}\n                showContextToggle={showContextToggle}\n                showLabels={showLabels}\n                showTime={showTime}\n                enableLogDetails={true}\n                forceEscape={forceEscape}\n                wrapLogMessage={wrapLogMessage}\n                prettifyLogMessage={prettifyLogMessage}\n                timeZone={timeZone}\n                getFieldLinks={getFieldLinks}\n                logsSortOrder={logsSortOrder}\n                displayedFields={displayedFields}\n                onClickShowField={this.showField}\n                onClickHideField={this.hideField}\n                app={CoreApp.Explore}\n                scrollElement={scrollElement}\n                onLogRowHover={this.onLogRowHover}\n              />\n              {!loading && !hasData && !scanning && (\n                <div className={styles.noData}>\n                  No logs found.\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickScan}>\n                    Scan for older logs\n                  </Button>\n                </div>\n              )}\n              {scanning && (\n                <div className={styles.noData}>\n                  <span>{scanText}</span>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickStopScan}>\n                    Stop scan\n                  </Button>\n                </div>\n              )}\n            </div>\n            <LogsNavigation\n              logsSortOrder={logsSortOrder}\n              visibleRange={navigationRange ?? absoluteRange}\n              absoluteRange={absoluteRange}\n              timeZone={timeZone}\n              onChangeTime={onChangeTime}\n              loading={loading}\n              queries={logsQueries ?? []}\n              scrollToTopLogs={this.scrollToTopLogs}\n              addResultsToCache={addResultsToCache}\n              clearCache={clearCache}\n            />\n          </div>\n        </Collapse>\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(0, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    horizontalInlineLabel: css`\n      > label {\n        margin-right: 0;\n      }\n    `,\n    horizontalInlineSwitch: css`\n      padding: 0 ${theme.spacing(1)} 0 0;\n    `,\n    radioButtons: css`\n      margin: 0;\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  hasLogsContextUiSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  EventBus,\n  SplitOpen,\n  DataFrame,\n  SupplementaryQueryType,\n  DataQueryResponse,\n} from '@grafana/data';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { addResultsToCache, clearCache, loadSupplementaryQueryData, setSupplementaryQueryEnabled } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  scrollElement?: HTMLDivElement;\n  onClickFilterLabel: (key: string, value: string) => void;\n  onClickFilterOutLabel: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  eventBus: EventBus;\n  splitOpenFn: SplitOpen;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<DataQueryResponse | []> => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      // we need to find the query, and we need to be very sure that\n      // it's a query from this datasource\n      const query = (logsQueries ?? []).find(\n        (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n      );\n      return datasourceInstance.getLogRowContext(row, options, query);\n    }\n\n    return [];\n  };\n\n  getLogRowContextUi = (row: LogRowModel, runContextQuery?: () => void): React.ReactNode => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextUiSupport(datasourceInstance) && datasourceInstance.getLogRowContextUi) {\n      return datasourceInstance.getLogRowContextUi(row, runContextQuery);\n    }\n\n    return <></>;\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number, dataFrame: DataFrame) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range, dataFrame });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      loadSupplementaryQueryData,\n      setSupplementaryQueryEnabled,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n      scrollElement,\n      logsVolume,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Logs\n            exploreId={exploreId}\n            datasourceType={this.props.datasourceInstance?.type}\n            logRows={logRows}\n            logsMeta={logsMeta}\n            logsSeries={logsSeries}\n            logsVolumeEnabled={logsVolume.enabled}\n            onSetLogsVolumeEnabled={(enabled) =>\n              setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsVolume)\n            }\n            logsVolumeData={logsVolume.data}\n            logsQueries={logsQueries}\n            width={width}\n            splitOpen={splitOpenFn}\n            loading={loading}\n            loadingState={loadingState}\n            loadLogsVolumeData={() => loadSupplementaryQueryData(exploreId, SupplementaryQueryType.LogsVolume)}\n            onChangeTime={this.onChangeTime}\n            onClickFilterLabel={onClickFilterLabel}\n            onClickFilterOutLabel={onClickFilterOutLabel}\n            onStartScanning={onStartScanning}\n            onStopScanning={onStopScanning}\n            absoluteRange={absoluteRange}\n            visibleRange={visibleRange}\n            timeZone={timeZone}\n            scanning={scanning}\n            scanRange={range.raw}\n            showContextToggle={this.showContextToggle}\n            getRowContext={this.getLogRowContext}\n            getLogRowContextUi={this.getLogRowContextUi}\n            getFieldLinks={this.getFieldLinks}\n            addResultsToCache={() => addResultsToCache(exploreId)}\n            clearCache={() => clearCache(exploreId)}\n            scrollElement={scrollElement}\n            eventBus={this.props.eventBus}\n          />\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    supplementaryQueries,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n  const logsVolume = supplementaryQueries[SupplementaryQueryType.LogsVolume];\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolume,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DataQueryResponse,\n  DataSourceApi,\n  GrafanaTheme2,\n  hasSupplementaryQuerySupport,\n  LoadingState,\n  LogsDedupStrategy,\n  SplitOpen,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Collapse, useStyles2 } from '@grafana/ui';\nimport { dataFrameToLogsModel } from 'app/core/logsModel';\nimport store from 'app/core/store';\n\nimport { LogRows } from '../logs/components/LogRows';\n\nimport { SupplementaryResultError } from './SupplementaryResultError';\nimport { SETTINGS_KEYS } from './utils/logs';\n\ntype Props = {\n  queryResponse: DataQueryResponse | undefined;\n  enabled: boolean;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  datasourceInstance: DataSourceApi | null | undefined;\n  splitOpen: SplitOpen;\n  setLogsSampleEnabled: (enabled: boolean) => void;\n};\n\nexport function LogsSamplePanel(props: Props) {\n  const { queryResponse, timeZone, enabled, setLogsSampleEnabled, datasourceInstance, queries, splitOpen } = props;\n\n  const styles = useStyles2(getStyles);\n  const onToggleLogsSampleCollapse = (isOpen: boolean) => {\n    setLogsSampleEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_sample_toggle_clicked', {\n      datasourceType: datasourceInstance?.type ?? 'unknown',\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  const OpenInSplitViewButton = () => {\n    if (!hasSupplementaryQuerySupport(datasourceInstance, SupplementaryQueryType.LogsSample)) {\n      return null;\n    }\n\n    const logSampleQueries = queries\n      .map((query) => datasourceInstance.getSupplementaryQuery(SupplementaryQueryType.LogsSample, query))\n      .filter((query): query is DataQuery => !!query);\n\n    if (!logSampleQueries.length) {\n      return null;\n    }\n\n    const onSplitOpen = () => {\n      splitOpen({ queries: logSampleQueries, datasourceUid: datasourceInstance.uid });\n      reportInteraction('grafana_explore_logs_sample_split_button_clicked', {\n        datasourceType: datasourceInstance?.type ?? 'unknown',\n        queriesCount: logSampleQueries.length,\n      });\n    };\n\n    return (\n      <Button\n        size=\"sm\"\n        className={styles.logSamplesButton}\n        // TODO: support multiple queries (#62107)\n        // This currently works only for the first query as splitOpen supports only 1 query\n        onClick={onSplitOpen}\n      >\n        Open logs in split view\n      </Button>\n    );\n  };\n\n  let LogsSamplePanelContent: JSX.Element | null;\n\n  if (queryResponse === undefined) {\n    LogsSamplePanelContent = null;\n  } else if (queryResponse.error !== undefined) {\n    LogsSamplePanelContent = (\n      <SupplementaryResultError error={queryResponse.error} title=\"Failed to load logs sample for this query\" />\n    );\n  } else if (queryResponse.state === LoadingState.Loading) {\n    LogsSamplePanelContent = <span>Logs sample is loading...</span>;\n  } else if (queryResponse.data.length === 0 || queryResponse.data[0].length === 0) {\n    LogsSamplePanelContent = <span>No logs sample data.</span>;\n  } else {\n    const logs = dataFrameToLogsModel(queryResponse.data);\n    LogsSamplePanelContent = (\n      <>\n        <OpenInSplitViewButton />\n        <div className={styles.logContainer}>\n          <LogRows\n            logRows={logs.rows}\n            dedupStrategy={LogsDedupStrategy.none}\n            showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n            showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n            wrapLogMessage={store.getBool(SETTINGS_KEYS.wrapLogMessage, true)}\n            prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n            timeZone={timeZone}\n            enableLogDetails={true}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return queryResponse?.state !== LoadingState.NotStarted ? (\n    <Collapse label=\"Logs sample\" isOpen={enabled} collapsible={true} onToggle={onToggleLogsSampleCollapse}>\n      {LogsSamplePanelContent}\n    </Collapse>\n  ) : null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logSamplesButton: css`\n    position: absolute;\n    top: ${theme.spacing(1)};\n    right: ${theme.spacing(1)};\n  `,\n  logContainer: css`\n    overflow-x: scroll;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: no-data-card;\n    padding: ${theme.spacing(3)};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.radius.default};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n  `,\n  message: css`\n    font-size: ${theme.typography.h2.fontSize};\n    padding: ${theme.spacing(4)};\n    color: ${theme.colors.text.disabled};\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Collapse, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { ExploreId, StoreState } from '../../types';\n\nimport { useLinks } from './utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n  const toggled = () => {\n    toggleOpen();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      grafana_version: config.buildInfo.version,\n      isExpanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={<span>Node graph{countWarning} </span>}\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggled() : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { useDispatch, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { runQueries, changeQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries)!;\n  const dsSettings = useSelector(getDatasourceInstanceSettings)!;\n  const queryResponse = useSelector(getQueryResponse)!;\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueries({ exploreId, queries: newQueries }));\n    },\n    [dispatch, exploreId]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import { DataFrame, formattedValueToString } from '@grafana/data/src';\n\nimport { instantQueryRawVirtualizedListData } from '../PrometheusListView/RawListContainer';\n\ntype instantQueryMetricList = { [index: string]: { [index: string]: instantQueryRawVirtualizedListData } };\n\nexport const RawPrometheusListItemEmptyValue = ' ';\n\n/**\n * transform dataFrame to instantQueryRawVirtualizedListData\n * @param dataFrame\n */\nexport const getRawPrometheusListItemsFromDataFrame = (dataFrame: DataFrame): instantQueryRawVirtualizedListData[] => {\n  const metricList: instantQueryMetricList = {};\n  const outputList: instantQueryRawVirtualizedListData[] = [];\n\n  // Filter out time\n  const newFields = dataFrame.fields.filter((field) => !['Time'].includes(field.name));\n\n  // Get name from each series\n  let metricNames: string[] = newFields.find((field) => field.name === '__name__')?.values.toArray() ?? [];\n  if (!metricNames.length && newFields.length && newFields[0].values.length) {\n    // These results do not have series labels\n    // Matching the native prometheus UI which appears to only show the permutations of the first field in the query result.\n    metricNames = Array(newFields[0].values.length).fill('');\n  }\n\n  // Get everything that isn't the name from each series\n  const metricLabels = dataFrame.fields.filter((field) => !['__name__'].includes(field.name));\n\n  metricNames.forEach(function (metric: string, i: number) {\n    metricList[metric] = {};\n    const formattedMetric: instantQueryRawVirtualizedListData = metricList[metric][i] ?? {};\n\n    for (const field of metricLabels) {\n      const label = field.name;\n\n      if (label !== 'Time') {\n        // Initialize the objects\n        if (typeof field?.display === 'function') {\n          const stringValue = formattedValueToString(field?.display(field.values.get(i)));\n          if (stringValue) {\n            formattedMetric[label] = stringValue;\n          } else if (label.includes('Value #')) {\n            formattedMetric[label] = RawPrometheusListItemEmptyValue;\n          }\n        } else {\n          console.warn('Field display method is missing!');\n        }\n      }\n    }\n\n    outputList.push({\n      ...formattedMetric,\n      __name__: metric,\n    });\n  });\n\n  return outputList;\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/';\nimport { useStyles2 } from '@grafana/ui/';\n\nimport { RawPrometheusListItemEmptyValue } from '../utils/getRawPrometheusListItemsFromDataFrame';\n\nimport { rawListItemColumnWidth, rawListPaddingToHoldSpaceForCopyIcon, RawListValue } from './RawListItem';\n\nconst getStyles = (theme: GrafanaTheme2, totalNumberOfValues: number) => ({\n  rowWrapper: css`\n    position: relative;\n    min-width: ${rawListItemColumnWidth};\n    padding-right: 5px;\n  `,\n  rowValue: css`\n    white-space: nowrap;\n    overflow-x: auto;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n    display: block;\n    padding-right: 10px;\n\n    &::-webkit-scrollbar {\n      display: none; /* Chrome, Safari and Opera */\n    }\n\n    &:before {\n      pointer-events: none;\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      background: linear-gradient(to right, transparent calc(100% - 25px), ${theme.colors.background.primary});\n    }\n  `,\n  rowValuesWrap: css`\n    padding-left: ${rawListPaddingToHoldSpaceForCopyIcon};\n    width: calc(${totalNumberOfValues} * ${rawListItemColumnWidth});\n    display: flex;\n  `,\n});\n\nexport const ItemValues = ({\n  totalNumberOfValues,\n  values,\n  hideFieldsWithoutValues,\n}: {\n  totalNumberOfValues: number;\n  values: RawListValue[];\n  hideFieldsWithoutValues: boolean;\n}) => {\n  const styles = useStyles2((theme) => getStyles(theme, totalNumberOfValues));\n  return (\n    <div role={'cell'} className={styles.rowValuesWrap}>\n      {values?.map((value) => {\n        if (hideFieldsWithoutValues && (value.value === undefined || value.value === RawPrometheusListItemEmptyValue)) {\n          return null;\n        }\n\n        return (\n          <span key={value.key} className={styles.rowWrapper}>\n            <span className={styles.rowValue}>{value.value}</span>\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/';\nimport { useStyles2 } from '@grafana/ui/';\n\nimport { RawListValue } from './RawListItem';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  // Borrowed from the monaco styles\n  const reddish = theme.isDark ? '#ce9178' : '#a31515';\n  const greenish = theme.isDark ? '#73bf69' : '#56a64b';\n\n  return {\n    metricName: css`\n      color: ${greenish};\n    `,\n    metricValue: css`\n      color: ${reddish};\n    `,\n    expanded: css`\n      display: block;\n      text-indent: 1em;\n    `,\n  };\n};\n\nconst RawListItemAttributes = ({\n  value,\n  index,\n  length,\n  isExpandedView,\n}: {\n  value: RawListValue;\n  index: number;\n  length: number;\n  isExpandedView: boolean;\n}) => {\n  const styles = useStyles2(getStyles);\n\n  // From the beginning of the string to the start of the `=`\n  const attributeName = value.key;\n\n  // From after the `=\"` to before the last `\"`\n  const attributeValue = value.value;\n\n  return (\n    <span className={isExpandedView ? styles.expanded : ''} key={index}>\n      <span className={styles.metricName}>{attributeName}</span>\n      <span>=</span>\n      <span>&quot;</span>\n      <span className={styles.metricValue}>{attributeValue}</span>\n      <span>&quot;</span>\n      {index < length - 1 && <span>, </span>}\n    </span>\n  );\n};\n\nexport default RawListItemAttributes;\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nimport { Field, GrafanaTheme2 } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { IconButton, useStyles2 } from '@grafana/ui/';\n\nimport { ItemLabels } from './ItemLabels';\nimport { ItemValues } from './ItemValues';\nimport { instantQueryRawVirtualizedListData } from './RawListContainer';\nimport RawListItemAttributes from './RawListItemAttributes';\n\nexport interface RawListProps {\n  listItemData: instantQueryRawVirtualizedListData;\n  listKey: string;\n  totalNumberOfValues: number;\n  valueLabels?: Field[];\n  isExpandedView: boolean;\n}\n\nexport type RawListValue = { key: string; value: string };\nexport const rawListExtraSpaceAtEndOfLine = '20px';\nexport const rawListItemColumnWidth = '80px';\nexport const rawListPaddingToHoldSpaceForCopyIcon = '25px';\n\nconst getStyles = (theme: GrafanaTheme2, totalNumberOfValues: number, isExpandedView: boolean) => ({\n  rowWrapper: css`\n    border-bottom: 1px solid ${theme.colors.border.medium};\n    display: flex;\n    position: relative;\n    padding-left: 22px;\n    ${!isExpandedView ? 'align-items: center;' : ''}\n    ${!isExpandedView ? 'height: 100%;' : ''}\n  `,\n  copyToClipboardWrapper: css`\n    position: absolute;\n    left: 0;\n    ${!isExpandedView ? 'bottom: 0;' : ''}\n    ${isExpandedView ? 'top: 4px;' : 'top: 0;'}\n    margin: auto;\n    z-index: 1;\n    height: 16px;\n    width: 16px;\n  `,\n  rowLabelWrapWrap: css`\n    position: relative;\n    width: calc(100% - (${totalNumberOfValues} * ${rawListItemColumnWidth}) - ${rawListPaddingToHoldSpaceForCopyIcon});\n  `,\n  rowLabelWrap: css`\n    white-space: nowrap;\n    overflow-x: auto;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n    padding-right: ${rawListExtraSpaceAtEndOfLine};\n\n    &::-webkit-scrollbar {\n      display: none; /* Chrome, Safari and Opera */\n    }\n\n    &:after {\n      pointer-events: none;\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      background: linear-gradient(\n        to right,\n        transparent calc(100% - ${rawListExtraSpaceAtEndOfLine}),\n        ${theme.colors.background.primary}\n      );\n    }\n  `,\n});\n\nfunction getQueryValues(allLabels: Pick<instantQueryRawVirtualizedListData, 'Value' | string | number>) {\n  let attributeValues: RawListValue[] = [];\n  let values: RawListValue[] = [];\n  for (const key in allLabels) {\n    if (key in allLabels && allLabels[key] && !key.includes('Value')) {\n      attributeValues.push({\n        key: key,\n        value: allLabels[key],\n      });\n    } else if (key in allLabels && allLabels[key] && key.includes('Value')) {\n      values.push({\n        key: key,\n        value: allLabels[key],\n      });\n    }\n  }\n  return {\n    values: values,\n    attributeValues: attributeValues,\n  };\n}\n\nconst RawListItem = ({ listItemData, listKey, totalNumberOfValues, valueLabels, isExpandedView }: RawListProps) => {\n  const { __name__, ...allLabels } = listItemData;\n  const [_, copyToClipboard] = useCopyToClipboard();\n  const displayLength = valueLabels?.length ?? totalNumberOfValues;\n  const styles = useStyles2((theme) => getStyles(theme, displayLength, isExpandedView));\n  const { values, attributeValues } = getQueryValues(allLabels);\n\n  /**\n   * Transform the symbols in the dataFrame to uniform strings\n   */\n  const transformCopyValue = (value: string): string => {\n    if (value === '∞') {\n      return '+Inf';\n    }\n    return value;\n  };\n\n  // Convert the object back into a string\n  const stringRep = `${__name__}{${attributeValues.map((value) => {\n    // For histograms the string representation currently in this object is not directly queryable in all situations, leading to broken copied queries. Omitting the attribute from the copied result gives a query which returns all le values, which I assume to be a more common use case.\n    return value.key !== 'le' ? `${value.key}=\"${transformCopyValue(value.value)}\"` : '';\n  })}}`;\n\n  const hideFieldsWithoutValues = Boolean(valueLabels && valueLabels?.length);\n\n  return (\n    <>\n      {valueLabels !== undefined && isExpandedView && (\n        <ItemLabels valueLabels={valueLabels} expanded={isExpandedView} />\n      )}\n      <div key={listKey} className={styles.rowWrapper}>\n        <span className={styles.copyToClipboardWrapper}>\n          <IconButton\n            tooltip=\"Copy to clipboard\"\n            onClick={() => {\n              reportInteraction('grafana_explore_prometheus_instant_query_ui_raw_toggle_expand');\n              copyToClipboard(stringRep);\n            }}\n            name=\"copy\"\n          />\n        </span>\n        <span role={'cell'} className={styles.rowLabelWrapWrap}>\n          <div className={styles.rowLabelWrap}>\n            <span>{__name__}</span>\n            <span>{`{`}</span>\n            <span>\n              {attributeValues.map((value, index) => (\n                <RawListItemAttributes\n                  isExpandedView={isExpandedView}\n                  value={value}\n                  key={index}\n                  index={index}\n                  length={attributeValues.length}\n                />\n              ))}\n            </span>\n            <span>{`}`}</span>\n          </div>\n        </span>\n\n        {/* Output the values */}\n        <ItemValues\n          hideFieldsWithoutValues={hideFieldsWithoutValues}\n          totalNumberOfValues={displayLength}\n          values={values}\n        />\n      </div>\n    </>\n  );\n};\nexport default RawListItem;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Field, GrafanaTheme2 } from '@grafana/data/';\nimport { useStyles2 } from '@grafana/ui/';\n\nimport { InstantQueryRefIdIndex } from '../../../plugins/datasource/prometheus/datasource';\n\nimport { rawListItemColumnWidth } from './RawListItem';\n\nconst getItemLabelsStyles = (theme: GrafanaTheme2, expanded: boolean) => {\n  return {\n    valueNavigation: css`\n      width: ${rawListItemColumnWidth};\n      font-weight: bold;\n    `,\n    valueNavigationWrapper: css`\n      display: flex;\n      justify-content: flex-end;\n    `,\n    itemLabelsWrap: css`\n      ${!expanded ? `border-bottom: 1px solid ${theme.colors.border.medium}` : ''};\n    `,\n  };\n};\n\nconst formatValueName = (name: string): string => {\n  if (name.includes(InstantQueryRefIdIndex)) {\n    return name.replace(InstantQueryRefIdIndex, '');\n  }\n  return name;\n};\n\nexport const ItemLabels = ({ valueLabels, expanded }: { valueLabels: Field[]; expanded: boolean }) => {\n  const styles = useStyles2((theme) => getItemLabelsStyles(theme, expanded));\n\n  return (\n    <div className={styles.itemLabelsWrap}>\n      <div className={styles.valueNavigationWrapper}>\n        {valueLabels.map((value, index) => (\n          <span className={styles.valueNavigation} key={value.name}>\n            {formatValueName(value.name)}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { VariableSizeList as List } from 'react-window';\n\nimport { DataFrame, Field as DataFrameField } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { Field, Switch } from '@grafana/ui/';\n\nimport {\n  getRawPrometheusListItemsFromDataFrame,\n  RawPrometheusListItemEmptyValue,\n} from '../utils/getRawPrometheusListItemsFromDataFrame';\n\nimport { ItemLabels } from './ItemLabels';\nimport RawListItem from './RawListItem';\n\nexport type instantQueryRawVirtualizedListData = { Value: string; __name__: string; [index: string]: string };\n\nexport interface RawListContainerProps {\n  tableResult: DataFrame;\n}\n\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `,\n  switchWrapper: css`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0;\n  `,\n  switchLabel: css`\n    margin-left: 15px;\n    margin-bottom: 0;\n  `,\n  switch: css`\n    margin-left: 10px;\n  `,\n  resultCount: css`\n    margin-bottom: 4px;\n  `,\n  header: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 0;\n    font-size: 12px;\n    line-height: 1.25;\n  `,\n};\n\nconst mobileWidthThreshold = 480;\nconst numberOfColumnsBeforeExpandedViewIsDefault = 2;\n\n/**\n * The container that provides the virtualized list to the child components\n * @param props\n * @constructor\n */\nconst RawListContainer = (props: RawListContainerProps) => {\n  const { tableResult } = props;\n  const dataFrame = cloneDeep(tableResult);\n  const listRef = useRef<List | null>(null);\n\n  const valueLabels = dataFrame.fields.filter((field) => field.name.includes('Value'));\n  const items = getRawPrometheusListItemsFromDataFrame(dataFrame);\n  const { width } = useWindowSize();\n  const [isExpandedView, setIsExpandedView] = useState(\n    width <= mobileWidthThreshold || valueLabels.length > numberOfColumnsBeforeExpandedViewIsDefault\n  );\n\n  const onContentClick = () => {\n    setIsExpandedView(!isExpandedView);\n    const props = {\n      isExpanded: !isExpandedView,\n    };\n    reportInteraction('grafana_explore_prometheus_instant_query_ui_raw_toggle_expand', props);\n  };\n\n  useEffect(() => {\n    // After the expanded view has updated, tell the list to re-render\n    listRef.current?.resetAfterIndex(0, true);\n  }, [isExpandedView]);\n\n  const calculateInitialHeight = (length: number): number => {\n    const maxListHeight = 600;\n    const shortListLength = 10;\n\n    if (length < shortListLength) {\n      let sum = 0;\n      for (let i = 0; i < length; i++) {\n        sum += getListItemHeight(i, true);\n      }\n\n      return Math.min(maxListHeight, sum);\n    }\n\n    return maxListHeight;\n  };\n\n  const getListItemHeight = (itemIndex: number, isExpandedView: boolean) => {\n    const singleLineHeight = 32;\n    const additionalLineHeight = 22;\n    if (!isExpandedView) {\n      return singleLineHeight;\n    }\n    const item = items[itemIndex];\n\n    // Height of 1.5 lines, plus the number of non-value attributes times the height of additional lines\n    return 1.5 * singleLineHeight + (Object.keys(item).length - valueLabels.length) * additionalLineHeight;\n  };\n\n  return (\n    <section>\n      <header className={styles.header}>\n        <Field className={styles.switchWrapper} label={`Expand results`} htmlFor={'isExpandedView'}>\n          <div className={styles.switch}>\n            <Switch onChange={onContentClick} id=\"isExpandedView\" value={isExpandedView} label={`Expand results`} />\n          </div>\n        </Field>\n\n        <div className={styles.resultCount}>Result series: {items.length}</div>\n      </header>\n\n      <div role={'table'}>\n        {\n          <>\n            {/* Show the value headings above all the values, but only if we're in the contracted view */}\n            {valueLabels.length > 1 && !isExpandedView && (\n              <ItemLabels valueLabels={valueLabels} expanded={isExpandedView} />\n            )}\n            <List\n              ref={listRef}\n              itemCount={items.length}\n              className={styles.wrapper}\n              itemSize={(index) => getListItemHeight(index, isExpandedView)}\n              height={calculateInitialHeight(items.length)}\n              width=\"100%\"\n            >\n              {({ index, style }) => {\n                let filteredValueLabels: DataFrameField[] | undefined;\n                if (isExpandedView) {\n                  filteredValueLabels = valueLabels.filter((valueLabel) => {\n                    const itemWithValue = items[index][valueLabel.name];\n                    return itemWithValue && itemWithValue !== RawPrometheusListItemEmptyValue;\n                  });\n                }\n\n                return (\n                  <div role=\"row\" style={{ ...style, overflow: 'hidden' }}>\n                    <RawListItem\n                      isExpandedView={isExpandedView}\n                      valueLabels={filteredValueLabels}\n                      totalNumberOfValues={valueLabels.length}\n                      listKey={items[index].__name__}\n                      listItemData={items[index]}\n                    />\n                  </div>\n                );\n              }}\n            </List>\n          </>\n        }\n      </div>\n    </section>\n  );\n};\n\nexport default RawListContainer;\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, DataFrame, SelectableValue, SplitOpen, TimeZone, ValueLinkConfig } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { Collapse, RadioButtonGroup, Table, AdHocFilterItem } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState, TABLE_RESULTS_STYLE } from 'app/types';\nimport { ExploreId, ExploreItemState, TABLE_RESULTS_STYLES, TableResultsStyle } from 'app/types/explore';\n\nimport { MetaInfoText } from './MetaInfoText';\nimport RawListContainer from './PrometheusListView/RawListContainer';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface RawPrometheusContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  showRawPrometheus?: boolean;\n  splitOpenFn: SplitOpen;\n}\n\ninterface PrometheusContainerState {\n  resultsStyle: TableResultsStyle;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: RawPrometheusContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading: loadingInState, tableResult, rawPrometheusResult, range } = item;\n  const rawPrometheusFrame: DataFrame[] = rawPrometheusResult ? [rawPrometheusResult] : [];\n  const result = (tableResult?.length ?? false) > 0 && rawPrometheusResult ? tableResult : rawPrometheusFrame;\n  const loading = result && result.length > 0 ? false : loadingInState;\n\n  return { loading, tableResult: result, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = RawPrometheusContainerProps & ConnectedProps<typeof connector>;\n\nexport class RawPrometheusContainer extends PureComponent<Props, PrometheusContainerState> {\n  constructor(props: Props) {\n    super(props);\n\n    // If resultsStyle is undefined we won't render the toggle, and the default table will be rendered\n    if (props.showRawPrometheus) {\n      this.state = {\n        resultsStyle: TABLE_RESULTS_STYLE.raw,\n      };\n    }\n  }\n\n  getMainFrame(frames: DataFrame[] | null) {\n    return frames?.find((df) => df.meta?.custom?.parentRowIndex === undefined) || frames?.[0];\n  }\n\n  onChangeResultsStyle = (resultsStyle: TableResultsStyle) => {\n    this.setState({ resultsStyle });\n  };\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n    const mainFrame = this.getMainFrame(tableResult);\n\n    if (!mainFrame || mainFrame.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, mainFrame.length * 35) + 35);\n  }\n\n  renderLabel = () => {\n    const spacing = css({\n      display: 'flex',\n      justifyContent: 'space-between',\n    });\n    const ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<TableResultsStyle>> = TABLE_RESULTS_STYLES.map((style) => ({\n      value: style,\n      // capital-case it and switch `_` to ` `\n      label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n    }));\n\n    return (\n      <div className={spacing}>\n        {this.state.resultsStyle === TABLE_RESULTS_STYLE.raw ? 'Raw' : 'Table'}\n        <RadioButtonGroup\n          onClick={() => {\n            const props = {\n              state:\n                this.state.resultsStyle === TABLE_RESULTS_STYLE.table\n                  ? TABLE_RESULTS_STYLE.raw\n                  : TABLE_RESULTS_STYLE.table,\n            };\n            reportInteraction('grafana_explore_prometheus_instant_query_ui_toggle_clicked', props);\n          }}\n          size=\"sm\"\n          options={ALL_GRAPH_STYLE_OPTIONS}\n          value={this.state?.resultsStyle}\n          onChange={this.onChangeResultsStyle}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      });\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const frame of dataFrames) {\n        for (const field of frame.fields) {\n          field.getLinks = (config: ValueLinkConfig) => {\n            return getFieldLinksForExplore({\n              field,\n              rowIndex: config.valueRowIndex!,\n              splitOpenFn,\n              range,\n              dataFrame: frame!,\n            });\n          };\n        }\n      }\n    }\n\n    const mainFrame = this.getMainFrame(dataFrames);\n    const subFrames = dataFrames?.filter((df) => df.meta?.custom?.parentRowIndex !== undefined);\n    const label = this.state?.resultsStyle !== undefined ? this.renderLabel() : 'Table';\n\n    // Render table as default if resultsStyle is not set.\n    const renderTable = !this.state?.resultsStyle || this.state?.resultsStyle === TABLE_RESULTS_STYLE.table;\n\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        {mainFrame?.length && (\n          <>\n            {renderTable && (\n              <Table\n                ariaLabel={ariaLabel}\n                data={mainFrame}\n                subData={subFrames}\n                width={tableWidth}\n                height={height}\n                onCellFilterAdded={onCellFilterAdded}\n              />\n            )}\n            {this.state?.resultsStyle === TABLE_RESULTS_STYLE.raw && <RawListContainer tableResult={mainFrame} />}\n          </>\n        )}\n        {!mainFrame?.length && <MetaInfoText metaItems={[{ value: '0 series returned' }]} />}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(RawPrometheusContainer);\n","import React from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer = (props: ErrorContainerProps) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore[props.exploreId]?.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useAsync } from 'react-use';\n\nimport { GrafanaTheme2, DataSourceApi } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { TextArea, Button, IconButton, useStyles2, LoadingPlaceholder } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from 'app/features/explore/state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from 'app/features/explore/state/history';\nimport { setQueries } from 'app/features/explore/state/query';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.background.secondary;\n\n  return {\n    queryCard: css`\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(1)} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.shape.borderRadius(1)};\n      .starred {\n        color: ${theme.v1.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(1)};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border.weak};\n        padding: ${theme.spacing(0.5, 1)};\n      }\n      img {\n        height: ${theme.typography.fontSize}px;\n        max-width: ${theme.typography.fontSize}px;\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing(1)};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing(1)};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing(0.5, 2)};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n    loader: css`\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: ${theme.colors.background.secondary};\n    `,\n  };\n};\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const { value, loading } = useAsync(async () => {\n    let dsInstance: DataSourceApi | undefined;\n    try {\n      dsInstance = await getDataSourceSrv().get(query.datasourceUid);\n    } catch (e) {}\n\n    return {\n      dsInstance,\n      queries: await Promise.all(\n        query.queries.map(async (query) => {\n          let datasource;\n          if (dsInstance?.meta.mixed) {\n            try {\n              datasource = await getDataSourceSrv().get(query.datasource);\n            } catch (e) {}\n          } else {\n            datasource = dsInstance;\n          }\n\n          return {\n            query,\n            datasource,\n          };\n        })\n      ),\n    };\n  }, [query.datasourceUid, query.queries]);\n\n  const styles = useStyles2(getStyles);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceUid !== datasourceInstance?.uid;\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceUid);\n    }\n    setQueries(exploreId, queriesToRun);\n\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = async () => {\n    const datasources = [...query.queries.map((q) => q.datasource?.type || 'unknown')];\n    reportInteraction('grafana_explore_query_history_copy_query', {\n      datasources,\n      mixed: Boolean(value?.dsInstance?.meta.mixed),\n    });\n\n    if (loading || !value) {\n      return;\n    }\n\n    const queriesText = value.queries\n      .map((q) => {\n        return createQueryText(q.query, q.datasource);\n      })\n      .join('\\n');\n\n    copyStringToClipboard(queriesText);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(query.id),\n        })\n      );\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        onKeyDown={onKeyDown}\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment}>Save comment</Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {value?.dsInstance && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard}>\n      <div className={styles.cardRow}>\n        <DatasourceInfo dsApi={value?.dsInstance} size=\"sm\" />\n\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {value?.queries.map((q, i) => {\n            return <Query query={q} key={`${q}-${i}`} showDsInfo={value?.dsInstance?.meta.mixed} />;\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button\n              variant=\"secondary\"\n              onClick={onRunQuery}\n              disabled={!value?.dsInstance || value.queries.some((query) => !query.datasource)}\n            >\n              {datasourceInstance?.uid === query.datasourceUid ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n      {loading && <LoadingPlaceholder text=\"loading...\" className={styles.loader} />}\n    </div>\n  );\n}\n\nconst getQueryStyles = (theme: GrafanaTheme2) => ({\n  queryRow: css`\n    border-top: 1px solid ${theme.colors.border.weak};\n    display: flex;\n    flex-direction: row;\n    padding: 4px 0px;\n    gap: 4px;\n    :first-child {\n      border-top: none;\n    }\n  `,\n  dsInfoContainer: css`\n    display: flex;\n    align-items: center;\n  `,\n  queryText: css`\n    word-break: break-all;\n  `,\n});\n\ninterface QueryProps {\n  query: {\n    query: DataQuery;\n    datasource?: DataSourceApi;\n  };\n  /** Show datasource info (icon+name) alongside the query text */\n  showDsInfo?: boolean;\n}\n\nconst Query = ({ query, showDsInfo = false }: QueryProps) => {\n  const styles = useStyles2(getQueryStyles);\n\n  return (\n    <div className={styles.queryRow}>\n      {showDsInfo && (\n        <div className={styles.dsInfoContainer}>\n          <DatasourceInfo dsApi={query.datasource} size=\"md\" />\n          {': '}\n        </div>\n      )}\n      <span aria-label=\"Query text\" className={styles.queryText}>\n        {createQueryText(query.query, query.datasource)}\n      </span>\n    </div>\n  );\n};\n\nconst getDsInfoStyles = (size: 'sm' | 'md') => (theme: GrafanaTheme2) =>\n  css`\n    display: flex;\n    align-items: center;\n    font-size: ${theme.typography[size === 'sm' ? 'bodySmall' : 'body'].fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n    white-space: nowrap;\n  `;\n\nfunction DatasourceInfo({ dsApi, size }: { dsApi?: DataSourceApi; size: 'sm' | 'md' }) {\n  const getStyles = useCallback((theme: GrafanaTheme2) => getDsInfoStyles(size)(theme), [size]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles}>\n      <img\n        src={dsApi?.meta.info.logos.small || 'public/img/icn-datasource.svg'}\n        alt={dsApi?.type || 'Data source does not exist anymore'}\n        aria-label=\"Data source icon\"\n      />\n      <div aria-label=\"Data source name\">{dsApi?.name || 'Data source does not exist anymore'}</div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport React, { useEffect, useCallback } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, useStyles2 } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryQueriesTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  exploreId: ExploreId;\n  height: number;\n}\n\nconst getStyles = (theme: GrafanaTheme2, height: number) => {\n  const bgColor = theme.isLight ? theme.v1.palette.gray5 : theme.v1.palette.dark4;\n\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      &:last-of-type {\n        margin-top: ${theme.spacing(3)};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing(1)} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing(0.25, 0.5, 0.25, 1)};\n        border-radius: ${theme.shape.borderRadius(1)};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing(3)};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.h4.fontSize};\n      margin: ${theme.spacing(2, 0.25, 1, 0.25)};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing(3)} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport function RichHistoryQueriesTab(props: RichHistoryQueriesTabProps) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    exploreId,\n    height,\n    activeDatasourceInstance,\n  } = props;\n\n  const styles = useStyles2(useCallback((theme: GrafanaTheme2) => getStyles(theme, height), [height]));\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>Filter history</div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.from)}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={[richHistorySearchFilters.from, richHistorySearchFilters.to]}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.to)}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {loading && <span>Loading results...</span>}\n\n        {!loading &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? 'Displaying ' : ''}\n                    {mappedQueriesToHeadings[heading].length} queries\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q) => {\n                  return <RichHistoryCard query={q} key={q.id} exploreId={exploreId} />;\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { useStyles2, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing(3)};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    bottomMargin: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const styles = useStyles2(getStyles);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label=\"History time span\"\n          description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title=\"History time span\">\n          Grafana will keep entries up to {selectedOption?.label}.\n        </Alert>\n      )}\n      <InlineField\n        label=\"Change the default active tab from “Query history” to “Starred”\"\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label=\"Only show queries for data source currently active in Explore\"\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div className={styles.bold}>Clear query history</div>\n          <div className={styles.bottomMargin}>Delete all of your query history, permanently.</div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            Clear query history\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryStarredTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n  exploreId: ExploreId;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const bgColor = theme.isLight ? theme.v1.palette.gray5 : theme.v1.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing(0.25, 0.5, 0.25, 1)};\n        border-radius: ${theme.shape.borderRadius(1)};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing(3)};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n  };\n};\n\nexport function RichHistoryStarredTab(props: RichHistoryStarredTabProps) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    activeDatasourceInstance,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    exploreId,\n  } = props;\n\n  const styles = useStyles2(getStyles);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && <span>Loading results...</span>}\n        {!loading &&\n          queries.map((q) => {\n            return <RichHistoryCard query={q} key={q.id} exploreId={exploreId} />;\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Themeable2, TabbedContainer, TabConfig, withTheme2 } from '@grafana/ui';\nimport { SortOrder, RichHistorySearchFilters, RichHistorySettings } from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: 'Newest first', value: SortOrder.Descending },\n    { label: 'Oldest first', value: SortOrder.Ascending },\n    { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n    { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps extends Themeable2 {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (exploreId: ExploreId, filters: RichHistorySearchFilters) => void;\n  loadRichHistory: (exploreId: ExploreId) => void;\n  loadMoreRichHistory: (exploreId: ExploreId) => void;\n  clearRichHistoryResults: (exploreId: ExploreId) => void;\n  deleteRichHistory: () => void;\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  onClose: () => void;\n}\n\ntype RichHistoryState = {\n  loading: boolean;\n};\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps> {\n  state: RichHistoryState = {\n    loading: false,\n  };\n\n  updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    this.props.updateHistorySettings({ ...this.props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...this.props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    this.props.updateHistorySearchFilters(this.props.exploreId, filters);\n    this.loadRichHistory();\n  };\n\n  clearResults = () => {\n    this.props.clearRichHistoryResults(this.props.exploreId);\n  };\n\n  loadRichHistory = debounce(() => {\n    this.props.loadRichHistory(this.props.exploreId);\n    this.setState({\n      loading: true,\n    });\n  }, 300);\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () =>\n    this.updateSettings({ starredTabAsFirstTab: !this.props.richHistorySettings.starredTabAsFirstTab });\n\n  toggleActiveDatasourceOnly = () =>\n    this.updateSettings({ activeDatasourceOnly: !this.props.richHistorySettings.activeDatasourceOnly });\n\n  componentDidUpdate(prevProps: Readonly<RichHistoryProps>) {\n    if (prevProps.richHistory !== this.props.richHistory) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      richHistory,\n      richHistoryTotal,\n      height,\n      exploreId,\n      deleteRichHistory,\n      onClose,\n      firstTab,\n      activeDatasourceInstance,\n    } = this.props;\n    const { loading } = this.state;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          activeDatasourceInstance={activeDatasourceInstance}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          activeDatasourceInstance={activeDatasourceInstance}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettingsTab\n          retentionPeriod={this.props.richHistorySettings.retentionPeriod}\n          starredTabAsFirstTab={this.props.richHistorySettings.starredTabAsFirstTab}\n          activeDatasourceOnly={this.props.richHistorySettings.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme2(UnThemedRichHistory);\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { ExploreDrawer } from '../ExploreDrawer';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const richHistorySearchFilters = item.richHistorySearchFilters;\n  const richHistorySettings = explore.richHistorySettings;\n  const { datasourceInstance } = item;\n  const firstTab = richHistorySettings?.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory;\n  const { richHistory, richHistoryTotal } = item;\n  return {\n    richHistory,\n    richHistoryTotal,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance!.name,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n  const [height, setHeight] = useState(theme.components.horizontalDrawer.defaultHeight);\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n    reportInteraction('grafana_explore_query_history_opened', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  }, [initRichHistory]);\n\n  if (!richHistorySettings) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        richHistoryTotal={richHistoryTotal}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        onClose={onClose}\n        height={height}\n        deleteRichHistory={deleteRichHistory}\n        richHistorySettings={richHistorySettings}\n        richHistorySearchFilters={richHistorySearchFilters}\n        updateHistorySettings={updateHistorySettings}\n        updateHistorySearchFilters={updateHistorySearchFilters}\n        loadRichHistory={loadRichHistory}\n        loadMoreRichHistory={loadMoreRichHistory}\n        clearRichHistoryResults={clearRichHistoryResults}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        {!props.richHistoryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Rich history button\"\n            className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n            onClick={props.onClickRichHistoryButton}\n            icon=\"history\"\n          >\n            Query history\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ValueLinkConfig, applyFieldOverrides, TimeZone, SplitOpen, DataFrame } from '@grafana/data';\nimport { Collapse, Table, AdHocFilterItem } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from './MetaInfoText';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getMainFrame(frames: DataFrame[] | null) {\n    return frames?.find((df) => df.meta?.custom?.parentRowIndex === undefined) || frames?.[0];\n  }\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n    const mainFrame = this.getMainFrame(tableResult);\n\n    if (!mainFrame || mainFrame.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, mainFrame.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      });\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const frame of dataFrames) {\n        for (const field of frame.fields) {\n          field.getLinks = (config: ValueLinkConfig) => {\n            return getFieldLinksForExplore({\n              field,\n              rowIndex: config.valueRowIndex!,\n              splitOpenFn,\n              range,\n              dataFrame: frame!,\n            });\n          };\n        }\n      }\n    }\n\n    const mainFrame = this.getMainFrame(dataFrames);\n    const subFrames = dataFrames?.filter((df) => df.meta?.custom?.parentRowIndex !== undefined);\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {mainFrame?.length ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={mainFrame}\n            subData={subFrames}\n            width={tableWidth}\n            height={height}\n            maxHeight={600}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import { css } from '@emotion/css';\nimport React, { RefObject, useMemo, useState } from 'react';\n\nimport { DataFrame, SplitOpen, PanelData, GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\nimport { StoreState, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { TraceView } from './TraceView';\nimport TracePageSearchBar from './components/TracePageHeader/TracePageSearchBar';\nimport { TopOfViewRefType } from './components/TraceTimelineViewer/VirtualizedTraceView';\nimport { useSearch } from './useSearch';\nimport { transformDataFrames } from './utils/transform';\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n  queryResponse: PanelData;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    label: container;\n    margin-bottom: ${theme.spacing(1)};\n    background-color: ${theme.colors.background.primary};\n    border: 1px solid ${theme.colors.border.medium};\n    position: relative;\n    border-radius: ${theme.shape.radius.default};\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0;\n    padding: ${config.featureToggles.newTraceView ? 0 : theme.spacing(theme.components.panel.padding)};\n  `,\n});\n\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const style = useStyles2(getStyles);\n  const { dataFrames, splitOpenFn, exploreId, scrollElement, topOfViewRef, queryResponse } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n  const datasource = useSelector(\n    (state: StoreState) => state.explore[props.exploreId!]?.datasourceInstance ?? undefined\n  );\n  const datasourceType = datasource ? datasource?.type : 'unknown';\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <div className={style.container}>\n      {!config.featureToggles.newTraceView && (\n        <TracePageSearchBar\n          navigable={true}\n          searchValue={search}\n          setSearch={setSearch}\n          spanFindMatches={spanFindMatches}\n          searchBarSuffix={searchBarSuffix}\n          setSearchBarSuffix={setSearchBarSuffix}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n          datasourceType={datasourceType}\n        />\n      )}\n      <TraceView\n        exploreId={exploreId}\n        dataFrames={dataFrames}\n        splitOpenFn={splitOpenFn}\n        scrollElement={scrollElement}\n        traceProp={traceProp}\n        spanFindMatches={spanFindMatches}\n        search={search}\n        focusedSpanIdForSearch={focusedSpanIdForSearch}\n        queryResponse={queryResponse}\n        datasource={datasource}\n        topOfViewRef={topOfViewRef}\n        topOfViewRefType={TopOfViewRefType.Explore}\n      />\n    </div>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { createRef } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  AbsoluteTimeRange,\n  GrafanaTheme2,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  EventBus,\n  SplitOpenOptions,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  CustomScrollbar,\n  ErrorBoundaryAlert,\n  Themeable2,\n  withTheme2,\n  PanelContainer,\n  Alert,\n  AdHocFilterItem,\n} from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport appEvents from 'app/core/app_events';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\nimport { StoreState } from 'app/types';\nimport { AbsoluteTimeEvent } from 'app/types/events';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { FlameGraphExploreContainer } from './FlameGraphExploreContainer';\nimport { GraphContainer } from './Graph/GraphContainer';\nimport LogsContainer from './LogsContainer';\nimport { LogsSamplePanel } from './LogsSamplePanel';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport RawPrometheusContainer from './RawPrometheusContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport {\n  addQueryRow,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  setSupplementaryQueryEnabled,\n} from './state/query';\nimport { isSplit } from './state/selectors';\nimport { makeAbsoluteTime, updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n    exploreContainer: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      padding: ${theme.spacing(2)};\n      padding-top: 0;\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n  eventBus: EventBus;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  absoluteTimeUnsubsciber: Unsubscribable | undefined;\n  topOfViewRef = createRef<HTMLDivElement>();\n  graphEventBus: EventBus;\n  logsEventBus: EventBus;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n    this.graphEventBus = props.eventBus.newScopedBus('graph', { onlyLocal: false });\n    this.logsEventBus = props.eventBus.newScopedBus('logs', { onlyLocal: false });\n  }\n\n  componentDidMount() {\n    this.absoluteTimeUnsubsciber = appEvents.subscribe(AbsoluteTimeEvent, this.onMakeAbsoluteTime);\n  }\n\n  componentWillUnmount() {\n    this.absoluteTimeUnsubsciber?.unsubscribe();\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', options: { key, value } });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', options: { key, value } });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onMakeAbsoluteTime = () => {\n    const { makeAbsoluteTime } = this.props;\n    makeAbsoluteTime();\n  };\n\n  onModifyQueries = (action: QueryFixAction) => {\n    const modifier = async (query: DataQuery, modification: QueryFixAction) => {\n      const { datasource } = query;\n      if (datasource == null) {\n        return query;\n      }\n      const ds = await getDataSourceSrv().get(datasource);\n      if (ds.modifyQuery) {\n        return ds.modifyQuery(query, modification);\n      } else {\n        return query;\n      }\n    };\n    this.props.modifyQueries(this.props.exploreId, action, modifier);\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions<DataQuery>) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderCompactUrlWarning() {\n    return (\n      <FadeIn in={true} duration={100}>\n        <Alert severity=\"warning\" title=\"Compact URL Deprecation Notice\" topSpacing={2}>\n          The URL that brought you here was a compact URL - this format will soon be deprecated. Please replace the URL\n          previously saved with the URL available now.\n        </Alert>\n      </FadeIn>\n    );\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, queryResponse, loading, showFlameGraph } = this.props;\n\n    return (\n      <GraphContainer\n        loading={loading}\n        data={graphResult!}\n        height={showFlameGraph ? 180 : 400}\n        width={width}\n        absoluteRange={absoluteRange}\n        timeZone={timeZone}\n        onChangeTime={this.onUpdateTimeRange}\n        annotations={queryResponse.annotations}\n        splitOpenFn={this.onSplitOpen('graph')}\n        loadingState={queryResponse.state}\n        eventBus={this.graphEventBus}\n      />\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, timeZone } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={this.onCellFilterAdded}\n        timeZone={timeZone}\n        splitOpenFn={this.onSplitOpen('table')}\n      />\n    );\n  }\n\n  renderRawPrometheus(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <RawPrometheusContainer\n        showRawPrometheus={true}\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n        timeZone={timeZone}\n        splitOpenFn={this.onSplitOpen('table')}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n        scrollElement={this.scrollElement}\n        eventBus={this.logsEventBus}\n        splitOpenFn={this.onSplitOpen('logs')}\n      />\n    );\n  }\n\n  renderLogsSamplePanel() {\n    const { logsSample, timeZone, setSupplementaryQueryEnabled, exploreId, datasourceInstance, queries } = this.props;\n\n    return (\n      <LogsSamplePanel\n        queryResponse={logsSample.data}\n        timeZone={timeZone}\n        enabled={logsSample.enabled}\n        queries={queries}\n        datasourceInstance={datasourceInstance}\n        splitOpen={this.onSplitOpen('logsSample')}\n        setLogsSampleEnabled={(enabled: boolean) =>\n          setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsSample)\n        }\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <NodeGraphContainer\n        dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n        datasourceType={datasourceType}\n        splitOpenFn={this.onSplitOpen('nodeGraph')}\n      />\n    );\n  }\n\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  renderFlameGraphPanel() {\n    const { queryResponse } = this.props;\n    return <FlameGraphExploreContainer dataFrames={queryResponse.flameGraphFrames} />;\n  }\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <TraceViewContainer\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={this.onSplitOpen('traceView')}\n          scrollElement={this.scrollElement}\n          queryResponse={queryResponse}\n          topOfViewRef={this.topOfViewRef}\n        />\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showRawPrometheus,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n      showFlameGraph,\n      timeZone,\n      isFromCompactUrl,\n      showLogsSample,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.flameGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.rawPrometheusFrames,\n        queryResponse.traceFrames,\n      ].every((e) => e.length === 0);\n\n    return (\n      <CustomScrollbar\n        testId={selectors.pages.Explore.General.scrollView}\n        autoHeightMin={'100%'}\n        scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n      >\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} topOfViewRef={this.topOfViewRef} />\n        {isFromCompactUrl ? this.renderCompactUrlWarning() : null}\n        {datasourceMissing ? this.renderEmptyState(styles.exploreContainer) : null}\n        {datasourceInstance && (\n          <div className={styles.exploreContainer}>\n            <PanelContainer className={styles.queryContainer}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </PanelContainer>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showRawPrometheus && (\n                            <ErrorBoundaryAlert>{this.renderRawPrometheus(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showFlameGraph && <ErrorBoundaryAlert>{this.renderFlameGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                          {config.featureToggles.logsSampleInExplore && showLogsSample && (\n                            <ErrorBoundaryAlert>{this.renderLogsSamplePanel()}</ErrorBoundaryAlert>\n                          )}\n                          {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                          timeZone={timeZone}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    tableResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    showFlameGraph,\n    loading,\n    isFromCompactUrl,\n    showRawPrometheus,\n    supplementaryQueries,\n  } = item;\n\n  const logsSample = supplementaryQueries[SupplementaryQueryType.LogsSample];\n  // We want to show logs sample only if there are no log results and if there is already graph or table result\n  const showLogsSample = !!(logsSample.dataProvider !== undefined && !logsResult && (graphResult || tableResult));\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    showRawPrometheus,\n    showFlameGraph,\n    splitted: isSplit(state),\n    loading,\n    isFromCompactUrl: isFromCompactUrl || false,\n    logsSample,\n    showLogsSample,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  makeAbsoluteTime,\n  addQueryRow,\n  splitOpen,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withTheme2(connector(Explore));\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { EventBusExtended, EventBusSrv, GrafanaTheme2, EventBus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Themeable2, withTheme2 } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport store from 'app/core/store';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  queryDatasourceDetails,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport Explore from './Explore';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { lastSavedUrl, stateSave } from './state/main';\nimport { importQueries } from './state/query';\nimport { loadAndInitDatasource } from './state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    explore: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      overflow: hidden;\n      min-width: 600px;\n      & + & {\n        border-left: 1px dotted ${theme.colors.border.medium};\n      }\n    `,\n  };\n};\n\ninterface OwnProps extends Themeable2 {\n  exploreId: ExploreId;\n  urlQuery: string;\n  eventBus: EventBus;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nclass ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: HTMLDivElement | null = null;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      initialized,\n      exploreId,\n      initialDatasource,\n      initialQueries,\n      initialRange,\n      panelsState,\n      orgId,\n      isFromCompactUrl,\n    } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      let queriesDatasourceOverride = undefined;\n      let rootDatasourceOverride = undefined;\n      // if this is starting with no queries and an initial datasource exists (but is not mixed), look up the ref to use it (initial datasource can be a UID or name here)\n      if ((!initialQueries || initialQueries.length === 0) && initialDatasource) {\n        const isDSMixed =\n          initialDatasource === MIXED_DATASOURCE_NAME || initialDatasource.uid === MIXED_DATASOURCE_NAME;\n        if (!isDSMixed) {\n          const { instance } = await loadAndInitDatasource(orgId, initialDatasource);\n          queriesDatasourceOverride = instance.getRef();\n        }\n      }\n\n      let queries = await ensureQueries(initialQueries, queriesDatasourceOverride); // this will return an empty array if there are no datasources\n\n      const queriesDatasourceDetails = queryDatasourceDetails(queries);\n      if (!queriesDatasourceDetails.noneHaveDatasource) {\n        if (!queryDatasourceDetails(queries).allDatasourceSame) {\n          if (config.featureToggles.exploreMixedDatasource) {\n            rootDatasourceOverride = await getDatasourceSrv().get(MIXED_DATASOURCE_NAME);\n          } else {\n            // if we have mixed queries but the mixed datasource feature is not on, change the datasource to the first query that has one\n            const changeDatasourceUid = queries.find((query) => query.datasource?.uid)!.datasource!.uid;\n            if (changeDatasourceUid) {\n              rootDatasourceOverride = changeDatasourceUid;\n              const datasource = await getDatasourceSrv().get(changeDatasourceUid);\n              const datasourceInit = await getDatasourceSrv().get(initialDatasource);\n              await this.props.importQueries(exploreId, queries, datasourceInit, datasource);\n              await this.props.stateSave({ replace: true });\n              queries = this.props.initialQueries;\n            }\n          }\n        }\n      }\n\n      if (isFromCompactUrl) {\n        reportInteraction('grafana_explore_compact_notice');\n      }\n\n      this.props.initializeExplore(\n        exploreId,\n        rootDatasourceOverride || queries[0]?.datasource || initialDatasource,\n        queries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        panelsState,\n        isFromCompactUrl\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: HTMLDivElement) => {\n    this.el = el;\n  };\n\n  render() {\n    const { theme, exploreId, initialized, eventBus } = this.props;\n    const styles = getStyles(theme);\n    return (\n      <div className={styles.explore} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {initialized && <Explore exploreId={exploreId} eventBus={eventBus} />}\n      </div>\n    );\n  }\n}\n\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, panelsState } = urlState || {};\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries: queries,\n    initialRange,\n    panelsState,\n    orgId: state.user.orgId,\n    isFromCompactUrl: urlState.isFromCompactUrl || false,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  importQueries,\n  stateSave,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = withTheme2(connector(ExplorePaneContainerUnconnected));\n","import { css } from '@emotion/css';\nimport { inRange } from 'lodash';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { isTruthy } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { ErrorBoundaryAlert, usePanelContext } from '@grafana/ui';\nimport { SplitPaneWrapper } from 'app/core/components/SplitPaneWrapper/SplitPaneWrapper';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useDispatch, useSelector } from 'app/types';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\n\nimport { Branding } from '../../core/components/Branding/Branding';\nimport { useCorrelations } from '../correlations/useCorrelations';\n\nimport { ExploreActions } from './ExploreActions';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { lastSavedUrl, saveCorrelationsAction, resetExploreAction, splitSizeUpdateAction } from './state/main';\n\nconst styles = {\n  pageScrollbarWrapper: css`\n    width: 100%;\n    flex-grow: 1;\n    min-height: 0;\n    height: 100%;\n    position: relative;\n  `,\n};\n\nexport function ExplorePage(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  useExplorePageTitle();\n  const dispatch = useDispatch();\n  const queryParams = props.queryParams;\n  const { keybindings, chrome, config } = useGrafana();\n  const navModel = useNavModel('explore');\n  const { get } = useCorrelations();\n  const { warning } = useAppNotification();\n  const panelCtx = usePanelContext();\n  const eventBus = useRef(panelCtx.eventBus.newScopedBus('explore', { onlyLocal: false }));\n  const [rightPaneWidthRatio, setRightPaneWidthRatio] = useState(0.5);\n  const { width: windowWidth } = useWindowSize();\n  const minWidth = 200;\n  const exploreState = useSelector((state) => state.explore);\n\n  useEffect(() => {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    chrome.update({ sectionNav: navModel.node });\n  }, [chrome, navModel]);\n\n  useEffect(() => {\n    keybindings.setupTimeRangeBindings(false);\n  }, [keybindings]);\n\n  useEffect(() => {\n    if (!config.featureToggles.correlations) {\n      dispatch(saveCorrelationsAction([]));\n    } else {\n      get.execute();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (get.value) {\n      dispatch(saveCorrelationsAction(get.value));\n    } else if (get.error) {\n      dispatch(saveCorrelationsAction([]));\n      warning(\n        'Could not load correlations.',\n        'Correlations data could not be loaded, DataLinks may have partial data.'\n      );\n    }\n  }, [get.value, get.error, dispatch, warning]);\n\n  useEffect(() => {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    // timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n    // using those value regardless of what is passed to the init method.\n    // The updated value is then used by Explore to get the range for each pane.\n    // This means that if `from` and `to` parameters are present in the URL,\n    // it would be impossible to change the time range in Explore.\n    // We are only doing this on mount for 2 reasons:\n    // 1: Doing it on update means we'll enter a render loop.\n    // 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n    //    each pane state in order to not trigger un URL update from timeSrv.\n    const searchParams = locationService.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      locationService.partial({ from: undefined, to: undefined }, true);\n    }\n\n    return () => {\n      // Cleaning up Explore state so that when navigating back to Explore it starts from a blank state\n      dispatch(resetExploreAction());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- dispatch is stable, doesn't need to be in the deps array\n  }, []);\n\n  const updateSplitSize = (size: number) => {\n    const evenSplitWidth = windowWidth / 2;\n    const areBothSimilar = inRange(size, evenSplitWidth - 100, evenSplitWidth + 100);\n    if (areBothSimilar) {\n      dispatch(splitSizeUpdateAction({ largerExploreId: undefined }));\n    } else {\n      dispatch(\n        splitSizeUpdateAction({\n          largerExploreId: size > evenSplitWidth ? ExploreId.right : ExploreId.left,\n        })\n      );\n    }\n\n    setRightPaneWidthRatio(size / windowWidth);\n  };\n\n  const hasSplit = Boolean(queryParams.left) && Boolean(queryParams.right);\n  let widthCalc = 0;\n  if (hasSplit) {\n    if (!exploreState.evenSplitPanes && exploreState.maxedExploreId) {\n      widthCalc = exploreState.maxedExploreId === ExploreId.right ? windowWidth - minWidth : minWidth;\n    } else if (exploreState.evenSplitPanes) {\n      widthCalc = Math.floor(windowWidth / 2);\n    } else if (rightPaneWidthRatio !== undefined) {\n      widthCalc = windowWidth * rightPaneWidthRatio;\n    }\n  }\n\n  return (\n    <div className={styles.pageScrollbarWrapper}>\n      <ExploreActions exploreIdLeft={ExploreId.left} exploreIdRight={ExploreId.right} />\n\n      <SplitPaneWrapper\n        splitOrientation=\"vertical\"\n        paneSize={widthCalc}\n        minSize={minWidth}\n        maxSize={minWidth * -1}\n        primary=\"second\"\n        splitVisible={hasSplit}\n        paneStyle={{ overflow: 'auto', display: 'flex', flexDirection: 'column' }}\n        onDragFinished={(size) => {\n          if (size) {\n            updateSplitSize(size);\n          }\n        }}\n      >\n        <ErrorBoundaryAlert style=\"page\">\n          <ExplorePaneContainer exploreId={ExploreId.left} urlQuery={queryParams.left} eventBus={eventBus.current} />\n        </ErrorBoundaryAlert>\n        {hasSplit && (\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer\n              exploreId={ExploreId.right}\n              urlQuery={queryParams.right}\n              eventBus={eventBus.current}\n            />\n          </ErrorBoundaryAlert>\n        )}\n      </SplitPaneWrapper>\n    </div>\n  );\n}\n\nconst useExplorePageTitle = () => {\n  const navModel = useNavModel('explore');\n  const datasources = useSelector((state) =>\n    [state.explore.left.datasourceInstance?.name, state.explore.right?.datasourceInstance?.name].filter(isTruthy)\n  );\n\n  document.title = `${navModel.main.text} - ${datasources.join(' | ')} - ${Branding.AppTitle}`;\n};\n","import React, { useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { EmptyStateNoDatasource } from 'app/features/datasources/components/EmptyStateNoDatasource';\nimport { ExploreQueryParams, useSelector } from 'app/types';\n\nimport { useLoadDataSources } from '../datasources/state';\n\nimport { ExplorePage } from './ExplorePage';\n\nexport default function EmptyStateWrapper(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  const { isLoading } = useLoadDataSources();\n\n  const { hasDatasource } = useSelector((state) => ({\n    hasDatasource: state.dataSources.dataSourcesCount > 0,\n  }));\n  const [showOnboarding, setShowOnboarding] = useState(config.featureToggles.datasourceOnboarding);\n  const showExplorePage = hasDatasource || !showOnboarding;\n\n  return showExplorePage ? (\n    <ExplorePage {...props} />\n  ) : (\n    <EmptyStateNoDatasource\n      onCTAClick={() => setShowOnboarding(false)}\n      loading={isLoading}\n      title=\"Welcome to Grafana Explore!\"\n      CTAText=\"Or explore sample data\"\n      navId=\"explore\"\n    />\n  );\n}\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","export enum InspectTab {\n  Data = 'data',\n  Meta = 'meta', // When result metadata exists\n  Error = 'error',\n  Stats = 'stats',\n  JSON = 'json',\n  Query = 'query',\n  Help = 'help', // get info required for support+debugging\n}\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","import writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar useCopyToClipboard = function () {\n    var isMounted = useMountedState();\n    var _a = useSetState({\n        value: undefined,\n        error: undefined,\n        noUserInteraction: true,\n    }), state = _a[0], setState = _a[1];\n    var copyToClipboard = useCallback(function (value) {\n        if (!isMounted()) {\n            return;\n        }\n        var noUserInteraction;\n        var normalizedValue;\n        try {\n            // only strings and numbers casted to strings can be copied to clipboard\n            if (typeof value !== 'string' && typeof value !== 'number') {\n                var error = new Error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            // empty strings are also considered invalid\n            else if (value === '') {\n                var error = new Error(\"Cannot copy empty string to clipboard.\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            normalizedValue = value.toString();\n            noUserInteraction = writeText(normalizedValue);\n            setState({\n                value: normalizedValue,\n                error: undefined,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n        catch (error) {\n            setState({\n                value: normalizedValue,\n                error: error,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n    }, []);\n    return [state, copyToClipboard];\n};\nexport default useCopyToClipboard;\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["toEnrichedCorrelationData","sourceUID","targetUID","correlation","toEnrichedCorrelationsData","correlations","getData","response","useCorrelations","backend","getInfo","get","createInfo","create","removeInfo","remove","uid","updateInfo","update","displayOverrideRef","isHideSeriesOverride","seriesVisibilityConfigFactory","label","mode","fieldConfig","data","overrides","displayName","currentIndex","override","createOverride","getNamesOfHiddenFields","displayNames","getDisplayNames","overridesCopy","current","existing","getExistingDisplayNames","nameOfHiddenFields","el","createExtendedOverride","allFieldsAreExcluded","names","property","p","index","name","rule","excludeName","unique","frame","field","matcher","ExploreActions","exploreIdLeft","exploreIdRight","actions","setActions","query","dispatch","splitted","exploreSection","actionsArr","FadeIn","props","defaultStyle","transitionStyles","Transition","state","__extends","extendStatics","d","b","__","__assign","t","s","i","n","rowSizeBase","colSizeBase","edgeBase","styles","Resizer","_super","_this","e","DEFAULT_SIZE","clamp","min","max","snap","size","hasDirection","dir","target","isTouchEvent","event","isMouseEvent","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","gap","getStringSize","getPixelSize","parentSize","innerWidth","innerHeight","ratio","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","baseClassName","Resizable","parent","element","base","c","width","height","orgWidth","orgHeight","orgPosition","getSize","key","value","percent","wrapChanged","wrap","computedStyle","newSize","kind","propsSize","boundsByDirection","direction","widthByDirection","heightByDirection","boundWidth","boundHeight","parent_1","clientX","clientY","scale","resizeRatio","_a","original","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","parent_2","parentRect","targetRect","left","top_1","right","bottom","startResize","flexBasis","parent_3","_c","boundaryMax","newGridWidth","newGridHeight","delta","vw","vh","newState","isResizing","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","style","Wrapper","drawerSlide","theme","getStyles","stylesFactory","ExploreDrawer","children","onResize","drawerWidth","ExploreQueryInspector","loading","onClose","queryResponse","timeZone","dataFrames","errors","statsTab","InspectStatsTab","jsonTab","InspectJSONTab","dataTab","InspectDataTab","queryTab","QueryInspector","tabs","errorTab","InspectErrorTab","TabbedContainer","mapStateToProps","exploreId","item","mapDispatchToProps","TimeSyncButton","onClick","isSynced","syncTimesTooltip","tooltip","Tooltip","ToolbarButton","ExploreTimeControls","range","onChangeTime","from","to","nextTimeRange","timeRange","adjustedFrom","adjustedTo","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","TimePickerWithHistory","LiveTailButton","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","CSSTransition","useLiveTailControls","RefreshPicker","LiveTailControls","controls","AddToDashboard","isLargerExploreId","UnConnectedExploreToolbar","dsSettings","changeDatasource","runQueries","cancelQueries","changeRefreshInterval","syncTimes","split","closeSplit","showSmallTimePicker","refreshInterval","refreshPickerText","refreshPickerTooltip","refreshPickerWidth","hasLiveOption","containerWidth","largerExploreId","showExploreToDashboard","onClickResize","datasourceMissing","topOfViewRef","showSmallDataSourcePicker","isTopnav","config","shareButton","DashNavButton","getDataSourcePicker","DataSourcePicker","toolbarLeftItems","SetInterval","AppChromeUpdate","PageToolbar","exploreItem","datasourceInstance","ExploreToolbar","FlameGraphExploreContainer","FlameGraphContainer","applyGraphStyle","draft","custom","invalidValue","updateReducer","num","useUpdate","resolveHookState","nextState","currentState","useGetSet","initialState","useCounter","initialValue","init","setInternal","set","prevState","rState","rDelta","rValue","useStructureRev","frames","structureRev","inc","previousFrames","usePrevious","MAX_NUMBER_OF_TIME_SERIES","ExploreGraph","absoluteRange","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","graphStyle","tooltipDisplayMode","anchorToZero","eventBus","showAllTimeSeries","setShowAllTimeSeries","fieldConfigRegistry","setFieldConfig","styledFieldConfig","dataWithConfig","hiddenFrames","panelContext","panelOptions","PanelContext","Icon","Button","PanelRenderer","ALL_GRAPH_STYLE_OPTIONS","ExploreGraphLabel","onChangeGraphStyle","RadioButtonGroup","GRAPH_STYLE_KEY","storeGraphStyle","loadGraphStyle","toGraphStyle","DEFAULT_GRAPH_STYLE","v","GraphContainer","setGraphStyle","spacing","onGraphStyleChange","Collapse","INTERVAL","ElapsedTime","resetKey","humanize","className","elapsed","setElapsed","useInterval","Time","tinycolor","LiveLogs","onPause","scrollTop","clientHeight","scrollHeight","rowsToRender","nextProps","onResume","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","row","LogMessageAnsi","LiveLogsWithTheme","MetaInfoItem","MetaInfoText","metaItems","DownloadFormat","LogsMetaRow","meta","dedupStrategy","dedupCount","displayedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logRows","downloadLogs","format","download","jsonLogs","blob","fileName","logsMetaItem","r","renderMetaItem","downloadMenu","Menu","Dropdown","LogLabels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","changeTime","formatTime","time","createPageContent","page","Spinner","topContent","bottomContent","CustomScrollbar","LogsNavigation","logsSortOrder","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","onFirstPage","onLastPage","newPage","newPages","a","sortPages","olderLogsButton","indexChange","newerLogsButton","navContainerHeight","LogsVolumePanel","splitOpen","onUpdateTimeRange","logsVolumeData","logsVolumeInfo","extraInfo","LogsVolumePanelContent","extraInfoComponent","SupplementaryResultError","isOpen","setIsOpen","SHORT_ERROR_MESSAGE_LIMIT","error","title","suggestedAction","onSuggestedAction","onRemove","severity","message","showButton","Alert","isTimeoutErrorResponse","LogsVolumePanelList","onLoadLogsVolume","logVolumes","grouped","numberOfLogVolumes","containsZoomed","zoomRatio","logsLevelZoomRatio","timeoutError","InlineField","selectedTimeRange","dataRange","SETTINGS_KEYS","styleOverridesForStickyNavigation","DEDUP_OPTIONS","UnthemedLogs","newSortOrder","showLabels","showTime","wrapLogMessage","prettifyLogMessage","hiddenRawLevels","hiddenLogLevels","level","k","dedupedRows","sum","firstTimeStamp","lastTimeStamp","logsMeta","logsVolumeEnabled","loadLogsVolumeData","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","scrollElement","getRowContext","getLogRowContextUi","isFlipping","hasData","filteredLogs","navigationRange","scanText","InlineFieldRow","dedupType","LogRows","Logs","transitionDuration","transitionDelay","LogsCrossFadeTransition","visible","LogsContainer","updateTimeRange","options","q","runContextQuery","rowIndex","dataFrame","logsSeries","loadSupplementaryQueryData","setSupplementaryQueryEnabled","onStartScanning","onStopScanning","logsVolume","enabled","logsResult","supplementaryQueries","LogsSamplePanel","setLogsSampleEnabled","onToggleLogsSampleCollapse","OpenInSplitViewButton","logSampleQueries","onSplitOpen","LogsSamplePanelContent","logs","NoData","css","PanelContainer","NoDataSourceCallToAction","canCreateDataSource","footer","ctaElement","cardClassName","CallToActionCard","UnconnectedNodeGraphContainer","withTraceView","datasourceType","getLinks","nodes","useCategorizeFrames","open","toggleOpen","useToggle","toggled","windowHeight","useWindowSize","containerRef","top","setTop","countWarning","NodeGraph","NodeGraphContainer","makeSelectors","exploreItemSelector","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","history","eventBridge","onRunQueries","onChange","newQueries","onAddQuery","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","QueryEditorRows","RawPrometheusListItemEmptyValue","getRawPrometheusListItemsFromDataFrame","metricList","outputList","newFields","metricNames","metricLabels","metric","formattedMetric","stringValue","totalNumberOfValues","rawListItemColumnWidth","rawListPaddingToHoldSpaceForCopyIcon","ItemValues","values","hideFieldsWithoutValues","reddish","greenish","length","isExpandedView","attributeName","attributeValue","rawListExtraSpaceAtEndOfLine","getQueryValues","allLabels","attributeValues","listItemData","listKey","valueLabels","__name__","_","copyToClipboard","useCopyToClipboard","displayLength","transformCopyValue","stringRep","ItemLabels","IconButton","getItemLabelsStyles","expanded","formatValueName","mobileWidthThreshold","numberOfColumnsBeforeExpandedViewIsDefault","tableResult","listRef","items","setIsExpandedView","onContentClick","calculateInitialHeight","getListItemHeight","itemIndex","Field","Switch","filteredValueLabels","valueLabel","itemWithValue","loadingInState","rawPrometheusResult","rawPrometheusFrame","result","RawPrometheusContainer","resultsStyle","df","mainFrame","onCellFilterAdded","ariaLabel","tableWidth","subFrames","renderTable","Table","ErrorContainer","queryError","showError","duration","ResponseErrorContainer","explore","rightColumnWidth","rightColumnContentWidth","cardColor","RichHistoryCard","commentHistoryItem","starHistoryItem","deleteHistoryItem","setQueries","activeUpdateComment","setActiveUpdateComment","comment","setComment","useAsync","dsInstance","datasource","onRunQuery","queriesToRun","differentDataSource","onCopyQuery","datasources","queriesText","onCreateShortLink","link","onDeleteQuery","performDelete","queryId","onStarrQuery","toggleActiveUpdateComment","onUpdateComment","onCancelUpdateComment","onKeyDown","keyEvent","updateComment","TextArea","queryActionButtons","DatasourceInfo","Query","LoadingPlaceholder","getQueryStyles","showDsInfo","getDsInfoStyles","dsApi","bgColor","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","activeDatasourceInstance","listOfDatasources","datasourceFilters","filters","mappedQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","RangeSlider","ds","option","FilterInput","search","Select","order","heading","retentionPeriodOptions","RichHistorySettingsTab","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","selectedOption","onDelete","RichHistoryStarredTab","Tabs","UnThemedRichHistory","settingsToUpdate","filtersToUpdate","prevProps","richHistory","richHistoryTotal","firstTab","QueriesTab","StarredTab","SettingsTab","RichHistory","RichHistoryContainer","setHeight","initRichHistory","loadRichHistory","updateHistorySettings","updateHistorySearchFilters","_e","_dir","ref","SecondaryActions","TableContainer","TraceViewContainer","traceProp","transform","setSearch","spanFindMatches","useSearch","focusedSpanIdForSearch","setFocusedSpanIdForSearch","searchBarSuffix","setSearchBarSuffix","TracePageSearchBar","TraceView","Explore","rawRange","filter","operator","queryKeys","makeAbsoluteTime","action","modifier","modification","panelType","source","tracking","exploreContainerStyles","graphResult","showFlameGraph","logsSample","showTrace","series","showMetrics","showTable","showRawPrometheus","showLogs","showNodeGraph","isFromCompactUrl","showLogsSample","openDrawer","showPanels","showRichHistory","richHistoryRowButtonHidden","showQueryInspector","showNoData","ErrorBoundary","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","EventBus","initialized","initialDatasource","initialQueries","initialRange","panelsState","orgId","queriesDatasourceOverride","rootDatasourceOverride","instance","changeDatasourceUid","datasourceInit","getTimeRangeFromUrlMemoized","urlState","urlRange","ExplorePaneContainer","ExplorePage","useExplorePageTitle","queryParams","keybindings","chrome","navModel","useNavModel","warning","panelCtx","rightPaneWidthRatio","setRightPaneWidthRatio","windowWidth","exploreState","searchParams","updateSplitSize","evenSplitWidth","areBothSimilar","hasSplit","widthCalc","SplitPaneWrapper","Branding","EmptyStateWrapper","isLoading","hasDatasource","showOnboarding","setShowOnboarding","EmptyStateNoDatasource","isSplit","getExploreItemSelector","InspectTab","useSetState","setState","patch","isMounted","useMountedState","noUserInteraction","normalizedValue","callback","delay","savedCallback","interval_1","deselectCurrent","clipboardToIE11Formatting","defaultMessage","copyKey","copy","text","debug","reselectPrevious","selection","mark","success","successful","err","module","active","ranges"],"sourceRoot":""}