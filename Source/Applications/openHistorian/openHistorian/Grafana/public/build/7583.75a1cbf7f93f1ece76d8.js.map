{"version":3,"file":"7583.75a1cbf7f93f1ece76d8.js","mappings":"+RAYO,MAAMA,EAAc,IAAM,CAC/B,MAAMC,KAAY,MAAmB,EAC/B,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAE1CC,EAAYC,GAAwB,IACxC,KAAc,EACX,KAAK,mBAAoBA,CAAS,EAClC,KAAK,IAAM,CACVF,EAAa,EAAI,CACnB,CAAC,EACA,MAAOG,GAAQ,CACd,MAAMC,EAAMD,EAAI,MAAM,SAAWA,EACjCL,EAAU,QAAQM,CAAG,CACvB,CAAC,CACL,EAEA,OAAIL,EAEA,gBAAC,WACC,gBAAC,SAAE,sGAAoG,EACvG,gBAAC,KAAS,CAAC,OAAO,IAAK,GACvB,gBAAC,KAAU,CAAC,QAAQ,UAAU,QAAM,MAAU,EAAE,UAAY,WAAW,iBAEvE,CACF,EAKF,gBAACM,EAAA,EAAI,CAAC,SAAAJ,CAAA,EACH,CAAC,CAAE,SAAAK,EAAU,OAAAC,CAAO,IACnB,gCACE,gBAACC,EAAA,EAAM,KAAC,cAAY,EACpB,gBAACC,EAAA,GACC,MAAM,QACN,YAAY,kEACZ,QAAS,CAAC,CAACF,EAAO,MAClB,MAAOA,EAAO,OAAO,SAErB,gBAACG,EAAA,GACC,GAAG,QACF,GAAGJ,EAAS,QAAS,CACpB,SAAU,oBACV,QAAS,CACP,MAAO,KACP,QAAS,kBACX,CACF,CAAC,EACD,YAAY,QACd,CACF,EACA,gBAAC,KAAe,KACd,gBAACK,EAAA,GAAM,CAAC,KAAK,UAAS,yBAAuB,EAC7C,gBAAC,KAAU,CAAC,KAAK,OAAO,QAAM,MAAU,EAAE,UAAY,UAAU,eAEhE,CACF,CACF,CAEJ,CAEJ,ECnEaC,EAAkB,IAE3B,gBAACC,EAAA,GAAW,KACV,gBAAC,KAAQ,KACP,gBAAChB,EAAW,IAAC,CACf,CACF,EAIJ,EAAee,C,4DCbR,MAAME,EACX,wIAEK,SAASC,GAAU,CACxB,MAAMC,EAAS,iBAAoB,YACnC,MAAO,CAAC,EAAEA,GAAUA,EAAS,EAC/B,CAEO,MAAMC,EAAiB,IAAMF,EAAQ,GAAK,oC","sources":["webpack://grafana/./public/app/core/components/Signup/VerifyEmail.tsx","webpack://grafana/./public/app/core/components/Signup/VerifyEmailPage.tsx","webpack://grafana/./public/app/features/admin/utils.ts"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Field, Input, Button, Legend, Container, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { w3cStandardEmailValidator } from 'app/features/admin/utils';\n\ninterface EmailDTO {\n  email: string;\n}\n\nexport const VerifyEmail = () => {\n  const notifyApp = useAppNotification();\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = (formModel: EmailDTO) => {\n    getBackendSrv()\n      .post('/api/user/signup', formModel)\n      .then(() => {\n        setEmailSent(true);\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        notifyApp.warning(msg);\n      });\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a verification link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={getConfig().appSubUrl + '/signup'}>\n          Complete Signup\n        </LinkButton>\n      </div>\n    );\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Verify Email</Legend>\n          <Field\n            label=\"Email\"\n            description=\"Enter your email address to get a verification link sent to you\"\n            invalid={!!errors.email}\n            error={errors.email?.message}\n          >\n            <Input\n              id=\"email\"\n              {...register('email', {\n                required: 'Email is required',\n                pattern: {\n                  value: w3cStandardEmailValidator,\n                  message: 'Email is invalid',\n                },\n              })}\n              placeholder=\"Email\"\n            />\n          </Field>\n          <HorizontalGroup>\n            <Button type=\"submit\">Send verification email</Button>\n            <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n        </>\n      )}\n    </Form>\n  );\n};\n","import React from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { VerifyEmail } from './VerifyEmail';\n\nexport const VerifyEmailPage = () => {\n  return (\n    <LoginLayout>\n      <InnerBox>\n        <VerifyEmail />\n      </InnerBox>\n    </LoginLayout>\n  );\n};\n\nexport default VerifyEmailPage;\n","import { config } from '@grafana/runtime/src';\n\n// https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nexport const w3cStandardEmailValidator =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isTrial() {\n  const expiry = config.licenseInfo?.trialExpiry;\n  return !!(expiry && expiry > 0);\n}\n\nexport const highlightTrial = () => isTrial() && config.featureToggles.featureHighlights;\n"],"names":["VerifyEmail","notifyApp","emailSent","setEmailSent","onSubmit","formModel","err","msg","Form","register","errors","Legend","Field","Input","Button","VerifyEmailPage","LoginLayout","w3cStandardEmailValidator","isTrial","expiry","highlightTrial"],"sourceRoot":""}