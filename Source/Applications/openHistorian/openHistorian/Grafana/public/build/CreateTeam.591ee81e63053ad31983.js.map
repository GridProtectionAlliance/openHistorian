{"version":3,"sources":["webpack:///./public/app/features/teams/CreateTeam.tsx"],"names":["FormField","LegacyForms","CreateTeam","state","name","email","create","event","preventDefault","getBackendSrv","post","result","teamId","props","updateLocation","path","onEmailChange","setState","target","value","onNameChange","navModel","this","Contents","className","onSubmit","label","onChange","inputWidth","labelWidth","required","type","placeholder","tooltip","variant","PureComponent","mapDispatchToProps","hot","module","connect","getNavModel","navIndex"],"mappings":"88CAIQA,EAAcC,cAAdD,UAkBKE,EAAb,6KACEC,MAAe,CACbC,KAAM,GACNC,MAAO,IAHX,EAMEC,OANF,4CAMW,WAAOC,GAAP,mGACPA,EAAMC,iBADC,EAGiB,EAAKL,MAArBC,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAHP,SAKcI,0BAAgBC,KAAK,aAAc,CAAEN,OAAMC,UALzD,QAKDM,EALC,QAMIC,QACT,EAAKC,MAAMC,eAAe,CAAEC,KAAM,mBAAF,OAAqBJ,EAAOC,UAPvD,2CANX,wDAiBEI,cAAgB,SAACT,GACf,EAAKU,SAAS,CACZZ,MAAOE,EAAMW,OAAOC,SAnB1B,EAuBEC,aAAe,SAACb,GACd,EAAKU,SAAS,CACZb,KAAMG,EAAMW,OAAOC,SAzBzB,E,UAAA,O,kOAAA,M,EAAA,G,EAAA,gCA6BW,IACCE,EAAaC,KAAKT,MAAlBQ,SADD,EAEiBC,KAAKnB,MAArBC,EAFD,EAECA,KAAMC,EAFP,EAEOA,MAEd,OACE,kBAAC,IAAD,CAAMgB,SAAUA,GACd,kBAAC,IAAKE,SAAN,KACE,oCACE,wBAAIC,UAAU,oBAAd,YAEA,0BAAMA,UAAU,gBAAgBC,SAAUH,KAAKhB,QAC7C,kBAACN,EAAD,CACEwB,UAAU,UACVE,MAAM,OACNP,MAAOf,EACPuB,SAAUL,KAAKF,aACfQ,WAAY,GACZC,WAAY,GACZC,UAAQ,IAEV,kBAAC9B,EAAD,CACE+B,KAAK,QACLP,UAAU,UACVE,MAAM,QACNP,MAAOd,EACPsB,SAAUL,KAAKN,cACfY,WAAY,GACZC,WAAY,GACZG,YAAY,iBACZC,QAAQ,6EAEV,yBAAKT,UAAU,sBACb,kBAAC,SAAD,CAAQO,KAAK,SAASG,QAAQ,WAA9B,oB,2BA7DhB,GAAgCC,iBA+EhC,IAAMC,EAAqB,CACzBtB,oBAGauB,wBAAIC,EAAJD,CAAYE,mBAV3B,SAAyBpC,GACvB,MAAO,CACLkB,SAAUmB,YAAYrC,EAAMsC,SAAU,YAQUL,EAAzBG,CAA6CrC,K","file":"CreateTeam.591ee81e63053ad31983.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { hot } from 'react-hot-loader';\nimport { Button, LegacyForms } from '@grafana/ui';\nconst { FormField } = LegacyForms;\nimport { NavModel } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { updateLocation } from '../../core/actions';\nimport { connect } from 'react-redux';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nexport interface Props {\n  navModel: NavModel;\n  updateLocation: typeof updateLocation;\n}\n\ninterface State {\n  name: string;\n  email: string;\n}\n\nexport class CreateTeam extends PureComponent<Props, State> {\n  state: State = {\n    name: '',\n    email: '',\n  };\n\n  create = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { name, email } = this.state;\n\n    const result = await getBackendSrv().post('/api/teams', { name, email });\n    if (result.teamId) {\n      this.props.updateLocation({ path: `/org/teams/edit/${result.teamId}` });\n    }\n  };\n\n  onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n\n  onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  render() {\n    const { navModel } = this.props;\n    const { name, email } = this.state;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents>\n          <>\n            <h3 className=\"page-sub-heading\">New Team</h3>\n\n            <form className=\"gf-form-group\" onSubmit={this.create}>\n              <FormField\n                className=\"gf-form\"\n                label=\"Name\"\n                value={name}\n                onChange={this.onNameChange}\n                inputWidth={30}\n                labelWidth={10}\n                required\n              />\n              <FormField\n                type=\"email\"\n                className=\"gf-form\"\n                label=\"Email\"\n                value={email}\n                onChange={this.onEmailChange}\n                inputWidth={30}\n                labelWidth={10}\n                placeholder=\"email@test.com\"\n                tooltip=\"This is optional and is primarily used for allowing custom team avatars.\"\n              />\n              <div className=\"gf-form-button-row\">\n                <Button type=\"submit\" variant=\"primary\">\n                  Create\n                </Button>\n              </div>\n            </form>\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n  };\n}\n\nconst mapDispatchToProps = {\n  updateLocation,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(CreateTeam));\n"],"sourceRoot":""}