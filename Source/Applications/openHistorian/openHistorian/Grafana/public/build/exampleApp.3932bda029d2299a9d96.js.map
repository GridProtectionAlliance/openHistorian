{"version":3,"sources":["webpack:///./public/app/plugins/app/example-app/legacy/config.ts","webpack:///./public/app/plugins/app/example-app/legacy/angular_example_page.ts","webpack:///./public/app/plugins/app/example-app/config/ExamplePage1.tsx","webpack:///./public/app/plugins/app/example-app/config/ExamplePage2.tsx","webpack:///./public/app/plugins/app/example-app/ExampleRootPage.tsx","webpack:///./public/app/plugins/app/example-app/module.ts"],"names":["ExampleConfigCtrl","$scope","$injector","this","appEditCtrl","setPostUpdateHook","postUpdate","bind","appModel","jsonData","console","log","$inject","prototype","enabled","templateUrl","AngularExamplePageCtrl","$rootScope","ExamplePage1_ExamplePage1","_super","ExamplePage1","props","call","render","react_default","a","createElement","JSON","stringify","query","ExamplePage2_ExamplePage2","ExamplePage2","ExampleRootPage_ExampleRootPage","ExampleRootPage","componentDidMount","updateNav","componentDidUpdate","prevProps","tab","e_1","_a","_b","path","onNavChanged","meta","tabs","push","text","icon","url","id","selected","tabs_1","tslib_es6","tabs_1_1","next","done","value","active","found","error","node","img","info","logos","large","subTitle","children","main","href","__webpack_require__","d","__webpack_exports__","module_plugin","src","setRootPage","addConfigPage","title","body"],"mappings":"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","file":"exampleApp.3932bda029d2299a9d96.js","sourcesContent":["import { PluginMeta } from '@grafana/ui';\n\nexport class ExampleConfigCtrl {\n  static templateUrl = 'legacy/config.html';\n\n  appEditCtrl: any;\n  appModel: PluginMeta;\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any) {\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    // Make sure it has a JSON Data spot\n    if (!this.appModel) {\n      this.appModel = {} as PluginMeta;\n    }\n\n    // Required until we get the types sorted on appModel :(\n    const appModel = this.appModel as any;\n    if (!appModel.jsonData) {\n      appModel.jsonData = {};\n    }\n\n    console.log('ExampleConfigCtrl', this);\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      console.log('Not enabled...');\n      return;\n    }\n\n    // TODO, can do stuff after update\n    console.log('Post Update:', this);\n  }\n}\n","export class AngularExamplePageCtrl {\n  static templateUrl = 'legacy/angular_example_page.html';\n\n  /** @ngInject */\n  constructor($scope: any, $rootScope: any) {\n    console.log('AngularExamplePageCtrl:', this);\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { PluginConfigPageProps, AppPlugin } from '@grafana/ui';\n\ninterface Props extends PluginConfigPageProps<AppPlugin> {}\n\nexport class ExamplePage1 extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div>\n        11111111111111111111111111111111\n        <pre>{JSON.stringify(query)}</pre>\n        11111111111111111111111111111111\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { PluginConfigPageProps, AppPlugin } from '@grafana/ui';\n\ninterface Props extends PluginConfigPageProps<AppPlugin> {}\n\nexport class ExamplePage2 extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div>\n        22222222222222222222222222222222\n        <pre>{JSON.stringify(query)}</pre>\n        22222222222222222222222222222222\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { NavModelItem } from '@grafana/data';\nimport { AppRootProps } from '@grafana/ui';\n\ninterface Props extends AppRootProps {}\n\nconst TAB_ID_A = 'A';\nconst TAB_ID_B = 'B';\nconst TAB_ID_C = 'C';\n\nexport class ExampleRootPage<ExampleAppSettings> extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.updateNav();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.query !== prevProps.query) {\n      if (this.props.query.tab !== prevProps.query.tab) {\n        this.updateNav();\n      }\n    }\n  }\n\n  updateNav() {\n    const { path, onNavChanged, query, meta } = this.props;\n\n    const tabs: NavModelItem[] = [];\n    tabs.push({\n      text: 'Tab A',\n      icon: 'fa fa-fw fa-file-text-o',\n      url: path + '?tab=' + TAB_ID_A,\n      id: TAB_ID_A,\n    });\n    tabs.push({\n      text: 'Tab B',\n      icon: 'fa fa-fw fa-file-text-o',\n      url: path + '?tab=' + TAB_ID_B,\n      id: TAB_ID_B,\n    });\n    tabs.push({\n      text: 'Tab C',\n      icon: 'fa fa-fw fa-file-text-o',\n      url: path + '?tab=' + TAB_ID_C,\n      id: TAB_ID_C,\n    });\n\n    // Set the active tab\n    let found = false;\n    const selected = query.tab || TAB_ID_B;\n    for (const tab of tabs) {\n      tab.active = !found && selected === tab.id;\n      if (tab.active) {\n        found = true;\n      }\n    }\n    if (!found) {\n      tabs[0].active = true;\n    }\n\n    const node = {\n      text: 'This is the Page title',\n      img: meta.info.logos.large,\n      subTitle: 'subtitle here',\n      url: path,\n      children: tabs,\n    };\n\n    // Update the page header\n    onNavChanged({\n      node: node,\n      main: node,\n    });\n  }\n\n  render() {\n    const { path, query, meta } = this.props;\n\n    return (\n      <div>\n        QUERY: <pre>{JSON.stringify(query)}</pre>\n        <br />\n        <ul>\n          <li>\n            <a href={path + '?x=1'}>111</a>\n          </li>\n          <li>\n            <a href={path + '?x=AAA'}>AAA</a>\n          </li>\n          <li>\n            <a href={path + '?x=1&y=2&y=3'}>ZZZ</a>\n          </li>\n        </ul>\n        <pre>{JSON.stringify(meta.jsonData)}</pre>\n      </div>\n    );\n  }\n}\n","// Angular pages\nimport { ExampleConfigCtrl } from './legacy/config';\nimport { AngularExamplePageCtrl } from './legacy/angular_example_page';\nimport { AppPlugin } from '@grafana/ui';\nimport { ExamplePage1 } from './config/ExamplePage1';\nimport { ExamplePage2 } from './config/ExamplePage2';\nimport { ExampleRootPage } from './ExampleRootPage';\nimport { ExampleAppSettings } from './types';\n\n// Legacy exports just for testing\nexport {\n  ExampleConfigCtrl as ConfigCtrl,\n  AngularExamplePageCtrl, // Must match `pages.component` in plugin.json\n};\n\nexport const plugin = new AppPlugin<ExampleAppSettings>()\n  .setRootPage(ExampleRootPage)\n  .addConfigPage({\n    title: 'Page 1',\n    icon: 'fa fa-info',\n    body: ExamplePage1,\n    id: 'page1',\n  })\n  .addConfigPage({\n    title: 'Page 2',\n    icon: 'fa fa-user',\n    body: ExamplePage2,\n    id: 'page2',\n  });\n"],"sourceRoot":""}