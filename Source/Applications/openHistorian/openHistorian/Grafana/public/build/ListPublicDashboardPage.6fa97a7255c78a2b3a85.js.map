{"version":3,"file":"ListPublicDashboardPage.6fa97a7255c78a2b3a85.js","mappings":"kXAkBO,MAAMA,EAA0BC,GACrC,MAAG,MAAU,EAAE,2BAA2BA,IAE/BC,EAA2B,IAAM,CAC5C,KAAM,CAAE,MAAAC,CAAM,KAAIC,EAAA,GAAc,EAC1BC,EAAWF,GAAS,IACpBG,KAAQ,MAAU,EAClBC,KAAS,MAAW,IAAMC,EAAUF,EAAOD,CAAQ,CAAC,EAEpD,CAAE,KAAMI,EAAkB,UAAAC,EAAW,WAAAC,CAAW,KAAI,MAA6B,EAEjFC,EAAY,4BACZC,EAAsB,eAAqB,+CAA2C,MAAW,CAAC,EAClGC,EAAiBT,EAAW,KAAO,KAEzC,OACE,gBAACU,EAAA,YAAc,UAAAL,CAAA,EACb,gBAAC,SAAM,UAAU,gBACf,gBAAC,aACC,gBAAC,UACC,gBAAC,MAAG,UAAWH,EAAO,QAAQ,MAAI,EAClC,gBAAC,UAAG,QAAM,EACV,gBAAC,MAAG,UAAWA,EAAO,iBAAkBI,GAAc,gBAACK,EAAA,EAAO,IAAC,CAAG,CACpE,CACF,EACA,gBAAC,aACEP,GAAkB,IAAKQ,GAAoC,CAC1D,MAAMC,EAAa,CAACD,EAAG,aACvB,OACE,gBAAC,MAAG,IAAKA,EAAG,KACV,gBAAC,MAAG,UAAWV,EAAO,SACpB,gBAACY,EAAA,GACC,QAAUD,EAAwB,gDAAXD,EAAG,MAC1B,UAAU,OAERC,EAKA,gBAAC,OAAI,UAAWX,EAAO,eACrB,gBAAC,SAAE,2BAAyB,EAC5B,gBAACa,EAAA,EAAI,CAAC,KAAK,cAAc,UAAWb,EAAO,iBAAkB,CAC/D,EAPA,gBAACc,EAAA,EAAI,CAAC,UAAWd,EAAO,KAAM,KAAM,MAAMU,EAAG,gBAC1CA,EAAG,KACN,CAOJ,CACF,EACA,gBAAC,UACC,gBAACK,EAAA,GACC,KAAML,EAAG,UAAY,UAAY,SACjC,WAAYC,EAAa,EAAID,EAAG,UAAY,GAAK,GACnD,CACF,EACA,gBAAC,UACC,gBAACM,EAAA,EAAW,CAAC,UAAWhB,EAAO,aAC7B,gBAAC,MACC,KAAMP,EAAuBiB,EAAG,WAAW,EAC3C,KAAK,OACL,KAAMH,EACN,MAAOG,EAAG,UAAY,wBAA0B,+BAChD,OAAO,SACP,SAAU,CAACA,EAAG,WAAaC,EAC3B,cAAaN,EAAU,SAAS,YAEhC,gBAACQ,EAAA,EAAI,CAAC,KAAMN,EAAgB,KAAK,mBAAoB,EACvD,EACA,gBAAC,MACC,KAAK,OACL,KAAMA,EACN,KAAM,MAAMG,EAAG,+BACf,MAAM,6BACN,SAAUC,EACV,cAAaN,EAAU,SAAS,cAEhC,gBAACQ,EAAA,EAAI,CAAC,KAAMN,EAAgB,KAAK,KAAM,EACzC,EACCD,GACC,gBAACW,EAAA,GACC,QAAQ,UACR,KAAK,OACL,cAAaZ,EAAU,SAAS,eAChC,gBAAiBK,EACjB,OAAQ,gBAACD,EAAA,EAAO,IAAC,GAEjB,gBAACI,EAAA,EAAI,CAAC,KAAMN,EAAgB,KAAK,WAAY,EAC/C,CAEJ,CACF,CACF,CAEJ,CAAC,CACH,CACF,CACF,CAEJ,EAEA,SAASN,EAAUF,EAAsBD,EAAmB,CAC1D,MAAO,CACL,gBAAiB;AAAA;AAAA;AAAA,MAIjB,KAAM;AAAA,eACKC,EAAM,OAAO,QAAQ;AAAA;AAAA,sBAEdA,EAAM,QAAQ;AAAA,MAEhC,OAAQ;AAAA;AAAA,MAGR,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAMT,YAAa;AAAA,yBACQD,EAAW,gBAAkB;AAAA,MAElD,cAAe;AAAA;AAAA;AAAA,aAGNC,EAAM,QAAQ,CAAC;AAAA;AAAA;AAAA,kBAGVA,EAAM,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,MAM7B,iBAAkB;AAAA,eACPA,EAAM,OAAO,KAAK;AAAA,KAE/B,CACF,CCrJO,MAAMmB,EAA0B,CAAC,CAAC,IAErC,gBAACV,EAAA,EAAI,CAAC,MAAM,qBACV,gBAACb,EAAwB,IAAC,CAC5B,EAIJ,EAAeuB,C","sources":["webpack://grafana/./public/app/features/manage-dashboards/components/PublicDashboardListTable/PublicDashboardListTable.tsx","webpack://grafana/./public/app/features/manage-dashboards/PublicDashboardListPage.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { selectors as e2eSelectors } from '@grafana/e2e-selectors/src';\nimport { Link, ButtonGroup, LinkButton, Icon, Tag, useStyles2, Tooltip, useTheme2, Spinner } from '@grafana/ui/src';\nimport { Page } from 'app/core/components/Page/Page';\nimport { getConfig } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { useListPublicDashboardsQuery } from 'app/features/dashboard/api/publicDashboardApi';\nimport { isOrgAdmin } from 'app/features/plugins/admin/permissions';\nimport { AccessControlAction } from 'app/types';\n\nimport { ListPublicDashboardResponse } from '../../types';\n\nimport { DeletePublicDashboardButton } from './DeletePublicDashboardButton';\n\nexport const viewPublicDashboardUrl = (accessToken: string): string =>\n  `${getConfig().appUrl}public-dashboards/${accessToken}`;\n\nexport const PublicDashboardListTable = () => {\n  const { width } = useWindowSize();\n  const isMobile = width <= 480;\n  const theme = useTheme2();\n  const styles = useStyles2(() => getStyles(theme, isMobile));\n\n  const { data: publicDashboards, isLoading, isFetching } = useListPublicDashboardsQuery();\n\n  const selectors = e2eSelectors.pages.PublicDashboards;\n  const hasWritePermissions = contextSrv.hasAccess(AccessControlAction.DashboardsPublicWrite, isOrgAdmin());\n  const responsiveSize = isMobile ? 'sm' : 'md';\n\n  return (\n    <Page.Contents isLoading={isLoading}>\n      <table className=\"filter-table\">\n        <thead>\n          <tr>\n            <th className={styles.nameTh}>Name</th>\n            <th>Status</th>\n            <th className={styles.fetchingSpinner}>{isFetching && <Spinner />}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {publicDashboards?.map((pd: ListPublicDashboardResponse) => {\n            const isOrphaned = !pd.dashboardUid;\n            return (\n              <tr key={pd.uid}>\n                <td className={styles.titleTd}>\n                  <Tooltip\n                    content={!isOrphaned ? pd.title : 'The linked dashboard has already been deleted'}\n                    placement=\"top\"\n                  >\n                    {!isOrphaned ? (\n                      <Link className={styles.link} href={`/d/${pd.dashboardUid}`}>\n                        {pd.title}\n                      </Link>\n                    ) : (\n                      <div className={styles.orphanedTitle}>\n                        <p>Orphaned public dashboard</p>\n                        <Icon name=\"info-circle\" className={styles.orphanedInfoIcon} />\n                      </div>\n                    )}\n                  </Tooltip>\n                </td>\n                <td>\n                  <Tag\n                    name={pd.isEnabled ? 'enabled' : 'paused'}\n                    colorIndex={isOrphaned ? 9 : pd.isEnabled ? 20 : 15}\n                  />\n                </td>\n                <td>\n                  <ButtonGroup className={styles.buttonGroup}>\n                    <LinkButton\n                      href={viewPublicDashboardUrl(pd.accessToken)}\n                      fill=\"text\"\n                      size={responsiveSize}\n                      title={pd.isEnabled ? 'View public dashboard' : 'Public dashboard is disabled'}\n                      target=\"_blank\"\n                      disabled={!pd.isEnabled || isOrphaned}\n                      data-testid={selectors.ListItem.linkButton}\n                    >\n                      <Icon size={responsiveSize} name=\"external-link-alt\" />\n                    </LinkButton>\n                    <LinkButton\n                      fill=\"text\"\n                      size={responsiveSize}\n                      href={`/d/${pd.dashboardUid}?shareView=share`}\n                      title=\"Configure public dashboard\"\n                      disabled={isOrphaned}\n                      data-testid={selectors.ListItem.configButton}\n                    >\n                      <Icon size={responsiveSize} name=\"cog\" />\n                    </LinkButton>\n                    {hasWritePermissions && (\n                      <DeletePublicDashboardButton\n                        variant=\"primary\"\n                        fill=\"text\"\n                        data-testid={selectors.ListItem.trashcanButton}\n                        publicDashboard={pd}\n                        loader={<Spinner />}\n                      >\n                        <Icon size={responsiveSize} name=\"trash-alt\" />\n                      </DeletePublicDashboardButton>\n                    )}\n                  </ButtonGroup>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Page.Contents>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2, isMobile: boolean) {\n  return {\n    fetchingSpinner: css`\n      display: flex;\n      justify-content: end;\n    `,\n    link: css`\n      color: ${theme.colors.primary.text};\n      text-decoration: underline;\n      margin-right: ${theme.spacing()};\n    `,\n    nameTh: css`\n      width: 20%;\n    `,\n    titleTd: css`\n      max-width: 0;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    `,\n    buttonGroup: css`\n      justify-content: ${isMobile ? 'space-between' : 'end'};\n    `,\n    orphanedTitle: css`\n      display: flex;\n      align-items: center;\n      gap: ${theme.spacing(1)};\n\n      p {\n        margin: ${theme.spacing(0)};\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    `,\n    orphanedInfoIcon: css`\n      color: ${theme.colors.text.link};\n    `,\n  };\n}\n","import React from 'react';\n\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { PublicDashboardListTable } from './components/PublicDashboardListTable/PublicDashboardListTable';\n\nexport const ListPublicDashboardPage = ({}) => {\n  return (\n    <Page navId=\"dashboards/public\">\n      <PublicDashboardListTable />\n    </Page>\n  );\n};\n\nexport default ListPublicDashboardPage;\n"],"names":["viewPublicDashboardUrl","accessToken","PublicDashboardListTable","width","useWindowSize","isMobile","theme","styles","getStyles","publicDashboards","isLoading","isFetching","selectors","hasWritePermissions","responsiveSize","Page","Spinner","pd","isOrphaned","Tooltip","Icon","Link","Tag","ButtonGroup","DeletePublicDashboardButton","ListPublicDashboardPage"],"sourceRoot":""}