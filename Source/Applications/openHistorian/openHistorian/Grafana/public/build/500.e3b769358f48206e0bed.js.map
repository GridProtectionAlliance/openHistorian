{"version":3,"file":"500.e3b769358f48206e0bed.js","mappings":"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","sources":["webpack://grafana/./node_modules/combokeys/Combokeys/index.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/addEvents.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/bind.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/bindMultiple.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/bindSequence.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/bindSingle.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/detach.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/dom-event.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/fireCallback.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/getKeyInfo.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/getMatches.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/getReverseMap.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/handleKey.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/handleKeyEvent.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/modifiersMatch.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/pickBestAction.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/reset.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/resetSequenceTimer.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/resetSequences.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/stopCallback.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/trigger.js","webpack://grafana/./node_modules/combokeys/Combokeys/prototype/unbind.js","webpack://grafana/./node_modules/combokeys/Combokeys/reset.js","webpack://grafana/./node_modules/combokeys/helpers/characterFromEvent.js","webpack://grafana/./node_modules/combokeys/helpers/eventModifiers.js","webpack://grafana/./node_modules/combokeys/helpers/isModifier.js","webpack://grafana/./node_modules/combokeys/helpers/keysFromString.js","webpack://grafana/./node_modules/combokeys/helpers/preventDefault.js","webpack://grafana/./node_modules/combokeys/helpers/shift-map.js","webpack://grafana/./node_modules/combokeys/helpers/special-aliases.js","webpack://grafana/./node_modules/combokeys/helpers/special-characters-map.js","webpack://grafana/./node_modules/combokeys/helpers/special-keys-map.js","webpack://grafana/./node_modules/combokeys/helpers/stopPropagation.js","webpack://grafana/./packages/grafana-o11y-ds-frontend/src/TraceToLogs/TraceToLogsSettings.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/CriticalPath/utils/findLastFinishingChildSpan.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/CriticalPath/utils/getChildOfSpans.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/CriticalPath/utils/sanitizeOverFlowingChildren.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/CriticalPath/index.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/render-into-canvas.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/CanvasSpanGraph.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/TickLabels.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/GraphTicks.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/Scrubber.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/ViewingLayer.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanGraph/index.tsx","webpack://grafana/./public/app/features/explore/TraceView/useChildrenState.ts","webpack://grafana/./public/app/features/explore/TraceView/useDetailState.ts","webpack://grafana/./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack://grafana/./public/app/features/explore/TraceView/useViewRange.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceView.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/Theme.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/keyboard-mappings.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/keyboard-shortcuts.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/utils.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/Ticks.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineRow.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineCollapser.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineColumnResizer.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineViewingLayer.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/TimelineHeaderRow/TimelineHeaderRow.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/constants/tag-keys.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/ListView/Positions.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/ListView/index.tsx","webpack://grafana/./packages/grafana-o11y-ds-frontend/src/SpanBar/SpanBarSettings.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/Popover.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/AccordianKeyValues.markers.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/CopyIcon.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/KeyValuesTable.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/LabeledList.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/constants/span.ts","webpack://grafana/./public/app/features/explore/TraceView/components/url/ReferenceLink.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/AccordianReferences.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/TextList.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/AccordianText.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/SpanFlameGraph.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/index.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/AccordianKeyValues.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/AccordianLogs.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBar.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanLinks.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/span-ancestor-ids.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanTreeOffset.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanBarRow.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetailRow.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/VirtualizedTraceView.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/index.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/NewWindowIcon.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/ExternalLinks.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/constants/index.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/BreakableText.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/TraceName.tsx","webpack://grafana/./node_modules/lru-memoize/dist/lru-memoize.es.js","webpack://grafana/./public/app/features/explore/TraceView/components/constants/default-config.ts","webpack://grafana/./public/app/features/explore/TraceView/components/utils/config/get-config.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/model/link-patterns.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/model/trace-viewer.ts","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/Actions/ActionButton.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/Actions/TracePageActions.tsx","webpack://grafana/./packages/grafana-o11y-ds-frontend/src/IntervalInput/validation.ts","webpack://grafana/./packages/grafana-o11y-ds-frontend/src/IntervalInput/IntervalInput.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/SearchBarInput.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/NextPrevResult.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/filter-spans.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SearchBar/TracePageSearchBar.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/SpanFilters/SpanFilters.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TracePageHeader/TracePageHeader.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/settings/SpanBarSettings.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/DetailState.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/TreeNode.ts","webpack://grafana/./public/app/features/explore/TraceView/components/selectors/span.ts","webpack://grafana/./public/app/features/explore/TraceView/components/selectors/trace.ts","webpack://grafana/./public/app/features/explore/TraceView/components/model/transform-trace-data.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/types/links.ts","webpack://grafana/./public/app/features/explore/TraceView/components/utils/DraggableManager/EUpdateTypes.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/DraggableManager/DraggableManager.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/color-generator.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/utils/date.tsx","webpack://grafana/./public/app/features/explore/TraceView/createSpanLink.tsx","webpack://grafana/./public/app/features/explore/TraceView/useSearch.ts","webpack://grafana/./public/app/features/explore/TraceView/utils/transform.ts","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/jsonMarkup.js"],"sourcesContent":["/* eslint-env node, browser */\n'use strict'\n\nmodule.exports = function (element, options) {\n  var self = this\n  var Combokeys = self.constructor\n\n  /**\n   * an object of passed options\n   *\n   * @type { storeInstancesGlobally?: true }\n   */\n\n  self.options = Object.assign({ storeInstancesGlobally: true }, options || {})\n\n  /**\n   * a list of all the callbacks setup via Combokeys.bind()\n   *\n   * @type {Object}\n   */\n  self.callbacks = {}\n\n  /**\n   * direct map of string combinations to callbacks used for trigger()\n   *\n   * @type {Object}\n   */\n  self.directMap = {}\n\n  /**\n   * keeps track of what level each sequence is at since multiple\n   * sequences can start out with the same sequence\n   *\n   * @type {Object}\n   */\n  self.sequenceLevels = {}\n\n  /**\n   * variable to store the setTimeout call\n   *\n   * @type {null|number}\n   */\n  self.resetTimer = null\n\n  /**\n   * temporary state where we will ignore the next keyup\n   *\n   * @type {boolean|string}\n   */\n  self.ignoreNextKeyup = false\n\n  /**\n   * temporary state where we will ignore the next keypress\n   *\n   * @type {boolean}\n   */\n  self.ignoreNextKeypress = false\n\n  /**\n   * are we currently inside of a sequence?\n   * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n   *\n   * @type {boolean|string}\n   */\n  self.nextExpectedAction = false\n\n  self.element = element\n\n  self.addEvents()\n\n  if (self.options.storeInstancesGlobally) {\n    Combokeys.instances.push(self)\n  }\n\n  return self\n}\n\nmodule.exports.prototype.bind = require('./prototype/bind')\nmodule.exports.prototype.bindMultiple = require('./prototype/bindMultiple')\nmodule.exports.prototype.unbind = require('./prototype/unbind')\nmodule.exports.prototype.trigger = require('./prototype/trigger')\nmodule.exports.prototype.reset = require('./prototype/reset.js')\nmodule.exports.prototype.stopCallback = require('./prototype/stopCallback')\nmodule.exports.prototype.handleKey = require('./prototype/handleKey')\nmodule.exports.prototype.addEvents = require('./prototype/addEvents')\nmodule.exports.prototype.bindSingle = require('./prototype/bindSingle')\nmodule.exports.prototype.getKeyInfo = require('./prototype/getKeyInfo')\nmodule.exports.prototype.pickBestAction = require('./prototype/pickBestAction')\nmodule.exports.prototype.getReverseMap = require('./prototype/getReverseMap')\nmodule.exports.prototype.getMatches = require('./prototype/getMatches')\nmodule.exports.prototype.resetSequences = require('./prototype/resetSequences')\nmodule.exports.prototype.fireCallback = require('./prototype/fireCallback')\nmodule.exports.prototype.bindSequence = require('./prototype/bindSequence')\nmodule.exports.prototype.resetSequenceTimer = require('./prototype/resetSequenceTimer')\nmodule.exports.prototype.detach = require('./prototype/detach')\n\nmodule.exports.instances = []\nmodule.exports.reset = require('./reset')\n\n/**\n * variable to store the flipped version of MAP from above\n * needed to check if we should use keypress or not when no action\n * is specified\n *\n * @type {Object|undefined}\n */\nmodule.exports.REVERSE_MAP = null\n","/* eslint-env node, browser */\n'use strict'\nmodule.exports = function () {\n  var self = this\n  var on = require('./dom-event')\n  var element = self.element\n\n  self.eventHandler = require('./handleKeyEvent').bind(self)\n\n  on(element, 'keypress', self.eventHandler)\n  on(element, 'keydown', self.eventHandler)\n  on(element, 'keyup', self.eventHandler)\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * binds an event to Combokeys\n *\n * can be a single key, a combination of keys separated with +,\n * an array of keys, or a sequence of keys separated by spaces\n *\n * be sure to list the modifier keys first to make sure that the\n * correct key ends up getting bound (the last key in the pattern)\n *\n * @param {string|Array} keys\n * @param {Function} callback\n * @param {string=} action - \"keypress\", \"keydown\", or \"keyup\"\n * @returns void\n */\nmodule.exports = function (keys, callback, action) {\n  var self = this\n\n  keys = keys instanceof Array ? keys : [keys]\n  self.bindMultiple(keys, callback, action)\n  return self\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds multiple combinations to the same callback\n *\n * @param {Array} combinations\n * @param {Function} callback\n * @param {string|undefined} action\n * @returns void\n */\nmodule.exports = function (combinations, callback, action) {\n  var self = this\n\n  for (var j = 0; j < combinations.length; ++j) {\n    self.bindSingle(combinations[j], callback, action)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds a key sequence to an event\n *\n * @param {string} combo - combo specified in bind call\n * @param {Array} keys\n * @param {Function} callback\n * @param {string=} action\n * @returns void\n */\nmodule.exports = function (combo, keys, callback, action) {\n  var self = this\n\n  // start off by adding a sequence level record for this combination\n  // and setting the level to 0\n  self.sequenceLevels[combo] = 0\n\n  /**\n   * callback to increase the sequence level for this sequence and reset\n   * all other sequences that were active\n   *\n   * @param {string} nextAction\n   * @returns {Function}\n   */\n  function increaseSequence (nextAction) {\n    return function () {\n      self.nextExpectedAction = nextAction\n      ++self.sequenceLevels[combo]\n      self.resetSequenceTimer()\n    }\n  }\n\n  /**\n   * wraps the specified callback inside of another function in order\n   * to reset all sequence counters as soon as this sequence is done\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function callbackAndReset (e) {\n    var characterFromEvent\n    self.fireCallback(callback, e, combo)\n\n    // we should ignore the next key up if the action is key down\n    // or keypress.  this is so if you finish a sequence and\n    // release the key the final key will not trigger a keyup\n    if (action !== 'keyup') {\n      characterFromEvent = require('../../helpers/characterFromEvent')\n      self.ignoreNextKeyup = characterFromEvent(e)\n    }\n\n    // weird race condition if a sequence ends with the key\n    // another sequence begins with\n    setTimeout(\n      function () {\n        self.resetSequences()\n      },\n      10\n    )\n  }\n\n  // loop through keys one at a time and bind the appropriate callback\n  // function.  for any key leading up to the final one it should\n  // increase the sequence. after the final, it should reset all sequences\n  //\n  // if an action is specified in the original bind call then that will\n  // be used throughout.  otherwise we will pass the action that the\n  // next key in the sequence should match.  this allows a sequence\n  // to mix and match keypress and keydown events depending on which\n  // ones are better suited to the key provided\n  for (var j = 0; j < keys.length; ++j) {\n    var isFinal = j + 1 === keys.length\n    var wrappedCallback = isFinal ? callbackAndReset : increaseSequence(action || self.getKeyInfo(keys[j + 1]).action)\n    self.bindSingle(keys[j], wrappedCallback, action, combo, j)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds a single keyboard combination\n *\n * @param {string} combination\n * @param {Function} callback\n * @param {string=} action\n * @param {string=} sequenceName - name of sequence if part of sequence\n * @param {number=} level - what part of the sequence the command is\n * @returns void\n */\nmodule.exports = function (combination, callback, action, sequenceName, level) {\n  var self = this\n\n  // store a direct mapped reference for use with Combokeys.trigger\n  self.directMap[combination + ':' + action] = callback\n\n  // make sure multiple spaces in a row become a single space\n  combination = combination.replace(/\\s+/g, ' ')\n\n  var sequence = combination.split(' ')\n  var info\n\n  // if this pattern is a sequence of keys then run through this method\n  // to reprocess each pattern one key at a time\n  if (sequence.length > 1) {\n    self.bindSequence(combination, sequence, callback, action)\n    return\n  }\n\n  info = self.getKeyInfo(combination, action)\n\n  // make sure to initialize array if this is the first time\n  // a callback is added for this key\n  self.callbacks[info.key] = self.callbacks[info.key] || []\n\n  // remove an existing match if there is one\n  self.getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level)\n\n  // add this call back to the array\n  // if it is a sequence put it at the beginning\n  // if not put it at the end\n  //\n  // this is important because the way these are processed expects\n  // the sequence ones to come first\n  self.callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n    callback: callback,\n    modifiers: info.modifiers,\n    action: info.action,\n    seq: sequenceName,\n    level: level,\n    combo: combination\n  })\n}\n","var off = require('./dom-event').off\nmodule.exports = function () {\n  var self = this\n  var element = self.element\n\n  off(element, 'keypress', self.eventHandler)\n  off(element, 'keydown', self.eventHandler)\n  off(element, 'keyup', self.eventHandler)\n}\n","module.exports = on\nmodule.exports.on = on\nmodule.exports.off = off\n\nfunction on (element, event, callback, capture) {\n  !element.addEventListener && (event = 'on' + event)\n  ;(element.addEventListener || element.attachEvent).call(element, event, callback, capture)\n  return callback\n}\n\nfunction off (element, event, callback, capture) {\n  !element.removeEventListener && (event = 'on' + event)\n  ;(element.removeEventListener || element.detachEvent).call(element, event, callback, capture)\n  return callback\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * actually calls the callback function\n *\n * if your callback function returns false this will use the jquery\n * convention - prevent default and stop propogation on the event\n *\n * @param {Function} callback\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (callback, e, combo, sequence) {\n  var self = this\n  var preventDefault\n  var stopPropagation\n\n  // if this event should not happen stop here\n  if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n    return\n  }\n\n  if (callback(e, combo) === false) {\n    preventDefault = require('../../helpers/preventDefault')\n    preventDefault(e)\n    stopPropagation = require('../../helpers/stopPropagation')\n    stopPropagation(e)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * Gets info for a specific key combination\n *\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n * @param  {string=} action\n * @returns {Object}\n */\nmodule.exports = function (combination, action) {\n  var self = this\n  var keysFromString\n  var keys\n  var key\n  var j\n  var modifiers = []\n  var SPECIAL_ALIASES\n  var SHIFT_MAP\n  var isModifier\n\n  keysFromString = require('../../helpers/keysFromString')\n  // take the keys from this pattern and figure out what the actual\n  // pattern is all about\n  keys = keysFromString(combination)\n\n  SPECIAL_ALIASES = require('../../helpers/special-aliases')\n  SHIFT_MAP = require('../../helpers/shift-map')\n  isModifier = require('../../helpers/isModifier')\n  for (j = 0; j < keys.length; ++j) {\n    key = keys[j]\n\n    // normalize key names\n    if (SPECIAL_ALIASES[key]) {\n      key = SPECIAL_ALIASES[key]\n    }\n\n    // if this is not a keypress event then we should\n    // be smart about using shift keys\n    // this will only work for US keyboards however\n    if (action && action !== 'keypress' && SHIFT_MAP[key]) {\n      key = SHIFT_MAP[key]\n      modifiers.push('shift')\n    }\n\n    // if this key is a modifier then add it to the list of modifiers\n    if (isModifier(key)) {\n      modifiers.push(key)\n    }\n  }\n\n  // depending on what the key combination is\n  // we will try to pick the best event for it\n  action = self.pickBestAction(key, modifiers, action)\n\n  return {\n    key: key,\n    modifiers: modifiers,\n    action: action\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * finds all callbacks that match based on the keycode, modifiers,\n * and action\n *\n * @param {string} character\n * @param {Array} modifiers\n * @param {Event|Object} e\n * @param {string=} sequenceName - name of the sequence we are looking for\n * @param {string=} combination\n * @param {number=} level\n * @returns {Array}\n */\nmodule.exports = function (character, modifiers, e, sequenceName, combination, level) {\n  var self = this\n  var j\n  var callback\n  var matches = []\n  var action = e.type\n  var isModifier\n  var modifiersMatch\n\n  if (\n      action === 'keypress' &&\n      // Firefox fires keypress for arrows\n      !(e.code && e.code.slice(0, 5) === 'Arrow')\n  ) {\n    // 'any-character' callbacks are only on `keypress`\n    var anyCharCallbacks = self.callbacks['any-character'] || []\n    anyCharCallbacks.forEach(function (callback) {\n      matches.push(callback)\n    })\n  }\n\n  if (!self.callbacks[character]) { return matches }\n\n  isModifier = require('../../helpers/isModifier')\n  // if a modifier key is coming up on its own we should allow it\n  if (action === 'keyup' && isModifier(character)) {\n    modifiers = [character]\n  }\n\n  // loop through all callbacks for the key that was pressed\n  // and see if any of them match\n  for (j = 0; j < self.callbacks[character].length; ++j) {\n    callback = self.callbacks[character][j]\n\n    // if a sequence name is not specified, but this is a sequence at\n    // the wrong level then move onto the next match\n    if (!sequenceName && callback.seq && self.sequenceLevels[callback.seq] !== callback.level) {\n      continue\n    }\n\n    // if the action we are looking for doesn't match the action we got\n    // then we should keep going\n    if (action !== callback.action) {\n      continue\n    }\n\n    // if this is a keypress event and the meta key and control key\n    // are not pressed that means that we need to only look at the\n    // character, otherwise check the modifiers as well\n    //\n    // chrome will not fire a keypress if meta or control is down\n    // safari will fire a keypress if meta or meta+shift is down\n    // firefox will fire a keypress if meta or control is down\n    modifiersMatch = require('./modifiersMatch')\n    if ((action === 'keypress' && !e.metaKey && !e.ctrlKey) || modifiersMatch(modifiers, callback.modifiers)) {\n      // when you bind a combination or sequence a second time it\n      // should overwrite the first one.  if a sequenceName or\n      // combination is specified in this call it does just that\n      //\n      // @todo make deleting its own method?\n      var deleteCombo = !sequenceName && callback.combo === combination\n      var deleteSequence = sequenceName && callback.seq === sequenceName && callback.level === level\n      if (deleteCombo || deleteSequence) {\n        self.callbacks[character].splice(j, 1)\n      }\n\n      matches.push(callback)\n    }\n  }\n\n  return matches\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * reverses the map lookup so that we can look for specific keys\n * to see what can and can't use keypress\n *\n * @return {Object}\n */\nmodule.exports = function () {\n  var self = this\n  var constructor = self.constructor\n  var SPECIAL_KEYS_MAP\n\n  if (!constructor.REVERSE_MAP) {\n    constructor.REVERSE_MAP = {}\n    SPECIAL_KEYS_MAP = require('../../helpers/special-keys-map')\n    for (var key in SPECIAL_KEYS_MAP) {\n      // pull out the numeric keypad from here cause keypress should\n      // be able to detect the keys from the character\n      if (key > 95 && key < 112) {\n        continue\n      }\n\n      if (SPECIAL_KEYS_MAP.hasOwnProperty(key)) {\n        constructor.REVERSE_MAP[SPECIAL_KEYS_MAP[key]] = key\n      }\n    }\n  }\n  return constructor.REVERSE_MAP\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * handles a character key event\n *\n * @param {string} character\n * @param {Array} modifiers\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (character, modifiers, e) {\n  var self = this\n  var callbacks\n  var j\n  var doNotReset = {}\n  var maxLevel = 0\n  var processedSequenceCallback = false\n  var isModifier\n  var ignoreThisKeypress\n\n  callbacks = self.getMatches(character, modifiers, e)\n  // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n  for (j = 0; j < callbacks.length; ++j) {\n    if (callbacks[j].seq) {\n      maxLevel = Math.max(maxLevel, callbacks[j].level)\n    }\n  }\n\n  // loop through matching callbacks for this key event\n  for (j = 0; j < callbacks.length; ++j) {\n    // fire for all sequence callbacks\n    // this is because if for example you have multiple sequences\n    // bound such as \"g i\" and \"g t\" they both need to fire the\n    // callback for matching g cause otherwise you can only ever\n    // match the first one\n    if (callbacks[j].seq) {\n      // only fire callbacks for the maxLevel to prevent\n      // subsequences from also firing\n      //\n      // for example 'a option b' should not cause 'option b' to fire\n      // even though 'option b' is part of the other sequence\n      //\n      // any sequences that do not match here will be discarded\n      // below by the resetSequences call\n      if (callbacks[j].level !== maxLevel) {\n        continue\n      }\n\n      processedSequenceCallback = true\n\n      // keep a list of which sequences were matches for later\n      doNotReset[callbacks[j].seq] = 1\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo, callbacks[j].seq)\n      continue\n    }\n\n    // if there were no sequence matches but we are still here\n    // that means this is a regular match so we should fire that\n    if (!processedSequenceCallback) {\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo)\n    }\n  }\n\n  // if the key you pressed matches the type of sequence without\n  // being a modifier (ie \"keyup\" or \"keypress\") then we should\n  // reset all sequences that were not matched by this event\n  //\n  // this is so, for example, if you have the sequence \"h a t\" and you\n  // type \"h e a r t\" it does not match.  in this case the \"e\" will\n  // cause the sequence to reset\n  //\n  // modifier keys are ignored because you can have a sequence\n  // that contains modifiers such as \"enter ctrl+space\" and in most\n  // cases the modifier key will be pressed before the next key\n  //\n  // also if you have a sequence such as \"ctrl+b a\" then pressing the\n  // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n  //\n  // the \"keydown\" is expected when there is a modifier, but the\n  // \"keypress\" ends up matching the nextExpectedAction since it occurs\n  // after and that causes the sequence to reset\n  //\n  // we ignore keypresses in a sequence that directly follow a keydown\n  // for the same character\n  ignoreThisKeypress = e.type === 'keypress' && self.ignoreNextKeypress\n  isModifier = require('../../helpers/isModifier')\n  if (e.type === self.nextExpectedAction && !isModifier(character) && !ignoreThisKeypress) {\n    self.resetSequences(doNotReset)\n  }\n\n  self.ignoreNextKeypress = processedSequenceCallback && e.type === 'keydown'\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * handles a keydown event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  var self = this\n  var characterFromEvent\n  var eventModifiers\n\n  // normalize e.which for key events\n  // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n  if (typeof e.which !== 'number') {\n    e.which = e.keyCode\n  }\n  characterFromEvent = require('../../helpers/characterFromEvent')\n  var character = characterFromEvent(e)\n\n  // no character found then stop\n  if (character === undefined) {\n    return\n  }\n\n  // need to use === for the character check because the character can be 0\n  if (e.type === 'keyup' && self.ignoreNextKeyup === character) {\n    self.ignoreNextKeyup = false\n    return\n  }\n\n  eventModifiers = require('../../helpers/eventModifiers')\n  self.handleKey(character, eventModifiers(e), e)\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * checks if two arrays are equal\n *\n * @param {Array} modifiers1\n * @param {Array} modifiers2\n * @returns {boolean}\n */\nmodule.exports = function (modifiers1, modifiers2) {\n  return modifiers1.sort().join(',') === modifiers2.sort().join(',')\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * picks the best action based on the key combination\n *\n * @param {string} key - character for key\n * @param {Array} modifiers\n * @param {string=} action passed in\n */\nmodule.exports = function (key, modifiers, action) {\n  var self = this\n\n  // if no action was picked in we should try to pick the one\n  // that we think would work best for this key\n  if (!action) {\n    action = self.getReverseMap()[key] ? 'keydown' : 'keypress'\n  }\n\n  // modifier keys don't work as expected with keypress,\n  // switch to keydown\n  if (action === 'keypress' && modifiers.length) {\n    action = 'keydown'\n  }\n\n  return action\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * resets the library back to its initial state. This is useful\n * if you want to clear out the current keyboard shortcuts and bind\n * new ones - for example if you switch to another page\n *\n * @returns void\n */\nmodule.exports = function () {\n  var self = this\n  self.callbacks = {}\n  self.directMap = {}\n  return this\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * called to set a 1 second timeout on the specified sequence\n *\n * this is so after each key press in the sequence you have 1 second\n * to press the next key before you have to start over\n *\n * @returns void\n */\nmodule.exports = function () {\n  var self = this\n\n  clearTimeout(self.resetTimer)\n  self.resetTimer = setTimeout(\n    function () {\n      self.resetSequences()\n    },\n    1000\n  )\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * resets all sequence counters except for the ones passed in\n *\n * @param {Object} doNotReset\n * @returns void\n */\nmodule.exports = function (doNotReset) {\n  var self = this\n\n  doNotReset = doNotReset || {}\n\n  var activeSequences = false\n  var key\n\n  for (key in self.sequenceLevels) {\n    if (doNotReset[key]) {\n      activeSequences = true\n      continue\n    }\n    self.sequenceLevels[key] = 0\n  }\n\n  if (!activeSequences) {\n    self.nextExpectedAction = false\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n* should we stop this event before firing off callbacks\n*\n* @param {Event} e\n* @param {Element} element\n* @return {boolean}\n*/\nmodule.exports = function (e, element) {\n  // if the element has the class \"combokeys\" then no need to stop\n  if ((' ' + element.className + ' ').indexOf(' combokeys ') > -1) {\n    return false\n  }\n\n  var tagName = element.tagName.toLowerCase()\n\n  // stop for input, select, and textarea\n  return tagName === 'input' || tagName === 'select' || tagName === 'textarea' || element.isContentEditable\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * triggers an event that has already been bound\n *\n * @param {string} keys\n * @param {string=} action\n * @returns void\n */\nmodule.exports = function (keys, action) {\n  var self = this\n  if (self.directMap[keys + ':' + action]) {\n    self.directMap[keys + ':' + action]({}, keys)\n  }\n  return this\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * unbinds an event to Combokeys\n *\n * the unbinding sets the callback function of the specified key combo\n * to an empty function and deletes the corresponding key in the\n * directMap dict.\n *\n * TODO: actually remove this from the callbacks dictionary instead\n * of binding an empty function\n *\n * the keycombo+action has to be exactly the same as\n * it was defined in the bind method\n *\n * @param {string|Array} keys\n * @param {string} action\n * @returns void\n */\nmodule.exports = function (keys, action) {\n  var self = this\n\n  return self.bind(keys, function () {}, action)\n}\n","/* eslint-env node, browser */\n'use strict'\n\nmodule.exports = function () {\n  var self = this\n\n  self.instances.forEach(function (combokeys) {\n    combokeys.reset()\n  })\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * takes the event and returns the key character\n *\n * @param {Event} e\n * @return {string}\n */\nmodule.exports = function (e) {\n  var SPECIAL_KEYS_MAP,\n    SPECIAL_CHARACTERS_MAP\n  SPECIAL_KEYS_MAP = require('./special-keys-map')\n  SPECIAL_CHARACTERS_MAP = require('./special-characters-map')\n\n  // for keypress events we should return the character as is\n  if (e.type === 'keypress') {\n    var character = String.fromCharCode(e.which)\n\n    // if the shift key is not pressed then it is safe to assume\n    // that we want the character to be lowercase.  this means if\n    // you accidentally have caps lock on then your key bindings\n    // will continue to work\n    //\n    // the only side effect that might not be desired is if you\n    // bind something like 'A' cause you want to trigger an\n    // event when capital A is pressed caps lock will no longer\n    // trigger the event.  shift+a will though.\n    if (!e.shiftKey) {\n      character = character.toLowerCase()\n    }\n\n    return character\n  }\n\n  // for non keypress events the special maps are needed\n  if (SPECIAL_KEYS_MAP[e.which] !== undefined) {\n    return SPECIAL_KEYS_MAP[e.which]\n  }\n\n  if (SPECIAL_CHARACTERS_MAP[e.which] !== undefined) {\n    return SPECIAL_CHARACTERS_MAP[e.which]\n  }\n\n  // if it is not in the special map\n\n  // with keydown and keyup events the character seems to always\n  // come in as an uppercase character whether you are pressing shift\n  // or not.  we should make sure it is always lowercase for comparisons\n  return String.fromCharCode(e.which).toLowerCase()\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * takes a key event and figures out what the modifiers are\n *\n * @param {Event} e\n * @returns {Array}\n */\nmodule.exports = function (e) {\n  var modifiers = []\n\n  if (e.shiftKey) {\n    modifiers.push('shift')\n  }\n\n  if (e.altKey) {\n    modifiers.push('alt')\n  }\n\n  if (e.ctrlKey) {\n    modifiers.push('ctrl')\n  }\n\n  if (e.metaKey) {\n    modifiers.push('meta')\n  }\n\n  return modifiers\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * determines if the keycode specified is a modifier key or not\n *\n * @param {string} key\n * @returns {boolean}\n */\nmodule.exports = function (key) {\n  return key === 'shift' || key === 'ctrl' || key === 'alt' || key === 'meta'\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * Converts from a string key combination to an array\n *\n * @param  {string} combination like \"command+shift+l\"\n * @return {Array}\n */\nmodule.exports = function (combination) {\n  if (combination === '+') {\n    return ['+']\n  }\n\n  return combination.split('+')\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * prevents default for this event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  if (e.preventDefault) {\n    e.preventDefault()\n    return\n  }\n\n  e.returnValue = false\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * this is a mapping of keys that require shift on a US keypad\n * back to the non shift equivelents\n *\n * this is so you can use keyup events with these keys\n *\n * note that this will only work reliably on US keyboards\n *\n * @type {Object}\n */\nmodule.exports = {\n  '~': '`',\n  '!': '1',\n  '@': '2',\n  '#': '3',\n  '$': '4',\n  '%': '5',\n  '^': '6',\n  '&': '7',\n  '*': '8',\n  '(': '9',\n  ')': '0',\n  '_': '-',\n  '+': '=',\n  ':': ';',\n  '\"': \"'\",\n  '<': ',',\n  '>': '.',\n  '?': '/',\n  '|': '\\\\'\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * this is a list of special strings you can use to map\n * to modifier keys when you specify your keyboard shortcuts\n *\n * @type {Object}\n */\nmodule.exports = {\n  'option': 'alt',\n  'command': 'meta',\n  'return': 'enter',\n  'escape': 'esc',\n  'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * mapping for special characters so they can support\n *\n * this dictionary is only used incase you want to bind a\n * keyup or keydown event to one of these keys\n *\n * @type {Object}\n */\nmodule.exports = {\n  106: '*',\n  107: 'plus',\n  109: 'minus',\n  110: '.',\n  111: '/',\n  186: ';',\n  187: '=',\n  188: ',',\n  189: '-',\n  190: '.',\n  191: '/',\n  192: '`',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: \"'\"\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * mapping of special keycodes to their corresponding keys\n *\n * everything in this dictionary cannot use keypress events\n * so it has to be here to map to the correct keycodes for\n * keyup/keydown events\n *\n * @type {Object}\n */\nmodule.exports = {\n  8: 'backspace',\n  9: 'tab',\n  13: 'enter',\n  16: 'shift',\n  17: 'ctrl',\n  18: 'alt',\n  20: 'capslock',\n  27: 'esc',\n  32: 'space',\n  33: 'pageup',\n  34: 'pagedown',\n  35: 'end',\n  36: 'home',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  45: 'ins',\n  46: 'del',\n  91: 'meta',\n  93: 'meta',\n  173: 'minus',\n  187: 'plus',\n  189: 'minus',\n  224: 'meta'\n}\n\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (var i = 1; i < 20; ++i) {\n  module.exports[111 + i] = 'f' + i\n}\n\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (i = 0; i <= 9; ++i) {\n  module.exports[i + 96] = i\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * stops propogation for this event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  if (e.stopPropagation) {\n    e.stopPropagation()\n    return\n  }\n\n  e.cancelBubble = true\n}\n","import { css } from '@emotion/css';\nimport { useCallback, useMemo } from 'react';\nimport * as React from 'react';\n\nimport { DataSourceJsonData, DataSourceInstanceSettings, DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSection } from '@grafana/experimental';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, Input, InlineSwitch } from '@grafana/ui';\n\nimport { IntervalInput } from '../IntervalInput/IntervalInput';\n\nimport { TagMappingInput } from './TagMappingInput';\n\nexport interface TraceToLogsTag {\n  key: string;\n  value?: string;\n}\n\n// @deprecated use getTraceToLogsOptions to get the v2 version of this config from jsonData\nexport interface TraceToLogsOptions {\n  datasourceUid?: string;\n  tags?: string[];\n  mappedTags?: TraceToLogsTag[];\n  mapTagNamesEnabled?: boolean;\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n  filterByTraceID?: boolean;\n  filterBySpanID?: boolean;\n  lokiSearch?: boolean; // legacy\n}\n\nexport interface TraceToLogsOptionsV2 {\n  datasourceUid?: string;\n  tags?: TraceToLogsTag[];\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n  filterByTraceID?: boolean;\n  filterBySpanID?: boolean;\n  query?: string;\n  customQuery: boolean;\n}\n\nexport interface TraceToLogsData extends DataSourceJsonData {\n  tracesToLogs?: TraceToLogsOptions;\n  tracesToLogsV2?: TraceToLogsOptionsV2;\n}\n\n/**\n * Gets new version of the traceToLogs config from the json data either returning directly or transforming the old\n * version to new and returning that.\n */\nexport function getTraceToLogsOptions(data?: TraceToLogsData): TraceToLogsOptionsV2 | undefined {\n  if (data?.tracesToLogsV2) {\n    return data.tracesToLogsV2;\n  }\n  if (!data?.tracesToLogs) {\n    return undefined;\n  }\n  const traceToLogs: TraceToLogsOptionsV2 = {\n    customQuery: false,\n  };\n  traceToLogs.datasourceUid = data.tracesToLogs.datasourceUid;\n  traceToLogs.tags = data.tracesToLogs.mapTagNamesEnabled\n    ? data.tracesToLogs.mappedTags\n    : data.tracesToLogs.tags?.map((tag) => ({ key: tag }));\n  traceToLogs.filterByTraceID = data.tracesToLogs.filterByTraceID;\n  traceToLogs.filterBySpanID = data.tracesToLogs.filterBySpanID;\n  traceToLogs.spanStartTimeShift = data.tracesToLogs.spanStartTimeShift;\n  traceToLogs.spanEndTimeShift = data.tracesToLogs.spanEndTimeShift;\n  return traceToLogs;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TraceToLogsData> {}\n\nexport function TraceToLogsSettings({ options, onOptionsChange }: Props) {\n  const supportedDataSourceTypes = [\n    'loki',\n    'elasticsearch',\n    'grafana-splunk-datasource', // external\n    'grafana-opensearch-datasource', // external\n    'grafana-falconlogscale-datasource', // external\n    'googlecloud-logging-datasource', // external\n  ];\n\n  const traceToLogs = useMemo(\n    (): TraceToLogsOptionsV2 => getTraceToLogsOptions(options.jsonData) || { customQuery: false },\n    [options.jsonData]\n  );\n  const { query = '', tags, customQuery } = traceToLogs;\n\n  const updateTracesToLogs = useCallback(\n    (value: Partial<TraceToLogsOptionsV2>) => {\n      // Cannot use updateDatasourcePluginJsonDataOption here as we need to update 2 keys, and they would overwrite each\n      // other as updateDatasourcePluginJsonDataOption isn't synchronized\n      onOptionsChange({\n        ...options,\n        jsonData: {\n          ...options.jsonData,\n          tracesToLogsV2: {\n            ...traceToLogs,\n            ...value,\n          },\n          tracesToLogs: undefined,\n        },\n      });\n    },\n    [onOptionsChange, options, traceToLogs]\n  );\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"The logs data source the trace is going to navigate to\"\n          label=\"Data source\"\n          labelWidth={26}\n        >\n          <DataSourcePicker\n            inputId=\"trace-to-logs-data-source-picker\"\n            filter={(ds) => supportedDataSourceTypes.includes(ds.type)}\n            current={traceToLogs.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds: DataSourceInstanceSettings) =>\n              updateTracesToLogs({\n                datasourceUid: ds.uid,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <IntervalInput\n          label={getTimeShiftLabel('start')}\n          tooltip={getTimeShiftTooltip('start', '0')}\n          value={traceToLogs.spanStartTimeShift || ''}\n          onChange={(val) => {\n            updateTracesToLogs({ spanStartTimeShift: val });\n          }}\n          isInvalidError={invalidTimeShiftError}\n        />\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <IntervalInput\n          label={getTimeShiftLabel('end')}\n          tooltip={getTimeShiftTooltip('end', '0')}\n          value={traceToLogs.spanEndTimeShift || ''}\n          onChange={(val) => {\n            updateTracesToLogs({ spanEndTimeShift: val });\n          }}\n          isInvalidError={invalidTimeShiftError}\n        />\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"Tags that will be used in the query. Default tags: 'cluster', 'hostname', 'namespace', 'pod', 'service.name', 'service.namespace'\"\n          label=\"Tags\"\n          labelWidth={26}\n        >\n          <TagMappingInput values={tags ?? []} onChange={(v) => updateTracesToLogs({ tags: v })} />\n        </InlineField>\n      </InlineFieldRow>\n\n      <IdFilter\n        disabled={customQuery}\n        type={'trace'}\n        id={'filterByTraceID'}\n        value={Boolean(traceToLogs.filterByTraceID)}\n        onChange={(val) => updateTracesToLogs({ filterByTraceID: val })}\n      />\n      <IdFilter\n        disabled={customQuery}\n        type={'span'}\n        id={'filterBySpanID'}\n        value={Boolean(traceToLogs.filterBySpanID)}\n        onChange={(val) => updateTracesToLogs({ filterBySpanID: val })}\n      />\n\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"Use a custom query with the possibility to interpolate variables from the trace or span\"\n          label=\"Use custom query\"\n          labelWidth={26}\n        >\n          <InlineSwitch\n            id={'customQuerySwitch'}\n            value={customQuery}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateTracesToLogs({ customQuery: event.currentTarget.checked })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      {customQuery && (\n        <InlineField\n          label=\"Query\"\n          labelWidth={26}\n          tooltip=\"The query that will run when navigating from a trace to logs data source. Interpolate tags using the `$__tags` keyword\"\n          grow\n        >\n          <Input\n            label=\"Query\"\n            type=\"text\"\n            allowFullScreen\n            value={query}\n            onChange={(e) => updateTracesToLogs({ query: e.currentTarget.value })}\n          />\n        </InlineField>\n      )}\n    </div>\n  );\n}\n\ninterface IdFilterProps {\n  type: 'trace' | 'span';\n  id: string;\n  value: boolean;\n  onChange: (val: boolean) => void;\n  disabled: boolean;\n}\nfunction IdFilter(props: IdFilterProps) {\n  return (\n    <InlineFieldRow>\n      <InlineField\n        disabled={props.disabled}\n        label={`Filter by ${props.type} ID`}\n        labelWidth={26}\n        grow\n        tooltip={`Filters logs by ${props.type} ID, where the ${props.type} ID should be part of the log line`}\n      >\n        <InlineSwitch\n          id={props.id}\n          value={props.value}\n          onChange={(event: React.SyntheticEvent<HTMLInputElement>) => props.onChange(event.currentTarget.checked)}\n        />\n      </InlineField>\n    </InlineFieldRow>\n  );\n}\n\nexport const getTimeShiftLabel = (type: 'start' | 'end') => {\n  return `Span ${type} time shift`;\n};\n\nexport const getTimeShiftTooltip = (type: 'start' | 'end', defaultVal: string) => {\n  return `Shifts the ${type} time of the span. Default: ${defaultVal} (Time units can be used here, for example: 5s, -1m, 3h)`;\n};\n\nexport const invalidTimeShiftError = 'Invalid time shift. See tooltip for examples.';\n\nexport const TraceToLogsSection = ({ options, onOptionsChange }: DataSourcePluginOptionsEditorProps) => {\n  let suffix = options.type;\n  suffix += options.type === 'tempo' ? '/configure-tempo-data-source/#trace-to-logs' : '/#trace-to-logs';\n\n  return (\n    <ConfigSection\n      title=\"Trace to logs\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Navigate from a trace span to the selected data source's logs.\"\n          suffix={suffix}\n          feature=\"trace to logs\"\n        />\n      }\n      isCollapsible={true}\n      isInitiallyOpen={true}\n    >\n      <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n    </ConfigSection>\n  );\n};\n","// Copyright (c) 2023 The Jaeger Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceSpan } from '../../types';\n\n/**\n * @returns - Returns the span that finished last among the remaining child spans.\n * If a `returningChildStartTime` is provided as a parameter, it returns the child span that finishes\n * just before the specified `returningChildStartTime`.\n */\nconst findLastFinishingChildSpan = (\n  spanMap: Map<string, TraceSpan>,\n  currentSpan: TraceSpan,\n  returningChildStartTime?: number\n): TraceSpan | undefined => {\n  let lastFinishingChildSpanId: string | undefined;\n  if (returningChildStartTime) {\n    lastFinishingChildSpanId = currentSpan?.childSpanIds.find(\n      (each) =>\n        // Look up the span using the map\n        spanMap.has(each) && spanMap.get(each)!.startTime + spanMap.get(each)!.duration < returningChildStartTime\n    );\n  } else {\n    // If `returningChildStartTime` is not provided, select the first child span.\n    // As they are sorted based on endTime\n    lastFinishingChildSpanId = currentSpan.childSpanIds[0];\n  }\n  return lastFinishingChildSpanId ? spanMap.get(lastFinishingChildSpanId) : undefined;\n};\n\nexport default findLastFinishingChildSpan;\n","// Copyright (c) 2023 The Jaeger Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceSpan } from '../../types';\n\n/**\n * Removes child spans whose refType is FOLLOWS_FROM and their descendants.\n * @param spanMap - The map containing spans.\n * @returns - A map with spans whose refType is CHILD_OF.\n */\nconst getChildOfSpans = (spanMap: Map<string, TraceSpan>): Map<string, TraceSpan> => {\n  const followFromSpanIds: string[] = [];\n  const followFromSpansDescendantIds: string[] = [];\n\n  // First find all FOLLOWS_FROM refType spans\n  spanMap.forEach((each) => {\n    if (each.references[0]?.refType === 'FOLLOWS_FROM') {\n      followFromSpanIds.push(each.spanID);\n      // Remove the spanId from childSpanIds array of its parentSpan\n      const parentSpan = spanMap.get(each.references[0].spanID)!;\n      parentSpan.childSpanIds = parentSpan.childSpanIds.filter((a) => a !== each.spanID);\n      spanMap.set(parentSpan.spanID, { ...parentSpan });\n    }\n  });\n\n  // Recursively find all Descendants of FOLLOWS_FROM spans\n  const findDescendantSpans = (spanIds: string[]) => {\n    spanIds.forEach((spanId) => {\n      const span = spanMap.get(spanId)!;\n      if (span.hasChildren) {\n        followFromSpansDescendantIds.push(...span.childSpanIds);\n        findDescendantSpans(span.childSpanIds);\n      }\n    });\n  };\n  findDescendantSpans(followFromSpanIds);\n  // Delete all FOLLOWS_FROM spans and its descendants\n  const idsToBeDeleted = [...followFromSpanIds, ...followFromSpansDescendantIds];\n  idsToBeDeleted.forEach((id) => spanMap.delete(id));\n\n  return spanMap;\n};\nexport default getChildOfSpans;\n","// Copyright (c) 2023 The Jaeger Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceSpan } from '../../types';\n\n/**\n * This function resolves overflowing child spans for each span.\n * An overflowing child span is one whose time range falls outside its parent span's time range.\n * The function adjusts the start time and duration of overflowing child spans\n * to ensure they fit within the time range of their parent span.\n * @param spanMap - A Map where span IDs are keys and the corresponding spans are values.\n * @returns - A sanitized span Map.\n */\nconst sanitizeOverFlowingChildren = (spanMap: Map<string, TraceSpan>): Map<string, TraceSpan> => {\n  let spanIds: string[] = [...spanMap.keys()];\n\n  spanIds.forEach((spanId) => {\n    const span = spanMap.get(spanId)!;\n    if (!(span && span.references.length && span.depth)) {\n      return;\n    }\n    // parentSpan will be undefined when its parentSpan is dropped previously\n    const parentSpan = spanMap.get(span.references[0].spanID);\n\n    if (!parentSpan) {\n      // Drop the child spans of dropped parent span\n      spanMap.delete(span.spanID);\n      return;\n    }\n    const childEndTime = span.startTime + span.duration;\n    const parentEndTime = parentSpan.startTime + parentSpan.duration;\n    if (span.startTime >= parentSpan.startTime) {\n      if (span.startTime >= parentEndTime) {\n        // child outside of parent range => drop the child span\n        //      |----parent----|\n        //                        |----child--|\n        // Remove the childSpan from spanMap\n        spanMap.delete(span.spanID);\n\n        // Remove the childSpanId from its parent span\n        parentSpan.childSpanIds = parentSpan.childSpanIds.filter((id) => id !== span.spanID);\n        return;\n      }\n      if (childEndTime > parentEndTime) {\n        // child end after parent, truncate is needed\n        //      |----parent----|\n        //              |----child--|\n        spanMap.set(span.spanID, {\n          ...span,\n          duration: parentEndTime - span.startTime,\n        });\n        return;\n      }\n      // everything looks good\n      // |----parent----|\n      //   |----child--|\n      return;\n    }\n    if (childEndTime <= parentSpan.startTime) {\n      // child outside of parent range => drop the child span\n      //                      |----parent----|\n      //       |----child--|\n\n      // Remove the childSpan from spanMap\n      spanMap.delete(span.spanID);\n\n      // Remove the childSpanId from its parent span\n      parentSpan.childSpanIds = parentSpan.childSpanIds.filter((id) => id !== span.spanID);\n    } else if (childEndTime <= parentEndTime) {\n      // child start before parent, truncate is needed\n      //      |----parent----|\n      //   |----child--|\n      spanMap.set(span.spanID, {\n        ...span,\n        startTime: parentSpan.startTime,\n        duration: childEndTime - parentSpan.startTime,\n      });\n    } else {\n      // child start before parent and end after parent, truncate is needed\n      //      |----parent----|\n      //  |---------child---------|\n      spanMap.set(span.spanID, {\n        ...span,\n        startTime: parentSpan.startTime,\n        duration: parentEndTime - parentSpan.startTime,\n      });\n    }\n  });\n\n  // Updated spanIds to ensure to not include dropped spans\n  spanIds = [...spanMap.keys()];\n  // Update Child Span References with updated parent span\n  spanIds.forEach((spanId) => {\n    const span = spanMap.get(spanId)!;\n    if (span.references.length) {\n      const parentSpan = spanMap.get(span.references[0].spanID);\n      span.references[0].span = parentSpan;\n      spanMap.set(spanId, { ...span });\n    }\n  });\n\n  return spanMap;\n};\nexport default sanitizeOverFlowingChildren;\n","// Copyright (c) 2023 The Jaeger Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport memoizeOne from 'memoize-one';\n\nimport { CriticalPathSection, Trace, TraceSpan } from '../types';\n\nimport findLastFinishingChildSpan from './utils/findLastFinishingChildSpan';\nimport getChildOfSpans from './utils/getChildOfSpans';\nimport sanitizeOverFlowingChildren from './utils/sanitizeOverFlowingChildren';\n\n/**\n * Computes the critical path sections of a Jaeger trace.\n * The algorithm begins with the top-level span and iterates through the last finishing children (LFCs).\n * It recursively computes the critical path for each LFC span.\n * Upon return from recursion, the algorithm walks backward and picks another child that\n * finished just before the LFC's start.\n * @param spanMap - A map associating span IDs with spans.\n * @param spanId - The ID of the current span.\n * @param criticalPath - An array of critical path sections.\n * @param returningChildStartTime - Optional parameter representing the span's start time.\n *                    It is provided only during the recursive return phase.\n * @returns - An array of critical path sections for the trace.\n * @example -\n * |-------------spanA--------------|\n *    |--spanB--|    |--spanC--|\n * The LFC of spanA is spanC, as it finishes last among its child spans.\n * After invoking CP recursively on LFC, for spanC there is no LFC, so the algorithm walks backward.\n * At this point, it uses returningChildStartTime (startTime of spanC) to select another child that finished\n * immediately before the LFC's start.\n */\nconst computeCriticalPath = (\n  spanMap: Map<string, TraceSpan>,\n  spanId: string,\n  criticalPath: CriticalPathSection[],\n  returningChildStartTime?: number\n): CriticalPathSection[] => {\n  const currentSpan = spanMap.get(spanId);\n\n  if (!currentSpan) {\n    return criticalPath;\n  }\n\n  const lastFinishingChildSpan = findLastFinishingChildSpan(spanMap, currentSpan, returningChildStartTime);\n  let spanCriticalSection: CriticalPathSection;\n\n  if (lastFinishingChildSpan) {\n    spanCriticalSection = {\n      spanId: currentSpan.spanID,\n      section_start: lastFinishingChildSpan.startTime + lastFinishingChildSpan.duration,\n      section_end: returningChildStartTime || currentSpan.startTime + currentSpan.duration,\n    };\n    if (spanCriticalSection.section_start !== spanCriticalSection.section_end) {\n      criticalPath.push(spanCriticalSection);\n    }\n    // Now focus shifts to the lastFinishingChildSpan of cuurent span\n    computeCriticalPath(spanMap, lastFinishingChildSpan.spanID, criticalPath);\n  } else {\n    // If there is no last finishing child then total section upto startTime of span is on critical path\n    spanCriticalSection = {\n      spanId: currentSpan.spanID,\n      section_start: currentSpan.startTime,\n      section_end: returningChildStartTime || currentSpan.startTime + currentSpan.duration,\n    };\n    if (spanCriticalSection.section_start !== spanCriticalSection.section_end) {\n      criticalPath.push(spanCriticalSection);\n    }\n    // Now as there are no lfc's focus shifts to parent span from startTime of span\n    // return from recursion and walk backwards to one level depth to parent span\n    // provide span's startTime as returningChildStartTime\n    if (currentSpan.references.length) {\n      const parentSpanId: string = currentSpan.references.filter((reference) => reference.refType === 'CHILD_OF')[0]\n        .spanID;\n      computeCriticalPath(spanMap, parentSpanId, criticalPath, currentSpan.startTime);\n    }\n  }\n  return criticalPath;\n};\n\nfunction criticalPathForTrace(trace: Trace) {\n  let criticalPath: CriticalPathSection[] = [];\n  // As spans are already sorted based on startTime first span is always rootSpan\n  const rootSpanId = trace?.spans[0].spanID;\n  // If there is root span then algorithm implements\n  if (rootSpanId) {\n    const spanMap = trace.spans.reduce((map, span) => {\n      map.set(span.spanID, span);\n      return map;\n    }, new Map<string, TraceSpan>());\n    try {\n      const refinedSpanMap = getChildOfSpans(spanMap);\n      const sanitizedSpanMap = sanitizeOverFlowingChildren(refinedSpanMap);\n      criticalPath = computeCriticalPath(sanitizedSpanMap, rootSpanId, criticalPath);\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log('error while computing critical path for a trace', error);\n    }\n  }\n  return criticalPath;\n}\n\nconst memoizedTraceCriticalPath = memoizeOne(criticalPathForTrace);\n\nexport default memoizedTraceCriticalPath;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TNil } from '../../index';\n\n// exported for tests\nexport const ITEM_ALPHA = 0.8;\nexport const MIN_ITEM_HEIGHT = 2;\nexport const MAX_TOTAL_HEIGHT = 200;\nexport const MIN_ITEM_WIDTH = 10;\nexport const MIN_TOTAL_HEIGHT = 60;\nexport const MAX_ITEM_HEIGHT = 6;\n\nexport default function renderIntoCanvas(\n  canvas: HTMLCanvasElement,\n  items: Array<{ valueWidth: number; valueOffset: number; serviceName: string }>,\n  totalValueWidth: number,\n  getFillColor: (serviceName: string) => [number, number, number],\n  bgColor: string\n) {\n  const fillCache: Map<string, string | TNil> = new Map();\n  const cHeight = items.length < MIN_TOTAL_HEIGHT ? MIN_TOTAL_HEIGHT : Math.min(items.length, MAX_TOTAL_HEIGHT);\n  const cWidth = window.innerWidth * 2;\n  // eslint-disable-next-line no-param-reassign\n  canvas.width = cWidth;\n  // eslint-disable-next-line no-param-reassign\n  canvas.height = cHeight;\n  const itemHeight = Math.min(MAX_ITEM_HEIGHT, Math.max(MIN_ITEM_HEIGHT, cHeight / items.length));\n  const itemYChange = cHeight / items.length;\n\n  const ctx = canvas.getContext('2d', { alpha: false });\n  if (ctx) {\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, cWidth, cHeight);\n    for (let i = 0; i < items.length; i++) {\n      const { valueWidth, valueOffset, serviceName } = items[i];\n      const x = (valueOffset / totalValueWidth) * cWidth;\n      let width = (valueWidth / totalValueWidth) * cWidth;\n      if (width < MIN_ITEM_WIDTH) {\n        width = MIN_ITEM_WIDTH;\n      }\n      let fillStyle = fillCache.get(serviceName);\n      if (!fillStyle) {\n        fillStyle = `rgba(${getFillColor(serviceName).concat(ITEM_ALPHA).join()})`;\n        fillCache.set(serviceName, fillStyle);\n      }\n      ctx.fillStyle = fillStyle;\n      ctx.fillRect(x, i * itemYChange, width, itemHeight);\n    }\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { withTheme2, stylesFactory } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TNil } from '../../types';\nimport { getRgbColorByKey } from '../../utils/color-generator';\n\nimport renderIntoCanvas from './render-into-canvas';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    CanvasSpanGraph: css({\n      label: 'CanvasSpanGraph',\n      background: autoColor(theme, '#fafafa'),\n      height: '60px',\n      position: 'absolute',\n      width: '100%',\n    }),\n  };\n});\n\ntype CanvasSpanGraphProps = {\n  items: Array<{ valueWidth: number; valueOffset: number; serviceName: string }>;\n  valueWidth: number;\n  theme: GrafanaTheme2;\n};\n\nexport class UnthemedCanvasSpanGraph extends React.PureComponent<CanvasSpanGraphProps> {\n  _canvasElm: HTMLCanvasElement | TNil;\n\n  constructor(props: CanvasSpanGraphProps) {\n    super(props);\n    this._canvasElm = undefined;\n  }\n\n  getColor = (key: string) => getRgbColorByKey(key, this.props.theme);\n\n  componentDidMount() {\n    this._draw();\n  }\n\n  componentDidUpdate() {\n    this._draw();\n  }\n\n  _setCanvasRef = (elm: HTMLCanvasElement | TNil) => {\n    this._canvasElm = elm;\n  };\n\n  _draw() {\n    if (this._canvasElm) {\n      const { valueWidth: totalValueWidth, items } = this.props;\n      renderIntoCanvas(this._canvasElm, items, totalValueWidth, this.getColor, autoColor(this.props.theme, '#fff'));\n    }\n  }\n\n  render() {\n    return (\n      <canvas\n        className={getStyles(this.props.theme).CanvasSpanGraph}\n        ref={this._setCanvasRef}\n        data-testid=\"CanvasSpanGraph\"\n      />\n    );\n  }\n}\n\nexport default withTheme2(UnthemedCanvasSpanGraph);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\n\nimport { useStyles2 } from '@grafana/ui';\n\nimport { formatDuration } from '../../utils/date';\n\nconst getStyles = () => ({\n  TickLabels: css({\n    label: 'TickLabels',\n    height: '1rem',\n    position: 'relative',\n  }),\n  TickLabelsLabel: css({\n    label: 'TickLabelsLabel',\n    color: '#717171',\n    fontSize: '0.7rem',\n    position: 'absolute',\n    userSelect: 'none',\n  }),\n});\n\ntype TickLabelsProps = {\n  numTicks: number;\n  duration: number;\n};\n\nexport default function TickLabels(props: TickLabelsProps) {\n  const { numTicks, duration } = props;\n  const styles = useStyles2(getStyles);\n\n  const ticks = [];\n  for (let i = 0; i < numTicks + 1; i++) {\n    const portion = i / numTicks;\n    const style = portion === 1 ? { right: '0%' } : { left: `${portion * 100}%` };\n    ticks.push(\n      <div key={portion} className={styles.TickLabelsLabel} style={style} data-testid=\"tick\">\n        {formatDuration(duration * portion)}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.TickLabels} data-testid=\"TickLabels\">\n      {ticks}\n    </div>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\n\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  GraphTick: css({\n    label: 'GraphTick',\n    stroke: '#aaa',\n    strokeWidth: '1px',\n  }),\n});\n\nexport type GraphTicksProps = {\n  numTicks: number;\n};\n\nexport default function GraphTicks(props: GraphTicksProps) {\n  const { numTicks } = props;\n  const styles = useStyles2(getStyles);\n  const ticks = [];\n  // i starts at 1, limit is `i < numTicks` so the first and last ticks aren't drawn\n  for (let i = 1; i < numTicks; i++) {\n    const x = `${(i / numTicks) * 100}%`;\n    ticks.push(<line className={styles.GraphTick} x1={x} y1=\"0%\" x2={x} y2=\"100%\" key={i / numTicks} />);\n  }\n\n  return (\n    <g data-testid=\"ticks\" aria-hidden=\"true\">\n      {ticks}\n    </g>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nexport const getStyles = () => ({\n  ScrubberHandleExpansion: cx(\n    css({\n      label: 'ScrubberHandleExpansion',\n      cursor: 'col-resize',\n      fillOpacity: 0,\n      fill: '#44f',\n    }),\n    'scrubber-handle-expansion'\n  ),\n  ScrubberHandle: cx(\n    css({\n      label: 'ScrubberHandle',\n      cursor: 'col-resize',\n      fill: '#555',\n    }),\n    'scrubber-handle'\n  ),\n  ScrubberLine: cx(\n    css({\n      label: 'ScrubberLine',\n      pointerEvents: 'none',\n      stroke: '#555',\n    }),\n    'scrubber-line'\n  ),\n  ScrubberDragging: css({\n    label: 'ScrubberDragging',\n    '& .scrubber-handle-expansion': {\n      fillOpacity: 1,\n    },\n    '& .scrubber-handle': {\n      fill: '#44f',\n    },\n    '& > .scrubber-line': {\n      stroke: '#44f',\n    },\n  }),\n  ScrubberHandles: css({\n    label: 'ScrubberHandles',\n    '&:hover > .scrubber-handle-expansion': {\n      fillOpacity: 1,\n    },\n    '&:hover > .scrubber-handle': {\n      fill: '#44f',\n    },\n    '&:hover + .scrubber.line': {\n      stroke: '#44f',\n    },\n  }),\n});\n\nexport type ScrubberProps = {\n  isDragging: boolean;\n  position: number;\n  onMouseDown: (evt: React.MouseEvent<SVGGElement>) => void;\n  onMouseEnter: (evt: React.MouseEvent<SVGGElement>) => void;\n  onMouseLeave: (evt: React.MouseEvent<SVGGElement>) => void;\n};\n\nexport default function Scrubber({ isDragging, onMouseDown, onMouseEnter, onMouseLeave, position }: ScrubberProps) {\n  const xPercent = `${position * 100}%`;\n  const styles = useStyles2(getStyles);\n  const className = cx({ [styles.ScrubberDragging]: isDragging });\n  return (\n    <g className={className} data-testid=\"scrubber-component\">\n      <g\n        data-testid=\"scrubber-component-g\"\n        className={styles.ScrubberHandles}\n        onMouseDown={onMouseDown}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        {/* handleExpansion is only visible when `isDragging` is true */}\n        <rect\n          data-testid=\"scrubber-component-rect-1\"\n          x={xPercent}\n          className={styles.ScrubberHandleExpansion}\n          style={{ transform: `translate(-4.5px)` }}\n          width=\"9\"\n          height=\"20\"\n        />\n        <rect\n          data-testid=\"scrubber-component-rect-2\"\n          x={xPercent}\n          className={styles.ScrubberHandle}\n          style={{ transform: `translate(-1.5px)` }}\n          width=\"3\"\n          height=\"20\"\n        />\n      </g>\n      <line\n        className={styles.ScrubberLine}\n        y2=\"100%\"\n        x1={xPercent}\n        x2={xPercent}\n        data-testid=\"scrubber-component-line\"\n      />\n    </g>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { withTheme2, stylesFactory, Button } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TUpdateViewRangeTimeFunction, ViewRange, ViewRangeTimeUpdate, TNil } from '../../index';\nimport DraggableManager, { DraggableBounds, DraggingUpdate, EUpdateTypes } from '../../utils/DraggableManager';\n\nimport GraphTicks from './GraphTicks';\nimport Scrubber from './Scrubber';\n\nexport const getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  // Need this cause emotion will merge emotion generated classes into single className if used with cx from emotion\n  // package and the selector won't work\n  const ViewingLayerResetZoomHoverClassName = 'JaegerUiComponents__ViewingLayerResetZoomHoverClassName';\n  const ViewingLayerResetZoom = css({\n    label: 'ViewingLayerResetZoom',\n    display: 'none',\n    position: 'absolute',\n    right: '1%',\n    top: '10%',\n    zIndex: 1,\n  });\n\n  return {\n    ViewingLayer: css({\n      label: 'ViewingLayer',\n      cursor: 'vertical-text',\n      position: 'relative',\n      zIndex: 1,\n      [`&:hover > .${ViewingLayerResetZoomHoverClassName}`]: {\n        display: 'unset',\n      },\n    }),\n    ViewingLayerGraph: css({\n      label: 'ViewingLayerGraph',\n      border: `1px solid ${autoColor(theme, '#999')}`,\n      /* need !important here to overcome something from semantic UI */\n      overflow: 'visible !important',\n      position: 'relative',\n      transformOrigin: '0 0',\n      width: '100%',\n    }),\n    ViewingLayerInactive: css({\n      label: 'ViewingLayerInactive',\n      fill: autoColor(theme, 'rgba(214, 214, 214, 0.5)'),\n    }),\n    ViewingLayerCursorGuide: css({\n      label: 'ViewingLayerCursorGuide',\n      stroke: autoColor(theme, '#f44'),\n      strokeWidth: 1,\n    }),\n    ViewingLayerDraggedShift: css({\n      label: 'ViewingLayerDraggedShift',\n      fillOpacity: 0.2,\n    }),\n    ViewingLayerDrag: css({\n      label: 'ViewingLayerDrag',\n      fill: autoColor(theme, '#44f'),\n    }),\n    ViewingLayerFullOverlay: css({\n      label: 'ViewingLayerFullOverlay',\n      bottom: 0,\n      cursor: 'col-resize',\n      left: 0,\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      userSelect: 'none',\n    }),\n    ViewingLayerResetZoom,\n    ViewingLayerResetZoomHoverClassName,\n  };\n});\n\nexport type ViewingLayerProps = {\n  height: number;\n  numTicks: number;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  updateNextViewRangeTime: (update: ViewRangeTimeUpdate) => void;\n  viewRange: ViewRange;\n  theme: GrafanaTheme2;\n};\n\ntype ViewingLayerState = {\n  /**\n   * Cursor line should not be drawn when the mouse is over the scrubber handle.\n   */\n  preventCursorLine: boolean;\n};\n\n/**\n * Designate the tags for the different dragging managers. Exported for tests.\n */\nexport const dragTypes = {\n  /**\n   * Tag for dragging the right scrubber, e.g. end of the current view range.\n   */\n  SHIFT_END: 'SHIFT_END',\n  /**\n   * Tag for dragging the left scrubber, e.g. start of the current view range.\n   */\n  SHIFT_START: 'SHIFT_START',\n  /**\n   * Tag for dragging a new view range.\n   */\n  REFRAME: 'REFRAME',\n};\n\n/**\n * Returns the layout information for drawing the view-range differential, e.g.\n * show what will change when the mouse is released. Basically, this is the\n * difference from the start of the drag to the current position.\n *\n * @returns {{ x: string, width: string, leadginX: string }}\n */\nfunction getNextViewLayout(start: number, position: number) {\n  const [left, right] = start < position ? [start, position] : [position, start];\n  return {\n    x: `${left * 100}%`,\n    width: `${(right - left) * 100}%`,\n    leadingX: `${position * 100}%`,\n  };\n}\n\n/**\n * `ViewingLayer` is rendered on top of the Canvas rendering of the minimap and\n * handles showing the current view range and handles mouse UX for modifying it.\n */\nexport class UnthemedViewingLayer extends React.PureComponent<ViewingLayerProps, ViewingLayerState> {\n  state: ViewingLayerState;\n\n  _root: Element | TNil;\n\n  /**\n   * `_draggerReframe` handles clicking and dragging on the `ViewingLayer` to\n   * redefined the view range.\n   */\n  _draggerReframe: DraggableManager;\n\n  /**\n   * `_draggerStart` handles dragging the left scrubber to adjust the start of\n   * the view range.\n   */\n  _draggerStart: DraggableManager;\n\n  /**\n   * `_draggerEnd` handles dragging the right scrubber to adjust the end of\n   * the view range.\n   */\n  _draggerEnd: DraggableManager;\n\n  constructor(props: ViewingLayerProps) {\n    super(props);\n\n    this._draggerReframe = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleReframeDragEnd,\n      onDragMove: this._handleReframeDragUpdate,\n      onDragStart: this._handleReframeDragUpdate,\n      onMouseMove: this._handleReframeMouseMove,\n      onMouseLeave: this._handleReframeMouseLeave,\n      tag: dragTypes.REFRAME,\n    });\n\n    this._draggerStart = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleScrubberDragEnd,\n      onDragMove: this._handleScrubberDragUpdate,\n      onDragStart: this._handleScrubberDragUpdate,\n      onMouseEnter: this._handleScrubberEnterLeave,\n      onMouseLeave: this._handleScrubberEnterLeave,\n      tag: dragTypes.SHIFT_START,\n    });\n\n    this._draggerEnd = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleScrubberDragEnd,\n      onDragMove: this._handleScrubberDragUpdate,\n      onDragStart: this._handleScrubberDragUpdate,\n      onMouseEnter: this._handleScrubberEnterLeave,\n      onMouseLeave: this._handleScrubberEnterLeave,\n      tag: dragTypes.SHIFT_END,\n    });\n\n    this._root = undefined;\n    this.state = {\n      preventCursorLine: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this._draggerReframe.dispose();\n    this._draggerEnd.dispose();\n    this._draggerStart.dispose();\n  }\n\n  _setRoot = (elm: SVGElement | TNil) => {\n    this._root = elm;\n  };\n\n  _getDraggingBounds = (tag: string | TNil): DraggableBounds => {\n    if (!this._root) {\n      throw new Error('invalid state');\n    }\n    const { left: clientXLeft, width } = this._root.getBoundingClientRect();\n    const [viewStart, viewEnd] = this.props.viewRange.time.current;\n    let maxValue = 1;\n    let minValue = 0;\n    if (tag === dragTypes.SHIFT_START) {\n      maxValue = viewEnd;\n    } else if (tag === dragTypes.SHIFT_END) {\n      minValue = viewStart;\n    }\n    return { clientXLeft, maxValue, minValue, width };\n  };\n\n  _handleReframeMouseMove = ({ value }: DraggingUpdate) => {\n    this.props.updateNextViewRangeTime({ cursor: value });\n  };\n\n  _handleReframeMouseLeave = () => {\n    this._draggerReframe.resetBounds();\n    this.props.updateNextViewRangeTime({ cursor: null });\n  };\n\n  _handleReframeDragUpdate = ({ value }: DraggingUpdate) => {\n    const shift = value;\n    const { time } = this.props.viewRange;\n    const anchor = time.reframe ? time.reframe.anchor : shift;\n    const update = { reframe: { anchor, shift } };\n    this.props.updateNextViewRangeTime(update);\n  };\n\n  _handleReframeDragEnd = ({ manager, value }: DraggingUpdate) => {\n    const { time } = this.props.viewRange;\n    const anchor = time.reframe ? time.reframe.anchor : value;\n    const [start, end] = value < anchor ? [value, anchor] : [anchor, value];\n    manager.resetBounds();\n    this.props.updateViewRangeTime(start, end, 'minimap');\n  };\n\n  _handleScrubberEnterLeave = ({ type }: DraggingUpdate) => {\n    const preventCursorLine = type === EUpdateTypes.MouseEnter;\n    this.setState({ preventCursorLine });\n  };\n\n  _handleScrubberDragUpdate = ({ event, tag, type, value }: DraggingUpdate) => {\n    if (type === EUpdateTypes.DragStart) {\n      event.stopPropagation();\n    }\n    if (tag === dragTypes.SHIFT_START) {\n      this.props.updateNextViewRangeTime({ shiftStart: value });\n    } else if (tag === dragTypes.SHIFT_END) {\n      this.props.updateNextViewRangeTime({ shiftEnd: value });\n    }\n  };\n\n  _handleScrubberDragEnd = ({ manager, tag, value }: DraggingUpdate) => {\n    const [viewStart, viewEnd] = this.props.viewRange.time.current;\n    let update: [number, number];\n    if (tag === dragTypes.SHIFT_START) {\n      update = [value, viewEnd];\n    } else if (tag === dragTypes.SHIFT_END) {\n      update = [viewStart, value];\n    } else {\n      // to satisfy flow\n      throw new Error('bad state');\n    }\n    manager.resetBounds();\n    this.setState({ preventCursorLine: false });\n    this.props.updateViewRangeTime(update[0], update[1], 'minimap');\n  };\n\n  /**\n   * Resets the zoom to fully zoomed out.\n   */\n  _resetTimeZoomClickHandler = () => {\n    this.props.updateViewRangeTime(0, 1);\n  };\n\n  /**\n   * Renders the difference between where the drag started and the current\n   * position, e.g. the red or blue highlight.\n   *\n   * @returns React.Node[]\n   */\n  _getMarkers(from: number, to: number) {\n    const styles = getStyles(this.props.theme);\n    const layout = getNextViewLayout(from, to);\n    return [\n      <rect\n        key=\"fill\"\n        className={cx(styles.ViewingLayerDraggedShift, styles.ViewingLayerDrag)}\n        x={layout.x}\n        y=\"0\"\n        width={layout.width}\n        height={this.props.height - 2}\n      />,\n      <rect\n        key=\"edge\"\n        className={cx(styles.ViewingLayerDrag)}\n        x={layout.leadingX}\n        y=\"0\"\n        width=\"1\"\n        height={this.props.height - 2}\n      />,\n    ];\n  }\n\n  render() {\n    const { height, viewRange, numTicks, theme } = this.props;\n    const { preventCursorLine } = this.state;\n    const { current, cursor, shiftStart, shiftEnd, reframe } = viewRange.time;\n    const haveNextTimeRange = shiftStart != null || shiftEnd != null || reframe != null;\n    const [viewStart, viewEnd] = current;\n    let leftInactive = 0;\n    if (viewStart) {\n      leftInactive = viewStart * 100;\n    }\n    let rightInactive = 100;\n    if (viewEnd) {\n      rightInactive = 100 - viewEnd * 100;\n    }\n    let cursorPosition: string | undefined;\n    if (!haveNextTimeRange && cursor != null && !preventCursorLine) {\n      cursorPosition = `${cursor * 100}%`;\n    }\n    const styles = getStyles(theme);\n\n    return (\n      <div aria-hidden className={styles.ViewingLayer} style={{ height }}>\n        {(viewStart !== 0 || viewEnd !== 1) && (\n          <Button\n            onClick={this._resetTimeZoomClickHandler}\n            className={cx(styles.ViewingLayerResetZoom, styles.ViewingLayerResetZoomHoverClassName)}\n            type=\"button\"\n            variant=\"secondary\"\n          >\n            Reset Selection\n          </Button>\n        )}\n        <svg\n          height={height}\n          className={styles.ViewingLayerGraph}\n          ref={this._setRoot}\n          onMouseDown={this._draggerReframe.handleMouseDown}\n          onMouseLeave={this._draggerReframe.handleMouseLeave}\n          onMouseMove={this._draggerReframe.handleMouseMove}\n        >\n          {leftInactive > 0 && (\n            <rect\n              x={0}\n              y={0}\n              height=\"100%\"\n              width={`${leftInactive}%`}\n              className={styles.ViewingLayerInactive}\n              data-testid=\"left-ViewingLayerInactive\"\n            />\n          )}\n          {rightInactive > 0 && (\n            <rect\n              x={`${100 - rightInactive}%`}\n              y={0}\n              height=\"100%\"\n              width={`${rightInactive}%`}\n              className={styles.ViewingLayerInactive}\n              data-testid=\"right-ViewingLayerInactive\"\n            />\n          )}\n          <GraphTicks numTicks={numTicks} />\n          {cursorPosition && (\n            <line\n              className={styles.ViewingLayerCursorGuide}\n              x1={cursorPosition}\n              y1=\"0\"\n              x2={cursorPosition}\n              y2={height - 2}\n              strokeWidth=\"1\"\n              data-testid=\"ViewingLayerCursorGuide\"\n            />\n          )}\n          {shiftStart != null && this._getMarkers(viewStart, shiftStart)}\n          {shiftEnd != null && this._getMarkers(viewEnd, shiftEnd)}\n          <Scrubber\n            isDragging={shiftStart != null}\n            onMouseDown={this._draggerStart.handleMouseDown}\n            onMouseEnter={this._draggerStart.handleMouseEnter}\n            onMouseLeave={this._draggerStart.handleMouseLeave}\n            position={viewStart || 0}\n          />\n          <Scrubber\n            isDragging={shiftEnd != null}\n            position={viewEnd || 1}\n            onMouseDown={this._draggerEnd.handleMouseDown}\n            onMouseEnter={this._draggerEnd.handleMouseEnter}\n            onMouseLeave={this._draggerEnd.handleMouseLeave}\n          />\n          {reframe != null && this._getMarkers(reframe.anchor, reframe.shift)}\n        </svg>\n        {/* fullOverlay updates the mouse cursor blocks mouse events */}\n        {haveNextTimeRange && <div className={styles.ViewingLayerFullOverlay} />}\n      </div>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedViewingLayer);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport * as React from 'react';\n\nimport { TUpdateViewRangeTimeFunction, ViewRange, ViewRangeTimeUpdate } from '../../index';\nimport { TraceSpan, Trace } from '../../types';\n\nimport CanvasSpanGraph from './CanvasSpanGraph';\nimport TickLabels from './TickLabels';\nimport ViewingLayer from './ViewingLayer';\n\nconst getStyles = () => {\n  return {\n    container: css({\n      padding: '0 0.5rem 0.5rem 0.5rem',\n    }),\n    canvasContainer: css({\n      position: 'relative',\n    }),\n  };\n};\n\nconst DEFAULT_HEIGHT = 60;\nexport const TIMELINE_TICK_INTERVAL = 4;\n\nexport type SpanGraphProps = {\n  height?: number;\n  trace: Trace;\n  viewRange: ViewRange;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  updateNextViewRangeTime: (nextUpdate: ViewRangeTimeUpdate) => void;\n};\n\ntype SpanItem = {\n  valueOffset: number;\n  valueWidth: number;\n  serviceName: string;\n};\n\nfunction getItem(span: TraceSpan): SpanItem {\n  return {\n    valueOffset: span.relativeStartTime,\n    valueWidth: span.duration,\n    serviceName: span.process.serviceName,\n  };\n}\n\nfunction getItems(trace: Trace): SpanItem[] {\n  return trace.spans.map(getItem);\n}\n\nconst memoizedGetitems = memoizeOne(getItems);\n\nexport default class SpanGraph extends React.PureComponent<SpanGraphProps> {\n  static defaultProps = {\n    height: DEFAULT_HEIGHT,\n  };\n\n  render() {\n    const { height, trace, viewRange, updateNextViewRangeTime, updateViewRangeTime } = this.props;\n    const styles = getStyles();\n\n    if (!trace) {\n      return <div />;\n    }\n\n    const items = memoizedGetitems(trace);\n    return (\n      <div className={styles.container}>\n        <TickLabels numTicks={TIMELINE_TICK_INTERVAL} duration={trace.duration} />\n        <div className={styles.canvasContainer}>\n          <CanvasSpanGraph valueWidth={trace.duration} items={items} />\n          <ViewingLayer\n            viewRange={viewRange}\n            numTicks={TIMELINE_TICK_INTERVAL}\n            height={height || DEFAULT_HEIGHT}\n            updateViewRangeTime={updateViewRangeTime}\n            updateNextViewRangeTime={updateNextViewRangeTime}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { useCallback, useState } from 'react';\n\nimport { TraceSpan } from './components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import { useCallback, useState, useEffect } from 'react';\n\nimport { DataFrame, TraceLog } from '@grafana/data';\n\nimport { DetailState } from './components';\nimport { TraceSpanReference } from './components/types/trace';\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState(frame: DataFrame) {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  // Clear detail state when new trace arrives\n  useEffect(() => {\n    setDetailStates(new Map<string, DetailState>());\n  }, [frame, setDetailStates]);\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailReferenceItemToggle = useCallback(\n    function detailReferenceItemToggle(spanID: string, reference: TraceSpanReference) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleReferenceItem(reference);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferenceItemToggle,\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\n\nimport { ViewRangeTimeUpdate, ViewRange } from './components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange((prevRange): ViewRange => {\n      const time = { ...prevRange.time, ...update };\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange((prevRange): ViewRange => {\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","import { css } from '@emotion/css';\nimport { RefObject, useMemo, useState } from 'react';\nimport { useToggle } from 'react-use';\n\nimport {\n  CoreApp,\n  DataFrame,\n  DataLink,\n  DataSourceApi,\n  DataSourceJsonData,\n  Field,\n  GrafanaTheme2,\n  LinkModel,\n  mapInternalLinkToExplore,\n  SplitOpen,\n} from '@grafana/data';\nimport { getTraceToLogsOptions, TraceToMetricsData, TraceToProfilesData } from '@grafana/o11y-ds-frontend';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { useStyles2 } from '@grafana/ui';\nimport { TempoQuery } from '@grafana-plugins/tempo/types';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { changePanelState } from '../state/explorePane';\n\nimport {\n  SpanBarOptionsData,\n  SpanLinkFunc,\n  Trace,\n  TracePageHeader,\n  TraceTimelineViewer,\n  TTraceTimeline,\n} from './components';\nimport memoizedTraceCriticalPath from './components/CriticalPath';\nimport SpanGraph from './components/TracePageHeader/SpanGraph';\nimport { TraceFlameGraphs } from './components/TraceTimelineViewer/SpanDetail';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { useChildrenState } from './useChildrenState';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useSearch } from './useSearch';\nimport { useViewRange } from './useViewRange';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  noDataMsg: css({\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    placeItems: 'center',\n    fontSize: theme.typography.h4.fontSize,\n    color: theme.colors.text.secondary,\n  }),\n});\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn?: SplitOpen;\n  exploreId?: string;\n  scrollElement?: Element;\n  scrollElementClass?: string;\n  traceProp: Trace;\n  datasource: DataSourceApi<DataQuery, DataSourceJsonData, {}> | undefined;\n  topOfViewRef?: RefObject<HTMLDivElement>;\n  createSpanLink?: SpanLinkFunc;\n  focusedSpanId?: string;\n  createFocusSpanLink?: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\nexport function TraceView(props: Props) {\n  const {\n    traceProp,\n    datasource,\n    topOfViewRef,\n    exploreId,\n    createSpanLink: createSpanLinkFromProps,\n    focusedSpanId: focusedSpanIdFromProps,\n    createFocusSpanLink: createFocusSpanLinkFromProps,\n  } = props;\n\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailReferenceItemToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState(props.dataFrames[0]);\n\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n  const { search, setSearch, spanFilterMatches } = useSearch(traceProp?.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [showSpanFilters, setShowSpanFilters] = useToggle(false);\n  const [showSpanFilterMatchesOnly, setShowSpanFilterMatchesOnly] = useState(false);\n  const [showCriticalPathSpansOnly, setShowCriticalPathSpansOnly] = useState(false);\n  const [headerHeight, setHeaderHeight] = useState(100);\n  const [traceFlameGraphs, setTraceFlameGraphs] = useState<TraceFlameGraphs>({});\n  const [redrawListView, setRedrawListView] = useState({});\n\n  const styles = useStyles2(getStyles);\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.4);\n\n  const [focusedSpanIdExplore, createFocusSpanLinkExplore] = useFocusSpanLink({\n    refId: props.dataFrames[0]?.refId,\n    exploreId: props.exploreId!,\n    datasource,\n    splitOpenFn: props.splitOpenFn!,\n  });\n\n  const focusedSpanId = focusedSpanIdFromProps ?? focusedSpanIdExplore;\n  const createFocusSpanLink = createFocusSpanLinkFromProps ?? createFocusSpanLinkExplore;\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      spanNameColumnWidth,\n      traceID: props.traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, props.traceProp?.traceID]\n  );\n\n  const instanceSettings = getDatasourceSrv().getInstanceSettings(datasource?.name);\n  const traceToLogsOptions = getTraceToLogsOptions(instanceSettings?.jsonData);\n  const traceToMetrics: TraceToMetricsData | undefined = instanceSettings?.jsonData;\n  const traceToMetricsOptions = traceToMetrics?.tracesToMetrics;\n  const traceToProfilesData: TraceToProfilesData | undefined = instanceSettings?.jsonData;\n  const traceToProfilesOptions = traceToProfilesData?.tracesToProfiles;\n  const spanBarOptions: SpanBarOptionsData | undefined = instanceSettings?.jsonData;\n\n  const createSpanLink = useMemo(\n    () =>\n      createSpanLinkFromProps ??\n      createSpanLinkFactory({\n        splitOpenFn: props.splitOpenFn!,\n        traceToLogsOptions,\n        traceToMetricsOptions,\n        traceToProfilesOptions,\n        dataFrame: props.dataFrames[0],\n        createFocusSpanLink,\n        trace: traceProp,\n      }),\n    [\n      props.splitOpenFn,\n      traceToLogsOptions,\n      traceToMetricsOptions,\n      traceToProfilesOptions,\n      props.dataFrames,\n      createFocusSpanLink,\n      traceProp,\n      createSpanLinkFromProps,\n    ]\n  );\n  const timeZone = useSelector((state) => getTimeZone(state.user));\n  const datasourceType = datasource ? datasource?.type : 'unknown';\n  const scrollElement = props.scrollElement\n    ? props.scrollElement\n    : document.getElementsByClassName(props.scrollElementClass ?? '')[0];\n\n  const criticalPath = memoizedTraceCriticalPath(traceProp);\n\n  return (\n    <>\n      {props.dataFrames?.length && traceProp ? (\n        <>\n          <TracePageHeader\n            trace={traceProp}\n            data={props.dataFrames[0]}\n            timeZone={timeZone}\n            search={search}\n            setSearch={setSearch}\n            showSpanFilters={showSpanFilters}\n            setShowSpanFilters={setShowSpanFilters}\n            showSpanFilterMatchesOnly={showSpanFilterMatchesOnly}\n            setShowSpanFilterMatchesOnly={setShowSpanFilterMatchesOnly}\n            showCriticalPathSpansOnly={showCriticalPathSpansOnly}\n            setShowCriticalPathSpansOnly={setShowCriticalPathSpansOnly}\n            setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n            spanFilterMatches={spanFilterMatches}\n            datasourceType={datasourceType}\n            setHeaderHeight={setHeaderHeight}\n            app={exploreId ? CoreApp.Explore : CoreApp.Unknown}\n          />\n          <SpanGraph\n            trace={traceProp}\n            viewRange={viewRange}\n            updateNextViewRangeTime={updateNextViewRangeTime}\n            updateViewRangeTime={updateViewRangeTime}\n          />\n          <TraceTimelineViewer\n            findMatchesIDs={spanFilterMatches}\n            trace={traceProp}\n            traceToProfilesOptions={traceToProfilesOptions}\n            datasourceType={datasourceType}\n            spanBarOptions={spanBarOptions?.spanBar}\n            traceTimeline={traceTimeline}\n            updateNextViewRangeTime={updateNextViewRangeTime}\n            updateViewRangeTime={updateViewRangeTime}\n            viewRange={viewRange}\n            timeZone={timeZone}\n            setSpanNameColumnWidth={setSpanNameColumnWidth}\n            collapseAll={collapseAll}\n            collapseOne={collapseOne}\n            expandAll={expandAll}\n            expandOne={expandOne}\n            childrenToggle={childrenToggle}\n            detailLogItemToggle={detailLogItemToggle}\n            detailLogsToggle={detailLogsToggle}\n            detailWarningsToggle={detailWarningsToggle}\n            detailStackTracesToggle={detailStackTracesToggle}\n            detailReferencesToggle={detailReferencesToggle}\n            detailReferenceItemToggle={detailReferenceItemToggle}\n            detailProcessToggle={detailProcessToggle}\n            detailTagsToggle={detailTagsToggle}\n            detailToggle={toggleDetail}\n            addHoverIndentGuideId={addHoverIndentGuideId}\n            removeHoverIndentGuideId={removeHoverIndentGuideId}\n            linksGetter={() => []}\n            createSpanLink={createSpanLink}\n            scrollElement={scrollElement}\n            focusedSpanId={focusedSpanId}\n            focusedSpanIdForSearch={focusedSpanIdForSearch}\n            showSpanFilterMatchesOnly={showSpanFilterMatchesOnly}\n            showCriticalPathSpansOnly={showCriticalPathSpansOnly}\n            createFocusSpanLink={createFocusSpanLink}\n            topOfViewRef={topOfViewRef}\n            headerHeight={headerHeight}\n            criticalPath={criticalPath}\n            traceFlameGraphs={traceFlameGraphs}\n            setTraceFlameGraphs={setTraceFlameGraphs}\n            redrawListView={redrawListView}\n            setRedrawListView={setRedrawListView}\n          />\n        </>\n      ) : (\n        <div className={styles.noDataMsg}>No data</div>\n      )}\n    </>\n  );\n}\n\n/**\n * Handles focusing a span. Returns the span id to focus to based on what is in current explore state and also a\n * function to change the focused span id.\n * @param options\n */\nfunction useFocusSpanLink(options: {\n  exploreId: string;\n  splitOpenFn: SplitOpen;\n  refId?: string;\n  datasource?: DataSourceApi;\n}): [string | undefined, (traceId: string, spanId: string) => LinkModel<Field>] {\n  const panelState = useSelector((state) => state.explore.panes[options.exploreId]?.panelsState.trace);\n  const focusedSpanId = panelState?.spanId;\n\n  const dispatch = useDispatch();\n  const setFocusedSpanId = (spanId?: string) =>\n    dispatch(\n      changePanelState(options.exploreId, 'trace', {\n        ...panelState,\n        spanId,\n      })\n    );\n\n  const query = useSelector((state) =>\n    state.explore.panes[options.exploreId]?.queries.find((query) => query.refId === options.refId)\n  );\n\n  const createFocusSpanLink = (traceId: string, spanId: string) => {\n    const link: DataLink = {\n      title: 'Deep link to this span',\n      url: '',\n      internal: {\n        datasourceUid: options.datasource?.uid!,\n        datasourceName: options.datasource?.name!,\n        query: {\n          ...query,\n          query: traceId,\n        },\n        panelsState: {\n          trace: {\n            spanId,\n          },\n        },\n      },\n    };\n\n    // Check if the link is to a different trace or not.\n    // If it's the same trace, only update panel state with setFocusedSpanId (no navigation).\n    // If it's a different trace, use splitOpenFn to open a new explore panel\n    const sameTrace = query?.queryType === 'traceql' && (query as TempoQuery).query === traceId;\n\n    return mapInternalLinkToExplore({\n      link,\n      internalLink: link.internal!,\n      scopedVars: {},\n      field: {} as Field,\n      onClickFn: sameTrace\n        ? () => setFocusedSpanId(focusedSpanId === spanId ? undefined : spanId)\n        : options.splitOpenFn\n          ? () =>\n              options.splitOpenFn({\n                datasourceUid: options.datasource?.uid!,\n                queries: [\n                  {\n                    ...query!,\n                    query: traceId,\n                  },\n                ],\n                panelsState: {\n                  trace: {\n                    spanId,\n                  },\n                },\n              })\n          : undefined,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n  };\n\n  return [focusedSpanId, createFocusSpanLink];\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\n/**\n * Tries to get a dark variant color. Either by simply inverting the luminosity and darkening or lightening the color\n * a bit, or if base is provided, tries 2 variants of lighter and darker colors and checks which is more readable with\n * the base.\n * @param theme\n * @param hex\n * @param base\n */\nexport function autoColor(theme: GrafanaTheme2, hex: string, base?: string) {\n  if (theme.isLight) {\n    return hex;\n  } else {\n    if (base) {\n      const color = tinycolor(hex);\n      return tinycolor\n        .mostReadable(\n          base,\n          [\n            color.clone().lighten(25),\n            color.clone().lighten(10),\n            color,\n            color.clone().darken(10),\n            color.clone().darken(25),\n          ],\n          {\n            includeFallbackColors: false,\n          }\n        )\n        .toHex8String();\n    }\n    const color = tinycolor(hex).toHsl();\n    color.l = 1 - color.l;\n    const newColor = tinycolor(color);\n    return newColor.isLight() ? newColor.darken(5).toHex8String() : newColor.lighten(5).toHex8String();\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nconst keyboardMappings: Record<string, { binding: string | string[]; label: string }> = {\n  scrollPageDown: { binding: 's', label: 'Scroll down' },\n  scrollPageUp: { binding: 'w', label: 'Scroll up' },\n  scrollToNextVisibleSpan: { binding: 'f', label: 'Scroll to the next visible span' },\n  scrollToPrevVisibleSpan: { binding: 'b', label: 'Scroll to the previous visible span' },\n  panLeft: { binding: ['a', 'left'], label: 'Pan left' },\n  panLeftFast: { binding: ['shift+a', 'shift+left'], label: 'Pan left — Large' },\n  panRight: { binding: ['d', 'right'], label: 'Pan right' },\n  panRightFast: { binding: ['shift+d', 'shift+right'], label: 'Pan right — Large' },\n  zoomIn: { binding: 'up', label: 'Zoom in' },\n  zoomInFast: { binding: 'shift+up', label: 'Zoom in — Large' },\n  zoomOut: { binding: 'down', label: 'Zoom out' },\n  zoomOutFast: { binding: 'shift+down', label: 'Zoom out — Large' },\n  collapseAll: { binding: ']', label: 'Collapse All' },\n  expandAll: { binding: '[', label: 'Expand All' },\n  collapseOne: { binding: 'p', label: 'Collapse One Level' },\n  expandOne: { binding: 'o', label: 'Expand One Level' },\n  searchSpans: { binding: 'ctrl+b', label: 'Search Spans' },\n  clearSearch: { binding: 'escape', label: 'Clear Search' },\n};\n\nexport default keyboardMappings;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Combokeys from 'combokeys';\nimport * as React from 'react';\n\nimport keyboardMappings from './keyboard-mappings';\n\nexport type CombokeysHandler =\n  | (() => void)\n  | ((event: React.KeyboardEvent) => void)\n  | ((event: React.KeyboardEvent, s: string) => void);\n\nexport type ShortcutCallbacks = {\n  [name: string]: CombokeysHandler;\n};\n\nlet instance: Combokeys | undefined;\n\nfunction getInstance(): Combokeys {\n  if (instance) {\n    return instance;\n  }\n  const local = new Combokeys(document.body);\n  instance = local;\n  return local;\n}\n\nexport function merge(callbacks: ShortcutCallbacks) {\n  const inst = getInstance();\n  Object.keys(callbacks).forEach((name) => {\n    const keysHandler = callbacks[name];\n    if (keysHandler) {\n      inst.bind(keyboardMappings[name].binding, keysHandler);\n    }\n  });\n}\n\nexport function reset() {\n  const combokeys = getInstance();\n  combokeys.reset();\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceSpan } from '../types';\n\nexport type ViewedBoundsFunctionType = (start: number, end: number) => { start: number; end: number };\n/**\n * Given a range (`min`, `max`) and factoring in a zoom (`viewStart`, `viewEnd`)\n * a function is created that will find the position of a sub-range (`start`, `end`).\n * The calling the generated method will return the result as a `{ start, end }`\n * object with values ranging in [0, 1].\n *\n * @param  {number} min       The start of the outer range.\n * @param  {number} max       The end of the outer range.\n * @param  {number} viewStart The start of the zoom, on a range of [0, 1],\n *                            relative to the `min`, `max`.\n * @param  {number} viewEnd   The end of the zoom, on a range of [0, 1],\n *                            relative to the `min`, `max`.\n * @returns {(number, number) => Object} Created view bounds function\n */\nexport function createViewedBoundsFunc(viewRange: { min: number; max: number; viewStart: number; viewEnd: number }) {\n  const { min, max, viewStart, viewEnd } = viewRange;\n  const duration = max - min;\n  const viewMin = min + viewStart * duration;\n  const viewMax = max - (1 - viewEnd) * duration;\n  const viewWindow = viewMax - viewMin;\n\n  /**\n   * View bounds function\n   * @param  {number} start     The start of the sub-range.\n   * @param  {number} end       The end of the sub-range.\n   * @returns {Object}           The resultant range.\n   */\n  return (start: number, end: number) => ({\n    start: (start - viewMin) / viewWindow,\n    end: (end - viewMin) / viewWindow,\n  });\n}\n\n/**\n * Returns `true` if the `span` has a tag matching `key` = `value`.\n *\n * @param  {string} key         The tag key to match on.\n * @param  {any}    value       The tag value to match.\n * @param  {{tag}} span         An object with a `tag` property of { key, value } items.\n * @returns {boolean}           True if a match was found.\n */\nexport function spanHasTag(key: string, value: unknown, span: TraceSpan) {\n  if (!Array.isArray(span.tags) || !span.tags.length) {\n    return false;\n  }\n  return span.tags.some((tag) => tag.key === key && tag.value === value);\n}\n\nconst isClientOtel = (span: TraceSpan) => span.kind === 'client';\nconst isClient = spanHasTag.bind(null, 'span.kind', 'client');\nexport const isClientSpan = (span: TraceSpan) => isClientOtel(span) || isClient(span);\nconst isServerOtel = (span: TraceSpan) => span.kind === 'server';\nconst isServer = spanHasTag.bind(null, 'span.kind', 'server');\nexport const isServerSpan = (span: TraceSpan) => isServerOtel(span) || isServer(span);\n\nconst isErrorOtel = (span: TraceSpan) => span.statusCode === 2;\nconst isErrorBool = spanHasTag.bind(null, 'error', true);\nconst isErrorStr = spanHasTag.bind(null, 'error', 'true');\nexport const isErrorSpan = (span: TraceSpan) => isErrorOtel(span) || isErrorBool(span) || isErrorStr(span);\n\n/**\n * Returns `true` if at least one of the descendants of the `parentSpanIndex`\n * span contains an error tag.\n *\n * @param      {TraceSpan[]}   spans            The spans for a trace - should be\n *                                         sorted with children following parents.\n * @param      {number}   parentSpanIndex  The index of the parent span - only\n *                                         subsequent spans with depth less than\n *                                         the parent span will be checked.\n * @returns     {boolean}  Returns `true` if a descendant contains an error tag.\n */\nexport function spanContainsErredSpan(spans: TraceSpan[], parentSpanIndex: number) {\n  const { depth } = spans[parentSpanIndex];\n  let i = parentSpanIndex + 1;\n  for (; i < spans.length && spans[i].depth > depth; i++) {\n    if (isErrorSpan(spans[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Expects the first span to be the parent span.\n */\nexport function findServerChildSpan(spans: TraceSpan[]) {\n  if (spans.length <= 1 || !isClientSpan(spans[0])) {\n    return false;\n  }\n  const span = spans[0];\n  const spanChildDepth = span.depth + 1;\n  let i = 1;\n  while (i < spans.length && spans[i].depth === spanChildDepth) {\n    if (isServerSpan(spans[i])) {\n      return spans[i];\n    }\n    i++;\n  }\n  return null;\n}\n\nexport const isKindClient = (span: TraceSpan): Boolean => {\n  if (span.kind) {\n    return span.kind === 'client';\n  }\n  return span.tags.some(({ key, value }) => key === 'span.kind' && value === 'client');\n};\n\nexport { formatDuration } from '../utils/date';\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { TNil } from '../types';\n\nimport { formatDuration } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  Ticks: css({\n    label: 'Ticks',\n    pointerEvents: 'none',\n  }),\n  TicksTick: css({\n    label: 'TicksTick',\n    position: 'absolute',\n    height: '100%',\n    width: '1px',\n    background: autoColor(theme, '#d8d8d8'),\n    '&:last-child': {\n      width: 0,\n    },\n  }),\n  TicksTickLabel: css({\n    label: 'TicksTickLabel',\n    left: '0.25rem',\n    position: 'absolute',\n  }),\n  TicksTickLabelEndAnchor: css({\n    label: 'TicksTickLabelEndAnchor',\n    left: 'initial',\n    right: '0.25rem',\n  }),\n});\n\ntype TicksProps = {\n  endTime?: number | TNil;\n  numTicks: number;\n  showLabels?: boolean | TNil;\n  startTime?: number | TNil;\n};\n\nexport default function Ticks({ endTime = null, numTicks, showLabels = null, startTime = null }: TicksProps) {\n  let labels: undefined | string[];\n  if (showLabels) {\n    labels = [];\n    const viewingDuration = (endTime || 0) - (startTime || 0);\n    for (let i = 0; i < numTicks; i++) {\n      const durationAtTick = (startTime || 0) + (i / (numTicks - 1)) * viewingDuration;\n      labels.push(formatDuration(durationAtTick));\n    }\n  }\n  const styles = useStyles2(getStyles);\n  const ticks: React.ReactNode[] = [];\n  for (let i = 0; i < numTicks; i++) {\n    const portion = i / (numTicks - 1);\n    ticks.push(\n      <div\n        data-testid=\"TicksID\"\n        key={portion}\n        className={styles.TicksTick}\n        style={{\n          left: `${portion * 100}%`,\n        }}\n      >\n        {labels && (\n          <span className={cx(styles.TicksTickLabel, { [styles.TicksTickLabelEndAnchor]: portion >= 1 })}>\n            {labels[i]}\n          </span>\n        )}\n      </div>\n    );\n  }\n  return <div className={styles.Ticks}>{ticks}</div>;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => {\n  return {\n    row: css({\n      display: 'flex',\n      flex: '0 1 auto',\n      flexDirection: 'row',\n    }),\n    rowCell: css({\n      position: 'relative',\n    }),\n  };\n};\n\ntype TTimelineRowProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\ninterface TimelineRowCellProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  className?: string;\n  width: number;\n  style?: {};\n}\n\nexport default function TimelineRow({ children, className = '', ...rest }: TTimelineRowProps) {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.row, className)} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nexport function TimelineRowCell({ children, className = '', width, style = {}, ...rest }: TimelineRowCellProps) {\n  const widthPercent = `${width * 100}%`;\n  const mergedStyle = { ...style, flexBasis: widthPercent, maxWidth: widthPercent };\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.rowCell, className)} style={mergedStyle} data-testid=\"TimelineRowCell\" {...rest}>\n      {children}\n    </div>\n  );\n}\n\nTimelineRow.Cell = TimelineRowCell;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\n\nimport { IconButton, useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  TimelineCollapser: css({\n    alignItems: 'center',\n    display: 'flex',\n    flex: 'none',\n    justifyContent: 'center',\n    marginRight: '0.5rem',\n  }),\n});\n\ntype CollapserProps = {\n  onCollapseAll: () => void;\n  onCollapseOne: () => void;\n  onExpandOne: () => void;\n  onExpandAll: () => void;\n};\n\nexport function TimelineCollapser(props: CollapserProps) {\n  const { onExpandAll, onExpandOne, onCollapseAll, onCollapseOne } = props;\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={styles.TimelineCollapser} data-testid=\"TimelineCollapser\">\n      <IconButton tooltip=\"Expand +1\" size=\"xl\" tooltipPlacement=\"top\" name=\"angle-down\" onClick={onExpandOne} />\n      <IconButton tooltip=\"Collapse +1\" size=\"xl\" tooltipPlacement=\"top\" name=\"angle-right\" onClick={onCollapseOne} />\n      <IconButton\n        tooltip=\"Expand All\"\n        size=\"xl\"\n        tooltipPlacement=\"top\"\n        name=\"angle-double-down\"\n        onClick={onExpandAll}\n      />\n      <IconButton\n        tooltip=\"Collapse All\"\n        size=\"xl\"\n        tooltipPlacement=\"top\"\n        name=\"angle-double-right\"\n        onClick={onCollapseAll}\n      />\n    </div>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { TNil } from '../../types';\nimport DraggableManager, { DraggableBounds, DraggingUpdate } from '../../utils/DraggableManager';\n\nexport const getStyles = () => ({\n  TimelineColumnResizer: css({\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  }),\n  wrapper: css({\n    bottom: 0,\n    position: 'absolute',\n    top: 0,\n  }),\n  dragger: css({\n    borderLeft: '2px solid transparent',\n    cursor: 'col-resize',\n    height: '5000px',\n    marginLeft: '-1px',\n    position: 'absolute',\n    top: 0,\n    width: '1px',\n    zIndex: 10,\n    '&:hover': {\n      borderLeft: '2px solid rgba(0, 0, 0, 0.3)',\n    },\n    '&::before': {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: '-8px',\n      right: 0,\n      content: '\" \"',\n    },\n  }),\n  draggerDragging: css({\n    background: 'rgba(136, 0, 136, 0.05)',\n    width: 'unset',\n    '&::before': {\n      left: -2000,\n      right: -2000,\n    },\n  }),\n  draggerDraggingLeft: css({\n    borderLeft: '2px solid #808',\n    borderRight: '1px solid #999',\n  }),\n  draggerDraggingRight: css({\n    borderLeft: '1px solid #999',\n    borderRight: '2px solid #808',\n  }),\n  gripIcon: css({\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    '&::before, &::after': {\n      borderRight: '1px solid #ccc',\n      content: '\" \"',\n      height: '9px',\n      position: 'absolute',\n      right: '9px',\n      top: '25px',\n    },\n    '&::after': {\n      right: '5px',\n    },\n  }),\n  gripIconDragging: css({\n    '&::before, &::after': {\n      borderRight: '1px solid rgba(136, 0, 136, 0.5)',\n    },\n  }),\n});\n\nexport type TimelineColumnResizerProps = {\n  min: number;\n  max: number;\n  onChange: (newSize: number) => void;\n  position: number;\n  columnResizeHandleHeight: number;\n};\n\ntype TimelineColumnResizerState = {\n  dragPosition: number | TNil;\n};\n\nexport default class TimelineColumnResizer extends React.PureComponent<\n  TimelineColumnResizerProps,\n  TimelineColumnResizerState\n> {\n  state: TimelineColumnResizerState;\n\n  _dragManager: DraggableManager;\n  _rootElm: Element | TNil;\n\n  constructor(props: TimelineColumnResizerProps) {\n    super(props);\n    this._dragManager = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleDragEnd,\n      onDragMove: this._handleDragUpdate,\n      onDragStart: this._handleDragUpdate,\n    });\n    this._rootElm = undefined;\n    this.state = {\n      dragPosition: null,\n    };\n  }\n\n  componentWillUnmount() {\n    this._dragManager.dispose();\n  }\n\n  _setRootElm = (elm: Element | TNil) => {\n    this._rootElm = elm;\n  };\n\n  _getDraggingBounds = (): DraggableBounds => {\n    if (!this._rootElm) {\n      throw new Error('invalid state');\n    }\n    const { left: clientXLeft, width } = this._rootElm.getBoundingClientRect();\n    const { min, max } = this.props;\n    return {\n      clientXLeft,\n      width,\n      maxValue: max,\n      minValue: min,\n    };\n  };\n\n  _handleDragUpdate = ({ value }: DraggingUpdate) => {\n    this.setState({ dragPosition: value });\n  };\n\n  _handleDragEnd = ({ manager, value }: DraggingUpdate) => {\n    manager.resetBounds();\n    this.setState({ dragPosition: null });\n    this.props.onChange(value);\n  };\n\n  render() {\n    let left;\n    let draggerStyle: React.CSSProperties;\n    const { position, columnResizeHandleHeight } = this.props;\n    const { dragPosition } = this.state;\n    left = `${position * 100}%`;\n    const gripStyle = { left };\n    let isDraggingLeft = false;\n    let isDraggingRight = false;\n    const styles = getStyles();\n\n    if (this._dragManager.isDragging() && this._rootElm && dragPosition != null) {\n      isDraggingLeft = dragPosition < position;\n      isDraggingRight = dragPosition > position;\n      // Draw a highlight from the current dragged position back to the original\n      // position, e.g. highlight the change. Draw the highlight via `left` and\n      // `right` css styles (simpler than using `width`).\n      const draggerLeft = `${Math.min(position, dragPosition) * 100}%`;\n      // subtract 1px for draggerRight to deal with the right border being off\n      // by 1px when dragging left\n      const draggerRight = `calc(${(1 - Math.max(position, dragPosition)) * 100}% - 1px)`;\n      draggerStyle = { left: draggerLeft, right: draggerRight };\n    } else {\n      draggerStyle = gripStyle;\n    }\n    draggerStyle.height = columnResizeHandleHeight;\n\n    const isDragging = isDraggingLeft || isDraggingRight;\n    return (\n      <div className={styles.TimelineColumnResizer} ref={this._setRootElm} data-testid=\"TimelineColumnResizer\">\n        <div\n          className={cx(styles.gripIcon, isDragging && styles.gripIconDragging)}\n          style={gripStyle}\n          data-testid=\"TimelineColumnResizer--gripIcon\"\n        />\n        <div\n          aria-hidden\n          className={cx(\n            styles.dragger,\n            isDragging && styles.draggerDragging,\n            isDraggingRight && styles.draggerDraggingRight,\n            isDraggingLeft && styles.draggerDraggingLeft\n          )}\n          onMouseDown={this._dragManager.handleMouseDown}\n          style={draggerStyle}\n          data-testid=\"TimelineColumnResizer--dragger\"\n        />\n      </div>\n    );\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { stylesFactory } from '@grafana/ui';\n\nimport { TNil } from '../../types';\nimport DraggableManager, { DraggableBounds, DraggingUpdate } from '../../utils/DraggableManager';\nimport { TUpdateViewRangeTimeFunction, ViewRangeTime, ViewRangeTimeUpdate } from '../types';\n\n// exported for testing\nexport const getStyles = stylesFactory(() => {\n  return {\n    TimelineViewingLayer: css({\n      label: 'TimelineViewingLayer',\n      bottom: 0,\n      cursor: 'vertical-text',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n    }),\n    TimelineViewingLayerCursorGuide: css({\n      label: 'TimelineViewingLayerCursorGuide',\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      width: '1px',\n      backgroundColor: 'red',\n    }),\n    TimelineViewingLayerDragged: css({\n      label: 'TimelineViewingLayerDragged',\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n    }),\n    TimelineViewingLayerDraggedDraggingLeft: css({\n      label: 'TimelineViewingLayerDraggedDraggingLeft',\n      borderLeft: '1px solid',\n    }),\n    TimelineViewingLayerDraggedDraggingRight: css({\n      label: 'TimelineViewingLayerDraggedDraggingRight',\n      borderRight: '1px solid',\n    }),\n    TimelineViewingLayerDraggedShiftDrag: css({\n      label: 'TimelineViewingLayerDraggedShiftDrag',\n      backgroundColor: 'rgba(68, 68, 255, 0.2)',\n      borderColor: '#44f',\n    }),\n    TimelineViewingLayerDraggedReframeDrag: css({\n      label: 'TimelineViewingLayerDraggedReframeDrag',\n      backgroundColor: 'rgba(255, 68, 68, 0.2)',\n      borderColor: '#f44',\n    }),\n    TimelineViewingLayerFullOverlay: css({\n      label: 'TimelineViewingLayerFullOverlay',\n      bottom: 0,\n      cursor: 'col-resize',\n      left: 0,\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      userSelect: 'none',\n    }),\n  };\n});\n\nexport type TimelineViewingLayerProps = {\n  /**\n   * `boundsInvalidator` is an arbitrary prop that lets the component know the\n   * bounds for dragging need to be recalculated. In practice, the name column\n   * width serves fine for this.\n   */\n  boundsInvalidator: number | null | undefined;\n  updateNextViewRangeTime: (update: ViewRangeTimeUpdate) => void;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  viewRangeTime: ViewRangeTime;\n};\n\ntype TDraggingLeftLayout = {\n  isDraggingLeft: boolean;\n  left: string;\n  width: string;\n};\n\ntype TOutOfViewLayout = {\n  isOutOfView: true;\n};\n\nfunction isOutOfView(layout: TDraggingLeftLayout | TOutOfViewLayout): layout is TOutOfViewLayout {\n  return Reflect.has(layout, 'isOutOfView');\n}\n\n/**\n * Map from a sub range to the greater view range, e.g, when the view range is\n * the middle half ([0.25, 0.75]), a value of 0.25 befomes 3/8.\n * @returns {number}\n */\nfunction mapFromViewSubRange(viewStart: number, viewEnd: number, value: number) {\n  return viewStart + value * (viewEnd - viewStart);\n}\n\n/**\n * Map a value from the view ([0, 1]) to a sub-range, e.g, when the view range is\n * the middle half ([0.25, 0.75]), a value of 3/8 becomes 1/4.\n * @returns {number}\n */\nfunction mapToViewSubRange(viewStart: number, viewEnd: number, value: number) {\n  return (value - viewStart) / (viewEnd - viewStart);\n}\n\n/**\n * Get the layout for the \"next\" view range time, e.g. the difference from the\n * drag start and the drag end. This is driven by `shiftStart`, `shiftEnd` or\n * `reframe` on `props.viewRangeTime`, not by the current state of the\n * component. So, it reflects in-progress dragging from the span minimap.\n */\nfunction getNextViewLayout(start: number, position: number): TDraggingLeftLayout | TOutOfViewLayout {\n  let [left, right] = start < position ? [start, position] : [position, start];\n  if (left >= 1 || right <= 0) {\n    return { isOutOfView: true };\n  }\n  if (left < 0) {\n    left = 0;\n  }\n  if (right > 1) {\n    right = 1;\n  }\n  return {\n    isDraggingLeft: start > position,\n    left: `${left * 100}%`,\n    width: `${(right - left) * 100}%`,\n  };\n}\n\n/**\n * Render the visual indication of the \"next\" view range.\n */\nfunction getMarkers(viewStart: number, viewEnd: number, from: number, to: number, isShift: boolean): React.ReactNode {\n  const mappedFrom = mapToViewSubRange(viewStart, viewEnd, from);\n  const mappedTo = mapToViewSubRange(viewStart, viewEnd, to);\n  const layout = getNextViewLayout(mappedFrom, mappedTo);\n  if (isOutOfView(layout)) {\n    return null;\n  }\n  const { isDraggingLeft, left, width } = layout;\n  const styles = getStyles();\n  const cls = cx({\n    [styles.TimelineViewingLayerDraggedDraggingRight]: !isDraggingLeft,\n    [styles.TimelineViewingLayerDraggedReframeDrag]: !isShift,\n    [styles.TimelineViewingLayerDraggedShiftDrag]: isShift,\n  });\n  return (\n    <div\n      className={cx(styles.TimelineViewingLayerDragged, styles.TimelineViewingLayerDraggedDraggingLeft, cls)}\n      style={{ left, width }}\n      data-testid=\"Dragged\"\n    />\n  );\n}\n\n/**\n * `TimelineViewingLayer` is rendered on top of the TimelineHeaderRow time\n * labels; it handles showing the current view range and handles mouse UX for\n * modifying it.\n */\nexport default class TimelineViewingLayer extends React.PureComponent<TimelineViewingLayerProps> {\n  _draggerReframe: DraggableManager;\n  _root: Element | TNil;\n\n  constructor(props: TimelineViewingLayerProps) {\n    super(props);\n    this._draggerReframe = new DraggableManager({\n      getBounds: this._getDraggingBounds,\n      onDragEnd: this._handleReframeDragEnd,\n      onDragMove: this._handleReframeDragUpdate,\n      onDragStart: this._handleReframeDragUpdate,\n      onMouseLeave: this._handleReframeMouseLeave,\n      onMouseMove: this._handleReframeMouseMove,\n    });\n    this._root = undefined;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: TimelineViewingLayerProps) {\n    const { boundsInvalidator } = this.props;\n    if (boundsInvalidator !== nextProps.boundsInvalidator) {\n      this._draggerReframe.resetBounds();\n    }\n  }\n\n  componentWillUnmount() {\n    this._draggerReframe.dispose();\n  }\n\n  _setRoot = (elm: Element | TNil) => {\n    this._root = elm;\n  };\n\n  _getDraggingBounds = (): DraggableBounds => {\n    if (!this._root) {\n      throw new Error('invalid state');\n    }\n    const { left: clientXLeft, width } = this._root.getBoundingClientRect();\n    return { clientXLeft, width };\n  };\n\n  _handleReframeMouseMove = ({ value }: DraggingUpdate) => {\n    const [viewStart, viewEnd] = this.props.viewRangeTime.current;\n    const cursor = mapFromViewSubRange(viewStart, viewEnd, value);\n    this.props.updateNextViewRangeTime({ cursor });\n  };\n\n  _handleReframeMouseLeave = () => {\n    this.props.updateNextViewRangeTime({ cursor: undefined });\n  };\n\n  _handleReframeDragUpdate = ({ value }: DraggingUpdate) => {\n    const { current, reframe } = this.props.viewRangeTime;\n    const [viewStart, viewEnd] = current;\n    const shift = mapFromViewSubRange(viewStart, viewEnd, value);\n    const anchor = reframe ? reframe.anchor : shift;\n    const update = { reframe: { anchor, shift } };\n    this.props.updateNextViewRangeTime(update);\n  };\n\n  _handleReframeDragEnd = ({ manager, value }: DraggingUpdate) => {\n    const { current, reframe } = this.props.viewRangeTime;\n    const [viewStart, viewEnd] = current;\n    const shift = mapFromViewSubRange(viewStart, viewEnd, value);\n    const anchor = reframe ? reframe.anchor : shift;\n    const [start, end] = shift < anchor ? [shift, anchor] : [anchor, shift];\n    manager.resetBounds();\n    this.props.updateViewRangeTime(start, end, 'timeline-header');\n  };\n\n  render() {\n    const { viewRangeTime } = this.props;\n    const { current, cursor, reframe, shiftEnd, shiftStart } = viewRangeTime;\n    const [viewStart, viewEnd] = current;\n    const haveNextTimeRange = reframe != null || shiftEnd != null || shiftStart != null;\n    let cusrorPosition: string | TNil;\n    if (!haveNextTimeRange && cursor != null && cursor >= viewStart && cursor <= viewEnd) {\n      cusrorPosition = `${mapToViewSubRange(viewStart, viewEnd, cursor) * 100}%`;\n    }\n    const styles = getStyles();\n    return (\n      <div\n        aria-hidden\n        className={styles.TimelineViewingLayer}\n        ref={this._setRoot}\n        onMouseDown={this._draggerReframe.handleMouseDown}\n        onMouseLeave={this._draggerReframe.handleMouseLeave}\n        onMouseMove={this._draggerReframe.handleMouseMove}\n        data-testid=\"TimelineViewingLayer\"\n      >\n        {cusrorPosition != null && (\n          <div\n            className={styles.TimelineViewingLayerCursorGuide}\n            style={{ left: cusrorPosition }}\n            data-testid=\"TimelineViewingLayer--cursorGuide\"\n          />\n        )}\n        {reframe != null && getMarkers(viewStart, viewEnd, reframe.anchor, reframe.shift, false)}\n        {shiftEnd != null && getMarkers(viewStart, viewEnd, viewEnd, shiftEnd, true)}\n        {shiftStart != null && getMarkers(viewStart, viewEnd, viewStart, shiftStart, true)}\n      </div>\n    );\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport Ticks from '../Ticks';\nimport TimelineRow from '../TimelineRow';\nimport { TUpdateViewRangeTimeFunction, ViewRangeTime, ViewRangeTimeUpdate } from '../types';\n\nimport { TimelineCollapser } from './TimelineCollapser';\nimport TimelineColumnResizer from './TimelineColumnResizer';\nimport TimelineViewingLayer from './TimelineViewingLayer';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TimelineHeaderRow: css({\n      label: 'TimelineHeaderRow',\n      background: autoColor(theme, '#ececec'),\n      borderBottom: `1px solid ${autoColor(theme, '#ccc')}`,\n      height: '38px',\n      lineHeight: '38px',\n      width: '100%',\n      zIndex: 4,\n      position: 'relative',\n    }),\n    TimelineHeaderRowTitle: css({\n      label: 'TimelineHeaderRowTitle',\n      flex: 1,\n      overflow: 'hidden',\n      margin: 0,\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n    }),\n    TimelineHeaderWrapper: css({\n      label: 'TimelineHeaderWrapper',\n      alignItems: 'center',\n      display: 'flex',\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    }),\n  };\n};\n\nexport type TimelineHeaderRowProps = {\n  duration: number;\n  nameColumnWidth: number;\n  numTicks: number;\n  onCollapseAll: () => void;\n  onCollapseOne: () => void;\n  onColummWidthChange: (width: number) => void;\n  onExpandAll: () => void;\n  onExpandOne: () => void;\n  updateNextViewRangeTime: (update: ViewRangeTimeUpdate) => void;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  viewRangeTime: ViewRangeTime;\n  columnResizeHandleHeight: number;\n};\n\nexport default function TimelineHeaderRow(props: TimelineHeaderRowProps) {\n  const {\n    duration,\n    nameColumnWidth,\n    numTicks,\n    onCollapseAll,\n    onCollapseOne,\n    onColummWidthChange,\n    onExpandAll,\n    onExpandOne,\n    updateViewRangeTime,\n    updateNextViewRangeTime,\n    viewRangeTime,\n    columnResizeHandleHeight,\n  } = props;\n  const [viewStart, viewEnd] = viewRangeTime.current;\n  const styles = useStyles2(getStyles);\n  return (\n    <TimelineRow className={styles.TimelineHeaderRow} data-testid=\"TimelineHeaderRow\">\n      <TimelineRow.Cell className={styles.TimelineHeaderWrapper} width={nameColumnWidth}>\n        <h4 className={styles.TimelineHeaderRowTitle}>Service &amp; Operation</h4>\n        <TimelineCollapser\n          onCollapseAll={onCollapseAll}\n          onExpandAll={onExpandAll}\n          onCollapseOne={onCollapseOne}\n          onExpandOne={onExpandOne}\n        />\n      </TimelineRow.Cell>\n      <TimelineRow.Cell width={1 - nameColumnWidth}>\n        <TimelineViewingLayer\n          boundsInvalidator={nameColumnWidth}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRangeTime={viewRangeTime}\n        />\n        <Ticks numTicks={numTicks} startTime={viewStart * duration} endTime={viewEnd * duration} showLabels />\n      </TimelineRow.Cell>\n      <TimelineColumnResizer\n        columnResizeHandleHeight={columnResizeHandleHeight}\n        position={nameColumnWidth}\n        onChange={onColummWidthChange}\n        min={0.2}\n        max={0.85}\n      />\n    </TimelineRow>\n  );\n}\n","// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const PEER_SERVICE = 'peer.service';\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ntype THeightGetter = (index: number) => number;\n\n/**\n * Keeps track of the height and y-position for anything sequenctial where\n * y-positions follow one-after-another and can be derived from the height of\n * the prior entries. The height is known from an accessor function parameter\n * to the methods that require new knowledge the heights.\n *\n * @export\n * @class Positions\n */\nexport default class Positions {\n  /**\n   * Indicates how far past the explicitly required height or y-values should\n   * checked.\n   */\n  bufferLen: number;\n  dataLen: number;\n  heights: number[];\n  /**\n   * `lastI` keeps track of which values have already been visited. In many\n   * scenarios, values do not need to be revisited. But, revisiting is required\n   * when heights have changed, so `lastI` can be forced.\n   */\n  lastI: number;\n  ys: number[];\n\n  constructor(bufferLen: number) {\n    this.ys = [];\n    this.heights = [];\n    this.bufferLen = bufferLen;\n    this.dataLen = -1;\n    this.lastI = -1;\n  }\n\n  /**\n   * Used to make sure the length of y-values and heights is consistent with\n   * the context; in particular `lastI` needs to remain valid.\n   */\n  profileData(dataLength: number) {\n    if (dataLength !== this.dataLen) {\n      this.dataLen = dataLength;\n      this.ys.length = dataLength;\n      this.heights.length = dataLength;\n      if (this.lastI >= dataLength) {\n        this.lastI = dataLength - 1;\n      }\n    }\n  }\n\n  /**\n   * Calculate and save the heights and y-values, based on `heightGetter`, from\n   * `lastI` until the`max` index; the starting point (`lastI`) can be forced\n   * via the `forcedLastI` parameter.\n   * @param {number=} forcedLastI\n   */\n  calcHeights(max: number, heightGetter: THeightGetter, forcedLastI?: number) {\n    if (forcedLastI != null) {\n      this.lastI = forcedLastI;\n    }\n    let _max = max + this.bufferLen;\n    if (_max <= this.lastI) {\n      return;\n    }\n    if (_max >= this.heights.length) {\n      _max = this.heights.length - 1;\n    }\n    let i = this.lastI;\n    if (this.lastI === -1) {\n      i = 0;\n      this.ys[0] = 0;\n    }\n    while (i <= _max) {\n      // eslint-disable-next-line no-multi-assign\n      const h = (this.heights[i] = heightGetter(i));\n      this.ys[i + 1] = this.ys[i] + h;\n      i++;\n    }\n    this.lastI = _max;\n  }\n\n  /**\n   * Verify the height and y-values from `lastI` up to `yValue`.\n   */\n  calcYs(yValue: number, heightGetter: THeightGetter) {\n    while ((this.ys[this.lastI] == null || yValue > this.ys[this.lastI]) && this.lastI < this.dataLen - 1) {\n      this.calcHeights(this.lastI, heightGetter);\n    }\n  }\n\n  /**\n   * Get the latest height for index `_i`. If it's in new terretory\n   * (_i > lastI), find the heights (and y-values) leading up to it. If it's in\n   * known territory (_i <= lastI) and the height is different than what is\n   * known, recalculate subsequent y values, but don't confirm the heights of\n   * those items, just update based on the difference.\n   */\n  confirmHeight(_i: number, heightGetter: THeightGetter) {\n    let i = _i;\n    if (i > this.lastI) {\n      this.calcHeights(i, heightGetter);\n      return;\n    }\n    const h = heightGetter(i);\n    if (h === this.heights[i]) {\n      return;\n    }\n    const chg = h - this.heights[i];\n    this.heights[i] = h;\n    // shift the y positions by `chg` for all known y positions\n    while (++i <= this.lastI) {\n      this.ys[i] += chg;\n    }\n    if (this.ys[this.lastI + 1] != null) {\n      this.ys[this.lastI + 1] += chg;\n    }\n  }\n\n  /**\n   * Given a target y-value (`yValue`), find the closest index (in the `.ys`\n   * array) that is prior to the y-value; e.g. map from y-value to index in\n   * `.ys`.\n   */\n  findFloorIndex(yValue: number, heightGetter: THeightGetter): number {\n    this.calcYs(yValue, heightGetter);\n\n    let imin = 0;\n    let imax = this.lastI;\n\n    if (this.ys.length < 2 || yValue < this.ys[1]) {\n      return 0;\n    }\n    if (yValue > this.ys[imax]) {\n      return imax;\n    }\n    let i;\n    while (imin < imax) {\n      // eslint-disable-next-line no-bitwise\n      i = (imin + 0.5 * (imax - imin)) | 0;\n      if (yValue > this.ys[i]) {\n        if (yValue <= this.ys[i + 1]) {\n          return i;\n        }\n        imin = i;\n      } else if (yValue < this.ys[i]) {\n        if (yValue >= this.ys[i - 1]) {\n          return i - 1;\n        }\n        imax = i;\n      } else {\n        return i;\n      }\n    }\n    throw new Error(`unable to find floor index for y=${yValue}`);\n  }\n\n  /**\n   * Get the `y` and `height` for a given row.\n   *\n   * @returns {{ height: number, y: number }}\n   */\n  getRowPosition(index: number, heightGetter: THeightGetter) {\n    this.confirmHeight(index, heightGetter);\n    return {\n      height: this.heights[index],\n      y: this.ys[index],\n    };\n  }\n\n  /**\n   * Get the estimated height of the whole shebang by extrapolating based on\n   * the average known height.\n   */\n  getEstimatedHeight(): number {\n    const known = this.ys[this.lastI] + this.heights[this.lastI];\n    if (this.lastI >= this.dataLen - 1) {\n      // eslint-disable-next-line no-bitwise\n      return known | 0;\n    }\n    // eslint-disable-next-line no-bitwise\n    return ((known / (this.lastI + 1)) * this.heights.length) | 0;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as React from 'react';\n\nimport { TNil } from '../../types';\n\nimport Positions from './Positions';\n\ntype TWrapperProps = {\n  style: React.CSSProperties;\n  ref: (elm: HTMLDivElement) => void;\n  onScroll?: () => void;\n};\n\n/**\n * @typedef\n */\nexport type TListViewProps = {\n  /**\n   * Number of elements in the list.\n   */\n  dataLength: number;\n  /**\n   * Convert item index (number) to the key (string). ListView uses both indexes\n   * and keys to handle the addition of new rows.\n   */\n  getIndexFromKey: (key: string) => number;\n  /**\n   * Convert item key (string) to the index (number). ListView uses both indexes\n   * and keys to handle the addition of new rows.\n   */\n  getKeyFromIndex: (index: number) => string;\n  /**\n   * Number of items to draw and add to the DOM, initially.\n   */\n  initialDraw?: number;\n  /**\n   * Trigger a redraw of the list view.\n   */\n  redraw: {};\n  /**\n   * The parent provides fallback height measurements when there is not a\n   * rendered element to measure.\n   */\n  itemHeightGetter: (index: number, key: string) => number;\n  /**\n   * Function that renders an item; rendered items are added directly to the\n   * DOM, they are not wrapped in list item wrapper HTMLElement.\n   */\n  // itemRenderer(itemKey, style, i, attrs)\n  itemRenderer: (\n    itemKey: string,\n    style: Record<string, string | number>,\n    index: number,\n    attributes: Record<string, string>\n  ) => React.ReactNode;\n  /**\n   * `className` for the HTMLElement that holds the items.\n   */\n  itemsWrapperClassName?: string;\n  /**\n   * When adding new items to the DOM, this is the number of items to add above\n   * and below the current view. E.g. if list is 100 items and is scrolled\n   * halfway down (so items [46, 55] are in view), then when a new range of\n   * items is rendered, it will render items `46 - viewBuffer` to\n   * `55 + viewBuffer`.\n   */\n  viewBuffer: number;\n  /**\n   * The minimum number of items offscreen in either direction; e.g. at least\n   * `viewBuffer` number of items must be off screen above and below the\n   * current view, or more items will be rendered.\n   */\n  viewBufferMin: number;\n  /**\n   * When `true`, expect `_wrapperElm` to have `overflow: visible` and to,\n   * essentially, be tall to the point the entire page will will end up\n   * scrolling as a result of the ListView. Similar to react-virtualized\n   * window scroller.\n   *\n   * - Ref: https://bvaughn.github.io/react-virtualized/#/components/WindowScroller\n   * - Ref:https://github.com/bvaughn/react-virtualized/blob/497e2a1942529560681d65a9ef9f5e9c9c9a49ba/docs/WindowScroller.md\n   */\n  windowScroller?: boolean;\n  /**\n   * You need to pass in scrollElement when windowScroller is set to false.\n   * This element is responsible for tracking scrolling for lazy loading.\n   */\n  scrollElement?: Element;\n};\n\nconst DEFAULT_INITIAL_DRAW = 100;\n\n/**\n * Virtualized list view component, for the most part, only renders the window\n * of items that are in-view with some buffer before and after. Listens for\n * scroll events and updates which items are rendered. See react-virtualized\n * for a suite of components with similar, but generalized, functionality.\n * https://github.com/bvaughn/react-virtualized\n *\n * Note: Presently, ListView cannot be a PureComponent. This is because ListView\n * is sensitive to the underlying state that drives the list items, but it\n * doesn't actually receive that state. So, a render may still be required even\n * if ListView's props are unchanged.\n *\n * @export\n * @class ListView\n */\nexport default class ListView extends React.Component<TListViewProps> {\n  /**\n   * Keeps track of the height and y-value of items, by item index, in the\n   * ListView.\n   */\n  _yPositions: Positions;\n  /**\n   * Keep track of the known / measured heights of the rendered items; populated\n   * with values through observation and keyed on the item key, not the item\n   * index.\n   */\n  _knownHeights: Map<string, number>;\n  /**\n   * The start index of the items currently drawn.\n   */\n  _startIndexDrawn: number;\n  /**\n   * The end index of the items currently drawn.\n   */\n  _endIndexDrawn: number;\n  /**\n   * The start index of the items currently in view.\n   */\n  _startIndex: number;\n  /**\n   * The end index of the items currently in view.\n   */\n  _endIndex: number;\n  /**\n   * Height of the visual window, e.g. height of the scroller element.\n   */\n  _viewHeight: number;\n  /**\n   * `scrollTop` of the current scroll position.\n   */\n  _scrollTop: number;\n  /**\n   * Used to keep track of whether or not a re-calculation of what should be\n   * drawn / viewable has been scheduled.\n   */\n  _isScrolledOrResized: boolean;\n  /**\n   * If `windowScroller` is true, this notes how far down the page the scroller\n   * is located. (Note: repositioning and below-the-fold views are untested)\n   */\n  _htmlTopOffset: number;\n  _windowScrollListenerAdded: boolean;\n  _htmlElm: HTMLElement;\n  /**\n   * Element holding the scroller.\n   */\n  _wrapperElm: Element | TNil;\n  /**\n   * HTMLElement holding the rendered items.\n   */\n  _itemHolderElm: HTMLElement | TNil;\n\n  static defaultProps = {\n    initialDraw: DEFAULT_INITIAL_DRAW,\n    itemsWrapperClassName: '',\n    windowScroller: false,\n  };\n\n  constructor(props: TListViewProps) {\n    super(props);\n\n    this._yPositions = new Positions(200);\n    // _knownHeights is (item-key -> observed height) of list items\n    this._knownHeights = new Map();\n\n    this._startIndexDrawn = 2 ** 20;\n    this._endIndexDrawn = -(2 ** 20);\n    this._startIndex = 0;\n    this._endIndex = 0;\n    this._viewHeight = -1;\n    this._scrollTop = -1;\n    this._isScrolledOrResized = false;\n\n    this._htmlTopOffset = -1;\n    this._windowScrollListenerAdded = false;\n    // _htmlElm is only relevant if props.windowScroller is true\n    this._htmlElm = document.documentElement;\n    this._wrapperElm = undefined;\n    this._itemHolderElm = undefined;\n  }\n\n  componentDidMount() {\n    if (this.props.windowScroller) {\n      if (this._wrapperElm) {\n        const { top } = this._wrapperElm.getBoundingClientRect();\n        this._htmlTopOffset = top + this._htmlElm.scrollTop;\n      }\n      window.addEventListener('scroll', this._onScroll);\n      this._windowScrollListenerAdded = true;\n    } else {\n      // The wrapper element should be the one that handles the scrolling. Once we are not using scroll-canvas we can remove this.\n      this._wrapperElm = this.props.scrollElement;\n      this._wrapperElm?.addEventListener('scroll', this._onScroll);\n    }\n  }\n\n  componentDidUpdate(prevProps: TListViewProps) {\n    if (this._itemHolderElm) {\n      this._scanItemHeights();\n    }\n    // When windowScroller is set to false, we can continue to handle scrollElement\n    if (this.props.windowScroller) {\n      return;\n    }\n    // check if the scrollElement changes and update its scroll listener\n    if (prevProps.scrollElement !== this.props.scrollElement) {\n      prevProps.scrollElement?.removeEventListener('scroll', this._onScroll);\n      this._wrapperElm = this.props.scrollElement;\n      this._wrapperElm?.addEventListener('scroll', this._onScroll);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._windowScrollListenerAdded) {\n      window.removeEventListener('scroll', this._onScroll);\n    } else {\n      this._wrapperElm?.removeEventListener('scroll', this._onScroll);\n    }\n  }\n\n  getViewHeight = () => this._viewHeight;\n\n  /**\n   * Get the index of the item at the bottom of the current view.\n   */\n  getBottomVisibleIndex = (): number => {\n    const bottomY = this._scrollTop + this._viewHeight;\n    return this._yPositions.findFloorIndex(bottomY, this._getHeight);\n  };\n\n  /**\n   * Get the index of the item at the top of the current view.\n   */\n  getTopVisibleIndex = (): number => this._yPositions.findFloorIndex(this._scrollTop, this._getHeight);\n\n  getRowPosition = (index: number): { height: number; y: number } =>\n    this._yPositions.getRowPosition(index, this._getHeight);\n\n  scrollToIndex = (index: number, headerHeight: number) => {\n    // calculate the position of the list view relative to the scroll parent\n    const { scrollElement } = this.props;\n    const scrollElementTop = scrollElement?.getBoundingClientRect().top || 0;\n    const listViewTop = (scrollElement?.scrollTop || 0) + (this._itemHolderElm?.getBoundingClientRect().top || 0);\n    const listViewOffset = listViewTop - scrollElementTop;\n\n    const itemOffset = this.getRowPosition(index).y;\n\n    // hard code a small offset to leave a little bit of space above the focused span, so it is visually clear\n    // that there is content above\n    this.props.scrollElement?.scrollTo({ top: itemOffset + listViewOffset - headerHeight - 80 });\n  };\n\n  /**\n   * Scroll event listener that schedules a remeasuring of which items should be\n   * rendered.\n   */\n  _onScroll = () => {\n    if (!this._isScrolledOrResized) {\n      this._isScrolledOrResized = true;\n      window.requestAnimationFrame(this._positionList);\n    }\n  };\n\n  /**\n   * Returns true is the view height (scroll window) or scroll position have\n   * changed.\n   */\n  _isViewChanged() {\n    if (!this._wrapperElm) {\n      return false;\n    }\n    const useRoot = this.props.windowScroller;\n    const clientHeight = useRoot ? this._htmlElm.clientHeight : this._wrapperElm.clientHeight;\n    const scrollTop = useRoot ? this._htmlElm.scrollTop : this._wrapperElm.scrollTop;\n    return clientHeight !== this._viewHeight || scrollTop !== this._scrollTop;\n  }\n\n  /**\n   * Recalculate _startIndex and _endIndex, e.g. which items are in view.\n   */\n  _calcViewIndexes() {\n    const useRoot = this.props.windowScroller;\n    // funky if statement is to satisfy flow\n    if (!useRoot) {\n      /* istanbul ignore next */\n      if (!this._wrapperElm) {\n        this._viewHeight = -1;\n        this._startIndex = 0;\n        this._endIndex = 0;\n        return;\n      }\n      this._viewHeight = this._wrapperElm.clientHeight;\n      this._scrollTop = this._wrapperElm.scrollTop;\n    } else {\n      this._viewHeight = window.innerHeight - this._htmlTopOffset;\n      this._scrollTop = window.scrollY;\n    }\n    const yStart = this._scrollTop;\n    const yEnd = this._scrollTop + this._viewHeight;\n    this._startIndex = this._yPositions.findFloorIndex(yStart, this._getHeight);\n    this._endIndex = this._yPositions.findFloorIndex(yEnd, this._getHeight);\n  }\n\n  /**\n   * Checked to see if the currently rendered items are sufficient, if not,\n   * force an update to trigger more items to be rendered.\n   */\n  _positionList = () => {\n    this._isScrolledOrResized = false;\n    if (!this._wrapperElm) {\n      return;\n    }\n    this._calcViewIndexes();\n    // indexes drawn should be padded by at least props.viewBufferMin\n    const maxStart = this.props.viewBufferMin > this._startIndex ? 0 : this._startIndex - this.props.viewBufferMin;\n    const minEnd =\n      this.props.viewBufferMin < this.props.dataLength - this._endIndex\n        ? this._endIndex + this.props.viewBufferMin\n        : this.props.dataLength - 1;\n    if (maxStart < this._startIndexDrawn || minEnd > this._endIndexDrawn) {\n      this.forceUpdate();\n    }\n  };\n\n  _initWrapper = (elm: HTMLElement | TNil) => {\n    if (!this.props.windowScroller) {\n      return;\n    }\n    this._wrapperElm = elm;\n    if (elm) {\n      this._viewHeight = elm.clientHeight;\n    }\n  };\n\n  _initItemHolder = (elm: HTMLElement | TNil) => {\n    this._itemHolderElm = elm;\n    this._scanItemHeights();\n  };\n\n  /**\n   * Go through all items that are rendered and save their height based on their\n   * item-key (which is on a data-* attribute). If any new or adjusted heights\n   * are found, re-measure the current known y-positions (via .yPositions).\n   */\n  _scanItemHeights = () => {\n    const getIndexFromKey = this.props.getIndexFromKey;\n    if (!this._itemHolderElm) {\n      return;\n    }\n    // note the keys for the first and last altered heights, the `yPositions`\n    // needs to be updated\n    let lowDirtyKey = null;\n    let highDirtyKey = null;\n    let isDirty = false;\n    // iterating childNodes is faster than children\n    // https://jsperf.com/large-htmlcollection-vs-large-nodelist\n    const nodes = this._itemHolderElm.childNodes;\n    const max = nodes.length;\n    for (let i = 0; i < max; i++) {\n      const node = nodes[i];\n      if (node instanceof HTMLElement) {\n        // use `.getAttribute(...)` instead of `.dataset` for jest / JSDOM\n        const itemKey = node.getAttribute('data-item-key');\n        if (!itemKey) {\n          // eslint-disable-next-line no-console\n          console.warn('itemKey not found');\n          continue;\n        }\n        // measure the first child, if it's available, otherwise the node itself\n        // (likely not transferable to other contexts, and instead is specific to\n        // how we have the items rendered)\n        const measureSrc: Element = node.firstElementChild || node;\n        const observed = measureSrc.clientHeight;\n        const known = this._knownHeights.get(itemKey);\n        if (observed !== known) {\n          this._knownHeights.set(itemKey, observed);\n          if (!isDirty) {\n            isDirty = true;\n            // eslint-disable-next-line no-multi-assign\n            lowDirtyKey = highDirtyKey = itemKey;\n          } else {\n            highDirtyKey = itemKey;\n          }\n        }\n      }\n    }\n    if (lowDirtyKey != null && highDirtyKey != null) {\n      // update yPositions, then redraw\n      const imin = getIndexFromKey(lowDirtyKey);\n      const imax = highDirtyKey === lowDirtyKey ? imin : getIndexFromKey(highDirtyKey);\n      this._yPositions.calcHeights(imax, this._getHeight, imin);\n      this.forceUpdate();\n    }\n  };\n\n  /**\n   * Get the height of the element at index `i`; first check the known heights,\n   * fallback to `.props.itemHeightGetter(...)`.\n   */\n  _getHeight = (i: number) => {\n    const key = this.props.getKeyFromIndex(i);\n    const known = this._knownHeights.get(key);\n    // known !== known iff known is NaN\n    // eslint-disable-next-line no-self-compare\n    if (known != null && known === known) {\n      return known;\n    }\n    return this.props.itemHeightGetter(i, key);\n  };\n\n  render() {\n    const {\n      dataLength,\n      getKeyFromIndex,\n      initialDraw = DEFAULT_INITIAL_DRAW,\n      itemRenderer,\n      viewBuffer,\n      viewBufferMin,\n    } = this.props;\n    const heightGetter = this._getHeight;\n    const items = [];\n    let start;\n    let end;\n\n    this._yPositions.profileData(dataLength);\n\n    if (!this._wrapperElm) {\n      start = 0;\n      end = (initialDraw < dataLength ? initialDraw : dataLength) - 1;\n    } else {\n      if (this._isViewChanged()) {\n        this._calcViewIndexes();\n      }\n      const maxStart = viewBufferMin > this._startIndex ? 0 : this._startIndex - viewBufferMin;\n      const minEnd = viewBufferMin < dataLength - this._endIndex ? this._endIndex + viewBufferMin : dataLength - 1;\n      if (maxStart < this._startIndexDrawn || minEnd > this._endIndexDrawn) {\n        start = viewBuffer > this._startIndex ? 0 : this._startIndex - viewBuffer;\n        end = this._endIndex + viewBuffer;\n        if (end >= dataLength) {\n          end = dataLength - 1;\n        }\n      } else {\n        start = this._startIndexDrawn > dataLength - 1 ? 0 : this._startIndexDrawn;\n        end = this._endIndexDrawn > dataLength - 1 ? dataLength - 1 : this._endIndexDrawn;\n      }\n    }\n\n    this._yPositions.calcHeights(end, heightGetter, start || -1);\n    this._startIndexDrawn = start;\n    this._endIndexDrawn = end;\n\n    items.length = end - start + 1;\n    for (let i = start; i <= end; i++) {\n      const { y: top, height } = this._yPositions.getRowPosition(i, heightGetter);\n      const style = {\n        height,\n        top,\n        position: 'absolute',\n      };\n      const itemKey = getKeyFromIndex(i);\n      const attrs = { 'data-item-key': itemKey };\n      items.push(itemRenderer(itemKey, style, i, attrs));\n    }\n    const wrapperProps: TWrapperProps = {\n      style: { position: 'relative' },\n      ref: this._initWrapper,\n    };\n    if (!this.props.windowScroller) {\n      wrapperProps.onScroll = this._onScroll;\n      wrapperProps.style.height = '100%';\n      wrapperProps.style.overflowY = 'auto';\n    }\n    const scrollerStyle = {\n      position: 'relative' as const,\n      height: this._yPositions.getEstimatedHeight(),\n    };\n    return (\n      <div {...wrapperProps} data-testid=\"ListView\">\n        <div style={scrollerStyle}>\n          <div\n            style={{\n              position: 'absolute',\n              top: 0,\n              margin: 0,\n              padding: 0,\n            }}\n            className={this.props.itemsWrapperClassName}\n            ref={this._initItemHolder}\n          >\n            {items}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { css } from '@emotion/css';\n\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme2,\n  toOption,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/experimental';\nimport { InlineField, InlineFieldRow, Input, Select, useStyles2 } from '@grafana/ui';\n\nexport interface SpanBarOptions {\n  type?: string;\n  tag?: string;\n}\n\nexport interface SpanBarOptionsData extends DataSourceJsonData {\n  spanBar?: SpanBarOptions;\n}\n\nexport const NONE = 'None';\nexport const DURATION = 'Duration';\nexport const TAG = 'Tag';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<SpanBarOptionsData> {}\n\nexport default function SpanBarSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles2(getStyles);\n  const selectOptions = [NONE, DURATION, TAG].map(toOption);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <InlineFieldRow className={styles.row}>\n        <InlineField label=\"Label\" labelWidth={26} tooltip=\"Default: duration\" grow>\n          <Select\n            inputId=\"label\"\n            options={selectOptions}\n            value={options.jsonData.spanBar?.type || ''}\n            onChange={(v) => {\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'spanBar', {\n                ...options.jsonData.spanBar,\n                type: v?.value ?? '',\n              });\n            }}\n            placeholder=\"Duration\"\n            isClearable\n            aria-label={'select-label-name'}\n            width={40}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      {options.jsonData.spanBar?.type === TAG && (\n        <InlineFieldRow className={styles.row}>\n          <InlineField\n            label=\"Tag key\"\n            labelWidth={26}\n            tooltip=\"Tag key which will be used to get the tag value. A span's attributes and resources will be searched for the tag key\"\n          >\n            <Input\n              type=\"text\"\n              placeholder=\"Enter tag key\"\n              onChange={(v) =>\n                updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'spanBar', {\n                  ...options.jsonData.spanBar,\n                  tag: v.currentTarget.value,\n                })\n              }\n              value={options.jsonData.spanBar?.tag || ''}\n              width={40}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n    </div>\n  );\n}\n\nexport const SpanBarSection = ({ options, onOptionsChange }: DataSourcePluginOptionsEditorProps) => {\n  let suffix = options.type;\n  suffix += options.type === 'tempo' ? '/configure-tempo-data-source/#span-bar' : '/#span-bar';\n\n  return (\n    <ConfigSubSection\n      title=\"Span bar\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Add additional info next to the service and operation on a span bar row in the trace view.\"\n          suffix={suffix}\n          feature=\"the span bar\"\n        />\n      }\n    >\n      <SpanBarSettings options={options} onOptionsChange={onOptionsChange} />\n    </ConfigSubSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  infoText: css({\n    label: 'infoText',\n    paddingBottom: theme.spacing(2),\n    color: theme.colors.text.secondary,\n  }),\n  row: css({\n    label: 'row',\n    alignItems: 'baseline',\n  }),\n});\n","import { cloneElement, ReactElement, useRef } from 'react';\n\nimport { Popover as GrafanaPopover, PopoverController } from '@grafana/ui';\n\nexport type PopoverProps = {\n  children: ReactElement;\n  content: ReactElement;\n  overlayClassName?: string;\n};\n\nexport function Popover({ children, content, overlayClassName }: PopoverProps) {\n  const popoverRef = useRef<HTMLElement>(null);\n\n  return (\n    <PopoverController content={content} hideAfter={300}>\n      {(showPopper, hidePopper, popperProps) => {\n        return (\n          <>\n            {popoverRef.current && (\n              <GrafanaPopover\n                {...popperProps}\n                referenceElement={popoverRef.current}\n                wrapperClassName={overlayClassName}\n                onMouseLeave={hidePopper}\n                onMouseEnter={showPopper}\n              />\n            )}\n\n            {cloneElement(children, {\n              ref: popoverRef,\n              onMouseEnter: showPopper,\n              onMouseLeave: hidePopper,\n            })}\n          </>\n        );\n      }}\n    </PopoverController>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const LABEL = 'label';\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { useState } from 'react';\n\nimport { Button, IconName, Tooltip, useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  CopyIcon: css({\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'inherit',\n    height: '100%',\n    overflow: 'hidden',\n    '&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.25)',\n      color: 'inherit',\n    },\n  }),\n});\n\ntype PropsType = {\n  className?: string;\n  copyText: string;\n  icon?: IconName;\n  tooltipTitle: string;\n};\n\nexport default function CopyIcon({ copyText, icon = 'copy', tooltipTitle }: PropsType) {\n  const styles = useStyles2(getStyles);\n\n  const [hasCopied, setHasCopied] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setHasCopied(true);\n  };\n\n  return (\n    <Tooltip content={hasCopied ? 'Copied' : tooltipTitle}>\n      <Button className={cx(styles.CopyIcon)} type=\"button\" icon={icon} onClick={handleClick} />\n    </Tooltip>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { PropsWithChildren } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, TraceKeyValuePair } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport CopyIcon from '../../common/CopyIcon';\nimport { TraceLink, TNil } from '../../types';\n\nimport jsonMarkup from './jsonMarkup';\n\nconst copyIconClassName = 'copyIcon';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    KeyValueTable: css({\n      label: 'KeyValueTable',\n      background: autoColor(theme, '#fff'),\n      border: `1px solid ${autoColor(theme, '#ddd')}`,\n      marginBottom: '0.5rem',\n      maxHeight: '450px',\n      overflow: 'auto',\n    }),\n    table: css({\n      width: '100%',\n    }),\n    body: css({\n      label: 'body',\n      verticalAlign: 'baseline',\n    }),\n    row: css({\n      label: 'row',\n      '& > td': {\n        padding: '0.5rem 0.5rem',\n        height: '30px',\n      },\n      '&:nth-child(2n) > td': {\n        background: autoColor(theme, '#f5f5f5'),\n      },\n      [`&:not(:hover) .${copyIconClassName}`]: {\n        visibility: 'hidden',\n      },\n    }),\n    keyColumn: css({\n      label: 'keyColumn',\n      color: autoColor(theme, '#888'),\n      whiteSpace: 'pre',\n      width: '125px',\n      verticalAlign: 'top',\n    }),\n    copyColumn: css({\n      label: 'copyColumn',\n      textAlign: 'right',\n    }),\n    linkIcon: css({\n      label: 'linkIcon',\n      verticalAlign: 'middle',\n      fontWeight: 'bold',\n    }),\n    jsonTable: css({\n      display: 'inline-block',\n    }),\n  };\n};\n\nconst jsonObjectOrArrayStartRegex = /^(\\[|\\{)/;\n\nfunction parseIfComplexJson(value: unknown) {\n  // if the value is a string representing actual json object or array, then use json-markup\n  if (typeof value === 'string' && jsonObjectOrArrayStartRegex.test(value)) {\n    // otherwise just return as is\n    try {\n      return JSON.parse(value);\n      // eslint-disable-next-line no-empty\n    } catch (_) {}\n  }\n  return value;\n}\n\ninterface LinkValueProps {\n  href: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport const LinkValue = ({ href, title = '', children }: PropsWithChildren<LinkValueProps>) => {\n  return (\n    <a href={href} title={title} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children} <Icon name=\"external-link-alt\" />\n    </a>\n  );\n};\n\nexport type KeyValuesTableProps = {\n  data: TraceKeyValuePair[];\n  linksGetter?: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n};\n\nexport default function KeyValuesTable(props: KeyValuesTableProps) {\n  const { data, linksGetter } = props;\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.KeyValueTable)} data-testid=\"KeyValueTable\">\n      <table className={styles.table}>\n        <tbody className={styles.body}>\n          {data.map((row, i) => {\n            const markup = {\n              __html: jsonMarkup(parseIfComplexJson(row.value)),\n            };\n            const jsonTable = <div className={styles.jsonTable} dangerouslySetInnerHTML={markup} />;\n            const links = linksGetter ? linksGetter(data, i) : null;\n            let valueMarkup;\n            if (links && links.length) {\n              // TODO: handle multiple items\n              valueMarkup = (\n                <div>\n                  <LinkValue href={links[0].url} title={links[0].text}>\n                    {jsonTable}\n                  </LinkValue>\n                </div>\n              );\n            } else {\n              valueMarkup = jsonTable;\n            }\n            return (\n              // `i` is necessary in the key because row.key can repeat\n              <tr className={styles.row} key={`${row.key}-${i}`}>\n                <td className={styles.keyColumn} data-testid=\"KeyValueTable--keyColumn\">\n                  {row.key}\n                </td>\n                <td>{valueMarkup}</td>\n                <td className={styles.copyColumn}>\n                  <CopyIcon\n                    className={copyIconClassName}\n                    copyText={JSON.stringify(row, null, 2)}\n                    tooltipTitle=\"Copy JSON\"\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\n\nconst getStyles = (divider: boolean) => (theme: GrafanaTheme2) => {\n  return {\n    LabeledList: css({\n      label: 'LabeledList',\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      ...(divider\n        ? {\n            marginRight: '-8px',\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'flex-end',\n          }\n        : {}),\n    }),\n    LabeledListItem: css({\n      label: 'LabeledListItem',\n      display: 'inline-block',\n      ...(divider\n        ? {\n            borderRight: `1px solid ${autoColor(theme, '#ddd')}`,\n            padding: '0 8px',\n          }\n        : {}),\n    }),\n    LabeledListLabel: css({\n      label: 'LabeledListLabel',\n      color: theme.isLight ? '#999' : '#666',\n      marginRight: '0.25rem',\n    }),\n    LabeledListValue: css({\n      label: 'LabeledListValue',\n      marginRight: divider ? undefined : '0.55rem',\n    }),\n  };\n};\n\ntype LabeledListProps = {\n  className?: string;\n  divider?: boolean;\n  items: Array<{ key: string; label: React.ReactNode; value: React.ReactNode }>;\n};\n\nexport default function LabeledList(props: LabeledListProps) {\n  const { className, divider = false, items } = props;\n  const styles = useStyles2(getStyles(divider));\n\n  return (\n    <ul className={cx(styles.LabeledList, className)}>\n      {items.map(({ key, label, value }) => {\n        return (\n          <li className={styles.LabeledListItem} key={`${key}`}>\n            <span className={styles.LabeledListLabel}>{label}</span>\n            <strong className={styles.LabeledListValue}>{value}</strong>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","export const KIND = 'kind';\nexport const STATUS = 'status';\nexport const STATUS_MESSAGE = 'status.message';\nexport const LIBRARY_NAME = 'library.name';\nexport const LIBRARY_VERSION = 'library.version';\nexport const TRACE_STATE = 'trace.state';\nexport const ID = 'id';\n","// Copyright (c) 2019 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as React from 'react';\n\nimport { Field, LinkModel } from '@grafana/data';\n\nimport { TraceSpanReference } from '../types/trace';\n\ntype ReferenceLinkProps = {\n  reference: TraceSpanReference;\n  children: React.ReactNode;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\nexport default function ReferenceLink(props: ReferenceLinkProps) {\n  const { reference, children, createFocusSpanLink } = props;\n\n  const link = createFocusSpanLink(reference.traceID, reference.spanID);\n\n  return (\n    <a\n      href={link.href}\n      target={link.target}\n      rel=\"noopener noreferrer\"\n      onClick={\n        link.onClick\n          ? (event) => {\n              event.preventDefault();\n              link.onClick!(event);\n            }\n          : undefined\n      }\n    >\n      {children}\n    </a>\n  );\n}\n","// Copyright (c) 2019 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { Field, GrafanaTheme2, LinkModel } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TraceSpanReference } from '../../types/trace';\nimport ReferenceLink from '../../url/ReferenceLink';\n\nimport AccordianKeyValues from './AccordianKeyValues';\n\nimport { alignIcon } from '.';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  AccordianReferenceItem: css({\n    borderBottom: `1px solid ${autoColor(theme, '#d8d8d8')}`,\n  }),\n  AccordianKeyValues: css({\n    marginLeft: '10px',\n  }),\n  AccordianReferences: css({\n    label: 'AccordianReferences',\n    border: `1px solid ${autoColor(theme, '#d8d8d8')}`,\n    position: 'relative',\n    marginBottom: '0.25rem',\n  }),\n  AccordianReferencesHeader: css({\n    label: 'AccordianReferencesHeader',\n    background: autoColor(theme, '#e4e4e4'),\n    color: 'inherit',\n    display: 'block',\n    padding: '0.25rem 0.5rem',\n    '&:hover': {\n      background: autoColor(theme, '#dadada'),\n    },\n  }),\n  AccordianReferencesContent: css({\n    label: 'AccordianReferencesContent',\n    background: autoColor(theme, '#f0f0f0'),\n    borderTop: `1px solid ${autoColor(theme, '#d8d8d8')}`,\n    padding: '0.5rem 0.5rem 0.25rem 0.5rem',\n  }),\n  AccordianReferencesFooter: css({\n    label: 'AccordianReferencesFooter',\n    color: autoColor(theme, '#999'),\n  }),\n  AccordianKeyValuesItem: css({\n    marginBottom: theme.spacing(0.5),\n  }),\n  ReferencesList: css({\n    background: '#fff',\n    border: '1px solid #ddd',\n    marginBottom: '0.7em',\n    maxHeight: '450px',\n    overflow: 'auto',\n  }),\n  list: css({\n    width: '100%',\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    background: '#fff',\n  }),\n  itemContent: css({\n    padding: '0.25rem 0.5rem',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }),\n  item: css({\n    '&:nth-child(2n)': {\n      background: '#f5f5f5',\n    },\n  }),\n  debugInfo: css({\n    letterSpacing: '0.25px',\n    margin: '0.5em 0 0',\n    flexWrap: 'wrap',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }),\n  debugLabel: css({\n    margin: '0 5px 0 5px',\n    '&::before': {\n      color: '#bbb',\n      content: 'attr(data-label)',\n    },\n  }),\n  serviceName: css({\n    marginRight: '8px',\n  }),\n  title: css({\n    display: 'flex',\n    alignItems: 'center',\n    gap: '4px',\n  }),\n});\n\nexport type AccordianReferencesProps = {\n  data: TraceSpanReference[];\n  highContrast?: boolean;\n  interactive?: boolean;\n  isOpen: boolean;\n  openedItems?: Set<TraceSpanReference>;\n  onItemToggle?: (reference: TraceSpanReference) => void;\n  onToggle?: null | (() => void);\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\ntype ReferenceItemProps = {\n  data: TraceSpanReference[];\n  interactive?: boolean;\n  openedItems?: Set<TraceSpanReference>;\n  onItemToggle?: (reference: TraceSpanReference) => void;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<Field>;\n};\n\n// export for test\nexport function References(props: ReferenceItemProps) {\n  const { data, createFocusSpanLink, openedItems, onItemToggle, interactive } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.AccordianReferencesContent}>\n      {data.map((reference, i) => (\n        <div className={i < data.length - 1 ? styles.AccordianReferenceItem : undefined} key={i}>\n          <div className={styles.item} key={`${reference.spanID}`}>\n            <ReferenceLink reference={reference} createFocusSpanLink={createFocusSpanLink}>\n              <span className={styles.itemContent}>\n                {reference.span ? (\n                  <span>\n                    <span className={cx('span-svc-name', styles.serviceName)}>\n                      {reference.span.process.serviceName}\n                    </span>\n                    <small className=\"endpoint-name\">{reference.span.operationName}</small>\n                  </span>\n                ) : (\n                  <span className={cx('span-svc-name', styles.title)}>\n                    View Linked Span <Icon name=\"external-link-alt\" />\n                  </span>\n                )}\n                <small className={styles.debugInfo}>\n                  <span className={styles.debugLabel} data-label=\"TraceID:\">\n                    {reference.traceID}\n                  </span>\n                  <span className={styles.debugLabel} data-label=\"SpanID:\">\n                    {reference.spanID}\n                  </span>\n                </small>\n              </span>\n            </ReferenceLink>\n          </div>\n          {!!reference.tags?.length && (\n            <div className={styles.AccordianKeyValues}>\n              <AccordianKeyValues\n                className={i < data.length - 1 ? styles.AccordianKeyValuesItem : null}\n                data={reference.tags || []}\n                highContrast\n                interactive={interactive}\n                isOpen={openedItems ? openedItems.has(reference) : false}\n                label={'attributes'}\n                linksGetter={null}\n                onToggle={interactive && onItemToggle ? () => onItemToggle(reference) : null}\n              />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst AccordianReferences = ({\n  data,\n  interactive = true,\n  isOpen,\n  onToggle,\n  onItemToggle,\n  openedItems,\n  createFocusSpanLink,\n}: AccordianReferencesProps) => {\n  const isEmpty = !Array.isArray(data) || !data.length;\n  let arrow: React.ReactNode | null = null;\n  let HeaderComponent: 'span' | 'a' = 'span';\n  let headerProps: {} | null = null;\n  if (interactive) {\n    arrow = isOpen ? (\n      <Icon name={'angle-down'} className={alignIcon} />\n    ) : (\n      <Icon name={'angle-right'} className={alignIcon} />\n    );\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: isEmpty ? null : onToggle,\n      role: 'switch',\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={styles.AccordianReferences}>\n      <HeaderComponent className={styles.AccordianReferencesHeader} {...headerProps}>\n        {arrow}\n        <strong>\n          <span>References</span>\n        </strong>{' '}\n        ({data.length})\n      </HeaderComponent>\n      {isOpen && (\n        <References\n          data={data}\n          openedItems={openedItems}\n          createFocusSpanLink={createFocusSpanLink}\n          onItemToggle={onItemToggle}\n          interactive={interactive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(AccordianReferences);\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\n\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  TextList: css({\n    maxHeight: '450px',\n    overflow: 'auto',\n  }),\n  List: css({\n    width: '100%',\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n  }),\n  item: css({\n    padding: '0.25rem 0.5rem',\n    verticalAlign: 'top',\n    '&:nth-child(2n)': {\n      background: '#f5f5f5',\n    },\n  }),\n});\n\ntype TextListProps = {\n  data: string[];\n};\n\nexport default function TextList(props: TextListProps) {\n  const { data } = props;\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.TextList)} data-testid=\"TextList\">\n      <ul className={styles.List}>\n        {data.map((row, i) => {\n          return (\n            // `i` is necessary in the key because row.key can repeat\n            <li className={styles.item} key={`${i}`}>\n              {row}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TNil } from '../../types';\n\nimport { getStyles as getAccordianKeyValuesStyles } from './AccordianKeyValues';\nimport TextList from './TextList';\n\nimport { alignIcon } from '.';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  header: css({\n    cursor: 'pointer',\n    overflow: 'hidden',\n    padding: '0.25em 0.1em',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      background: autoColor(theme, '#e8e8e8'),\n    },\n  }),\n});\n\ntype AccordianTextProps = {\n  className?: string | TNil;\n  headerClassName?: string | TNil;\n  data: string[];\n  highContrast?: boolean;\n  interactive?: boolean;\n  isOpen: boolean;\n  label: React.ReactNode | string;\n  onToggle?: null | (() => void);\n  TextComponent?: React.ElementType<{ data: string[] }>;\n};\n\nfunction DefaultTextComponent({ data }: { data: string[] }) {\n  return <TextList data={data} />;\n}\n\nexport default function AccordianText({\n  className = null,\n  data,\n  headerClassName,\n  highContrast = false,\n  interactive = true,\n  isOpen,\n  label,\n  onToggle = null,\n  TextComponent = DefaultTextComponent,\n}: AccordianTextProps) {\n  const isEmpty = !Array.isArray(data) || !data.length;\n  const accordianKeyValuesStyles = useStyles2(getAccordianKeyValuesStyles);\n  const iconCls = cx(alignIcon, { [accordianKeyValuesStyles.emptyIcon]: isEmpty });\n  let arrow: React.ReactNode | null = null;\n  let headerProps: {} | null = null;\n  if (interactive) {\n    arrow = isOpen ? (\n      <Icon name={'angle-down'} className={iconCls} />\n    ) : (\n      <Icon name={'angle-right'} className={iconCls} />\n    );\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: isEmpty ? null : onToggle,\n      role: 'switch',\n    };\n  }\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={className || ''}>\n      <div className={cx(styles.header, headerClassName)} {...headerProps} data-testid=\"AccordianText--header\">\n        {arrow}\n        <strong>{label}</strong> ({data.length})\n      </div>\n      {isOpen && <TextComponent data={data} />}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useCallback, useEffect } from 'react';\nimport { useMeasure } from 'react-use';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  CoreApp,\n  DataFrame,\n  DataQueryRequest,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateTime,\n  TimeZone,\n} from '@grafana/data';\nimport { FlameGraph } from '@grafana/flamegraph';\nimport { TraceToProfilesOptions } from '@grafana/o11y-ds-frontend';\nimport { config, DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { Query } from 'app/plugins/datasource/grafana-pyroscope-datasource/types';\n\nimport {\n  defaultProfilingKeys,\n  getFormattedTags,\n  pyroscopeProfileIdTagKey,\n  scopedVarsFromSpan,\n  scopedVarsFromTags,\n  scopedVarsFromTrace,\n} from '../../../createSpanLink';\nimport { TraceSpan } from '../../types/trace';\n\nimport { TraceFlameGraphs } from '.';\n\nexport type SpanFlameGraphProps = {\n  span: TraceSpan;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  timeZone: TimeZone;\n  traceFlameGraphs: TraceFlameGraphs;\n  setTraceFlameGraphs: (flameGraphs: TraceFlameGraphs) => void;\n  setRedrawListView: (redraw: {}) => void;\n  traceDuration: number;\n  traceName: string;\n};\n\nexport default function SpanFlameGraph(props: SpanFlameGraphProps) {\n  const {\n    span,\n    traceToProfilesOptions,\n    timeZone,\n    traceFlameGraphs,\n    setTraceFlameGraphs,\n    setRedrawListView,\n    traceDuration,\n    traceName,\n  } = props;\n  const [sizeRef, { height: containerHeight }] = useMeasure<HTMLDivElement>();\n  const styles = useStyles2(getStyles);\n\n  const profileTag = span.tags.filter((tag) => tag.key === pyroscopeProfileIdTagKey);\n  const profileTagValue = profileTag.length > 0 ? profileTag[0].value : undefined;\n\n  const getTimeRangeForProfile = useCallback(() => {\n    const spanStartMs = Math.floor(span.startTime / 1000) - 30000;\n    const spanEndMs = (span.startTime + span.duration) / 1000 + 30000;\n    const to = dateTime(spanEndMs);\n    const from = dateTime(spanStartMs);\n\n    return {\n      from,\n      to,\n      raw: {\n        from,\n        to,\n      },\n    };\n  }, [span.duration, span.startTime]);\n\n  const getFlameGraphData = async (request: DataQueryRequest<Query>, datasourceUid: string) => {\n    const ds = await getDatasourceSrv().get(datasourceUid);\n    if (ds instanceof DataSourceWithBackend) {\n      const result = await lastValueFrom(ds.query(request));\n      const frame = result.data.find((x: DataFrame) => {\n        return x.name === 'response';\n      });\n      if (frame && frame.length > 1) {\n        return frame;\n      }\n    }\n  };\n\n  const queryFlameGraph = useCallback(\n    async (\n      profilesDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData>,\n      traceToProfilesOptions: TraceToProfilesOptions,\n      span: TraceSpan\n    ) => {\n      let labelSelector = '{}';\n      if (traceToProfilesOptions.customQuery && traceToProfilesOptions.query) {\n        const scopedVars = {\n          ...scopedVarsFromTrace(traceDuration, traceName, span.traceID),\n          ...scopedVarsFromSpan(span),\n          ...scopedVarsFromTags(span, traceToProfilesOptions),\n        };\n        labelSelector = getTemplateSrv().replace(traceToProfilesOptions.query, scopedVars);\n      } else {\n        const tags =\n          traceToProfilesOptions.tags && traceToProfilesOptions.tags.length > 0\n            ? traceToProfilesOptions.tags\n            : defaultProfilingKeys;\n        labelSelector = `{${getFormattedTags(span, tags)}}`;\n      }\n\n      const request = {\n        requestId: 'span-flamegraph-requestId',\n        interval: '2s',\n        intervalMs: 2000,\n        range: getTimeRangeForProfile(),\n        scopedVars: {},\n        app: CoreApp.Unknown,\n        timezone: timeZone,\n        startTime: span.startTime,\n        targets: [\n          {\n            labelSelector,\n            groupBy: [],\n            profileTypeId: traceToProfilesOptions.profileTypeId ?? '',\n            queryType: 'profile' as const,\n            spanSelector: [profileTagValue],\n            refId: 'span-flamegraph-refId',\n            datasource: {\n              type: profilesDataSourceSettings.type,\n              uid: profilesDataSourceSettings.uid,\n            },\n          },\n        ],\n      };\n      const flameGraph = await getFlameGraphData(request, profilesDataSourceSettings.uid);\n\n      if (flameGraph && flameGraph.length > 0) {\n        setTraceFlameGraphs({ ...traceFlameGraphs, [profileTagValue]: flameGraph });\n      }\n    },\n    [getTimeRangeForProfile, profileTagValue, setTraceFlameGraphs, timeZone, traceDuration, traceFlameGraphs, traceName]\n  );\n\n  useEffect(() => {\n    if (!Object.keys(traceFlameGraphs).includes(profileTagValue)) {\n      let profilesDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData> | undefined;\n      if (traceToProfilesOptions && traceToProfilesOptions?.datasourceUid) {\n        profilesDataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToProfilesOptions.datasourceUid);\n      }\n      if (traceToProfilesOptions && profilesDataSourceSettings) {\n        queryFlameGraph(profilesDataSourceSettings, traceToProfilesOptions, span);\n      }\n    }\n  }, [\n    setTraceFlameGraphs,\n    span,\n    traceFlameGraphs,\n    traceToProfilesOptions,\n    getTimeRangeForProfile,\n    timeZone,\n    queryFlameGraph,\n    profileTagValue,\n  ]);\n\n  useEffect(() => {\n    setRedrawListView({});\n  }, [containerHeight, setRedrawListView]);\n\n  if (!traceFlameGraphs[profileTagValue]) {\n    return <></>;\n  }\n\n  return (\n    <div className={styles.flameGraph} ref={sizeRef}>\n      <div className={styles.flameGraphTitle}>Flame graph</div>\n      <FlameGraph\n        data={traceFlameGraphs[profileTagValue]}\n        getTheme={() => config.theme2}\n        showFlameGraphOnly={true}\n        disableCollapsing={true}\n      />\n    </div>\n  );\n}\n\nconst getStyles = () => {\n  return {\n    flameGraph: css({\n      label: 'flameGraphInSpan',\n      margin: '5px',\n    }),\n    flameGraphTitle: css({\n      label: 'flameGraphTitleInSpan',\n      marginBottom: '5px',\n      fontWeight: 'bold',\n    }),\n  };\n};\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { SpanStatusCode } from '@opentelemetry/api';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport {\n  DataFrame,\n  dateTimeFormat,\n  GrafanaTheme2,\n  IconName,\n  LinkModel,\n  TraceKeyValuePair,\n  TraceLog,\n} from '@grafana/data';\nimport { TraceToProfilesOptions } from '@grafana/o11y-ds-frontend';\nimport { config, locationService, reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { DataLinkButton, Divider, Icon, TextArea, useStyles2 } from '@grafana/ui';\nimport { RelatedProfilesTitle } from '@grafana-plugins/tempo/resultTransformer';\n\nimport { pyroscopeProfileIdTagKey } from '../../../createSpanLink';\nimport { autoColor } from '../../Theme';\nimport LabeledList from '../../common/LabeledList';\nimport { KIND, LIBRARY_NAME, LIBRARY_VERSION, STATUS, STATUS_MESSAGE, TRACE_STATE } from '../../constants/span';\nimport { SpanLinkFunc, TNil } from '../../types';\nimport { SpanLinkDef, SpanLinkType } from '../../types/links';\nimport { TraceLink, TraceSpan, TraceSpanReference } from '../../types/trace';\nimport { formatDuration } from '../utils';\n\nimport AccordianKeyValues from './AccordianKeyValues';\nimport AccordianLogs from './AccordianLogs';\nimport AccordianReferences from './AccordianReferences';\nimport AccordianText from './AccordianText';\nimport DetailState from './DetailState';\nimport SpanFlameGraph from './SpanFlameGraph';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    header: css({\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'space-between',\n      gap: '0 1rem',\n      marginBottom: '0.25rem',\n    }),\n    listWrapper: css({\n      overflow: 'hidden',\n    }),\n    list: css({\n      textAlign: 'right',\n    }),\n    operationName: css({\n      margin: 0,\n    }),\n    debugInfo: css({\n      label: 'debugInfo',\n      display: 'block',\n      letterSpacing: '0.25px',\n      margin: '0.5em 0 -0.75em',\n      textAlign: 'right',\n    }),\n    debugLabel: css({\n      label: 'debugLabel',\n      '&::before': {\n        color: autoColor(theme, '#bbb'),\n        content: 'attr(data-label)',\n      },\n    }),\n    debugValue: css({\n      label: 'debugValue',\n      backgroundColor: 'inherit',\n      border: 'none',\n      color: autoColor(theme, '#888'),\n      cursor: 'pointer',\n      '&:hover': {\n        color: autoColor(theme, '#333'),\n      },\n    }),\n    AccordianWarnings: css({\n      label: 'AccordianWarnings',\n      background: autoColor(theme, '#fafafa'),\n      border: `1px solid ${autoColor(theme, '#e4e4e4')}`,\n      marginBottom: '0.25rem',\n    }),\n    AccordianWarningsHeader: css({\n      label: 'AccordianWarningsHeader',\n      background: autoColor(theme, '#fff7e6'),\n      padding: '0.25rem 0.5rem',\n      '&:hover': {\n        background: autoColor(theme, '#ffe7ba'),\n      },\n    }),\n    AccordianWarningsHeaderOpen: css({\n      label: 'AccordianWarningsHeaderOpen',\n      borderBottom: `1px solid ${autoColor(theme, '#e8e8e8')}`,\n    }),\n    AccordianWarningsLabel: css({\n      label: 'AccordianWarningsLabel',\n      color: autoColor(theme, '#d36c08'),\n    }),\n    AccordianKeyValuesItem: css({\n      marginBottom: theme.spacing(0.5),\n    }),\n    Textarea: css({\n      wordBreak: 'break-all',\n      whiteSpace: 'pre',\n    }),\n    LinkIcon: css({\n      fontSize: '1.5em',\n    }),\n    linkList: css({\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '10px',\n    }),\n  };\n};\n\nexport const alignIcon = css({\n  margin: '-0.2rem 0.25rem 0 0',\n});\n\nexport type TraceFlameGraphs = {\n  [spanID: string]: DataFrame;\n};\n\nexport type SpanDetailProps = {\n  detailState: DetailState;\n  linksGetter: ((links: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n  logItemToggle: (spanID: string, log: TraceLog) => void;\n  logsToggle: (spanID: string) => void;\n  processToggle: (spanID: string) => void;\n  span: TraceSpan;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  timeZone: TimeZone;\n  tagsToggle: (spanID: string) => void;\n  traceStartTime: number;\n  traceDuration: number;\n  traceName: string;\n  warningsToggle: (spanID: string) => void;\n  stackTracesToggle: (spanID: string) => void;\n  referenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;\n  referencesToggle: (spanID: string) => void;\n  createSpanLink?: SpanLinkFunc;\n  focusedSpanId?: string;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;\n  datasourceType: string;\n  traceFlameGraphs: TraceFlameGraphs;\n  setTraceFlameGraphs: (flameGraphs: TraceFlameGraphs) => void;\n  setRedrawListView: (redraw: {}) => void;\n};\n\nexport default function SpanDetail(props: SpanDetailProps) {\n  const {\n    detailState,\n    linksGetter,\n    logItemToggle,\n    logsToggle,\n    processToggle,\n    span,\n    tagsToggle,\n    traceStartTime,\n    traceDuration,\n    traceName,\n    warningsToggle,\n    stackTracesToggle,\n    referencesToggle,\n    referenceItemToggle,\n    createSpanLink,\n    createFocusSpanLink,\n    datasourceType,\n    traceFlameGraphs,\n    setTraceFlameGraphs,\n    traceToProfilesOptions,\n    setRedrawListView,\n  } = props;\n  const {\n    isTagsOpen,\n    isProcessOpen,\n    logs: logsState,\n    isWarningsOpen,\n    references: referencesState,\n    isStackTracesOpen,\n  } = detailState;\n  const {\n    operationName,\n    process,\n    duration,\n    relativeStartTime,\n    startTime,\n    traceID,\n    spanID,\n    logs,\n    tags,\n    warnings,\n    references,\n    stackTraces,\n  } = span;\n  const { timeZone } = props;\n  let overviewItems = [\n    {\n      key: 'svc',\n      label: 'Service:',\n      value: process.serviceName,\n    },\n    {\n      key: 'duration',\n      label: 'Duration:',\n      value: formatDuration(duration),\n    },\n    {\n      key: 'start',\n      label: 'Start Time:',\n      value: formatDuration(relativeStartTime) + getAbsoluteTime(startTime, timeZone),\n    },\n    ...(span.childSpanCount > 0\n      ? [\n          {\n            key: 'child_count',\n            label: 'Child Count:',\n            value: span.childSpanCount,\n          },\n        ]\n      : []),\n  ];\n\n  const styles = useStyles2(getStyles);\n\n  if (span.kind) {\n    overviewItems.push({\n      key: KIND,\n      label: 'Kind:',\n      value: span.kind,\n    });\n  }\n  if (span.statusCode !== undefined) {\n    overviewItems.push({\n      key: STATUS,\n      label: 'Status:',\n      value: SpanStatusCode[span.statusCode].toLowerCase(),\n    });\n  }\n  if (span.statusMessage) {\n    overviewItems.push({\n      key: STATUS_MESSAGE,\n      label: 'Status Message:',\n      value: span.statusMessage,\n    });\n  }\n  if (span.instrumentationLibraryName) {\n    overviewItems.push({\n      key: LIBRARY_NAME,\n      label: 'Library Name:',\n      value: span.instrumentationLibraryName,\n    });\n  }\n  if (span.instrumentationLibraryVersion) {\n    overviewItems.push({\n      key: LIBRARY_VERSION,\n      label: 'Library Version:',\n      value: span.instrumentationLibraryVersion,\n    });\n  }\n  if (span.traceState) {\n    overviewItems.push({\n      key: TRACE_STATE,\n      label: 'Trace State:',\n      value: span.traceState,\n    });\n  }\n\n  const createLinkButton = (link: SpanLinkDef, type: SpanLinkType, title: string, icon: IconName) => {\n    return (\n      <DataLinkButton\n        link={{\n          ...link,\n          title: title,\n          target: '_blank',\n          origin: link.field,\n          onClick: (event: React.MouseEvent) => {\n            // DataLinkButton assumes if you provide an onClick event you would want to prevent default behavior like navigation\n            // In this case, if an onClick is not defined, restore navigation to the provided href while keeping the tracking\n            // this interaction will not be tracked with link right clicks\n            reportInteraction('grafana_traces_trace_view_span_link_clicked', {\n              datasourceType: datasourceType,\n              grafana_version: config.buildInfo.version,\n              type,\n              location: 'spanDetails',\n            });\n\n            if (link.onClick) {\n              link.onClick?.(event);\n            } else {\n              locationService.push(link.href);\n            }\n          },\n        }}\n        buttonProps={{ icon }}\n      />\n    );\n  };\n\n  let logLinkButton: JSX.Element | null = null;\n  let profileLinkButton: JSX.Element | null = null;\n  let sessionLinkButton: JSX.Element | null = null;\n  if (createSpanLink) {\n    const links = createSpanLink(span);\n    const logsLink = links?.filter((link) => link.type === SpanLinkType.Logs);\n    if (links && logsLink && logsLink.length > 0) {\n      logLinkButton = createLinkButton(logsLink[0], SpanLinkType.Logs, 'Logs for this span', 'gf-logs');\n    }\n    const profilesLink = links?.filter(\n      (link) => link.type === SpanLinkType.Profiles && link.title === RelatedProfilesTitle\n    );\n    if (links && profilesLink && profilesLink.length > 0) {\n      profileLinkButton = createLinkButton(profilesLink[0], SpanLinkType.Profiles, 'Profiles for this span', 'link');\n    }\n    const sessionLink = links?.filter((link) => link.type === SpanLinkType.Session);\n    if (links && sessionLink && sessionLink.length > 0) {\n      sessionLinkButton = createLinkButton(\n        sessionLink[0],\n        SpanLinkType.Session,\n        'Session for this span',\n        'frontend-observability'\n      );\n    }\n  }\n\n  const focusSpanLink = createFocusSpanLink(traceID, spanID);\n  return (\n    <div data-testid=\"span-detail-component\">\n      <div className={styles.header}>\n        <h2 className={styles.operationName}>{operationName}</h2>\n        <div className={styles.listWrapper}>\n          <LabeledList className={styles.list} divider={true} items={overviewItems} />\n        </div>\n      </div>\n      <div className={styles.linkList}>\n        {logLinkButton}\n        {profileLinkButton}\n        {sessionLinkButton}\n      </div>\n      <Divider spacing={1} />\n      <div>\n        <div>\n          <AccordianKeyValues\n            data={tags}\n            label=\"Span Attributes\"\n            linksGetter={linksGetter}\n            isOpen={isTagsOpen}\n            onToggle={() => tagsToggle(spanID)}\n          />\n          {process.tags && (\n            <AccordianKeyValues\n              className={styles.AccordianKeyValuesItem}\n              data={process.tags}\n              label=\"Resource Attributes\"\n              linksGetter={linksGetter}\n              isOpen={isProcessOpen}\n              onToggle={() => processToggle(spanID)}\n            />\n          )}\n        </div>\n        {logs && logs.length > 0 && (\n          <AccordianLogs\n            linksGetter={linksGetter}\n            logs={logs}\n            isOpen={logsState.isOpen}\n            openedItems={logsState.openedItems}\n            onToggle={() => logsToggle(spanID)}\n            onItemToggle={(logItem) => logItemToggle(spanID, logItem)}\n            timestamp={traceStartTime}\n          />\n        )}\n        {warnings && warnings.length > 0 && (\n          <AccordianText\n            className={styles.AccordianWarnings}\n            headerClassName={styles.AccordianWarningsHeader}\n            label={<span className={styles.AccordianWarningsLabel}>Warnings</span>}\n            data={warnings}\n            isOpen={isWarningsOpen}\n            onToggle={() => warningsToggle(spanID)}\n          />\n        )}\n        {stackTraces?.length ? (\n          <AccordianText\n            label=\"Stack trace\"\n            data={stackTraces}\n            isOpen={isStackTracesOpen}\n            TextComponent={(textComponentProps) => {\n              let text;\n              if (textComponentProps.data?.length > 1) {\n                text = textComponentProps.data\n                  .map((stackTrace, index) => `StackTrace ${index + 1}:\\n${stackTrace}`)\n                  .join('\\n');\n              } else {\n                text = textComponentProps.data?.[0];\n              }\n              return (\n                <TextArea\n                  className={styles.Textarea}\n                  style={{ cursor: 'unset' }}\n                  readOnly\n                  cols={10}\n                  rows={10}\n                  value={text}\n                />\n              );\n            }}\n            onToggle={() => stackTracesToggle(spanID)}\n          />\n        ) : null}\n        {references && references.length > 0 && (references.length > 1 || references[0].refType !== 'CHILD_OF') && (\n          <AccordianReferences\n            data={references}\n            isOpen={referencesState.isOpen}\n            openedItems={referencesState.openedItems}\n            onToggle={() => referencesToggle(spanID)}\n            onItemToggle={(reference) => referenceItemToggle(spanID, reference)}\n            createFocusSpanLink={createFocusSpanLink}\n          />\n        )}\n        {span.tags.some((tag) => tag.key === pyroscopeProfileIdTagKey) && (\n          <SpanFlameGraph\n            span={span}\n            timeZone={timeZone}\n            traceFlameGraphs={traceFlameGraphs}\n            setTraceFlameGraphs={setTraceFlameGraphs}\n            traceToProfilesOptions={traceToProfilesOptions}\n            setRedrawListView={setRedrawListView}\n            traceDuration={traceDuration}\n            traceName={traceName}\n          />\n        )}\n        <small className={styles.debugInfo}>\n          {/* TODO: fix keyboard a11y */}\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n          <a\n            {...focusSpanLink}\n            onClick={(e) => {\n              // click handling logic copied from react router:\n              // https://github.com/remix-run/react-router/blob/997b4d67e506d39ac6571cb369d6d2d6b3dda557/packages/react-router-dom/index.tsx#L392-L394s\n              if (\n                focusSpanLink.onClick &&\n                e.button === 0 && // Ignore everything but left clicks\n                (!e.currentTarget.target || e.currentTarget.target === '_self') && // Let browser handle \"target=_blank\" etc.\n                !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) // Ignore clicks with modifier keys\n              ) {\n                e.preventDefault();\n                focusSpanLink.onClick(e);\n              }\n            }}\n          >\n            <Icon name={'link'} className={cx(alignIcon, styles.LinkIcon)}></Icon>\n          </a>\n          <span className={styles.debugLabel} data-label=\"SpanID:\" /> {spanID}\n        </small>\n      </div>\n    </div>\n  );\n}\n\nexport const getAbsoluteTime = (startTime: number, timeZone: TimeZone) => {\n  const dateStr = dateTimeFormat(startTime / 1000, { timeZone, defaultWithMS: true });\n  const match = dateStr.split(' ');\n  const absoluteTime = match[1] ? match[1] : dateStr;\n  return ` (${absoluteTime})`;\n};\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, TraceKeyValuePair } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TraceLink, TNil } from '../../types';\n\nimport * as markers from './AccordianKeyValues.markers';\nimport KeyValuesTable from './KeyValuesTable';\n\nimport { alignIcon } from '.';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      textOverflow: 'ellipsis',\n    }),\n    header: css({\n      label: 'header',\n      cursor: 'pointer',\n      overflow: 'hidden',\n      padding: '0.25em 0.1em',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      '&:hover': {\n        background: autoColor(theme, '#e8e8e8'),\n      },\n    }),\n    headerEmpty: css({\n      label: 'headerEmpty',\n      background: 'none',\n      cursor: 'initial',\n    }),\n    headerHighContrast: css({\n      label: 'headerHighContrast',\n      '&:hover': {\n        background: autoColor(theme, '#ddd'),\n      },\n    }),\n    emptyIcon: css({\n      label: 'emptyIcon',\n      color: autoColor(theme, '#aaa'),\n    }),\n    summary: css({\n      label: 'summary',\n      display: 'inline',\n      listStyle: 'none',\n      padding: 0,\n    }),\n    summaryItem: css({\n      label: 'summaryItem',\n      display: 'inline',\n      paddingRight: '0.5rem',\n      borderRight: `1px solid ${autoColor(theme, '#ddd')}`,\n      '&:last-child': {\n        paddingRight: 0,\n        borderRight: 'none',\n      },\n    }),\n    summaryLabel: css({\n      label: 'summaryLabel',\n      color: autoColor(theme, '#777'),\n    }),\n    summaryDelim: css({\n      label: 'summaryDelim',\n      color: autoColor(theme, '#bbb'),\n      padding: '0 0.2em',\n    }),\n  };\n};\n\nexport type AccordianKeyValuesProps = {\n  className?: string | TNil;\n  data: TraceKeyValuePair[];\n  logName?: string;\n  highContrast?: boolean;\n  interactive?: boolean;\n  isOpen: boolean;\n  label: string | React.ReactNode;\n  linksGetter?: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n  onToggle?: null | (() => void);\n};\n\ninterface KeyValuesSummaryProps {\n  data?: TraceKeyValuePair[] | null;\n}\n\n// export for tests\nexport function KeyValuesSummary({ data = null }: KeyValuesSummaryProps) {\n  const styles = useStyles2(getStyles);\n\n  if (!Array.isArray(data) || !data.length) {\n    return null;\n  }\n\n  return (\n    <ul className={styles.summary}>\n      {data.map((item, i) => (\n        // `i` is necessary in the key because item.key can repeat\n        <li className={styles.summaryItem} key={`${item.key}-${i}`}>\n          <span className={styles.summaryLabel}>{item.key}</span>\n          <span className={styles.summaryDelim}>=</span>\n          {String(item.value)}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default function AccordianKeyValues({\n  className = null,\n  data,\n  logName,\n  highContrast = false,\n  interactive = true,\n  isOpen,\n  label,\n  linksGetter,\n  onToggle = null,\n}: AccordianKeyValuesProps) {\n  const isEmpty = (!Array.isArray(data) || !data.length) && !logName;\n  const styles = useStyles2(getStyles);\n  const iconCls = cx(alignIcon, { [styles.emptyIcon]: isEmpty });\n  let arrow: React.ReactNode | null = null;\n  let headerProps: {} | null = null;\n  const tableFields = logName ? [{ key: 'event name', value: logName }, ...data] : data;\n  if (interactive) {\n    arrow = isOpen ? (\n      <Icon name={'angle-down'} className={iconCls} />\n    ) : (\n      <Icon name={'angle-right'} className={iconCls} />\n    );\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: isEmpty ? null : onToggle,\n      role: 'switch',\n    };\n  }\n\n  const showDataSummaryFields = data.length > 0 && !isOpen;\n\n  return (\n    <div className={cx(className, styles.container)}>\n      <div\n        className={cx(styles.header, {\n          [styles.headerEmpty]: isEmpty,\n          [styles.headerHighContrast]: highContrast && !isEmpty,\n        })}\n        {...headerProps}\n        data-testid=\"AccordianKeyValues--header\"\n      >\n        {arrow}\n        <strong data-test={markers.LABEL}>\n          {label}\n          {showDataSummaryFields && ':'}\n        </strong>\n        {showDataSummaryFields && (\n          <span className={css({ marginLeft: '0.7em' })}>\n            <KeyValuesSummary data={data} />\n          </span>\n        )}\n      </div>\n      {isOpen && <KeyValuesTable data={tableFields} linksGetter={linksGetter} />}\n    </div>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { sortBy as _sortBy } from 'lodash';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, TraceKeyValuePair, TraceLog } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport { TNil } from '../../types';\nimport { TraceLink } from '../../types/trace';\nimport { formatDuration } from '../utils';\n\nimport AccordianKeyValues from './AccordianKeyValues';\n\nimport { alignIcon } from '.';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    AccordianLogs: css({\n      label: 'AccordianLogs',\n      border: `1px solid ${autoColor(theme, '#d8d8d8')}`,\n      position: 'relative',\n      marginBottom: '0.25rem',\n    }),\n    AccordianLogsHeader: css({\n      label: 'AccordianLogsHeader',\n      background: autoColor(theme, '#e4e4e4'),\n      color: 'inherit',\n      display: 'block',\n      padding: '0.25rem 0.5rem',\n      '&:hover': {\n        background: autoColor(theme, '#dadada'),\n      },\n    }),\n    AccordianLogsContent: css({\n      label: 'AccordianLogsContent',\n      background: autoColor(theme, '#f0f0f0'),\n      borderTop: `1px solid ${autoColor(theme, '#d8d8d8')}`,\n      padding: '0.5rem 0.5rem 0.25rem 0.5rem',\n    }),\n    AccordianLogsFooter: css({\n      label: 'AccordianLogsFooter',\n      color: autoColor(theme, '#999'),\n    }),\n    AccordianKeyValuesItem: css({\n      marginBottom: theme.spacing(0.5),\n    }),\n    parenthesis: css({\n      color: `${autoColor(theme, '#777')}`,\n    }),\n  };\n};\n\nexport type AccordianLogsProps = {\n  interactive?: boolean;\n  isOpen: boolean;\n  linksGetter?: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n  logs: TraceLog[];\n  onItemToggle?: (log: TraceLog) => void;\n  onToggle?: () => void;\n  openedItems?: Set<TraceLog>;\n  timestamp: number;\n};\n\nexport default function AccordianLogs({\n  interactive = true,\n  isOpen,\n  linksGetter,\n  logs,\n  openedItems,\n  onItemToggle,\n  onToggle,\n  timestamp,\n}: AccordianLogsProps) {\n  let arrow: React.ReactNode | null = null;\n  let HeaderComponent: 'span' | 'a' = 'span';\n  let headerProps: {} | null = null;\n  if (interactive) {\n    arrow = isOpen ? (\n      <Icon name={'angle-down'} className={alignIcon} />\n    ) : (\n      <Icon name={'angle-right'} className=\"u-align-icon\" />\n    );\n    HeaderComponent = 'a';\n    headerProps = {\n      'aria-checked': isOpen,\n      onClick: onToggle,\n      role: 'switch',\n    };\n  }\n\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={styles.AccordianLogs}>\n      <HeaderComponent className={styles.AccordianLogsHeader} {...headerProps}>\n        {arrow} <strong>Events</strong> ({logs.length})\n      </HeaderComponent>\n      {isOpen && (\n        <div className={styles.AccordianLogsContent}>\n          {_sortBy(logs, 'timestamp').map((log, i) => {\n            const formattedDuration = formatDuration(log.timestamp - timestamp);\n            const truncateLogNameInSummary = log.name && log.name.length > 20;\n            const formattedLogName = log.name && truncateLogNameInSummary ? log.name.slice(0, 20) + '...' : log.name;\n            const label = formattedLogName ? (\n              <span>\n                {formattedDuration} <span>({formattedLogName})</span>\n              </span>\n            ) : (\n              formattedDuration\n            );\n            return (\n              <AccordianKeyValues\n                // `i` is necessary in the key because timestamps can repeat\n                key={`${log.timestamp}-${i}`}\n                className={i < logs.length - 1 ? styles.AccordianKeyValuesItem : null}\n                data={log.fields || []}\n                logName={truncateLogNameInSummary ? log.name : undefined}\n                highContrast\n                interactive={interactive}\n                isOpen={openedItems ? openedItems.has(log) : false}\n                label={label}\n                linksGetter={linksGetter}\n                onToggle={interactive && onItemToggle ? () => onItemToggle(log) : null}\n              />\n            );\n          })}\n          <small className={styles.AccordianLogsFooter}>\n            Event timestamps are relative to the start time of the full trace.\n          </small>\n        </div>\n      )}\n    </div>\n  );\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { groupBy as _groupBy } from 'lodash';\nimport { useState } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { Popover } from '../common/Popover';\nimport { TraceSpan, TNil, CriticalPathSection } from '../types';\n\nimport AccordianLogs from './SpanDetail/AccordianLogs';\nimport { ViewedBoundsFunctionType } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      label: 'wrapper',\n      bottom: 0,\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      overflow: 'hidden',\n      zIndex: 0,\n    }),\n    bar: css({\n      label: 'bar',\n      borderRadius: theme.shape.radius.default,\n      minWidth: '2px',\n      position: 'absolute',\n      height: '36%',\n      top: '32%',\n    }),\n    rpc: css({\n      label: 'rpc',\n      position: 'absolute',\n      top: '35%',\n      bottom: '35%',\n      zIndex: 1,\n    }),\n    label: css({\n      label: 'label',\n      color: '#aaa',\n      fontSize: '12px',\n      fontFamily: \"'Helvetica Neue', Helvetica, Arial, sans - serif\",\n      lineHeight: '1em',\n      whiteSpace: 'nowrap',\n      padding: '0 0.5em',\n      position: 'absolute',\n    }),\n    logMarker: css({\n      label: 'logMarker',\n      backgroundColor: autoColor(theme, '#2c3235'),\n      cursor: 'pointer',\n      height: '60%',\n      minWidth: '1px',\n      position: 'absolute',\n      top: '20%',\n      '&:hover': {\n        backgroundColor: autoColor(theme, '#464c54'),\n      },\n      '&::before, &::after': {\n        content: \"''\",\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        border: '1px solid transparent',\n      },\n      '&::after': {\n        left: 0,\n      },\n    }),\n    criticalPath: css({\n      position: 'absolute',\n      top: '45%',\n      height: '11%',\n      zIndex: 2,\n      overflow: 'hidden',\n      background: autoColor(theme, '#f1f1f1'),\n      borderLeft: `1px solid ${autoColor(theme, '#2c3235')}`,\n      borderRight: `1px solid ${autoColor(theme, '#2c3235')}`,\n    }),\n  };\n};\n\nexport type Props = {\n  color: string;\n  onClick?: (evt: React.MouseEvent<HTMLDivElement>) => void;\n  viewEnd: number;\n  viewStart: number;\n  getViewedBounds: ViewedBoundsFunctionType;\n  rpc:\n    | {\n        viewStart: number;\n        viewEnd: number;\n        color: string;\n      }\n    | TNil;\n  traceStartTime: number;\n  span: TraceSpan;\n  className?: string;\n  labelClassName?: string;\n  longLabel: string;\n  shortLabel: string;\n  criticalPath: CriticalPathSection[];\n};\n\nfunction toPercent(value: number) {\n  return `${(value * 100).toFixed(1)}%`;\n}\n\nfunction toPercentInDecimal(value: number) {\n  return `${value * 100}%`;\n}\n\nfunction SpanBar({\n  criticalPath,\n  viewEnd,\n  viewStart,\n  getViewedBounds,\n  color,\n  shortLabel,\n  longLabel,\n  onClick,\n  rpc,\n  traceStartTime,\n  span,\n  className,\n  labelClassName,\n}: Props) {\n  const [label, setLabel] = useState(shortLabel);\n  const setShortLabel = () => setLabel(shortLabel);\n  const setLongLabel = () => setLabel(longLabel);\n\n  // group logs based on timestamps\n  const logGroups = _groupBy(span.logs, (log) => {\n    const posPercent = getViewedBounds(log.timestamp, log.timestamp).start;\n    // round to the nearest 0.2%\n    return toPercent(Math.round(posPercent * 500) / 500);\n  });\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div\n      className={cx(styles.wrapper, className)}\n      onBlur={setShortLabel}\n      onClick={onClick}\n      onFocus={setLongLabel}\n      onMouseOut={setShortLabel}\n      onMouseOver={setLongLabel}\n      aria-hidden\n      data-testid={selectors.components.TraceViewer.spanBar}\n    >\n      <div\n        aria-label={label}\n        className={cx(styles.bar)}\n        style={{\n          background: color,\n          left: toPercent(viewStart),\n          width: toPercent(viewEnd - viewStart),\n        }}\n      >\n        <div className={cx(styles.label, labelClassName)} data-testid=\"SpanBar--label\">\n          {label}\n        </div>\n      </div>\n      <div>\n        {Object.keys(logGroups).map((positionKey) => (\n          <Popover\n            key={positionKey}\n            content={\n              <AccordianLogs interactive={false} isOpen logs={logGroups[positionKey]} timestamp={traceStartTime} />\n            }\n          >\n            <div data-testid=\"SpanBar--logMarker\" className={cx(styles.logMarker)} style={{ left: positionKey }} />\n          </Popover>\n        ))}\n      </div>\n      {rpc && (\n        <div\n          className={cx(styles.rpc)}\n          style={{\n            background: rpc.color,\n            left: toPercent(rpc.viewStart),\n            width: toPercent(rpc.viewEnd - rpc.viewStart),\n          }}\n        />\n      )}\n      {criticalPath?.map((each, index) => {\n        const critcalPathViewBounds = getViewedBounds(each.section_start, each.section_end);\n        const criticalPathViewStart = critcalPathViewBounds.start;\n        const criticalPathViewEnd = critcalPathViewBounds.end;\n        const key = `${each.spanId}-${index}`;\n        return (\n          <Tooltip\n            key={key}\n            placement=\"top\"\n            content={\n              <div>\n                A segment on the <em>critical path</em> of the overall trace / request / workflow.\n              </div>\n            }\n          >\n            <div\n              data-testid=\"SpanBar--criticalPath\"\n              className={styles.criticalPath}\n              style={{\n                left: toPercentInDecimal(criticalPathViewStart),\n                width: toPercentInDecimal(criticalPathViewEnd - criticalPathViewStart),\n              }}\n            />\n          </Tooltip>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(SpanBar);\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useStyles2, MenuItem, Icon, ContextMenu } from '@grafana/ui';\n\nimport { SpanLinkDef } from '../types/links';\n\ninterface SpanLinksProps {\n  links: SpanLinkDef[];\n  datasourceType: string;\n  color: string;\n}\n\nconst renderMenuItems = (\n  links: SpanLinkDef[],\n  styles: ReturnType<typeof getStyles>,\n  closeMenu: () => void,\n  datasourceType: string\n) => {\n  links.sort(function (linkA, linkB) {\n    return (linkA.title || 'link').toLowerCase().localeCompare((linkB.title || 'link').toLowerCase());\n  });\n\n  return links.map((link, i) => (\n    <MenuItem\n      key={i}\n      label={link.title || 'Link'}\n      onClick={\n        link.onClick\n          ? (event) => {\n              reportInteraction(`grafana_traces_trace_view_span_link_clicked`, {\n                datasourceType: datasourceType,\n                grafana_version: config.buildInfo.version,\n                type: link.type,\n                location: 'menu',\n              });\n              event?.preventDefault();\n              link.onClick!(event);\n              closeMenu();\n            }\n          : undefined\n      }\n      url={link.href}\n      target={link.target}\n      className={styles.menuItem}\n    />\n  ));\n};\n\nexport const SpanLinksMenu = ({ links, datasourceType, color }: SpanLinksProps) => {\n  const styles = useStyles2(() => getStyles(color));\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\n\n  const closeMenu = () => setIsMenuOpen(false);\n\n  return (\n    <div data-testid=\"SpanLinksMenu\" className={styles.wrapper}>\n      <button\n        onClick={(e) => {\n          setIsMenuOpen(true);\n          setMenuPosition({\n            x: e.pageX,\n            y: e.pageY,\n          });\n        }}\n        className={styles.button}\n      >\n        <Icon name=\"link\" className={styles.icon} />\n      </button>\n\n      {isMenuOpen ? (\n        <ContextMenu\n          onClose={() => setIsMenuOpen(false)}\n          renderMenuItems={() => renderMenuItems(links, styles, closeMenu, datasourceType)}\n          focusOnOpen={false}\n          x={menuPosition.x}\n          y={menuPosition.y}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst getStyles = (color: string) => ({\n  wrapper: css({\n    border: 'none',\n    background: `${color}10`,\n    borderBottom: `1px solid ${color}CF`,\n    paddingRight: '4px',\n  }),\n  button: css({\n    background: 'transparent',\n    border: 'none',\n    padding: 0,\n  }),\n  icon: css({\n    background: 'transparent',\n    border: 'none',\n    padding: 0,\n  }),\n  menuItem: css({\n    maxWidth: '60ch',\n    overflow: 'hidden',\n  }),\n});\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { find as _find, get as _get } from 'lodash';\n\nimport { TNil, TraceSpan } from '../types';\n\nfunction getFirstAncestor(span: TraceSpan): TraceSpan | TNil {\n  return _get(\n    _find(\n      span.references,\n      ({ span: ref, refType }) => ref && ref.spanID && (refType === 'CHILD_OF' || refType === 'FOLLOWS_FROM')\n    ),\n    'span'\n  );\n}\n\nexport default function spanAncestorIds(span: TraceSpan | TNil): string[] {\n  const ancestorIDs: string[] = [];\n  if (!span) {\n    return ancestorIDs;\n  }\n  let ref = getFirstAncestor(span);\n  while (ref) {\n    ancestorIDs.push(ref.spanID);\n    ref = getFirstAncestor(ref);\n  }\n  return ancestorIDs;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { get as _get } from 'lodash';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, stylesFactory, withTheme2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { TraceSpan } from '../types';\nimport spanAncestorIds from '../utils/span-ancestor-ids';\n\nexport const getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  SpanTreeOffset: css({\n    label: 'SpanTreeOffset',\n    color: autoColor(theme, '#000'),\n    position: 'relative',\n  }),\n  SpanTreeOffsetParent: css({\n    label: 'SpanTreeOffsetParent',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  }),\n  indentGuide: css({\n    label: 'indentGuide',\n    /* The size of the indentGuide is based off of the iconWrapper */\n    paddingRight: '1rem',\n    height: '100%',\n    display: 'inline-flex',\n    [theme.transitions.handleMotion('no-preference')]: {\n      transition: 'padding 300ms ease-out',\n    },\n    '&::before': {\n      content: '\"\"',\n      paddingLeft: '1px',\n      backgroundColor: autoColor(theme, 'lightgrey'),\n    },\n  }),\n  indentGuideActive: css({\n    label: 'indentGuideActive',\n    '&::before': {\n      backgroundColor: autoColor(theme, '#777'),\n    },\n  }),\n  indentGuideThin: css({\n    paddingRight: '0.3rem',\n  }),\n  iconWrapper: css({\n    label: 'iconWrapper',\n    position: 'absolute',\n    right: 0,\n  }),\n}));\n\nexport type TProps = {\n  childrenVisible?: boolean;\n  onClick?: () => void;\n  span: TraceSpan;\n  showChildrenIcon?: boolean;\n\n  hoverIndentGuideIds: Set<string>;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  theme: GrafanaTheme2;\n  visibleSpanIds: string[];\n};\n\nexport class UnthemedSpanTreeOffset extends React.PureComponent<TProps> {\n  static displayName = 'UnthemedSpanTreeOffset';\n\n  ancestorIds: string[];\n\n  static defaultProps = {\n    childrenVisible: false,\n    showChildrenIcon: true,\n  };\n\n  constructor(props: TProps) {\n    super(props);\n\n    this.ancestorIds = spanAncestorIds(props.span);\n    // Some traces have multiple root-level spans, this connects them all under one guideline and adds the\n    // necessary padding for the collapse icon on root-level spans.\n    this.ancestorIds.push('root');\n\n    this.ancestorIds.reverse();\n  }\n\n  /**\n   * If the mouse leaves to anywhere except another span with the same ancestor id, this span's ancestor id is\n   * removed from the set of hoverIndentGuideIds.\n   *\n   * @param {Object} event - React Synthetic event tied to mouseleave. Includes the related target which is\n   *     the element the user is now hovering.\n   * @param {string} ancestorId - The span id that the user was hovering over.\n   */\n  handleMouseLeave = (event: React.MouseEvent<HTMLSpanElement>, ancestorId: string) => {\n    if (\n      !(event.relatedTarget instanceof HTMLSpanElement) ||\n      _get(event, 'relatedTarget.dataset.ancestorId') !== ancestorId\n    ) {\n      this.props.removeHoverIndentGuideId(ancestorId);\n    }\n  };\n\n  /**\n   * If the mouse entered this span from anywhere except another span with the same ancestor id, this span's\n   * ancestorId is added to the set of hoverIndentGuideIds.\n   *\n   * @param {Object} event - React Synthetic event tied to mouseenter. Includes the related target which is\n   *     the last element the user was hovering.\n   * @param {string} ancestorId - The span id that the user is now hovering over.\n   */\n  handleMouseEnter = (event: React.MouseEvent<HTMLSpanElement>, ancestorId: string) => {\n    if (\n      !(event.relatedTarget instanceof HTMLSpanElement) ||\n      _get(event, 'relatedTarget.dataset.ancestorId') !== ancestorId\n    ) {\n      this.props.addHoverIndentGuideId(ancestorId);\n    }\n  };\n\n  render() {\n    const { childrenVisible, onClick, showChildrenIcon, span, theme, visibleSpanIds } = this.props;\n    const { hasChildren, spanID } = span;\n    const wrapperProps = hasChildren ? { onClick, role: 'switch', 'aria-checked': childrenVisible } : null;\n    const icon =\n      showChildrenIcon &&\n      hasChildren &&\n      (childrenVisible ? (\n        <Icon name={'angle-down'} data-testid=\"icon-arrow-down\" size={'sm'} />\n      ) : (\n        <Icon name={'angle-right'} data-testid=\"icon-arrow-right\" size={'sm'} />\n      ));\n    const styles = getStyles(theme);\n\n    return (\n      <span className={cx(styles.SpanTreeOffset, { [styles.SpanTreeOffsetParent]: hasChildren })} {...wrapperProps}>\n        {this.ancestorIds.map((ancestorId, index) => (\n          <span\n            key={ancestorId}\n            className={cx(styles.indentGuide, {\n              [styles.indentGuideActive]: this.props.hoverIndentGuideIds.has(ancestorId),\n              [styles.indentGuideThin]:\n                index !== this.ancestorIds.length - 1 && ancestorId !== 'root' && !visibleSpanIds.includes(ancestorId),\n            })}\n            data-ancestor-id={ancestorId}\n            data-testid=\"SpanTreeOffset--indentGuide\"\n            onMouseEnter={(event) => this.handleMouseEnter(event, ancestorId)}\n            onMouseLeave={(event) => this.handleMouseLeave(event, ancestorId)}\n          />\n        ))}\n        {icon && (\n          <span\n            className={styles.iconWrapper}\n            onMouseEnter={(event) => this.handleMouseEnter(event, spanID)}\n            onMouseLeave={(event) => this.handleMouseLeave(event, spanID)}\n            data-testid=\"icon-wrapper\"\n          >\n            {icon}\n          </span>\n        )}\n      </span>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedSpanTreeOffset);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, keyframes } from '@emotion/css';\nimport cx from 'classnames';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, TraceKeyValuePair } from '@grafana/data';\nimport { DURATION, NONE, TAG } from '@grafana/o11y-ds-frontend';\nimport { Icon, stylesFactory, withTheme2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { SpanBarOptions, SpanLinkFunc, TraceSpan, TNil, CriticalPathSection } from '../types';\n\nimport SpanBar from './SpanBar';\nimport { SpanLinksMenu } from './SpanLinks';\nimport SpanTreeOffset from './SpanTreeOffset';\nimport Ticks from './Ticks';\nimport TimelineRow from './TimelineRow';\nimport { formatDuration, ViewedBoundsFunctionType } from './utils';\n\nconst spanBarClassName = 'spanBar';\nconst spanBarLabelClassName = 'spanBarLabel';\nconst nameWrapperClassName = 'nameWrapper';\nconst nameWrapperMatchingFilterClassName = 'nameWrapperMatchingFilter';\nconst viewClassName = 'jaegerView';\nconst nameColumnClassName = 'nameColumn';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2, showSpanFilterMatchesOnly: boolean) => {\n  const animations = {\n    label: 'flash',\n    flash: keyframes`\n    from {\n      background-color: ${autoColor(theme, '#68b9ff')};\n    }\n    to {\n      background-color: 'default';\n    }\n  `,\n  };\n  const backgroundColor = showSpanFilterMatchesOnly ? '' : autoColor(theme, '#fffce4');\n\n  return {\n    nameWrapper: css({\n      label: 'nameWrapper',\n      lineHeight: '27px',\n      overflow: 'hidden',\n      display: 'flex',\n    }),\n    nameWrapperMatchingFilter: css({\n      label: 'nameWrapperMatchingFilter',\n      backgroundColor: backgroundColor,\n    }),\n    nameColumn: css({\n      label: 'nameColumn',\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      zIndex: 1,\n      '&:hover': {\n        zIndex: 1,\n      },\n    }),\n    endpointName: css({\n      label: 'endpointName',\n      color: autoColor(theme, '#484848'),\n      fontSize: '0.9em',\n    }),\n    view: css({\n      label: 'view',\n      position: 'relative',\n    }),\n    viewExpanded: css({\n      label: 'viewExpanded',\n      background: autoColor(theme, '#f8f8f8'),\n      outline: `1px solid ${autoColor(theme, '#ddd')}`,\n    }),\n    viewExpandedAndMatchingFilter: css({\n      label: 'viewExpandedAndMatchingFilter',\n      background: autoColor(theme, '#fff3d7'),\n      outline: `1px solid ${autoColor(theme, '#ddd')}`,\n    }),\n    row: css({\n      label: 'row',\n      fontSize: '0.9em',\n      [`&:hover .${spanBarClassName}`]: {\n        opacity: 1,\n      },\n      [`&:hover .${spanBarLabelClassName}`]: {\n        color: autoColor(theme, '#000'),\n      },\n      [`&:hover .${nameWrapperClassName}`]: {\n        background: `linear-gradient(\n          90deg,\n          ${autoColor(theme, '#fafafa')},\n          ${autoColor(theme, '#f8f8f8')} 75%,\n          ${autoColor(theme, '#eee')}\n        )`,\n      },\n      [`&:hover .${viewClassName}`]: {\n        backgroundColor: autoColor(theme, '#f5f5f5'),\n        outline: `1px solid ${autoColor(theme, '#ddd')}`,\n      },\n    }),\n    rowClippingLeft: css({\n      label: 'rowClippingLeft',\n      [`& .${nameColumnClassName}::before`]: {\n        content: '\" \"',\n        height: '100%',\n        position: 'absolute',\n        width: '6px',\n        backgroundImage: `linear-gradient(\n          to right,\n          ${autoColor(theme, 'rgba(25, 25, 25, 0.25)')},\n          ${autoColor(theme, 'rgba(32, 32, 32, 0)')}\n        )`,\n        left: '100%',\n        zIndex: -1,\n      },\n    }),\n    rowClippingRight: css({\n      label: 'rowClippingRight',\n      [`& .${viewClassName}::before`]: {\n        content: '\" \"',\n        height: '100%',\n        position: 'absolute',\n        width: '6px',\n        backgroundImage: `linear-gradient(\n          to left,\n          ${autoColor(theme, 'rgba(25, 25, 25, 0.25)')},\n          ${autoColor(theme, 'rgba(25, 25, 25, 0.25)')}\n        )`,\n        right: '0%',\n        zIndex: 1,\n      },\n    }),\n    rowExpanded: css({\n      label: 'rowExpanded',\n      [`& .${spanBarClassName}`]: {\n        opacity: 1,\n      },\n      [`& .${spanBarLabelClassName}`]: {\n        color: autoColor(theme, '#000'),\n      },\n      [`& .${nameWrapperClassName}, &:hover .${nameWrapperClassName}`]: {\n        background: autoColor(theme, '#f0f0f0'),\n        boxShadow: `0 1px 0 ${autoColor(theme, '#ddd')}`,\n      },\n      [`& .${nameWrapperMatchingFilterClassName}`]: {\n        background: autoColor(theme, '#fff3d7'),\n      },\n      [`&:hover .${viewClassName}`]: {\n        background: autoColor(theme, '#eee'),\n      },\n    }),\n    rowMatchingFilter: css({\n      label: 'rowMatchingFilter',\n      // background-color: ${autoColor(theme, '#fffbde')};\n      [`&:hover .${nameWrapperClassName}`]: {\n        background: `linear-gradient(\n          90deg,\n          ${autoColor(theme, '#fffbde')},\n          ${autoColor(theme, '#fffbde')} 75%,\n          ${autoColor(theme, '#f7f1c6')}\n        )`,\n      },\n      [`&:hover .${viewClassName}`]: {\n        backgroundColor: autoColor(theme, '#f7f1c6'),\n        outline: `1px solid ${autoColor(theme, '#ddd')}`,\n      },\n    }),\n    rowFocused: css({\n      label: 'rowFocused',\n      backgroundColor: autoColor(theme, '#cbe7ff'),\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        animation: `${animations.flash} 1s cubic-bezier(0.12, 0, 0.39, 0)`,\n      },\n      [`& .${nameWrapperClassName}, .${viewClassName}, .${nameWrapperMatchingFilterClassName}`]: {\n        backgroundColor: autoColor(theme, '#cbe7ff'),\n        animation: `${animations.flash} 1s cubic-bezier(0.12, 0, 0.39, 0)`,\n      },\n      [`& .${spanBarClassName}`]: {\n        opacity: 1,\n      },\n      [`& .${spanBarLabelClassName}`]: {\n        color: autoColor(theme, '#000'),\n      },\n      ['&:hover .${nameWrapperClassName}, :hover .${viewClassName}']: {\n        background: autoColor(theme, '#d5ebff'),\n        boxShadow: `0 1px 0 ${autoColor(theme, '#ddd')}`,\n      },\n    }),\n\n    rowExpandedAndMatchingFilter: css({\n      label: 'rowExpandedAndMatchingFilter',\n      [`&:hover .${viewClassName}`]: {\n        background: autoColor(theme, '#ffeccf'),\n      },\n    }),\n\n    name: css({\n      label: 'name',\n      color: autoColor(theme, '#000'),\n      cursor: 'pointer',\n      flex: '1 1 auto',\n      outline: 'none',\n      overflowY: 'hidden',\n      overflowX: 'auto',\n      paddingLeft: '4px',\n      paddingRight: '0.25em',\n      position: 'relative',\n      '-ms-overflow-style': 'none',\n      scrollbarWidth: 'none',\n      '&::-webkit-scrollbar': {\n        display: 'none',\n      },\n      '&:focus': {\n        textDecoration: 'none',\n      },\n      '&:hover > span': {\n        color: autoColor(theme, '#000'),\n      },\n      textAlign: 'left',\n      background: 'transparent',\n      border: 'none',\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n    }),\n    nameDetailExpanded: css({\n      label: 'nameDetailExpanded',\n      '&::before': {\n        bottom: 0,\n      },\n    }),\n    svcName: css({\n      label: 'svcName',\n      fontSize: '0.9em',\n      fontWeight: 'bold',\n      marginRight: '0.25rem',\n    }),\n    svcNameChildrenCollapsed: css({\n      label: 'svcNameChildrenCollapsed',\n      fontWeight: 'bold',\n      fontStyle: 'italic',\n    }),\n    errorIcon: css({\n      label: 'errorIcon',\n      // eslint-disable-next-line @grafana/no-border-radius-literal\n      borderRadius: '6.5px',\n      color: autoColor(theme, '#fff'),\n      fontSize: '0.85em',\n      marginRight: '0.25rem',\n      padding: '1px',\n    }),\n    rpcColorMarker: css({\n      label: 'rpcColorMarker',\n      // eslint-disable-next-line @grafana/no-border-radius-literal\n      borderRadius: '6.5px',\n      display: 'inline-block',\n      fontSize: '0.85em',\n      height: '1em',\n      marginRight: '0.25rem',\n      padding: '1px',\n      width: '1em',\n      verticalAlign: 'middle',\n    }),\n    labelRight: css({\n      label: 'labelRight',\n      left: '100%',\n    }),\n    labelLeft: css({\n      label: 'labelLeft',\n      right: '100%',\n    }),\n  };\n});\n\nexport type SpanBarRowProps = {\n  className?: string;\n  theme: GrafanaTheme2;\n  color: string;\n  spanBarOptions: SpanBarOptions | undefined;\n  columnDivision: number;\n  isChildrenExpanded: boolean;\n  isDetailExpanded: boolean;\n  isMatchingFilter: boolean;\n  isFocused: boolean;\n  showSpanFilterMatchesOnly: boolean;\n  onDetailToggled: (spanID: string) => void;\n  onChildrenToggled: (spanID: string) => void;\n  numTicks: number;\n  showServiceName: boolean;\n  rpc?:\n    | {\n        viewStart: number;\n        viewEnd: number;\n        color: string;\n        operationName: string;\n        serviceName: string;\n      }\n    | TNil;\n  noInstrumentedServer?:\n    | {\n        color: string;\n        serviceName: string;\n      }\n    | TNil;\n  showErrorIcon: boolean;\n  getViewedBounds: ViewedBoundsFunctionType;\n  traceStartTime: number;\n  span: TraceSpan;\n  hoverIndentGuideIds: Set<string>;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  clippingLeft?: boolean;\n  clippingRight?: boolean;\n  createSpanLink?: SpanLinkFunc;\n  datasourceType: string;\n  visibleSpanIds: string[];\n  criticalPath: CriticalPathSection[];\n};\n\n/**\n * This was originally a stateless function, but changing to a PureComponent\n * reduced the render time of expanding a span row detail by ~50%. This is\n * even true in the case where the stateless function has the same prop types as\n * this class and arrow functions are created in the stateless function as\n * handlers to the onClick props. E.g. for now, the PureComponent is more\n * performance than the stateless function.\n */\nexport class UnthemedSpanBarRow extends React.PureComponent<SpanBarRowProps> {\n  static displayName = 'UnthemedSpanBarRow';\n  static defaultProps: Partial<SpanBarRowProps> = {\n    className: '',\n    rpc: null,\n  };\n\n  _detailToggle = () => {\n    this.props.onDetailToggled(this.props.span.spanID);\n  };\n\n  _childrenToggle = () => {\n    this.props.onChildrenToggled(this.props.span.spanID);\n  };\n\n  render() {\n    const {\n      className,\n      color,\n      spanBarOptions,\n      columnDivision,\n      isChildrenExpanded,\n      isDetailExpanded,\n      isMatchingFilter,\n      showSpanFilterMatchesOnly,\n      isFocused,\n      numTicks,\n      rpc,\n      noInstrumentedServer,\n      showErrorIcon,\n      getViewedBounds,\n      traceStartTime,\n      span,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      clippingLeft,\n      clippingRight,\n      theme,\n      createSpanLink,\n      datasourceType,\n      showServiceName,\n      visibleSpanIds,\n      criticalPath,\n    } = this.props;\n    const {\n      duration,\n      hasChildren: isParent,\n      operationName,\n      process: { serviceName },\n    } = span;\n    const label = formatDuration(duration);\n\n    const viewBounds = getViewedBounds(span.startTime, span.startTime + span.duration);\n    const viewStart = viewBounds.start;\n    const viewEnd = viewBounds.end;\n    const styles = getStyles(theme, showSpanFilterMatchesOnly);\n\n    const labelDetail = `${serviceName}::${operationName}`;\n    let longLabel;\n    let hintClassName;\n    if (viewStart > 1 - viewEnd) {\n      longLabel = `${labelDetail} | ${label}`;\n      hintClassName = styles.labelLeft;\n    } else {\n      longLabel = `${label} | ${labelDetail}`;\n      hintClassName = styles.labelRight;\n    }\n\n    return (\n      <TimelineRow\n        className={cx(\n          styles.row,\n          {\n            [styles.rowExpanded]: isDetailExpanded,\n            [styles.rowMatchingFilter]: isMatchingFilter,\n            [styles.rowExpandedAndMatchingFilter]: isMatchingFilter && isDetailExpanded,\n            [styles.rowFocused]: isFocused,\n            [styles.rowClippingLeft]: clippingLeft,\n            [styles.rowClippingRight]: clippingRight,\n          },\n          className\n        )}\n      >\n        <TimelineRow.Cell className={cx(styles.nameColumn, nameColumnClassName)} width={columnDivision}>\n          <div\n            className={cx(styles.nameWrapper, nameWrapperClassName, {\n              [styles.nameWrapperMatchingFilter]: isMatchingFilter,\n              nameWrapperMatchingFilter: isMatchingFilter,\n            })}\n          >\n            <SpanTreeOffset\n              onClick={isParent ? this._childrenToggle : undefined}\n              childrenVisible={isChildrenExpanded}\n              span={span}\n              hoverIndentGuideIds={hoverIndentGuideIds}\n              addHoverIndentGuideId={addHoverIndentGuideId}\n              removeHoverIndentGuideId={removeHoverIndentGuideId}\n              visibleSpanIds={visibleSpanIds}\n            />\n            <button\n              type=\"button\"\n              className={cx(styles.name, { [styles.nameDetailExpanded]: isDetailExpanded })}\n              aria-checked={isDetailExpanded}\n              title={labelDetail}\n              onClick={this._detailToggle}\n              role=\"switch\"\n              style={{ background: `${color}10`, borderBottomColor: `${color}CF` }}\n              tabIndex={0}\n            >\n              {showErrorIcon && (\n                <Icon\n                  name={'exclamation-circle'}\n                  style={{\n                    backgroundColor: span.errorIconColor\n                      ? autoColor(theme, span.errorIconColor)\n                      : autoColor(theme, '#db2828'),\n                  }}\n                  className={styles.errorIcon}\n                />\n              )}\n              {showServiceName && (\n                <span\n                  className={cx(styles.svcName, {\n                    [styles.svcNameChildrenCollapsed]: isParent && !isChildrenExpanded,\n                  })}\n                >\n                  {`${serviceName} `}\n                </span>\n              )}\n              {rpc && (\n                <span>\n                  <Icon name={'arrow-right'} />{' '}\n                  <i className={styles.rpcColorMarker} style={{ background: rpc.color }} />\n                  {rpc.serviceName}\n                </span>\n              )}\n              {noInstrumentedServer && (\n                <span>\n                  <Icon name={'arrow-right'} />{' '}\n                  <i className={styles.rpcColorMarker} style={{ background: noInstrumentedServer.color }} />\n                  {noInstrumentedServer.serviceName}\n                </span>\n              )}\n              <span className={styles.endpointName}>{rpc ? rpc.operationName : operationName}</span>\n              <span className={styles.endpointName}> {this.getSpanBarLabel(span, spanBarOptions, label)}</span>\n            </button>\n            {createSpanLink &&\n              (() => {\n                const links = createSpanLink(span);\n                const count = links?.length || 0;\n                if (links && count === 1) {\n                  if (!links[0]) {\n                    return null;\n                  }\n\n                  return (\n                    <a\n                      href={links[0].href}\n                      // Needs to have target otherwise preventDefault would not work due to angularRouter.\n                      target={'_blank'}\n                      style={{ background: `${color}10`, borderBottom: `1px solid ${color}CF`, paddingRight: '4px' }}\n                      rel=\"noopener noreferrer\"\n                      onClick={\n                        links[0].onClick\n                          ? (event) => {\n                              if (!(event.ctrlKey || event.metaKey || event.shiftKey) && links[0].onClick) {\n                                event.preventDefault();\n                                links[0].onClick(event);\n                              }\n                            }\n                          : undefined\n                      }\n                    >\n                      {links[0].content}\n                    </a>\n                  );\n                } else if (links && count > 1) {\n                  return <SpanLinksMenu links={links} datasourceType={datasourceType} color={color} />;\n                } else {\n                  return null;\n                }\n              })()}\n          </div>\n        </TimelineRow.Cell>\n        <TimelineRow.Cell\n          className={cx(styles.view, viewClassName, {\n            [styles.viewExpanded]: isDetailExpanded,\n            [styles.viewExpandedAndMatchingFilter]: isMatchingFilter && isDetailExpanded,\n          })}\n          data-testid=\"span-view\"\n          style={{ cursor: 'pointer' }}\n          width={1 - columnDivision}\n          onClick={this._detailToggle}\n        >\n          <Ticks numTicks={numTicks} />\n          <SpanBar\n            criticalPath={criticalPath}\n            rpc={rpc}\n            viewStart={viewStart}\n            viewEnd={viewEnd}\n            getViewedBounds={getViewedBounds}\n            color={color}\n            shortLabel={label}\n            longLabel={longLabel}\n            traceStartTime={traceStartTime}\n            span={span}\n            labelClassName={`${spanBarLabelClassName} ${hintClassName}`}\n            className={spanBarClassName}\n          />\n        </TimelineRow.Cell>\n      </TimelineRow>\n    );\n  }\n\n  getSpanBarLabel = (span: TraceSpan, spanBarOptions: SpanBarOptions | undefined, duration: string) => {\n    const type = spanBarOptions?.type ?? '';\n\n    if (type === NONE) {\n      return '';\n    } else if (type === '' || type === DURATION) {\n      return `(${duration})`;\n    } else if (type === TAG) {\n      const tagKey = spanBarOptions?.tag?.trim() ?? '';\n      if (tagKey !== '' && span.tags) {\n        const tag = span.tags?.find((tag: TraceKeyValuePair) => {\n          return tag.key === tagKey;\n        });\n        if (tag) {\n          return `(${tag.value})`;\n        }\n\n        const process = span.process?.tags?.find((process: TraceKeyValuePair) => {\n          return process.key === tagKey;\n        });\n        if (process) {\n          return `(${process.value})`;\n        }\n      }\n    }\n\n    return '';\n  };\n}\n\nexport default withTheme2(UnthemedSpanBarRow);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport classNames from 'classnames';\nimport { PureComponent } from 'react';\n\nimport { GrafanaTheme2, LinkModel, TraceKeyValuePair, TraceLog } from '@grafana/data';\nimport { TraceToProfilesOptions } from '@grafana/o11y-ds-frontend';\nimport { TimeZone } from '@grafana/schema';\nimport { Button, clearButtonStyles, stylesFactory, withTheme2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { SpanLinkFunc } from '../types';\nimport { TraceSpan, TraceLink, TraceSpanReference } from '../types/trace';\n\nimport SpanDetail, { TraceFlameGraphs } from './SpanDetail';\nimport DetailState from './SpanDetail/DetailState';\nimport SpanTreeOffset from './SpanTreeOffset';\nimport TimelineRow from './TimelineRow';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    expandedAccent: css({\n      cursor: 'pointer',\n      height: '100%',\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '100%',\n      '&::before': {\n        borderLeft: '1px solid',\n        pointerEvents: 'none',\n        width: '1000px',\n      },\n      '&::after': {\n        borderRight: '1000px solid',\n        borderColor: 'inherit',\n        cursor: 'pointer',\n        opacity: 0.2,\n      },\n\n      /* border-color inherit must come AFTER other border declarations for accent */\n      '&::before, &::after': {\n        borderColor: 'inherit',\n        content: '\" \"',\n        position: 'absolute',\n        height: '100%',\n      },\n\n      '&:hover::after': {\n        opacity: 0.35,\n      },\n    }),\n    infoWrapper: css({\n      label: 'infoWrapper',\n      border: `1px solid ${autoColor(theme, '#d3d3d3')}`,\n      borderTop: '3px solid',\n      padding: '0.75rem',\n    }),\n  };\n});\n\nexport type SpanDetailRowProps = {\n  color: string;\n  columnDivision: number;\n  detailState: DetailState;\n  onDetailToggled: (spanID: string) => void;\n  linksGetter: (span: TraceSpan, links: TraceKeyValuePair[], index: number) => TraceLink[];\n  logItemToggle: (spanID: string, log: TraceLog) => void;\n  logsToggle: (spanID: string) => void;\n  processToggle: (spanID: string) => void;\n  referenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;\n  referencesToggle: (spanID: string) => void;\n  warningsToggle: (spanID: string) => void;\n  stackTracesToggle: (spanID: string) => void;\n  span: TraceSpan;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  timeZone: TimeZone;\n  tagsToggle: (spanID: string) => void;\n  traceStartTime: number;\n  traceDuration: number;\n  traceName: string;\n  hoverIndentGuideIds: Set<string>;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  theme: GrafanaTheme2;\n  createSpanLink?: SpanLinkFunc;\n  focusedSpanId?: string;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;\n  datasourceType: string;\n  visibleSpanIds: string[];\n  traceFlameGraphs: TraceFlameGraphs;\n  setTraceFlameGraphs: (flameGraphs: TraceFlameGraphs) => void;\n  setRedrawListView: (redraw: {}) => void;\n};\n\nexport class UnthemedSpanDetailRow extends PureComponent<SpanDetailRowProps> {\n  _detailToggle = () => {\n    this.props.onDetailToggled(this.props.span.spanID);\n  };\n\n  _linksGetter = (items: TraceKeyValuePair[], itemIndex: number) => {\n    const { linksGetter, span } = this.props;\n    return linksGetter(span, items, itemIndex);\n  };\n\n  render() {\n    const {\n      color,\n      columnDivision,\n      detailState,\n      logItemToggle,\n      logsToggle,\n      processToggle,\n      referenceItemToggle,\n      referencesToggle,\n      warningsToggle,\n      stackTracesToggle,\n      span,\n      traceToProfilesOptions,\n      timeZone,\n      tagsToggle,\n      traceStartTime,\n      traceDuration,\n      traceName,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      theme,\n      createSpanLink,\n      focusedSpanId,\n      createFocusSpanLink,\n      datasourceType,\n      visibleSpanIds,\n      traceFlameGraphs,\n      setTraceFlameGraphs,\n      setRedrawListView,\n    } = this.props;\n    const styles = getStyles(theme);\n    return (\n      <TimelineRow>\n        <TimelineRow.Cell width={columnDivision} style={{ overflow: 'hidden' }}>\n          <SpanTreeOffset\n            span={span}\n            showChildrenIcon={false}\n            hoverIndentGuideIds={hoverIndentGuideIds}\n            addHoverIndentGuideId={addHoverIndentGuideId}\n            removeHoverIndentGuideId={removeHoverIndentGuideId}\n            visibleSpanIds={visibleSpanIds}\n          />\n          <Button\n            fill=\"text\"\n            onClick={this._detailToggle}\n            className={classNames(styles.expandedAccent, clearButtonStyles(theme))}\n            style={{ borderColor: color }}\n            data-testid=\"detail-row-expanded-accent\"\n          ></Button>\n        </TimelineRow.Cell>\n        <TimelineRow.Cell width={1 - columnDivision}>\n          <div className={styles.infoWrapper} style={{ borderTopColor: color }}>\n            <SpanDetail\n              detailState={detailState}\n              linksGetter={this._linksGetter}\n              logItemToggle={logItemToggle}\n              logsToggle={logsToggle}\n              processToggle={processToggle}\n              referenceItemToggle={referenceItemToggle}\n              referencesToggle={referencesToggle}\n              warningsToggle={warningsToggle}\n              stackTracesToggle={stackTracesToggle}\n              span={span}\n              traceToProfilesOptions={traceToProfilesOptions}\n              timeZone={timeZone}\n              tagsToggle={tagsToggle}\n              traceStartTime={traceStartTime}\n              traceDuration={traceDuration}\n              traceName={traceName}\n              createSpanLink={createSpanLink}\n              focusedSpanId={focusedSpanId}\n              createFocusSpanLink={createFocusSpanLink}\n              datasourceType={datasourceType}\n              traceFlameGraphs={traceFlameGraphs}\n              setTraceFlameGraphs={setTraceFlameGraphs}\n              setRedrawListView={setRedrawListView}\n            />\n          </div>\n        </TimelineRow.Cell>\n      </TimelineRow>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedSpanDetailRow);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport * as React from 'react';\nimport { RefObject } from 'react';\n\nimport { GrafanaTheme2, LinkModel, TraceKeyValuePair, TraceLog } from '@grafana/data';\nimport { TraceToProfilesOptions } from '@grafana/o11y-ds-frontend';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { stylesFactory, withTheme2, ToolbarButton } from '@grafana/ui';\n\nimport { PEER_SERVICE } from '../constants/tag-keys';\nimport { CriticalPathSection, SpanBarOptions, SpanLinkFunc, TNil } from '../types';\nimport TTraceTimeline from '../types/TTraceTimeline';\nimport { TraceSpan, Trace, TraceLink, TraceSpanReference } from '../types/trace';\nimport { getColorByKey } from '../utils/color-generator';\n\nimport ListView from './ListView';\nimport SpanBarRow from './SpanBarRow';\nimport { TraceFlameGraphs } from './SpanDetail';\nimport DetailState from './SpanDetail/DetailState';\nimport SpanDetailRow from './SpanDetailRow';\nimport {\n  createViewedBoundsFunc,\n  findServerChildSpan,\n  isErrorSpan,\n  isKindClient,\n  spanContainsErredSpan,\n  ViewedBoundsFunctionType,\n} from './utils';\n\nconst getStyles = stylesFactory(() => ({\n  rowsWrapper: css({\n    width: '100%',\n  }),\n  row: css({\n    width: '100%',\n  }),\n  scrollToTopButton: css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '40px',\n    height: '40px',\n    position: 'absolute',\n    bottom: '30px',\n    right: '30px',\n    zIndex: 1,\n  }),\n}));\n\ntype RowState = {\n  isDetail: boolean;\n  span: TraceSpan;\n  spanIndex: number;\n};\n\ntype TVirtualizedTraceViewOwnProps = {\n  currentViewRangeTime: [number, number];\n  timeZone: TimeZone;\n  findMatchesIDs: Set<string> | TNil;\n  trace: Trace;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  spanBarOptions: SpanBarOptions | undefined;\n  linksGetter: (span: TraceSpan, items: TraceKeyValuePair[], itemIndex: number) => TraceLink[];\n  childrenToggle: (spanID: string) => void;\n  detailLogItemToggle: (spanID: string, log: TraceLog) => void;\n  detailLogsToggle: (spanID: string) => void;\n  detailWarningsToggle: (spanID: string) => void;\n  detailStackTracesToggle: (spanID: string) => void;\n  detailReferencesToggle: (spanID: string) => void;\n  detailReferenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;\n  detailProcessToggle: (spanID: string) => void;\n  detailTagsToggle: (spanID: string) => void;\n  detailToggle: (spanID: string) => void;\n  setSpanNameColumnWidth: (width: number) => void;\n  hoverIndentGuideIds: Set<string>;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  theme: GrafanaTheme2;\n  createSpanLink?: SpanLinkFunc;\n  scrollElement?: Element;\n  focusedSpanId?: string;\n  focusedSpanIdForSearch: string;\n  showSpanFilterMatchesOnly: boolean;\n  showCriticalPathSpansOnly: boolean;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;\n  topOfViewRef?: RefObject<HTMLDivElement>;\n  datasourceType: string;\n  headerHeight: number;\n  criticalPath: CriticalPathSection[];\n  traceFlameGraphs: TraceFlameGraphs;\n  setTraceFlameGraphs: (flameGraphs: TraceFlameGraphs) => void;\n  redrawListView: {};\n  setRedrawListView: (redraw: {}) => void;\n};\n\nexport type VirtualizedTraceViewProps = TVirtualizedTraceViewOwnProps & TTraceTimeline;\n\n// export for tests\nexport const DEFAULT_HEIGHTS = {\n  bar: 28,\n  detail: 161,\n  detailWithLogs: 197,\n};\n\nconst NUM_TICKS = 5;\nconst BUFFER_SIZE = 33;\n\nfunction generateRowStates(\n  spans: TraceSpan[] | TNil,\n  childrenHiddenIDs: Set<string>,\n  detailStates: Map<string, DetailState | TNil>,\n  findMatchesIDs: Set<string> | TNil,\n  showSpanFilterMatchesOnly: boolean,\n  showCriticalPathSpansOnly: boolean,\n  criticalPath: CriticalPathSection[]\n): RowState[] {\n  if (!spans) {\n    return [];\n  }\n  if (showSpanFilterMatchesOnly && findMatchesIDs) {\n    spans = spans.filter((span) => findMatchesIDs.has(span.spanID));\n  }\n\n  if (showCriticalPathSpansOnly && criticalPath) {\n    spans = spans.filter((span) => criticalPath.find((section) => section.spanId === span.spanID));\n  }\n\n  let collapseDepth = null;\n  const rowStates = [];\n  for (let i = 0; i < spans.length; i++) {\n    const span = spans[i];\n    const { spanID, depth } = span;\n    let hidden = false;\n    if (collapseDepth != null) {\n      if (depth >= collapseDepth) {\n        hidden = true;\n      } else {\n        collapseDepth = null;\n      }\n    }\n    if (hidden) {\n      continue;\n    }\n    if (childrenHiddenIDs.has(spanID)) {\n      collapseDepth = depth + 1;\n    }\n    rowStates.push({\n      span,\n      isDetail: false,\n      spanIndex: i,\n    });\n    if (detailStates.has(spanID)) {\n      rowStates.push({\n        span,\n        isDetail: true,\n        spanIndex: i,\n      });\n    }\n  }\n  return rowStates;\n}\n\nfunction getClipping(currentViewRange: [number, number]) {\n  const [zoomStart, zoomEnd] = currentViewRange;\n  return {\n    left: zoomStart > 0,\n    right: zoomEnd < 1,\n  };\n}\n\nfunction generateRowStatesFromTrace(\n  trace: Trace | TNil,\n  childrenHiddenIDs: Set<string>,\n  detailStates: Map<string, DetailState | TNil>,\n  findMatchesIDs: Set<string> | TNil,\n  showSpanFilterMatchesOnly: boolean,\n  showCriticalPathSpansOnly: boolean,\n  criticalPath: CriticalPathSection[]\n): RowState[] {\n  return trace\n    ? generateRowStates(\n        trace.spans,\n        childrenHiddenIDs,\n        detailStates,\n        findMatchesIDs,\n        showSpanFilterMatchesOnly,\n        showCriticalPathSpansOnly,\n        criticalPath\n      )\n    : [];\n}\n\nfunction childSpansMap(trace: Trace | TNil) {\n  const childSpansMap = new Map<string, string[]>();\n  if (!trace) {\n    return childSpansMap;\n  }\n  trace.spans.forEach((span) => {\n    if (span.childSpanIds.length) {\n      childSpansMap.set(span.spanID, span.childSpanIds);\n    }\n  });\n  return childSpansMap;\n}\n\nconst memoizedGenerateRowStates = memoizeOne(generateRowStatesFromTrace);\nconst memoizedViewBoundsFunc = memoizeOne(createViewedBoundsFunc, isEqual);\nconst memoizedGetClipping = memoizeOne(getClipping, isEqual);\nconst memoizedChildSpansMap = memoizeOne(childSpansMap);\n\n// export from tests\nexport class UnthemedVirtualizedTraceView extends React.Component<VirtualizedTraceViewProps> {\n  listView: ListView | TNil;\n  hasScrolledToSpan = false;\n\n  componentDidMount() {\n    this.scrollToSpan(this.props.headerHeight, this.props.focusedSpanId);\n  }\n\n  shouldComponentUpdate(nextProps: VirtualizedTraceViewProps) {\n    // If any prop updates, VirtualizedTraceViewImpl should update.\n    let key: keyof VirtualizedTraceViewProps;\n    for (key in nextProps) {\n      if (nextProps[key] !== this.props[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  componentDidUpdate(prevProps: Readonly<VirtualizedTraceViewProps>) {\n    const { headerHeight, focusedSpanId, focusedSpanIdForSearch } = this.props;\n\n    if (!this.hasScrolledToSpan) {\n      this.scrollToSpan(headerHeight, focusedSpanId);\n      this.hasScrolledToSpan = true;\n    }\n\n    if (focusedSpanId !== prevProps.focusedSpanId) {\n      this.scrollToSpan(headerHeight, focusedSpanId);\n    }\n\n    if (focusedSpanIdForSearch !== prevProps.focusedSpanIdForSearch) {\n      this.scrollToSpan(headerHeight, focusedSpanIdForSearch);\n    }\n  }\n\n  getRowStates(): RowState[] {\n    const {\n      childrenHiddenIDs,\n      detailStates,\n      trace,\n      findMatchesIDs,\n      showSpanFilterMatchesOnly,\n      showCriticalPathSpansOnly,\n      criticalPath,\n    } = this.props;\n    return memoizedGenerateRowStates(\n      trace,\n      childrenHiddenIDs,\n      detailStates,\n      findMatchesIDs,\n      showSpanFilterMatchesOnly,\n      showCriticalPathSpansOnly,\n      criticalPath\n    );\n  }\n\n  getClipping(): { left: boolean; right: boolean } {\n    const { currentViewRangeTime } = this.props;\n    return memoizedGetClipping(currentViewRangeTime);\n  }\n\n  getViewedBounds(): ViewedBoundsFunctionType {\n    const { currentViewRangeTime, trace } = this.props;\n    const [zoomStart, zoomEnd] = currentViewRangeTime;\n\n    return memoizedViewBoundsFunc({\n      min: trace.startTime,\n      max: trace.endTime,\n      viewStart: zoomStart,\n      viewEnd: zoomEnd,\n    });\n  }\n\n  getChildSpansMap() {\n    return memoizedChildSpansMap(this.props.trace);\n  }\n\n  getAccessors() {\n    const lv = this.listView;\n    if (!lv) {\n      throw new Error('ListView unavailable');\n    }\n    return {\n      getViewRange: this.getViewRange,\n      getSearchedSpanIDs: this.getSearchedSpanIDs,\n      getCollapsedChildren: this.getCollapsedChildren,\n      getViewHeight: lv.getViewHeight,\n      getBottomRowIndexVisible: lv.getBottomVisibleIndex,\n      getTopRowIndexVisible: lv.getTopVisibleIndex,\n      getRowPosition: lv.getRowPosition,\n      mapRowIndexToSpanIndex: this.mapRowIndexToSpanIndex,\n      mapSpanIndexToRowIndex: this.mapSpanIndexToRowIndex,\n    };\n  }\n\n  getViewRange = () => this.props.currentViewRangeTime;\n\n  getSearchedSpanIDs = () => this.props.findMatchesIDs;\n\n  getCollapsedChildren = () => this.props.childrenHiddenIDs;\n\n  mapRowIndexToSpanIndex = (index: number) => this.getRowStates()[index].spanIndex;\n\n  mapSpanIndexToRowIndex = (index: number) => {\n    const max = this.getRowStates().length;\n    for (let i = 0; i < max; i++) {\n      const { spanIndex } = this.getRowStates()[i];\n      if (spanIndex === index) {\n        return i;\n      }\n    }\n    throw new Error(`unable to find row for span index: ${index}`);\n  };\n\n  setListView = (listView: ListView | TNil) => {\n    this.listView = listView;\n  };\n\n  // use long form syntax to avert flow error\n  // https://github.com/facebook/flow/issues/3076#issuecomment-290944051\n  getKeyFromIndex = (index: number) => {\n    const { isDetail, span } = this.getRowStates()[index];\n    return `${span.traceID}--${span.spanID}--${isDetail ? 'detail' : 'bar'}`;\n  };\n\n  getIndexFromKey = (key: string) => {\n    const parts = key.split('--');\n    const _traceID = parts[0];\n    const _spanID = parts[1];\n    const _isDetail = parts[2] === 'detail';\n    const max = this.getRowStates().length;\n    for (let i = 0; i < max; i++) {\n      const { span, isDetail } = this.getRowStates()[i];\n      if (span.spanID === _spanID && span.traceID === _traceID && isDetail === _isDetail) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  getRowHeight = (index: number) => {\n    const { span, isDetail } = this.getRowStates()[index];\n    if (!isDetail) {\n      return DEFAULT_HEIGHTS.bar;\n    }\n    if (Array.isArray(span.logs) && span.logs.length) {\n      return DEFAULT_HEIGHTS.detailWithLogs;\n    }\n    return DEFAULT_HEIGHTS.detail;\n  };\n\n  renderRow = (key: string, style: React.CSSProperties, index: number, attrs: {}) => {\n    const { isDetail, span, spanIndex } = this.getRowStates()[index];\n\n    // Compute the list of currently visible span IDs to pass to the row renderers.\n    const start = Math.max((this.listView?.getTopVisibleIndex() || 0) - BUFFER_SIZE, 0);\n    const end = (this.listView?.getBottomVisibleIndex() || 0) + BUFFER_SIZE;\n    const visibleSpanIds = this.getVisibleSpanIds(start, end);\n\n    return isDetail\n      ? this.renderSpanDetailRow(span, key, style, attrs, visibleSpanIds)\n      : this.renderSpanBarRow(span, spanIndex, key, style, attrs, visibleSpanIds);\n  };\n\n  scrollToSpan = (headerHeight: number, spanID?: string) => {\n    if (spanID == null) {\n      return;\n    }\n    const i = this.getRowStates().findIndex((row) => row.span.spanID === spanID);\n    if (i >= 0) {\n      this.listView?.scrollToIndex(i, headerHeight);\n    }\n  };\n\n  renderSpanBarRow(\n    span: TraceSpan,\n    spanIndex: number,\n    key: string,\n    style: React.CSSProperties,\n    attrs: {},\n    visibleSpanIds: string[]\n  ) {\n    const { spanID, childSpanIds } = span;\n    const { serviceName } = span.process;\n    const {\n      childrenHiddenIDs,\n      childrenToggle,\n      detailStates,\n      detailToggle,\n      findMatchesIDs,\n      spanNameColumnWidth,\n      trace,\n      spanBarOptions,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      createSpanLink,\n      focusedSpanId,\n      focusedSpanIdForSearch,\n      showSpanFilterMatchesOnly,\n      theme,\n      datasourceType,\n      criticalPath,\n    } = this.props;\n    // to avert flow error\n    if (!trace) {\n      return null;\n    }\n    const color = getColorByKey(serviceName, theme);\n    const isCollapsed = childrenHiddenIDs.has(spanID);\n    const isDetailExpanded = detailStates.has(spanID);\n    const isMatchingFilter = findMatchesIDs ? findMatchesIDs.has(spanID) : false;\n    const isFocused = spanID === focusedSpanId || spanID === focusedSpanIdForSearch;\n    const showErrorIcon = isErrorSpan(span) || (isCollapsed && spanContainsErredSpan(trace.spans, spanIndex));\n\n    // Check for direct child \"server\" span if the span is a \"client\" span.\n    let rpc = null;\n    if (isCollapsed) {\n      const rpcSpan = findServerChildSpan(trace.spans.slice(spanIndex));\n      if (rpcSpan) {\n        const rpcViewBounds = this.getViewedBounds()(rpcSpan.startTime, rpcSpan.startTime + rpcSpan.duration);\n        rpc = {\n          color: getColorByKey(rpcSpan.process.serviceName, theme),\n          operationName: rpcSpan.operationName,\n          serviceName: rpcSpan.process.serviceName,\n          viewEnd: rpcViewBounds.end,\n          viewStart: rpcViewBounds.start,\n        };\n      }\n    }\n\n    const peerServiceKV = span.tags.find((kv) => kv.key === PEER_SERVICE);\n    // Leaf, kind == client and has peer.service.tag, is likely a client span that does a request\n    // to an uninstrumented/external service\n    let noInstrumentedServer = null;\n    if (!span.hasChildren && peerServiceKV && isKindClient(span)) {\n      noInstrumentedServer = {\n        serviceName: peerServiceKV.value,\n        color: getColorByKey(peerServiceKV.value, theme),\n      };\n    }\n\n    const prevSpan = spanIndex > 0 ? trace.spans[spanIndex - 1] : null;\n\n    const allChildSpanIds = [spanID, ...childSpanIds];\n    // This function called recursively to find all descendants of a span\n    const findAllDescendants = (currentChildSpanIds: string[]) => {\n      currentChildSpanIds.forEach((eachId) => {\n        const childrenOfCurrent = this.getChildSpansMap().get(eachId);\n        if (childrenOfCurrent?.length) {\n          allChildSpanIds.push(...childrenOfCurrent);\n          findAllDescendants(childrenOfCurrent);\n        }\n      });\n    };\n    findAllDescendants(childSpanIds);\n    const criticalPathSections = criticalPath?.filter((each) => {\n      if (isCollapsed) {\n        return allChildSpanIds.includes(each.spanId);\n      }\n      return each.spanId === spanID;\n    });\n\n    const styles = getStyles();\n    return (\n      <div className={styles.row} key={key} style={style} {...attrs}>\n        <SpanBarRow\n          clippingLeft={this.getClipping().left}\n          clippingRight={this.getClipping().right}\n          color={color}\n          spanBarOptions={spanBarOptions}\n          columnDivision={spanNameColumnWidth}\n          isChildrenExpanded={!isCollapsed}\n          isDetailExpanded={isDetailExpanded}\n          isMatchingFilter={isMatchingFilter}\n          isFocused={isFocused}\n          showSpanFilterMatchesOnly={showSpanFilterMatchesOnly}\n          numTicks={NUM_TICKS}\n          onDetailToggled={detailToggle}\n          onChildrenToggled={childrenToggle}\n          rpc={rpc}\n          noInstrumentedServer={noInstrumentedServer}\n          showErrorIcon={showErrorIcon}\n          getViewedBounds={this.getViewedBounds()}\n          traceStartTime={trace.startTime}\n          span={span}\n          hoverIndentGuideIds={hoverIndentGuideIds}\n          addHoverIndentGuideId={addHoverIndentGuideId}\n          removeHoverIndentGuideId={removeHoverIndentGuideId}\n          createSpanLink={createSpanLink}\n          datasourceType={datasourceType}\n          showServiceName={prevSpan === null || prevSpan.process.serviceName !== span.process.serviceName}\n          visibleSpanIds={visibleSpanIds}\n          criticalPath={criticalPathSections}\n        />\n      </div>\n    );\n  }\n\n  renderSpanDetailRow(span: TraceSpan, key: string, style: React.CSSProperties, attrs: {}, visibleSpanIds: string[]) {\n    const { spanID } = span;\n    const { serviceName } = span.process;\n    const {\n      detailLogItemToggle,\n      detailLogsToggle,\n      detailProcessToggle,\n      detailReferencesToggle,\n      detailReferenceItemToggle,\n      detailWarningsToggle,\n      detailStackTracesToggle,\n      detailStates,\n      detailTagsToggle,\n      detailToggle,\n      spanNameColumnWidth,\n      trace,\n      traceToProfilesOptions,\n      timeZone,\n      hoverIndentGuideIds,\n      addHoverIndentGuideId,\n      removeHoverIndentGuideId,\n      linksGetter,\n      createSpanLink,\n      focusedSpanId,\n      createFocusSpanLink,\n      theme,\n      datasourceType,\n      traceFlameGraphs,\n      setTraceFlameGraphs,\n      setRedrawListView,\n    } = this.props;\n    const detailState = detailStates.get(spanID);\n    if (!trace || !detailState) {\n      return null;\n    }\n    const color = getColorByKey(serviceName, theme);\n    const styles = getStyles();\n\n    return (\n      <div className={styles.row} key={key} style={{ ...style, zIndex: 1 }} {...attrs}>\n        <SpanDetailRow\n          color={color}\n          columnDivision={spanNameColumnWidth}\n          onDetailToggled={detailToggle}\n          detailState={detailState}\n          linksGetter={linksGetter}\n          logItemToggle={detailLogItemToggle}\n          logsToggle={detailLogsToggle}\n          processToggle={detailProcessToggle}\n          referenceItemToggle={detailReferenceItemToggle}\n          referencesToggle={detailReferencesToggle}\n          warningsToggle={detailWarningsToggle}\n          stackTracesToggle={detailStackTracesToggle}\n          span={span}\n          traceToProfilesOptions={traceToProfilesOptions}\n          timeZone={timeZone}\n          tagsToggle={detailTagsToggle}\n          traceStartTime={trace.startTime}\n          traceDuration={trace.duration}\n          traceName={trace.traceName}\n          hoverIndentGuideIds={hoverIndentGuideIds}\n          addHoverIndentGuideId={addHoverIndentGuideId}\n          removeHoverIndentGuideId={removeHoverIndentGuideId}\n          createSpanLink={createSpanLink}\n          focusedSpanId={focusedSpanId}\n          createFocusSpanLink={createFocusSpanLink}\n          datasourceType={datasourceType}\n          visibleSpanIds={visibleSpanIds}\n          traceFlameGraphs={traceFlameGraphs}\n          setTraceFlameGraphs={setTraceFlameGraphs}\n          setRedrawListView={setRedrawListView}\n        />\n      </div>\n    );\n  }\n\n  scrollToTop = () => {\n    const { topOfViewRef, datasourceType, trace } = this.props;\n    topOfViewRef?.current?.scrollIntoView({ behavior: 'smooth' });\n    reportInteraction('grafana_traces_trace_view_scroll_to_top_clicked', {\n      datasourceType: datasourceType,\n      grafana_version: config.buildInfo.version,\n      numServices: trace.services.length,\n      numSpans: trace.spans.length,\n    });\n  };\n\n  getVisibleSpanIds = memoizeOne((start: number, end: number) => {\n    const spanIds = [];\n    for (let i = start; i < end; i++) {\n      const rowState = this.getRowStates()[i];\n      if (rowState?.span) {\n        spanIds.push(rowState.span.spanID);\n      }\n    }\n    return spanIds;\n  });\n\n  render() {\n    const styles = getStyles();\n    const { scrollElement, redrawListView } = this.props;\n\n    return (\n      <>\n        <ListView\n          ref={this.setListView}\n          dataLength={this.getRowStates().length}\n          itemHeightGetter={this.getRowHeight}\n          itemRenderer={this.renderRow}\n          viewBuffer={BUFFER_SIZE}\n          viewBufferMin={BUFFER_SIZE}\n          itemsWrapperClassName={styles.rowsWrapper}\n          getKeyFromIndex={this.getKeyFromIndex}\n          getIndexFromKey={this.getIndexFromKey}\n          windowScroller={false}\n          scrollElement={scrollElement}\n          redraw={redrawListView}\n        />\n        {this.props.topOfViewRef && ( // only for panel as explore uses content outline to scroll to top\n          <ToolbarButton\n            className={styles.scrollToTopButton}\n            onClick={this.scrollToTop}\n            title=\"Scroll to top\"\n            icon=\"arrow-up\"\n          ></ToolbarButton>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedVirtualizedTraceView);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { PureComponent, RefObject } from 'react';\n\nimport { GrafanaTheme2, LinkModel, TraceKeyValuePair, TraceLog } from '@grafana/data';\nimport { SpanBarOptions, TraceToProfilesOptions } from '@grafana/o11y-ds-frontend';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { stylesFactory, withTheme2 } from '@grafana/ui';\n\nimport { autoColor } from '../Theme';\nimport { merge as mergeShortcuts } from '../keyboard-shortcuts';\nimport { CriticalPathSection, SpanLinkFunc, TNil } from '../types';\nimport TTraceTimeline from '../types/TTraceTimeline';\nimport { TraceSpan, Trace, TraceLink, TraceSpanReference } from '../types/trace';\n\nimport { TraceFlameGraphs } from './SpanDetail';\nimport TimelineHeaderRow from './TimelineHeaderRow';\nimport VirtualizedTraceView from './VirtualizedTraceView';\nimport { TUpdateViewRangeTimeFunction, ViewRange, ViewRangeTimeUpdate } from './types';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  TraceTimelineViewer: css({\n    label: 'TraceTimelineViewer',\n    borderBottom: `1px solid ${autoColor(theme, '#bbb')}`,\n\n    '& .json-markup': {\n      lineHeight: '17px',\n      fontSize: '13px',\n      fontFamily: 'monospace',\n      whiteSpace: 'pre-wrap',\n    },\n\n    '& .json-markup-key': {\n      fontWeight: 'bold',\n    },\n\n    '& .json-markup-bool': {\n      color: autoColor(theme, 'firebrick'),\n    },\n\n    '& .json-markup-string': {\n      color: autoColor(theme, 'teal'),\n    },\n\n    '& .json-markup-null': {\n      color: autoColor(theme, 'teal'),\n    },\n\n    '& .json-markup-number': {\n      color: autoColor(theme, 'blue', 'black'),\n    },\n  }),\n}));\n\nexport type TProps = {\n  findMatchesIDs: Set<string> | TNil;\n  traceTimeline: TTraceTimeline;\n  trace: Trace;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  datasourceType: string;\n  spanBarOptions: SpanBarOptions | undefined;\n  updateNextViewRangeTime: (update: ViewRangeTimeUpdate) => void;\n  updateViewRangeTime: TUpdateViewRangeTimeFunction;\n  viewRange: ViewRange;\n  timeZone: TimeZone;\n\n  setSpanNameColumnWidth: (width: number) => void;\n  collapseAll: (spans: TraceSpan[]) => void;\n  collapseOne: (spans: TraceSpan[]) => void;\n  expandAll: () => void;\n  expandOne: (spans: TraceSpan[]) => void;\n\n  childrenToggle: (spanID: string) => void;\n  detailLogItemToggle: (spanID: string, log: TraceLog) => void;\n  detailLogsToggle: (spanID: string) => void;\n  detailWarningsToggle: (spanID: string) => void;\n  detailStackTracesToggle: (spanID: string) => void;\n  detailReferencesToggle: (spanID: string) => void;\n  detailReferenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;\n  detailProcessToggle: (spanID: string) => void;\n  detailTagsToggle: (spanID: string) => void;\n  detailToggle: (spanID: string) => void;\n  addHoverIndentGuideId: (spanID: string) => void;\n  removeHoverIndentGuideId: (spanID: string) => void;\n  linksGetter: (span: TraceSpan, items: TraceKeyValuePair[], itemIndex: number) => TraceLink[];\n  theme: GrafanaTheme2;\n  createSpanLink?: SpanLinkFunc;\n  scrollElement?: Element;\n  focusedSpanId?: string;\n  focusedSpanIdForSearch: string;\n  showSpanFilterMatchesOnly: boolean;\n  showCriticalPathSpansOnly: boolean;\n  createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;\n  topOfViewRef?: RefObject<HTMLDivElement>;\n  headerHeight: number;\n  criticalPath: CriticalPathSection[];\n  traceFlameGraphs: TraceFlameGraphs;\n  setTraceFlameGraphs: (flameGraphs: TraceFlameGraphs) => void;\n  redrawListView: {};\n  setRedrawListView: (redraw: {}) => void;\n};\n\ntype State = {\n  // Will be set to real height of the component so it can be passed down to size some other elements.\n  height: number;\n};\n\nconst NUM_TICKS = 5;\n\n/**\n * `TraceTimelineViewer` now renders the header row because it is sensitive to\n * `props.viewRange.time.cursor`. If `VirtualizedTraceView` renders it, it will\n * re-render the ListView every time the cursor is moved on the trace minimap\n * or `TimelineHeaderRow`.\n */\nexport class UnthemedTraceTimelineViewer extends PureComponent<TProps, State> {\n  constructor(props: TProps) {\n    super(props);\n    this.state = { height: 0 };\n  }\n\n  componentDidMount() {\n    mergeShortcuts({\n      collapseAll: this.collapseAll,\n      expandAll: this.expandAll,\n      collapseOne: this.collapseOne,\n      expandOne: this.expandOne,\n    });\n  }\n\n  collapseAll = () => {\n    this.props.collapseAll(this.props.trace.spans);\n    reportInteraction('grafana_traces_traceID_expand_collapse_clicked', {\n      datasourceType: this.props.datasourceType,\n      grafana_version: config.buildInfo.version,\n      type: 'collapseAll',\n    });\n  };\n\n  collapseOne = () => {\n    this.props.collapseOne(this.props.trace.spans);\n    reportInteraction('grafana_traces_traceID_expand_collapse_clicked', {\n      datasourceType: this.props.datasourceType,\n      grafana_version: config.buildInfo.version,\n      type: 'collapseOne',\n    });\n  };\n\n  expandAll = () => {\n    this.props.expandAll();\n    reportInteraction('grafana_traces_traceID_expand_collapse_clicked', {\n      datasourceType: this.props.datasourceType,\n      grafana_version: config.buildInfo.version,\n      type: 'expandAll',\n    });\n  };\n\n  expandOne = () => {\n    this.props.expandOne(this.props.trace.spans);\n    reportInteraction('grafana_traces_traceID_expand_collapse_clicked', {\n      datasourceType: this.props.datasourceType,\n      grafana_version: config.buildInfo.version,\n      type: 'expandOne',\n    });\n  };\n\n  render() {\n    const {\n      setSpanNameColumnWidth,\n      updateNextViewRangeTime,\n      updateViewRangeTime,\n      viewRange,\n      traceTimeline,\n      theme,\n      topOfViewRef,\n      focusedSpanIdForSearch,\n      ...rest\n    } = this.props;\n    const { trace } = rest;\n    const styles = getStyles(theme);\n\n    return (\n      <div\n        className={styles.TraceTimelineViewer}\n        ref={(ref: HTMLDivElement | null) => ref && this.setState({ height: ref.getBoundingClientRect().height })}\n      >\n        <TimelineHeaderRow\n          duration={trace.duration}\n          nameColumnWidth={traceTimeline.spanNameColumnWidth}\n          numTicks={NUM_TICKS}\n          onCollapseAll={this.collapseAll}\n          onCollapseOne={this.collapseOne}\n          onColummWidthChange={setSpanNameColumnWidth}\n          onExpandAll={this.expandAll}\n          onExpandOne={this.expandOne}\n          viewRangeTime={viewRange.time}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          columnResizeHandleHeight={this.state.height}\n        />\n        <VirtualizedTraceView\n          {...rest}\n          {...traceTimeline}\n          setSpanNameColumnWidth={setSpanNameColumnWidth}\n          currentViewRangeTime={viewRange.time.current}\n          topOfViewRef={topOfViewRef}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          datasourceType={this.props.datasourceType}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedTraceTimelineViewer);\n","// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\n\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nexport const getStyles = () => {\n  return {\n    NewWindowIconLarge: css({\n      label: 'NewWindowIconLarge',\n      fontSize: '1.5em',\n    }),\n  };\n};\n\ntype Props = {\n  isLarge?: boolean;\n  className?: string;\n};\n\nexport default function NewWindowIcon({ isLarge = false, className }: Props) {\n  const styles = useStyles2(getStyles);\n  const cls = cx({ [styles.NewWindowIconLarge]: isLarge }, className);\n  return <Icon className={cls} name={'anchor'} />;\n}\n","// Copyright (c) 2019 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as React from 'react';\n\nimport NewWindowIcon from './NewWindowIcon';\n\ntype Link = {\n  text: string;\n  url: string;\n};\n\ntype ExternalLinksProps = {\n  links: Link[];\n  className?: string;\n};\n\nconst LinkValue = (props: { href: string; title?: string; children?: React.ReactNode; className?: string }) => (\n  <a href={props.href} title={props.title} target=\"_blank\" rel=\"noopener noreferrer\" className={props.className}>\n    {props.children} <NewWindowIcon />\n  </a>\n);\n\nexport default function ExternalLinks(props: ExternalLinksProps) {\n  const { links } = props;\n  // TODO: handle multiple items\n  return <LinkValue href={links[0].url} title={links[0].text} className={props.className} />;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const FALLBACK_DAG_MAX_NUM_SERVICES = 100;\nexport const FALLBACK_TRACE_NAME = '<trace-without-root-span>';\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  BreakableText: css({\n    label: 'BreakableText',\n    display: 'inline-block',\n    whiteSpace: 'pre',\n  }),\n});\n\nconst WORD_RX = /\\W*\\w+\\W*/g;\n\ntype Props = {\n  text: string;\n  className?: string;\n  wordRegexp?: RegExp;\n};\n\nexport default function BreakableText({ text, className, wordRegexp = WORD_RX }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  if (!text) {\n    return null;\n  }\n  const spans = [];\n  wordRegexp.exec('');\n  // if the given text has no words, set the first match to the entire text\n  let match: RegExpExecArray | string[] | null = wordRegexp.exec(text) || [text];\n  while (match) {\n    spans.push(\n      <span key={`${text}-${spans.length}`} className={className || styles.BreakableText}>\n        {match[0]}\n      </span>\n    );\n    match = wordRegexp.exec(text);\n  }\n  return <>{spans}</>;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { FALLBACK_TRACE_NAME } from '../constants';\nimport { TNil } from '../types';\n\nimport BreakableText from './BreakableText';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TraceName: css({\n      label: 'TraceName',\n      fontSize: theme.typography.size.lg,\n    }),\n  };\n};\n\ntype Props = {\n  className?: string;\n  traceName?: string | TNil;\n};\n\nexport default function TraceName(props: Props) {\n  const { className, traceName } = props;\n  const styles = useStyles2(getStyles);\n  const text = String(traceName || FALLBACK_TRACE_NAME);\n  const title = <BreakableText text={text} />;\n  return <span className={cx(styles.TraceName, className)}>{title}</span>;\n}\n","//      \nvar hasOwn = function hasOwn(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n};\n\nfunction deepEquals(equals, deepObjects) {\n  function deep(valueA, valueB) {\n    if (equals(valueA, valueB)) {\n      return true;\n    }\n\n    if (Array.isArray(valueA)) {\n      if (!Array.isArray(valueB) || valueA.length !== valueB.length) {\n        return false;\n      } // Check deep equality of each value in A against the same indexed value in B\n\n\n      if (!valueA.every(function (value, index) {\n        return deep(value, valueB[index]);\n      })) {\n        return false;\n      } // could not find unequal items\n\n\n      return true;\n    }\n\n    if (Array.isArray(valueB)) {\n      return false;\n    }\n\n    if (typeof valueA === \"object\") {\n      if (typeof valueB !== \"object\") {\n        return false;\n      }\n\n      var isANull = valueA === null;\n      var isBNull = valueB === null;\n\n      if (isANull || isBNull) {\n        return isANull === isBNull;\n      }\n\n      var aKeys = Object.keys(valueA);\n      var bKeys = Object.keys(valueB);\n\n      if (aKeys.length !== bKeys.length) {\n        return false;\n      } // Should we compare with shallow equivalence or deep equivalence?\n\n\n      var equalityChecker = deepObjects ? deep : equals; // Check if objects share same keys, and each of those keys are equal\n\n      if (!aKeys.every(function (aKey) {\n        return hasOwn(valueA, aKey) && hasOwn(valueB, aKey) && equalityChecker(valueA[aKey], valueB[aKey]);\n      })) {\n        return false;\n      } // could not find unequal keys or values\n\n\n      return true;\n    }\n\n    return false;\n  }\n\n  return deep;\n}\n\n//      \nvar findIndex = function findIndex(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    if (fn(arr[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nfunction lruCache(limit, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = findIndex(entries, function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return null\n\n\n    return undefined;\n  }\n\n  function put(key, value) {\n    if (!get(key)) {\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > limit) {\n        entries.pop();\n      }\n    }\n  }\n\n  return {\n    get: get,\n    put: put\n  };\n}\n\n//      \nfunction singletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(key, entry.key)) {\n        return entry.value;\n      }\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    }\n  };\n}\n\n//      \n\nfunction createCache(limit, equals) {\n  return limit === 1 ? singletonCache(equals) : lruCache(limit, equals);\n}\n\nfunction createEqualsFn(basicEquals, deepObjects) {\n  // Choose strategy for basic or deep object equals\n  var equals = deepObjects ? deepEquals(basicEquals, deepObjects) : basicEquals;\n  return function (valueA, valueB) {\n    // The arguments are always the argument array-like objects\n    // Different lengths means they are not the same\n    if (valueA.length !== valueB.length) {\n      return false;\n    } // Compare the values\n\n\n    for (var index = 0; index < valueA.length; index += 1) {\n      if (!equals(valueA[index], valueB[index])) {\n        return false;\n      }\n    } // Found no conflicts\n\n\n    return true;\n  };\n}\n\nfunction memoize() {\n  var limit = 1;\n\n  var equals = function equals(valueA, valueB) {\n    return valueA === valueB;\n  };\n\n  var deepObjects = false;\n\n  for (var _len = arguments.length, config = new Array(_len), _key = 0; _key < _len; _key++) {\n    config[_key] = arguments[_key];\n  }\n\n  if (typeof config[0] === \"number\") {\n    limit = config.shift();\n  }\n\n  if (typeof config[0] === \"function\") {\n    equals = config.shift();\n  } else if (typeof config[0] === \"undefined\") {\n    // Support passing undefined equal argument;\n    config.shift();\n  }\n\n  if (typeof config[0] === \"boolean\") {\n    deepObjects = config[0];\n  }\n\n  var cache = createCache(limit, createEqualsFn(equals, deepObjects));\n  return function (fn) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var value = cache.get(args);\n\n      if (value === undefined) {\n        value = fn.apply(fn, args);\n        cache.put(args, value);\n      }\n\n      return value;\n    };\n  };\n}\n\nexport default memoize;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { FALLBACK_DAG_MAX_NUM_SERVICES } from './index';\n\nexport default Object.defineProperty(\n  {\n    archiveEnabled: false,\n    dependencies: {\n      dagMaxNumServices: FALLBACK_DAG_MAX_NUM_SERVICES,\n      menuEnabled: true,\n    },\n    linkPatterns: [],\n    search: {\n      maxLookback: {\n        label: '2 Days',\n        value: '2d',\n      },\n      maxLimit: 1500,\n    },\n    tracking: {\n      gaID: null,\n      trackErrors: true,\n    },\n  },\n  // fields that should be individually merged vs wholesale replaced\n  '__mergeFields',\n  { value: ['dependencies', 'search', 'tracking'] }\n);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { get as _get } from 'lodash';\n\nimport defaultConfig from '../../constants/default-config';\n\n/**\n * Merge the embedded config from the query service (if present) with the\n * default config from `../../constants/default-config`.\n */\nexport default function getConfig() {\n  return defaultConfig;\n}\n\nexport function getConfigValue(path: string) {\n  return _get(getConfig(), path);\n}\n","// Copyright (c) 2017 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { uniq as _uniq } from 'lodash';\nimport memoize from 'lru-memoize';\n\nimport { Trace } from '../types';\nimport { getConfigValue } from '../utils/config/get-config';\n\nconst parameterRegExp = /#\\{([^{}]*)\\}/g;\n\ntype ProcessedTemplate = {\n  parameters: string[];\n  template: (template: { [key: string]: any }) => string;\n};\n\nexport type ProcessedLinkPattern = {\n  object: any;\n  type: (link: string) => boolean;\n  key: (link: string) => boolean;\n  value: (value: any) => boolean;\n  url: ProcessedTemplate;\n  text: ProcessedTemplate;\n  parameters: string[];\n};\n\ntype TLinksRV = Array<{ url: string; text: string }>;\n\nfunction getParamNames(str: string) {\n  const names = new Set<string>();\n  str.replace(parameterRegExp, (match, name) => {\n    names.add(name);\n    return match;\n  });\n  return Array.from(names);\n}\n\nfunction stringSupplant(str: string, encodeFn: (unencoded: any) => string, map: Record<string, any>) {\n  return str.replace(parameterRegExp, (_, name) => {\n    const value = map[name];\n    return value == null ? '' : encodeFn(value);\n  });\n}\n\nexport function processTemplate(template: unknown, encodeFn: (unencoded: any) => string): ProcessedTemplate {\n  if (typeof template !== 'string') {\n    /*\n\n    // kept on ice until #123 is implemented:\n    if (template && Array.isArray(template.parameters) && (typeof template.template === 'function')) {\n      return template;\n    }\n\n    */\n    throw new Error('Invalid template');\n  }\n  return {\n    parameters: getParamNames(template),\n    template: stringSupplant.bind(null, template, encodeFn),\n  };\n}\n\nexport function createTestFunction(entry?: unknown) {\n  if (typeof entry === 'string') {\n    return (arg: unknown) => arg === entry;\n  }\n  if (Array.isArray(entry)) {\n    return (arg: unknown) => entry.indexOf(arg) > -1;\n  }\n  /*\n\n  // kept on ice until #123 is implemented:\n  if (entry instanceof RegExp) {\n    return (arg: any) => entry.test(arg);\n  }\n  if (typeof entry === 'function') {\n    return entry;\n  }\n\n  */\n  if (entry == null) {\n    return () => true;\n  }\n  throw new Error(`Invalid value: ${entry}`);\n}\n\nconst identity = (a: any): typeof a => a;\n\nexport function processLinkPattern(pattern: any): ProcessedLinkPattern | null {\n  try {\n    const url = processTemplate(pattern.url, encodeURIComponent);\n    const text = processTemplate(pattern.text, identity);\n    return {\n      object: pattern,\n      type: createTestFunction(pattern.type),\n      key: createTestFunction(pattern.key),\n      value: createTestFunction(pattern.value),\n      url,\n      text,\n      parameters: _uniq(url.parameters.concat(text.parameters)),\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(`Ignoring invalid link pattern: ${error}`, pattern);\n    return null;\n  }\n}\n\nfunction callTemplate(template: ProcessedTemplate, data: any) {\n  return template.template(data);\n}\n\nexport function computeTraceLink(linkPatterns: ProcessedLinkPattern[], trace: Trace) {\n  const result: TLinksRV = [];\n  const validKeys = (Object.keys(trace) as Array<keyof Trace>).filter(\n    (key) => typeof trace[key] === 'string' || typeof trace[key] === 'number'\n  );\n\n  linkPatterns\n    ?.filter((pattern) => pattern?.type('traces'))\n    .forEach((pattern) => {\n      const parameterValues: Record<string, any> = {};\n      const allParameters = pattern?.parameters.every((parameter) => {\n        const key = parameter as keyof Trace;\n        if (validKeys.includes(key)) {\n          // At this point is safe to access to trace object using parameter variable because\n          // we validated parameter against validKeys, this implies that parameter a keyof Trace.\n          parameterValues[parameter] = trace[key];\n          return true;\n        }\n        return false;\n      });\n      if (allParameters) {\n        result.push({\n          url: callTemplate(pattern.url, parameterValues),\n          text: callTemplate(pattern.text, parameterValues),\n        });\n      }\n    });\n\n  return result;\n}\n\nconst processedLinks = (getConfigValue('linkPatterns') || [])\n  .map(processLinkPattern)\n  .filter((link: ProcessedLinkPattern | null): link is ProcessedLinkPattern => Boolean(link));\n\nexport const getTraceLinks: (trace: Trace | undefined) => TLinksRV = memoize(10)((trace: Trace | undefined) => {\n  const result: TLinksRV = [];\n  if (!trace) {\n    return result;\n  }\n  return computeTraceLink(processedLinks, trace);\n});\n","// Copyright (c) 2020 The Jaeger Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { memoize } from 'lodash';\n\nimport { TraceSpan } from '../types';\n\nexport function _getTraceNameImpl(spans: TraceSpan[]) {\n  // Use a span with no references to another span in given array\n  // prefering the span with the fewest references\n  // using start time as a tie breaker\n  let candidateSpan: TraceSpan | undefined;\n  const allIDs: Set<string> = new Set(spans.map(({ spanID }) => spanID));\n\n  for (let i = 0; i < spans.length; i++) {\n    const hasInternalRef =\n      spans[i].references &&\n      spans[i].references.some(({ traceID, spanID }) => traceID === spans[i].traceID && allIDs.has(spanID));\n    if (hasInternalRef) {\n      continue;\n    }\n\n    if (!candidateSpan) {\n      candidateSpan = spans[i];\n      continue;\n    }\n\n    const thisRefLength = (spans[i].references && spans[i].references.length) || 0;\n    const candidateRefLength = (candidateSpan.references && candidateSpan.references.length) || 0;\n\n    if (\n      thisRefLength < candidateRefLength ||\n      (thisRefLength === candidateRefLength && spans[i].startTime < candidateSpan.startTime)\n    ) {\n      candidateSpan = spans[i];\n    }\n  }\n  return candidateSpan ? `${candidateSpan.process.serviceName}: ${candidateSpan.operationName}` : '';\n}\n\nexport const getTraceName = memoize(_getTraceNameImpl, (spans: TraceSpan[]) => {\n  if (!spans.length) {\n    return 0;\n  }\n  return spans[0].traceID;\n});\n\n// Find header tags according to either old standard (e..g, `http.method`) or the\n// standard OTEL semantic convention, as per https://opentelemetry.io/docs/specs/semconv/http/http-spans\n// (e.g., `http.request.method`). Spans following the OTEL semantic convention are prioritized.\n//\n// Note that we are ignoring these cases:\n// - conventions are mixed, e.g., a span with method in `http.method` but status code in `http.response.status_code`\n// - tags are not in the same span, e.g., method in spans[0] but status in spans[1]\nexport function findHeaderTags(spans: TraceSpan[]) {\n  // OTEL semantic convention\n  for (let i = 0; i < spans.length; i++) {\n    const method = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.request.method';\n    });\n\n    const status = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.response.status_code';\n    });\n\n    const url = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.route';\n    });\n\n    if (method.length > 0 || status.length > 0 || url.length > 0) {\n      return { method, status, url };\n    }\n  }\n\n  // Non-standard convention\n  for (let i = 0; i < spans.length; i++) {\n    const method = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.method';\n    });\n\n    const status = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.status_code';\n    });\n\n    const url = spans[i].tags.filter((tag) => {\n      return tag.key === 'http.url' || tag.key === 'http.target' || tag.key === 'http.path';\n    });\n\n    if (method.length > 0 || status.length > 0 || url.length > 0) {\n      return { method, status, url };\n    }\n  }\n\n  return {};\n}\n\nexport const getHeaderTags = memoize(findHeaderTags, (spans: TraceSpan[]) => {\n  if (!spans.length) {\n    return 0;\n  }\n  return spans[0].traceID;\n});\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, IconName } from '@grafana/data';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  ActionButton: css({\n    label: 'ActionButton',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n      content: '\"\"',\n      background: theme.colors.primary.main,\n      display: 'block',\n      position: 'absolute',\n      right: 0,\n      width: '100%',\n      height: '100%',\n      opacity: 0,\n      transition: 'all 0.8s',\n    },\n    '&:active:after': {\n      margin: 0,\n      opacity: 0.3,\n      transition: '0s',\n    },\n  }),\n});\n\nexport type ActionButtonProps = {\n  onClick: () => void;\n  ariaLabel: string;\n  label: string;\n  icon: IconName;\n};\n\nexport default function ActionButton(props: ActionButtonProps) {\n  const { onClick, ariaLabel, label, icon } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Button\n      className={styles.ActionButton}\n      size=\"sm\"\n      variant=\"secondary\"\n      fill={'outline'}\n      type=\"button\"\n      icon={icon}\n      aria-label={ariaLabel}\n      onClick={onClick}\n    >\n      {label}\n    </Button>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { GrafanaTheme2, CoreApp, DataFrame } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Icon, useTheme2 } from '@grafana/ui';\n\nimport { config } from '../../../../../../core/config';\nimport { downloadTraceAsJson } from '../../../../../inspector/utils/download';\n\nimport ActionButton from './ActionButton';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TracePageActions: css({\n      label: 'TracePageActions',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '4px',\n      marginBottom: '10px',\n    }),\n    feedbackContainer: css({\n      color: theme.colors.text.link,\n    }),\n    feedback: css({\n      margin: '6px',\n      color: theme.colors.text.link,\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    }),\n  };\n};\n\nexport type TracePageActionsProps = {\n  traceId: string;\n  data: DataFrame;\n  app?: CoreApp;\n};\n\nexport default function TracePageActions(props: TracePageActionsProps) {\n  const { traceId, data, app } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const [copyTraceIdClicked, setCopyTraceIdClicked] = useState(false);\n\n  const copyTraceId = () => {\n    navigator.clipboard.writeText(traceId);\n    setCopyTraceIdClicked(true);\n    setTimeout(() => {\n      setCopyTraceIdClicked(false);\n    }, 5000);\n  };\n\n  const exportTrace = () => {\n    const traceFormat = downloadTraceAsJson(data, 'Trace-' + traceId.substring(traceId.length - 6));\n    reportInteraction('grafana_traces_download_traces_clicked', {\n      app,\n      grafana_version: config.buildInfo.version,\n      trace_format: traceFormat,\n      location: 'trace-view',\n    });\n  };\n\n  return (\n    <div className={styles.TracePageActions}>\n      <div className={styles.feedbackContainer}>\n        <Icon name=\"comment-alt-message\" />\n        <a\n          href=\"https://forms.gle/RZDEx8ScyZNguDoC8\"\n          className={styles.feedback}\n          title=\"Share your thoughts about tracing in Grafana.\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          Give feedback\n        </a>\n      </div>\n\n      <ActionButton\n        onClick={copyTraceId}\n        ariaLabel={'Copy Trace ID'}\n        label={copyTraceIdClicked ? 'Copied!' : 'Trace ID'}\n        icon={'copy'}\n      />\n      <ActionButton onClick={exportTrace} ariaLabel={'Export Trace'} label={'Export'} icon={'save'} />\n    </div>\n  );\n}\n","export const validateIntervalRegex = /^(-?\\d+(?:\\.\\d+)?)(ms|[Mwdhmsy])$/;\n\nexport const validateInterval = (val: string, regex: RegExp) => {\n  const matches = val.match(regex);\n  return matches || !val ? false : true;\n};\n","import { useState } from 'react';\nimport { useDebounce } from 'react-use';\n\nimport { InlineField, Input } from '@grafana/ui';\n\nimport { validateInterval, validateIntervalRegex } from './validation';\n\ninterface Props {\n  value: string;\n  onChange: (val: string) => void;\n  isInvalidError: string;\n  placeholder?: string;\n  width?: number;\n  ariaLabel?: string;\n  label?: string;\n  tooltip?: string;\n  disabled?: boolean;\n  validationRegex?: RegExp;\n}\n\ninterface FieldProps {\n  labelWidth: number;\n  disabled: boolean;\n  invalid: boolean;\n  error: string;\n  label?: string;\n  tooltip?: string;\n}\n\nexport const IntervalInput = (props: Props) => {\n  const validationRegex = props.validationRegex || validateIntervalRegex;\n  const [intervalIsInvalid, setIntervalIsInvalid] = useState(() => {\n    return props.value ? validateInterval(props.value, validationRegex) : false;\n  });\n\n  useDebounce(\n    () => {\n      setIntervalIsInvalid(validateInterval(props.value, validationRegex));\n    },\n    500,\n    [props.value]\n  );\n\n  const fieldProps: FieldProps = {\n    labelWidth: 26,\n    disabled: props.disabled ?? false,\n    invalid: intervalIsInvalid,\n    error: props.isInvalidError,\n  };\n  if (props.label) {\n    fieldProps.label = props.label;\n    fieldProps.tooltip = props.tooltip || '';\n  }\n\n  return (\n    <InlineField {...fieldProps}>\n      <Input\n        type=\"text\"\n        placeholder={props.placeholder || '0'}\n        width={props.width || 40}\n        onChange={(e) => {\n          props.onChange(e.currentTarget.value);\n        }}\n        value={props.value}\n        aria-label={props.ariaLabel || 'interval input'}\n      />\n    </InlineField>\n  );\n};\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as React from 'react';\n\nimport { IconButton, Input } from '@grafana/ui';\n\ntype Props = {\n  value: string | undefined;\n  onChange: (value: string) => void;\n};\n\nexport default class SearchBarInput extends React.PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    value: undefined,\n  };\n\n  clearUiFind = () => {\n    this.props.onChange('');\n  };\n\n  render() {\n    const { value } = this.props;\n\n    const suffix = (\n      <>{value && value.length && <IconButton name=\"times\" onClick={this.clearUiFind} tooltip=\"Clear input\" />}</>\n    );\n\n    return (\n      <div style={{ width: '200px' }}>\n        <Input\n          placeholder=\"Find...\"\n          onChange={(e) => this.props.onChange(e.currentTarget.value)}\n          suffix={suffix}\n          value={value}\n        />\n      </div>\n    );\n  }\n}\n","// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, cx } from '@emotion/css';\nimport { get, maxBy, values } from 'lodash';\nimport { memo, Dispatch, SetStateAction, useEffect, useCallback } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Icon, PopoverContent, Tooltip, useTheme2 } from '@grafana/ui';\nimport { getButtonStyles } from '@grafana/ui/src/components/Button';\n\nimport { Trace } from '../../types';\n\nexport type NextPrevResultProps = {\n  trace: Trace;\n  spanFilterMatches: Set<string> | undefined;\n  setFocusedSpanIdForSearch: Dispatch<SetStateAction<string>>;\n  focusedSpanIndexForSearch: number;\n  setFocusedSpanIndexForSearch: Dispatch<SetStateAction<number>>;\n  datasourceType: string;\n  showSpanFilters: boolean;\n};\n\nexport default memo(function NextPrevResult(props: NextPrevResultProps) {\n  const {\n    trace,\n    spanFilterMatches,\n    setFocusedSpanIdForSearch,\n    focusedSpanIndexForSearch,\n    setFocusedSpanIndexForSearch,\n    datasourceType,\n    showSpanFilters,\n  } = props;\n  const styles = getStyles(useTheme2(), showSpanFilters);\n\n  useEffect(() => {\n    if (spanFilterMatches && focusedSpanIndexForSearch !== -1) {\n      const spanMatches = Array.from(spanFilterMatches!);\n      setFocusedSpanIdForSearch(spanMatches[focusedSpanIndexForSearch]);\n    }\n  }, [focusedSpanIndexForSearch, setFocusedSpanIdForSearch, spanFilterMatches]);\n\n  const nextResult = (event: React.UIEvent, buttonEnabled: boolean) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (buttonEnabled) {\n      reportInteraction('grafana_traces_trace_view_find_next_prev_clicked', {\n        datasourceType: datasourceType,\n        grafana_version: config.buildInfo.version,\n        direction: 'next',\n      });\n\n      // new query || at end, go to start\n      if (\n        focusedSpanIndexForSearch === -1 ||\n        (spanFilterMatches && focusedSpanIndexForSearch === spanFilterMatches.size - 1)\n      ) {\n        setFocusedSpanIndexForSearch(0);\n        return;\n      }\n\n      // get next\n      setFocusedSpanIndexForSearch(focusedSpanIndexForSearch + 1);\n    }\n  };\n\n  const prevResult = (event: React.UIEvent, buttonEnabled: boolean) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (buttonEnabled) {\n      reportInteraction('grafana_traces_trace_view_find_next_prev_clicked', {\n        datasourceType: datasourceType,\n        grafana_version: config.buildInfo.version,\n        direction: 'prev',\n      });\n\n      // new query || at start, go to end\n      if (spanFilterMatches && (focusedSpanIndexForSearch === -1 || focusedSpanIndexForSearch === 0)) {\n        setFocusedSpanIndexForSearch(spanFilterMatches.size - 1);\n        return;\n      }\n\n      // get prev\n      setFocusedSpanIndexForSearch(focusedSpanIndexForSearch - 1);\n    }\n  };\n\n  const nextResultOnKeyDown = (event: React.KeyboardEvent, buttonEnabled: boolean) => {\n    if (event.key === 'Enter') {\n      nextResult(event, buttonEnabled);\n    }\n  };\n\n  const prevResultOnKeyDown = (event: React.KeyboardEvent, buttonEnabled: boolean) => {\n    if (event.key === 'Enter') {\n      prevResult(event, buttonEnabled);\n    }\n  };\n\n  const buttonEnabled = (spanFilterMatches && spanFilterMatches?.size > 0) ?? false;\n  const buttonClass = buttonEnabled ? styles.button : cx(styles.button, styles.buttonDisabled);\n\n  const getTooltip = useCallback(\n    (content: PopoverContent) => {\n      return (\n        <Tooltip content={content} placement=\"top\">\n          <span className={styles.tooltip}>\n            <Icon name=\"info-circle\" size=\"md\" />\n          </span>\n        </Tooltip>\n      );\n    },\n    [styles.tooltip]\n  );\n\n  const getMatchesMetadata = useCallback(\n    (depth: number, services: number) => {\n      let metadata = (\n        <>\n          <span>{`${trace.spans.length} spans`}</span>\n          {getTooltip(\n            <>\n              <div>Services: {services}</div>\n              <div>Depth: {depth}</div>\n            </>\n          )}\n        </>\n      );\n\n      if (spanFilterMatches) {\n        if (spanFilterMatches.size === 0) {\n          metadata = (\n            <>\n              <span>0 matches</span>\n              {getTooltip(\n                'There are 0 span matches for the filters selected. Please try removing some of the selected filters.'\n              )}\n            </>\n          );\n        } else {\n          const type = spanFilterMatches.size === 1 ? 'match' : 'matches';\n          const text =\n            focusedSpanIndexForSearch !== -1\n              ? `${focusedSpanIndexForSearch + 1}/${spanFilterMatches.size} ${type}`\n              : `${spanFilterMatches.size} ${type}`;\n\n          const matchedServices: string[] = [];\n          spanFilterMatches.forEach((spanID) => {\n            if (trace.processes[spanID]) {\n              matchedServices.push(trace.processes[spanID].serviceName);\n            }\n          });\n\n          metadata = (\n            <>\n              <span>{text}</span>\n              {getTooltip(\n                <>\n                  <div>\n                    Services: {new Set(matchedServices).size}/{services}\n                  </div>\n                  <div>Depth: {depth}</div>\n                </>\n              )}\n            </>\n          );\n        }\n      }\n\n      return metadata;\n    },\n    [focusedSpanIndexForSearch, getTooltip, spanFilterMatches, trace.processes, trace.spans]\n  );\n\n  const services = new Set(values(trace.processes).map((p) => p.serviceName)).size;\n  const depth = get(maxBy(trace.spans, 'depth'), 'depth', 0) + 1;\n\n  return (\n    <>\n      <span className={styles.matches}>{getMatchesMetadata(depth, services)}</span>\n      <div className={buttonEnabled ? styles.buttons : cx(styles.buttons, styles.buttonsDisabled)}>\n        <div\n          aria-label=\"Prev result button\"\n          className={buttonClass}\n          onClick={(event) => prevResult(event, buttonEnabled)}\n          onKeyDown={(event) => prevResultOnKeyDown(event, buttonEnabled)}\n          role=\"button\"\n          tabIndex={buttonEnabled ? 0 : -1}\n        >\n          Prev\n        </div>\n        <div\n          aria-label=\"Next result button\"\n          className={buttonClass}\n          onClick={(event) => nextResult(event, buttonEnabled)}\n          onKeyDown={(event) => nextResultOnKeyDown(event, buttonEnabled)}\n          role=\"button\"\n          tabIndex={buttonEnabled ? 0 : -1}\n        >\n          Next\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport const getStyles = (theme: GrafanaTheme2, showSpanFilters: boolean) => {\n  const buttonStyles = getButtonStyles({\n    theme,\n    variant: 'secondary',\n    size: showSpanFilters ? 'md' : 'sm',\n    iconOnly: false,\n    fill: 'outline',\n  });\n\n  return {\n    buttons: css({\n      display: 'inline-flex',\n      gap: '4px',\n    }),\n    buttonsDisabled: css({\n      cursor: 'not-allowed',\n    }),\n    button: buttonStyles.button,\n    buttonDisabled: css(buttonStyles.disabled, { pointerEvents: 'none' }),\n    matches: css({\n      marginRight: theme.spacing(2),\n      textWrap: 'nowrap',\n    }),\n    tooltip: css({\n      color: '#aaa',\n      margin: '0 0 0 5px',\n    }),\n  };\n};\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { SpanStatusCode } from '@opentelemetry/api';\n\nimport { TraceKeyValuePair } from '@grafana/data';\n\nimport { SearchProps, Tag } from '../../useSearch';\nimport { KIND, LIBRARY_NAME, LIBRARY_VERSION, STATUS, STATUS_MESSAGE, TRACE_STATE, ID } from '../constants/span';\nimport { TNil, TraceSpan } from '../types';\n\n// filter spans where all filters added need to be true for each individual span that is returned\n// i.e. the more filters added -> the more specific that the returned results are\nexport function filterSpans(searchProps: SearchProps, spans: TraceSpan[] | TNil) {\n  if (!spans) {\n    return undefined;\n  }\n\n  let filteredSpans = false;\n  if (searchProps.serviceName) {\n    spans = getServiceNameMatches(spans, searchProps);\n    filteredSpans = true;\n  }\n  if (searchProps.spanName) {\n    spans = getSpanNameMatches(spans, searchProps);\n    filteredSpans = true;\n  }\n  if (searchProps.from || searchProps.to) {\n    spans = getDurationMatches(spans, searchProps);\n    filteredSpans = true;\n  }\n  const tagMatches = getTagMatches(spans, searchProps.tags);\n  if (tagMatches) {\n    spans = tagMatches;\n    filteredSpans = true;\n  }\n\n  if (searchProps.query) {\n    const queryMatches = getQueryMatches(searchProps.query, spans);\n    if (queryMatches) {\n      spans = queryMatches;\n      filteredSpans = true;\n    }\n  }\n\n  return filteredSpans ? new Set(spans.map((span: TraceSpan) => span.spanID)) : undefined;\n}\n\nexport function getQueryMatches(query: string, spans: TraceSpan[] | TNil) {\n  if (!spans) {\n    return undefined;\n  }\n\n  const queryParts: string[] = [];\n\n  // split query by whitespace, remove empty strings, and extract filters\n  query\n    .split(/\\s+/)\n    .filter(Boolean)\n    .forEach((w) => {\n      queryParts.push(w.toLowerCase());\n    });\n\n  const isTextInQuery = (queryParts: string[], text: string) =>\n    queryParts.some((queryPart) => text.toLowerCase().includes(queryPart));\n\n  const isTextInKeyValues = (kvs: TraceKeyValuePair[]) =>\n    kvs\n      ? kvs.some((kv) => {\n          return isTextInQuery(queryParts, kv.key) || isTextInQuery(queryParts, getStringValue(kv.value));\n        })\n      : false;\n\n  const isSpanAMatch = (span: TraceSpan) =>\n    isTextInQuery(queryParts, span.operationName) ||\n    isTextInQuery(queryParts, span.process.serviceName) ||\n    isTextInKeyValues(span.tags) ||\n    (span.kind && isTextInQuery(queryParts, span.kind)) ||\n    (span.statusCode !== undefined && isTextInQuery(queryParts, SpanStatusCode[span.statusCode])) ||\n    (span.statusMessage && isTextInQuery(queryParts, span.statusMessage)) ||\n    (span.instrumentationLibraryName && isTextInQuery(queryParts, span.instrumentationLibraryName)) ||\n    (span.instrumentationLibraryVersion && isTextInQuery(queryParts, span.instrumentationLibraryVersion)) ||\n    (span.traceState && isTextInQuery(queryParts, span.traceState)) ||\n    (span.logs !== null &&\n      span.logs.some((log) => (log.name && isTextInQuery(queryParts, log.name)) || isTextInKeyValues(log.fields))) ||\n    isTextInKeyValues(span.process.tags) ||\n    queryParts.some((queryPart) => queryPart === span.spanID);\n\n  return spans.filter(isSpanAMatch);\n}\n\nconst getTagMatches = (spans: TraceSpan[], tags: Tag[]) => {\n  // remove empty/default tags\n  tags = tags.filter((tag) => {\n    // tag.key === '' when it is cleared via pressing x icon in select field\n    return (tag.key && tag.key !== '') || tag.value;\n  });\n\n  if (tags.length > 0) {\n    return spans.filter((span: TraceSpan) => {\n      // match against every tag filter\n      return tags.every((tag: Tag) => {\n        if (tag.key && tag.value) {\n          if (\n            (tag.operator === '=' && checkKeyValConditionForMatch(tag, span)) ||\n            (tag.operator === '=~' && checkKeyValConditionForRegex(tag, span)) ||\n            (tag.operator === '!=' && !checkKeyValConditionForMatch(tag, span)) ||\n            (tag.operator === '!~' && !checkKeyValConditionForRegex(tag, span))\n          ) {\n            return true;\n          }\n          return false;\n        } else if (tag.key) {\n          if (\n            span.tags.some((kv) => checkKeyForMatch(tag.key!, kv.key)) ||\n            span.process.tags.some((kv) => checkKeyForMatch(tag.key!, kv.key)) ||\n            (span.logs && span.logs.some((log) => log.fields.some((kv) => checkKeyForMatch(tag.key!, kv.key)))) ||\n            (span.kind && tag.key === KIND) ||\n            (span.statusCode !== undefined && tag.key === STATUS) ||\n            (span.statusMessage && tag.key === STATUS_MESSAGE) ||\n            (span.instrumentationLibraryName && tag.key === LIBRARY_NAME) ||\n            (span.instrumentationLibraryVersion && tag.key === LIBRARY_VERSION) ||\n            (span.traceState && tag.key === TRACE_STATE) ||\n            tag.key === ID\n          ) {\n            return tag.operator === '=' || tag.operator === '=~' ? true : false;\n          }\n          return tag.operator === '=' || tag.operator === '=~' ? false : true;\n        }\n        return false;\n      });\n    });\n  }\n  return undefined;\n};\n\nconst checkKeyValConditionForRegex = (tag: Tag, span: TraceSpan) => {\n  return (\n    span.tags.some((kv) => checkKeyAndValueForRegex(tag, kv)) ||\n    span.process.tags.some((kv) => checkKeyAndValueForRegex(tag, kv)) ||\n    (span.logs && span.logs.some((log) => log.fields.some((kv) => checkKeyAndValueForRegex(tag, kv)))) ||\n    (span.kind && tag.key === KIND && tag.value?.includes(span.kind)) ||\n    (span.statusCode !== undefined &&\n      tag.key === STATUS &&\n      tag.value?.includes(SpanStatusCode[span.statusCode].toLowerCase())) ||\n    (span.statusMessage && tag.key === STATUS_MESSAGE && tag.value?.includes(span.statusMessage)) ||\n    (span.instrumentationLibraryName &&\n      tag.key === LIBRARY_NAME &&\n      tag.value?.includes(span.instrumentationLibraryName)) ||\n    (span.instrumentationLibraryVersion &&\n      tag.key === LIBRARY_VERSION &&\n      tag.value?.includes(span.instrumentationLibraryVersion)) ||\n    (span.traceState && tag.key === TRACE_STATE && tag.value?.includes(span.traceState)) ||\n    (tag.key === ID && tag.value?.includes(span.spanID))\n  );\n};\n\nconst checkKeyValConditionForMatch = (tag: Tag, span: TraceSpan) => {\n  return (\n    span.tags.some((kv) => checkKeyAndValueForMatch(tag, kv)) ||\n    span.process.tags.some((kv) => checkKeyAndValueForMatch(tag, kv)) ||\n    (span.logs && span.logs.some((log) => log.fields.some((kv) => checkKeyAndValueForMatch(tag, kv)))) ||\n    (span.kind && tag.key === KIND && tag.value === span.kind) ||\n    (span.statusCode !== undefined &&\n      tag.key === STATUS &&\n      tag.value === SpanStatusCode[span.statusCode].toLowerCase()) ||\n    (span.statusMessage && tag.key === STATUS_MESSAGE && tag.value === span.statusMessage) ||\n    (span.instrumentationLibraryName && tag.key === LIBRARY_NAME && tag.value === span.instrumentationLibraryName) ||\n    (span.instrumentationLibraryVersion &&\n      tag.key === LIBRARY_VERSION &&\n      tag.value === span.instrumentationLibraryVersion) ||\n    (span.traceState && tag.key === TRACE_STATE && tag.value === span.traceState) ||\n    (tag.key === ID && tag.value === span.spanID)\n  );\n};\n\nconst checkKeyForMatch = (tagKey: string, key: string) => {\n  return tagKey === key.toString();\n};\n\nconst checkKeyAndValueForMatch = (tag: Tag, kv: TraceKeyValuePair) => {\n  return tag.key === kv.key && tag.value === getStringValue(kv.value);\n};\n\nconst checkKeyAndValueForRegex = (tag: Tag, kv: TraceKeyValuePair) => {\n  return kv.key.includes(tag.key || '') && getStringValue(kv.value).includes(tag.value || '');\n};\n\nconst getStringValue = (value: string | number | boolean | undefined) => {\n  return value ? value.toString() : '';\n};\n\nconst getServiceNameMatches = (spans: TraceSpan[], searchProps: SearchProps) => {\n  return spans.filter((span: TraceSpan) => {\n    return searchProps.serviceNameOperator === '='\n      ? span.process.serviceName === searchProps.serviceName\n      : span.process.serviceName !== searchProps.serviceName;\n  });\n};\n\nconst getSpanNameMatches = (spans: TraceSpan[], searchProps: SearchProps) => {\n  return spans.filter((span: TraceSpan) => {\n    return searchProps.spanNameOperator === '='\n      ? span.operationName === searchProps.spanName\n      : span.operationName !== searchProps.spanName;\n  });\n};\n\nconst getDurationMatches = (spans: TraceSpan[], searchProps: SearchProps) => {\n  const from = convertTimeFilter(searchProps?.from || '');\n  const to = convertTimeFilter(searchProps?.to || '');\n  let filteredSpans: TraceSpan[] = [];\n\n  if (from) {\n    filteredSpans = spans.filter((span: TraceSpan) => {\n      return searchProps.fromOperator === '>' ? span.duration > from : span.duration >= from;\n    });\n  }\n  if (to) {\n    const filterForDuration = (span: TraceSpan) =>\n      searchProps.toOperator === '<' ? span.duration < to : span.duration <= to;\n    filteredSpans =\n      filteredSpans.length > 0\n        ? filteredSpans.filter((span: TraceSpan) => {\n            return filterForDuration(span);\n          })\n        : spans.filter((span: TraceSpan) => {\n            return filterForDuration(span);\n          });\n  }\n\n  return filteredSpans;\n};\n\nexport const convertTimeFilter = (time: string) => {\n  if (time.includes('ns')) {\n    return parseFloat(time.split('ns')[0]) / 1000;\n  } else if (time.includes('us')) {\n    return parseFloat(time.split('us')[0]);\n  } else if (time.includes('µs')) {\n    return parseFloat(time.split('µs')[0]);\n  } else if (time.includes('ms')) {\n    return parseFloat(time.split('ms')[0]) * 1000;\n  } else if (time.includes('s')) {\n    return parseFloat(time.split('s')[0]) * 1000 * 1000;\n  } else if (time.includes('m')) {\n    return parseFloat(time.split('m')[0]) * 1000 * 1000 * 60;\n  } else if (time.includes('h')) {\n    return parseFloat(time.split('h')[0]) * 1000 * 1000 * 60 * 60;\n  }\n  return undefined;\n};\n","// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { memo, Dispatch, SetStateAction, useMemo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Switch, useStyles2 } from '@grafana/ui';\nimport { getButtonStyles } from '@grafana/ui/src/components/Button';\n\nimport { SearchProps } from '../../../useSearch';\nimport { Trace } from '../../types';\nimport { convertTimeFilter } from '../../utils/filter-spans';\n\nimport NextPrevResult from './NextPrevResult';\n\nexport type TracePageSearchBarProps = {\n  trace: Trace;\n  search: SearchProps;\n  spanFilterMatches: Set<string> | undefined;\n  showSpanFilterMatchesOnly: boolean;\n  setShowSpanFilterMatchesOnly: (showMatchesOnly: boolean) => void;\n  showCriticalPathSpansOnly: boolean;\n  setShowCriticalPathSpansOnly: (showCriticalPath: boolean) => void;\n  focusedSpanIndexForSearch: number;\n  setFocusedSpanIndexForSearch: Dispatch<SetStateAction<number>>;\n  setFocusedSpanIdForSearch: Dispatch<SetStateAction<string>>;\n  datasourceType: string;\n  clear: () => void;\n  showSpanFilters: boolean;\n};\n\nexport default memo(function TracePageSearchBar(props: TracePageSearchBarProps) {\n  const {\n    trace,\n    search,\n    spanFilterMatches,\n    showSpanFilterMatchesOnly,\n    setShowSpanFilterMatchesOnly,\n    showCriticalPathSpansOnly,\n    setShowCriticalPathSpansOnly,\n    focusedSpanIndexForSearch,\n    setFocusedSpanIndexForSearch,\n    setFocusedSpanIdForSearch,\n    datasourceType,\n    clear,\n    showSpanFilters,\n  } = props;\n  const styles = useStyles2(getStyles);\n\n  const clearEnabled = useMemo(() => {\n    return (\n      (search.serviceName && search.serviceName !== '') ||\n      (search.spanName && search.spanName !== '') ||\n      convertTimeFilter(search.from || '') ||\n      convertTimeFilter(search.to || '') ||\n      search.tags.length > 1 ||\n      search.tags.some((tag) => {\n        return tag.key;\n      }) ||\n      (search.query && search.query !== '') ||\n      showSpanFilterMatchesOnly\n    );\n  }, [\n    search.serviceName,\n    search.spanName,\n    search.from,\n    search.to,\n    search.tags,\n    search.query,\n    showSpanFilterMatchesOnly,\n  ]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.controls}>\n        <>\n          <div>\n            <Button\n              variant=\"destructive\"\n              disabled={!clearEnabled}\n              type=\"button\"\n              fill=\"outline\"\n              aria-label=\"Clear filters button\"\n              onClick={clear}\n            >\n              Clear\n            </Button>\n            <div className={styles.matchesOnly}>\n              <Switch\n                value={showSpanFilterMatchesOnly}\n                onChange={(value) => setShowSpanFilterMatchesOnly(value.currentTarget.checked ?? false)}\n                label=\"Show matches only switch\"\n                disabled={!spanFilterMatches?.size}\n              />\n              <Button\n                onClick={() => setShowSpanFilterMatchesOnly(!showSpanFilterMatchesOnly)}\n                className={styles.clearMatchesButton}\n                variant=\"secondary\"\n                fill=\"text\"\n                disabled={!spanFilterMatches?.size}\n              >\n                Show matches only\n              </Button>\n            </div>\n            <div className={styles.matchesOnly}>\n              <Switch\n                value={showCriticalPathSpansOnly}\n                onChange={(value) => setShowCriticalPathSpansOnly(value.currentTarget.checked ?? false)}\n                label=\"Show critical path only switch\"\n              />\n              <Button\n                onClick={() => setShowCriticalPathSpansOnly(!showCriticalPathSpansOnly)}\n                className={styles.clearMatchesButton}\n                variant=\"secondary\"\n                fill=\"text\"\n              >\n                Show critical path only\n              </Button>\n            </div>\n          </div>\n          <div className={styles.nextPrevResult}>\n            <NextPrevResult\n              trace={trace}\n              spanFilterMatches={spanFilterMatches}\n              setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n              focusedSpanIndexForSearch={focusedSpanIndexForSearch}\n              setFocusedSpanIndexForSearch={setFocusedSpanIndexForSearch}\n              datasourceType={datasourceType}\n              showSpanFilters={showSpanFilters}\n            />\n          </div>\n        </>\n      </div>\n    </div>\n  );\n});\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const buttonStyles = getButtonStyles({ theme, variant: 'secondary', size: 'md', iconOnly: false, fill: 'outline' });\n\n  return {\n    button: css(buttonStyles.button),\n    buttonDisabled: css(buttonStyles.disabled, { pointerEvents: 'none', cursor: 'not-allowed' }),\n    container: css({\n      display: 'inline',\n    }),\n    controls: css({\n      display: 'flex',\n      justifyContent: 'flex-end',\n      margin: '5px 0 0 0',\n    }),\n    matchesOnly: css({\n      display: 'inline-flex',\n      margin: '0 0 0 25px',\n      verticalAlign: 'middle',\n      alignItems: 'center',\n    }),\n    clearMatchesButton: css({\n      color: theme.colors.text.primary,\n\n      '&:hover': {\n        background: 'inherit',\n      },\n    }),\n    nextPrevResult: css({\n      marginLeft: 'auto',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n  };\n};\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport { SpanStatusCode } from '@opentelemetry/api';\nimport { uniq } from 'lodash';\nimport React, { useState, useEffect, memo, useCallback } from 'react';\n\nimport { GrafanaTheme2, SelectableValue, toOption } from '@grafana/data';\nimport { AccessoryButton } from '@grafana/experimental';\nimport { IntervalInput } from '@grafana/o11y-ds-frontend';\nimport {\n  Collapse,\n  HorizontalGroup,\n  Icon,\n  InlineField,\n  InlineFieldRow,\n  Select,\n  Tooltip,\n  useStyles2,\n  Input,\n} from '@grafana/ui';\n\nimport { defaultFilters, randomId, SearchProps, Tag } from '../../../useSearch';\nimport SearchBarInput from '../../common/SearchBarInput';\nimport { KIND, LIBRARY_NAME, LIBRARY_VERSION, STATUS, STATUS_MESSAGE, TRACE_STATE, ID } from '../../constants/span';\nimport { Trace } from '../../types';\nimport NextPrevResult from '../SearchBar/NextPrevResult';\nimport TracePageSearchBar from '../SearchBar/TracePageSearchBar';\n\nexport type SpanFilterProps = {\n  trace: Trace;\n  search: SearchProps;\n  setSearch: React.Dispatch<React.SetStateAction<SearchProps>>;\n  showSpanFilters: boolean;\n  setShowSpanFilters: (isOpen: boolean) => void;\n  showSpanFilterMatchesOnly: boolean;\n  setShowSpanFilterMatchesOnly: (showMatchesOnly: boolean) => void;\n  setFocusedSpanIdForSearch: React.Dispatch<React.SetStateAction<string>>;\n  showCriticalPathSpansOnly: boolean;\n  setShowCriticalPathSpansOnly: (showCriticalPathSpansOnly: boolean) => void;\n  spanFilterMatches: Set<string> | undefined;\n  datasourceType: string;\n};\n\nexport const SpanFilters = memo((props: SpanFilterProps) => {\n  const {\n    trace,\n    search,\n    setSearch,\n    showSpanFilters,\n    setShowSpanFilters,\n    showSpanFilterMatchesOnly,\n    setShowSpanFilterMatchesOnly,\n    showCriticalPathSpansOnly,\n    setShowCriticalPathSpansOnly,\n    setFocusedSpanIdForSearch,\n    spanFilterMatches,\n    datasourceType,\n  } = props;\n  const styles = { ...useStyles2(getStyles) };\n  const [serviceNames, setServiceNames] = useState<Array<SelectableValue<string>>>();\n  const [spanNames, setSpanNames] = useState<Array<SelectableValue<string>>>();\n  const [tagKeys, setTagKeys] = useState<Array<SelectableValue<string>>>();\n  const [tagValues, setTagValues] = useState<{ [key: string]: Array<SelectableValue<string>> }>({});\n  const [focusedSpanIndexForSearch, setFocusedSpanIndexForSearch] = useState(-1);\n\n  const durationRegex = /^\\d+(?:\\.\\d)?\\d*(?:ns|us|µs|ms|s|m|h)$/;\n\n  const clear = useCallback(() => {\n    setServiceNames(undefined);\n    setSpanNames(undefined);\n    setTagKeys(undefined);\n    setTagValues({});\n    setSearch(defaultFilters);\n    setShowSpanFilterMatchesOnly(false);\n  }, [setSearch, setShowSpanFilterMatchesOnly]);\n\n  useEffect(() => {\n    clear();\n  }, [clear, trace]);\n\n  if (!trace) {\n    return null;\n  }\n\n  const setSpanFiltersSearch = (spanSearch: SearchProps) => {\n    setFocusedSpanIndexForSearch(-1);\n    setFocusedSpanIdForSearch('');\n    setSearch(spanSearch);\n  };\n\n  const getServiceNames = () => {\n    if (!serviceNames) {\n      const serviceNames = trace.spans.map((span) => {\n        return span.process.serviceName;\n      });\n      setServiceNames(uniq(serviceNames).sort().map(toOption));\n    }\n  };\n\n  const getSpanNames = () => {\n    if (!spanNames) {\n      const spanNames = trace.spans.map((span) => {\n        return span.operationName;\n      });\n      setSpanNames(uniq(spanNames).sort().map(toOption));\n    }\n  };\n\n  const getTagKeys = () => {\n    if (!tagKeys) {\n      let keys: string[] = [];\n      let logKeys: string[] = [];\n\n      trace.spans.forEach((span) => {\n        span.tags.forEach((tag) => {\n          keys.push(tag.key);\n        });\n        span.process.tags.forEach((tag) => {\n          keys.push(tag.key);\n        });\n        if (span.logs !== null) {\n          span.logs.forEach((log) => {\n            log.fields.forEach((field) => {\n              logKeys.push(field.key);\n            });\n          });\n        }\n\n        if (span.kind) {\n          keys.push(KIND);\n        }\n        if (span.statusCode !== undefined) {\n          keys.push(STATUS);\n        }\n        if (span.statusMessage) {\n          keys.push(STATUS_MESSAGE);\n        }\n        if (span.instrumentationLibraryName) {\n          keys.push(LIBRARY_NAME);\n        }\n        if (span.instrumentationLibraryVersion) {\n          keys.push(LIBRARY_VERSION);\n        }\n        if (span.traceState) {\n          keys.push(TRACE_STATE);\n        }\n        keys.push(ID);\n      });\n      keys = uniq(keys).sort();\n      logKeys = uniq(logKeys).sort();\n\n      setTagKeys([...keys, ...logKeys].map(toOption));\n    }\n  };\n\n  const getTagValues = async (key: string) => {\n    const values: string[] = [];\n\n    trace.spans.forEach((span) => {\n      const tagValue = span.tags.find((t) => t.key === key)?.value;\n      if (tagValue) {\n        values.push(tagValue.toString());\n      }\n      const processTagValue = span.process.tags.find((t) => t.key === key)?.value;\n      if (processTagValue) {\n        values.push(processTagValue.toString());\n      }\n      if (span.logs !== null) {\n        span.logs.forEach((log) => {\n          const logsTagValue = log.fields.find((t) => t.key === key)?.value;\n          if (logsTagValue) {\n            values.push(logsTagValue.toString());\n          }\n        });\n      }\n\n      switch (key) {\n        case KIND:\n          if (span.kind) {\n            values.push(span.kind);\n          }\n          break;\n        case STATUS:\n          if (span.statusCode !== undefined) {\n            values.push(SpanStatusCode[span.statusCode].toLowerCase());\n          }\n          break;\n        case STATUS_MESSAGE:\n          if (span.statusMessage) {\n            values.push(span.statusMessage);\n          }\n          break;\n        case LIBRARY_NAME:\n          if (span.instrumentationLibraryName) {\n            values.push(span.instrumentationLibraryName);\n          }\n          break;\n        case LIBRARY_VERSION:\n          if (span.instrumentationLibraryVersion) {\n            values.push(span.instrumentationLibraryVersion);\n          }\n          break;\n        case TRACE_STATE:\n          if (span.traceState) {\n            values.push(span.traceState);\n          }\n          break;\n        case ID:\n          values.push(span.spanID);\n          break;\n        default:\n          break;\n      }\n    });\n\n    return uniq(values).sort().map(toOption);\n  };\n\n  const onTagChange = (tag: Tag, v: SelectableValue<string>) => {\n    setSearch({\n      ...search,\n      tags: search.tags?.map((x) => {\n        return x.id === tag.id ? { ...x, key: v?.value || '', value: undefined } : x;\n      }),\n    });\n\n    const loadTagValues = async () => {\n      if (v?.value) {\n        setTagValues({\n          ...tagValues,\n          [tag.id]: await getTagValues(v.value),\n        });\n      } else {\n        // removed value\n        const updatedValues = { ...tagValues };\n        if (updatedValues[tag.id]) {\n          delete updatedValues[tag.id];\n        }\n        setTagValues(updatedValues);\n      }\n    };\n    loadTagValues();\n  };\n\n  const addTag = () => {\n    const tag = {\n      id: randomId(),\n      operator: '=',\n    };\n    setSearch({ ...search, tags: [...search.tags, tag] });\n  };\n\n  const removeTag = (id: string) => {\n    let tags = search.tags.filter((tag) => {\n      return tag.id !== id;\n    });\n    if (tags.length === 0) {\n      tags = [\n        {\n          id: randomId(),\n          operator: '=',\n        },\n      ];\n    }\n    setSearch({ ...search, tags: tags });\n  };\n\n  const collapseLabel = (\n    <>\n      <Tooltip\n        content=\"Filter your spans below. You can continue to apply filters until you have narrowed down your resulting spans to the select few you are most interested in.\"\n        placement=\"right\"\n      >\n        <span className={styles.collapseLabel}>\n          Span Filters\n          <Icon size=\"md\" name=\"info-circle\" />\n        </span>\n      </Tooltip>\n\n      {!showSpanFilters && (\n        <div className={styles.nextPrevResult}>\n          <NextPrevResult\n            trace={trace}\n            spanFilterMatches={spanFilterMatches}\n            setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n            focusedSpanIndexForSearch={focusedSpanIndexForSearch}\n            setFocusedSpanIndexForSearch={setFocusedSpanIndexForSearch}\n            datasourceType={datasourceType}\n            showSpanFilters={showSpanFilters}\n          />\n        </div>\n      )}\n    </>\n  );\n\n  return (\n    <div className={styles.container}>\n      <Collapse label={collapseLabel} collapsible={true} isOpen={showSpanFilters} onToggle={setShowSpanFilters}>\n        <InlineFieldRow className={styles.flexContainer}>\n          <InlineField label=\"Service Name\" labelWidth={16}>\n            <HorizontalGroup spacing={'xs'}>\n              <Select\n                aria-label=\"Select service name operator\"\n                onChange={(v) => setSpanFiltersSearch({ ...search, serviceNameOperator: v.value! })}\n                options={[toOption('='), toOption('!=')]}\n                value={search.serviceNameOperator}\n              />\n              <Select\n                aria-label=\"Select service name\"\n                isClearable\n                onChange={(v) => setSpanFiltersSearch({ ...search, serviceName: v?.value || '' })}\n                onOpenMenu={getServiceNames}\n                options={serviceNames}\n                placeholder=\"All service names\"\n                value={search.serviceName || null}\n              />\n            </HorizontalGroup>\n          </InlineField>\n          <SearchBarInput\n            onChange={(v) => {\n              setSpanFiltersSearch({ ...search, query: v });\n              if (v === '') {\n                setShowSpanFilterMatchesOnly(false);\n              }\n            }}\n            value={search.query || ''}\n          />\n        </InlineFieldRow>\n        <InlineFieldRow>\n          <InlineField label=\"Span Name\" labelWidth={16}>\n            <HorizontalGroup spacing={'xs'}>\n              <Select\n                aria-label=\"Select span name operator\"\n                onChange={(v) => setSpanFiltersSearch({ ...search, spanNameOperator: v.value! })}\n                options={[toOption('='), toOption('!=')]}\n                value={search.spanNameOperator}\n              />\n              <Select\n                aria-label=\"Select span name\"\n                isClearable\n                onChange={(v) => setSpanFiltersSearch({ ...search, spanName: v?.value || '' })}\n                onOpenMenu={getSpanNames}\n                options={spanNames}\n                placeholder=\"All span names\"\n                value={search.spanName || null}\n              />\n            </HorizontalGroup>\n          </InlineField>\n        </InlineFieldRow>\n        <InlineFieldRow>\n          <InlineField\n            label=\"Duration\"\n            labelWidth={16}\n            tooltip=\"Filter by duration. Accepted units are ns, us, ms, s, m, h\"\n          >\n            <HorizontalGroup spacing=\"xs\" align=\"flex-start\">\n              <Select\n                aria-label=\"Select min span operator\"\n                onChange={(v) => setSpanFiltersSearch({ ...search, fromOperator: v.value! })}\n                options={[toOption('>'), toOption('>=')]}\n                value={search.fromOperator}\n              />\n              <div className={styles.intervalInput}>\n                <IntervalInput\n                  ariaLabel=\"Select min span duration\"\n                  onChange={(val) => setSpanFiltersSearch({ ...search, from: val })}\n                  isInvalidError=\"Invalid duration\"\n                  placeholder=\"e.g. 100ms, 1.2s\"\n                  width={18}\n                  value={search.from || ''}\n                  validationRegex={durationRegex}\n                />\n              </div>\n              <Select\n                aria-label=\"Select max span operator\"\n                onChange={(v) => setSpanFiltersSearch({ ...search, toOperator: v.value! })}\n                options={[toOption('<'), toOption('<=')]}\n                value={search.toOperator}\n              />\n              <IntervalInput\n                ariaLabel=\"Select max span duration\"\n                onChange={(val) => setSpanFiltersSearch({ ...search, to: val })}\n                isInvalidError=\"Invalid duration\"\n                placeholder=\"e.g. 100ms, 1.2s\"\n                width={18}\n                value={search.to || ''}\n                validationRegex={durationRegex}\n              />\n            </HorizontalGroup>\n          </InlineField>\n        </InlineFieldRow>\n        <InlineFieldRow className={styles.tagsRow}>\n          <InlineField label=\"Tags\" labelWidth={16} tooltip=\"Filter by tags, process tags or log fields in your spans.\">\n            <div>\n              {search.tags.map((tag, i) => (\n                <div key={i}>\n                  <HorizontalGroup spacing={'xs'} width={'auto'}>\n                    <Select\n                      aria-label=\"Select tag key\"\n                      isClearable\n                      key={tag.key}\n                      onChange={(v) => onTagChange(tag, v)}\n                      onOpenMenu={getTagKeys}\n                      options={tagKeys}\n                      placeholder=\"Select tag\"\n                      value={tag.key || null}\n                    />\n                    <Select\n                      aria-label=\"Select tag operator\"\n                      onChange={(v) => {\n                        setSpanFiltersSearch({\n                          ...search,\n                          tags: search.tags?.map((x) => {\n                            return x.id === tag.id ? { ...x, operator: v.value! } : x;\n                          }),\n                        });\n                      }}\n                      options={[toOption('='), toOption('!='), toOption('=~'), toOption('!~')]}\n                      value={tag.operator}\n                    />\n                    <span className={styles.tagValues}>\n                      {(tag.operator === '=' || tag.operator === '!=') && (\n                        <Select\n                          aria-label=\"Select tag value\"\n                          isClearable\n                          key={tag.value}\n                          onChange={(v) => {\n                            setSpanFiltersSearch({\n                              ...search,\n                              tags: search.tags?.map((x) => {\n                                return x.id === tag.id ? { ...x, value: v?.value || '' } : x;\n                              }),\n                            });\n                          }}\n                          options={tagValues[tag.id] ? tagValues[tag.id] : []}\n                          placeholder=\"Select value\"\n                          value={tag.value}\n                        />\n                      )}\n                      {(tag.operator === '=~' || tag.operator === '!~') && (\n                        <Input\n                          aria-label=\"Input tag value\"\n                          onChange={(v) => {\n                            setSpanFiltersSearch({\n                              ...search,\n                              tags: search.tags?.map((x) => {\n                                return x.id === tag.id ? { ...x, value: v?.currentTarget?.value || '' } : x;\n                              }),\n                            });\n                          }}\n                          placeholder=\"Tag value\"\n                          width={18}\n                          value={tag.value || ''}\n                        />\n                      )}\n                    </span>\n                    {(tag.key || tag.value || search.tags.length > 1) && (\n                      <AccessoryButton\n                        aria-label=\"Remove tag\"\n                        variant=\"secondary\"\n                        icon=\"times\"\n                        onClick={() => removeTag(tag.id)}\n                        tooltip=\"Remove tag\"\n                      />\n                    )}\n                    {(tag.key || tag.value) && i === search.tags.length - 1 && (\n                      <span className={styles.addTag}>\n                        <AccessoryButton\n                          aria-label=\"Add tag\"\n                          variant=\"secondary\"\n                          icon=\"plus\"\n                          onClick={addTag}\n                          tooltip=\"Add tag\"\n                        />\n                      </span>\n                    )}\n                  </HorizontalGroup>\n                </div>\n              ))}\n            </div>\n          </InlineField>\n        </InlineFieldRow>\n\n        <TracePageSearchBar\n          trace={trace}\n          search={search}\n          spanFilterMatches={spanFilterMatches}\n          showSpanFilterMatchesOnly={showSpanFilterMatchesOnly}\n          setShowSpanFilterMatchesOnly={setShowSpanFilterMatchesOnly}\n          showCriticalPathSpansOnly={showCriticalPathSpansOnly}\n          setShowCriticalPathSpansOnly={setShowCriticalPathSpansOnly}\n          setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n          focusedSpanIndexForSearch={focusedSpanIndexForSearch}\n          setFocusedSpanIndexForSearch={setFocusedSpanIndexForSearch}\n          datasourceType={datasourceType}\n          clear={clear}\n          showSpanFilters={showSpanFilters}\n        />\n      </Collapse>\n    </div>\n  );\n});\n\nSpanFilters.displayName = 'SpanFilters';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    label: 'SpanFilters',\n    margin: `0.5em 0 -${theme.spacing(1)} 0`,\n    zIndex: 5,\n\n    '& > div': {\n      borderLeft: 'none',\n      borderRight: 'none',\n    },\n  }),\n  collapseLabel: css({\n    svg: {\n      color: '#aaa',\n      margin: '-2px 0 0 10px',\n    },\n  }),\n  flexContainer: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n  }),\n  addTag: css({\n    marginLeft: theme.spacing(1),\n  }),\n  intervalInput: css({\n    margin: '0 -4px 0 0',\n  }),\n  tagsRow: css({\n    margin: '-4px 0 0 0',\n  }),\n  tagValues: css({\n    maxWidth: '200px',\n  }),\n  nextPrevResult: css({\n    flex: 1,\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginRight: theme.spacing(1),\n  }),\n});\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { memo, useEffect, useMemo } from 'react';\nimport * as React from 'react';\n\nimport { CoreApp, DataFrame, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { Badge, BadgeColor, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { SearchProps } from '../../useSearch';\nimport ExternalLinks from '../common/ExternalLinks';\nimport TraceName from '../common/TraceName';\nimport { getTraceLinks } from '../model/link-patterns';\nimport { getHeaderTags, getTraceName } from '../model/trace-viewer';\nimport { Trace } from '../types';\nimport { formatDuration } from '../utils/date';\n\nimport TracePageActions from './Actions/TracePageActions';\nimport { SpanFilters } from './SpanFilters/SpanFilters';\n\nexport type TracePageHeaderProps = {\n  trace: Trace | null;\n  data: DataFrame;\n  app?: CoreApp;\n  timeZone: TimeZone;\n  search: SearchProps;\n  setSearch: React.Dispatch<React.SetStateAction<SearchProps>>;\n  showSpanFilters: boolean;\n  setShowSpanFilters: (isOpen: boolean) => void;\n  showSpanFilterMatchesOnly: boolean;\n  setShowSpanFilterMatchesOnly: (showMatchesOnly: boolean) => void;\n  showCriticalPathSpansOnly: boolean;\n  setShowCriticalPathSpansOnly: (showCriticalPathSpansOnly: boolean) => void;\n  setFocusedSpanIdForSearch: React.Dispatch<React.SetStateAction<string>>;\n  spanFilterMatches: Set<string> | undefined;\n  datasourceType: string;\n  setHeaderHeight: (height: number) => void;\n};\n\nexport const TracePageHeader = memo((props: TracePageHeaderProps) => {\n  const {\n    trace,\n    data,\n    app,\n    timeZone,\n    search,\n    setSearch,\n    showSpanFilters,\n    setShowSpanFilters,\n    showSpanFilterMatchesOnly,\n    setShowSpanFilterMatchesOnly,\n    showCriticalPathSpansOnly,\n    setShowCriticalPathSpansOnly,\n    setFocusedSpanIdForSearch,\n    spanFilterMatches,\n    datasourceType,\n    setHeaderHeight,\n  } = props;\n  const styles = useStyles2(getNewStyles);\n\n  useEffect(() => {\n    setHeaderHeight(document.querySelector('.' + styles.header)?.scrollHeight ?? 0);\n  }, [setHeaderHeight, showSpanFilters, styles.header]);\n\n  const links = useMemo(() => {\n    if (!trace) {\n      return [];\n    }\n    return getTraceLinks(trace);\n  }, [trace]);\n\n  if (!trace) {\n    return null;\n  }\n\n  const timestamp = (trace: Trace, timeZone: TimeZone) => {\n    // Convert date from micro to milli seconds\n    const dateStr = dateTimeFormat(trace.startTime / 1000, { timeZone, defaultWithMS: true });\n    const match = dateStr.match(/^(.+)(:\\d\\d\\.\\d+)$/);\n    return match ? (\n      <span className={styles.TracePageHeaderOverviewItemValue}>\n        {match[1]}\n        <span className={styles.TracePageHeaderOverviewItemValueDetail}>{match[2]}</span>\n      </span>\n    ) : (\n      dateStr\n    );\n  };\n\n  const title = (\n    <h1 className={cx(styles.title)}>\n      <TraceName traceName={getTraceName(trace.spans)} />\n      <small className={styles.duration}>{formatDuration(trace.duration)}</small>\n    </h1>\n  );\n\n  const { method, status, url } = getHeaderTags(trace.spans);\n  let statusColor: BadgeColor = 'green';\n  if (status && status.length > 0) {\n    if (status[0].value.toString().charAt(0) === '4') {\n      statusColor = 'orange';\n    } else if (status[0].value.toString().charAt(0) === '5') {\n      statusColor = 'red';\n    }\n  }\n\n  const urlTooltip = (url: string) => {\n    return (\n      <>\n        <div>http.url or http.target or http.path</div>\n        <div>({url})</div>\n      </>\n    );\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.titleRow}>\n        {links && links.length > 0 && <ExternalLinks links={links} className={styles.TracePageHeaderBack} />}\n        {title}\n        <TracePageActions traceId={trace.traceID} data={data} app={app} />\n      </div>\n\n      <div className={styles.subtitle}>\n        <span className={styles.timestamp}>{timestamp(trace, timeZone)}</span>\n        <span className={styles.tagMeta}>\n          {method && method.length > 0 && (\n            <Tooltip content={'http.method'} interactive={true}>\n              <span className={styles.tag}>\n                <Badge text={method[0].value} color=\"blue\" />\n              </span>\n            </Tooltip>\n          )}\n          {status && status.length > 0 && (\n            <Tooltip content={'http.status_code'} interactive={true}>\n              <span className={styles.tag}>\n                <Badge text={status[0].value} color={statusColor} />\n              </span>\n            </Tooltip>\n          )}\n          {url && url.length > 0 && (\n            <Tooltip content={urlTooltip(url[0].value)} interactive={true}>\n              <span className={styles.url}>{url[0].value}</span>\n            </Tooltip>\n          )}\n        </span>\n      </div>\n\n      <SpanFilters\n        trace={trace}\n        showSpanFilters={showSpanFilters}\n        setShowSpanFilters={setShowSpanFilters}\n        showSpanFilterMatchesOnly={showSpanFilterMatchesOnly}\n        setShowSpanFilterMatchesOnly={setShowSpanFilterMatchesOnly}\n        showCriticalPathSpansOnly={showCriticalPathSpansOnly}\n        setShowCriticalPathSpansOnly={setShowCriticalPathSpansOnly}\n        search={search}\n        setSearch={setSearch}\n        spanFilterMatches={spanFilterMatches}\n        setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n        datasourceType={datasourceType}\n      />\n    </header>\n  );\n});\n\nTracePageHeader.displayName = 'TracePageHeader';\n\nconst getNewStyles = (theme: GrafanaTheme2) => {\n  return {\n    TracePageHeaderBack: css({\n      label: 'TracePageHeaderBack',\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      backgroundColor: '#fafafa',\n      borderBottom: '1px solid #ddd',\n      borderRight: '1px solid #ddd',\n      color: 'inherit',\n      display: 'flex',\n      fontSize: '1.4rem',\n      padding: '0 1rem',\n      marginBottom: '-1px',\n      '&:hover': {\n        backgroundColor: '#f0f0f0',\n        borderColor: '#ccc',\n      },\n    }),\n    TracePageHeaderOverviewItemValueDetail: cx(\n      css({\n        label: 'TracePageHeaderOverviewItemValueDetail',\n        color: '#aaa',\n      }),\n      'trace-item-value-detail'\n    ),\n    TracePageHeaderOverviewItemValue: css({\n      label: 'TracePageHeaderOverviewItemValue',\n      '&:hover > .trace-item-value-detail': {\n        color: 'unset',\n      },\n    }),\n    header: css({\n      label: 'TracePageHeader',\n      backgroundColor: theme.colors.background.primary,\n      padding: '0.5em 0 0 0',\n      position: 'sticky',\n      top: 0,\n      zIndex: 5,\n      textAlign: 'left',\n    }),\n    titleRow: css({\n      alignItems: 'flex-start',\n      display: 'flex',\n      padding: '0 8px',\n      flexWrap: 'wrap',\n    }),\n    title: css({\n      color: 'inherit',\n      flex: 1,\n      fontSize: '1.7em',\n      lineHeight: '1em',\n      marginBottom: 0,\n      minWidth: '200px',\n    }),\n    subtitle: css({\n      flex: 1,\n      lineHeight: '1em',\n      margin: '-0.5em 0.5em 0.75em 0.5em',\n    }),\n    tag: css({\n      margin: '0 0.5em 0 0',\n    }),\n    duration: css({\n      color: '#aaa',\n      margin: '0 0.75em',\n    }),\n    timestamp: css({\n      verticalAlign: 'middle',\n    }),\n    tagMeta: css({\n      margin: '0 0.75em',\n      verticalAlign: 'text-top',\n    }),\n    url: css({\n      margin: '-2.5px 0.3em',\n      height: '15px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      maxWidth: '700px',\n      display: 'inline-block',\n    }),\n    TracePageHeaderTraceId: css({\n      label: 'TracePageHeaderTraceId',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      maxWidth: '30%',\n      display: 'inline-block',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme2,\n  toOption,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/experimental';\nimport { InlineField, InlineFieldRow, Input, Select, useStyles2 } from '@grafana/ui';\n\nexport interface SpanBarOptions {\n  type?: string;\n  tag?: string;\n}\n\nexport interface SpanBarOptionsData extends DataSourceJsonData {\n  spanBar?: SpanBarOptions;\n}\n\nexport const NONE = 'None';\nexport const DURATION = 'Duration';\nexport const TAG = 'Tag';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<SpanBarOptionsData> {}\n\nexport default function SpanBarSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles2(getStyles);\n  const selectOptions = [NONE, DURATION, TAG].map(toOption);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <InlineFieldRow className={styles.row}>\n        <InlineField label=\"Label\" labelWidth={26} tooltip=\"Default: duration\" grow>\n          <Select\n            inputId=\"label\"\n            options={selectOptions}\n            value={options.jsonData.spanBar?.type || ''}\n            onChange={(v) => {\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'spanBar', {\n                ...options.jsonData.spanBar,\n                type: v?.value ?? '',\n              });\n            }}\n            placeholder=\"Duration\"\n            isClearable\n            aria-label={'select-label-name'}\n            width={40}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      {options.jsonData.spanBar?.type === TAG && (\n        <InlineFieldRow className={styles.row}>\n          <InlineField\n            label=\"Tag key\"\n            labelWidth={26}\n            tooltip=\"Tag key which will be used to get the tag value. A span's attributes and resources will be searched for the tag key\"\n          >\n            <Input\n              type=\"text\"\n              placeholder=\"Enter tag key\"\n              onChange={(v) =>\n                updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'spanBar', {\n                  ...options.jsonData.spanBar,\n                  tag: v.currentTarget.value,\n                })\n              }\n              value={options.jsonData.spanBar?.tag || ''}\n              width={40}\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n    </div>\n  );\n}\n\nexport const SpanBarSection = ({ options, onOptionsChange }: DataSourcePluginOptionsEditorProps) => {\n  let suffix = options.type;\n  suffix += options.type === 'tempo' ? '/configure-tempo-data-source/#span-bar' : '/#span-bar';\n\n  return (\n    <ConfigSubSection\n      title=\"Span bar\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Add additional info next to the service and operation on a span bar row in the trace view.\"\n          suffix={suffix}\n          feature=\"the span bar\"\n        />\n      }\n    >\n      <SpanBarSettings options={options} onOptionsChange={onOptionsChange} />\n    </ConfigSubSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  infoText: css({\n    label: 'infoText',\n    paddingBottom: theme.spacing(2),\n    color: theme.colors.text.secondary,\n  }),\n  row: css({\n    label: 'row',\n    alignItems: 'baseline',\n  }),\n});\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TraceLog } from '@grafana/data';\n\nimport { TraceSpanReference } from '../../types/trace';\n\n/**\n * Which items of a {@link SpanDetail} component are expanded.\n */\nexport default class DetailState {\n  isTagsOpen: boolean;\n  isProcessOpen: boolean;\n  logs: { isOpen: boolean; openedItems: Set<TraceLog> };\n  references: { isOpen: boolean; openedItems: Set<TraceSpanReference> };\n  isWarningsOpen: boolean;\n  isStackTracesOpen: boolean;\n  isReferencesOpen: boolean;\n\n  constructor(oldState?: DetailState) {\n    const {\n      isTagsOpen,\n      isProcessOpen,\n      isReferencesOpen,\n      isWarningsOpen,\n      isStackTracesOpen,\n      logs,\n      references,\n    }: DetailState | Record<string, undefined> = oldState || {};\n    this.isTagsOpen = Boolean(isTagsOpen);\n    this.isProcessOpen = Boolean(isProcessOpen);\n    this.isReferencesOpen = Boolean(isReferencesOpen);\n    this.isWarningsOpen = Boolean(isWarningsOpen);\n    this.isStackTracesOpen = Boolean(isStackTracesOpen);\n    this.logs = {\n      isOpen: Boolean(logs && logs.isOpen),\n      openedItems: logs && logs.openedItems ? new Set(logs.openedItems) : new Set(),\n    };\n    this.references = {\n      isOpen: Boolean(references && references.isOpen),\n      openedItems: references && references.openedItems ? new Set(references.openedItems) : new Set(),\n    };\n  }\n\n  toggleTags() {\n    const next = new DetailState(this);\n    next.isTagsOpen = !this.isTagsOpen;\n    return next;\n  }\n\n  toggleProcess() {\n    const next = new DetailState(this);\n    next.isProcessOpen = !this.isProcessOpen;\n    return next;\n  }\n\n  toggleReferences() {\n    const next = new DetailState(this);\n    next.references.isOpen = !this.references.isOpen;\n    return next;\n  }\n\n  toggleReferenceItem(reference: TraceSpanReference) {\n    const next = new DetailState(this);\n    if (next.references.openedItems.has(reference)) {\n      next.references.openedItems.delete(reference);\n    } else {\n      next.references.openedItems.add(reference);\n    }\n    return next;\n  }\n\n  toggleWarnings() {\n    const next = new DetailState(this);\n    next.isWarningsOpen = !this.isWarningsOpen;\n    return next;\n  }\n\n  toggleStackTraces() {\n    const next = new DetailState(this);\n    next.isStackTracesOpen = !this.isStackTracesOpen;\n    return next;\n  }\n\n  toggleLogs() {\n    const next = new DetailState(this);\n    next.logs.isOpen = !this.logs.isOpen;\n    return next;\n  }\n\n  toggleLogItem(logItem: TraceLog) {\n    const next = new DetailState(this);\n    if (next.logs.openedItems.has(logItem)) {\n      next.logs.openedItems.delete(logItem);\n    } else {\n      next.logs.openedItems.add(logItem);\n    }\n    return next;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License\n\nexport default class TreeNode<TValue> {\n  value: TValue;\n  children: Array<TreeNode<TValue>>;\n\n  static iterFunction<TValue>(\n    fn: ((value: TValue, node: TreeNode<TValue>, depth: number) => TreeNode<TValue> | null) | Function,\n    depth = 0\n  ) {\n    return (node: TreeNode<TValue>) => fn(node.value, node, depth);\n  }\n\n  static searchFunction<TValue>(search: Function | TreeNode<TValue>) {\n    if (typeof search === 'function') {\n      return search;\n    }\n\n    return (value: TValue, node: TreeNode<TValue>) => (search instanceof TreeNode ? node === search : value === search);\n  }\n\n  constructor(value: TValue, children: Array<TreeNode<TValue>> = []) {\n    this.value = value;\n    this.children = children;\n  }\n\n  get depth(): number {\n    return this.children.reduce((depth, child) => Math.max(child.depth + 1, depth), 1);\n  }\n\n  get size() {\n    let i = 0;\n    this.walk(() => i++);\n    return i;\n  }\n\n  addChild(child: TreeNode<TValue> | TValue) {\n    this.children.push(child instanceof TreeNode ? child : new TreeNode(child));\n    return this;\n  }\n\n  find(search: Function | TreeNode<TValue>): TreeNode<TValue> | null {\n    const searchFn = TreeNode.iterFunction(TreeNode.searchFunction(search));\n    if (searchFn(this)) {\n      return this;\n    }\n    for (let i = 0; i < this.children.length; i++) {\n      const result = this.children[i].find(search);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getPath(search: Function | TreeNode<TValue>) {\n    const searchFn = TreeNode.iterFunction(TreeNode.searchFunction(search));\n\n    const findPath = (\n      currentNode: TreeNode<TValue>,\n      currentPath: Array<TreeNode<TValue>>\n    ): Array<TreeNode<TValue>> | null => {\n      // skip if we already found the result\n      const attempt = currentPath.concat([currentNode]);\n      // base case: return the array when there is a match\n      if (searchFn(currentNode)) {\n        return attempt;\n      }\n      for (let i = 0; i < currentNode.children.length; i++) {\n        const child = currentNode.children[i];\n        const match = findPath(child, attempt);\n        if (match) {\n          return match;\n        }\n      }\n      return null;\n    };\n\n    return findPath(this, []);\n  }\n\n  walk(fn: (spanID: TValue, node: TreeNode<TValue>, depth: number) => void, startDepth = 0) {\n    type StackEntry = {\n      node: TreeNode<TValue>;\n      depth: number;\n    };\n    const nodeStack: StackEntry[] = [];\n    let actualDepth = startDepth;\n    nodeStack.push({ node: this, depth: actualDepth });\n    while (nodeStack.length) {\n      const entry: StackEntry = nodeStack[nodeStack.length - 1];\n      nodeStack.pop();\n      const { node, depth } = entry;\n      fn(node.value, node, depth);\n      actualDepth = depth + 1;\n      let i = node.children.length - 1;\n      while (i >= 0) {\n        nodeStack.push({ node: node.children[i], depth: actualDepth });\n        i--;\n      }\n    }\n  }\n\n  paths(fn: (pathIds: TValue[]) => void) {\n    type StackEntry = {\n      node: TreeNode<TValue>;\n      childIndex: number;\n    };\n    const stack: StackEntry[] = [];\n    stack.push({ node: this, childIndex: 0 });\n    const paths: TValue[] = [];\n    while (stack.length) {\n      const { node, childIndex } = stack[stack.length - 1];\n      if (node.children.length >= childIndex + 1) {\n        stack[stack.length - 1].childIndex++;\n        stack.push({ node: node.children[childIndex], childIndex: 0 });\n      } else {\n        if (node.children.length === 0) {\n          const path = stack.map((item) => item.node.value);\n          fn(path);\n        }\n        stack.pop();\n      }\n    }\n    return paths;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { createSelector } from 'reselect';\n\nimport { TraceSpanData, TraceSpanReference } from '../types/trace';\n\nexport const getSpanId = (span: TraceSpanData) => span.spanID;\nexport const getSpanReferences = (span: TraceSpanData) => span.references || [];\nexport const getSpanReferenceByType = createSelector(\n  createSelector(({ span }: { span: TraceSpanData }) => span, getSpanReferences),\n  ({ type }: { type: string }) => type,\n  (references, type) => references.find((ref: TraceSpanReference) => ref.refType === type)\n);\nexport const getSpanParentId = createSelector(\n  (span: TraceSpanData) => getSpanReferenceByType({ span, type: 'CHILD_OF' }),\n  (childOfRef) => (childOfRef ? childOfRef.spanID : null)\n);\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { createSelector } from 'reselect';\n\nimport { TraceResponse, TraceSpanData } from '../types/trace';\nimport TreeNode from '../utils/TreeNode';\n\nimport { getSpanId } from './span';\n\nexport const getTraceSpans = (trace: TraceResponse) => trace.spans;\n\nexport const getTraceSpansAsMap = createSelector(getTraceSpans, (spans) =>\n  spans.reduce((map, span: TraceSpanData) => map.set(getSpanId(span), span), new Map())\n);\n\nexport const TREE_ROOT_ID = '__root__';\n\n/**\n * Build a tree of { value: spanID, children } items derived from the\n * `span.references` information. The tree represents the grouping of parent /\n * child relationships. The root-most node is nominal in that\n * `.value === TREE_ROOT_ID`. This is done because a root span (the main trace\n * span) is not always included with the trace data. Thus, there can be\n * multiple top-level spans, and the root node acts as their common parent.\n *\n * The children are sorted by `span.startTime` after the tree is built.\n *\n * @param  {Trace} trace The trace to build the tree of spanIDs.\n * @return {TreeNode}    A tree of spanIDs derived from the relationships\n *                       between spans in the trace.\n */\nexport function getTraceSpanIdsAsTree(trace: TraceResponse, spanMap: Map<string, TraceSpanData> | null = null) {\n  const nodesById = new Map(trace.spans.map((span: TraceSpanData) => [span.spanID, new TreeNode(span.spanID)]));\n  const spansById = spanMap ?? new Map(trace.spans.map((span: TraceSpanData) => [span.spanID, span]));\n  const root = new TreeNode(TREE_ROOT_ID);\n  trace.spans.forEach((span: TraceSpanData) => {\n    const node = nodesById.get(span.spanID)!;\n    if (Array.isArray(span.references) && span.references.length) {\n      const { refType, spanID: parentID } = span.references[0];\n      if (refType === 'CHILD_OF' || refType === 'FOLLOWS_FROM') {\n        const parent = nodesById.get(parentID) || root;\n        parent.children?.push(node);\n      } else {\n        throw new Error(`Unrecognized ref type: ${refType}`);\n      }\n    } else {\n      root.children.push(node);\n    }\n  });\n  const comparator = (nodeA: TreeNode<string>, nodeB: TreeNode<string>) => {\n    const a: TraceSpanData | undefined = nodeA?.value ? spansById.get(nodeA.value.toString()) : undefined;\n    const b: TraceSpanData | undefined = nodeB?.value ? spansById.get(nodeB.value.toString()) : undefined;\n    return +(a?.startTime! > b?.startTime!) || +(a?.startTime === b?.startTime) - 1;\n  };\n  trace.spans.forEach((span: TraceSpanData) => {\n    const node = nodesById.get(span.spanID);\n    if (node!.children.length > 1) {\n      node?.children.sort(comparator);\n    }\n  });\n  root.children.sort(comparator);\n  return root;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { isEqual as _isEqual } from 'lodash';\n\n// @ts-ignore\nimport { TraceKeyValuePair } from '@grafana/data';\n\nimport { getTraceSpanIdsAsTree } from '../selectors/trace';\nimport { TraceSpan, Trace, TraceResponse, TraceProcess } from '../types';\n// @ts-ignore\nimport TreeNode from '../utils/TreeNode';\nimport { getConfigValue } from '../utils/config/get-config';\n\nimport { getTraceName } from './trace-viewer';\n\n// exported for tests\nexport function deduplicateTags(tags: TraceKeyValuePair[]) {\n  const warningsHash: Map<string, string> = new Map<string, string>();\n  const dedupedTags: TraceKeyValuePair[] = tags.reduce<TraceKeyValuePair[]>((uniqueTags, tag) => {\n    if (!uniqueTags.some((t) => t.key === tag.key && t.value === tag.value)) {\n      uniqueTags.push(tag);\n    } else {\n      warningsHash.set(`${tag.key}:${tag.value}`, `Duplicate tag \"${tag.key}:${tag.value}\"`);\n    }\n    return uniqueTags;\n  }, []);\n  const warnings = Array.from(warningsHash.values());\n  return { dedupedTags, warnings };\n}\n\n// exported for tests\nexport function orderTags(tags: TraceKeyValuePair[], topPrefixes?: string[]) {\n  const orderedTags: TraceKeyValuePair[] = tags?.slice() ?? [];\n  const tp = (topPrefixes || []).map((p: string) => p.toLowerCase());\n\n  orderedTags.sort((a, b) => {\n    const aKey = a.key.toLowerCase();\n    const bKey = b.key.toLowerCase();\n\n    for (let i = 0; i < tp.length; i++) {\n      const p = tp[i];\n      if (aKey.startsWith(p) && !bKey.startsWith(p)) {\n        return -1;\n      }\n      if (!aKey.startsWith(p) && bKey.startsWith(p)) {\n        return 1;\n      }\n    }\n\n    if (aKey > bKey) {\n      return 1;\n    }\n    if (aKey < bKey) {\n      return -1;\n    }\n    return 0;\n  });\n\n  return orderedTags;\n}\n\n/**\n * NOTE: Mutates `data` - Transform the HTTP response data into the form the app\n * generally requires.\n */\nexport default function transformTraceData(data: TraceResponse | undefined): Trace | null {\n  if (!data?.traceID) {\n    return null;\n  }\n  const traceID = data.traceID.toLowerCase();\n\n  let traceEndTime = 0;\n  let traceStartTime = Number.MAX_SAFE_INTEGER;\n  const spanIdCounts = new Map();\n  const spanMap = new Map<string, TraceSpan>();\n  // filter out spans with empty start times\n  // eslint-disable-next-line no-param-reassign\n  data.spans = data.spans.filter((span) => Boolean(span.startTime));\n\n  // Sort process tags\n  data.processes = Object.entries(data.processes).reduce<Record<string, TraceProcess>>((processes, [id, process]) => {\n    processes[id] = {\n      ...process,\n      tags: orderTags(process.tags),\n    };\n    return processes;\n  }, {});\n\n  const max = data.spans.length;\n  for (let i = 0; i < max; i++) {\n    const span: TraceSpan = data.spans[i] as TraceSpan;\n    const { startTime, duration, processID } = span;\n\n    let spanID = span.spanID;\n    // check for start / end time for the trace\n    if (startTime < traceStartTime) {\n      traceStartTime = startTime;\n    }\n    if (startTime + duration > traceEndTime) {\n      traceEndTime = startTime + duration;\n    }\n    // make sure span IDs are unique\n    const idCount = spanIdCounts.get(spanID);\n    if (idCount != null) {\n      // eslint-disable-next-line no-console\n      console.warn(`Dupe spanID, ${idCount + 1} x ${spanID}`, span, spanMap.get(spanID));\n      if (_isEqual(span, spanMap.get(spanID))) {\n        // eslint-disable-next-line no-console\n        console.warn('\\t two spans with same ID have `isEqual(...) === true`');\n      }\n      spanIdCounts.set(spanID, idCount + 1);\n      spanID = `${spanID}_${idCount}`;\n      span.spanID = spanID;\n    } else {\n      spanIdCounts.set(spanID, 1);\n    }\n    span.process = data.processes[processID];\n    spanMap.set(spanID, span);\n  }\n  // tree is necessary to sort the spans, so children follow parents, and\n  // siblings are sorted by start time\n  const tree = getTraceSpanIdsAsTree(data, spanMap);\n  const spans: TraceSpan[] = [];\n  const svcCounts: Record<string, number> = {};\n\n  tree.walk((spanID: string, node: TreeNode<string>, depth = 0) => {\n    if (spanID === '__root__') {\n      return;\n    }\n    if (typeof spanID !== 'string') {\n      return;\n    }\n    const span = spanMap.get(spanID);\n    if (!span) {\n      return;\n    }\n    const { serviceName } = span.process;\n    svcCounts[serviceName] = (svcCounts[serviceName] || 0) + 1;\n    span.relativeStartTime = span.startTime - traceStartTime;\n    span.depth = depth - 1;\n    span.hasChildren = node.children.length > 0;\n    span.childSpanCount = node.children.length;\n    span.warnings = span.warnings || [];\n    span.tags = span.tags || [];\n    span.references = span.references || [];\n\n    span.childSpanIds = node.children\n      .slice()\n      .sort((a, b) => {\n        const spanA = spanMap.get(a.value)!;\n        const spanB = spanMap.get(b.value)!;\n        return spanB.startTime + spanB.duration - (spanA.startTime + spanA.duration);\n      })\n      .map((each) => each.value);\n\n    const tagsInfo = deduplicateTags(span.tags);\n    span.tags = orderTags(tagsInfo.dedupedTags, getConfigValue('topTagPrefixes'));\n    span.warnings = span.warnings.concat(tagsInfo.warnings);\n    span.references.forEach((ref, index) => {\n      const refSpan = spanMap.get(ref.spanID);\n      if (refSpan) {\n        // eslint-disable-next-line no-param-reassign\n        ref.span = refSpan;\n        if (index > 0) {\n          // Don't take into account the parent, just other references.\n          refSpan.subsidiarilyReferencedBy = refSpan.subsidiarilyReferencedBy || [];\n          refSpan.subsidiarilyReferencedBy.push({\n            spanID,\n            traceID,\n            span,\n            refType: ref.refType,\n          });\n        }\n      }\n    });\n    spans.push(span);\n  });\n  const traceName = getTraceName(spans);\n  const services = Object.keys(svcCounts).map((name) => ({ name, numberOfSpans: svcCounts[name] }));\n  return {\n    services,\n    spans,\n    traceID,\n    traceName,\n    // can't use spread operator for intersection types\n    // repl: https://goo.gl/4Z23MJ\n    // issue: https://github.com/facebook/flow/issues/1511\n    processes: data.processes,\n    duration: traceEndTime - traceStartTime,\n    startTime: traceStartTime,\n    endTime: traceEndTime,\n  };\n}\n","import * as React from 'react';\n\nimport { Field, LinkTarget } from '@grafana/data';\n\nimport { TraceSpan } from './trace';\n\nexport enum SpanLinkType {\n  Logs = 'log',\n  Traces = 'trace',\n  Metrics = 'metric',\n  Profiles = 'profile',\n  Session = 'session',\n  Unknown = 'unknown',\n}\n\nexport type SpanLinkDef = {\n  href: string;\n  onClick?: (event: unknown) => void;\n  content: React.ReactNode;\n  title?: string;\n  field: Field;\n  type: SpanLinkType;\n  target?: LinkTarget;\n};\n\nexport type SpanLinkFunc = (span: TraceSpan) => SpanLinkDef[] | undefined;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// // export default {\n// const updateTypes = {\n//   DRAG_END: 'DRAG_END',\n//   DRAG_MOVE: 'DRAG_MOVE',\n//   DRAG_START: 'DRAG_START',\n//   MOUSE_ENTER: 'MOUSE_ENTER',\n//   MOUSE_LEAVE: 'MOUSE_LEAVE',\n//   MOUSE_MOVE: 'MOUSE_MOVE',\n// };\n\n// const typeUpdateTypes = updateTypes as { [K in keyof typeof updateTypes]: K };\n\nenum EUpdateTypes {\n  DragEnd = 'DragEnd',\n  DragMove = 'DragMove',\n  DragStart = 'DragStart',\n  MouseEnter = 'MouseEnter',\n  MouseLeave = 'MouseLeave',\n  MouseMove = 'MouseMove',\n}\n\nexport default EUpdateTypes;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { get as _get } from 'lodash';\n\nimport { TNil } from '../../types';\n\nimport EUpdateTypes from './EUpdateTypes';\nimport { DraggableBounds, DraggingUpdate } from './types';\n\nconst LEFT_MOUSE_BUTTON = 0;\n\nexport type DraggableManagerOptions = {\n  getBounds: (tag: string | TNil) => DraggableBounds;\n  onMouseEnter?: (update: DraggingUpdate) => void;\n  onMouseLeave?: (update: DraggingUpdate) => void;\n  onMouseMove?: (update: DraggingUpdate) => void;\n  onDragStart?: (update: DraggingUpdate) => void;\n  onDragMove?: (update: DraggingUpdate) => void;\n  onDragEnd?: (update: DraggingUpdate) => void;\n  resetBoundsOnResize?: boolean;\n  tag?: string;\n};\n\nexport default class DraggableManager {\n  // cache the last known DraggableBounds (invalidate via `#resetBounds())\n  _bounds: DraggableBounds | TNil;\n  _isDragging: boolean;\n  // optional callbacks for various dragging events\n  _onMouseEnter: ((update: DraggingUpdate) => void) | TNil;\n  _onMouseLeave: ((update: DraggingUpdate) => void) | TNil;\n  _onMouseMove: ((update: DraggingUpdate) => void) | TNil;\n  _onDragStart: ((update: DraggingUpdate) => void) | TNil;\n  _onDragMove: ((update: DraggingUpdate) => void) | TNil;\n  _onDragEnd: ((update: DraggingUpdate) => void) | TNil;\n  // whether to reset the bounds on window resize\n  _resetBoundsOnResize: boolean;\n\n  /**\n   * Get the `DraggableBounds` for the current drag. The returned value is\n   * cached until either `#resetBounds()` is called or the window is resized\n   * (assuming `_resetBoundsOnResize` is `true`). The `DraggableBounds` defines\n   * the range the current drag can span to. It also establishes the left offset\n   * to adjust `clientX` by (from the `MouseEvent`s).\n   */\n  getBounds: (tag: string | TNil) => DraggableBounds;\n\n  // convenience data\n  tag: string | TNil;\n\n  // handlers for integration with DOM elements\n  handleMouseEnter: (event: React.MouseEvent) => void;\n  handleMouseMove: (event: React.MouseEvent) => void;\n  handleMouseLeave: (event: React.MouseEvent) => void;\n  handleMouseDown: (event: React.MouseEvent) => void;\n\n  constructor({ getBounds, tag, resetBoundsOnResize = true, ...rest }: DraggableManagerOptions) {\n    this.handleMouseDown = this._handleDragEvent;\n    this.handleMouseEnter = this._handleMinorMouseEvent;\n    this.handleMouseMove = this._handleMinorMouseEvent;\n    this.handleMouseLeave = this._handleMinorMouseEvent;\n\n    this.getBounds = getBounds;\n    this.tag = tag;\n    this._isDragging = false;\n    this._bounds = undefined;\n    this._resetBoundsOnResize = Boolean(resetBoundsOnResize);\n    if (this._resetBoundsOnResize) {\n      window.addEventListener('resize', this.resetBounds);\n    }\n    this._onMouseEnter = rest.onMouseEnter;\n    this._onMouseLeave = rest.onMouseLeave;\n    this._onMouseMove = rest.onMouseMove;\n    this._onDragStart = rest.onDragStart;\n    this._onDragMove = rest.onDragMove;\n    this._onDragEnd = rest.onDragEnd;\n  }\n\n  _getBounds(): DraggableBounds {\n    if (!this._bounds) {\n      this._bounds = this.getBounds(this.tag);\n    }\n    return this._bounds;\n  }\n\n  _getPosition(clientX: number) {\n    const { clientXLeft, maxValue, minValue, width } = this._getBounds();\n    let x = clientX - clientXLeft;\n    let value = x / width;\n    if (minValue != null && value < minValue) {\n      value = minValue;\n      x = minValue * width;\n    } else if (maxValue != null && value > maxValue) {\n      value = maxValue;\n      x = maxValue * width;\n    }\n    return { value, x };\n  }\n\n  _stopDragging() {\n    window.removeEventListener('mousemove', this._handleDragEvent);\n    window.removeEventListener('mouseup', this._handleDragEvent);\n    const style = _get(document, 'body.style');\n    if (style) {\n      style.userSelect = 'auto';\n    }\n    this._isDragging = false;\n  }\n\n  isDragging() {\n    return this._isDragging;\n  }\n\n  dispose() {\n    if (this._isDragging) {\n      this._stopDragging();\n    }\n    if (this._resetBoundsOnResize) {\n      window.removeEventListener('resize', this.resetBounds);\n    }\n    this._bounds = undefined;\n    this._onMouseEnter = undefined;\n    this._onMouseLeave = undefined;\n    this._onMouseMove = undefined;\n    this._onDragStart = undefined;\n    this._onDragMove = undefined;\n    this._onDragEnd = undefined;\n  }\n\n  resetBounds = () => {\n    this._bounds = undefined;\n  };\n\n  _handleMinorMouseEvent = (event: React.MouseEvent) => {\n    const { button, clientX, type: eventType } = event;\n    if (this._isDragging || button !== LEFT_MOUSE_BUTTON) {\n      return;\n    }\n    let type: EUpdateTypes | null = null;\n    let handler: ((update: DraggingUpdate) => void) | TNil;\n    if (eventType === 'mouseenter') {\n      type = EUpdateTypes.MouseEnter;\n      handler = this._onMouseEnter;\n    } else if (eventType === 'mouseleave') {\n      type = EUpdateTypes.MouseLeave;\n      handler = this._onMouseLeave;\n    } else if (eventType === 'mousemove') {\n      type = EUpdateTypes.MouseMove;\n      handler = this._onMouseMove;\n    } else {\n      throw new Error(`invalid event type: ${eventType}`);\n    }\n    if (!handler) {\n      return;\n    }\n    const { value, x } = this._getPosition(clientX);\n    handler({\n      event,\n      type,\n      value,\n      x,\n      manager: this,\n      tag: this.tag,\n    });\n  };\n\n  _handleDragEvent = (event: MouseEvent | React.MouseEvent) => {\n    const { button, clientX, type: eventType } = event;\n    let type: EUpdateTypes | null = null;\n    let handler: ((update: DraggingUpdate) => void) | TNil;\n    if (eventType === 'mousedown') {\n      if (this._isDragging || button !== LEFT_MOUSE_BUTTON) {\n        return;\n      }\n      window.addEventListener('mousemove', this._handleDragEvent);\n      window.addEventListener('mouseup', this._handleDragEvent);\n      const style = _get(document, 'body.style');\n      if (style) {\n        style.userSelect = 'none';\n      }\n      this._isDragging = true;\n\n      type = EUpdateTypes.DragStart;\n      handler = this._onDragStart;\n    } else if (eventType === 'mousemove') {\n      if (!this._isDragging) {\n        return;\n      }\n      type = EUpdateTypes.DragMove;\n      handler = this._onDragMove;\n    } else if (eventType === 'mouseup') {\n      if (!this._isDragging) {\n        return;\n      }\n      this._stopDragging();\n      type = EUpdateTypes.DragEnd;\n      handler = this._onDragEnd;\n    } else {\n      throw new Error(`invalid event type: ${eventType}`);\n    }\n    if (!handler) {\n      return;\n    }\n    const { value, x } = this._getPosition(clientX);\n    handler({\n      event,\n      type,\n      value,\n      x,\n      manager: this,\n      tag: this.tag,\n    });\n  };\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport memoizeOne from 'memoize-one';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { colors } from '@grafana/ui';\n\n// TS needs the precise return type\nfunction strToRgb(s: string): [number, number, number] {\n  if (s.length !== 7) {\n    return [0, 0, 0];\n  }\n  const r = s.slice(1, 3);\n  const g = s.slice(3, 5);\n  const b = s.slice(5);\n  return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)];\n}\n\nclass ColorGenerator {\n  colorsHex: string[];\n  colorsRgb: Array<[number, number, number]>;\n  cache: Map<string, number>;\n  prevColorIndex: number | undefined;\n\n  constructor(colorsHex: string[], theme: GrafanaTheme2) {\n    const filteredColors = getFilteredColors(colorsHex, theme);\n    this.colorsHex = filteredColors;\n    this.colorsRgb = filteredColors.map(strToRgb);\n    this.cache = new Map();\n    this.prevColorIndex = undefined;\n  }\n\n  _getColorIndex(key: string): number {\n    let i = this.cache.get(key);\n    if (i == null) {\n      const hash = this.hashCode(key ? key.toLowerCase() : '');\n      i = Math.abs(hash % this.colorsHex.length);\n\n      if (this.prevColorIndex !== undefined) {\n        // disallow a color that is the same as the previous color\n        if (this.prevColorIndex === i) {\n          i = this.getNextIndex(i);\n        }\n\n        // disallow a color that looks very similar to the previous color\n        const prevColor = this.colorsHex[this.prevColorIndex];\n        if (tinycolor.readability(prevColor, this.colorsHex[i]) < 1.5) {\n          let newIndex = i;\n          for (let j = 0; j < this.colorsHex.length; j++) {\n            newIndex = this.getNextIndex(newIndex);\n\n            if (tinycolor.readability(prevColor, this.colorsHex[newIndex]) > 1.5) {\n              i = newIndex;\n              break;\n            }\n          }\n        }\n      }\n\n      this.cache.set(key, i);\n      this.prevColorIndex = i;\n    }\n    return i;\n  }\n\n  getNextIndex(i: number) {\n    // get next index or go back to 0\n    return i + 1 < this.colorsHex.length ? i + 1 : 0;\n  }\n\n  hashCode(key: string) {\n    let hash = 0,\n      i,\n      chr;\n    for (i = 0; i < key.length; i++) {\n      chr = key.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n    }\n    return hash;\n  }\n\n  /**\n   * Will assign a color to an arbitrary key.\n   * If the key has been used already, it will\n   * use the same color.\n   */\n  getColorByKey(key: string) {\n    const i = this._getColorIndex(key);\n    return this.colorsHex[i];\n  }\n\n  /**\n   * Retrieve the RGB values associated with a key. Adds the key and associates\n   * it with a color if the key is not recognized.\n   * @returns {number[]} An array of three ints [0, 255] representing a color.\n   */\n  getRgbColorByKey(key: string): [number, number, number] {\n    const i = this._getColorIndex(key);\n    return this.colorsRgb[i];\n  }\n\n  clear() {\n    this.cache.clear();\n  }\n}\n\nconst getGenerator = memoizeOne((colors: string[], theme: GrafanaTheme2) => {\n  return new ColorGenerator(colors, theme);\n});\n\nexport function clear(theme: GrafanaTheme2) {\n  getGenerator([], theme);\n}\n\nexport function getColorByKey(key: string, theme: GrafanaTheme2) {\n  return getGenerator(colors, theme).getColorByKey(key);\n}\n\nexport function getRgbColorByKey(key: string, theme: GrafanaTheme2): [number, number, number] {\n  return getGenerator(colors, theme).getRgbColorByKey(key);\n}\n\nexport function getFilteredColors(colorsHex: string[], theme: GrafanaTheme2) {\n  const filtered = [...colorsHex];\n  // Remove red as a span color because it looks like an error\n  const redIndex = filtered.indexOf('#E24D42');\n  if (redIndex > -1) {\n    filtered.splice(redIndex, 1);\n  }\n  const redIndex2 = colorsHex.indexOf('#BF1B00');\n  if (redIndex2 > -1) {\n    filtered.splice(redIndex2, 1);\n  }\n\n  // Only add colors that have a contrast ratio >= 3 for the current theme\n  let filteredColors = [];\n  for (const color of filtered) {\n    if (tinycolor.readability(theme.colors.background.primary, color) >= 3) {\n      filteredColors.push(color);\n    }\n  }\n\n  return filteredColors;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { round as _round, dropWhile as _dropWhile } from 'lodash';\nimport moment from 'moment-timezone';\n\nimport { toFloatPrecision } from './number';\n\nexport const STANDARD_DATE_FORMAT = 'YYYY-MM-DD';\nexport const STANDARD_TIME_FORMAT = 'HH:mm';\nexport const ONE_MILLISECOND = 1000;\nexport const ONE_SECOND = 1000 * ONE_MILLISECOND;\nexport const ONE_MINUTE = 60 * ONE_SECOND;\nexport const ONE_HOUR = 60 * ONE_MINUTE;\nexport const ONE_DAY = 24 * ONE_HOUR;\nexport const DEFAULT_MS_PRECISION = Math.log10(ONE_MILLISECOND);\n\nconst UNIT_STEPS: Array<{ unit: string; microseconds: number; ofPrevious: number }> = [\n  { unit: 'd', microseconds: ONE_DAY, ofPrevious: 24 },\n  { unit: 'h', microseconds: ONE_HOUR, ofPrevious: 60 },\n  { unit: 'm', microseconds: ONE_MINUTE, ofPrevious: 60 },\n  { unit: 's', microseconds: ONE_SECOND, ofPrevious: 1000 },\n  { unit: 'ms', microseconds: ONE_MILLISECOND, ofPrevious: 1000 },\n  { unit: 'μs', microseconds: 1, ofPrevious: 1000 },\n];\n\nconst quantizeDuration = (duration: number, floatPrecision: number, conversionFactor: number) =>\n  toFloatPrecision(duration / conversionFactor, floatPrecision) * conversionFactor;\n\n/**\n * @param {number} duration (in microseconds)\n * @returns {string} formatted, unit-labelled string with time in milliseconds\n */\nexport function formatDate(duration: number) {\n  return moment(duration / ONE_MILLISECOND).format(STANDARD_DATE_FORMAT);\n}\n\n/**\n * @param {number} duration (in microseconds)\n * @returns {string} formatted, unit-labelled string with time in milliseconds\n */\nexport function formatTime(duration: number) {\n  return moment(duration / ONE_MILLISECOND).format(STANDARD_TIME_FORMAT);\n}\n\n/**\n * @param {number} duration (in microseconds)\n * @returns {string} formatted, unit-labelled string with time in milliseconds\n */\nexport function formatMillisecondTime(duration: number) {\n  const targetDuration = quantizeDuration(duration, DEFAULT_MS_PRECISION, ONE_MILLISECOND);\n  return `${moment.duration(targetDuration / ONE_MILLISECOND).asMilliseconds()}ms`;\n}\n\n/**\n * @param {number} duration (in microseconds)\n * @returns {string} formatted, unit-labelled string with time in seconds\n */\nexport function formatSecondTime(duration: number) {\n  const targetDuration = quantizeDuration(duration, DEFAULT_MS_PRECISION, ONE_SECOND);\n  return `${moment.duration(targetDuration / ONE_MILLISECOND).asSeconds()}s`;\n}\n\n/**\n * Humanizes the duration for display.\n *\n * Example:\n * 5000ms => 5s\n * 1000μs => 1ms\n * 183840s => 2d 3h\n *\n * @param {number} duration (in microseconds)\n * @return {string} formatted duration\n */\nexport function formatDuration(duration: number): string {\n  // Drop all units that are too large except the last one\n  const [primaryUnit, secondaryUnit] = _dropWhile(\n    UNIT_STEPS,\n    ({ microseconds }, index) => index < UNIT_STEPS.length - 1 && microseconds > duration\n  );\n\n  if (primaryUnit.ofPrevious === 1000) {\n    // If the unit is decimal based, display as a decimal\n    return `${_round(duration / primaryUnit.microseconds, 2)}${primaryUnit.unit}`;\n  }\n\n  const primaryValue = Math.floor(duration / primaryUnit.microseconds);\n  const primaryUnitString = `${primaryValue}${primaryUnit.unit}`;\n  const secondaryValue = Math.round((duration / secondaryUnit.microseconds) % primaryUnit.ofPrevious);\n  const secondaryUnitString = `${secondaryValue}${secondaryUnit.unit}`;\n  return secondaryValue === 0 ? primaryUnitString : `${primaryUnitString} ${secondaryUnitString}`;\n}\n","import {\n  DataFrame,\n  DataLink,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateTime,\n  Field,\n  LinkModel,\n  mapInternalLinkToExplore,\n  rangeUtil,\n  ScopedVars,\n  SplitOpen,\n  TimeRange,\n} from '@grafana/data';\nimport {\n  TraceToProfilesOptions,\n  TraceToMetricsOptions,\n  TraceToLogsOptionsV2,\n  TraceToLogsTag,\n} from '@grafana/o11y-ds-frontend';\nimport { PromQuery } from '@grafana/prometheus';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Icon } from '@grafana/ui';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\n\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\nimport { ExploreFieldLinkModel, getFieldLinksForExplore, getVariableUsageInfo } from '../utils/links';\n\nimport { SpanLinkDef, SpanLinkFunc, Trace, TraceSpan } from './components';\nimport { SpanLinkType } from './components/types/links';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory({\n  splitOpenFn,\n  traceToLogsOptions,\n  traceToMetricsOptions,\n  traceToProfilesOptions,\n  dataFrame,\n  createFocusSpanLink,\n  trace,\n}: {\n  splitOpenFn: SplitOpen;\n  traceToLogsOptions?: TraceToLogsOptionsV2;\n  traceToMetricsOptions?: TraceToMetricsOptions;\n  traceToProfilesOptions?: TraceToProfilesOptions;\n  dataFrame?: DataFrame;\n  createFocusSpanLink?: (traceId: string, spanId: string) => LinkModel<Field>;\n  trace: Trace;\n}): SpanLinkFunc | undefined {\n  if (!dataFrame) {\n    return undefined;\n  }\n\n  let scopedVars = scopedVarsFromTrace(trace.duration, trace.traceName, trace.traceID);\n  const hasLinks = dataFrame.fields.some((f) => Boolean(f.config.links?.length));\n\n  const createSpanLinks = legacyCreateSpanLinkFactory(\n    splitOpenFn,\n    // We need this to make the types happy but for this branch of code it does not matter which field we supply.\n    dataFrame.fields[0],\n    traceToLogsOptions,\n    traceToMetricsOptions,\n    createFocusSpanLink,\n    scopedVars\n  );\n\n  return function SpanLink(span: TraceSpan): SpanLinkDef[] | undefined {\n    let spanLinks = createSpanLinks(span);\n\n    if (hasLinks) {\n      scopedVars = {\n        ...scopedVars,\n        ...scopedVarsFromSpan(span),\n        ...scopedVarsFromTags(span, traceToProfilesOptions),\n      };\n      // We should be here only if there are some links in the dataframe\n      const fields = dataFrame.fields.filter((f) => Boolean(f.config.links?.length))!;\n      try {\n        let profilesDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData> | undefined;\n        if (traceToProfilesOptions?.datasourceUid) {\n          profilesDataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToProfilesOptions.datasourceUid);\n        }\n        const hasConfiguredPyroscopeDS = profilesDataSourceSettings?.type === 'grafana-pyroscope-datasource';\n        const hasPyroscopeProfile = span.tags.some((tag) => tag.key === pyroscopeProfileIdTagKey);\n        const shouldCreatePyroscopeLink = hasConfiguredPyroscopeDS && hasPyroscopeProfile;\n\n        let links: ExploreFieldLinkModel[] = [];\n        fields.forEach((field) => {\n          const fieldLinksForExplore = getFieldLinksForExplore({\n            field,\n            rowIndex: span.dataFrameRowIndex!,\n            splitOpenFn,\n            range: getTimeRangeFromSpan(span, undefined, undefined, shouldCreatePyroscopeLink),\n            dataFrame,\n            vars: scopedVars,\n          });\n          links = links.concat(fieldLinksForExplore);\n        });\n\n        const newSpanLinks: SpanLinkDef[] = links.map((link) => {\n          return {\n            title: link.title,\n            href: link.href,\n            onClick: link.onClick,\n            content: <Icon name=\"link\" title={link.title || 'Link'} />,\n            field: link.origin,\n            type: shouldCreatePyroscopeLink ? SpanLinkType.Profiles : SpanLinkType.Unknown,\n            target: link.target,\n          };\n        });\n\n        spanLinks.push.apply(spanLinks, newSpanLinks);\n      } catch (error) {\n        // It's fairly easy to crash here for example if data source defines wrong interpolation in the data link\n        console.error(error);\n        return spanLinks;\n      }\n    }\n\n    return spanLinks;\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst formatDefaultKeys = (keys: string[]) => {\n  return keys.map((k) => ({\n    key: k,\n    value: k.includes('.') ? k.replace('.', '_') : undefined,\n  }));\n};\nconst defaultKeys = formatDefaultKeys(['cluster', 'hostname', 'namespace', 'pod', 'service.name', 'service.namespace']);\nexport const defaultProfilingKeys = formatDefaultKeys(['service.name', 'service.namespace']);\nexport const pyroscopeProfileIdTagKey = 'pyroscope.profile.id';\nexport const feO11yTagKey = 'gf.feo11y.app.id';\n\nfunction legacyCreateSpanLinkFactory(\n  splitOpenFn: SplitOpen,\n  field: Field,\n  traceToLogsOptions?: TraceToLogsOptionsV2,\n  traceToMetricsOptions?: TraceToMetricsOptions,\n  createFocusSpanLink?: (traceId: string, spanId: string) => LinkModel<Field>,\n  scopedVars?: ScopedVars\n) {\n  let logsDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData> | undefined;\n  if (traceToLogsOptions?.datasourceUid) {\n    logsDataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n  }\n  const isSplunkDS = logsDataSourceSettings?.type === 'grafana-splunk-datasource';\n\n  let metricsDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData> | undefined;\n  if (traceToMetricsOptions?.datasourceUid) {\n    metricsDataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToMetricsOptions.datasourceUid);\n  }\n\n  return function SpanLink(span: TraceSpan): SpanLinkDef[] {\n    scopedVars = {\n      ...scopedVars,\n      ...scopedVarsFromSpan(span),\n    };\n    const links: SpanLinkDef[] = [];\n    let query: DataQuery | undefined;\n    let tags = '';\n\n    // TODO: This should eventually move into specific data sources and added to the data frame as we no longer use the\n    //  deprecated blob format and we can map the link easily in data frame.\n    if (logsDataSourceSettings && traceToLogsOptions) {\n      const customQuery = traceToLogsOptions.customQuery ? traceToLogsOptions.query : undefined;\n      const tagsToUse =\n        traceToLogsOptions.tags && traceToLogsOptions.tags.length > 0 ? traceToLogsOptions.tags : defaultKeys;\n      switch (logsDataSourceSettings?.type) {\n        case 'loki':\n          tags = getFormattedTags(span, tagsToUse);\n          query = getQueryForLoki(span, traceToLogsOptions, tags, customQuery);\n          break;\n        case 'grafana-splunk-datasource':\n          tags = getFormattedTags(span, tagsToUse, { joinBy: ' ' });\n          query = getQueryForSplunk(span, traceToLogsOptions, tags, customQuery);\n          break;\n        case 'elasticsearch':\n        case 'grafana-opensearch-datasource':\n          tags = getFormattedTags(span, tagsToUse, { labelValueSign: ':', joinBy: ' AND ' });\n          query = getQueryForElasticsearchOrOpensearch(span, traceToLogsOptions, tags, customQuery);\n          break;\n        case 'grafana-falconlogscale-datasource':\n          tags = getFormattedTags(span, tagsToUse, { joinBy: ' OR ' });\n          query = getQueryForFalconLogScale(span, traceToLogsOptions, tags, customQuery);\n          break;\n        case 'googlecloud-logging-datasource':\n          tags = getFormattedTags(span, tagsToUse, { joinBy: ' AND ' });\n          query = getQueryForGoogleCloudLogging(span, traceToLogsOptions, tags, customQuery);\n      }\n\n      // query can be false in case the simple UI tag mapping is used but none of them are present in the span.\n      // For custom query, this is always defined and we check if the interpolation matched all variables later on.\n      if (query) {\n        const dataLink: DataLink = {\n          title: logsDataSourceSettings.name,\n          url: '',\n          internal: {\n            datasourceUid: logsDataSourceSettings.uid,\n            datasourceName: logsDataSourceSettings.name,\n            query,\n          },\n        };\n\n        scopedVars = {\n          ...scopedVars,\n          __tags: {\n            text: 'Tags',\n            value: tags,\n          },\n        };\n\n        // Check if all variables are defined and don't show if they aren't. This is usually handled by the\n        // getQueryFor* functions but this is for case of custom query supplied by the user.\n        if (getVariableUsageInfo(dataLink.internal!.query, scopedVars).allVariablesDefined) {\n          const link = mapInternalLinkToExplore({\n            link: dataLink,\n            internalLink: dataLink.internal!,\n            scopedVars: scopedVars,\n            range: getTimeRangeFromSpan(\n              span,\n              {\n                startMs: traceToLogsOptions.spanStartTimeShift\n                  ? rangeUtil.intervalToMs(traceToLogsOptions.spanStartTimeShift)\n                  : 0,\n                endMs: traceToLogsOptions.spanEndTimeShift\n                  ? rangeUtil.intervalToMs(traceToLogsOptions.spanEndTimeShift)\n                  : 0,\n              },\n              isSplunkDS\n            ),\n            field: {} as Field,\n            onClickFn: splitOpenFn,\n            replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n          });\n\n          links.push({\n            href: link.href,\n            title: 'Related logs',\n            onClick: link.onClick,\n            content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n            field,\n            type: SpanLinkType.Logs,\n          });\n        }\n      }\n    }\n\n    // Get metrics links\n    if (metricsDataSourceSettings && traceToMetricsOptions?.queries) {\n      for (const query of traceToMetricsOptions.queries) {\n        const expr =\n          query.query ||\n          `histogram_quantile(0.5, sum(rate(traces_spanmetrics_latency_bucket{service=\"${span.process.serviceName}\"}[5m])) by (le))`;\n        const dataLink: DataLink<PromQuery> = {\n          title: metricsDataSourceSettings.name,\n          url: '',\n          internal: {\n            datasourceUid: metricsDataSourceSettings.uid,\n            datasourceName: metricsDataSourceSettings.name,\n            query: {\n              expr,\n              refId: 'A',\n            },\n          },\n        };\n\n        const tagsToUse =\n          traceToMetricsOptions.tags && traceToMetricsOptions.tags.length > 0\n            ? traceToMetricsOptions.tags\n            : defaultKeys;\n\n        scopedVars = {\n          ...scopedVars,\n          __tags: {\n            text: 'Tags',\n            value: getFormattedTags(span, tagsToUse),\n          },\n        };\n\n        const link = mapInternalLinkToExplore({\n          link: dataLink,\n          internalLink: dataLink.internal!,\n          scopedVars,\n          range: getTimeRangeFromSpan(span, {\n            startMs: traceToMetricsOptions.spanStartTimeShift\n              ? rangeUtil.intervalToMs(traceToMetricsOptions.spanStartTimeShift)\n              : -120000,\n            endMs: traceToMetricsOptions.spanEndTimeShift\n              ? rangeUtil.intervalToMs(traceToMetricsOptions.spanEndTimeShift)\n              : 120000,\n          }),\n          field: {} as Field,\n          onClickFn: splitOpenFn,\n          replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        });\n\n        links.push({\n          title: query?.name,\n          href: link.href,\n          onClick: link.onClick,\n          content: <Icon name=\"chart-line\" title=\"Explore metrics for this span\" />,\n          field,\n          type: SpanLinkType.Metrics,\n        });\n      }\n    }\n\n    // Get trace links\n    if (span.references && createFocusSpanLink) {\n      for (const reference of span.references) {\n        // Ignore parent-child links\n        if (reference.refType === 'CHILD_OF') {\n          continue;\n        }\n\n        const link = createFocusSpanLink(reference.traceID, reference.spanID);\n\n        links!.push({\n          href: link.href,\n          title: reference.span ? reference.span.operationName : 'View linked span',\n          content: <Icon name=\"link\" title=\"View linked span\" />,\n          onClick: link.onClick,\n          field: link.origin,\n          type: SpanLinkType.Traces,\n        });\n      }\n    }\n\n    if (span.subsidiarilyReferencedBy && createFocusSpanLink) {\n      for (const reference of span.subsidiarilyReferencedBy) {\n        const link = createFocusSpanLink(reference.traceID, reference.spanID);\n\n        links!.push({\n          href: link.href,\n          title: reference.span ? reference.span.operationName : 'View linked span',\n          content: <Icon name=\"link\" title=\"View linked span\" />,\n          onClick: link.onClick,\n          field: link.origin,\n          type: SpanLinkType.Traces,\n        });\n      }\n    }\n\n    // Get session links\n    const feO11yLink = getLinkForFeO11y(span);\n    if (feO11yLink) {\n      links.push({\n        title: 'Session for this span',\n        href: feO11yLink,\n        content: <Icon name=\"frontend-observability\" title=\"Session for this span\" />,\n        field,\n        type: SpanLinkType.Session,\n      });\n    }\n\n    return links;\n  };\n}\n\nfunction getQueryForLoki(\n  span: TraceSpan,\n  options: TraceToLogsOptionsV2,\n  tags: string,\n  customQuery?: string\n): LokiQuery | undefined {\n  const { filterByTraceID, filterBySpanID } = options;\n\n  if (customQuery) {\n    return { expr: customQuery, refId: '' };\n  }\n\n  if (!tags) {\n    return undefined;\n  }\n\n  let expr = '{${__tags}}';\n  if (filterByTraceID && span.traceID) {\n    expr +=\n      ' | label_format log_line_contains_trace_id=`{{ contains \"${__span.traceId}\" __line__  }}` | log_line_contains_trace_id=\"true\" OR trace_id=\"${__span.traceId}\"';\n  }\n  if (filterBySpanID && span.spanID) {\n    expr +=\n      ' | label_format log_line_contains_span_id=`{{ contains \"${__span.spanId}\" __line__  }}` | log_line_contains_span_id=\"true\" OR span_id=\"${__span.spanId}\"';\n  }\n\n  return {\n    expr: expr,\n    refId: '',\n  };\n}\n\nfunction getLinkForFeO11y(span: TraceSpan): string | undefined {\n  const feO11yAppId = span.process.tags.find((tag) => tag.key === feO11yTagKey)?.value;\n  const feO11ySessionId = span.tags.find((tag) => tag.key === 'session_id' || tag.key === 'session.id')?.value;\n\n  return feO11yAppId && feO11ySessionId\n    ? `/a/grafana-kowalski-app/apps/${feO11yAppId}/sessions/${feO11ySessionId}`\n    : undefined;\n}\n\n// we do not have access to the dataquery type for opensearch,\n// so here is a minimal interface that handles both elasticsearch and opensearch.\ninterface ElasticsearchOrOpensearchQuery extends DataQuery {\n  query: string;\n  metrics: Array<{\n    id: string;\n    type: 'logs';\n  }>;\n}\n\nfunction getQueryForElasticsearchOrOpensearch(\n  span: TraceSpan,\n  options: TraceToLogsOptionsV2,\n  tags: string,\n  customQuery?: string\n): ElasticsearchOrOpensearchQuery {\n  const { filterByTraceID, filterBySpanID } = options;\n  if (customQuery) {\n    return {\n      query: customQuery,\n      refId: '',\n      metrics: [{ id: '1', type: 'logs' }],\n    };\n  }\n\n  let queryArr = [];\n  if (filterBySpanID && span.spanID) {\n    queryArr.push('\"${__span.spanId}\"');\n  }\n\n  if (filterByTraceID && span.traceID) {\n    queryArr.push('\"${__span.traceId}\"');\n  }\n\n  if (tags) {\n    queryArr.push('${__tags}');\n  }\n\n  return {\n    query: queryArr.join(' AND '),\n    refId: '',\n    metrics: [{ id: '1', type: 'logs' }],\n  };\n}\n\nfunction getQueryForSplunk(span: TraceSpan, options: TraceToLogsOptionsV2, tags: string, customQuery?: string) {\n  const { filterByTraceID, filterBySpanID } = options;\n\n  if (customQuery) {\n    return { query: customQuery, refId: '' };\n  }\n\n  let query = '';\n  if (tags) {\n    query += '${__tags}';\n  }\n  if (filterByTraceID && span.traceID) {\n    query += ' \"${__span.traceId}\"';\n  }\n  if (filterBySpanID && span.spanID) {\n    query += ' \"${__span.spanId}\"';\n  }\n\n  return {\n    query: query,\n    refId: '',\n  };\n}\n\nfunction getQueryForGoogleCloudLogging(\n  span: TraceSpan,\n  options: TraceToLogsOptionsV2,\n  tags: string,\n  customQuery?: string\n) {\n  const { filterByTraceID, filterBySpanID } = options;\n\n  if (customQuery) {\n    return { query: customQuery, refId: '' };\n  }\n\n  let queryArr = [];\n  if (filterBySpanID && span.spanID) {\n    queryArr.push('\"${__span.spanId}\"');\n  }\n\n  if (filterByTraceID && span.traceID) {\n    queryArr.push('\"${__span.traceId}\"');\n  }\n\n  if (tags) {\n    queryArr.push('${__tags}');\n  }\n\n  return {\n    query: queryArr.join(' AND '),\n    refId: '',\n  };\n}\n\nfunction getQueryForFalconLogScale(span: TraceSpan, options: TraceToLogsOptionsV2, tags: string, customQuery?: string) {\n  const { filterByTraceID, filterBySpanID } = options;\n\n  if (customQuery) {\n    return {\n      lsql: customQuery,\n      refId: '',\n    };\n  }\n\n  if (!tags) {\n    return undefined;\n  }\n\n  let lsql = '${__tags}';\n  if (filterByTraceID && span.traceID) {\n    lsql += ' or \"${__span.traceId}\"';\n  }\n\n  if (filterBySpanID && span.spanID) {\n    lsql += ' or \"${__span.spanId}\"';\n  }\n\n  return {\n    lsql,\n    refId: '',\n  };\n}\n\n/**\n * Creates a string representing all the tags already formatted for use in the query. The tags are filtered so that\n * only intersection of tags that exist in a span and tags that you want are serialized into the string.\n */\nexport function getFormattedTags(\n  span: TraceSpan,\n  tags: TraceToLogsTag[],\n  { labelValueSign = '=', joinBy = ', ' }: { labelValueSign?: string; joinBy?: string } = {}\n) {\n  // In order, try to use mapped tags -> tags -> default tags\n  // Build tag portion of query\n  return [\n    ...span.process.tags,\n    ...span.tags,\n    { key: 'spanId', value: span.spanID },\n    { key: 'traceId', value: span.traceID },\n    { key: 'name', value: span.operationName },\n    { key: 'duration', value: span.duration },\n  ]\n    .map((tag) => {\n      const keyValue = tags.find((keyValue) => keyValue.key === tag.key);\n      if (keyValue) {\n        return `${keyValue.value ? keyValue.value : keyValue.key}${labelValueSign}\"${tag.value}\"`;\n      }\n      return undefined;\n    })\n    .filter((v) => Boolean(v))\n    .join(joinBy);\n}\n\n/**\n * Gets a time range from the span.\n */\nfunction getTimeRangeFromSpan(\n  span: TraceSpan,\n  timeShift: { startMs: number; endMs: number } = { startMs: 0, endMs: 0 },\n  isSplunkDS = false,\n  shouldCreatePyroscopeLink = false\n): TimeRange {\n  let adjustedStartTime = Math.floor(span.startTime / 1000 + timeShift.startMs);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  let adjustedEndTime = Math.floor(spanEndMs + timeShift.endMs);\n\n  // Splunk requires a time interval of >= 1s, rather than >=1ms like Loki timerange in below elseif block\n  if (isSplunkDS && adjustedEndTime - adjustedStartTime < 1000) {\n    adjustedEndTime = adjustedStartTime + 1000;\n  } else if (shouldCreatePyroscopeLink) {\n    adjustedStartTime = adjustedStartTime - 60000;\n    adjustedEndTime = adjustedEndTime + 60000;\n  } else if (adjustedStartTime === adjustedEndTime) {\n    // Because we can only pass milliseconds in the url we need to check if they equal.\n    // We need end time to be later than start time\n    adjustedEndTime++;\n  }\n\n  const to = dateTime(adjustedEndTime);\n  const from = dateTime(adjustedStartTime);\n\n  // Beware that public/app/features/explore/state/main.ts SplitOpen fn uses the range from here. No matter what is in the url.\n  return {\n    from,\n    to,\n    raw: {\n      from,\n      to,\n    },\n  };\n}\n\n/**\n * Variables from trace that can be used in the query\n * @param trace\n */\nexport function scopedVarsFromTrace(duration: number, name: string, traceId: string): ScopedVars {\n  return {\n    __trace: {\n      text: 'Trace',\n      value: {\n        duration,\n        name,\n        traceId,\n      },\n    },\n  };\n}\n\n/**\n * Variables from span that can be used in the query\n * @param span\n */\nexport function scopedVarsFromSpan(span: TraceSpan): ScopedVars {\n  const tags: ScopedVars = {};\n\n  // We put all these tags together similar way we do for the __tags variable. This means there can be some overriding\n  // of values if there is the same tag in both process tags and span tags.\n  for (const tag of span.process.tags) {\n    tags[tag.key] = tag.value;\n  }\n  for (const tag of span.tags) {\n    tags[tag.key] = tag.value;\n  }\n\n  return {\n    __span: {\n      text: 'Span',\n      value: {\n        spanId: span.spanID,\n        traceId: span.traceID,\n        duration: span.duration,\n        name: span.operationName,\n        tags: tags,\n      },\n    },\n  };\n}\n\n/**\n * Variables from tags that can be used in the query\n * @param span\n */\nexport function scopedVarsFromTags(\n  span: TraceSpan,\n  traceToProfilesOptions: TraceToProfilesOptions | undefined\n): ScopedVars {\n  let tags: ScopedVars = {};\n\n  if (traceToProfilesOptions) {\n    const profileTags =\n      traceToProfilesOptions.tags && traceToProfilesOptions.tags.length > 0\n        ? traceToProfilesOptions.tags\n        : defaultProfilingKeys;\n\n    tags = {\n      __tags: {\n        text: 'Tags',\n        value: getFormattedTags(span, profileTags),\n      },\n    };\n  }\n\n  return tags;\n}\n","import { useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { filterSpans, TraceSpan } from './components';\n\nexport interface SearchProps {\n  serviceName?: string;\n  serviceNameOperator: string;\n  spanName?: string;\n  spanNameOperator: string;\n  from?: string;\n  fromOperator: string;\n  to?: string;\n  toOperator: string;\n  tags: Tag[];\n  query?: string;\n}\n\nexport interface Tag {\n  id: string;\n  key?: string;\n  operator: string;\n  value?: string;\n}\n\nexport const randomId = () => uuidv4().slice(0, 12);\n\nexport const defaultTagFilter = {\n  id: randomId(),\n  operator: '=',\n};\n\nexport const defaultFilters = {\n  spanNameOperator: '=',\n  serviceNameOperator: '=',\n  fromOperator: '>',\n  toOperator: '<',\n  tags: [defaultTagFilter],\n};\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState<SearchProps>(defaultFilters);\n  const spanFilterMatches: Set<string> | undefined = useMemo(() => {\n    return spans && filterSpans(search, spans);\n  }, [search, spans]);\n\n  return { search, setSearch, spanFilterMatches };\n}\n","import { DataFrame, DataFrameView, TraceSpanRow } from '@grafana/data';\n\nimport { Trace, TraceProcess, TraceResponse, transformTraceData } from '../components';\n\nexport function transformDataFrames(frame?: DataFrame): Trace | null {\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse | null =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values[0]\n      : transformTraceDataFrame(frame);\n\n  if (!data) {\n    return null;\n  }\n  return transformTraceData(data);\n}\n\nexport function transformTraceDataFrame(frame: DataFrame): TraceResponse | null {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!span.spanID) {\n      return null;\n    }\n    if (!processes[span.spanID]) {\n      processes[span.spanID] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s, index) => {\n      const references = [];\n      if (s.parentSpanID) {\n        references.push({ refType: 'CHILD_OF' as const, spanID: s.parentSpanID, traceID: s.traceID });\n      }\n      if (s.references) {\n        references.push(...s.references.map((reference) => ({ refType: 'FOLLOWS_FROM' as const, ...reference })));\n      }\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.spanID,\n        flags: 0,\n        references,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n        dataFrameRowIndex: index,\n      };\n    }),\n  };\n}\n","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Mathias Buus\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst INDENT = '    ';\n\nfunction inlineRule(objRule) {\n  let str = '';\n  objRule &&\n    Object.keys(objRule).forEach(function (rule) {\n      str += rule + ':' + objRule[rule] + ';';\n    });\n  return str;\n}\n\nfunction Stylize(styleFile) {\n  function styleClass(cssClass) {\n    return 'class=\"' + cssClass + '\"';\n  }\n\n  function styleInline(cssClass) {\n    return 'style=\"' + inlineRule(styleFile['.' + cssClass]) + '\"';\n  }\n\n  if (!styleFile) {\n    return styleClass;\n  }\n  return styleInline;\n}\n\nfunction type(doc) {\n  if (doc === null) {\n    return 'null';\n  }\n  if (Array.isArray(doc)) {\n    return 'array';\n  }\n  if (typeof doc === 'string' && /^https?:/.test(doc)) {\n    return 'link';\n  }\n  if (typeof doc === 'object' && typeof doc.toISOString === 'function') {\n    return 'date';\n  }\n\n  return typeof doc;\n}\n\nfunction escape(str) {\n  return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\nmodule.exports = function (doc, styleFile) {\n  let indent = '';\n  const style = Stylize(styleFile);\n\n  let forEach = function (list, start, end, fn) {\n    if (!list.length) {\n      return start + ' ' + end;\n    }\n\n    let out = start + '\\n';\n\n    indent += INDENT;\n    list.forEach(function (key, i) {\n      out += indent + fn(key) + (i < list.length - 1 ? ',' : '') + '\\n';\n    });\n    indent = indent.slice(0, -INDENT.length);\n\n    return out + indent + end;\n  };\n\n  function visit(obj) {\n    if (obj === undefined) {\n      return '';\n    }\n\n    switch (type(obj)) {\n      case 'boolean':\n        return '<span ' + style('json-markup-bool') + '>' + obj + '</span>';\n\n      case 'number':\n        return '<span ' + style('json-markup-number') + '>' + obj + '</span>';\n\n      case 'date':\n        return '<span class=\"json-markup-string\">\"' + escape(obj.toISOString()) + '\"</span>';\n\n      case 'null':\n        return '<span ' + style('json-markup-null') + '>null</span>';\n\n      case 'string':\n        return '<span ' + style('json-markup-string') + '>\"' + escape(obj.replace(/\\n/g, '\\n' + indent)) + '\"</span>';\n\n      case 'link':\n        return (\n          '<span ' + style('json-markup-string') + '>\"<a href=\"' + encodeURI(obj) + '\">' + escape(obj) + '</a>\"</span>'\n        );\n\n      case 'array':\n        return forEach(obj, '[', ']', visit);\n\n      case 'object':\n        const keys = Object.keys(obj).filter(function (key) {\n          return obj[key] !== undefined;\n        });\n\n        return forEach(keys, '{', '}', function (key) {\n          return '<span ' + style('json-markup-key') + '>\"' + escape(key) + '\":</span> ' + visit(obj[key]);\n        });\n    }\n\n    return '';\n  }\n\n  return '<div ' + style('json-markup') + '>' + visit(doc) + '</div>';\n};\n"],"names":["module","element","options","self","Combokeys","on","keys","callback","action","combinations","j","combo","increaseSequence","nextAction","callbackAndReset","e","characterFromEvent","isFinal","wrappedCallback","combination","sequenceName","level","sequence","info","off","event","capture","preventDefault","stopPropagation","keysFromString","key","modifiers","SPECIAL_ALIASES","SHIFT_MAP","isModifier","character","matches","modifiersMatch","anyCharCallbacks","deleteCombo","deleteSequence","constructor","SPECIAL_KEYS_MAP","callbacks","doNotReset","maxLevel","processedSequenceCallback","ignoreThisKeypress","eventModifiers","modifiers1","modifiers2","activeSequences","tagName","combokeys","SPECIAL_CHARACTERS_MAP","i","getTraceToLogsOptions","data","traceToLogs","tag","TraceToLogsSettings","onOptionsChange","supportedDataSourceTypes","query","tags","customQuery","updateTracesToLogs","value","ds","getTimeShiftLabel","getTimeShiftTooltip","val","invalidTimeShiftError","v","IdFilter","props","type","defaultVal","TraceToLogsSection","suffix","spanMap","currentSpan","returningChildStartTime","lastFinishingChildSpanId","each","followFromSpanIds","followFromSpansDescendantIds","parentSpan","a","findDescendantSpans","spanIds","spanId","span","id","childEndTime","parentEndTime","computeCriticalPath","criticalPath","lastFinishingChildSpan","spanCriticalSection","parentSpanId","reference","criticalPathForTrace","trace","rootSpanId","map","refinedSpanMap","sanitizedSpanMap","error","ITEM_ALPHA","MIN_ITEM_HEIGHT","MAX_TOTAL_HEIGHT","MIN_ITEM_WIDTH","MIN_TOTAL_HEIGHT","MAX_ITEM_HEIGHT","renderIntoCanvas","canvas","items","totalValueWidth","getFillColor","bgColor","fillCache","cHeight","cWidth","itemHeight","itemYChange","ctx","valueWidth","valueOffset","serviceName","x","width","fillStyle","getStyles","stylesFactory","theme","UnthemedCanvasSpanGraph","elm","TickLabels","numTicks","duration","styles","ticks","portion","style","GraphTicks","Scrubber","isDragging","onMouseDown","onMouseEnter","onMouseLeave","position","xPercent","className","ViewingLayerResetZoomHoverClassName","ViewingLayerResetZoom","dragTypes","getNextViewLayout","start","left","right","UnthemedViewingLayer","clientXLeft","viewStart","viewEnd","maxValue","minValue","shift","time","update","manager","anchor","end","preventCursorLine","DraggableManager","from","to","layout","height","viewRange","current","cursor","shiftStart","shiftEnd","reframe","haveNextTimeRange","leftInactive","rightInactive","cursorPosition","Button","DEFAULT_HEIGHT","TIMELINE_TICK_INTERVAL","getItem","getItems","memoizedGetitems","SpanGraph","updateNextViewRangeTime","updateViewRangeTime","CanvasSpanGraph","ViewingLayer","useChildrenState","childrenHiddenIDs","setChildrenHiddenIDs","expandOne","spans","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","s","collapseOne","shouldDisableCollapse","nearestCollapsedAncestor","curSpan","expandAll","collapseAll","childrenToggle","spanID","allSpans","hiddenSpansIds","useDetailState","frame","detailStates","setDetailStates","toggleDetail","newDetailStates","detailLogItemToggle","log","old","detailState","detailReferenceItemToggle","makeDetailSubsectionToggle","subSection","useHoverIndentGuide","hoverIndentGuideIds","setHoverIndentGuideIds","addHoverIndentGuideId","prevState","newHoverIndentGuideIds","removeHoverIndentGuideId","useViewRange","setViewRange","prevRange","TraceView","traceProp","datasource","topOfViewRef","exploreId","createSpanLinkFromProps","focusedSpanIdFromProps","createFocusSpanLinkFromProps","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","search","setSearch","spanFilterMatches","useSearch","focusedSpanIdForSearch","setFocusedSpanIdForSearch","showSpanFilters","setShowSpanFilters","useToggle","showSpanFilterMatchesOnly","setShowSpanFilterMatchesOnly","showCriticalPathSpansOnly","setShowCriticalPathSpansOnly","headerHeight","setHeaderHeight","traceFlameGraphs","setTraceFlameGraphs","redrawListView","setRedrawListView","spanNameColumnWidth","setSpanNameColumnWidth","focusedSpanIdExplore","createFocusSpanLinkExplore","useFocusSpanLink","focusedSpanId","createFocusSpanLink","traceTimeline","instanceSettings","traceToLogsOptions","traceToMetricsOptions","traceToProfilesOptions","spanBarOptions","createSpanLink","timeZone","state","datasourceType","scrollElement","panelState","dispatch","setFocusedSpanId","traceId","link","sameTrace","autoColor","hex","base","color","newColor","instance","getInstance","local","merge","inst","name","keysHandler","createViewedBoundsFunc","min","max","viewMin","viewWindow","spanHasTag","isClientOtel","isClient","isClientSpan","isServerOtel","isServer","isServerSpan","isErrorOtel","isErrorBool","isErrorStr","isErrorSpan","spanContainsErredSpan","parentSpanIndex","depth","findServerChildSpan","spanChildDepth","isKindClient","Ticks","endTime","showLabels","startTime","labels","viewingDuration","durationAtTick","TimelineRow","children","rest","TimelineRowCell","widthPercent","mergedStyle","TimelineCollapser","onExpandAll","onExpandOne","onCollapseAll","onCollapseOne","IconButton","TimelineColumnResizer","draggerStyle","columnResizeHandleHeight","dragPosition","gripStyle","isDraggingLeft","isDraggingRight","draggerLeft","draggerRight","isOutOfView","mapFromViewSubRange","mapToViewSubRange","getMarkers","isShift","mappedFrom","mappedTo","cls","TimelineViewingLayer","nextProps","boundsInvalidator","viewRangeTime","cusrorPosition","TimelineHeaderRow","nameColumnWidth","onColummWidthChange","PEER_SERVICE","Positions","bufferLen","dataLength","heightGetter","forcedLastI","_max","h","yValue","_i","chg","imin","imax","index","known","DEFAULT_INITIAL_DRAW","ListView","bottomY","scrollElementTop","listViewOffset","itemOffset","maxStart","minEnd","getIndexFromKey","lowDirtyKey","highDirtyKey","isDirty","nodes","node","itemKey","observed","top","prevProps","useRoot","clientHeight","scrollTop","yStart","yEnd","getKeyFromIndex","initialDraw","itemRenderer","viewBuffer","viewBufferMin","attrs","wrapperProps","scrollerStyle","NONE","DURATION","TAG","SpanBarSettings","selectOptions","SpanBarSection","content","overlayClassName","popoverRef","PopoverController","showPopper","hidePopper","popperProps","LABEL","CopyIcon","copyText","icon","tooltipTitle","hasCopied","setHasCopied","handleClick","Tooltip","copyIconClassName","jsonObjectOrArrayStartRegex","parseIfComplexJson","LinkValue","href","title","Icon","KeyValuesTable","linksGetter","row","markup","jsonTable","links","valueMarkup","divider","LabeledList","label","KIND","STATUS","STATUS_MESSAGE","LIBRARY_NAME","LIBRARY_VERSION","TRACE_STATE","ID","ReferenceLink","References","openedItems","onItemToggle","interactive","AccordianKeyValues","AccordianReferences","isOpen","onToggle","isEmpty","arrow","HeaderComponent","headerProps","alignIcon","TextList","DefaultTextComponent","AccordianText","headerClassName","highContrast","TextComponent","accordianKeyValuesStyles","iconCls","SpanFlameGraph","traceDuration","traceName","sizeRef","containerHeight","useMeasure","profileTag","profileTagValue","getTimeRangeForProfile","spanStartMs","spanEndMs","getFlameGraphData","request","datasourceUid","DataSourceWithBackend","lastValueFrom","queryFlameGraph","profilesDataSourceSettings","labelSelector","scopedVars","flameGraph","config","SpanDetail","logItemToggle","logsToggle","processToggle","tagsToggle","traceStartTime","warningsToggle","stackTracesToggle","referencesToggle","referenceItemToggle","isTagsOpen","isProcessOpen","logsState","isWarningsOpen","referencesState","isStackTracesOpen","operationName","process","relativeStartTime","traceID","logs","warnings","references","stackTraces","overviewItems","getAbsoluteTime","createLinkButton","DataLinkButton","logLinkButton","profileLinkButton","sessionLinkButton","logsLink","profilesLink","sessionLink","focusSpanLink","Divider","AccordianLogs","logItem","textComponentProps","text","stackTrace","TextArea","dateStr","match","KeyValuesSummary","item","logName","tableFields","showDataSummaryFields","timestamp","formattedDuration","truncateLogNameInSummary","formattedLogName","toPercent","toPercentInDecimal","SpanBar","getViewedBounds","shortLabel","longLabel","onClick","rpc","labelClassName","setLabel","setShortLabel","setLongLabel","logGroups","posPercent","selectors","positionKey","critcalPathViewBounds","criticalPathViewStart","criticalPathViewEnd","renderMenuItems","closeMenu","linkA","linkB","MenuItem","SpanLinksMenu","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","ContextMenu","getFirstAncestor","ref","refType","spanAncestorIds","ancestorIDs","UnthemedSpanTreeOffset","ancestorId","childrenVisible","showChildrenIcon","visibleSpanIds","hasChildren","spanBarClassName","spanBarLabelClassName","nameWrapperClassName","nameWrapperMatchingFilterClassName","viewClassName","nameColumnClassName","animations","backgroundColor","UnthemedSpanBarRow","tagKey","columnDivision","isChildrenExpanded","isDetailExpanded","isMatchingFilter","isFocused","noInstrumentedServer","showErrorIcon","clippingLeft","clippingRight","showServiceName","isParent","viewBounds","labelDetail","hintClassName","SpanTreeOffset","count","UnthemedSpanDetailRow","itemIndex","DEFAULT_HEIGHTS","NUM_TICKS","BUFFER_SIZE","generateRowStates","findMatchesIDs","section","collapseDepth","rowStates","hidden","getClipping","currentViewRange","zoomStart","zoomEnd","generateRowStatesFromTrace","childSpansMap","memoizedGenerateRowStates","memoizedViewBoundsFunc","memoizedGetClipping","memoizedChildSpansMap","UnthemedVirtualizedTraceView","spanIndex","listView","isDetail","parts","_traceID","_spanID","_isDetail","rowState","currentViewRangeTime","lv","childSpanIds","detailToggle","isCollapsed","rpcSpan","rpcViewBounds","peerServiceKV","kv","prevSpan","allChildSpanIds","findAllDescendants","currentChildSpanIds","eachId","childrenOfCurrent","criticalPathSections","SpanBarRow","SpanDetailRow","ToolbarButton","UnthemedTraceTimelineViewer","VirtualizedTraceView","NewWindowIcon","isLarge","ExternalLinks","FALLBACK_DAG_MAX_NUM_SERVICES","FALLBACK_TRACE_NAME","WORD_RX","BreakableText","wordRegexp","TraceName","hasOwn","object","deepEquals","equals","deepObjects","deep","valueA","valueB","isANull","isBNull","aKeys","bKeys","equalityChecker","aKey","findIndex","arr","fn","lruCache","limit","entries","get","cacheIndex","entry","put","singletonCache","createCache","createEqualsFn","basicEquals","memoize","_len","_key","cache","_len2","args","_key2","getConfig","getConfigValue","path","parameterRegExp","getParamNames","str","names","stringSupplant","encodeFn","_","processTemplate","template","createTestFunction","arg","identity","processLinkPattern","pattern","url","callTemplate","computeTraceLink","linkPatterns","result","validKeys","parameterValues","parameter","processedLinks","getTraceLinks","_getTraceNameImpl","candidateSpan","allIDs","thisRefLength","candidateRefLength","getTraceName","findHeaderTags","method","status","getHeaderTags","ActionButton","ariaLabel","TracePageActions","app","copyTraceIdClicked","setCopyTraceIdClicked","copyTraceId","exportTrace","traceFormat","download","validateIntervalRegex","validateInterval","regex","IntervalInput","validationRegex","intervalIsInvalid","setIntervalIsInvalid","useDebounce","fieldProps","SearchBarInput","focusedSpanIndexForSearch","setFocusedSpanIndexForSearch","spanMatches","nextResult","buttonEnabled","prevResult","nextResultOnKeyDown","prevResultOnKeyDown","buttonClass","getTooltip","getMatchesMetadata","services","metadata","matchedServices","p","buttonStyles","filterSpans","searchProps","filteredSpans","getServiceNameMatches","getSpanNameMatches","getDurationMatches","tagMatches","getTagMatches","queryMatches","getQueryMatches","queryParts","w","isTextInQuery","queryPart","isTextInKeyValues","kvs","getStringValue","isSpanAMatch","checkKeyValConditionForMatch","checkKeyValConditionForRegex","checkKeyForMatch","checkKeyAndValueForRegex","checkKeyAndValueForMatch","convertTimeFilter","filterForDuration","clear","clearEnabled","Switch","NextPrevResult","SpanFilters","serviceNames","setServiceNames","spanNames","setSpanNames","tagKeys","setTagKeys","tagValues","setTagValues","durationRegex","setSpanFiltersSearch","spanSearch","getServiceNames","getSpanNames","getTagKeys","logKeys","field","getTagValues","values","tagValue","t","processTagValue","logsTagValue","onTagChange","updatedValues","addTag","removeTag","collapseLabel","Collapse","AccessoryButton","TracePageSearchBar","TracePageHeader","getNewStyles","statusColor","urlTooltip","Badge","DetailState","oldState","isReferencesOpen","next","TreeNode","child","searchFn","findPath","currentNode","currentPath","attempt","startDepth","nodeStack","actualDepth","stack","paths","childIndex","getSpanId","getSpanReferences","getSpanReferenceByType","getSpanParentId","childOfRef","getTraceSpans","getTraceSpansAsMap","TREE_ROOT_ID","getTraceSpanIdsAsTree","nodesById","spansById","root","parentID","comparator","nodeA","nodeB","b","deduplicateTags","warningsHash","dedupedTags","uniqueTags","orderTags","topPrefixes","orderedTags","tp","bKey","transformTraceData","traceEndTime","spanIdCounts","processes","processID","idCount","tree","svcCounts","spanA","spanB","tagsInfo","refSpan","SpanLinkType","EUpdateTypes","LEFT_MOUSE_BUTTON","getBounds","resetBoundsOnResize","button","clientX","eventType","handler","strToRgb","r","g","ColorGenerator","colorsHex","filteredColors","getFilteredColors","hash","prevColor","newIndex","chr","getGenerator","colors","getColorByKey","getRgbColorByKey","filtered","redIndex","redIndex2","STANDARD_DATE_FORMAT","STANDARD_TIME_FORMAT","ONE_MILLISECOND","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","DEFAULT_MS_PRECISION","UNIT_STEPS","quantizeDuration","floatPrecision","conversionFactor","formatDate","formatTime","formatMillisecondTime","targetDuration","formatSecondTime","formatDuration","primaryUnit","secondaryUnit","microseconds","primaryUnitString","secondaryValue","secondaryUnitString","createSpanLinkFactory","splitOpenFn","dataFrame","scopedVarsFromTrace","hasLinks","f","createSpanLinks","legacyCreateSpanLinkFactory","spanLinks","scopedVarsFromSpan","scopedVarsFromTags","fields","hasConfiguredPyroscopeDS","hasPyroscopeProfile","pyroscopeProfileIdTagKey","shouldCreatePyroscopeLink","fieldLinksForExplore","getTimeRangeFromSpan","newSpanLinks","formatDefaultKeys","k","defaultKeys","defaultProfilingKeys","feO11yTagKey","logsDataSourceSettings","isSplunkDS","metricsDataSourceSettings","tagsToUse","getFormattedTags","getQueryForLoki","getQueryForSplunk","getQueryForElasticsearchOrOpensearch","getQueryForFalconLogScale","getQueryForGoogleCloudLogging","dataLink","expr","feO11yLink","getLinkForFeO11y","filterByTraceID","filterBySpanID","feO11yAppId","feO11ySessionId","queryArr","lsql","labelValueSign","joinBy","keyValue","timeShift","adjustedStartTime","adjustedEndTime","profileTags","randomId","defaultFilters","transformDataFrames","transformTraceDataFrame","view","l","INDENT","inlineRule","objRule","rule","Stylize","styleFile","styleClass","cssClass","styleInline","doc","escape","indent","forEach","list","out","visit","obj"],"sourceRoot":""}