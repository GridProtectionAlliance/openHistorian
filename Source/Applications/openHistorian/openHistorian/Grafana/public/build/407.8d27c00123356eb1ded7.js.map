{"version":3,"file":"407.8d27c00123356eb1ded7.js","mappings":"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","sources":["webpack://grafana/./node_modules/d3-dispatch/src/dispatch.js","webpack://grafana/./node_modules/d3-force/src/collide.js","webpack://grafana/./node_modules/d3-force/src/constant.js","webpack://grafana/./node_modules/d3-force/src/jiggle.js","webpack://grafana/./node_modules/d3-force/src/lcg.js","webpack://grafana/./node_modules/d3-force/src/link.js","webpack://grafana/./node_modules/d3-force/src/x.js","webpack://grafana/./node_modules/d3-quadtree/src/add.js","webpack://grafana/./node_modules/d3-quadtree/src/cover.js","webpack://grafana/./node_modules/d3-quadtree/src/data.js","webpack://grafana/./node_modules/d3-quadtree/src/extent.js","webpack://grafana/./node_modules/d3-quadtree/src/quad.js","webpack://grafana/./node_modules/d3-quadtree/src/find.js","webpack://grafana/./node_modules/d3-quadtree/src/remove.js","webpack://grafana/./node_modules/d3-quadtree/src/root.js","webpack://grafana/./node_modules/d3-quadtree/src/size.js","webpack://grafana/./node_modules/d3-quadtree/src/visit.js","webpack://grafana/./node_modules/d3-quadtree/src/visitAfter.js","webpack://grafana/./node_modules/d3-quadtree/src/x.js","webpack://grafana/./node_modules/d3-quadtree/src/y.js","webpack://grafana/./node_modules/d3-quadtree/src/quadtree.js"],"sourcesContent":["var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n"],"names":["noop","dispatch","i","n","_","t","Dispatch","parseTypenames","typenames","types","name","typename","callback","T","get","set","copy","type","that","args","c","x","d","y","radius","nodes","radii","random","strength","iterations","force","tree","node","xi","yi","ri","ri2","k","prepare","apply","quad","x0","y0","x1","y1","data","rj","r","l","initialize","_nodes","_random","a","m","s","index","find","nodeById","nodeId","links","id","defaultStrength","strengths","distance","distances","count","bias","link","alpha","source","target","b","initializeStrength","initializeDistance","xz","parent","leaf","xm","ym","xp","yp","right","bottom","j","addAll","yz","z","x2","y2","x3","y3","quads","q","dx","dy","d2","retainer","previous","next","removeAll","size","child","defaultX","defaultY","quadtree","Quadtree","leaf_copy","treeProto"],"sourceRoot":""}