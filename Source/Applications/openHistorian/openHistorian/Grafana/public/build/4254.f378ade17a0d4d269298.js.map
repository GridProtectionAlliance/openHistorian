{"version":3,"file":"4254.f378ade17a0d4d269298.js","mappings":"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","sources":["webpack://grafana/./public/app/plugins/datasource/prometheus/add_label_to_query.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/language_provider.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/language_utils.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/operations.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/aggregations.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/PromQueryModeller.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/binaryScalarOperations.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/components/LabelParamEditor.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/parsing.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/LokiAndPromQueryModellerBase.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/parsingUtils.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/types.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/types.ts","webpack://grafana/../../opt/drone/yarncache/@lezer-highlight-npm-1.1.3-2be2a7b35a-90ec143ce4.zip/node_modules/@lezer/highlight/dist/index.js","webpack://grafana/./.yarn/__virtual__/@prometheus-io-lezer-promql-virtual-ded3c03445/3/opt/drone/yarncache/@prometheus-io-lezer-promql-npm-0.37.0-dcde65254c-17722456a6.zip/node_modules/@prometheus-io/lezer-promql/dist/index.es.js","webpack://grafana/../../opt/drone/yarncache/lru-cache-npm-7.17.0-6d84356a7c-28c2a98ad3.zip/node_modules/lru-cache/index.mjs"],"sourcesContent":["import { parser, VectorSelector } from '@prometheus-io/lezer-promql';\n\nimport { PromQueryModeller } from './querybuilder/PromQueryModeller';\nimport { buildVisualQueryFromString } from './querybuilder/parsing';\nimport { QueryBuilderLabelFilter } from './querybuilder/shared/types';\nimport { PromVisualQuery } from './querybuilder/types';\n\n/**\n * Adds label filter to existing query. Useful for query modification for example for ad hoc filters.\n *\n * It uses PromQL parser to find instances of metric and labels, alters them and then splices them back into the query.\n * Ideally we could use the parse -> change -> render is a simple 3 steps but right now building the visual query\n * object does not support all possible queries.\n *\n * So instead this just operates on substrings of the query with labels and operates just on those. This makes this\n * more robust and can alter even invalid queries, and preserves in general the query structure and whitespace.\n * @param query\n * @param key\n * @param value\n * @param operator\n */\nexport function addLabelToQuery(query: string, key: string, value: string | number, operator = '='): string {\n  if (!key || !value) {\n    throw new Error('Need label to add to query.');\n  }\n\n  const vectorSelectorPositions = getVectorSelectorPositions(query);\n  if (!vectorSelectorPositions.length) {\n    return query;\n  }\n\n  const filter = toLabelFilter(key, value, operator);\n  return addFilter(query, vectorSelectorPositions, filter);\n}\n\ntype VectorSelectorPosition = { from: number; to: number; query: PromVisualQuery };\n\n/**\n * Parse the string and get all VectorSelector positions in the query together with parsed representation of the vector\n * selector.\n * @param query\n */\nfunction getVectorSelectorPositions(query: string): VectorSelectorPosition[] {\n  const tree = parser.parse(query);\n  const positions: VectorSelectorPosition[] = [];\n  tree.iterate({\n    enter: ({ to, from, type }): false | void => {\n      if (type.id === VectorSelector) {\n        const visQuery = buildVisualQueryFromString(query.substring(from, to));\n        positions.push({ query: visQuery.query, from, to });\n        return false;\n      }\n    },\n  });\n  return positions;\n}\n\nfunction toLabelFilter(key: string, value: string | number, operator: string): QueryBuilderLabelFilter {\n  // We need to make sure that we convert the value back to string because it may be a number\n  const transformedValue = value === Infinity ? '+Inf' : value.toString();\n  return { label: key, op: operator, value: transformedValue };\n}\n\nfunction addFilter(\n  query: string,\n  vectorSelectorPositions: VectorSelectorPosition[],\n  filter: QueryBuilderLabelFilter\n): string {\n  const modeller = new PromQueryModeller();\n  let newQuery = '';\n  let prev = 0;\n\n  for (let i = 0; i < vectorSelectorPositions.length; i++) {\n    // This is basically just doing splice on a string for each matched vector selector.\n\n    const match = vectorSelectorPositions[i];\n    const isLast = i === vectorSelectorPositions.length - 1;\n\n    const start = query.substring(prev, match.from);\n    const end = isLast ? query.substring(match.to) : '';\n\n    if (!labelExists(match.query.labels, filter)) {\n      // We don't want to add duplicate labels.\n      match.query.labels.push(filter);\n    }\n    const newLabels = modeller.renderQuery(match.query);\n    newQuery += start + newLabels + end;\n    prev = match.to;\n  }\n  return newQuery;\n}\n\n/**\n * Check if label exists in the list of labels but ignore the operator.\n * @param labels\n * @param filter\n */\nfunction labelExists(labels: QueryBuilderLabelFilter[], filter: QueryBuilderLabelFilter) {\n  return labels.find((label) => label.label === filter.label && label.value === filter.value);\n}\n","import { chain, difference, once } from 'lodash';\nimport LRU from 'lru-cache';\nimport Prism from 'prismjs';\nimport { Value } from 'slate';\n\nimport {\n  AbstractLabelMatcher,\n  AbstractLabelOperator,\n  AbstractQuery,\n  dateTime,\n  HistoryItem,\n  LanguageProvider,\n} from '@grafana/data';\nimport { BackendSrvRequest, config } from '@grafana/runtime';\nimport { CompletionItem, CompletionItemGroup, SearchFunctionType, TypeaheadInput, TypeaheadOutput } from '@grafana/ui';\n\nimport { Label } from './components/monaco-query-field/monaco-completion-provider/situation';\nimport { PrometheusDatasource } from './datasource';\nimport {\n  addLimitInfo,\n  extractLabelMatchers,\n  fixSummariesMetadata,\n  parseSelector,\n  processHistogramMetrics,\n  processLabels,\n  roundSecToMin,\n  toPromLikeQuery,\n} from './language_utils';\nimport PromqlSyntax, { FUNCTIONS, RATE_RANGES } from './promql';\nimport { PrometheusCacheLevel, PromMetricsMetadata, PromQuery } from './types';\n\nconst DEFAULT_KEYS = ['job', 'instance'];\nconst EMPTY_SELECTOR = '{}';\nconst HISTORY_ITEM_COUNT = 5;\nconst HISTORY_COUNT_CUTOFF = 1000 * 60 * 60 * 24; // 24h\n// Max number of items (metrics, labels, values) that we display as suggestions. Prevents from running out of memory.\nexport const SUGGESTIONS_LIMIT = 10000;\n\nconst wrapLabel = (label: string): CompletionItem => ({ label });\n\nconst setFunctionKind = (suggestion: CompletionItem): CompletionItem => {\n  suggestion.kind = 'function';\n  return suggestion;\n};\n\nconst buildCacheHeaders = (durationInSeconds: number) => {\n  return {\n    headers: {\n      'X-Grafana-Cache': `private, max-age=${durationInSeconds}`,\n    },\n  };\n};\n\nexport function addHistoryMetadata(item: CompletionItem, history: any[]): CompletionItem {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter((h) => h.ts > cutoffTs && h.query === item.label);\n  const count = historyForItem.length;\n  const recent = historyForItem[0];\n  let hint = `Queried ${count} times in the last 24h.`;\n\n  if (recent) {\n    const lastQueried = dateTime(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n\n  return {\n    ...item,\n    documentation: hint,\n  };\n}\n\nfunction addMetricsMetadata(metric: string, metadata?: PromMetricsMetadata): CompletionItem {\n  const item: CompletionItem = { label: metric };\n  if (metadata && metadata[metric]) {\n    item.documentation = getMetadataString(metric, metadata);\n  }\n  return item;\n}\n\nexport function getMetadataString(metric: string, metadata: PromMetricsMetadata): string | undefined {\n  if (!metadata[metric]) {\n    return undefined;\n  }\n  const { type, help } = metadata[metric];\n  return `${type.toUpperCase()}: ${help}`;\n}\n\nexport function getMetadataHelp(metric: string, metadata: PromMetricsMetadata): string | undefined {\n  if (!metadata[metric]) {\n    return undefined;\n  }\n  return metadata[metric].help;\n}\n\nexport function getMetadataType(metric: string, metadata: PromMetricsMetadata): string | undefined {\n  if (!metadata[metric]) {\n    return undefined;\n  }\n  return metadata[metric].type;\n}\n\nconst PREFIX_DELIMITER_REGEX =\n  /(=\"|!=\"|=~\"|!~\"|\\{|\\[|\\(|\\+|-|\\/|\\*|%|\\^|\\band\\b|\\bor\\b|\\bunless\\b|==|>=|!=|<=|>|<|=|~|,)/;\n\ninterface AutocompleteContext {\n  history?: Array<HistoryItem<PromQuery>>;\n}\n\nconst secondsInDay = 86400;\nexport default class PromQlLanguageProvider extends LanguageProvider {\n  histogramMetrics: string[];\n  timeRange?: { start: number; end: number };\n  metrics: string[];\n  metricsMetadata?: PromMetricsMetadata;\n  declare startTask: Promise<any>;\n  datasource: PrometheusDatasource;\n  labelKeys: string[] = [];\n  declare labelFetchTs: number;\n  /**\n   *  Cache for labels of series. This is bit simplistic in the sense that it just counts responses each as a 1 and does\n   *  not account for different size of a response. If that is needed a `length` function can be added in the options.\n   *  10 as a max size is totally arbitrary right now.\n   */\n  private labelsCache = new LRU<string, Record<string, string[]>>({ max: 10 });\n  private labelValuesCache = new LRU<string, string[]>({ max: 10 });\n  constructor(datasource: PrometheusDatasource, initialValues?: Partial<PromQlLanguageProvider>) {\n    super();\n\n    this.datasource = datasource;\n    this.histogramMetrics = [];\n    this.timeRange = { start: 0, end: 0 };\n    this.metrics = [];\n\n    Object.assign(this, initialValues);\n  }\n\n  getDefaultCacheHeaders() {\n    // @todo clean up prometheusResourceBrowserCache feature flag\n    if (config.featureToggles.prometheusResourceBrowserCache) {\n      if (this.datasource.cacheLevel !== PrometheusCacheLevel.None) {\n        return buildCacheHeaders(this.datasource.getCacheDurationInMinutes() * 60);\n      }\n    }\n    return;\n  }\n\n  // Strip syntax chars so that typeahead suggestions can work on clean inputs\n  cleanText(s: string) {\n    const parts = s.split(PREFIX_DELIMITER_REGEX);\n    const last = parts.pop()!;\n    return last.trimLeft().replace(/\"$/, '').replace(/^\"/, '');\n  }\n\n  get syntax() {\n    return PromqlSyntax;\n  }\n\n  request = async (url: string, defaultValue: any, params = {}, options?: Partial<BackendSrvRequest>): Promise<any> => {\n    try {\n      const res = await this.datasource.metadataRequest(url, params, options);\n      return res.data.data;\n    } catch (error) {\n      console.error(error);\n    }\n\n    return defaultValue;\n  };\n\n  start = async (): Promise<any[]> => {\n    if (this.datasource.lookupsDisabled) {\n      return [];\n    }\n\n    this.metrics = (await this.fetchLabelValues('__name__')) || [];\n    this.histogramMetrics = processHistogramMetrics(this.metrics).sort();\n    return Promise.all([this.loadMetricsMetadata(), this.fetchLabels()]);\n  };\n\n  async loadMetricsMetadata() {\n    // @todo clean up prometheusResourceBrowserCache feature flag\n    const headers = config.featureToggles.prometheusResourceBrowserCache\n      ? buildCacheHeaders(this.datasource.getDaysToCacheMetadata() * secondsInDay)\n      : {};\n    this.metricsMetadata = fixSummariesMetadata(\n      await this.request(\n        '/api/v1/metadata',\n        {},\n        {},\n        {\n          showErrorAlert: false,\n          ...headers,\n        }\n      )\n    );\n  }\n\n  getLabelKeys(): string[] {\n    return this.labelKeys;\n  }\n\n  provideCompletionItems = async (\n    { prefix, text, value, labelKey, wrapperClasses }: TypeaheadInput,\n    context: AutocompleteContext = {}\n  ): Promise<TypeaheadOutput> => {\n    const emptyResult: TypeaheadOutput = { suggestions: [] };\n\n    if (!value) {\n      return emptyResult;\n    }\n\n    // Local text properties\n    const empty = value.document.text.length === 0;\n    const selectedLines = value.document.getTextsAtRange(value.selection);\n    const currentLine = selectedLines.size === 1 ? selectedLines.first().getText() : null;\n\n    const nextCharacter = currentLine ? currentLine[value.selection.anchor.offset] : null;\n\n    // Syntax spans have 3 classes by default. More indicate a recognized token\n    const tokenRecognized = wrapperClasses.length > 3;\n    // Non-empty prefix, but not inside known token\n    const prefixUnrecognized = prefix && !tokenRecognized;\n\n    // Prevent suggestions in `function(|suffix)`\n    const noSuffix = !nextCharacter || nextCharacter === ')';\n\n    // Prefix is safe if it does not immediately follow a complete expression and has no text after it\n    const safePrefix = prefix && !text.match(/^[\\]})\\s]+$/) && noSuffix;\n\n    // About to type next operand if preceded by binary operator\n    const operatorsPattern = /[+\\-*/^%]/;\n    const isNextOperand = text.match(operatorsPattern);\n\n    // Determine candidates by CSS context\n    if (wrapperClasses.includes('context-range')) {\n      // Suggestions for metric[|]\n      return this.getRangeCompletionItems();\n    } else if (wrapperClasses.includes('context-labels')) {\n      // Suggestions for metric{|} and metric{foo=|}, as well as metric-independent label queries like {|}\n      return this.getLabelCompletionItems({ prefix, text, value, labelKey, wrapperClasses });\n    } else if (wrapperClasses.includes('context-aggregation')) {\n      // Suggestions for sum(metric) by (|)\n      return this.getAggregationCompletionItems(value);\n    } else if (empty) {\n      // Suggestions for empty query field\n      return this.getEmptyCompletionItems(context);\n    } else if (prefixUnrecognized && noSuffix && !isNextOperand) {\n      // Show term suggestions in a couple of scenarios\n      return this.getBeginningCompletionItems(context);\n    } else if (prefixUnrecognized && safePrefix) {\n      // Show term suggestions in a couple of scenarios\n      return this.getTermCompletionItems();\n    }\n\n    return emptyResult;\n  };\n\n  getBeginningCompletionItems = (context: AutocompleteContext): TypeaheadOutput => {\n    return {\n      suggestions: [...this.getEmptyCompletionItems(context).suggestions, ...this.getTermCompletionItems().suggestions],\n    };\n  };\n\n  getEmptyCompletionItems = (context: AutocompleteContext): TypeaheadOutput => {\n    const { history } = context;\n    const suggestions: CompletionItemGroup[] = [];\n\n    if (history && history.length) {\n      const historyItems = chain(history)\n        .map((h) => h.query.expr)\n        .filter()\n        .uniq()\n        .take(HISTORY_ITEM_COUNT)\n        .map(wrapLabel)\n        .map((item) => addHistoryMetadata(item, history))\n        .value();\n\n      suggestions.push({\n        searchFunctionType: SearchFunctionType.Prefix,\n        skipSort: true,\n        label: 'History',\n        items: historyItems,\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getTermCompletionItems = (): TypeaheadOutput => {\n    const { metrics, metricsMetadata } = this;\n    const suggestions: CompletionItemGroup[] = [];\n\n    suggestions.push({\n      searchFunctionType: SearchFunctionType.Prefix,\n      label: 'Functions',\n      items: FUNCTIONS.map(setFunctionKind),\n    });\n\n    if (metrics && metrics.length) {\n      suggestions.push({\n        label: 'Metrics',\n        items: metrics.map((m) => addMetricsMetadata(m, metricsMetadata)),\n        searchFunctionType: SearchFunctionType.Fuzzy,\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getRangeCompletionItems(): TypeaheadOutput {\n    return {\n      context: 'context-range',\n      suggestions: [\n        {\n          label: 'Range vector',\n          items: [...RATE_RANGES],\n        },\n      ],\n    };\n  }\n\n  getAggregationCompletionItems = async (value: Value): Promise<TypeaheadOutput> => {\n    const suggestions: CompletionItemGroup[] = [];\n\n    // Stitch all query lines together to support multi-line queries\n    let queryOffset;\n    const queryText = value.document.getBlocks().reduce((text, block) => {\n      if (text === undefined) {\n        return '';\n      }\n      if (!block) {\n        return text;\n      }\n\n      const blockText = block?.getText();\n\n      if (value.anchorBlock.key === block.key) {\n        // Newline characters are not accounted for but this is irrelevant\n        // for the purpose of extracting the selector string\n        queryOffset = value.selection.anchor.offset + text.length;\n      }\n\n      return text + blockText;\n    }, '');\n\n    // Try search for selector part on the left-hand side, such as `sum (m) by (l)`\n    const openParensAggregationIndex = queryText.lastIndexOf('(', queryOffset);\n    let openParensSelectorIndex = queryText.lastIndexOf('(', openParensAggregationIndex - 1);\n    let closeParensSelectorIndex = queryText.indexOf(')', openParensSelectorIndex);\n\n    // Try search for selector part of an alternate aggregation clause, such as `sum by (l) (m)`\n    if (openParensSelectorIndex === -1) {\n      const closeParensAggregationIndex = queryText.indexOf(')', queryOffset);\n      closeParensSelectorIndex = queryText.indexOf(')', closeParensAggregationIndex + 1);\n      openParensSelectorIndex = queryText.lastIndexOf('(', closeParensSelectorIndex);\n    }\n\n    const result = {\n      suggestions,\n      context: 'context-aggregation',\n    };\n\n    // Suggestions are useless for alternative aggregation clauses without a selector in context\n    if (openParensSelectorIndex === -1) {\n      return result;\n    }\n\n    // Range vector syntax not accounted for by subsequent parse so discard it if present\n    const selectorString = queryText\n      .slice(openParensSelectorIndex + 1, closeParensSelectorIndex)\n      .replace(/\\[[^\\]]+\\]$/, '');\n\n    const selector = parseSelector(selectorString, selectorString.length - 2).selector;\n\n    const series = await this.getSeries(selector);\n    const labelKeys = Object.keys(series);\n    if (labelKeys.length > 0) {\n      const limitInfo = addLimitInfo(labelKeys);\n      suggestions.push({\n        label: `Labels${limitInfo}`,\n        items: labelKeys.map(wrapLabel),\n        searchFunctionType: SearchFunctionType.Fuzzy,\n      });\n    }\n    return result;\n  };\n\n  getLabelCompletionItems = async ({\n    text,\n    wrapperClasses,\n    labelKey,\n    value,\n  }: TypeaheadInput): Promise<TypeaheadOutput> => {\n    if (!value) {\n      return { suggestions: [] };\n    }\n\n    const suggestions: CompletionItemGroup[] = [];\n    const line = value.anchorBlock.getText();\n    const cursorOffset = value.selection.anchor.offset;\n    const suffix = line.substr(cursorOffset);\n    const prefix = line.substr(0, cursorOffset);\n    const isValueStart = text.match(/^(=|=~|!=|!~)/);\n    const isValueEnd = suffix.match(/^\"?[,}]|$/);\n    // Detect cursor in front of value, e.g., {key=|\"}\n    const isPreValue = prefix.match(/(=|=~|!=|!~)$/) && suffix.match(/^\"/);\n\n    // Don't suggest anything at the beginning or inside a value\n    const isValueEmpty = isValueStart && isValueEnd;\n    const hasValuePrefix = isValueEnd && !isValueStart;\n    if ((!isValueEmpty && !hasValuePrefix) || isPreValue) {\n      return { suggestions };\n    }\n\n    // Get normalized selector\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = parseSelector(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n\n    const containsMetric = selector.includes('__name__=');\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n\n    let series: Record<string, string[]> = {};\n    // Query labels for selector\n    if (selector) {\n      series = await this.getSeries(selector, !containsMetric);\n    }\n\n    if (Object.keys(series).length === 0) {\n      console.warn(`Server did not return any values for selector = ${selector}`);\n      return { suggestions };\n    }\n\n    let context: string | undefined;\n\n    if ((text && isValueStart) || wrapperClasses.includes('attr-value')) {\n      // Label values\n      if (labelKey && series[labelKey]) {\n        context = 'context-label-values';\n        const limitInfo = addLimitInfo(series[labelKey]);\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"${limitInfo}`,\n          items: series[labelKey].map(wrapLabel),\n          searchFunctionType: SearchFunctionType.Fuzzy,\n        });\n      }\n    } else {\n      // Label keys\n      const labelKeys = series ? Object.keys(series) : containsMetric ? null : DEFAULT_KEYS;\n\n      if (labelKeys) {\n        const possibleKeys = difference(labelKeys, existingKeys);\n        if (possibleKeys.length) {\n          context = 'context-labels';\n          const newItems = possibleKeys.map((key) => ({ label: key }));\n          const limitInfo = addLimitInfo(newItems);\n          const newSuggestion: CompletionItemGroup = {\n            label: `Labels${limitInfo}`,\n            items: newItems,\n            searchFunctionType: SearchFunctionType.Fuzzy,\n          };\n          suggestions.push(newSuggestion);\n        }\n      }\n    }\n\n    return { context, suggestions };\n  };\n\n  importFromAbstractQuery(labelBasedQuery: AbstractQuery): PromQuery {\n    return toPromLikeQuery(labelBasedQuery);\n  }\n\n  exportToAbstractQuery(query: PromQuery): AbstractQuery {\n    const promQuery = query.expr;\n    if (!promQuery || promQuery.length === 0) {\n      return { refId: query.refId, labelMatchers: [] };\n    }\n    const tokens = Prism.tokenize(promQuery, PromqlSyntax);\n    const labelMatchers: AbstractLabelMatcher[] = extractLabelMatchers(tokens);\n    const nameLabelValue = getNameLabelValue(promQuery, tokens);\n    if (nameLabelValue && nameLabelValue.length > 0) {\n      labelMatchers.push({\n        name: '__name__',\n        operator: AbstractLabelOperator.Equal,\n        value: nameLabelValue,\n      });\n    }\n\n    return {\n      refId: query.refId,\n      labelMatchers,\n    };\n  }\n\n  async getSeries(selector: string, withName?: boolean): Promise<Record<string, string[]>> {\n    if (this.datasource.lookupsDisabled) {\n      return {};\n    }\n    try {\n      if (selector === EMPTY_SELECTOR) {\n        return await this.fetchDefaultSeries();\n      } else {\n        return await this.fetchSeriesLabels(selector, withName);\n      }\n    } catch (error) {\n      // TODO: better error handling\n      console.error(error);\n      return {};\n    }\n  }\n\n  /**\n   * @param key\n   */\n  fetchLabelValues = async (key: string): Promise<string[]> => {\n    const params = this.datasource.getAdjustedInterval();\n    const interpolatedName = this.datasource.interpolateString(key);\n    const url = `/api/v1/label/${interpolatedName}/values`;\n    const value = await this.request(url, [], params, this.getDefaultCacheHeaders());\n    return value ?? [];\n  };\n\n  async getLabelValues(key: string): Promise<string[]> {\n    return await this.fetchLabelValues(key);\n  }\n\n  /**\n   * Fetches all label keys\n   */\n  async fetchLabels(): Promise<string[]> {\n    const url = '/api/v1/labels';\n    const params = this.datasource.getAdjustedInterval();\n    this.labelFetchTs = Date.now().valueOf();\n\n    const res = await this.request(url, [], params, this.getDefaultCacheHeaders());\n    if (Array.isArray(res)) {\n      this.labelKeys = res.slice().sort();\n    }\n\n    return [];\n  }\n\n  /**\n   * Gets series values\n   * Function to replace old getSeries calls in a way that will provide faster endpoints for new prometheus instances,\n   * while maintaining backward compatability\n   * @param labelName\n   * @param selector\n   */\n  getSeriesValues = async (labelName: string, selector: string): Promise<string[]> => {\n    if (!this.datasource.hasLabelsMatchAPISupport()) {\n      const data = await this.getSeries(selector);\n      return data[labelName] ?? [];\n    }\n    return await this.fetchSeriesValuesWithMatch(labelName, selector);\n  };\n\n  /**\n   * Fetches all values for a label, with optional match[]\n   * @param name\n   * @param match\n   */\n  fetchSeriesValuesWithMatch = async (name: string, match?: string): Promise<string[]> => {\n    const interpolatedName = name ? this.datasource.interpolateString(name) : null;\n    const range = this.datasource.getAdjustedInterval();\n    const urlParams = {\n      ...range,\n      ...(match && { 'match[]': match }),\n    };\n\n    // @todo clean up prometheusResourceBrowserCache feature flag\n    if (!config.featureToggles.prometheusResourceBrowserCache) {\n      return await this.fetchSeriesValuesLRUCache(interpolatedName, range, name, urlParams);\n    }\n\n    const value = await this.request(\n      `/api/v1/label/${interpolatedName}/values`,\n      [],\n      urlParams,\n      this.getDefaultCacheHeaders()\n    );\n    return value ?? [];\n  };\n\n  /**\n   * @deprecated\n   * @todo clean up prometheusResourceBrowserCache feature flag\n   * @param interpolatedName\n   * @param range\n   * @param name\n   * @param urlParams\n   * @private\n   */\n  private async fetchSeriesValuesLRUCache(\n    interpolatedName: string | null,\n    range: { start: string; end: string },\n    name: string,\n    urlParams: { start: string; end: string }\n  ) {\n    const cacheParams = new URLSearchParams({\n      'match[]': interpolatedName ?? '',\n      start: roundSecToMin(parseInt(range.start, 10)).toString(),\n      end: roundSecToMin(parseInt(range.end, 10)).toString(),\n      name: name,\n    });\n\n    const cacheKey = `/api/v1/label/?${cacheParams.toString()}/values`;\n    let value: string[] | undefined = this.labelValuesCache.get(cacheKey);\n    if (!value) {\n      value = await this.request(`/api/v1/label/${interpolatedName}/values`, [], urlParams);\n      if (value) {\n        this.labelValuesCache.set(cacheKey, value);\n      }\n    }\n    return value ?? [];\n  }\n\n  /**\n   * Gets series labels\n   * Function to replace old getSeries calls in a way that will provide faster endpoints for new prometheus instances,\n   * while maintaining backward compatability. The old API call got the labels and the values in a single query,\n   * but with the new query we need two calls, one to get the labels, and another to get the values.\n   *\n   * @param selector\n   * @param otherLabels\n   */\n  getSeriesLabels = async (selector: string, otherLabels: Label[]): Promise<string[]> => {\n    let possibleLabelNames, data: Record<string, string[]>;\n\n    if (!this.datasource.hasLabelsMatchAPISupport()) {\n      data = await this.getSeries(selector);\n      possibleLabelNames = Object.keys(data); // all names from prometheus\n    } else {\n      // Exclude __name__ from output\n      otherLabels.push({ name: '__name__', value: '', op: '!=' });\n      data = await this.fetchSeriesLabelsMatch(selector);\n      possibleLabelNames = Object.keys(data);\n    }\n\n    const usedLabelNames = new Set(otherLabels.map((l) => l.name)); // names used in the query\n    return possibleLabelNames.filter((l) => !usedLabelNames.has(l));\n  };\n\n  /**\n   * Fetch labels for a series using /series endpoint. This is cached by its args but also by the global timeRange currently selected as\n   * they can change over requested time.\n   * @param name\n   * @param withName\n   */\n  fetchSeriesLabels = async (name: string, withName?: boolean): Promise<Record<string, string[]>> => {\n    const interpolatedName = this.datasource.interpolateString(name);\n    const range = this.datasource.getAdjustedInterval();\n    const urlParams = {\n      ...range,\n      'match[]': interpolatedName,\n    };\n    const url = `/api/v1/series`;\n\n    if (!config.featureToggles.prometheusResourceBrowserCache) {\n      return await this.fetchSeriesLabelsLRUCache(interpolatedName, range, withName, url, urlParams);\n    }\n\n    const data = await this.request(url, [], urlParams, this.getDefaultCacheHeaders());\n    const { values } = processLabels(data, withName);\n    return values;\n  };\n\n  /**\n   * @deprecated\n   * @param interpolatedName\n   * @param range\n   * @param withName\n   * @param url\n   * @param urlParams\n   * @private\n   */\n  private async fetchSeriesLabelsLRUCache(\n    interpolatedName: string,\n    range: { start: string; end: string },\n    withName: boolean | undefined,\n    url: string,\n    urlParams: { start: string; 'match[]': string; end: string }\n  ) {\n    // Cache key is a bit different here. We add the `withName` param and also round up to a minute the intervals.\n    // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n    // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n    // when user does not the newest values for a minute if already cached.\n    const cacheParams = new URLSearchParams({\n      'match[]': interpolatedName,\n      start: roundSecToMin(parseInt(range.start, 10)).toString(),\n      end: roundSecToMin(parseInt(range.end, 10)).toString(),\n      withName: withName ? 'true' : 'false',\n    });\n\n    const cacheKey = `/api/v1/series?${cacheParams.toString()}`;\n    let value = this.labelsCache.get(cacheKey);\n    if (!value) {\n      const data = await this.request(url, [], urlParams);\n      const { values } = processLabels(data, withName);\n      value = values;\n      this.labelsCache.set(cacheKey, value);\n    }\n    return value;\n  }\n\n  /**\n   * Fetch labels for a series using /labels endpoint.  This is cached by its args but also by the global timeRange currently selected as\n   * they can change over requested time.\n   * @param name\n   * @param withName\n   */\n  fetchSeriesLabelsMatch = async (name: string, withName?: boolean): Promise<Record<string, string[]>> => {\n    const interpolatedName = this.datasource.interpolateString(name);\n    const range = this.datasource.getAdjustedInterval();\n    const urlParams = {\n      ...range,\n      'match[]': interpolatedName,\n    };\n    const url = `/api/v1/labels`;\n    if (!config.featureToggles.prometheusResourceBrowserCache) {\n      return await this.fetchSeriesLabelMatchLRUCache(interpolatedName, range, withName, url, urlParams);\n    }\n\n    const data: string[] = await this.request(url, [], urlParams, this.getDefaultCacheHeaders());\n    // Convert string array to Record<string , []>\n    return data.reduce((ac, a) => ({ ...ac, [a]: '' }), {});\n  };\n\n  /**\n   * @deprecated\n   * @param interpolatedName\n   * @param range\n   * @param withName\n   * @param url\n   * @param urlParams\n   * @private\n   */\n  private async fetchSeriesLabelMatchLRUCache(\n    interpolatedName: string,\n    range: { start: string; end: string },\n    withName: boolean | undefined,\n    url: string,\n    urlParams: { start: string; 'match[]': string; end: string }\n  ) {\n    // Cache key is a bit different here. We add the `withName` param and also round up to a minute the intervals.\n    // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n    // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n    // when user does not the newest values for a minute if already cached.\n    const cacheParams = new URLSearchParams({\n      'match[]': interpolatedName,\n      start: roundSecToMin(parseInt(range.start, 10)).toString(),\n      end: roundSecToMin(parseInt(range.end, 10)).toString(),\n      withName: withName ? 'true' : 'false',\n    });\n\n    const cacheKey = `${url}?${cacheParams.toString()}`;\n    let value = this.labelsCache.get(cacheKey);\n    if (!value) {\n      const data: string[] = await this.request(url, [], urlParams);\n      // Convert string array to Record<string , []>\n      value = data.reduce((ac, a) => ({ ...ac, [a]: '' }), {});\n      this.labelsCache.set(cacheKey, value);\n    }\n    return value;\n  }\n\n  /**\n   * Fetch series for a selector. Use this for raw results. Use fetchSeriesLabels() to get labels.\n   * @param match\n   */\n  fetchSeries = async (match: string): Promise<Array<Record<string, string>>> => {\n    const url = '/api/v1/series';\n    const range = this.datasource.getTimeRangeParams();\n    const params = { ...range, 'match[]': match };\n    return await this.request(url, {}, params, this.getDefaultCacheHeaders());\n  };\n\n  /**\n   * Fetch this only one as we assume this won't change over time. This is cached differently from fetchSeriesLabels\n   * because we can cache more aggressively here and also we do not want to invalidate this cache the same way as in\n   * fetchSeriesLabels.\n   */\n  fetchDefaultSeries = once(async () => {\n    const values = await Promise.all(DEFAULT_KEYS.map((key) => this.fetchLabelValues(key)));\n    return DEFAULT_KEYS.reduce((acc, key, i) => ({ ...acc, [key]: values[i] }), {});\n  });\n}\n\nfunction getNameLabelValue(promQuery: string, tokens: any): string {\n  let nameLabelValue = '';\n  for (let prop in tokens) {\n    if (typeof tokens[prop] === 'string') {\n      nameLabelValue = tokens[prop] as string;\n      break;\n    }\n  }\n  return nameLabelValue;\n}\n","import { invert } from 'lodash';\nimport { Token } from 'prismjs';\n\nimport {\n  AbstractLabelMatcher,\n  AbstractLabelOperator,\n  AbstractQuery,\n  DataQuery,\n  dateMath,\n  DateTime,\n  incrRoundDn,\n  TimeRange,\n} from '@grafana/data';\n\nimport { addLabelToQuery } from './add_label_to_query';\nimport { SUGGESTIONS_LIMIT } from './language_provider';\nimport { PrometheusCacheLevel, PromMetricsMetadata, PromMetricsMetadataItem } from './types';\n\nexport const processHistogramMetrics = (metrics: string[]) => {\n  const resultSet: Set<string> = new Set();\n  const regexp = new RegExp('_bucket($|:)');\n  for (let index = 0; index < metrics.length; index++) {\n    const metric = metrics[index];\n    const isHistogramValue = regexp.test(metric);\n    if (isHistogramValue) {\n      resultSet.add(metric);\n    }\n  }\n  return [...resultSet];\n};\n\nexport function processLabels(labels: Array<{ [key: string]: string }>, withName = false) {\n  // For processing we are going to use sets as they have significantly better performance than arrays\n  // After we process labels, we will convert sets to arrays and return object with label values in arrays\n  const valueSet: { [key: string]: Set<string> } = {};\n  labels.forEach((label) => {\n    const { __name__, ...rest } = label;\n    if (withName) {\n      valueSet['__name__'] = valueSet['__name__'] || new Set();\n      if (!valueSet['__name__'].has(__name__)) {\n        valueSet['__name__'].add(__name__);\n      }\n    }\n\n    Object.keys(rest).forEach((key) => {\n      if (!valueSet[key]) {\n        valueSet[key] = new Set();\n      }\n      if (!valueSet[key].has(rest[key])) {\n        valueSet[key].add(rest[key]);\n      }\n    });\n  });\n\n  // valueArray that we are going to return in the object\n  const valueArray: { [key: string]: string[] } = {};\n  limitSuggestions(Object.keys(valueSet)).forEach((key) => {\n    valueArray[key] = limitSuggestions(Array.from(valueSet[key]));\n  });\n\n  return { values: valueArray, keys: Object.keys(valueArray) };\n}\n\n// const cleanSelectorRegexp = /\\{(\\w+=\"[^\"\\n]*?\")(,\\w+=\"[^\"\\n]*?\")*\\}/;\nexport const selectorRegexp = /\\{[^}]*?(\\}|$)/;\nexport const labelRegexp = /\\b(\\w+)(!?=~?)(\"[^\"\\n]*?\")/g;\n\nexport function parseSelector(query: string, cursorOffset = 1): { labelKeys: any[]; selector: string } {\n  if (!query.match(selectorRegexp)) {\n    // Special matcher for metrics\n    if (query.match(/^[A-Za-z:][\\w:]*$/)) {\n      return {\n        selector: `{__name__=\"${query}\"}`,\n        labelKeys: ['__name__'],\n      };\n    }\n    throw new Error('Query must contain a selector: ' + query);\n  }\n\n  // Check if inside a selector\n  const prefix = query.slice(0, cursorOffset);\n  const prefixOpen = prefix.lastIndexOf('{');\n  const prefixClose = prefix.lastIndexOf('}');\n  if (prefixOpen === -1) {\n    throw new Error('Not inside selector, missing open brace: ' + prefix);\n  }\n  if (prefixClose > -1 && prefixClose > prefixOpen) {\n    throw new Error('Not inside selector, previous selector already closed: ' + prefix);\n  }\n  const suffix = query.slice(cursorOffset);\n  const suffixCloseIndex = suffix.indexOf('}');\n  const suffixClose = suffixCloseIndex + cursorOffset;\n  const suffixOpenIndex = suffix.indexOf('{');\n  const suffixOpen = suffixOpenIndex + cursorOffset;\n  if (suffixClose === -1) {\n    throw new Error('Not inside selector, missing closing brace in suffix: ' + suffix);\n  }\n  if (suffixOpenIndex > -1 && suffixOpen < suffixClose) {\n    throw new Error('Not inside selector, next selector opens before this one closed: ' + suffix);\n  }\n\n  // Extract clean labels to form clean selector, incomplete labels are dropped\n  const selector = query.slice(prefixOpen, suffixClose);\n  const labels: { [key: string]: { value: string; operator: string } } = {};\n  selector.replace(labelRegexp, (label, key, operator, value) => {\n    const labelOffset = query.indexOf(label);\n    const valueStart = labelOffset + key.length + operator.length + 1;\n    const valueEnd = labelOffset + key.length + operator.length + value.length - 1;\n    // Skip label if cursor is in value\n    if (cursorOffset < valueStart || cursorOffset > valueEnd) {\n      labels[key] = { value, operator };\n    }\n    return '';\n  });\n\n  // Add metric if there is one before the selector\n  const metricPrefix = query.slice(0, prefixOpen);\n  const metricMatch = metricPrefix.match(/[A-Za-z:][\\w:]*$/);\n  if (metricMatch) {\n    labels['__name__'] = { value: `\"${metricMatch[0]}\"`, operator: '=' };\n  }\n\n  // Build sorted selector\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map((key) => `${key}${labels[key].operator}${labels[key].value}`).join(',');\n\n  const selectorString = ['{', cleanSelector, '}'].join('');\n\n  return { labelKeys, selector: selectorString };\n}\n\nexport function expandRecordingRules(query: string, mapping: { [name: string]: string }): string {\n  const ruleNames = Object.keys(mapping);\n  const rulesRegex = new RegExp(`(\\\\s|^)(${ruleNames.join('|')})(\\\\s|$|\\\\(|\\\\[|\\\\{)`, 'ig');\n  const expandedQuery = query.replace(rulesRegex, (match, pre, name, post) => `${pre}${mapping[name]}${post}`);\n\n  // Split query into array, so if query uses operators, we can correctly add labels to each individual part.\n  const queryArray = expandedQuery.split(/(\\+|\\-|\\*|\\/|\\%|\\^)/);\n\n  // Regex that matches occurrences of ){ or }{ or ]{ which is a sign of incorrecly added labels.\n  const invalidLabelsRegex = /(\\)\\{|\\}\\{|\\]\\{)/;\n  const correctlyExpandedQueryArray = queryArray.map((query) => {\n    return addLabelsToExpression(query, invalidLabelsRegex);\n  });\n\n  return correctlyExpandedQueryArray.join('');\n}\n\nfunction addLabelsToExpression(expr: string, invalidLabelsRegexp: RegExp) {\n  const match = expr.match(invalidLabelsRegexp);\n  if (!match) {\n    return expr;\n  }\n\n  // Split query into 2 parts - before the invalidLabelsRegex match and after.\n  const indexOfRegexMatch = match.index ?? 0;\n  const exprBeforeRegexMatch = expr.slice(0, indexOfRegexMatch + 1);\n  const exprAfterRegexMatch = expr.slice(indexOfRegexMatch + 1);\n\n  // Create arrayOfLabelObjects with label objects that have key, operator and value.\n  const arrayOfLabelObjects: Array<{ key: string; operator: string; value: string }> = [];\n  exprAfterRegexMatch.replace(labelRegexp, (label, key, operator, value) => {\n    arrayOfLabelObjects.push({ key, operator, value });\n    return '';\n  });\n\n  // Loop through all label objects and add them to query.\n  // As a starting point we have valid query without the labels.\n  let result = exprBeforeRegexMatch;\n  arrayOfLabelObjects.filter(Boolean).forEach((obj) => {\n    // Remove extra set of quotes from obj.value\n    const value = obj.value.slice(1, -1);\n    result = addLabelToQuery(result, obj.key, value, obj.operator);\n  });\n\n  return result;\n}\n\n/**\n * Adds metadata for synthetic metrics for which the API does not provide metadata.\n * See https://github.com/grafana/grafana/issues/22337 for details.\n *\n * @param metadata HELP and TYPE metadata from /api/v1/metadata\n */\nexport function fixSummariesMetadata(metadata: { [metric: string]: PromMetricsMetadataItem[] }): PromMetricsMetadata {\n  if (!metadata) {\n    return metadata;\n  }\n  const baseMetadata: PromMetricsMetadata = {};\n  const summaryMetadata: PromMetricsMetadata = {};\n  for (const metric in metadata) {\n    // NOTE: based on prometheus-documentation, we can receive\n    // multiple metadata-entries for the given metric, it seems\n    // it happens when the same metric is on multiple targets\n    // and their help-text differs\n    // (https://prometheus.io/docs/prometheus/latest/querying/api/#querying-metric-metadata)\n    // for now we just use the first entry.\n    const item = metadata[metric][0];\n    baseMetadata[metric] = item;\n\n    if (item.type === 'histogram') {\n      summaryMetadata[`${metric}_bucket`] = {\n        type: 'counter',\n        help: `Cumulative counters for the observation buckets (${item.help})`,\n      };\n      summaryMetadata[`${metric}_count`] = {\n        type: 'counter',\n        help: `Count of events that have been observed for the histogram metric (${item.help})`,\n      };\n      summaryMetadata[`${metric}_sum`] = {\n        type: 'counter',\n        help: `Total sum of all observed values for the histogram metric (${item.help})`,\n      };\n    }\n    if (item.type === 'summary') {\n      summaryMetadata[`${metric}_count`] = {\n        type: 'counter',\n        help: `Count of events that have been observed for the base metric (${item.help})`,\n      };\n      summaryMetadata[`${metric}_sum`] = {\n        type: 'counter',\n        help: `Total sum of all observed values for the base metric (${item.help})`,\n      };\n    }\n  }\n  // Synthetic series\n  const syntheticMetadata: PromMetricsMetadata = {};\n  syntheticMetadata['ALERTS'] = {\n    type: 'counter',\n    help: 'Time series showing pending and firing alerts. The sample value is set to 1 as long as the alert is in the indicated active (pending or firing) state.',\n  };\n\n  return { ...baseMetadata, ...summaryMetadata, ...syntheticMetadata };\n}\n\nexport function roundMsToMin(milliseconds: number): number {\n  return roundSecToMin(milliseconds / 1000);\n}\n\nexport function roundSecToMin(seconds: number): number {\n  return Math.floor(seconds / 60);\n}\n\n// Returns number of minutes rounded up to the nearest nth minute\nexport function roundSecToNextMin(seconds: number, secondsToRound = 1): number {\n  return Math.ceil(seconds / 60) - (Math.ceil(seconds / 60) % secondsToRound);\n}\n\nexport function limitSuggestions(items: string[]) {\n  return items.slice(0, SUGGESTIONS_LIMIT);\n}\n\nexport function addLimitInfo(items: any[] | undefined): string {\n  return items && items.length >= SUGGESTIONS_LIMIT ? `, limited to the first ${SUGGESTIONS_LIMIT} received items` : '';\n}\n\n// NOTE: the following 2 exported functions are very similar to the prometheus*Escape\n// functions in datasource.ts, but they are not exactly the same algorithm, and we found\n// no way to reuse one in the another or vice versa.\n\n// Prometheus regular-expressions use the RE2 syntax (https://github.com/google/re2/wiki/Syntax),\n// so every character that matches something in that list has to be escaped.\n// the list of metacharacters is: *+?()|\\.[]{}^$\n// we make a javascript regular expression that matches those characters:\nconst RE2_METACHARACTERS = /[*+?()|\\\\.\\[\\]{}^$]/g;\n\nfunction escapePrometheusRegexp(value: string): string {\n  return value.replace(RE2_METACHARACTERS, '\\\\$&');\n}\n\n// based on the openmetrics-documentation, the 3 symbols we have to handle are:\n// - \\n ... the newline character\n// - \\  ... the backslash character\n// - \"  ... the double-quote character\nexport function escapeLabelValueInExactSelector(labelValue: string): string {\n  return labelValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\"');\n}\n\nexport function escapeLabelValueInRegexSelector(labelValue: string): string {\n  return escapeLabelValueInExactSelector(escapePrometheusRegexp(labelValue));\n}\n\nconst FromPromLikeMap: Record<string, AbstractLabelOperator> = {\n  '=': AbstractLabelOperator.Equal,\n  '!=': AbstractLabelOperator.NotEqual,\n  '=~': AbstractLabelOperator.EqualRegEx,\n  '!~': AbstractLabelOperator.NotEqualRegEx,\n};\nconst ToPromLikeMap: Record<AbstractLabelOperator, string> = invert(FromPromLikeMap) as Record<\n  AbstractLabelOperator,\n  string\n>;\n\nexport function toPromLikeExpr(labelBasedQuery: AbstractQuery): string {\n  const expr = labelBasedQuery.labelMatchers\n    .map((selector: AbstractLabelMatcher) => {\n      const operator = ToPromLikeMap[selector.operator];\n      if (operator) {\n        return `${selector.name}${operator}\"${selector.value}\"`;\n      } else {\n        return '';\n      }\n    })\n    .filter((e: string) => e !== '')\n    .join(', ');\n\n  return expr ? `{${expr}}` : '';\n}\n\nexport function toPromLikeQuery(labelBasedQuery: AbstractQuery): PromLikeQuery {\n  return {\n    refId: labelBasedQuery.refId,\n    expr: toPromLikeExpr(labelBasedQuery),\n    range: true,\n  };\n}\n\nexport interface PromLikeQuery extends DataQuery {\n  expr: string;\n  range: boolean;\n}\n\nexport function extractLabelMatchers(tokens: Array<string | Token>): AbstractLabelMatcher[] {\n  const labelMatchers: AbstractLabelMatcher[] = [];\n\n  for (let prop in tokens) {\n    if (tokens[prop] instanceof Token) {\n      let token: Token = tokens[prop] as Token;\n      if (token.type === 'context-labels') {\n        let labelKey = '';\n        let labelValue = '';\n        let labelOperator = '';\n        let contentTokens: any[] = token.content as any[];\n        for (let currentToken in contentTokens) {\n          if (typeof contentTokens[currentToken] === 'string') {\n            let currentStr: string;\n            currentStr = contentTokens[currentToken] as string;\n            if (currentStr === '=' || currentStr === '!=' || currentStr === '=~' || currentStr === '!~') {\n              labelOperator = currentStr;\n            }\n          } else if (contentTokens[currentToken] instanceof Token) {\n            switch (contentTokens[currentToken].type) {\n              case 'label-key':\n                labelKey = contentTokens[currentToken].content as string;\n                break;\n              case 'label-value':\n                labelValue = contentTokens[currentToken].content as string;\n                labelValue = labelValue.substring(1, labelValue.length - 1);\n                const labelComparator = FromPromLikeMap[labelOperator];\n                if (labelComparator) {\n                  labelMatchers.push({ name: labelKey, operator: labelComparator, value: labelValue });\n                }\n                break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return labelMatchers;\n}\n\n/**\n * Calculates new interval \"snapped\" to the closest Nth minute, depending on cache level datasource setting\n * @param cacheLevel\n * @param range\n */\nexport function getRangeSnapInterval(\n  cacheLevel: PrometheusCacheLevel,\n  range: TimeRange\n): { start: string; end: string } {\n  // Don't round the range if we're not caching\n  if (cacheLevel === PrometheusCacheLevel.None) {\n    return {\n      start: getPrometheusTime(range.from, false).toString(),\n      end: getPrometheusTime(range.to, true).toString(),\n    };\n  }\n  // Otherwise round down to the nearest nth minute for the start time\n  const startTime = getPrometheusTime(range.from, false);\n  // const startTimeQuantizedSeconds = roundSecToLastMin(startTime, getClientCacheDurationInMinutes(cacheLevel)) * 60;\n  const startTimeQuantizedSeconds = incrRoundDn(startTime, getClientCacheDurationInMinutes(cacheLevel) * 60);\n\n  // And round up to the nearest nth minute for the end time\n  const endTime = getPrometheusTime(range.to, true);\n  const endTimeQuantizedSeconds = roundSecToNextMin(endTime, getClientCacheDurationInMinutes(cacheLevel)) * 60;\n\n  // If the interval was too short, we could have rounded both start and end to the same time, if so let's add one step to the end\n  if (startTimeQuantizedSeconds === endTimeQuantizedSeconds) {\n    const endTimePlusOneStep = endTimeQuantizedSeconds + getClientCacheDurationInMinutes(cacheLevel) * 60;\n    return { start: startTimeQuantizedSeconds.toString(), end: endTimePlusOneStep.toString() };\n  }\n\n  const start = startTimeQuantizedSeconds.toString();\n  const end = endTimeQuantizedSeconds.toString();\n\n  return { start, end };\n}\n\nexport function getClientCacheDurationInMinutes(cacheLevel: PrometheusCacheLevel) {\n  switch (cacheLevel) {\n    case PrometheusCacheLevel.Medium:\n      return 10;\n    case PrometheusCacheLevel.High:\n      return 60;\n    default:\n      return 1;\n  }\n}\n\nexport function getPrometheusTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n\n  return Math.ceil(date.valueOf() / 1000);\n}\n","import { binaryScalarOperations } from './binaryScalarOperations';\nimport { LabelParamEditor } from './components/LabelParamEditor';\nimport {\n  defaultAddOperationHandler,\n  functionRendererLeft,\n  functionRendererRight,\n  getPromAndLokiOperationDisplayName,\n  getRangeVectorParamDef,\n  rangeRendererLeftWithParams,\n  rangeRendererRightWithParams,\n} from './shared/operationUtils';\nimport {\n  QueryBuilderOperation,\n  QueryBuilderOperationDef,\n  QueryWithOperations,\n  VisualQueryModeller,\n} from './shared/types';\nimport { PromOperationId, PromVisualQuery, PromVisualQueryOperationCategory } from './types';\n\nexport function getOperationDefinitions(): QueryBuilderOperationDef[] {\n  const list: QueryBuilderOperationDef[] = [\n    {\n      id: PromOperationId.HistogramQuantile,\n      name: 'Histogram quantile',\n      params: [{ name: 'Quantile', type: 'number', options: [0.99, 0.95, 0.9, 0.75, 0.5, 0.25] }],\n      defaultParams: [0.9],\n      category: PromVisualQueryOperationCategory.Functions,\n      renderer: functionRendererLeft,\n      addOperationHandler: defaultAddOperationHandler,\n    },\n    {\n      id: PromOperationId.LabelReplace,\n      name: 'Label replace',\n      params: [\n        { name: 'Destination label', type: 'string' },\n        { name: 'Replacement', type: 'string' },\n        { name: 'Source label', type: 'string' },\n        { name: 'Regex', type: 'string' },\n      ],\n      category: PromVisualQueryOperationCategory.Functions,\n      defaultParams: ['', '$1', '', '(.*)'],\n      renderer: functionRendererRight,\n      addOperationHandler: defaultAddOperationHandler,\n    },\n    {\n      id: PromOperationId.Ln,\n      name: 'Ln',\n      params: [],\n      defaultParams: [],\n      category: PromVisualQueryOperationCategory.Functions,\n      renderer: functionRendererLeft,\n      addOperationHandler: defaultAddOperationHandler,\n    },\n    createRangeFunction(PromOperationId.Changes),\n    createRangeFunction(PromOperationId.Rate, true),\n    createRangeFunction(PromOperationId.Irate),\n    createRangeFunction(PromOperationId.Increase, true),\n    createRangeFunction(PromOperationId.Idelta),\n    createRangeFunction(PromOperationId.Delta),\n    createFunction({\n      id: PromOperationId.HoltWinters,\n      params: [\n        getRangeVectorParamDef(),\n        { name: 'Smoothing Factor', type: 'number' },\n        { name: 'Trend Factor', type: 'number' },\n      ],\n      defaultParams: ['$__interval', 0.5, 0.5],\n      alternativesKey: 'range function',\n      category: PromVisualQueryOperationCategory.RangeFunctions,\n      renderer: rangeRendererRightWithParams,\n      addOperationHandler: addOperationWithRangeVector,\n      changeTypeHandler: operationTypeChangedHandlerForRangeFunction,\n    }),\n    createFunction({\n      id: PromOperationId.PredictLinear,\n      params: [getRangeVectorParamDef(), { name: 'Seconds from now', type: 'number' }],\n      defaultParams: ['$__interval', 60],\n      alternativesKey: 'range function',\n      category: PromVisualQueryOperationCategory.RangeFunctions,\n      renderer: rangeRendererRightWithParams,\n      addOperationHandler: addOperationWithRangeVector,\n      changeTypeHandler: operationTypeChangedHandlerForRangeFunction,\n    }),\n    createFunction({\n      id: PromOperationId.QuantileOverTime,\n      params: [getRangeVectorParamDef(), { name: 'Quantile', type: 'number' }],\n      defaultParams: ['$__interval', 0.5],\n      alternativesKey: 'overtime function',\n      category: PromVisualQueryOperationCategory.RangeFunctions,\n      renderer: rangeRendererLeftWithParams,\n      addOperationHandler: addOperationWithRangeVector,\n      changeTypeHandler: operationTypeChangedHandlerForRangeFunction,\n    }),\n    ...binaryScalarOperations,\n    {\n      id: PromOperationId.NestedQuery,\n      name: 'Binary operation with query',\n      params: [],\n      defaultParams: [],\n      category: PromVisualQueryOperationCategory.BinaryOps,\n      renderer: (model, def, innerExpr) => innerExpr,\n      addOperationHandler: addNestedQueryHandler,\n    },\n    createFunction({ id: PromOperationId.Abs }),\n    createFunction({ id: PromOperationId.Absent }),\n    createFunction({\n      id: PromOperationId.Acos,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Acosh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Asin,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Asinh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Atan,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Atanh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({ id: PromOperationId.Ceil }),\n    createFunction({\n      id: PromOperationId.Clamp,\n      name: 'Clamp',\n      params: [\n        { name: 'Minimum Scalar', type: 'number' },\n        { name: 'Maximum Scalar', type: 'number' },\n      ],\n      defaultParams: [1, 1],\n    }),\n\n    createFunction({\n      id: PromOperationId.ClampMax,\n      params: [{ name: 'Maximum Scalar', type: 'number' }],\n      defaultParams: [1],\n    }),\n    createFunction({\n      id: PromOperationId.ClampMin,\n      params: [{ name: 'Minimum Scalar', type: 'number' }],\n      defaultParams: [1],\n    }),\n    createFunction({\n      id: PromOperationId.Cos,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Cosh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.DayOfMonth,\n      category: PromVisualQueryOperationCategory.Time,\n    }),\n    createFunction({\n      id: PromOperationId.DayOfWeek,\n      category: PromVisualQueryOperationCategory.Time,\n    }),\n    createFunction({\n      id: PromOperationId.DaysInMonth,\n      category: PromVisualQueryOperationCategory.Time,\n    }),\n    createFunction({ id: PromOperationId.Deg }),\n    createRangeFunction(PromOperationId.Deriv),\n    //\n    createFunction({ id: PromOperationId.Exp }),\n    createFunction({ id: PromOperationId.Floor }),\n    createFunction({ id: PromOperationId.Group }),\n    createFunction({ id: PromOperationId.Hour }),\n    createFunction({\n      id: PromOperationId.LabelJoin,\n      params: [\n        {\n          name: 'Destination Label',\n          type: 'string',\n          editor: LabelParamEditor,\n        },\n        {\n          name: 'Separator',\n          type: 'string',\n        },\n        {\n          name: 'Source Label',\n          type: 'string',\n          restParam: true,\n          optional: true,\n          editor: LabelParamEditor,\n        },\n      ],\n      defaultParams: ['', ',', ''],\n      renderer: labelJoinRenderer,\n      addOperationHandler: labelJoinAddOperationHandler,\n    }),\n    createFunction({ id: PromOperationId.Log10 }),\n    createFunction({ id: PromOperationId.Log2 }),\n    createFunction({ id: PromOperationId.Minute }),\n    createFunction({ id: PromOperationId.Month }),\n    createFunction({\n      id: PromOperationId.Pi,\n      renderer: (model) => `${model.id}()`,\n    }),\n    createFunction({\n      id: PromOperationId.Quantile,\n      params: [{ name: 'Value', type: 'number' }],\n      defaultParams: [1],\n      renderer: functionRendererLeft,\n    }),\n    createFunction({ id: PromOperationId.Rad }),\n    createRangeFunction(PromOperationId.Resets),\n    createFunction({\n      id: PromOperationId.Round,\n      category: PromVisualQueryOperationCategory.Functions,\n      params: [{ name: 'To Nearest', type: 'number' }],\n      defaultParams: [1],\n    }),\n    createFunction({ id: PromOperationId.Scalar }),\n    createFunction({ id: PromOperationId.Sgn }),\n    createFunction({ id: PromOperationId.Sin, category: PromVisualQueryOperationCategory.Trigonometric }),\n    createFunction({\n      id: PromOperationId.Sinh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({ id: PromOperationId.Sort }),\n    createFunction({ id: PromOperationId.SortDesc }),\n    createFunction({ id: PromOperationId.Sqrt }),\n    createFunction({ id: PromOperationId.Stddev }),\n    createFunction({\n      id: PromOperationId.Tan,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Tanh,\n      category: PromVisualQueryOperationCategory.Trigonometric,\n    }),\n    createFunction({\n      id: PromOperationId.Time,\n      renderer: (model) => `${model.id}()`,\n    }),\n    createFunction({ id: PromOperationId.Timestamp }),\n    createFunction({\n      id: PromOperationId.Vector,\n      params: [{ name: 'Value', type: 'number' }],\n      defaultParams: [1],\n      renderer: (model) => `${model.id}(${model.params[0]})`,\n    }),\n    createFunction({ id: PromOperationId.Year }),\n  ];\n\n  return list;\n}\n\nexport function createFunction(definition: Partial<QueryBuilderOperationDef>): QueryBuilderOperationDef {\n  return {\n    ...definition,\n    id: definition.id!,\n    name: definition.name ?? getPromAndLokiOperationDisplayName(definition.id!),\n    params: definition.params ?? [],\n    defaultParams: definition.defaultParams ?? [],\n    category: definition.category ?? PromVisualQueryOperationCategory.Functions,\n    renderer: definition.renderer ?? (definition.params ? functionRendererRight : functionRendererLeft),\n    addOperationHandler: definition.addOperationHandler ?? defaultAddOperationHandler,\n  };\n}\n\nexport function createRangeFunction(name: string, withRateInterval = false): QueryBuilderOperationDef {\n  return {\n    id: name,\n    name: getPromAndLokiOperationDisplayName(name),\n    params: [getRangeVectorParamDef(withRateInterval)],\n    defaultParams: [withRateInterval ? '$__rate_interval' : '$__interval'],\n    alternativesKey: 'range function',\n    category: PromVisualQueryOperationCategory.RangeFunctions,\n    renderer: operationWithRangeVectorRenderer,\n    addOperationHandler: addOperationWithRangeVector,\n    changeTypeHandler: operationTypeChangedHandlerForRangeFunction,\n  };\n}\n\nfunction operationTypeChangedHandlerForRangeFunction(\n  operation: QueryBuilderOperation,\n  newDef: QueryBuilderOperationDef\n) {\n  // validate current parameter\n  if (operation.params[0] === '$__rate_interval' && newDef.defaultParams[0] !== '$__rate_interval') {\n    operation.params = newDef.defaultParams;\n  } else if (operation.params[0] === '$__interval' && newDef.defaultParams[0] !== '$__interval') {\n    operation.params = newDef.defaultParams;\n  }\n\n  return operation;\n}\n\nexport function operationWithRangeVectorRenderer(\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string\n) {\n  let rangeVector = (model.params ?? [])[0] ?? '5m';\n  return `${def.id}(${innerExpr}[${rangeVector}])`;\n}\n\n/**\n * Since there can only be one operation with range vector this will replace the current one (if one was added )\n */\nexport function addOperationWithRangeVector(\n  def: QueryBuilderOperationDef,\n  query: PromVisualQuery,\n  modeller: VisualQueryModeller\n) {\n  const newOperation: QueryBuilderOperation = {\n    id: def.id,\n    params: def.defaultParams,\n  };\n\n  if (query.operations.length > 0) {\n    // If operation exists it has to be in the registry so no point to check if it was found\n    const firstOp = modeller.getOperationDef(query.operations[0].id)!;\n\n    if (firstOp.addOperationHandler === addOperationWithRangeVector) {\n      return {\n        ...query,\n        operations: [newOperation, ...query.operations.slice(1)],\n      };\n    }\n  }\n\n  return {\n    ...query,\n    operations: [newOperation, ...query.operations],\n  };\n}\n\nfunction addNestedQueryHandler(def: QueryBuilderOperationDef, query: PromVisualQuery): PromVisualQuery {\n  return {\n    ...query,\n    binaryQueries: [\n      ...(query.binaryQueries ?? []),\n      {\n        operator: '/',\n        query,\n      },\n    ],\n  };\n}\n\nfunction labelJoinRenderer(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  if (typeof model.params[1] !== 'string') {\n    throw 'The separator must be a string';\n  }\n  const separator = `\"${model.params[1]}\"`;\n  return `${model.id}(${innerExpr}, \"${model.params[0]}\", ${separator}, \"${model.params.slice(2).join(separator)}\")`;\n}\n\nfunction labelJoinAddOperationHandler<T extends QueryWithOperations>(def: QueryBuilderOperationDef, query: T) {\n  const newOperation: QueryBuilderOperation = {\n    id: def.id,\n    params: def.defaultParams,\n  };\n\n  return {\n    ...query,\n    operations: [...query.operations, newOperation],\n  };\n}\n","import { addOperationWithRangeVector } from './operations';\nimport {\n  createAggregationOperation,\n  createAggregationOperationWithParam,\n  getPromAndLokiOperationDisplayName,\n  getRangeVectorParamDef,\n} from './shared/operationUtils';\nimport { QueryBuilderOperation, QueryBuilderOperationDef } from './shared/types';\nimport { PromVisualQueryOperationCategory, PromOperationId } from './types';\n\nexport function getAggregationOperations(): QueryBuilderOperationDef[] {\n  return [\n    ...createAggregationOperation(PromOperationId.Sum),\n    ...createAggregationOperation(PromOperationId.Avg),\n    ...createAggregationOperation(PromOperationId.Min),\n    ...createAggregationOperation(PromOperationId.Max),\n    ...createAggregationOperation(PromOperationId.Count),\n    ...createAggregationOperationWithParam(PromOperationId.TopK, {\n      params: [{ name: 'K-value', type: 'number' }],\n      defaultParams: [5],\n    }),\n    ...createAggregationOperationWithParam(PromOperationId.BottomK, {\n      params: [{ name: 'K-value', type: 'number' }],\n      defaultParams: [5],\n    }),\n    ...createAggregationOperationWithParam(PromOperationId.CountValues, {\n      params: [{ name: 'Identifier', type: 'string' }],\n      defaultParams: ['count'],\n    }),\n    createAggregationOverTime(PromOperationId.SumOverTime),\n    createAggregationOverTime(PromOperationId.AvgOverTime),\n    createAggregationOverTime(PromOperationId.MinOverTime),\n    createAggregationOverTime(PromOperationId.MaxOverTime),\n    createAggregationOverTime(PromOperationId.CountOverTime),\n    createAggregationOverTime(PromOperationId.LastOverTime),\n    createAggregationOverTime(PromOperationId.PresentOverTime),\n    createAggregationOverTime(PromOperationId.AbsentOverTime),\n    createAggregationOverTime(PromOperationId.StddevOverTime),\n  ];\n}\n\nfunction createAggregationOverTime(name: string): QueryBuilderOperationDef {\n  return {\n    id: name,\n    name: getPromAndLokiOperationDisplayName(name),\n    params: [getRangeVectorParamDef()],\n    defaultParams: ['$__interval'],\n    alternativesKey: 'overtime function',\n    category: PromVisualQueryOperationCategory.RangeFunctions,\n    renderer: operationWithRangeVectorRenderer,\n    addOperationHandler: addOperationWithRangeVector,\n  };\n}\n\nfunction operationWithRangeVectorRenderer(\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string\n) {\n  let rangeVector = (model.params ?? [])[0] ?? '$__interval';\n  return `${def.id}(${innerExpr}[${rangeVector}])`;\n}\n","import { FUNCTIONS } from '../promql';\n\nimport { getAggregationOperations } from './aggregations';\nimport { getOperationDefinitions } from './operations';\nimport { LokiAndPromQueryModellerBase } from './shared/LokiAndPromQueryModellerBase';\nimport { PromQueryPattern, PromQueryPatternType, PromVisualQueryOperationCategory } from './types';\n\nexport class PromQueryModeller extends LokiAndPromQueryModellerBase {\n  constructor() {\n    super(() => {\n      const allOperations = [...getOperationDefinitions(), ...getAggregationOperations()];\n      for (const op of allOperations) {\n        const func = FUNCTIONS.find((x) => x.insertText === op.id);\n        if (func) {\n          op.documentation = func.documentation;\n        }\n      }\n      return allOperations;\n    });\n\n    this.setOperationCategories([\n      PromVisualQueryOperationCategory.Aggregations,\n      PromVisualQueryOperationCategory.RangeFunctions,\n      PromVisualQueryOperationCategory.Functions,\n      PromVisualQueryOperationCategory.BinaryOps,\n      PromVisualQueryOperationCategory.Trigonometric,\n      PromVisualQueryOperationCategory.Time,\n    ]);\n  }\n\n  getQueryPatterns(): PromQueryPattern[] {\n    return [\n      {\n        name: 'Rate then sum',\n        type: PromQueryPatternType.Rate,\n        operations: [\n          { id: 'rate', params: ['$__rate_interval'] },\n          { id: 'sum', params: [] },\n        ],\n      },\n      {\n        name: 'Rate then sum by(label) then avg',\n        type: PromQueryPatternType.Rate,\n        operations: [\n          { id: 'rate', params: ['$__rate_interval'] },\n          { id: '__sum_by', params: [''] },\n          { id: 'avg', params: [] },\n        ],\n      },\n      {\n        name: 'Histogram quantile on rate',\n        type: PromQueryPatternType.Histogram,\n        operations: [\n          { id: 'rate', params: ['$__rate_interval'] },\n          { id: '__sum_by', params: ['le'] },\n          { id: 'histogram_quantile', params: [0.95] },\n        ],\n      },\n      {\n        name: 'Histogram quantile on increase',\n        type: PromQueryPatternType.Histogram,\n        operations: [\n          { id: 'increase', params: ['$__rate_interval'] },\n          { id: '__max_by', params: ['le'] },\n          { id: 'histogram_quantile', params: [0.95] },\n        ],\n      },\n      {\n        name: 'Binary Query',\n        type: PromQueryPatternType.Binary,\n        operations: [\n          { id: 'rate', params: ['$__rate_interval'] },\n          { id: 'sum', params: [] },\n        ],\n        binaryQueries: [\n          {\n            operator: '/',\n            query: {\n              metric: '',\n              labels: [],\n              operations: [\n                { id: 'rate', params: ['$__rate_interval'] },\n                { id: 'sum', params: [] },\n              ],\n            },\n          },\n        ],\n      },\n    ];\n  }\n}\n\nexport const promQueryModeller = new PromQueryModeller();\n","import { defaultAddOperationHandler } from './shared/operationUtils';\nimport { QueryBuilderOperation, QueryBuilderOperationDef, QueryBuilderOperationParamDef } from './shared/types';\nimport { PromOperationId, PromVisualQueryOperationCategory } from './types';\n\nexport const binaryScalarDefs = [\n  {\n    id: PromOperationId.Addition,\n    name: 'Add scalar',\n    sign: '+',\n  },\n  {\n    id: PromOperationId.Subtraction,\n    name: 'Subtract scalar',\n    sign: '-',\n  },\n  {\n    id: PromOperationId.MultiplyBy,\n    name: 'Multiply by scalar',\n    sign: '*',\n  },\n  {\n    id: PromOperationId.DivideBy,\n    name: 'Divide by scalar',\n    sign: '/',\n  },\n  {\n    id: PromOperationId.Modulo,\n    name: 'Modulo by scalar',\n    sign: '%',\n  },\n  {\n    id: PromOperationId.Exponent,\n    name: 'Exponent',\n    sign: '^',\n  },\n  {\n    id: PromOperationId.EqualTo,\n    name: 'Equal to',\n    sign: '==',\n    comparison: true,\n  },\n  {\n    id: PromOperationId.NotEqualTo,\n    name: 'Not equal to',\n    sign: '!=',\n    comparison: true,\n  },\n  {\n    id: PromOperationId.GreaterThan,\n    name: 'Greater than',\n    sign: '>',\n    comparison: true,\n  },\n  {\n    id: PromOperationId.LessThan,\n    name: 'Less than',\n    sign: '<',\n    comparison: true,\n  },\n  {\n    id: PromOperationId.GreaterOrEqual,\n    name: 'Greater or equal to',\n    sign: '>=',\n    comparison: true,\n  },\n  {\n    id: PromOperationId.LessOrEqual,\n    name: 'Less or equal to',\n    sign: '<=',\n    comparison: true,\n  },\n];\n\nexport const binaryScalarOperatorToOperatorName = binaryScalarDefs.reduce((acc, def) => {\n  acc[def.sign] = {\n    id: def.id,\n    comparison: def.comparison,\n  };\n  return acc;\n}, {} as Record<string, { id: string; comparison?: boolean }>);\n\n// Not sure about this one. It could also be a more generic 'Simple math operation' where user specifies\n// both the operator and the operand in a single input\nexport const binaryScalarOperations: QueryBuilderOperationDef[] = binaryScalarDefs.map((opDef) => {\n  const params: QueryBuilderOperationParamDef[] = [{ name: 'Value', type: 'number' }];\n  const defaultParams: any[] = [2];\n  if (opDef.comparison) {\n    params.push({\n      name: 'Bool',\n      type: 'boolean',\n      description: 'If checked comparison will return 0 or 1 for the value rather than filtering.',\n    });\n    defaultParams.push(false);\n  }\n\n  return {\n    id: opDef.id,\n    name: opDef.name,\n    params,\n    defaultParams,\n    alternativesKey: 'binary scalar operations',\n    category: PromVisualQueryOperationCategory.BinaryOps,\n    renderer: getSimpleBinaryRenderer(opDef.sign),\n    addOperationHandler: defaultAddOperationHandler,\n  };\n});\n\nfunction getSimpleBinaryRenderer(operator: string) {\n  return function binaryRenderer(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n    let param = model.params[0];\n    let bool = '';\n    if (model.params.length === 2) {\n      bool = model.params[1] ? ' bool' : '';\n    }\n\n    return `${innerExpr} ${operator}${bool} ${param}`;\n  };\n}\n","import React, { useState } from 'react';\n\nimport { DataSourceApi, SelectableValue, toOption } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { promQueryModeller } from '../PromQueryModeller';\nimport { getOperationParamId } from '../shared/operationUtils';\nimport { QueryBuilderLabelFilter, QueryBuilderOperationParamEditorProps } from '../shared/types';\nimport { PromVisualQuery } from '../types';\n\nexport function LabelParamEditor({\n  onChange,\n  index,\n  operationIndex,\n  value,\n  query,\n  datasource,\n}: QueryBuilderOperationParamEditorProps) {\n  const [state, setState] = useState<{\n    options?: Array<SelectableValue<any>>;\n    isLoading?: boolean;\n  }>({});\n\n  return (\n    <Select\n      inputId={getOperationParamId(operationIndex, index)}\n      autoFocus={value === '' ? true : undefined}\n      openMenuOnFocus\n      onOpenMenu={async () => {\n        setState({ isLoading: true });\n        const options = await loadGroupByLabels(query, datasource);\n        setState({ options, isLoading: undefined });\n      }}\n      isLoading={state.isLoading}\n      allowCustomValue\n      noOptionsMessage=\"No labels found\"\n      loadingMessage=\"Loading labels\"\n      options={state.options}\n      value={toOption(value as string)}\n      onChange={(value) => onChange(index, value.value!)}\n    />\n  );\n}\n\nasync function loadGroupByLabels(\n  query: PromVisualQuery,\n  datasource: DataSourceApi\n): Promise<Array<SelectableValue<any>>> {\n  let labels: QueryBuilderLabelFilter[] = query.labels;\n\n  // This function is used by both Prometheus and Loki and this the only difference.\n  if (datasource.type === 'prometheus') {\n    labels = [{ label: '__name__', op: '=', value: query.metric }, ...query.labels];\n  }\n\n  const expr = promQueryModeller.renderLabels(labels);\n  const result = await datasource.languageProvider.fetchSeriesLabels(expr);\n\n  return Object.keys(result).map((x) => ({\n    label: x,\n    value: x,\n  }));\n}\n","import { SyntaxNode } from '@lezer/common';\nimport {\n  AggregateExpr,\n  AggregateModifier,\n  AggregateOp,\n  BinaryExpr,\n  BinModifiers,\n  Expr,\n  FunctionCall,\n  FunctionCallArgs,\n  FunctionCallBody,\n  FunctionIdentifier,\n  GroupingLabel,\n  GroupingLabelList,\n  GroupingLabels,\n  LabelMatcher,\n  LabelName,\n  MatchOp,\n  MetricIdentifier,\n  NumberLiteral,\n  On,\n  OnOrIgnoring,\n  ParenExpr,\n  parser,\n  StringLiteral,\n  VectorSelector,\n  Without,\n} from '@prometheus-io/lezer-promql';\n\nimport { binaryScalarOperatorToOperatorName } from './binaryScalarOperations';\nimport {\n  ErrorId,\n  getAllByType,\n  getLeftMostChild,\n  getString,\n  makeBinOp,\n  makeError,\n  replaceVariables,\n} from './shared/parsingUtils';\nimport { QueryBuilderLabelFilter, QueryBuilderOperation } from './shared/types';\nimport { PromVisualQuery, PromVisualQueryBinary } from './types';\n\n/**\n * Parses a PromQL query into a visual query model.\n *\n * It traverses the tree and uses sort of state machine to update the query model. The query model is modified\n * during the traversal and sent to each handler as context.\n *\n * @param expr\n */\nexport function buildVisualQueryFromString(expr: string): Context {\n  const replacedExpr = replaceVariables(expr);\n  const tree = parser.parse(replacedExpr);\n  const node = tree.topNode;\n\n  // This will be modified in the handlers.\n  const visQuery: PromVisualQuery = {\n    metric: '',\n    labels: [],\n    operations: [],\n  };\n  const context: Context = {\n    query: visQuery,\n    errors: [],\n  };\n\n  try {\n    handleExpression(replacedExpr, node, context);\n  } catch (err) {\n    // Not ideal to log it here, but otherwise we would lose the stack trace.\n    console.error(err);\n    if (err instanceof Error) {\n      context.errors.push({\n        text: err.message,\n      });\n    }\n  }\n\n  // If we have empty query, we want to reset errors\n  if (isEmptyQuery(context.query)) {\n    context.errors = [];\n  }\n\n  // We don't want parsing errors related to Grafana global variables\n  if (isValidPromQLMinusGrafanaGlobalVariables(expr)) {\n    context.errors = [];\n  }\n\n  return context;\n}\n\ninterface ParsingError {\n  text: string;\n  from?: number;\n  to?: number;\n  parentType?: string;\n}\n\ninterface Context {\n  query: PromVisualQuery;\n  errors: ParsingError[];\n}\n\nfunction isValidPromQLMinusGrafanaGlobalVariables(expr: string) {\n  const context: Context = {\n    query: {\n      metric: '',\n      labels: [],\n      operations: [],\n    },\n    errors: [],\n  };\n\n  expr = expr.replace(/\\$__interval/g, '1s');\n  expr = expr.replace(/\\$__interval_ms/g, '1000');\n  expr = expr.replace(/\\$__rate_interval/g, '1s');\n  expr = expr.replace(/\\$__range_ms/g, '1000');\n  expr = expr.replace(/\\$__range_s/g, '1');\n  expr = expr.replace(/\\$__range/g, '1s');\n\n  const tree = parser.parse(expr);\n  const node = tree.topNode;\n\n  try {\n    handleExpression(expr, node, context);\n  } catch (err) {\n    return false;\n  }\n\n  return context.errors.length === 0;\n}\n\n/**\n * Handler for default state. It will traverse the tree and call the appropriate handler for each node. The node\n * handled here does not necessarily need to be of type == Expr.\n * @param expr\n * @param node\n * @param context\n */\nexport function handleExpression(expr: string, node: SyntaxNode, context: Context) {\n  const visQuery = context.query;\n\n  switch (node.type.id) {\n    case MetricIdentifier: {\n      // Expectation is that there is only one of those per query.\n      visQuery.metric = getString(expr, node);\n      break;\n    }\n\n    case LabelMatcher: {\n      // Same as MetricIdentifier should be just one per query.\n      visQuery.labels.push(getLabel(expr, node));\n      const err = node.getChild(ErrorId);\n      if (err) {\n        context.errors.push(makeError(expr, err));\n      }\n      break;\n    }\n\n    case FunctionCall: {\n      handleFunction(expr, node, context);\n      break;\n    }\n\n    case AggregateExpr: {\n      handleAggregation(expr, node, context);\n      break;\n    }\n\n    case BinaryExpr: {\n      handleBinary(expr, node, context);\n      break;\n    }\n\n    case ErrorId: {\n      if (isIntervalVariableError(node)) {\n        break;\n      }\n      context.errors.push(makeError(expr, node));\n      break;\n    }\n\n    default: {\n      if (node.type.id === ParenExpr) {\n        // We don't support parenthesis in the query to group expressions. We just report error but go on with the\n        // parsing.\n        context.errors.push(makeError(expr, node));\n      }\n      // Any other nodes we just ignore and go to its children. This should be fine as there are lots of wrapper\n      // nodes that can be skipped.\n      // TODO: there are probably cases where we will just skip nodes we don't support and we should be able to\n      //  detect those and report back.\n      let child = node.firstChild;\n      while (child) {\n        handleExpression(expr, child, context);\n        child = child.nextSibling;\n      }\n    }\n  }\n}\n\nfunction isIntervalVariableError(node: SyntaxNode) {\n  return node.prevSibling?.type.id === Expr && node.prevSibling?.firstChild?.type.id === VectorSelector;\n}\n\nfunction getLabel(expr: string, node: SyntaxNode): QueryBuilderLabelFilter {\n  const label = getString(expr, node.getChild(LabelName));\n  const op = getString(expr, node.getChild(MatchOp));\n  const value = getString(expr, node.getChild(StringLiteral)).replace(/\"/g, '');\n  return {\n    label,\n    op,\n    value,\n  };\n}\n\nconst rangeFunctions = ['changes', 'rate', 'irate', 'increase', 'delta'];\n\n/**\n * Handle function call which is usually and identifier and its body > arguments.\n * @param expr\n * @param node\n * @param context\n */\nfunction handleFunction(expr: string, node: SyntaxNode, context: Context) {\n  const visQuery = context.query;\n  const nameNode = node.getChild(FunctionIdentifier);\n  const funcName = getString(expr, nameNode);\n\n  const body = node.getChild(FunctionCallBody);\n  const callArgs = body!.getChild(FunctionCallArgs);\n  const params = [];\n  let interval = '';\n\n  // This is a bit of a shortcut to get the interval argument. Reasons are\n  // - interval is not part of the function args per promQL grammar but we model it as argument for the function in\n  //   the query model.\n  // - it is easier to handle template variables this way as template variable is an error for the parser\n  if (rangeFunctions.includes(funcName) || funcName.endsWith('_over_time')) {\n    let match = getString(expr, node).match(/\\[(.+)\\]/);\n    if (match?.[1]) {\n      interval = match[1];\n      params.push(match[1]);\n    }\n  }\n\n  const op = { id: funcName, params };\n  // We unshift operations to keep the more natural order that we want to have in the visual query editor.\n  visQuery.operations.unshift(op);\n\n  if (callArgs) {\n    if (getString(expr, callArgs) === interval + ']') {\n      // This is a special case where we have a function with a single argument and it is the interval.\n      // This happens when you start adding operations in query builder and did not set a metric yet.\n      return;\n    }\n    updateFunctionArgs(expr, callArgs, context, op);\n  }\n}\n\n/**\n * Handle aggregation as they are distinct type from other functions.\n * @param expr\n * @param node\n * @param context\n */\nfunction handleAggregation(expr: string, node: SyntaxNode, context: Context) {\n  const visQuery = context.query;\n  const nameNode = node.getChild(AggregateOp);\n  let funcName = getString(expr, nameNode);\n\n  const modifier = node.getChild(AggregateModifier);\n  const labels = [];\n\n  if (modifier) {\n    const byModifier = modifier.getChild(`By`);\n    if (byModifier && funcName) {\n      funcName = `__${funcName}_by`;\n    }\n\n    const withoutModifier = modifier.getChild(Without);\n    if (withoutModifier) {\n      funcName = `__${funcName}_without`;\n    }\n\n    labels.push(...getAllByType(expr, modifier, GroupingLabel));\n  }\n\n  const body = node.getChild(FunctionCallBody);\n  const callArgs = body!.getChild(FunctionCallArgs);\n\n  const op: QueryBuilderOperation = { id: funcName, params: [] };\n  visQuery.operations.unshift(op);\n  updateFunctionArgs(expr, callArgs, context, op);\n  // We add labels after params in the visual query editor.\n  op.params.push(...labels);\n}\n\n/**\n * Handle (probably) all types of arguments that function or aggregation can have.\n *\n *  FunctionCallArgs are nested bit weirdly basically its [firstArg, ...rest] where rest is again FunctionCallArgs so\n *  we cannot just get all the children and iterate them as arguments we have to again recursively traverse through\n *  them.\n *\n * @param expr\n * @param node\n * @param context\n * @param op - We need the operation to add the params to as an additional context.\n */\nfunction updateFunctionArgs(expr: string, node: SyntaxNode | null, context: Context, op: QueryBuilderOperation) {\n  if (!node) {\n    return;\n  }\n  switch (node.type.id) {\n    // In case we have an expression we don't know what kind so we have to look at the child as it can be anything.\n    case Expr:\n    // FunctionCallArgs are nested bit weirdly as mentioned so we have to go one deeper in this case.\n    case FunctionCallArgs: {\n      let child = node.firstChild;\n      while (child) {\n        updateFunctionArgs(expr, child, context, op);\n        child = child.nextSibling;\n      }\n      break;\n    }\n\n    case NumberLiteral: {\n      op.params.push(parseFloat(getString(expr, node)));\n      break;\n    }\n\n    case StringLiteral: {\n      op.params.push(getString(expr, node).replace(/\"/g, ''));\n      break;\n    }\n\n    default: {\n      // Means we get to something that does not seem like simple function arg and is probably nested query so jump\n      // back to main context\n      handleExpression(expr, node, context);\n    }\n  }\n}\n\n/**\n * Right now binary expressions can be represented in 2 way in visual query. As additional operation in case it is\n * just operation with scalar or it creates a binaryQuery when it's 2 queries.\n * @param expr\n * @param node\n * @param context\n */\nfunction handleBinary(expr: string, node: SyntaxNode, context: Context) {\n  const visQuery = context.query;\n  const left = node.firstChild!;\n  const op = getString(expr, left.nextSibling);\n  const binModifier = getBinaryModifier(expr, node.getChild(BinModifiers));\n\n  const right = node.lastChild!;\n\n  const opDef = binaryScalarOperatorToOperatorName[op];\n\n  const leftNumber = left.getChild(NumberLiteral);\n  const rightNumber = right.getChild(NumberLiteral);\n\n  const rightBinary = right.getChild(BinaryExpr);\n\n  if (leftNumber) {\n    // TODO: this should be already handled in case parent is binary expression as it has to be added to parent\n    //  if query starts with a number that isn't handled now.\n  } else {\n    // If this is binary we don't really know if there is a query or just chained scalars. So\n    // we have to traverse a bit deeper to know\n    handleExpression(expr, left, context);\n  }\n\n  if (rightNumber) {\n    visQuery.operations.push(makeBinOp(opDef, expr, right, !!binModifier?.isBool));\n  } else if (rightBinary) {\n    // Due to the way binary ops are parsed we can get a binary operation on the right that starts with a number which\n    // is a factor for a current binary operation. So we have to add it as an operation now.\n    const leftMostChild = getLeftMostChild(right);\n    if (leftMostChild?.type.id === NumberLiteral) {\n      visQuery.operations.push(makeBinOp(opDef, expr, leftMostChild, !!binModifier?.isBool));\n    }\n\n    // If we added the first number literal as operation here we still can continue and handle the rest as the first\n    // number will be just skipped.\n    handleExpression(expr, right, context);\n  } else {\n    visQuery.binaryQueries = visQuery.binaryQueries || [];\n    const binQuery: PromVisualQueryBinary = {\n      operator: op,\n      query: {\n        metric: '',\n        labels: [],\n        operations: [],\n      },\n    };\n    if (binModifier?.isMatcher) {\n      binQuery.vectorMatchesType = binModifier.matchType;\n      binQuery.vectorMatches = binModifier.matches;\n    }\n    visQuery.binaryQueries.push(binQuery);\n    handleExpression(expr, right, {\n      query: binQuery.query,\n      errors: context.errors,\n    });\n  }\n}\n\nfunction getBinaryModifier(\n  expr: string,\n  node: SyntaxNode | null\n):\n  | { isBool: true; isMatcher: false }\n  | { isBool: false; isMatcher: true; matches: string; matchType: 'ignoring' | 'on' }\n  | undefined {\n  if (!node) {\n    return undefined;\n  }\n  if (node.getChild('Bool')) {\n    return { isBool: true, isMatcher: false };\n  } else {\n    const matcher = node.getChild(OnOrIgnoring);\n    if (!matcher) {\n      // Not sure what this could be, maybe should be an error.\n      return undefined;\n    }\n    const labels = getString(expr, matcher.getChild(GroupingLabels)?.getChild(GroupingLabelList));\n    return {\n      isMatcher: true,\n      isBool: false,\n      matches: labels,\n      matchType: matcher.getChild(On) ? 'on' : 'ignoring',\n    };\n  }\n}\n\nfunction isEmptyQuery(query: PromVisualQuery) {\n  if (query.labels.length === 0 && query.operations.length === 0 && !query.metric) {\n    return true;\n  }\n  return false;\n}\n","import { Registry } from '@grafana/data';\n\nimport { PromVisualQueryOperationCategory } from '../types';\n\nimport { QueryBuilderLabelFilter, QueryBuilderOperation, QueryBuilderOperationDef, VisualQueryModeller } from './types';\n\nexport interface VisualQueryBinary<T> {\n  operator: string;\n  vectorMatchesType?: 'on' | 'ignoring';\n  vectorMatches?: string;\n  query: T;\n}\n\nexport interface PromLokiVisualQuery {\n  metric?: string;\n  labels: QueryBuilderLabelFilter[];\n  operations: QueryBuilderOperation[];\n  binaryQueries?: Array<VisualQueryBinary<PromLokiVisualQuery>>;\n}\n\nexport abstract class LokiAndPromQueryModellerBase implements VisualQueryModeller {\n  protected operationsRegistry: Registry<QueryBuilderOperationDef>;\n  private categories: string[] = [];\n\n  constructor(getOperations: () => QueryBuilderOperationDef[]) {\n    this.operationsRegistry = new Registry<QueryBuilderOperationDef>(getOperations);\n  }\n\n  protected setOperationCategories(categories: string[]) {\n    this.categories = categories;\n  }\n\n  getOperationsForCategory(category: string) {\n    return this.operationsRegistry.list().filter((op) => op.category === category && !op.hideFromList);\n  }\n\n  getAlternativeOperations(key: string) {\n    return this.operationsRegistry.list().filter((op) => op.alternativesKey && op.alternativesKey === key);\n  }\n\n  getCategories() {\n    return this.categories;\n  }\n\n  getOperationDef(id: string): QueryBuilderOperationDef | undefined {\n    return this.operationsRegistry.getIfExists(id);\n  }\n\n  renderOperations(queryString: string, operations: QueryBuilderOperation[]) {\n    for (const operation of operations) {\n      const def = this.operationsRegistry.getIfExists(operation.id);\n      if (!def) {\n        throw new Error(`Could not find operation ${operation.id} in the registry`);\n      }\n      queryString = def.renderer(operation, def, queryString);\n    }\n\n    return queryString;\n  }\n\n  renderBinaryQueries(queryString: string, binaryQueries?: Array<VisualQueryBinary<PromLokiVisualQuery>>) {\n    if (binaryQueries) {\n      for (const binQuery of binaryQueries) {\n        queryString = `${this.renderBinaryQuery(queryString, binQuery)}`;\n      }\n    }\n    return queryString;\n  }\n\n  private renderBinaryQuery(leftOperand: string, binaryQuery: VisualQueryBinary<PromLokiVisualQuery>) {\n    let result = leftOperand + ` ${binaryQuery.operator} `;\n\n    if (binaryQuery.vectorMatches) {\n      result += `${binaryQuery.vectorMatchesType}(${binaryQuery.vectorMatches}) `;\n    }\n\n    return result + this.renderQuery(binaryQuery.query, true);\n  }\n\n  renderLabels(labels: QueryBuilderLabelFilter[]) {\n    if (labels.length === 0) {\n      return '';\n    }\n\n    let expr = '{';\n    for (const filter of labels) {\n      if (expr !== '{') {\n        expr += ', ';\n      }\n\n      expr += `${filter.label}${filter.op}\"${filter.value}\"`;\n    }\n\n    return expr + `}`;\n  }\n\n  renderQuery(query: PromLokiVisualQuery, nested?: boolean) {\n    let queryString = `${query.metric ?? ''}${this.renderLabels(query.labels)}`;\n    queryString = this.renderOperations(queryString, query.operations);\n\n    if (!nested && this.hasBinaryOp(query) && Boolean(query.binaryQueries?.length)) {\n      queryString = `(${queryString})`;\n    }\n\n    queryString = this.renderBinaryQueries(queryString, query.binaryQueries);\n\n    if (nested && (this.hasBinaryOp(query) || Boolean(query.binaryQueries?.length))) {\n      queryString = `(${queryString})`;\n    }\n\n    return queryString;\n  }\n\n  hasBinaryOp(query: PromLokiVisualQuery): boolean {\n    return (\n      query.operations.find((op) => {\n        const def = this.getOperationDef(op.id);\n        return def?.category === PromVisualQueryOperationCategory.BinaryOps;\n      }) !== undefined\n    );\n  }\n}\n","import { capitalize } from 'lodash';\nimport pluralize from 'pluralize';\n\nimport { SelectableValue } from '@grafana/data/src';\n\nimport { LabelParamEditor } from '../components/LabelParamEditor';\nimport { PromVisualQueryOperationCategory } from '../types';\n\nimport {\n  QueryBuilderLabelFilter,\n  QueryBuilderOperation,\n  QueryBuilderOperationDef,\n  QueryBuilderOperationParamDef,\n  QueryBuilderOperationParamValue,\n  QueryWithOperations,\n} from './types';\n\nexport function functionRendererLeft(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  const params = renderParams(model, def, innerExpr);\n  const str = model.id + '(';\n\n  if (innerExpr) {\n    params.push(innerExpr);\n  }\n\n  return str + params.join(', ') + ')';\n}\n\nexport function functionRendererRight(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  const params = renderParams(model, def, innerExpr);\n  const str = model.id + '(';\n\n  if (innerExpr) {\n    params.unshift(innerExpr);\n  }\n\n  return str + params.join(', ') + ')';\n}\n\nfunction rangeRendererWithParams(\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string,\n  renderLeft: boolean\n) {\n  if (def.params.length < 2) {\n    throw `Cannot render a function with params of length [${def.params.length}]`;\n  }\n\n  let rangeVector = (model.params ?? [])[0] ?? '5m';\n\n  // Next frame the remaining parameters, but get rid of the first one because it's used to move the\n  // instant vector into a range vector.\n  const params = renderParams(\n    {\n      ...model,\n      params: model.params.slice(1),\n    },\n    {\n      ...def,\n      params: def.params.slice(1),\n      defaultParams: def.defaultParams.slice(1),\n    },\n    innerExpr\n  );\n\n  const str = model.id + '(';\n\n  // Depending on the renderLeft variable, render parameters to the left or right\n  // renderLeft === true (renderLeft) => (param1, param2, rangeVector[...])\n  // renderLeft === false (renderRight) => (rangeVector[...], param1, param2)\n  if (innerExpr) {\n    renderLeft ? params.push(`${innerExpr}[${rangeVector}]`) : params.unshift(`${innerExpr}[${rangeVector}]`);\n  }\n\n  // stick everything together\n  return str + params.join(', ') + ')';\n}\n\nexport function rangeRendererRightWithParams(\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string\n) {\n  return rangeRendererWithParams(model, def, innerExpr, false);\n}\n\nexport function rangeRendererLeftWithParams(\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string\n) {\n  return rangeRendererWithParams(model, def, innerExpr, true);\n}\n\nfunction renderParams(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  return (model.params ?? []).map((value, index) => {\n    const paramDef = def.params[index];\n    if (paramDef.type === 'string') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n}\n\nexport function defaultAddOperationHandler<T extends QueryWithOperations>(def: QueryBuilderOperationDef, query: T) {\n  const newOperation: QueryBuilderOperation = {\n    id: def.id,\n    params: def.defaultParams,\n  };\n\n  return {\n    ...query,\n    operations: [...query.operations, newOperation],\n  };\n}\n\nexport function getPromAndLokiOperationDisplayName(funcName: string) {\n  return capitalize(funcName.replace(/_/g, ' '));\n}\n\nexport function getOperationParamId(operationIndex: number, paramIndex: number) {\n  return `operations.${operationIndex}.param.${paramIndex}`;\n}\n\nexport function getRangeVectorParamDef(withRateInterval = false): QueryBuilderOperationParamDef {\n  const param: QueryBuilderOperationParamDef = {\n    name: 'Range',\n    type: 'string',\n    options: [\n      {\n        label: '$__interval',\n        value: '$__interval',\n        // tooltip: 'Dynamic interval based on max data points, scrape and min interval',\n      },\n      { label: '1m', value: '1m' },\n      { label: '5m', value: '5m' },\n      { label: '10m', value: '10m' },\n      { label: '1h', value: '1h' },\n      { label: '24h', value: '24h' },\n    ],\n  };\n\n  if (withRateInterval) {\n    (param.options as Array<SelectableValue<string>>).unshift({\n      label: '$__rate_interval',\n      value: '$__rate_interval',\n      // tooltip: 'Always above 4x scrape interval',\n    });\n  }\n\n  return param;\n}\n\n/**\n * This function is shared between Prometheus and Loki variants\n */\nexport function createAggregationOperation<T extends QueryWithOperations>(\n  name: string,\n  overrides: Partial<QueryBuilderOperationDef> = {}\n): QueryBuilderOperationDef[] {\n  const operations: QueryBuilderOperationDef[] = [\n    {\n      id: name,\n      name: getPromAndLokiOperationDisplayName(name),\n      params: [\n        {\n          name: 'By label',\n          type: 'string',\n          restParam: true,\n          optional: true,\n        },\n      ],\n      defaultParams: [],\n      alternativesKey: 'plain aggregations',\n      category: PromVisualQueryOperationCategory.Aggregations,\n      renderer: functionRendererLeft,\n      paramChangedHandler: getOnLabelAddedHandler(`__${name}_by`),\n      explainHandler: getAggregationExplainer(name, ''),\n      addOperationHandler: defaultAddOperationHandler,\n      ...overrides,\n    },\n    {\n      id: `__${name}_by`,\n      name: `${getPromAndLokiOperationDisplayName(name)} by`,\n      params: [\n        {\n          name: 'Label',\n          type: 'string',\n          restParam: true,\n          optional: true,\n          editor: LabelParamEditor,\n        },\n      ],\n      defaultParams: [''],\n      alternativesKey: 'aggregations by',\n      category: PromVisualQueryOperationCategory.Aggregations,\n      renderer: getAggregationByRenderer(name),\n      paramChangedHandler: getLastLabelRemovedHandler(name),\n      explainHandler: getAggregationExplainer(name, 'by'),\n      addOperationHandler: defaultAddOperationHandler,\n      hideFromList: true,\n      ...overrides,\n    },\n    {\n      id: `__${name}_without`,\n      name: `${getPromAndLokiOperationDisplayName(name)} without`,\n      params: [\n        {\n          name: 'Label',\n          type: 'string',\n          restParam: true,\n          optional: true,\n          editor: LabelParamEditor,\n        },\n      ],\n      defaultParams: [''],\n      alternativesKey: 'aggregations by',\n      category: PromVisualQueryOperationCategory.Aggregations,\n      renderer: getAggregationWithoutRenderer(name),\n      paramChangedHandler: getLastLabelRemovedHandler(name),\n      explainHandler: getAggregationExplainer(name, 'without'),\n      addOperationHandler: defaultAddOperationHandler,\n      hideFromList: true,\n      ...overrides,\n    },\n  ];\n\n  return operations;\n}\n\nexport function createAggregationOperationWithParam(\n  name: string,\n  paramsDef: { params: QueryBuilderOperationParamDef[]; defaultParams: QueryBuilderOperationParamValue[] },\n  overrides: Partial<QueryBuilderOperationDef> = {}\n): QueryBuilderOperationDef[] {\n  const operations = createAggregationOperation(name, overrides);\n  operations[0].params.unshift(...paramsDef.params);\n  operations[1].params.unshift(...paramsDef.params);\n  operations[2].params.unshift(...paramsDef.params);\n  operations[0].defaultParams = paramsDef.defaultParams;\n  operations[1].defaultParams = [...paramsDef.defaultParams, ''];\n  operations[2].defaultParams = [...paramsDef.defaultParams, ''];\n  operations[1].renderer = getAggregationByRendererWithParameter(name);\n  operations[2].renderer = getAggregationByRendererWithParameter(name);\n  return operations;\n}\n\nfunction getAggregationByRenderer(aggregation: string) {\n  return function aggregationRenderer(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n    return `${aggregation} by(${model.params.join(', ')}) (${innerExpr})`;\n  };\n}\n\nfunction getAggregationWithoutRenderer(aggregation: string) {\n  return function aggregationRenderer(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n    return `${aggregation} without(${model.params.join(', ')}) (${innerExpr})`;\n  };\n}\n\n/**\n * Very simple poc implementation, needs to be modified to support all aggregation operators\n */\nexport function getAggregationExplainer(aggregationName: string, mode: 'by' | 'without' | '') {\n  return function aggregationExplainer(model: QueryBuilderOperation) {\n    const labels = model.params.map((label) => `\\`${label}\\``).join(' and ');\n    const labelWord = pluralize('label', model.params.length);\n\n    switch (mode) {\n      case 'by':\n        return `Calculates ${aggregationName} over dimensions while preserving ${labelWord} ${labels}.`;\n      case 'without':\n        return `Calculates ${aggregationName} over the dimensions ${labels}. All other labels are preserved.`;\n      default:\n        return `Calculates ${aggregationName} over the dimensions.`;\n    }\n  };\n}\n\nfunction getAggregationByRendererWithParameter(aggregation: string) {\n  return function aggregationRenderer(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n    const restParamIndex = def.params.findIndex((param) => param.restParam);\n    const params = model.params.slice(0, restParamIndex);\n    const restParams = model.params.slice(restParamIndex);\n\n    return `${aggregation} by(${restParams.join(', ')}) (${params\n      .map((param, idx) => (def.params[idx].type === 'string' ? `\\\"${param}\\\"` : param))\n      .join(', ')}, ${innerExpr})`;\n  };\n}\n\n/**\n * This function will transform operations without labels to their plan aggregation operation\n */\nexport function getLastLabelRemovedHandler(changeToOperationId: string) {\n  return function onParamChanged(index: number, op: QueryBuilderOperation, def: QueryBuilderOperationDef) {\n    // If definition has more params then is defined there are no optional rest params anymore.\n    // We then transform this operation into a different one\n    if (op.params.length < def.params.length) {\n      return {\n        ...op,\n        id: changeToOperationId,\n      };\n    }\n\n    return op;\n  };\n}\n\nexport function getOnLabelAddedHandler(changeToOperationId: string) {\n  return function onParamChanged(index: number, op: QueryBuilderOperation, def: QueryBuilderOperationDef) {\n    // Check if we actually have the label param. As it's optional the aggregation can have one less, which is the\n    // case of just simple aggregation without label. When user adds the label it now has the same number of params\n    // as its definition, and now we can change it to its `_by` variant.\n    if (op.params.length === def.params.length) {\n      return {\n        ...op,\n        id: changeToOperationId,\n      };\n    }\n    return op;\n  };\n}\n\nexport function isConflictingSelector(\n  newLabel: Partial<QueryBuilderLabelFilter>,\n  labels: Array<Partial<QueryBuilderLabelFilter>>\n): boolean {\n  if (!newLabel.label || !newLabel.op || !newLabel.value) {\n    return false;\n  }\n\n  if (labels.length < 2) {\n    return false;\n  }\n\n  const operationIsNegative = newLabel.op.toString().startsWith('!');\n\n  const candidates = labels.filter(\n    (label) => label.label === newLabel.label && label.value === newLabel.value && label.op !== newLabel.op\n  );\n\n  const conflict = candidates.some((candidate) => {\n    if (operationIsNegative && candidate?.op?.toString().startsWith('!') === false) {\n      return true;\n    }\n    if (operationIsNegative === false && candidate?.op?.toString().startsWith('!')) {\n      return true;\n    }\n    return false;\n  });\n\n  return conflict;\n}\n","import { SyntaxNode, TreeCursor } from '@lezer/common';\n\nimport { QueryBuilderOperation, QueryBuilderOperationParamValue } from './types';\n\n// Although 0 isn't explicitly provided in the lezer-promql & @grafana/lezer-logql library as the error node ID, it does appear to be the ID of error nodes within lezer.\nexport const ErrorId = 0;\n\nexport function getLeftMostChild(cur: SyntaxNode): SyntaxNode {\n  return cur.firstChild ? getLeftMostChild(cur.firstChild) : cur;\n}\n\nexport function makeError(expr: string, node: SyntaxNode) {\n  return {\n    text: getString(expr, node),\n    // TODO: this are positions in the string with the replaced variables. Means it cannot be used to show exact\n    //  placement of the error for the user. We need some translation table to positions before the variable\n    //  replace.\n    from: node.from,\n    to: node.to,\n    parentType: node.parent?.name,\n  };\n}\n\n// Taken from template_srv, but copied so to not mess with the regex.index which is manipulated in the service\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]    [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\nconst variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::([^\\}]+))?}/g;\n\n/**\n * As variables with $ are creating parsing errors, we first replace them with magic string that is parsable and at\n * the same time we can get the variable and its format back from it.\n * @param expr\n */\nexport function replaceVariables(expr: string) {\n  return expr.replace(variableRegex, (match, var1, var2, fmt2, var3, fieldPath, fmt3) => {\n    const fmt = fmt2 || fmt3;\n    let variable = var1;\n    let varType = '0';\n\n    if (var2) {\n      variable = var2;\n      varType = '1';\n    }\n\n    if (var3) {\n      variable = var3;\n      varType = '2';\n    }\n\n    return `__V_${varType}__` + variable + '__V__' + (fmt ? '__F__' + fmt + '__F__' : '');\n  });\n}\n\nconst varTypeFunc = [\n  (v: string, f?: string) => `\\$${v}`,\n  (v: string, f?: string) => `[[${v}${f ? `:${f}` : ''}]]`,\n  (v: string, f?: string) => `\\$\\{${v}${f ? `:${f}` : ''}\\}`,\n];\n\n/**\n * Get back the text with variables in their original format.\n * @param expr\n */\nexport function returnVariables(expr: string) {\n  return expr.replace(/__V_(\\d)__(.+?)__V__(?:__F__(\\w+)__F__)?/g, (match, type, v, f) => {\n    return varTypeFunc[parseInt(type, 10)](v, f);\n  });\n}\n\n/**\n * Get the actual string of the expression. That is not stored in the tree so we have to get the indexes from the node\n * and then based on that get it from the expression.\n * @param expr\n * @param node\n */\nexport function getString(expr: string, node: SyntaxNode | TreeCursor | null | undefined) {\n  if (!node) {\n    return '';\n  }\n  return returnVariables(expr.substring(node.from, node.to));\n}\n\n/**\n * Create simple scalar binary op object.\n * @param opDef - definition of the op to be created\n * @param expr\n * @param numberNode - the node for the scalar\n * @param hasBool - whether operation has a bool modifier. Is used only for ops for which it makes sense.\n */\nexport function makeBinOp(\n  opDef: { id: string; comparison?: boolean },\n  expr: string,\n  numberNode: SyntaxNode,\n  hasBool: boolean\n): QueryBuilderOperation {\n  const params: QueryBuilderOperationParamValue[] = [parseFloat(getString(expr, numberNode))];\n  if (opDef.comparison) {\n    params.push(hasBool);\n  }\n  return {\n    id: opDef.id,\n    params,\n  };\n}\n\n/**\n * Get all nodes with type in the tree. This traverses the tree so it is safe only when you know there shouldn't be\n * too much nesting but you just want to skip some of the wrappers. For example getting function args this way would\n * not be safe is it would also find arguments of nested functions.\n * @param expr\n * @param cur\n * @param type - can be string or number, some data-sources (loki) haven't migrated over to using numeric constants defined in the lezer parsing library (e.g. lezer-promql).\n * @todo Remove string type definition when all data-sources have migrated to numeric constants\n */\nexport function getAllByType(expr: string, cur: SyntaxNode, type: number | string): string[] {\n  if (cur.type.id === type || cur.name === type) {\n    return [getString(expr, cur)];\n  }\n  const values: string[] = [];\n  let pos = 0;\n  let child = cur.childAfter(pos);\n  while (child) {\n    values.push(...getAllByType(expr, child, type));\n    pos = child.to;\n    child = cur.childAfter(pos);\n  }\n  return values;\n}\n\n// Debugging function for convenience. Gives you nice output similar to linux tree util.\n// @ts-ignore\nexport function log(expr: string, cur?: SyntaxNode) {\n  if (!cur) {\n    console.log('<empty>');\n    return;\n  }\n  const json = toJson(expr, cur);\n  const text = jsonToText(json);\n\n  if (!text) {\n    console.log('<empty>');\n    return;\n  }\n  console.log(text);\n}\n\nfunction toJson(expr: string, cur: SyntaxNode) {\n  const treeJson: any = {};\n  const name = nodeToString(expr, cur);\n  const children = [];\n\n  let pos = 0;\n  let child = cur.childAfter(pos);\n  while (child) {\n    children.push(toJson(expr, child));\n    pos = child.to;\n    child = cur.childAfter(pos);\n  }\n\n  treeJson.name = name;\n  treeJson.children = children;\n  return treeJson;\n}\n\ntype JsonNode = {\n  name: string;\n  children: JsonNode[];\n};\n\nfunction jsonToText(\n  node: JsonNode,\n  context: { lastChild: boolean; indent: string } = {\n    lastChild: true,\n    indent: '',\n  }\n) {\n  const name = node.name;\n  const { lastChild, indent } = context;\n  const newIndent = indent !== '' ? indent + (lastChild ? '└─' : '├─') : '';\n  let text = newIndent + name;\n\n  const children = node.children;\n  children.forEach((child, index) => {\n    const isLastChild = index === children.length - 1;\n    text +=\n      '\\n' +\n      jsonToText(child, {\n        lastChild: isLastChild,\n        indent: indent + (lastChild ? '  ' : '│ '),\n      });\n  });\n\n  return text;\n}\n\nfunction nodeToString(expr: string, node: SyntaxNode) {\n  return node.name + ': ' + getString(expr, node);\n}\n\n/**\n * There aren't any spaces in the metric names, so let's introduce a wildcard into the regex for each space to better facilitate a fuzzy search\n */\nexport const regexifyLabelValuesQueryString = (query: string) => {\n  const queryArray = query.split(' ');\n  return queryArray.map((query) => `${query}.*`).join('');\n};\n","import { VisualQueryBinary } from './shared/LokiAndPromQueryModellerBase';\nimport { QueryBuilderLabelFilter, QueryBuilderOperation } from './shared/types';\n\n/**\n * Visual query model\n */\nexport interface PromVisualQuery {\n  metric: string;\n  labels: QueryBuilderLabelFilter[];\n  operations: QueryBuilderOperation[];\n  binaryQueries?: PromVisualQueryBinary[];\n}\n\nexport type PromVisualQueryBinary = VisualQueryBinary<PromVisualQuery>;\n\nexport enum PromVisualQueryOperationCategory {\n  Aggregations = 'Aggregations',\n  RangeFunctions = 'Range functions',\n  Functions = 'Functions',\n  BinaryOps = 'Binary operations',\n  Trigonometric = 'Trigonometric',\n  Time = 'Time Functions',\n}\n\nexport enum PromOperationId {\n  Abs = 'abs',\n  Absent = 'absent',\n  AbsentOverTime = 'absent_over_time',\n  Acos = 'acos',\n  Acosh = 'acosh',\n  Asin = 'asin',\n  Asinh = 'asinh',\n  Atan = 'atan',\n  Atanh = 'atanh',\n  Avg = 'avg',\n  AvgOverTime = 'avg_over_time',\n  BottomK = 'bottomk',\n  Ceil = 'ceil',\n  Changes = 'changes',\n  Clamp = 'clamp',\n  ClampMax = 'clamp_max',\n  ClampMin = 'clamp_min',\n  Cos = 'cos',\n  Cosh = 'cosh',\n  Count = 'count',\n  CountOverTime = 'count_over_time',\n  CountScalar = 'count_scalar',\n  CountValues = 'count_values',\n  DayOfMonth = 'day_of_month',\n  DayOfWeek = 'day_of_week',\n  DaysInMonth = 'days_in_month',\n  Deg = 'deg',\n  Delta = 'delta',\n  Deriv = 'deriv',\n  DropCommonLabels = 'drop_common_labels',\n  Exp = 'exp',\n  Floor = 'floor',\n  Group = 'group',\n  HistogramQuantile = 'histogram_quantile',\n  HoltWinters = 'holt_winters',\n  Hour = 'hour',\n  Idelta = 'idelta',\n  Increase = 'increase',\n  Irate = 'irate',\n  LabelJoin = 'label_join',\n  LabelReplace = 'label_replace',\n  Last = 'last',\n  LastOverTime = 'last_over_time',\n  Ln = 'ln',\n  Log10 = 'log10',\n  Log2 = 'log2',\n  Max = 'max',\n  MaxOverTime = 'max_over_time',\n  Min = 'min',\n  MinOverTime = 'min_over_time',\n  Minute = 'minute',\n  Month = 'month',\n  Pi = 'pi',\n  PredictLinear = 'predict_linear',\n  Present = 'present',\n  PresentOverTime = 'present_over_time',\n  Quantile = 'quantile',\n  QuantileOverTime = 'quantile_over_time',\n  Rad = 'rad',\n  Rate = 'rate',\n  Resets = 'resets',\n  Round = 'round',\n  Scalar = 'scalar',\n  Sgn = 'sgn',\n  Sin = 'sin',\n  Sinh = 'sinh',\n  Sort = 'sort',\n  SortDesc = 'sort_desc',\n  Sqrt = 'sqrt',\n  Stddev = 'stddev',\n  StddevOverTime = 'stddev_over_time',\n  Sum = 'sum',\n  SumOverTime = 'sum_over_time',\n  Tan = 'tan',\n  Tanh = 'tanh',\n  Time = 'time',\n  Timestamp = 'timestamp',\n  TopK = 'topk',\n  Vector = 'vector',\n  Year = 'year',\n  // Binary ops\n  Addition = '__addition',\n  Subtraction = '__subtraction',\n  MultiplyBy = '__multiply_by',\n  DivideBy = '__divide_by',\n  Modulo = '__modulo',\n  Exponent = '__exponent',\n  NestedQuery = '__nested_query',\n  EqualTo = '__equal_to',\n  NotEqualTo = '__not_equal_to',\n  GreaterThan = '__greater_than',\n  LessThan = '__less_than',\n  GreaterOrEqual = '__greater_or_equal',\n  LessOrEqual = '__less_or_equal',\n}\n\nexport enum PromQueryPatternType {\n  Rate = 'rate',\n  Histogram = 'histogram',\n  Binary = 'binary',\n}\n\nexport interface PromQueryPattern {\n  name: string;\n  operations: QueryBuilderOperation[];\n  type: PromQueryPatternType;\n  binaryQueries?: PromVisualQueryBinary[];\n}\n","import { DataSourceJsonData, QueryResultMeta, ScopedVars } from '@grafana/data';\nimport { DataQuery } from '@grafana/schema';\n\nimport { PromApplication } from '../../../types/unified-alerting-dto';\n\nimport { Prometheus as GenPromQuery } from './dataquery.gen';\nimport { QueryEditorMode } from './querybuilder/shared/types';\n\nexport interface PromQuery extends GenPromQuery, DataQuery {\n  /**\n   * Timezone offset to align start & end time on backend\n   */\n  utcOffsetSec?: number;\n  legendFormat?: string;\n  valueWithRefId?: boolean;\n  showingGraph?: boolean;\n  showingTable?: boolean;\n  hinting?: boolean;\n  interval?: string;\n  intervalFactor?: number;\n}\n\nexport enum PrometheusCacheLevel {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High',\n  None = 'None',\n}\nexport interface PromOptions extends DataSourceJsonData {\n  timeInterval?: string;\n  queryTimeout?: string;\n  httpMethod?: string;\n  directUrl?: string;\n  customQueryParameters?: string;\n  disableMetricsLookup?: boolean;\n  exemplarTraceIdDestinations?: ExemplarTraceIdDestination[];\n  prometheusType?: PromApplication;\n  prometheusVersion?: string;\n  cacheLevel?: PrometheusCacheLevel;\n  defaultEditor?: QueryEditorMode;\n}\n\nexport type ExemplarTraceIdDestination = {\n  name: string;\n  url?: string;\n  urlDisplayLabel?: string;\n  datasourceUid?: string;\n};\n\nexport interface PromQueryRequest extends PromQuery {\n  step?: number;\n  requestId?: string;\n  start: number;\n  end: number;\n  headers?: any;\n}\n\nexport interface PromMetricsMetadataItem {\n  type: string;\n  help: string;\n  unit?: string;\n}\n\nexport interface PromMetricsMetadata {\n  [metric: string]: PromMetricsMetadataItem;\n}\n\nexport interface PromDataSuccessResponse<T = PromData> {\n  status: 'success';\n  data: T;\n}\n\nexport interface PromDataErrorResponse<T = PromData> {\n  status: 'error';\n  errorType: string;\n  error: string;\n  data: T;\n}\n\nexport type PromData = PromMatrixData | PromVectorData | PromScalarData | PromExemplarData[];\n\nexport interface Labels {\n  [index: string]: any;\n}\n\nexport interface Exemplar {\n  labels: Labels;\n  value: number;\n  timestamp: number;\n}\n\nexport interface PromExemplarData {\n  seriesLabels: PromMetric;\n  exemplars: Exemplar[];\n}\n\nexport interface PromVectorData {\n  resultType: 'vector';\n  result: Array<{\n    metric: PromMetric;\n    value: PromValue;\n  }>;\n}\n\nexport interface PromMatrixData {\n  resultType: 'matrix';\n  result: Array<{\n    metric: PromMetric;\n    values: PromValue[];\n  }>;\n}\n\nexport interface PromScalarData {\n  resultType: 'scalar';\n  result: PromValue;\n}\n\nexport type PromValue = [number, any];\n\nexport interface PromMetric {\n  __name__?: string;\n\n  [index: string]: any;\n}\n\nexport function isMatrixData(result: MatrixOrVectorResult): result is PromMatrixData['result'][0] {\n  return 'values' in result;\n}\n\nexport function isExemplarData(result: PromData): result is PromExemplarData[] {\n  if (result == null || !Array.isArray(result)) {\n    return false;\n  }\n  return result.length ? 'exemplars' in result[0] : false;\n}\n\nexport type MatrixOrVectorResult = PromMatrixData['result'][0] | PromVectorData['result'][0];\n\nexport interface TransformOptions {\n  format?: string;\n  step?: number;\n  legendFormat?: string;\n  start: number;\n  end: number;\n  query: string;\n  responseListLength: number;\n  scopedVars?: ScopedVars;\n  refId: string;\n  valueWithRefId?: boolean;\n  meta: QueryResultMeta;\n}\n\nexport interface PromLabelQueryResponse {\n  data: {\n    status: string;\n    data: string[];\n  };\n  cancelled?: boolean;\n}\n\n/**\n * Auto = query.legendFormat == '__auto'\n * Verbose = query.legendFormat == null/undefined/''\n * Custom query.legendFormat.length > 0 && query.legendFormat !== '__auto'\n */\nexport enum LegendFormatMode {\n  Auto = '__auto',\n  Verbose = '__verbose',\n  Custom = '__custom',\n}\n\nexport enum PromVariableQueryType {\n  LabelNames,\n  LabelValues,\n  MetricNames,\n  VarQueryResult,\n  SeriesQuery,\n}\n\nexport interface PromVariableQuery extends DataQuery {\n  query?: string;\n  expr?: string;\n  qryType?: PromVariableQueryType;\n  label?: string;\n  metric?: string;\n  varQuery?: string;\n  seriesQuery?: string;\n}\n\nexport type StandardPromVariableQuery = {\n  query: string;\n  refId: string;\n};\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/// Highlighting tags are markers that denote a highlighting category.\n/// They are [associated](#highlight.styleTags) with parts of a syntax\n/// tree by a language mode, and then mapped to an actual CSS style by\n/// a [highlighter](#highlight.Highlighter).\n///\n/// Because syntax tree node types and highlight styles have to be\n/// able to talk the same language, CodeMirror uses a mostly _closed_\n/// [vocabulary](#highlight.tags) of syntax tags (as opposed to\n/// traditional open string-based systems, which make it hard for\n/// highlighting themes to cover all the tokens produced by the\n/// various languages).\n///\n/// It _is_ possible to [define](#highlight.Tag^define) your own\n/// highlighting tags for system-internal use (where you control both\n/// the language package and the highlighter), but such tags will not\n/// be picked up by regular highlighters (though you can derive them\n/// from standard tags to allow highlighters to fall back to those).\nclass Tag {\n    /// @internal\n    constructor(\n    /// The set of this tag and all its parent tags, starting with\n    /// this one itself and sorted in order of decreasing specificity.\n    set, \n    /// The base unmodified tag that this one is based on, if it's\n    /// modified @internal\n    base, \n    /// The modifiers applied to this.base @internal\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /// @internal\n        this.id = nextTagID++;\n    }\n    /// Define a new tag. If `parent` is given, the tag is treated as a\n    /// sub-tag of that parent, and\n    /// [highlighters](#highlight.tagHighlighter) that don't mention\n    /// this tag will try to fall back to the parent tag (or grandparent\n    /// tag, etc).\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /// Define a tag _modifier_, which is a function that, given a tag,\n    /// will return a tag that is a subtag of the original. Applying the\n    /// same modifier to a twice tag will return the same value (`m1(t1)\n    /// == m1(t1)`) and applying multiple modifiers will, regardless or\n    /// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    ///\n    /// When multiple modifiers are applied to a given base tag, each\n    /// smaller set of modifiers is registered as a parent, so that for\n    /// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    /// `m1(m3(t1)`, and so on.\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/// This function is used to add a set of tags to a language syntax\n/// via [`NodeSet.extend`](#common.NodeSet.extend) or\n/// [`LRParser.configure`](#lr.LRParser.configure).\n///\n/// The argument object maps node selectors to [highlighting\n/// tags](#highlight.Tag) or arrays of tags.\n///\n/// Node selectors may hold one or more (space-separated) node paths.\n/// Such a path can be a [node name](#common.NodeType.name), or\n/// multiple node names (or `*` wildcards) separated by slash\n/// characters, as in `\"Block/Declaration/VariableName\"`. Such a path\n/// matches the final node but only if its direct parent nodes are the\n/// other nodes mentioned. A `*` in such a path matches any parent,\n/// but only a single level—wildcards that match multiple parents\n/// aren't supported, both for efficiency reasons and because Lezer\n/// trees make it rather hard to reason about what they would match.)\n///\n/// A path can be ended with `/...` to indicate that the tag assigned\n/// to the node should also apply to all child nodes, even if they\n/// match their own style (by default, only the innermost style is\n/// used).\n///\n/// When a path ends in `!`, as in `Attribute!`, no further matching\n/// happens for the node's child nodes, and the entire node gets the\n/// given style.\n///\n/// In this notation, node names that contain `/`, `!`, `*`, or `...`\n/// must be quoted as JSON strings.\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": tags.number,\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": tags.escape,\n///     // Style anything inside Attributes nodes\n///     \"Attributes!\": tags.meta,\n///     // Add a style to all content inside Italic nodes\n///     \"Italic/...\": tags.emphasis,\n///     // Style InvalidString nodes as both `string` and `invalid`\n///     \"InvalidString\": [tags.string, tags.invalid],\n///     // Style the node named \"/\" as punctuation\n///     '\"/\"': tags.punctuation\n///   })\n/// )\n/// ```\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/// Define a [highlighter](#highlight.Highlighter) from an array of\n/// tag/class pairs. Classes associated with more specific tags will\n/// take precedence.\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/// Highlight the given [tree](#common.Tree) with the given\n/// [highlighter](#highlight.Highlighter).\nfunction highlightTree(tree, highlighter, \n/// Assign styling to a region of the text. Will be called, in order\n/// of position, for any ranges where more than zero classes apply.\n/// `classes` is a space separated string of CSS classes.\nputStyle, \n/// The start of the range to highlight.\nfrom = 0, \n/// The end of the range.\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(cursor.from, cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), inheritedClass, innerHighlighters);\n                    this.startSpan(pos, cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/// Match a syntax node's [highlight rules](#highlight.styleTags). If\n/// there's a match, return its set of tags, and whether it is\n/// opaque (uses a `!`) or applies to all child nodes (`/...`).\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/// The default set of highlighting [tags](#highlight.Tag).\n///\n/// This collection is heavily biased towards programming languages,\n/// and necessarily incomplete. A full ontology of syntactic\n/// constructs would fill a stack of books, and be impractical to\n/// write themes for. So try to make do with this set. If all else\n/// fails, [open an\n/// issue](https://github.com/codemirror/codemirror.next) to propose a\n/// new tag, or [define](#highlight.Tag^define) a local custom tag for\n/// your use case.\n///\n/// Note that it is not obligatory to always attach the most specific\n/// tag possible to an element—if your grammar can't easily\n/// distinguish a certain type of element (such as a local variable),\n/// it is okay to style it as its more general variant (a variable).\n/// \n/// For tags that extend some parent tag, the documentation links to\n/// the parent.\nconst tags = {\n    /// A comment.\n    comment,\n    /// A line [comment](#highlight.tags.comment).\n    lineComment: t(comment),\n    /// A block [comment](#highlight.tags.comment).\n    blockComment: t(comment),\n    /// A documentation [comment](#highlight.tags.comment).\n    docComment: t(comment),\n    /// Any kind of identifier.\n    name,\n    /// The [name](#highlight.tags.name) of a variable.\n    variableName: t(name),\n    /// A type [name](#highlight.tags.name).\n    typeName: typeName,\n    /// A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    tagName: t(typeName),\n    /// A property or field [name](#highlight.tags.name).\n    propertyName: propertyName,\n    /// An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    attributeName: t(propertyName),\n    /// The [name](#highlight.tags.name) of a class.\n    className: t(name),\n    /// A label [name](#highlight.tags.name).\n    labelName: t(name),\n    /// A namespace [name](#highlight.tags.name).\n    namespace: t(name),\n    /// The [name](#highlight.tags.name) of a macro.\n    macroName: t(name),\n    /// A literal value.\n    literal,\n    /// A string [literal](#highlight.tags.literal).\n    string,\n    /// A documentation [string](#highlight.tags.string).\n    docString: t(string),\n    /// A character literal (subtag of [string](#highlight.tags.string)).\n    character: t(string),\n    /// An attribute value (subtag of [string](#highlight.tags.string)).\n    attributeValue: t(string),\n    /// A number [literal](#highlight.tags.literal).\n    number,\n    /// An integer [number](#highlight.tags.number) literal.\n    integer: t(number),\n    /// A floating-point [number](#highlight.tags.number) literal.\n    float: t(number),\n    /// A boolean [literal](#highlight.tags.literal).\n    bool: t(literal),\n    /// Regular expression [literal](#highlight.tags.literal).\n    regexp: t(literal),\n    /// An escape [literal](#highlight.tags.literal), for example a\n    /// backslash escape in a string.\n    escape: t(literal),\n    /// A color [literal](#highlight.tags.literal).\n    color: t(literal),\n    /// A URL [literal](#highlight.tags.literal).\n    url: t(literal),\n    /// A language keyword.\n    keyword,\n    /// The [keyword](#highlight.tags.keyword) for the self or this\n    /// object.\n    self: t(keyword),\n    /// The [keyword](#highlight.tags.keyword) for null.\n    null: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    atom: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that represents a unit.\n    unit: t(keyword),\n    /// A modifier [keyword](#highlight.tags.keyword).\n    modifier: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that acts as an operator.\n    operatorKeyword: t(keyword),\n    /// A control-flow related [keyword](#highlight.tags.keyword).\n    controlKeyword: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that defines something.\n    definitionKeyword: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) related to defining or\n    /// interfacing with modules.\n    moduleKeyword: t(keyword),\n    /// An operator.\n    operator,\n    /// An [operator](#highlight.tags.operator) that dereferences something.\n    derefOperator: t(operator),\n    /// Arithmetic-related [operator](#highlight.tags.operator).\n    arithmeticOperator: t(operator),\n    /// Logical [operator](#highlight.tags.operator).\n    logicOperator: t(operator),\n    /// Bit [operator](#highlight.tags.operator).\n    bitwiseOperator: t(operator),\n    /// Comparison [operator](#highlight.tags.operator).\n    compareOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that updates its operand.\n    updateOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that defines something.\n    definitionOperator: t(operator),\n    /// Type-related [operator](#highlight.tags.operator).\n    typeOperator: t(operator),\n    /// Control-flow [operator](#highlight.tags.operator).\n    controlOperator: t(operator),\n    /// Program or markup punctuation.\n    punctuation,\n    /// [Punctuation](#highlight.tags.punctuation) that separates\n    /// things.\n    separator: t(punctuation),\n    /// Bracket-style [punctuation](#highlight.tags.punctuation).\n    bracket,\n    /// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    /// tokens).\n    angleBracket: t(bracket),\n    /// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    /// tokens).\n    squareBracket: t(bracket),\n    /// Parentheses (usually `(` and `)` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket).\n    paren: t(bracket),\n    /// Braces (usually `{` and `}` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket).\n    brace: t(bracket),\n    /// Content, for example plain text in XML or markup documents.\n    content,\n    /// [Content](#highlight.tags.content) that represents a heading.\n    heading,\n    /// A level 1 [heading](#highlight.tags.heading).\n    heading1: t(heading),\n    /// A level 2 [heading](#highlight.tags.heading).\n    heading2: t(heading),\n    /// A level 3 [heading](#highlight.tags.heading).\n    heading3: t(heading),\n    /// A level 4 [heading](#highlight.tags.heading).\n    heading4: t(heading),\n    /// A level 5 [heading](#highlight.tags.heading).\n    heading5: t(heading),\n    /// A level 6 [heading](#highlight.tags.heading).\n    heading6: t(heading),\n    /// A prose separator (such as a horizontal rule).\n    contentSeparator: t(content),\n    /// [Content](#highlight.tags.content) that represents a list.\n    list: t(content),\n    /// [Content](#highlight.tags.content) that represents a quote.\n    quote: t(content),\n    /// [Content](#highlight.tags.content) that is emphasized.\n    emphasis: t(content),\n    /// [Content](#highlight.tags.content) that is styled strong.\n    strong: t(content),\n    /// [Content](#highlight.tags.content) that is part of a link.\n    link: t(content),\n    /// [Content](#highlight.tags.content) that is styled as code or\n    /// monospace.\n    monospace: t(content),\n    /// [Content](#highlight.tags.content) that has a strike-through\n    /// style.\n    strikethrough: t(content),\n    /// Inserted text in a change-tracking format.\n    inserted: t(),\n    /// Deleted text.\n    deleted: t(),\n    /// Changed text.\n    changed: t(),\n    /// An invalid or unsyntactic element.\n    invalid: t(),\n    /// Metadata or meta-instruction.\n    meta,\n    /// [Metadata](#highlight.tags.meta) that applies to the entire\n    /// document.\n    documentMeta: t(meta),\n    /// [Metadata](#highlight.tags.meta) that annotates or adds\n    /// attributes to a given syntactic element.\n    annotation: t(meta),\n    /// Processing instruction or preprocessor directive. Subtag of\n    /// [meta](#highlight.tags.meta).\n    processingInstruction: t(meta),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    /// given element is being defined. Expected to be used with the\n    /// various [name](#highlight.tags.name) tags.\n    definition: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that\n    /// something is constant. Mostly expected to be used with\n    /// [variable names](#highlight.tags.variableName).\n    constant: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    /// a [variable](#highlight.tags.variableName) or [property\n    /// name](#highlight.tags.propertyName) is being called or defined\n    /// as a function.\n    function: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    /// [names](#highlight.tags.name) to indicate that they belong to\n    /// the language's standard environment.\n    standard: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    /// [names](#highlight.tags.name) is local to some scope.\n    local: Tag.defineModifier(),\n    /// A generic variant [modifier](#highlight.Tag^defineModifier) that\n    /// can be used to tag language-specific alternative variants of\n    /// some common tag. It is recommended for themes to define special\n    /// forms of at least the [string](#highlight.tags.string) and\n    /// [variable name](#highlight.tags.variableName) tags, since those\n    /// come up a lot.\n    special: Tag.defineModifier()\n};\n/// This is a highlighter that adds stable, predictable classes to\n/// tokens, for styling with external CSS.\n///\n/// The following tags are mapped to their name prefixed with `\"tok-\"`\n/// (for example `\"tok-comment\"`):\n///\n/// * [`link`](#highlight.tags.link)\n/// * [`heading`](#highlight.tags.heading)\n/// * [`emphasis`](#highlight.tags.emphasis)\n/// * [`strong`](#highlight.tags.strong)\n/// * [`keyword`](#highlight.tags.keyword)\n/// * [`atom`](#highlight.tags.atom)\n/// * [`bool`](#highlight.tags.bool)\n/// * [`url`](#highlight.tags.url)\n/// * [`labelName`](#highlight.tags.labelName)\n/// * [`inserted`](#highlight.tags.inserted)\n/// * [`deleted`](#highlight.tags.deleted)\n/// * [`literal`](#highlight.tags.literal)\n/// * [`string`](#highlight.tags.string)\n/// * [`number`](#highlight.tags.number)\n/// * [`variableName`](#highlight.tags.variableName)\n/// * [`typeName`](#highlight.tags.typeName)\n/// * [`namespace`](#highlight.tags.namespace)\n/// * [`className`](#highlight.tags.className)\n/// * [`macroName`](#highlight.tags.macroName)\n/// * [`propertyName`](#highlight.tags.propertyName)\n/// * [`operator`](#highlight.tags.operator)\n/// * [`comment`](#highlight.tags.comment)\n/// * [`meta`](#highlight.tags.meta)\n/// * [`punctuation`](#highlight.tags.punctuation)\n/// * [`invalid`](#highlight.tags.invalid)\n///\n/// In addition, these mappings are provided:\n///\n/// * [`regexp`](#highlight.tags.regexp),\n///   [`escape`](#highlight.tags.escape), and\n///   [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n///   are mapped to `\"tok-string2\"`\n/// * [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName2\"`\n/// * [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName tok-local\"`\n/// * [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n///   to `\"tok-variableName tok-definition\"`\n/// * [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n///   to `\"tok-propertyName tok-definition\"`\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightTree, styleTags, tagHighlighter, tags };\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst inf$1 = 147,\n  nan$1 = 148,\n  Bool$1 = 1,\n  Ignoring$1 = 2,\n  On$1 = 3,\n  GroupLeft$1 = 4,\n  GroupRight$1 = 5,\n  Offset$1 = 6,\n  Atan2$1 = 7,\n  Avg$1 = 8,\n  Bottomk$1 = 9,\n  Count$1 = 10,\n  CountValues$1 = 11,\n  Group$1 = 12,\n  Max$1 = 13,\n  Min$1 = 14,\n  Quantile$1 = 15,\n  Stddev$1 = 16,\n  Stdvar$1 = 17,\n  Sum$1 = 18,\n  Topk$1 = 19,\n  By$1 = 20,\n  Without$1 = 21,\n  And$1 = 22,\n  Or$1 = 23,\n  Unless$1 = 24,\n  Start$1 = 25,\n  End$1 = 26;\n\n// Copyright 2021 The Prometheus Authors\n\nconst keywordTokens = {\n    inf: inf$1,\n    nan: nan$1,\n    bool: Bool$1,\n    ignoring: Ignoring$1,\n    on: On$1,\n    group_left: GroupLeft$1,\n    group_right: GroupRight$1,\n    offset: Offset$1,\n};\n\nconst specializeIdentifier = (value, stack) => {\n    return keywordTokens[value.toLowerCase()] || -1;\n};\n\nconst contextualKeywordTokens = {\n    avg: Avg$1,\n    atan2: Atan2$1,\n    bottomk: Bottomk$1,\n    count: Count$1,\n    count_values: CountValues$1,\n    group: Group$1,\n    max: Max$1,\n    min: Min$1,\n    quantile: Quantile$1,\n    stddev: Stddev$1,\n    stdvar: Stdvar$1,\n    sum: Sum$1,\n    topk: Topk$1,\n    by: By$1,\n    without: Without$1,\n    and: And$1,\n    or: Or$1,\n    unless: Unless$1,\n    start: Start$1,\n    end: End$1,\n};\n\nconst extendIdentifier = (value, stack) => {\n    return contextualKeywordTokens[value.toLowerCase()] || -1;\n};\n\n// Copyright 2022 The Prometheus Authors\n\nconst promQLHighLight = styleTags({\n    LineComment: tags.comment,\n    LabelName: tags.labelName,\n    StringLiteral: tags.string,\n    NumberLiteral: tags.number,\n    Duration: tags.number,\n    'Abs Absent AbsentOverTime Acos Acosh Asin Asinh Atan Atanh AvgOverTime Ceil Changes Clamp ClampMax ClampMin Cos Cosh CountOverTime DaysInMonth DayOfMonth DayOfWeek DayOfYear Deg Delta Deriv Exp Floor HistogramQuantile HoltWinters Hour Idelta Increase Irate LabelReplace LabelJoin LastOverTime Ln Log10 Log2 MaxOverTime MinOverTime Minute Month Pi PredictLinear PresentOverTime QuantileOverTime Rad Rate Resets Round Scalar Sgn Sin Sinh Sort SortDesc Sqrt StddevOverTime StdvarOverTime SumOverTime Tan Tanh Time Timestamp Vector Year':\n        tags.function(tags.variableName),\n    'Avg Bottomk Count Count_values Group Max Min Quantile Stddev Stdvar Sum Topk': tags.operatorKeyword,\n    'By Without Bool On Ignoring GroupLeft GroupRight Offset Start End': tags.modifier,\n    'And Unless Or': tags.logicOperator,\n    'Sub Add Mul Mod Div Atan2 Eql Neq Lte Lss Gte Gtr EqlRegex EqlSingle NeqRegex Pow At': tags.operator,\n    UnaryOp: tags.arithmeticOperator,\n    '( )': tags.paren,\n    '[ ]': tags.squareBracket,\n    '{ }': tags.brace,\n    '⚠': tags.invalid,\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,absent_over_time:309, absent:311, abs:313, acos:315, acosh:317, asin:319, asinh:321, atan:323, atanh:325, avg_over_time:327, ceil:329, changes:331, clamp:333, clamp_max:335, clamp_min:337, cos:339, cosh:341, count_over_time:343, days_in_month:345, day_of_month:347, day_of_week:349, day_of_year:351, deg:353, delta:355, deriv:357, exp:359, floor:361, histogram_quantile:363, holt_winters:365, hour:367, idelta:369, increase:371, irate:373, label_replace:375, label_join:377, last_over_time:379, ln:381, log10:383, log2:385, max_over_time:387, min_over_time:389, minute:391, month:393, pi:395, predict_linear:397, present_over_time:399, quantile_over_time:401, rad:403, rate:405, resets:407, round:409, scalar:411, sgn:413, sin:415, sinh:417, sort:419, sort_desc:421, sqrt:423, stddev_over_time:425, stdvar_over_time:427, sum_over_time:429, tan:431, tanh:433, timestamp:435, time:437, vector:439, year:441};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"6bOYQPOOO'OQPOOOOQO'#C{'#C{O'TQPO'#CzQ'`QQOOOOQO'#De'#DeO'ZQPO'#DdOOQO'#FO'#FOO(mQPO'#FUOYQPO'#FQOYQPO'#FTOOQO'#FW'#FWO.lQSO'#FXO.tQQO'#FVOOQO'#FV'#FVOOQO'#Cy'#CyOOQO'#Df'#DfOOQO'#Dh'#DhOOQO'#Di'#DiOOQO'#Dj'#DjOOQO'#Dk'#DkOOQO'#Dl'#DlOOQO'#Dm'#DmOOQO'#Dn'#DnOOQO'#Do'#DoOOQO'#Dp'#DpOOQO'#Dq'#DqOOQO'#Dr'#DrOOQO'#Ds'#DsOOQO'#Dt'#DtOOQO'#Du'#DuOOQO'#Dv'#DvOOQO'#Dw'#DwOOQO'#Dx'#DxOOQO'#Dy'#DyOOQO'#Dz'#DzOOQO'#D{'#D{OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#E^'#E^OOQO'#E_'#E_OOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgOOQO'#Eh'#EhOOQO'#Ei'#EiOOQO'#Ej'#EjOOQO'#Ek'#EkOOQO'#El'#ElOOQO'#Em'#EmOOQO'#En'#EnOOQO'#Eo'#EoOOQO'#Ep'#EpOOQO'#Eq'#EqOOQO'#Er'#ErOOQO'#Es'#EsOOQO'#Et'#EtOOQO'#Eu'#EuOOQO'#Ev'#EvOOQO'#Ew'#EwOOQO'#Ex'#ExOOQO'#Ey'#EyOOQO'#Ez'#EzOOQO'#E{'#E{QOQPOOO0_QPO'#C|O0dQPO'#DRO'ZQPO,59fO0kQQO,59fO2XQPO,59oO2XQPO,59oO2XQPO,59oO2XQPO,59oO2XQPO,59oO8WQQO,5;hO8]QQO,5;kO8eQPO,5;zOOQO,5:O,5:OOOQO,5;j,5;jO8|QQO,5;lO9TQQO,5;oO:kQPO'#FZO:yQPO,5;sOOQO'#FY'#FYOOQO,5;s,5;sOOQO,5;q,5;qO;RQSO'#C}OOQO,59h,59hO;ZQPO,59mO;cQQO'#DSOOQO,59m,59mOOQO1G/Q1G/QO0_QPO'#DWOAcQPO'#DVOAmQPO'#DVOYQPO1G/ZOYQPO1G/ZOYQPO1G/ZOYQPO1G/ZOYQPO1G/ZOAwQSO1G1SOOQO1G1V1G1VOBPQQO1G1VOBUQPO'#FOOOQO'#Fb'#FbOOQO1G1f1G1fOBaQPO1G1fOOQO1G1W1G1WOOQO'#F['#F[OBfQPO,5;uOBkQSO1G1_OOQO1G1_1G1_OOQO'#DP'#DPOBsQPO,59iOOQO'#DO'#DOOOQO,59i,59iOYQPO,59nOOQO1G/X1G/XOOQO,59r,59rOHnQPO,59qOHuQPO,59qOJ^QQO7+$uOJnQQO7+$uOLSQQO7+$uOLjQQO7+$uONRQQO7+$uOOQO7+&n7+&nONlQQO7+&tOOQO7+&q7+&qONtQPO7+'QOOQO1G1a1G1aOOQO1G1`1G1`OOQO7+&y7+&yONyQSO1G/TOOQO1G/T1G/TO! RQQO1G/YOOQO1G/]1G/]O! ]QPO1G/]OOQO<<J`<<J`O!'RQPO<<J`OOQO<<Jl<<JlOOQO1G/U1G/UOOQO7+$o7+$oOOQO7+$w7+$wOOQOAN?zAN?z\",\n  stateData: \"!'W~O$[OSkOS~OWQOXQOYQOZQO[QO]QO^QO_QO`QOaQObQOcQO!ZZO#u_O$XVO$YVO$]XO$``O$aaO$bbO$ccO$ddO$eeO$ffO$ggO$hhO$iiO$jjO$kkO$llO$mmO$nnO$ooO$ppO$qqO$rrO$ssO$ttO$uuO$vvO$wwO$xxO$yyO$zzO${{O$||O$}}O%O!OO%P!PO%Q!QO%R!RO%S!SO%T!TO%U!UO%V!VO%W!WO%X!XO%Y!YO%Z!ZO%[![O%]!]O%^!^O%_!_O%`!`O%a!aO%b!bO%c!cO%d!dO%e!eO%f!fO%g!gO%h!hO%i!iO%j!jO%k!kO%l!lO%m!mO%n!nO%o!oO%p!pO%q!qO%r!rO%s!sO%t!tO%wWO%xWO%yVO%{[O~O!ZZO~Od!vOe!vO$]!wO~OU#QOV!zOf!}Og#OOh!}Ox!zO{!zO|!zO}!zO!O!{O!P!{O!Q!|O!R!|O!S!|O!T!|O!U!|O!V!|O$T#RO%u#PO~O$X#TO$Y#TO%y#TOW#xXX#xXY#xXZ#xX[#xX]#xX^#xX_#xX`#xXa#xXb#xXc#xX!Z#xX#u#xX$X#xX$Y#xX$]#xX$`#xX$a#xX$b#xX$c#xX$d#xX$e#xX$f#xX$g#xX$h#xX$i#xX$j#xX$k#xX$l#xX$m#xX$n#xX$o#xX$p#xX$q#xX$r#xX$s#xX$t#xX$u#xX$v#xX$w#xX$x#xX$y#xX$z#xX${#xX$|#xX$}#xX%O#xX%P#xX%Q#xX%R#xX%S#xX%T#xX%U#xX%V#xX%W#xX%X#xX%Y#xX%Z#xX%[#xX%]#xX%^#xX%_#xX%`#xX%a#xX%b#xX%c#xX%d#xX%e#xX%f#xX%g#xX%h#xX%i#xX%j#xX%k#xX%l#xX%m#xX%n#xX%o#xX%p#xX%q#xX%r#xX%s#xX%t#xX%w#xX%x#xX%y#xX%{#xX~Ot#WO%|#ZO~O%{[OU#yXV#yXf#yXg#yXh#yXx#yX{#yX|#yX}#yX!O#yX!P#yX!Q#yX!R#yX!S#yX!T#yX!U#yX!V#yX$T#yX$W#yX%u#yX$_#yX$^#yX~O$]#]O~O$_#aO~PYOd!vOe!vOUnaVnafnagnahnaxna{na|na}na!Ona!Pna!Qna!Rna!Sna!Tna!Una!Vna$Tna$Wna%una$_na$^na~OP#eOQ#cOR#cOWyPXyPYyPZyP[yP]yP^yP_yP`yPayPbyPcyP!ZyP#uyP$XyP$YyP$]yP$`yP$ayP$byP$cyP$dyP$eyP$fyP$gyP$hyP$iyP$jyP$kyP$lyP$myP$nyP$oyP$pyP$qyP$ryP$syP$tyP$uyP$vyP$wyP$xyP$yyP$zyP${yP$|yP$}yP%OyP%PyP%QyP%RyP%SyP%TyP%UyP%VyP%WyP%XyP%YyP%ZyP%[yP%]yP%^yP%_yP%`yP%ayP%byP%cyP%dyP%eyP%fyP%gyP%hyP%iyP%jyP%kyP%lyP%myP%nyP%oyP%pyP%qyP%ryP%syP%tyP%wyP%xyP%yyP%{yP~O#q#kO~O!P#mO#q#lO~Oi#oOj#oO$XVO$YVO%w#nO%x#nO%yVO~O$_#rO~P'`Ox!zOU#waV#waf#wag#wah#wa{#wa|#wa}#wa!O#wa!P#wa!Q#wa!R#wa!S#wa!T#wa!U#wa!V#wa$T#wa$W#wa%u#wa$_#wa$^#wa~O!V#sO$P#sO$Q#sO$R#sO~O$^#uO%|#vO~Ot#wO$_#zO~O$^#{O$_#|O~O$^vX$_vX~P'`OWyXXyXYyXZyX[yX]yX^yX_yX`yXayXbyXcyX!ZyX#uyX$XyX$YyX$]yX$`yX$ayX$byX$cyX$dyX$eyX$fyX$gyX$hyX$iyX$jyX$kyX$lyX$myX$nyX$oyX$pyX$qyX$ryX$syX$tyX$uyX$vyX$wyX$xyX$yyX$zyX${yX$|yX$}yX%OyX%PyX%QyX%RyX%SyX%TyX%UyX%VyX%WyX%XyX%YyX%ZyX%[yX%]yX%^yX%_yX%`yX%ayX%byX%cyX%dyX%eyX%fyX%gyX%hyX%iyX%jyX%kyX%lyX%myX%nyX%oyX%pyX%qyX%ryX%syX%tyX%wyX%xyX%yyX%{yX~OS$OOT$OO~P;mOQ#cOR#cO~P;mO%v$VO%z$WO~O#q$XO~O$X#TO$Y#TO%y#TO~O$]$YO~O#u$ZO~Ot#WO%|$]O~O$^$^O$_$_O~OWyaXyaYyaZya[ya]ya^ya_ya`yaayabyacya!Zya#uya$Xya$Yya$`ya$aya$bya$cya$dya$eya$fya$gya$hya$iya$jya$kya$lya$mya$nya$oya$pya$qya$rya$sya$tya$uya$vya$wya$xya$yya$zya${ya$|ya$}ya%Oya%Pya%Qya%Rya%Sya%Tya%Uya%Vya%Wya%Xya%Yya%Zya%[ya%]ya%^ya%_ya%`ya%aya%bya%cya%dya%eya%fya%gya%hya%iya%jya%kya%lya%mya%nya%oya%pya%qya%rya%sya%tya%wya%xya%yya%{ya~O$]#]O~PB{OS$bOT$bO$]ya~PB{Ox!zOUwqfwqgwqhwq!Owq!Pwq!Qwq!Rwq!Swq!Twq!Uwq!Vwq$Twq$Wwq%uwq$_wq$^wq~OVwq{wq|wq}wq~PISOV!zO{!zO|!zO}!zO~PISOV!zOx!zO{!zO|!zO}!zO!O!{O!P!{OUwqfwqgwqhwq$Twq$Wwq%uwq$_wq$^wq~O!Qwq!Rwq!Swq!Twq!Uwq!Vwq~PKOO!Q!|O!R!|O!S!|O!T!|O!U!|O!V!|O~PKOOV!zOf!}Oh!}Ox!zO{!zO|!zO}!zO!O!{O!P!{O!Q!|O!R!|O!S!|O!T!|O!U!|O!V!|O~OUwqgwq$Twq$Wwq%uwq$_wq$^wq~PMQO#q$dO%v$cO~O$_$eO~Ot#wO$_$gO~O$^vi$_vi~P'`O$]#]OWyiXyiYyiZyi[yi]yi^yi_yi`yiayibyicyi!Zyi#uyi$Xyi$Yyi$`yi$ayi$byi$cyi$dyi$eyi$fyi$gyi$hyi$iyi$jyi$kyi$lyi$myi$nyi$oyi$pyi$qyi$ryi$syi$tyi$uyi$vyi$wyi$xyi$yyi$zyi${yi$|yi$}yi%Oyi%Pyi%Qyi%Ryi%Syi%Tyi%Uyi%Vyi%Wyi%Xyi%Yyi%Zyi%[yi%]yi%^yi%_yi%`yi%ayi%byi%cyi%dyi%eyi%fyi%gyi%hyi%iyi%jyi%kyi%lyi%myi%nyi%oyi%pyi%qyi%ryi%syi%tyi%wyi%xyi%yyi%{yi~O%v$iO~O\",\n  goto: \"(v$VPPPPPPPPPPPPPPPPPPPPPPPPPPPPP$W$v%S%`%f%r%uP%{&U$vP&X&hPPPPPPPPPPP$v&r'OP'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O'O$vP'[$v$vP$v$v'k$v'w(W(g(j(pPPP$vP(sQSOQ#UXQ#VYQ#`!wQ$Q#fQ$R#gQ$S#hQ$T#iQ$U#jR$`#{e_OXY!w#f#g#h#i#j#{eROXY!w#f#g#h#i#j#{Q!xRR#b!yQ#^!vQ#}#cQ$a$OR$h$bR#x#]Q#y#]R$f$^Q!yRQ#SUR#b!xR#_!wQ#f!zQ#g!{Q#h!|Q#i!}R#j#OY#d!z!{!|!}#OR$P#eeUOXY!w#f#g#h#i#j#{eTOXY!w#f#g#h#i#j#{d_OXY!w#f#g#h#i#j#{R#p#ReYOXY!w#f#g#h#i#j#{d]OXY!w#f#g#h#i#j#{R!uPd^OXY!w#f#g#h#i#j#{R#[]R#X[Q#Y[R$[#uR#t#WR#q#R\",\n  nodeNames: \"⚠ Bool Ignoring On GroupLeft GroupRight Offset Atan2 Avg Bottomk Count CountValues Group Max Min Quantile Stddev Stdvar Sum Topk By Without And Or Unless Start End LineComment PromQL Expr AggregateExpr AggregateOp AggregateModifier GroupingLabels GroupingLabelList GroupingLabel LabelName FunctionCallBody FunctionCallArgs BinaryExpr Pow BinModifiers OnOrIgnoring Mul Div Mod Add Sub Eql Gte Gtr Lte Lss Neq FunctionCall FunctionIdentifier AbsentOverTime Identifier Absent Abs Acos Acosh Asin Asinh Atan Atanh AvgOverTime Ceil Changes Clamp ClampMax ClampMin Cos Cosh CountOverTime DaysInMonth DayOfMonth DayOfWeek DayOfYear Deg Delta Deriv Exp Floor HistogramQuantile HoltWinters Hour Idelta Increase Irate LabelReplace LabelJoin LastOverTime Ln Log10 Log2 MaxOverTime MinOverTime Minute Month Pi PredictLinear PresentOverTime QuantileOverTime Rad Rate Resets Round Scalar Sgn Sin Sinh Sort SortDesc Sqrt StddevOverTime StdvarOverTime SumOverTime Tan Tanh Timestamp Time Vector Year MatrixSelector Duration NumberLiteral OffsetExpr ParenExpr StringLiteral SubqueryExpr UnaryExpr UnaryOp VectorSelector MetricIdentifier LabelMatchers LabelMatchList LabelMatcher MatchOp EqlSingle EqlRegex NeqRegex StepInvariantExpr At AtModifierPreprocessors MetricName\",\n  maxTerm: 228,\n  propSources: [promQLHighLight],\n  skippedNodes: [0,27],\n  repeatNodeCount: 0,\n  tokenData: \"1R~RwX^#lpq#lqr$ars$tst%huv%swx%xxy&gyz&lz{&q{|&v|}&}}!O'S!O!P'Z!P!Q(Z!Q!R(`!R![)W![!]-r!^!_.n!_!`.{!`!a/b!b!c/o!c!}/t!}#O0[#P#Q0a#Q#R0f#R#S/t#S#T0k#T#o/t#o#p0w#q#r0|#y#z#l$f$g#l#BY#BZ#l$IS$I_#l$I|$JO#l$JT$JU#l$KV$KW#l&FU&FV#l~#qY$[~X^#lpq#l#y#z#l$f$g#l#BY#BZ#l$IS$I_#l$I|$JO#l$JT$JU#l$KV$KW#l&FU&FV#l~$dQ!_!`$j#r#s$o~$oO!V~~$tO$R~~$yU#u~OY$tZr$trs%]s#O$t#O#P%b#P~$t~%bO#u~~%ePO~$t~%mQk~OY%hZ~%h~%xO}~~%}U#u~OY%xZw%xwx%]x#O%x#O#P&a#P~%x~&dPO~%x~&lO$]~~&qO$_~~&vO{~R&}O%xP!OQ~'SO$^~R'ZO%wP!PQP'^P!Q!['aP'fR%yP!Q!['a!g!h'o#X#Y'oP'rR{|'{}!O'{!Q![(RP(OP!Q![(RP(WP%yP!Q![(R~(`O|~R(eZ%yP!O!P'a!Q![)W!g!h'o#W#X){#X#Y'o#[#]*d#a#b*x#g#h+l#k#l+}#l#m-W#m#n,iR)]Y%yP!O!P'a!Q![)W!g!h'o#W#X){#X#Y'o#[#]*d#a#b*x#g#h+l#k#l+}#m#n,iQ*QP#qQ!Q![*TQ*WS!Q![*T#[#]*d#a#b*x#g#h+lQ*iP#qQ!Q![*lQ*oR!Q![*l#a#b*x#g#h+lQ*}Q#qQ!Q![+T#g#h+gQ+WR!Q![+T#a#b+a#g#h+lQ+dP#g#h+gQ+lO#qQQ+qP#qQ!Q![+tQ+wQ!Q![+t#a#b+aQ,SP#qQ!Q![,VQ,YT!Q![,V#W#X){#[#]*d#a#b*x#g#h+lQ,nP#qQ!Q![,qQ,tU!Q![,q#W#X){#[#]*d#a#b*x#g#h+l#k#l+}P-ZR!Q![-d!c!i-d#T#Z-dP-iR%yP!Q![-d!c!i-d#T#Z-dV-yT%zS!ZR!Q![.Y![!].Y!c!}.Y#R#S.Y#T#o.YR._T!ZR!Q![.Y![!].Y!c!}.Y#R#S.Y#T#o.Y~.sP!U~!_!`.v~.{O!T~~/QQ$PP!_!`/W#r#s/]Q/]O!QQ~/bO$Q~~/gP!S~!_!`/j~/oO!R~~/tO$T~V/{T!ZRtS!Q![/t![!].Y!c!}/t#R#S/t#T#o/t~0aO%u~~0fO%v~~0kOx~~0nRO#S0k#S#T%]#T~0k~0|O%{~~1RO%|~\",\n  tokenizers: [0, 1, 2],\n  topRules: {\"PromQL\":[0,28],\"MetricName\":[1,145]},\n  specialized: [{term: 57, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 57, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 57, get: value => spec_Identifier[value] || -1}],\n  tokenPrec: 0\n});\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst inf = 147,\n  nan = 148,\n  Bool = 1,\n  Ignoring = 2,\n  On = 3,\n  GroupLeft = 4,\n  GroupRight = 5,\n  Offset = 6,\n  Atan2 = 7,\n  Avg = 8,\n  Bottomk = 9,\n  Count = 10,\n  CountValues = 11,\n  Group = 12,\n  Max = 13,\n  Min = 14,\n  Quantile = 15,\n  Stddev = 16,\n  Stdvar = 17,\n  Sum = 18,\n  Topk = 19,\n  By = 20,\n  Without = 21,\n  And = 22,\n  Or = 23,\n  Unless = 24,\n  Start = 25,\n  End = 26,\n  LineComment = 27,\n  PromQL = 28,\n  Expr = 29,\n  AggregateExpr = 30,\n  AggregateOp = 31,\n  AggregateModifier = 32,\n  GroupingLabels = 33,\n  GroupingLabelList = 34,\n  GroupingLabel = 35,\n  LabelName = 36,\n  FunctionCallBody = 37,\n  FunctionCallArgs = 38,\n  BinaryExpr = 39,\n  Pow = 40,\n  BinModifiers = 41,\n  OnOrIgnoring = 42,\n  Mul = 43,\n  Div = 44,\n  Mod = 45,\n  Add = 46,\n  Sub = 47,\n  Eql = 48,\n  Gte = 49,\n  Gtr = 50,\n  Lte = 51,\n  Lss = 52,\n  Neq = 53,\n  FunctionCall = 54,\n  FunctionIdentifier = 55,\n  AbsentOverTime = 56,\n  Identifier = 57,\n  Absent = 58,\n  Abs = 59,\n  Acos = 60,\n  Acosh = 61,\n  Asin = 62,\n  Asinh = 63,\n  Atan = 64,\n  Atanh = 65,\n  AvgOverTime = 66,\n  Ceil = 67,\n  Changes = 68,\n  Clamp = 69,\n  ClampMax = 70,\n  ClampMin = 71,\n  Cos = 72,\n  Cosh = 73,\n  CountOverTime = 74,\n  DaysInMonth = 75,\n  DayOfMonth = 76,\n  DayOfWeek = 77,\n  DayOfYear = 78,\n  Deg = 79,\n  Delta = 80,\n  Deriv = 81,\n  Exp = 82,\n  Floor = 83,\n  HistogramQuantile = 84,\n  HoltWinters = 85,\n  Hour = 86,\n  Idelta = 87,\n  Increase = 88,\n  Irate = 89,\n  LabelReplace = 90,\n  LabelJoin = 91,\n  LastOverTime = 92,\n  Ln = 93,\n  Log10 = 94,\n  Log2 = 95,\n  MaxOverTime = 96,\n  MinOverTime = 97,\n  Minute = 98,\n  Month = 99,\n  Pi = 100,\n  PredictLinear = 101,\n  PresentOverTime = 102,\n  QuantileOverTime = 103,\n  Rad = 104,\n  Rate = 105,\n  Resets = 106,\n  Round = 107,\n  Scalar = 108,\n  Sgn = 109,\n  Sin = 110,\n  Sinh = 111,\n  Sort = 112,\n  SortDesc = 113,\n  Sqrt = 114,\n  StddevOverTime = 115,\n  StdvarOverTime = 116,\n  SumOverTime = 117,\n  Tan = 118,\n  Tanh = 119,\n  Timestamp = 120,\n  Time = 121,\n  Vector = 122,\n  Year = 123,\n  MatrixSelector = 124,\n  Duration = 125,\n  NumberLiteral = 126,\n  OffsetExpr = 127,\n  ParenExpr = 128,\n  StringLiteral = 129,\n  SubqueryExpr = 130,\n  UnaryExpr = 131,\n  UnaryOp = 132,\n  VectorSelector = 133,\n  MetricIdentifier = 134,\n  LabelMatchers = 135,\n  LabelMatchList = 136,\n  LabelMatcher = 137,\n  MatchOp = 138,\n  EqlSingle = 139,\n  EqlRegex = 140,\n  NeqRegex = 141,\n  StepInvariantExpr = 142,\n  At = 143,\n  AtModifierPreprocessors = 144,\n  MetricName = 145;\n\nexport { Abs, Absent, AbsentOverTime, Acos, Acosh, Add, AggregateExpr, AggregateModifier, AggregateOp, And, Asin, Asinh, At, AtModifierPreprocessors, Atan, Atan2, Atanh, Avg, AvgOverTime, BinModifiers, BinaryExpr, Bool, Bottomk, By, Ceil, Changes, Clamp, ClampMax, ClampMin, Cos, Cosh, Count, CountOverTime, CountValues, DayOfMonth, DayOfWeek, DayOfYear, DaysInMonth, Deg, Delta, Deriv, Div, Duration, End, Eql, EqlRegex, EqlSingle, Exp, Expr, Floor, FunctionCall, FunctionCallArgs, FunctionCallBody, FunctionIdentifier, Group, GroupLeft, GroupRight, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, HistogramQuantile, HoltWinters, Hour, Idelta, Identifier, Ignoring, Increase, Irate, LabelJoin, LabelMatchList, LabelMatcher, LabelMatchers, LabelName, LabelReplace, LastOverTime, LineComment, Ln, Log10, Log2, Lss, Lte, MatchOp, MatrixSelector, Max, MaxOverTime, MetricIdentifier, MetricName, Min, MinOverTime, Minute, Mod, Month, Mul, Neq, NeqRegex, NumberLiteral, Offset, OffsetExpr, On, OnOrIgnoring, Or, ParenExpr, Pi, Pow, PredictLinear, PresentOverTime, PromQL, Quantile, QuantileOverTime, Rad, Rate, Resets, Round, Scalar, Sgn, Sin, Sinh, Sort, SortDesc, Sqrt, Start, Stddev, StddevOverTime, Stdvar, StdvarOverTime, StepInvariantExpr, StringLiteral, Sub, SubqueryExpr, Sum, SumOverTime, Tan, Tanh, Time, Timestamp, Topk, UnaryExpr, UnaryOp, Unless, Vector, VectorSelector, Without, Year, inf, nan, parser };\n","const perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst hasAbortController = typeof AbortController === 'function'\n\n// minimal backwards-compatibility polyfill\n// this doesn't have nearly all the checks and whatnot that\n// actual AbortController/Signal has, but it's enough for\n// our purposes, and if used properly, behaves the same.\nconst AC = hasAbortController\n  ? AbortController\n  : class AbortController {\n      constructor() {\n        this.signal = new AS()\n      }\n      abort(reason = new Error('This operation was aborted')) {\n        this.signal.reason = reason\n        this.signal.dispatchEvent({\n          type: 'abort',\n          target: this.signal,\n        })\n      }\n    }\n\nconst hasAbortSignal = typeof AbortSignal === 'function'\n// Some polyfills put this on the AC class, not global\nconst hasACAbortSignal = typeof AC.AbortSignal === 'function'\nconst AS = hasAbortSignal\n  ? AbortSignal\n  : hasACAbortSignal\n  ? AC.AbortController\n  : class AbortSignal {\n      constructor() {\n        this.reason = undefined\n        this.aborted = false\n        this._listeners = []\n      }\n      dispatchEvent(e) {\n        if (e.type === 'abort') {\n          this.aborted = true\n          this.onabort(e)\n          this._listeners.forEach(f => f(e), this)\n        }\n      }\n      onabort() {}\n      addEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners.push(fn)\n        }\n      }\n      removeEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners = this._listeners.filter(f => f !== fn)\n        }\n      }\n    }\n\nconst warned = new Set()\nconst deprecatedOption = (opt, instead) => {\n  const code = `LRU_CACHE_OPTION_${opt}`\n  if (shouldWarn(code)) {\n    warn(code, `${opt} option`, `options.${instead}`, LRUCache)\n  }\n}\nconst deprecatedMethod = (method, instead) => {\n  const code = `LRU_CACHE_METHOD_${method}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, method)\n    warn(code, `${method} method`, `cache.${instead}()`, get)\n  }\n}\nconst deprecatedProperty = (field, instead) => {\n  const code = `LRU_CACHE_PROPERTY_${field}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, field)\n    warn(code, `${field} property`, `cache.${instead}`, get)\n  }\n}\n\nconst emitWarning = (...a) => {\n  typeof process === 'object' &&\n  process &&\n  typeof process.emitWarning === 'function'\n    ? process.emitWarning(...a)\n    : console.error(...a)\n}\n\nconst shouldWarn = code => !warned.has(code)\n\nconst warn = (code, what, instead, fn) => {\n  warned.add(code)\n  const msg = `The ${what} is deprecated. Please use ${instead} instead.`\n  emitWarning(msg, 'DeprecationWarning', code, fn)\n}\n\nconst isPosInt = n => n && n === Math.floor(n) && n > 0 && isFinite(n)\n\n/* istanbul ignore next - This is a little bit ridiculous, tbh.\n * The maximum array length is 2^32-1 or thereabouts on most JS impls.\n * And well before that point, you're caching the entire world, I mean,\n * that's ~32GB of just integers for the next/prev links, plus whatever\n * else to hold that many keys and values.  Just filling the memory with\n * zeroes at init time is brutal when you get that big.\n * But why not be complete?\n * Maybe in the future, these limits will have expanded. */\nconst getUintArray = max =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n\nclass ZeroArray extends Array {\n  constructor(size) {\n    super(size)\n    this.fill(0)\n  }\n}\n\nclass Stack {\n  constructor(max) {\n    if (max === 0) {\n      return []\n    }\n    const UintArray = getUintArray(max)\n    this.heap = new UintArray(max)\n    this.length = 0\n  }\n  push(n) {\n    this.heap[this.length++] = n\n  }\n  pop() {\n    return this.heap[--this.length]\n  }\n}\n\nclass LRUCache {\n  constructor(options = {}) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      fetchContext,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    // deprecated options, don't trigger a warning for getting them if\n    // the thing being passed in is another LRUCache we're copying.\n    const { length, maxAge, stale } =\n      options instanceof LRUCache ? {} : options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.max = max\n    this.maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.maxSize\n    this.sizeCalculation = sizeCalculation || length\n    if (this.sizeCalculation) {\n      if (!this.maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    this.fetchMethod = fetchMethod || null\n    if (this.fetchMethod && typeof this.fetchMethod !== 'function') {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n\n    this.fetchContext = fetchContext\n    if (!this.fetchMethod && fetchContext !== undefined) {\n      throw new TypeError(\n        'cannot set fetchContext without fetchMethod'\n      )\n    }\n\n    this.keyMap = new Map()\n    this.keyList = new Array(max).fill(null)\n    this.valList = new Array(max).fill(null)\n    this.next = new UintArray(max)\n    this.prev = new UintArray(max)\n    this.head = 0\n    this.tail = 0\n    this.free = new Stack(max)\n    this.initialFill = 1\n    this.size = 0\n\n    if (typeof dispose === 'function') {\n      this.dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.disposeAfter = disposeAfter\n      this.disposed = []\n    } else {\n      this.disposeAfter = null\n      this.disposed = null\n    }\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.maxSize !== 0) {\n        if (!isPosInt(this.maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale || !!stale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || maxAge || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.max && !this.maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n\n    if (stale) {\n      deprecatedOption('stale', 'allowStale')\n    }\n    if (maxAge) {\n      deprecatedOption('maxAge', 'ttl')\n    }\n    if (length) {\n      deprecatedOption('length', 'sizeCalculation')\n    }\n  }\n\n  getRemainingTTL(key) {\n    return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0\n  }\n\n  initializeTTLTracking() {\n    this.ttls = new ZeroArray(this.max)\n    this.starts = new ZeroArray(this.max)\n\n    this.setItemTTL = (index, ttl, start = perf.now()) => {\n      this.starts[index] = ttl !== 0 ? start : 0\n      this.ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.isStale(index)) {\n            this.delete(this.keyList[index])\n          }\n        }, ttl + 1)\n        /* istanbul ignore else - unref() not supported on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n    }\n\n    this.updateItemAge = index => {\n      this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        /* istanbul ignore else - not available on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      return this.ttls[index] === 0 || this.starts[index] === 0\n        ? Infinity\n        : this.starts[index] +\n            this.ttls[index] -\n            (cachedNow || getNow())\n    }\n\n    this.isStale = index => {\n      return (\n        this.ttls[index] !== 0 &&\n        this.starts[index] !== 0 &&\n        (cachedNow || getNow()) - this.starts[index] >\n          this.ttls[index]\n      )\n    }\n  }\n  updateItemAge(_index) {}\n  setItemTTL(_index, _ttl, _start) {}\n  isStale(_index) {\n    return false\n  }\n\n  initializeSizeTracking() {\n    this.calculatedSize = 0\n    this.sizes = new ZeroArray(this.max)\n    this.removeItemSize = index => {\n      this.calculatedSize -= this.sizes[index]\n      this.sizes[index] = 0\n    }\n    this.requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation or size ' +\n              'must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.addItemSize = (index, size) => {\n      this.sizes[index] = size\n      if (this.maxSize) {\n        const maxSize = this.maxSize - this.sizes[index]\n        while (this.calculatedSize > maxSize) {\n          this.evict(true)\n        }\n      }\n      this.calculatedSize += this.sizes[index]\n    }\n  }\n  removeItemSize(_index) {}\n  addItemSize(_index, _size) {}\n  requireSize(_k, _v, size, sizeCalculation) {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n  }\n\n  *indexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.tail; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.head) {\n          break\n        } else {\n          i = this.prev[i]\n        }\n      }\n    }\n  }\n\n  *rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.head; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.tail) {\n          break\n        } else {\n          i = this.next[i]\n        }\n      }\n    }\n  }\n\n  isValidIndex(index) {\n    return this.keyMap.get(this.keyList[index]) === index\n  }\n\n  *entries() {\n    for (const i of this.indexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield [this.keyList[i], this.valList[i]]\n      }\n    }\n  }\n  *rentries() {\n    for (const i of this.rindexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield [this.keyList[i], this.valList[i]]\n      }\n    }\n  }\n\n  *keys() {\n    for (const i of this.indexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield this.keyList[i]\n      }\n    }\n  }\n  *rkeys() {\n    for (const i of this.rindexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield this.keyList[i]\n      }\n    }\n  }\n\n  *values() {\n    for (const i of this.indexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield this.valList[i]\n      }\n    }\n  }\n  *rvalues() {\n    for (const i of this.rindexes()) {\n      if (!this.isBackgroundFetch(this.valList[i])) {\n        yield this.valList[i]\n      }\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  find(fn, getOptions = {}) {\n    for (const i of this.indexes()) {\n      if (fn(this.valList[i], this.keyList[i], this)) {\n        return this.get(this.keyList[i], getOptions)\n      }\n    }\n  }\n\n  forEach(fn, thisp = this) {\n    for (const i of this.indexes()) {\n      fn.call(thisp, this.valList[i], this.keyList[i], this)\n    }\n  }\n\n  rforEach(fn, thisp = this) {\n    for (const i of this.rindexes()) {\n      fn.call(thisp, this.valList[i], this.keyList[i], this)\n    }\n  }\n\n  get prune() {\n    deprecatedMethod('prune', 'purgeStale')\n    return this.purgeStale\n  }\n\n  purgeStale() {\n    let deleted = false\n    for (const i of this.rindexes({ allowStale: true })) {\n      if (this.isStale(i)) {\n        this.delete(this.keyList[i])\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  dump() {\n    const arr = []\n    for (const i of this.indexes({ allowStale: true })) {\n      const key = this.keyList[i]\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      const entry = { value }\n      if (this.ttls) {\n        entry.ttl = this.ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.sizes) {\n        entry.size = this.sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  load(arr) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset.\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  dispose(_v, _k, _reason) {}\n\n  set(\n    k,\n    v,\n    {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n    } = {}\n  ) {\n    size = this.requireSize(k, v, size, sizeCalculation)\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      // have to delete, in case a background fetch is there already.\n      // in non-async cases, this is a no-op\n      this.delete(k)\n      return this\n    }\n    let index = this.size === 0 ? undefined : this.keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = this.newIndex()\n      this.keyList[index] = k\n      this.valList[index] = v\n      this.keyMap.set(k, index)\n      this.next[this.tail] = index\n      this.prev[index] = this.tail\n      this.tail = index\n      this.size++\n      this.addItemSize(index, size)\n      noUpdateTTL = false\n    } else {\n      // update\n      this.moveToTail(index)\n      const oldVal = this.valList[index]\n      if (v !== oldVal) {\n        if (this.isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n        } else {\n          if (!noDisposeOnSet) {\n            this.dispose(oldVal, k, 'set')\n            if (this.disposeAfter) {\n              this.disposed.push([oldVal, k, 'set'])\n            }\n          }\n        }\n        this.removeItemSize(index)\n        this.valList[index] = v\n        this.addItemSize(index, size)\n      }\n    }\n    if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\n      this.initializeTTLTracking()\n    }\n    if (!noUpdateTTL) {\n      this.setItemTTL(index, ttl, start)\n    }\n    if (this.disposeAfter) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return this\n  }\n\n  newIndex() {\n    if (this.size === 0) {\n      return this.tail\n    }\n    if (this.size === this.max && this.max !== 0) {\n      return this.evict(false)\n    }\n    if (this.free.length !== 0) {\n      return this.free.pop()\n    }\n    // initial fill, just keep writing down the list\n    return this.initialFill++\n  }\n\n  pop() {\n    if (this.size) {\n      const val = this.valList[this.head]\n      this.evict(true)\n      return val\n    }\n  }\n\n  evict(free) {\n    const head = this.head\n    const k = this.keyList[head]\n    const v = this.valList[head]\n    if (this.isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else {\n      this.dispose(v, k, 'evict')\n      if (this.disposeAfter) {\n        this.disposed.push([v, k, 'evict'])\n      }\n    }\n    this.removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.keyList[head] = null\n      this.valList[head] = null\n      this.free.push(head)\n    }\n    this.head = this.next[head]\n    this.keyMap.delete(k)\n    this.size--\n    return head\n  }\n\n  has(k, { updateAgeOnHas = this.updateAgeOnHas } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      if (!this.isStale(index)) {\n        if (updateAgeOnHas) {\n          this.updateItemAge(index)\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  // like get(), but without any LRU updating or TTL expiration\n  peek(k, { allowStale = this.allowStale } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined && (allowStale || !this.isStale(index))) {\n      const v = this.valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  backgroundFetch(k, index, options, context) {\n    const v = index === undefined ? undefined : this.valList[index]\n    if (this.isBackgroundFetch(v)) {\n      return v\n    }\n    const ac = new AC()\n    if (options.signal) {\n      options.signal.addEventListener('abort', () =>\n        ac.abort(options.signal.reason)\n      )\n    }\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n    const cb = (v, updateCache = false) => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (aborted && !ignoreAbort && !updateCache) {\n        return eb(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      if (this.valList[index] === p) {\n        if (v === undefined) {\n          if (p.__staleWhileFetching) {\n            this.valList[index] = p.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n    const eb = er => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      if (this.valList[index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || p.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.valList[index] = p.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        return p.__staleWhileFetching\n      } else if (p.__returned === p) {\n        throw er\n      }\n    }\n    const pcall = (res, rej) => {\n      this.fetchMethod(k, v, fetchOpts).then(v => res(v), rej)\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res()\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n    const p = new Promise(pcall).then(cb, eb)\n    p.__abortController = ac\n    p.__staleWhileFetching = v\n    p.__returned = null\n    if (index === undefined) {\n      this.set(k, p, fetchOpts.options)\n      index = this.keyMap.get(k)\n    } else {\n      this.valList[index] = p\n    }\n    return p\n  }\n\n  isBackgroundFetch(p) {\n    return (\n      p &&\n      typeof p === 'object' &&\n      typeof p.then === 'function' &&\n      Object.prototype.hasOwnProperty.call(\n        p,\n        '__staleWhileFetching'\n      ) &&\n      Object.prototype.hasOwnProperty.call(p, '__returned') &&\n      (p.__returned === p || p.__returned === null)\n    )\n  }\n\n  // this takes the union of get() and set() opts, because it does both\n  async fetch(\n    k,\n    {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      fetchContext = this.fetchContext,\n      forceRefresh = false,\n      signal,\n    } = {}\n  ) {\n    if (!this.fetchMethod) {\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      signal,\n    }\n\n    let index = this.keyMap.get(k)\n    if (index === undefined) {\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        return allowStale && v.__staleWhileFetching !== undefined\n          ? v.__staleWhileFetching\n          : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      if (!forceRefresh && !this.isStale(index)) {\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      return allowStale && p.__staleWhileFetching !== undefined\n        ? p.__staleWhileFetching\n        : (p.__returned = p)\n    }\n  }\n\n  get(\n    k,\n    {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n    } = {}\n  ) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.valList[index]\n      const fetching = this.isBackgroundFetch(value)\n      if (this.isStale(index)) {\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          return allowStale ? value : undefined\n        } else {\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching,\n        // so we just return undefined\n        if (fetching) {\n          return undefined\n        }\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        return value\n      }\n    }\n  }\n\n  connect(p, n) {\n    this.prev[n] = p\n    this.next[p] = n\n  }\n\n  moveToTail(index) {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.tail) {\n      if (index === this.head) {\n        this.head = this.next[index]\n      } else {\n        this.connect(this.prev[index], this.next[index])\n      }\n      this.connect(this.tail, index)\n      this.tail = index\n    }\n  }\n\n  get del() {\n    deprecatedMethod('del', 'delete')\n    return this.delete\n  }\n\n  delete(k) {\n    let deleted = false\n    if (this.size !== 0) {\n      const index = this.keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.size === 1) {\n          this.clear()\n        } else {\n          this.removeItemSize(index)\n          const v = this.valList[index]\n          if (this.isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else {\n            this.dispose(v, k, 'delete')\n            if (this.disposeAfter) {\n              this.disposed.push([v, k, 'delete'])\n            }\n          }\n          this.keyMap.delete(k)\n          this.keyList[index] = null\n          this.valList[index] = null\n          if (index === this.tail) {\n            this.tail = this.prev[index]\n          } else if (index === this.head) {\n            this.head = this.next[index]\n          } else {\n            this.next[this.prev[index]] = this.next[index]\n            this.prev[this.next[index]] = this.prev[index]\n          }\n          this.size--\n          this.free.push(index)\n        }\n      }\n    }\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return deleted\n  }\n\n  clear() {\n    for (const index of this.rindexes({ allowStale: true })) {\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.keyList[index]\n        this.dispose(v, k, 'delete')\n        if (this.disposeAfter) {\n          this.disposed.push([v, k, 'delete'])\n        }\n      }\n    }\n\n    this.keyMap.clear()\n    this.valList.fill(null)\n    this.keyList.fill(null)\n    if (this.ttls) {\n      this.ttls.fill(0)\n      this.starts.fill(0)\n    }\n    if (this.sizes) {\n      this.sizes.fill(0)\n    }\n    this.head = 0\n    this.tail = 0\n    this.initialFill = 1\n    this.free.length = 0\n    this.calculatedSize = 0\n    this.size = 0\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n  }\n\n  get reset() {\n    deprecatedMethod('reset', 'clear')\n    return this.clear\n  }\n\n  get length() {\n    deprecatedProperty('length', 'size')\n    return this.size\n  }\n\n  static get AbortController() {\n    return AC\n  }\n  static get AbortSignal() {\n    return AS\n  }\n}\n\nexport default LRUCache\n"],"names":["addLabelToQuery","query","key","value","operator","vectorSelectorPositions","getVectorSelectorPositions","filter","toLabelFilter","addFilter","tree","positions","to","from","type","visQuery","transformedValue","modeller","newQuery","prev","i","match","isLast","start","end","labelExists","newLabels","labels","label","DEFAULT_KEYS","EMPTY_SELECTOR","HISTORY_ITEM_COUNT","HISTORY_COUNT_CUTOFF","SUGGESTIONS_LIMIT","wrapLabel","setFunctionKind","suggestion","buildCacheHeaders","durationInSeconds","addHistoryMetadata","item","history","cutoffTs","historyForItem","h","count","recent","hint","lastQueried","addMetricsMetadata","metric","metadata","getMetadataString","help","getMetadataHelp","getMetadataType","PREFIX_DELIMITER_REGEX","secondsInDay","PromQlLanguageProvider","datasource","initialValues","url","defaultValue","params","options","error","prefix","text","labelKey","wrapperClasses","context","emptyResult","empty","selectedLines","currentLine","nextCharacter","tokenRecognized","prefixUnrecognized","noSuffix","safePrefix","operatorsPattern","isNextOperand","suggestions","historyItems","metrics","metricsMetadata","m","queryOffset","queryText","block","blockText","openParensAggregationIndex","openParensSelectorIndex","closeParensSelectorIndex","closeParensAggregationIndex","result","selectorString","selector","series","labelKeys","limitInfo","line","cursorOffset","suffix","isValueStart","isValueEnd","isPreValue","parsedSelector","containsMetric","existingKeys","possibleKeys","newItems","newSuggestion","labelName","name","interpolatedName","range","urlParams","otherLabels","possibleLabelNames","data","usedLabelNames","l","withName","values","ac","a","acc","s","headers","labelBasedQuery","promQuery","tokens","labelMatchers","nameLabelValue","getNameLabelValue","res","cacheKey","cacheParams","prop","processHistogramMetrics","resultSet","regexp","index","processLabels","valueSet","__name__","rest","valueArray","limitSuggestions","selectorRegexp","labelRegexp","parseSelector","prefixOpen","prefixClose","suffixClose","suffixOpenIndex","suffixOpen","labelOffset","valueStart","valueEnd","metricMatch","expandRecordingRules","mapping","ruleNames","rulesRegex","queryArray","pre","post","invalidLabelsRegex","addLabelsToExpression","expr","invalidLabelsRegexp","indexOfRegexMatch","exprBeforeRegexMatch","exprAfterRegexMatch","arrayOfLabelObjects","obj","fixSummariesMetadata","baseMetadata","summaryMetadata","syntheticMetadata","roundMsToMin","milliseconds","roundSecToMin","seconds","roundSecToNextMin","secondsToRound","items","addLimitInfo","RE2_METACHARACTERS","escapePrometheusRegexp","escapeLabelValueInExactSelector","labelValue","escapeLabelValueInRegexSelector","FromPromLikeMap","ToPromLikeMap","toPromLikeExpr","e","toPromLikeQuery","extractLabelMatchers","token","labelOperator","contentTokens","currentToken","currentStr","labelComparator","getRangeSnapInterval","cacheLevel","getPrometheusTime","startTime","startTimeQuantizedSeconds","getClientCacheDurationInMinutes","endTime","endTimeQuantizedSeconds","endTimePlusOneStep","date","roundUp","getOperationDefinitions","createRangeFunction","createFunction","addOperationWithRangeVector","operationTypeChangedHandlerForRangeFunction","binaryScalarOperations","model","def","innerExpr","addNestedQueryHandler","LabelParamEditor","labelJoinRenderer","labelJoinAddOperationHandler","definition","withRateInterval","operationWithRangeVectorRenderer","operation","newDef","rangeVector","newOperation","separator","getAggregationOperations","createAggregationOverTime","PromQueryModeller","LokiAndPromQueryModellerBase","allOperations","op","func","x","promQueryModeller","binaryScalarDefs","binaryScalarOperatorToOperatorName","opDef","defaultParams","getSimpleBinaryRenderer","param","bool","onChange","operationIndex","state","setState","loadGroupByLabels","buildVisualQueryFromString","replacedExpr","node","handleExpression","err","isEmptyQuery","isValidPromQLMinusGrafanaGlobalVariables","getLabel","handleFunction","handleAggregation","handleBinary","isIntervalVariableError","child","rangeFunctions","nameNode","funcName","callArgs","interval","updateFunctionArgs","modifier","left","binModifier","getBinaryModifier","right","leftNumber","rightNumber","rightBinary","leftMostChild","binQuery","matcher","getOperations","categories","category","id","queryString","operations","binaryQueries","leftOperand","binaryQuery","nested","functionRendererLeft","renderParams","str","functionRendererRight","rangeRendererWithParams","renderLeft","rangeRendererRightWithParams","rangeRendererLeftWithParams","defaultAddOperationHandler","getPromAndLokiOperationDisplayName","getOperationParamId","paramIndex","getRangeVectorParamDef","createAggregationOperation","overrides","getOnLabelAddedHandler","getAggregationExplainer","getAggregationByRenderer","getLastLabelRemovedHandler","getAggregationWithoutRenderer","createAggregationOperationWithParam","paramsDef","getAggregationByRendererWithParameter","aggregation","aggregationName","mode","labelWord","restParamIndex","restParams","idx","changeToOperationId","isConflictingSelector","newLabel","operationIsNegative","candidate","ErrorId","getLeftMostChild","cur","makeError","getString","variableRegex","replaceVariables","var1","var2","fmt2","var3","fieldPath","fmt3","fmt","variable","varType","varTypeFunc","v","f","returnVariables","makeBinOp","numberNode","hasBool","getAllByType","pos","log","json","toJson","jsonToText","treeJson","nodeToString","children","lastChild","indent","isLastChild","regexifyLabelValuesQueryString","PromVisualQueryOperationCategory","PromOperationId","PromQueryPatternType","PrometheusCacheLevel","isMatrixData","isExemplarData","LegendFormatMode","PromVariableQueryType","nextTagID","Tag","set","base","modified","parent","tag","t","mod","Modifier","b","nextModifierID","mods","exists","sameArray","configs","powerSet","config","array","sets","j","styleTags","spec","byName","tags","part","pieces","next","last","inner","rule","Rule","ruleNodeProp","other","tagHighlighter","map","style","scope","all","cls","sub","tagClass","highlightTags","highlighters","highlighter","highlightTree","putStyle","builder","HighlightBuilder","at","span","cursor","inheritedClass","getStyleTags","tagCls","mounted","innerHighlighters","hasChild","nextPos","rangeFrom","rangeTo","comment","typeName","propertyName","literal","string","number","content","heading","keyword","punctuation","bracket","meta","classHighlighter","inf$1","nan$1","Bool$1","Ignoring$1","On$1","GroupLeft$1","GroupRight$1","Offset$1","Atan2$1","Avg$1","Bottomk$1","Count$1","CountValues$1","Group$1","Max$1","Min$1","Quantile$1","Stddev$1","Stdvar$1","Sum$1","Topk$1","By$1","Without$1","And$1","Or$1","Unless$1","Start$1","End$1","keywordTokens","specializeIdentifier","stack","contextualKeywordTokens","extendIdentifier","promQLHighLight","spec_Identifier","parser","inf","nan","Bool","Ignoring","On","GroupLeft","GroupRight","Offset","Atan2","Avg","Bottomk","Count","CountValues","Group","Max","Min","Quantile","Stddev","Stdvar","Sum","Topk","By","Without","And","Or","Unless","Start","End","LineComment","PromQL","Expr","AggregateExpr","AggregateOp","AggregateModifier","GroupingLabels","GroupingLabelList","GroupingLabel","LabelName","FunctionCallBody","FunctionCallArgs","BinaryExpr","Pow","BinModifiers","OnOrIgnoring","Mul","Div","Mod","Add","Sub","Eql","Gte","Gtr","Lte","Lss","Neq","FunctionCall","FunctionIdentifier","AbsentOverTime","Identifier","Absent","Abs","Acos","Acosh","Asin","Asinh","Atan","Atanh","AvgOverTime","Ceil","Changes","Clamp","ClampMax","ClampMin","Cos","Cosh","CountOverTime","DaysInMonth","DayOfMonth","DayOfWeek","DayOfYear","Deg","Delta","Deriv","Exp","Floor","HistogramQuantile","HoltWinters","Hour","Idelta","Increase","Irate","LabelReplace","LabelJoin","LastOverTime","Ln","Log10","Log2","MaxOverTime","MinOverTime","Minute","Month","Pi","PredictLinear","PresentOverTime","QuantileOverTime","Rad","Rate","Resets","Round","Scalar","Sgn","Sin","Sinh","Sort","SortDesc","Sqrt","StddevOverTime","StdvarOverTime","SumOverTime","Tan","Tanh","Timestamp","Time","Vector","Year","MatrixSelector","Duration","NumberLiteral","OffsetExpr","ParenExpr","StringLiteral","SubqueryExpr","UnaryExpr","UnaryOp","VectorSelector","MetricIdentifier","LabelMatchers","LabelMatchList","LabelMatcher","MatchOp","EqlSingle","EqlRegex","NeqRegex","StepInvariantExpr","At","AtModifierPreprocessors","MetricName","perf","AC","AS","reason","hasAbortSignal","hasACAbortSignal","ev","fn","warned","deprecatedOption","opt","instead","code","shouldWarn","warn","LRUCache","deprecatedMethod","method","prototype","get","deprecatedProperty","field","emitWarning","what","msg","isPosInt","n","getUintArray","max","ZeroArray","size","Stack","UintArray","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","dispose","disposeAfter","noDisposeOnSet","noUpdateTTL","maxSize","maxEntrySize","sizeCalculation","fetchMethod","fetchContext","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchRejection","allowStaleOnFetchAbort","ignoreFetchAbort","length","maxAge","stale","cachedNow","getNow","_index","_ttl","_start","k","_size","_k","_v","getOptions","thisp","deleted","arr","entry","age","_reason","oldVal","val","free","head","fetchOpts","cb","updateCache","aborted","ignoreAbort","eb","p","er","allowStaleAborted","noDelete","pcall","rej","forceRefresh","signal","fetching"],"sourceRoot":""}