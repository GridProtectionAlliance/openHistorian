{"version":3,"sources":["webpack:///./public/app/features/users/UsersTable.tsx","webpack:///./public/app/features/users/InviteeRow.tsx","webpack:///./public/app/features/users/InviteesTable.tsx","webpack:///./public/app/features/users/UsersListPage.tsx","webpack:///./public/app/features/users/state/selectors.ts","webpack:///./public/app/features/users/state/actions.ts","webpack:///./public/app/features/users/UsersActionBar.tsx"],"names":["UsersTable","props","users","onRoleChange","onRemoveUser","useState","showRemoveModal","setShowRemoveModal","className","style","width","map","user","index","key","userId","src","avatarUrl","title","login","email","name","lastSeenAtAge","value","role","onChange","newRole","size","variant","onClick","icon","body","confirmText","onDismiss","isOpen","onConfirm","InviteeRow","this","invitee","revokeInvite","getText","url","code","PureComponent","mapDispatchToProps","connect","InviteesTable","invitees","id","UsersListPage","updatedUser","updateUser","onShowInvites","setState","prevState","showInvites","externalUserMngInfo","externalUserMngInfoHtml","renderMarkdown","state","fetchUsers","fetchInvitees","loadUsers","loadInvitees","removeUser","navModel","hasFetched","Contents","isLoading","dangerouslySetInnerHTML","__html","renderTable","setUsersSearchQuery","hot","module","getNavModel","navIndex","getUsers","searchQuery","getUsersSearchQuery","getInvitees","regex","RegExp","filter","test","getInviteesCount","length","dispatch","getBackendSrv","get","usersLoaded","inviteesLoaded","patch","delete","UsersActionBar","canInvite","externalUserMngLinkName","externalUserMngLinkUrl","pendingInvitesCount","options","label","labelClassName","inputClassName","placeholder","marginLeft","href","target","rel"],"mappings":"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","file":"UsersListPage.591ee81e63053ad31983.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { OrgUser } from 'app/types';\nimport { OrgRolePicker } from '../admin/OrgRolePicker';\nimport { Button, ConfirmModal } from '@grafana/ui';\nimport { OrgRole } from '@grafana/data';\n\nexport interface Props {\n  users: OrgUser[];\n  onRoleChange: (role: OrgRole, user: OrgUser) => void;\n  onRemoveUser: (user: OrgUser) => void;\n}\n\nconst UsersTable: FC<Props> = props => {\n  const { users, onRoleChange, onRemoveUser } = props;\n\n  const [showRemoveModal, setShowRemoveModal] = useState<string | boolean>(false);\n  return (\n    <table className=\"filter-table form-inline\">\n      <thead>\n        <tr>\n          <th />\n          <th>Login</th>\n          <th>Email</th>\n          <th>Name</th>\n          <th>Seen</th>\n          <th>Role</th>\n          <th style={{ width: '34px' }} />\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user, index) => {\n          return (\n            <tr key={`${user.userId}-${index}`}>\n              <td className=\"width-2 text-center\">\n                <img className=\"filter-table__avatar\" src={user.avatarUrl} />\n              </td>\n              <td className=\"max-width-6\">\n                <span className=\"ellipsis\" title={user.login}>\n                  {user.login}\n                </span>\n              </td>\n\n              <td className=\"max-width-5\">\n                <span className=\"ellipsis\" title={user.email}>\n                  {user.email}\n                </span>\n              </td>\n              <td className=\"max-width-5\">\n                <span className=\"ellipsis\" title={user.name}>\n                  {user.name}\n                </span>\n              </td>\n              <td className=\"width-1\">{user.lastSeenAtAge}</td>\n\n              <td className=\"width-8\">\n                <OrgRolePicker value={user.role} onChange={newRole => onRoleChange(newRole, user)} />\n              </td>\n\n              <td>\n                <Button size=\"sm\" variant=\"destructive\" onClick={() => setShowRemoveModal(user.login)} icon=\"times\" />\n                <ConfirmModal\n                  body={`Are you sure you want to delete user ${user.login}?`}\n                  confirmText=\"Delete\"\n                  title=\"Delete\"\n                  onDismiss={() => setShowRemoveModal(false)}\n                  isOpen={user.login === showRemoveModal}\n                  onConfirm={() => {\n                    onRemoveUser(user);\n                  }}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UsersTable;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Invitee } from 'app/types';\nimport { revokeInvite } from './state/actions';\nimport { Button, ClipboardButton } from '@grafana/ui';\n\nexport interface Props {\n  invitee: Invitee;\n  revokeInvite: typeof revokeInvite;\n}\n\nclass InviteeRow extends PureComponent<Props> {\n  render() {\n    const { invitee, revokeInvite } = this.props;\n    return (\n      <tr>\n        <td>{invitee.email}</td>\n        <td>{invitee.name}</td>\n        <td className=\"text-right\">\n          <ClipboardButton variant=\"secondary\" size=\"sm\" getText={() => invitee.url}>\n            Copy Invite\n          </ClipboardButton>\n          &nbsp;\n        </td>\n        <td>\n          <Button variant=\"destructive\" size=\"sm\" icon=\"times\" onClick={() => revokeInvite(invitee.code)} />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  revokeInvite,\n};\n\nexport default connect(() => {\n  return {};\n}, mapDispatchToProps)(InviteeRow);\n","import React, { PureComponent } from 'react';\nimport { Invitee } from 'app/types';\nimport InviteeRow from './InviteeRow';\n\nexport interface Props {\n  invitees: Invitee[];\n}\n\nexport default class InviteesTable extends PureComponent<Props> {\n  render() {\n    const { invitees } = this.props;\n\n    return (\n      <table className=\"filter-table form-inline\">\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Name</th>\n            <th />\n            <th style={{ width: '34px' }} />\n          </tr>\n        </thead>\n        <tbody>\n          {invitees.map((invitee, index) => {\n            return <InviteeRow key={`${invitee.id}-${index}`} invitee={invitee} />;\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { NavModel, renderMarkdown } from '@grafana/data';\n\nimport Page from 'app/core/components/Page/Page';\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport InviteesTable from './InviteesTable';\nimport { Invitee, OrgUser, OrgRole } from 'app/types';\nimport { loadInvitees, loadUsers, removeUser, updateUser } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getInvitees, getUsers, getUsersSearchQuery } from './state/selectors';\nimport { setUsersSearchQuery } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  invitees: Invitee[];\n  users: OrgUser[];\n  searchQuery: string;\n  externalUserMngInfo: string;\n  hasFetched: boolean;\n  loadUsers: typeof loadUsers;\n  loadInvitees: typeof loadInvitees;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  updateUser: typeof updateUser;\n  removeUser: typeof removeUser;\n}\n\nexport interface State {\n  showInvites: boolean;\n}\n\nexport class UsersListPage extends PureComponent<Props, State> {\n  externalUserMngInfoHtml: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.loadInvitees();\n  }\n\n  onRoleChange = (role: OrgRole, user: OrgUser) => {\n    const updatedUser = { ...user, role: role };\n\n    this.props.updateUser(updatedUser);\n  };\n\n  onShowInvites = () => {\n    this.setState(prevState => ({\n      showInvites: !prevState.showInvites,\n    }));\n  };\n\n  renderTable() {\n    const { invitees, users } = this.props;\n\n    if (this.state.showInvites) {\n      return <InviteesTable invitees={invitees} />;\n    } else {\n      return (\n        <UsersTable\n          users={users}\n          onRoleChange={(role, user) => this.onRoleChange(role, user)}\n          onRemoveUser={user => this.props.removeUser(user.userId)}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { navModel, hasFetched } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>\n          <>\n            <UsersActionBar onShowInvites={this.onShowInvites} showInvites={this.state.showInvites} />\n            {externalUserMngInfoHtml && (\n              <div className=\"grafana-info-box\" dangerouslySetInnerHTML={{ __html: externalUserMngInfoHtml }} />\n            )}\n            {hasFetched && this.renderTable()}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    invitees: getInvitees(state.users),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadInvitees,\n  setUsersSearchQuery,\n  updateUser,\n  removeUser,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(UsersListPage));\n","import { UsersState } from 'app/types';\n\nexport const getUsers = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.users.filter(user => {\n    return regex.test(user.login) || regex.test(user.email) || regex.test(user.name);\n  });\n};\n\nexport const getInvitees = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.invitees.filter(invitee => {\n    return regex.test(invitee.name) || regex.test(invitee.email);\n  });\n};\n\nexport const getInviteesCount = (state: UsersState) => state.invitees.length;\nexport const getUsersSearchQuery = (state: UsersState) => state.searchQuery;\n","import { ThunkResult } from '../../../types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { OrgUser } from 'app/types';\nimport { inviteesLoaded, usersLoaded } from './reducers';\n\nexport function loadUsers(): ThunkResult<void> {\n  return async dispatch => {\n    const users = await getBackendSrv().get('/api/org/users');\n    dispatch(usersLoaded(users));\n  };\n}\n\nexport function loadInvitees(): ThunkResult<void> {\n  return async dispatch => {\n    const invitees = await getBackendSrv().get('/api/org/invites');\n    dispatch(inviteesLoaded(invitees));\n  };\n}\n\nexport function updateUser(user: OrgUser): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/users/${user.userId}`, { role: user.role });\n    dispatch(loadUsers());\n  };\n}\n\nexport function removeUser(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/org/users/${userId}`);\n    dispatch(loadUsers());\n  };\n}\n\nexport function revokeInvite(code: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/invites/${code}/revoke`, {});\n    dispatch(loadInvitees());\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { setUsersSearchQuery } from './state/reducers';\nimport { getInviteesCount, getUsersSearchQuery } from './state/selectors';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { RadioButtonGroup, LinkButton } from '@grafana/ui';\n\nexport interface Props {\n  searchQuery: string;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  onShowInvites: () => void;\n  pendingInvitesCount: number;\n  canInvite: boolean;\n  showInvites: boolean;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n}\n\nexport class UsersActionBar extends PureComponent<Props> {\n  render() {\n    const {\n      canInvite,\n      externalUserMngLinkName,\n      externalUserMngLinkUrl,\n      searchQuery,\n      pendingInvitesCount,\n      setUsersSearchQuery,\n      onShowInvites,\n      showInvites,\n    } = this.props;\n    const options = [\n      { label: 'Users', value: 'users' },\n      { label: `Pending Invites (${pendingInvitesCount})`, value: 'invites' },\n    ];\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput\n            labelClassName=\"gf-form--has-input-icon\"\n            inputClassName=\"gf-form-input width-20\"\n            value={searchQuery}\n            onChange={setUsersSearchQuery}\n            placeholder=\"Search user by login, email or name\"\n          />\n          {pendingInvitesCount > 0 && (\n            <div style={{ marginLeft: '1rem' }}>\n              <RadioButtonGroup value={showInvites ? 'invites' : 'users'} options={options} onChange={onShowInvites} />\n            </div>\n          )}\n          <div className=\"page-action-bar__spacer\" />\n          {canInvite && <LinkButton href=\"org/users/invite\">Invite</LinkButton>}\n          {externalUserMngLinkUrl && (\n            <LinkButton href={externalUserMngLinkUrl} target=\"_blank\" rel=\"noopener\">\n              {externalUserMngLinkName}\n            </LinkButton>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchQuery: getUsersSearchQuery(state.users),\n    pendingInvitesCount: getInviteesCount(state.users),\n    externalUserMngLinkName: state.users.externalUserMngLinkName,\n    externalUserMngLinkUrl: state.users.externalUserMngLinkUrl,\n    canInvite: state.users.canInvite,\n  };\n}\n\nconst mapDispatchToProps = {\n  setUsersSearchQuery,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersActionBar);\n"],"sourceRoot":""}