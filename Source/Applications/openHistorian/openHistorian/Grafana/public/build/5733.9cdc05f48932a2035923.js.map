{"version":3,"file":"5733.9cdc05f48932a2035923.js","mappings":"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","sources":["webpack://grafana/../../opt/drone/yarncache/monaco-editor-npm-0.34.0-2a8aa5269e-10a28c1fe0.zip/node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  keywords: [\n    \"asInstanceOf\",\n    \"catch\",\n    \"class\",\n    \"classOf\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"forSome\",\n    \"if\",\n    \"import\",\n    \"isInstanceOf\",\n    \"macro\",\n    \"match\",\n    \"new\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"until\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"given\",\n    \"enum\",\n    \"then\"\n  ],\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\n    \"abstract\",\n    \"final\",\n    \"implicit\",\n    \"lazy\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"sealed\"\n  ],\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  tokenizer: {\n    root: [\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\n      [\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n        [\"keyword\", \"white\", \"identifier\"]\n      ],\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\n      [\n        /@name/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@softKeywords\": \"keyword\",\n            \"@modifiers\": \"keyword.modifier\",\n            \"@softModifiers\": \"keyword.modifier\",\n            \"@constants\": {\n              token: \"constant\",\n              next: \"@allowMethod\"\n            },\n            \"@default\": {\n              token: \"identifier\",\n              next: \"@allowMethod\"\n            }\n          }\n        }\n      ],\n      [/@type/, \"type\", \"@allowMethod\"],\n      { include: \"@whitespace\" },\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n      [/[{(]/, \"@brackets\"],\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\n      [/\\[/, \"operator.square\"],\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\n      [/]/, \"operator.square\"],\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\n      [/@symbols/, \"operator\"],\n      [/[;,\\.]/, \"delimiter\"],\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\n      [/'/, \"string.invalid\"]\n    ],\n    import: [\n      [/;/, \"delimiter\", \"@pop\"],\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/@name|@type/, \"type\"],\n      [/[(){}]/, \"@brackets\"],\n      [/[[\\]]/, \"operator.square\"],\n      [/[\\.,]/, \"delimiter\"]\n    ],\n    allowMethod: [\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\n      [\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\n          }\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    case: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\n      [/@name/, \"variable\", \"@allowMethod\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      { include: \"@root\" }\n    ],\n    vardef: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\n      [/@name/, \"variable\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\n      [/$/, \"white\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    string: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    stringt: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    fstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    fstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    sstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    sstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\n    rawstring: [\n      [/[^\"]/, \"string\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    rawstringt: [\n      [/[^\"]/, \"string\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","language"],"sourceRoot":""}