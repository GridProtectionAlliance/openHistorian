{"version":3,"file":"7274.190233426b2fdd13caca.js","mappings":"6IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CACR,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACX,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,QAAQ,CAAE,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,QAAQ,CAAE,EAC3C,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,CAC1B,CACF,EACIC,EAAW,CACb,aAAc,GACd,aAAc,MACd,SAAU,CACR,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,EAClD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAI,EACxD,CAAE,MAAO,mBAAoB,KAAM,IAAK,MAAO,GAAI,EACnD,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,CACpD,EACA,SAAU,CACR,MACA,KACA,MACA,MACA,OACA,KACA,QACA,YACA,OACA,SACA,OACA,SACA,OACA,WACA,WACA,OACA,QACA,SACA,OACA,QACA,QACA,SACA,KACA,SACA,QACA,OACA,QACA,OACA,QACA,MACA,SACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,KACA,OACA,QACA,QACA,QACA,SACA,QACA,MACF,EACA,iBAAkB,CAChB,IACA,MACA,MACA,OACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,WACA,MACA,iBACA,SACA,QACA,eACA,QACA,KACA,MACA,UACA,QACA,YACA,YACA,QACA,OACA,cACA,QACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,UACA,QACA,WACA,SACA,UACA,OACA,SACA,SACA,SACA,MACA,WACA,YACA,QACA,UACA,UACA,SACA,YACA,UACA,SACA,MACA,WACA,KACA,QACA,MACA,OACA,MACF,EACA,WAAY,GACZ,UAAW,CACT,KAAM,CACJ,CAAC,mBAAoB,KAAK,EAC1B,CAAE,QAAS,UAAW,EACtB,CAAC,MAAO,SAAS,EACjB,CAAC,aAAc,WAAW,EAC1B,CAAC,QAAS,WAAW,EACrB,CAAC,kFAAmF,KAAK,EACzF,CAAC,0EAA2E,KAAK,EACjF,CACE,gBACA,CACE,MAAO,CACL,YAAa,CAAE,MAAO,SAAU,EAChC,oBAAqB,CAAE,MAAO,gBAAiB,EAC/C,WAAY,YACd,CACF,CACF,EACA,CAAC,OAAQ,cAAc,EACvB,CAAC,sBAAuB,cAAc,EACtC,CAAC,kBAAmB,cAAc,EAClC,CAAC,cAAe,cAAc,EAC9B,CAAC,MAAO,OAAO,CACjB,EACA,QAAS,CACP,CAAC,kBAAmB,gBAAgB,EACpC,CAAC,KAAM,aAAc,MAAM,EAC3B,CAAC,IAAK,aAAc,aAAa,EACjC,CAAC,kBAAmB,gBAAgB,EACpC,CAAC,KAAM,aAAc,MAAM,EAC3B,CAAC,IAAK,aAAc,gBAAgB,CACtC,EACA,WAAY,CACV,CAAC,UAAW,YAAY,EACxB,CAAC,MAAO,eAAe,EACvB,CAAC,IAAK,aAAc,MAAM,CAC5B,EACA,cAAe,CACb,CAAC,UAAW,YAAY,EACxB,CAAC,MAAO,eAAe,EACvB,CAAC,IAAK,aAAc,MAAM,CAC5B,CACF,CACF,C","sources":["webpack://grafana/../../opt/drone/yarncache/monaco-editor-npm-0.34.0-2a8aa5269e-10a28c1fe0.zip/node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/sparql/sparql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"'\", close: \"'\", notIn: [\"string\"] },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".rq\",\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.angle\", open: \"<\", close: \">\" }\n  ],\n  keywords: [\n    \"add\",\n    \"as\",\n    \"asc\",\n    \"ask\",\n    \"base\",\n    \"by\",\n    \"clear\",\n    \"construct\",\n    \"copy\",\n    \"create\",\n    \"data\",\n    \"delete\",\n    \"desc\",\n    \"describe\",\n    \"distinct\",\n    \"drop\",\n    \"false\",\n    \"filter\",\n    \"from\",\n    \"graph\",\n    \"group\",\n    \"having\",\n    \"in\",\n    \"insert\",\n    \"limit\",\n    \"load\",\n    \"minus\",\n    \"move\",\n    \"named\",\n    \"not\",\n    \"offset\",\n    \"optional\",\n    \"order\",\n    \"prefix\",\n    \"reduced\",\n    \"select\",\n    \"service\",\n    \"silent\",\n    \"to\",\n    \"true\",\n    \"undef\",\n    \"union\",\n    \"using\",\n    \"values\",\n    \"where\",\n    \"with\"\n  ],\n  builtinFunctions: [\n    \"a\",\n    \"abs\",\n    \"avg\",\n    \"bind\",\n    \"bnode\",\n    \"bound\",\n    \"ceil\",\n    \"coalesce\",\n    \"concat\",\n    \"contains\",\n    \"count\",\n    \"datatype\",\n    \"day\",\n    \"encode_for_uri\",\n    \"exists\",\n    \"floor\",\n    \"group_concat\",\n    \"hours\",\n    \"if\",\n    \"iri\",\n    \"isblank\",\n    \"isiri\",\n    \"isliteral\",\n    \"isnumeric\",\n    \"isuri\",\n    \"lang\",\n    \"langmatches\",\n    \"lcase\",\n    \"max\",\n    \"md5\",\n    \"min\",\n    \"minutes\",\n    \"month\",\n    \"now\",\n    \"rand\",\n    \"regex\",\n    \"replace\",\n    \"round\",\n    \"sameterm\",\n    \"sample\",\n    \"seconds\",\n    \"sha1\",\n    \"sha256\",\n    \"sha384\",\n    \"sha512\",\n    \"str\",\n    \"strafter\",\n    \"strbefore\",\n    \"strdt\",\n    \"strends\",\n    \"strlang\",\n    \"strlen\",\n    \"strstarts\",\n    \"struuid\",\n    \"substr\",\n    \"sum\",\n    \"timezone\",\n    \"tz\",\n    \"ucase\",\n    \"uri\",\n    \"uuid\",\n    \"year\"\n  ],\n  ignoreCase: true,\n  tokenizer: {\n    root: [\n      [/<[^\\s\\u00a0>]*>?/, \"tag\"],\n      { include: \"@strings\" },\n      [/#.*/, \"comment\"],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[;,.]/, \"delimiter\"],\n      [/[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/, \"tag\"],\n      [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, \"tag\"],\n      [\n        /[$?]?[_\\w\\d]+/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@builtinFunctions\": { token: \"predefined.sql\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\^\\^/, \"operator.sql\"],\n      [/\\^[*+\\-<>=&|^\\/!?]*/, \"operator.sql\"],\n      [/[*+\\-<>=&|\\/!?]/, \"operator.sql\"],\n      [/@[a-z\\d\\-]*/, \"metatag.html\"],\n      [/\\s+/, \"white\"]\n    ],\n    strings: [\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/'$/, \"string.sql\", \"@pop\"],\n      [/'/, \"string.sql\", \"@stringBody\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"$/, \"string.sql\", \"@pop\"],\n      [/\"/, \"string.sql\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/[^\\\\']+/, \"string.sql\"],\n      [/\\\\./, \"string.escape\"],\n      [/'/, \"string.sql\", \"@pop\"]\n    ],\n    dblStringBody: [\n      [/[^\\\\\"]+/, \"string.sql\"],\n      [/\\\\./, \"string.escape\"],\n      [/\"/, \"string.sql\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","language"],"sourceRoot":""}