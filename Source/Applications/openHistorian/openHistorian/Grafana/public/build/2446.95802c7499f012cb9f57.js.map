{"version":3,"file":"2446.95802c7499f012cb9f57.js","mappings":"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","sources":["webpack://grafana/./public/app/features/admin/state/apis.tsx","webpack://grafana/./public/app/features/admin/ServerStats.tsx","webpack://grafana/./public/app/features/admin/LicenseChrome.tsx","webpack://grafana/./public/app/features/admin/UpgradePage.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx"],"sourcesContent":["import { getBackendSrv } from '@grafana/runtime';\n\nexport interface ServerStat {\n  activeAdmins: number;\n  activeEditors: number;\n  activeSessions: number;\n  activeUsers: number;\n  activeViewers: number;\n  admins: number;\n  alerts: number;\n  dashboards: number;\n  datasources: number;\n  editors: number;\n  orgs: number;\n  playlists: number;\n  snapshots: number;\n  stars: number;\n  tags: number;\n  users: number;\n  viewers: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat | null> => {\n  return getBackendSrv()\n    .get('api/admin/stats')\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { CardContainer, LinkButton, useStyles2 } from '@grafana/ui';\nimport { AccessControlAction } from 'app/types';\n\nimport { contextSrv } from '../../core/services/context_srv';\nimport { Loader } from '../plugins/admin/components/Loader';\n\nimport { getServerStats, ServerStat } from './state/apis';\n\nexport const ServerStats = () => {\n  const [stats, setStats] = useState<ServerStat | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  const hasAccessToDataSources = contextSrv.hasAccess(AccessControlAction.DataSourcesRead, contextSrv.isGrafanaAdmin);\n  const hasAccessToAdminUsers = contextSrv.hasAccess(AccessControlAction.UsersRead, contextSrv.isGrafanaAdmin);\n\n  useEffect(() => {\n    if (contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n      setIsLoading(true);\n      getServerStats().then((stats) => {\n        setStats(stats);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (!contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className={styles.title}>Instance statistics</h2>\n      {isLoading ? (\n        <div className={styles.loader}>\n          <Loader text={'Loading instance stats...'} />\n        </div>\n      ) : stats ? (\n        <div className={styles.row}>\n          <StatCard\n            content={[\n              { name: 'Dashboards (starred)', value: `${stats.dashboards} (${stats.stars})` },\n              { name: 'Tags', value: stats.tags },\n              { name: 'Playlists', value: stats.playlists },\n              { name: 'Snapshots', value: stats.snapshots },\n            ]}\n            footer={\n              <LinkButton href={'/dashboards'} variant={'secondary'}>\n                Manage dashboards\n              </LinkButton>\n            }\n          />\n\n          <div className={styles.doubleRow}>\n            <StatCard\n              content={[{ name: 'Data sources', value: stats.datasources }]}\n              footer={\n                hasAccessToDataSources && (\n                  <LinkButton href={'/datasources'} variant={'secondary'}>\n                    Manage data sources\n                  </LinkButton>\n                )\n              }\n            />\n            <StatCard\n              content={[{ name: 'Alerts', value: stats.alerts }]}\n              footer={\n                <LinkButton href={'/alerting/list'} variant={'secondary'}>\n                  Alerts\n                </LinkButton>\n              }\n            />\n          </div>\n          <StatCard\n            content={[\n              { name: 'Organisations', value: stats.orgs },\n              { name: 'Users total', value: stats.users },\n              { name: 'Active users in last 30 days', value: stats.activeUsers },\n              { name: 'Active sessions', value: stats.activeSessions },\n            ]}\n            footer={\n              hasAccessToAdminUsers && (\n                <LinkButton href={'/admin/users'} variant={'secondary'}>\n                  Manage users\n                </LinkButton>\n              )\n            }\n          />\n        </div>\n      ) : (\n        <p className={styles.notFound}>No stats found.</p>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n\n      & > div:not(:last-of-type) {\n        margin-right: ${theme.spacing(2)};\n      }\n\n      & > div {\n        width: 33.3%;\n      }\n    `,\n    doubleRow: css`\n      display: flex;\n      flex-direction: column;\n\n      & > div:first-of-type {\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n\n    loader: css`\n      height: 290px;\n    `,\n\n    notFound: css`\n      font-size: ${theme.typography.h6.fontSize};\n      text-align: center;\n      height: 290px;\n    `,\n  };\n};\n\ntype StatCardProps = {\n  content: Array<Record<string, number | string>>;\n  footer?: JSX.Element | boolean;\n};\n\nconst StatCard = ({ content, footer }: StatCardProps) => {\n  const styles = useStyles2(getCardStyles);\n  return (\n    <CardContainer className={styles.container} disableHover>\n      <div className={styles.inner}>\n        <div className={styles.content}>\n          {content.map((item) => {\n            return (\n              <div key={item.name} className={styles.row}>\n                <span>{item.name}</span>\n                <span>{item.value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {footer && <div>{footer}</div>}\n      </div>\n    </CardContainer>\n  );\n};\n\nconst getCardStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      padding: ${theme.spacing(2)};\n    `,\n    inner: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    content: css`\n      flex: 1 0 auto;\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin-bottom: ${theme.spacing(2)};\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst title = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const backgroundUrl = theme.isDark ? 'public/img/licensing/header_dark.svg' : 'public/img/licensing/header_light.svg';\n  const footerBg = theme.isDark ? theme.v1.palette.dark9 : theme.v1.palette.gray6;\n\n  return {\n    container: css`\n      padding: 36px 79px;\n      background: ${theme.components.panel.background};\n    `,\n    footer: css`\n      text-align: center;\n      padding: 16px;\n      background: ${footerBg};\n    `,\n    header: css`\n      height: 137px;\n      padding: 40px 0 0 79px;\n      position: relative;\n      background: url('${backgroundUrl}') right;\n    `,\n  };\n};\n\ninterface Props {\n  header: string;\n  subheader?: string;\n  editionNotice?: string;\n  children?: React.ReactNode;\n}\n\nexport function LicenseChrome({ header, editionNotice, subheader, children }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <div className={styles.header}>\n        <h2 style={title}>{header}</h2>\n        {subheader && <h3>{subheader}</h3>}\n\n        <Circle\n          size=\"128px\"\n          style={{\n            boxShadow: '0px 0px 24px rgba(24, 58, 110, 0.45)',\n            background: '#0A1C36',\n            position: 'absolute',\n            top: '19px',\n            left: '71%',\n          }}\n        >\n          <img\n            src=\"public/img/grafana_icon.svg\"\n            alt=\"Grafana\"\n            width=\"80px\"\n            style={{ position: 'absolute', left: '23px', top: '20px' }}\n          />\n        </Circle>\n      </div>\n\n      <div className={styles.container}>{children}</div>\n\n      {editionNotice && <div className={styles.footer}>{editionNotice}</div>}\n    </>\n  );\n}\n\ninterface CircleProps {\n  size: string;\n  style?: React.CSSProperties;\n}\n\nexport const Circle = ({ size, style, children }: React.PropsWithChildren<CircleProps>) => {\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        borderRadius: '50%',\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { GrafanaTheme2, NavModel } from '@grafana/data';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from '../../types';\n\nimport { LicenseChrome } from './LicenseChrome';\nimport { ServerStats } from './ServerStats';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport function UpgradePage({ navModel }: Props) {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <ServerStats />\n        <UpgradeInfo\n          editionNotice=\"You are running the open-source version of Grafana.\n        You have to install the Enterprise edition in order enable Enterprise features.\"\n        />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst titleStyles = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\ninterface UpgradeInfoProps {\n  editionNotice?: string;\n}\n\nexport const UpgradeInfo = ({ editionNotice }: UpgradeInfoProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <h2 className={styles.title}>Enterprise license</h2>\n      <LicenseChrome header=\"Grafana Enterprise\" subheader=\"Get your free trial\" editionNotice={editionNotice}>\n        <div className={styles.column}>\n          <FeatureInfo />\n          <ServiceInfo />\n        </div>\n      </LicenseChrome>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    column: css`\n      display: grid;\n      grid-template-columns: 100%;\n      column-gap: 20px;\n      row-gap: 40px;\n\n      @media (min-width: 1050px) {\n        grid-template-columns: 50% 50%;\n      }\n    `,\n    title: css`\n      margin: ${theme.spacing(4)} 0;\n    `,\n  };\n};\n\nconst GetEnterprise = () => {\n  return (\n    <div style={{ marginTop: '40px', marginBottom: '30px' }}>\n      <h2 style={titleStyles}>Get Grafana Enterprise</h2>\n      <CallToAction />\n      <p style={{ paddingTop: '12px' }}>\n        You can use the trial version for free for 30 days. We will remind you about it five days before the trial\n        period ends.\n      </p>\n    </div>\n  );\n};\n\nconst CallToAction = () => {\n  return (\n    <LinkButton\n      variant=\"primary\"\n      size=\"lg\"\n      href=\"https://grafana.com/contact?about=grafana-enterprise&utm_source=grafana-upgrade-page\"\n    >\n      Contact us and get a free trial\n    </LinkButton>\n  );\n};\n\nconst ServiceInfo = () => {\n  return (\n    <div>\n      <h4>At your service</h4>\n\n      <List>\n        <Item title=\"Enterprise Plugins\" image=\"public/img/licensing/plugin_enterprise.svg\" />\n        <Item title=\"Critical SLA: 2 hours\" image=\"public/img/licensing/sla.svg\" />\n        <Item title=\"Unlimited Expert Support\" image=\"public/img/licensing/customer_support.svg\">\n          24 x 7 x 365 support via\n          <List nested={true}>\n            <Item title=\"Email\" />\n            <Item title=\"Private Slack channel\" />\n            <Item title=\"Phone\" />\n          </List>\n        </Item>\n        <Item title=\"Hand-in-hand support\" image=\"public/img/licensing/handinhand_support.svg\">\n          in the upgrade process\n        </Item>\n      </List>\n\n      <div style={{ marginTop: '20px' }}>\n        <strong>Also included:</strong>\n        <br />\n        Indemnification, working with Grafana Labs on future prioritization, and training from the core Grafana team.\n      </div>\n\n      <GetEnterprise />\n    </div>\n  );\n};\n\nconst FeatureInfo = () => {\n  return (\n    <div style={{ paddingRight: '11px' }}>\n      <h4>Enhanced functionality</h4>\n      <FeatureListing />\n    </div>\n  );\n};\n\nconst FeatureListing = () => {\n  return (\n    <List>\n      <Item title=\"Data source permissions\" />\n      <Item title=\"Reporting\" />\n      <Item title=\"SAML authentication\" />\n      <Item title=\"Enhanced LDAP integration\" />\n      <Item title=\"Team Sync\">LDAP, GitHub OAuth, Auth Proxy, Okta</Item>\n      <Item title=\"White labeling\" />\n      <Item title=\"Auditing\" />\n      <Item title=\"Settings updates at runtime\" />\n      <Item title=\"Grafana usage insights\">\n        <List nested={true}>\n          <Item title=\"Sort dashboards by popularity in search\" />\n          <Item title=\"Find unused dashboards\" />\n          <Item title=\"Dashboard usage stats drawer\" />\n          <Item title=\"Dashboard presence indicators\" />\n        </List>\n      </Item>\n      <Item title=\"Enterprise plugins\">\n        <List nested={true}>\n          <Item title=\"Oracle\" />\n          <Item title=\"Splunk\" />\n          <Item title=\"Service Now\" />\n          <Item title=\"Dynatrace\" />\n          <Item title=\"New Relic\" />\n          <Item title=\"DataDog\" />\n          <Item title=\"AppDynamics\" />\n          <Item title=\"SAP HANA®\" />\n          <Item title=\"Gitlab\" />\n          <Item title=\"Honeycomb\" />\n          <Item title=\"Jira\" />\n          <Item title=\"MongoDB\" />\n          <Item title=\"Salesforce\" />\n          <Item title=\"Snowflake\" />\n          <Item title=\"Wavefront\" />\n        </List>\n      </Item>\n    </List>\n  );\n};\n\ninterface ListProps {\n  nested?: boolean;\n}\n\nconst List = ({ children, nested }: React.PropsWithChildren<ListProps>) => {\n  const listStyle = css`\n    display: flex;\n    flex-direction: column;\n    padding-top: 8px;\n\n    > div {\n      margin-bottom: ${nested ? 0 : 8}px;\n    }\n  `;\n\n  return <div className={listStyle}>{children}</div>;\n};\n\ninterface ItemProps {\n  title: string;\n  image?: string;\n}\n\nconst Item = ({ children, title, image }: React.PropsWithChildren<ItemProps>) => {\n  const imageUrl = image ? image : 'public/img/licensing/checkmark.svg';\n  const itemStyle = css`\n    display: flex;\n\n    > img {\n      display: block;\n      height: 22px;\n      flex-grow: 0;\n      padding-right: 12px;\n    }\n  `;\n  const titleStyle = css`\n    font-weight: 500;\n    line-height: 1.7;\n  `;\n\n  return (\n    <div className={itemStyle}>\n      <img src={imageUrl} alt=\"\" />\n      <div>\n        <div className={titleStyle}>{title}</div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'upgrading'),\n});\n\nexport default connect(mapStateToProps)(UpgradePage);\n","import React from 'react';\n\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <div className=\"page-loader-wrapper\">\n      <LoadingPlaceholder text={text} />\n    </div>\n  );\n};\n"],"names":["getServerStats","err","ServerStats","stats","setStats","isLoading","setIsLoading","styles","getStyles","hasAccessToDataSources","hasAccessToAdminUsers","Loader","StatCard","theme","content","footer","getCardStyles","CardContainer","item","title","backgroundUrl","footerBg","LicenseChrome","header","editionNotice","subheader","children","Circle","size","style","UpgradePage","navModel","Page","UpgradeInfo","titleStyles","FeatureInfo","ServiceInfo","GetEnterprise","CallToAction","List","Item","FeatureListing","nested","listStyle","image","imageUrl","itemStyle","titleStyle","mapStateToProps","state","text"],"sourceRoot":""}