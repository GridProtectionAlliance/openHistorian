{"version":3,"file":"explore.be1f937e68a8c15b1e01.js","mappings":"mKA0BO,SAASA,EACdC,EACqD,CAEvD,CAwBO,SAASC,GACdC,EACoC,CACpC,OAAQA,EAAW,CACjB,KAAK,KAA4B,OAC/B,MAAO,CACL,SAAO,KAAE,0CAA2C,QAAQ,EAC5D,MAAO,KAA4B,OACnC,eAAa,KACX,gDACA,mDACF,EACA,kBAAmB,CAAE,KAAM,EAAM,EACjC,gBAAiB,CAAE,KAAM,EAAM,CACjC,EACF,KAAK,KAA4B,MAC/B,MAAO,CACL,SAAO,KAAE,yCAA0C,oBAAoB,EACvE,MAAO,KAA4B,MACnC,eAAa,KACX,+CACA,0LACF,EACA,kBAAmB,CACjB,KAAM,GACN,SAAU,GACV,YAAU,KACR,8CACA,uDACF,CACF,EACA,gBAAiB,CACf,KAAM,GACN,SAAU,GACV,YAAU,KACR,8CACA,qEACF,CACF,CACF,EACF,QACE,MAAO,CACL,MAAOA,EACP,MAAOA,EACP,kBAAmB,CAAE,KAAM,EAAM,EACjC,gBAAiB,CAAE,KAAM,EAAM,CACjC,CACJ,CACF,CAEO,MAAMC,EAAsB,IAC1B,OAAO,OAAO,IAA2B,EAAE,IAAKC,GAAuB,CAC5E,MAAMF,GAAYD,GAA6BG,CAAkB,EACjE,MAAO,CACL,MAAOF,GAAU,MACjB,MAAOA,GAAU,MACjB,YAAaA,GAAU,WACzB,CACF,CAAC,C,4PC9GCG,EAAkB,SAAUC,EAASC,EAAS,CAC1CD,IAAY,SAAUA,EAAU,IACpC,IAAIE,KAAU,eAAY,SAAUC,EAAO,CACvC,IAAIC,EAAe,OAAOJ,GAAY,WAAaA,EAAQ,EAAI,GAC/D,GAAKI,EAGL,OAAAD,EAAM,eAAe,EACjBF,IACAE,EAAM,YAAcF,GAEjBA,CACX,EAAG,CAACD,EAASC,CAAO,CAAC,KACrB,aAAU,UAAY,CAClB,GAAKD,EAGL,gBAAG,OAAQ,eAAgBE,CAAO,EAC3B,UAAY,CAAE,SAAO,OAAI,OAAQ,eAAgBA,CAAO,CAAG,CACtE,EAAG,CAACF,EAASE,CAAO,CAAC,CACzB,EACA,SAAeH,E,sFCZR,MAAMM,GAAiC,CAAC,CAAE,OAAAC,EAAQ,UAAAC,EAAW,SAAAC,EAAU,QAAAP,CAAQ,OAElF,QAACQ,GAAA,GACC,OAAQ,GACR,MAAO,iCACP,UAAWD,EACX,KAAK,uBACL,aAAW,OAAI,CAAE,MAAO,OAAQ,CAAC,EAEjC,oBAAC,MAAI,SAAAP,CAAA,CAAQ,KACb,QAACQ,GAAA,EAAM,UAAN,CACC,oBAACC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAASF,EAAU,KAAK,UAAU,kBAE9D,KACA,OAACE,EAAA,GAAM,CAAC,QAAQ,cAAc,QAASH,EAAW,mCAElD,KACA,OAACG,EAAA,GAAM,CAAC,QAAQ,UAAU,QAASJ,EAAQ,4BAE3C,GACF,GACF,E,eC5BCK,IAAAA,IACHA,EAAA,qBAAuB,8EACvBA,EAAA,gBAAkB,yBAClBA,EAAA,eAAiB,+CACjBA,EAAA,YAAc,sEAJXA,IAAAA,IAAA,IASE,MAAMC,GAAmB,CAC9BC,EACAC,EACAC,EACAC,IACG,CACH,MAAMC,KAAkB,aACtB,wFACF,EACA,IAAIC,EAAY,GACZC,EAAiB,GAGrB,GAAIN,IAAW,yCAAuC,WAEpD,GADAK,EAAY,mBACRJ,EACF,GAAIC,EACFI,EAAiB,uDACRH,EACTG,EAAiB,kFAEjB,gBAIEJ,EACFI,EAAiB,uDACRH,EACTG,EAAiB,6BAEjB,gBAGKN,IAAW,yCAAuC,kBAE3D,GADAK,EAAY,0BACRJ,EACF,GAAIC,EACFI,EAAiB,mDAEjB,gBAIEH,EACFG,EAAiB,6BAEjB,gBAGKN,IAAW,yCAAuC,aAE3D,GADAK,EAAY,qBACRH,EACFI,EAAiB,uDACRH,EACTG,EAAiB,0EAEjB,QAGJ,OAAOF,EAAgB,CAAE,UAAAC,EAAW,eAAAC,CAAe,CAAC,CACtD,E,sECtDO,MAAMC,GAA2B,CAAC,CAAE,MAAAC,CAAM,IAAoD,CACnG,MAAMC,KAAW,eAAY,EACvBC,KAAS,MAAWC,EAAS,EAC7BC,KAAqB,eAAY,IAAwB,EACzDC,KAAkB,eAAY,IAAqB,EACnD,CAACC,EAAaC,CAAc,KAAI,YAA6B,MAAS,EAG5E,GAAgBH,GAAoB,kBAAoB,GAAO,mBAAmB,EAClF,GACG,CAACA,GAAoB,kBAAoBA,GAAoB,kBAAqB,GACnF,mEACF,KAGA,aAAU,IAAM,CACd,GAAIA,GAAoB,UAAW,CACjC,KAAM,CAAE,iBAAAI,EAAkB,iBAAAC,CAAiB,EAAIL,EAC/C,IAAIX,EACAD,EACAY,EAAmB,mBACrBX,EAAeW,EAAmB,kBAAkB,aACpDZ,EAASY,EAAmB,kBAAkB,SAG9CZ,EAAS,yCAAuC,aAChDC,EAAe,IAGjB,MAAMiB,EAAenB,GAAiBC,EAAQC,EAAce,EAAkBC,CAAgB,EAC9F,GAAIC,IAAiB,OACnBH,EAAeG,CAAY,UAIzBlB,IAAW,yCAAuC,mBAClDY,EAAmB,kBACnB,CACA,KAAM,CAAE,UAAAO,EAAW,oBAAAC,CAAoB,EAAIR,GAAoB,kBAC3DO,GAAaC,IACfX,KACE,OAAiB,CAAE,UAAAU,EAAW,WAAYC,EAAqB,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CACnG,EACAX,KACE,MAA+B,CAC7B,UAAW,EACb,CAAC,CACH,EAEJ,SACET,IAAW,yCAAuC,YAClDY,EAAmB,kBACnB,CACA,KAAM,CAAE,UAAAO,CAAU,EAAIP,GAAoB,kBACtCO,IAAc,SAChBV,KAAS,MAAWU,CAAS,CAAC,EAC9BV,KACE,MAA+B,CAC7B,UAAW,EACb,CAAC,CACH,EAEJ,MAAWT,IAAW,yCAAuC,cAC3DS,KACE,MAA+B,CAC7B,WAAY,EACd,CAAC,CACH,CAGN,CACF,EAAG,CAACG,EAAoBH,EAAUI,CAAe,CAAC,KAGlDQ,GAAA,GAAW,IAAM,CACfZ,KACE,MAA+B,CAC7B,WAAY,GACZ,UAAW,GACX,iBAAkB,GAClB,MAAO,OACP,YAAa,OACb,QAAS,EACX,CAAC,CACH,EAEAD,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,EACAb,KAAS,MAAW,CAAE,UAAWa,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,CAAC,CACH,CAAC,EAED,MAAMC,EAAc,IAAM,CACxBd,KACE,MAA+B,CAC7B,WAAY,GACZ,UAAW,GACX,iBAAkB,GAClB,MAAO,OACP,YAAa,OACb,QAAS,EACX,CAAC,CACH,EAEAD,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,EACAb,KAAS,MAAW,CAAE,UAAWa,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,CAAC,CACH,EAEME,EAAaL,GAAsB,CACvCJ,EAAe,MAAS,EACxBN,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,CACvD,EAEMM,EAA6B,CAACN,EAAmBO,IAA0B,CAC/EX,EAAe,MAAS,EACxBN,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAYO,EAAe,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,CACvG,EAEMC,EAA6BC,GAAmC,CAQpE,GAPAnB,KACE,MACEG,GAAoB,MACpBA,GAAoB,YACpBA,GAAoB,eACtB,CACF,EACI,CAACgB,GAAyBhB,GAAoB,oBAAsB,OAAW,CACjF,KAAM,CAAE,UAAAO,EAAW,OAAAnB,EAAQ,oBAAAoB,CAAoB,EAAIR,GAAoB,kBACnEZ,IAAW,yCAAuC,YACpDwB,EAAUL,CAAS,EACnBI,EAAY,GAEZvB,IAAW,yCAAuC,mBAClDoB,IAAwB,YAExB,OAAiB,CAAE,UAAAD,EAAW,WAAYC,CAAoB,CAAC,EAC/DG,EAAY,EAEhB,MACEd,KAAS,MAA+B,CAAE,WAAY,GAAO,iBAAkB,GAAO,UAAW,EAAM,CAAC,CAAC,CAE7G,EAEA,SACE,oBAEE,oBAAC,OACC,QAAUoB,GAENA,EAAS,WAAa,YACrBjB,GAAoB,YACpBA,GAAoB,iBAEd,+CAEA,EAEX,CACF,EAECE,IAAgB,WACf,OAACtB,GAAA,CACC,UAAW,IAAM,CACf,GAAIoB,GAAoB,oBAAsB,OAAW,CACvD,KAAM,CAAE,UAAAO,EAAW,OAAAnB,EAAQ,oBAAAoB,CAAoB,EAAIR,GAAoB,kBACnEZ,IAAW,yCAAuC,WACpDwB,EAAUL,CAAS,EAEnBnB,IAAW,yCAAuC,mBAClDoB,IAAwB,QAExBK,EAA2BN,EAAWC,CAAmB,EAE3DX,KAAS,MAA+B,CAAE,UAAW,EAAM,CAAC,CAAC,CAC/D,MAIEA,KACE,MAA+B,CAC7B,WAAY,GACZ,iBAAkB,GAClB,UAAW,EACb,CAAC,CACH,CAEJ,EACA,SAAU,IAAM,CAEdA,KAAS,MAA+B,CAAE,UAAW,EAAM,CAAC,CAAC,EAC7DM,EAAe,MAAS,CAC1B,EACA,OAAQ,IAAM,CACZY,EAA0B,EAAK,CACjC,EACA,QAASb,CAAA,CACX,KAEF,OAAC,OAAI,UAAWJ,EAAO,qBACrB,oBAACoB,GAAA,EAAK,CAAC,IAAK,EAAG,eAAe,WAAW,WAAW,SAClD,oBAACC,GAAA,EAAO,CAAC,QAAQ,6DACf,mBAACC,GAAA,EAAI,CAAC,UAAWtB,EAAO,UAAW,KAAK,cAAc,KAAK,IAAK,GAClE,KACA,OAACb,EAAA,IACC,QAAQ,YACR,SAAU,CAACe,GAAoB,QAC/B,KAAK,UACL,UAAWA,GAAoB,QAAUF,EAAO,YAAcA,EAAO,oBACrE,QAAS,IAAM,CACbiB,EAA0B,EAAI,CAChC,EACD,gBAED,KACA,OAAC9B,EAAA,IACC,QAAQ,YACR,KAAK,UACL,UAAWa,EAAO,YAClB,KAAK,QACL,QAAS,IAAM,CACbD,KAAS,MAA+B,CAAE,UAAW,EAAK,CAAC,CAAC,KAC5D,MAAkB,iDAAiD,CACrE,EACD,mCAED,GACF,EACF,GACF,CAEJ,EAEME,GAAasB,GAAyB,CAC1C,MAAMC,EAAgBD,EAAM,OAAO,gBAAgBA,EAAM,OAAO,QAAQ,IAAI,EACtEE,EAAyBC,GAAA,GAAiB,QAAQH,EAAM,OAAO,QAAQ,KAAM,EAAG,EAChFI,EAAwBD,GAAA,GAAiB,OAAOH,EAAM,OAAO,QAAQ,KAAM,EAAG,EAE9EK,EAAgBF,GAAA,GAAiB,OAAOF,EAAe,EAAG,EAEhE,MAAO,CACL,wBAAsB,OAAI,CACxB,gBAAiBD,EAAM,OAAO,QAAQ,KACtC,UAAW,MACX,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,aAAW,OAAI,CACb,MAAOC,CACT,CAAC,EACD,eAAa,OAAI,CACf,MAAOA,EACP,YAAaA,EACb,UAAW,CACT,MAAOA,EACP,YAAaA,EACb,gBAAiBC,CACnB,CACF,CAAC,EAED,uBAAqB,OAAI,CACvB,MAAO,GAAGG,CAAa,cACvB,gBAAiB,GAAGD,CAAqB,aAC3C,CAAC,CACH,CACF,E,uCC1RO,MAAME,GAAiB,IAAM,CAClC,KAAM,CAACC,EAASC,CAAU,KAAI,YAAmB,CAAC,CAAC,EAC7C,CAAE,MAAAC,CAAM,KAAI,YAAQ,EACpBjC,KAAW,eAAY,EACvBD,KAAQ,eAAY,IAAW,EAC/BmC,KAAW,eAAY,IAAO,EAE9BC,EAAuB,MAAW,cAAc,sBAAoB,gBAAgB,EAE1F,sBAAU,IAAM,CACd,MAAMC,EAAO,OAAO,KAAKrC,CAAK,EACxBsC,EAAiB,CACrB,KAAM,UACN,SAAU,YAAS,KAAO,CAC5B,EAEMC,EAAuB,CAAC,EAE9B,GAAIJ,EACFI,EAAW,KAAK,CACd,GAAI,yBACJ,KAAM,mBACN,SAAU,aACV,QAAS,IAAM,CACbtC,KAAS,MAAW,CAAE,UAAWoC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACItC,EAAM,CAAC,EAEVuC,EAAW,KAAK,CACd,GAAI,0BACJ,KAAM,oBACN,SAAU,cACV,QAAS,IAAM,CACbtC,KAAS,MAAW,CAAE,UAAWoC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,gCACJ,KAAM,wBACN,SAAU,QACV,QAAS,IAAM,CACbtC,KAAS,MAAWoC,EAAK,CAAC,CAAC,CAAC,CAC9B,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,iCACJ,KAAM,yBACN,SAAU,QACV,QAAS,IAAM,CACbtC,KAAS,MAAWoC,EAAK,CAAC,CAAC,CAAC,CAC9B,EACA,QAASC,CACX,CAAC,MAEE,CAEL,MAAME,EAAW,OAAO,OAAOxC,CAAK,EAAE,KAAMc,GACnCA,GAAM,oBAAoB,MAAQ,KAC1C,EAEG2B,EAAA,EAAO,eAAe,cAAgBL,GAAwB,CAACI,GACjED,EAAW,KAAK,CACd,GAAI,8BACJ,KAAM,sBACN,QAAS,IAAM,CACbtC,KAAS,MAA+B,CAAE,WAAY,EAAK,CAAC,CAAC,EAC7DA,KAAS,MAAW,CAAE,UAAWoC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EAGHC,EAAW,KAAK,CACd,GAAI,oBACJ,KAAM,YACN,SAAU,QACV,QAAS,IAAM,CACbtC,KAAS,MAAW,CAAE,UAAWoC,EAAK,CAAC,CAAE,CAAC,CAAC,CAC7C,EACA,QAASC,CACX,CAAC,EACDC,EAAW,KAAK,CACd,GAAI,0BACJ,KAAM,kBACN,SAAU,QACV,QAAS,IAAM,CACbtC,KAAS,MAAU,CAAC,CACtB,EACA,QAASqC,CACX,CAAC,CACH,CACAL,EAAWM,CAAU,CACvB,EAAG,CAACvC,EAAOmC,EAAUD,EAAOjC,EAAUmC,CAAoB,CAAC,KAE3D,uBAAoBF,EAAaF,EAAL,CAAC,EAAa,CAACA,EAASE,CAAK,CAAC,EAEnD,IACT,E,gBClHIQ,GAAyC,UAAY,CACrD,IAAIC,EAAgB,SAAUC,EAAGC,EAAG,CAChC,OAAAF,EAAgB,OAAO,gBAClB,CAAE,UAAW,CAAC,CAAE,YAAa,OAAS,SAAUC,EAAGC,EAAG,CAAED,EAAE,UAAYC,CAAG,GAC1E,SAAUD,EAAGC,EAAG,CAAE,QAASC,KAAKD,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGC,CAAC,IAAGF,EAAEE,CAAC,EAAID,EAAEC,CAAC,EAAG,EAC7FH,EAAcC,EAAGC,CAAC,CAC7B,EACA,OAAO,SAAUD,EAAGC,EAAG,CACnBF,EAAcC,EAAGC,CAAC,EAClB,SAASE,GAAK,CAAE,KAAK,YAAcH,CAAG,CACtCA,EAAE,UAAYC,IAAM,KAAO,OAAO,OAAOA,CAAC,GAAKE,EAAG,UAAYF,EAAE,UAAW,IAAIE,EACnF,CACJ,EAAG,EACCC,GAAsC,UAAY,CAClD,OAAAA,GAAW,OAAO,QAAU,SAASC,EAAG,CACpC,QAAS,EAAGC,EAAI,EAAGC,EAAI,UAAU,OAAQD,EAAIC,EAAGD,IAAK,CACjD,EAAI,UAAUA,CAAC,EACf,QAASJ,KAAK,EAAO,OAAO,UAAU,eAAe,KAAK,EAAGA,CAAC,IAC1DG,EAAEH,CAAC,EAAI,EAAEA,CAAC,EAClB,CACA,OAAOG,CACX,EACOD,GAAS,MAAM,KAAM,SAAS,CACzC,EAEII,GAAc,CACd,MAAO,OACP,OAAQ,OACR,IAAK,MACL,KAAM,MACN,OAAQ,YACZ,EACIC,GAAc,CACd,MAAO,OACP,OAAQ,OACR,IAAK,MACL,KAAM,MACN,OAAQ,YACZ,EACIC,GAAW,CACX,MAAO,OACP,OAAQ,OACR,SAAU,UACd,EACIpD,GAAS,CACT,IAAK8C,GAASA,GAAS,CAAC,EAAGI,EAAW,EAAG,CAAE,IAAK,MAAO,CAAC,EACxD,MAAOJ,GAASA,GAAS,CAAC,EAAGK,EAAW,EAAG,CAAE,KAAM,OAAW,MAAO,MAAO,CAAC,EAC7E,OAAQL,GAASA,GAAS,CAAC,EAAGI,EAAW,EAAG,CAAE,IAAK,OAAW,OAAQ,MAAO,CAAC,EAC9E,KAAMJ,GAASA,GAAS,CAAC,EAAGK,EAAW,EAAG,CAAE,KAAM,MAAO,CAAC,EAC1D,SAAUL,GAASA,GAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,MAAO,QAAS,IAAK,QAAS,OAAQ,WAAY,CAAC,EAChG,YAAaN,GAASA,GAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,MAAO,QAAS,OAAQ,QAAS,OAAQ,WAAY,CAAC,EACtG,WAAYN,GAASA,GAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,KAAM,QAAS,OAAQ,QAAS,OAAQ,WAAY,CAAC,EACpG,QAASN,GAASA,GAAS,CAAC,EAAGM,EAAQ,EAAG,CAAE,KAAM,QAAS,IAAK,QAAS,OAAQ,WAAY,CAAC,CAClG,EACIC,GAAyB,SAAUC,EAAQ,CAC3Cd,GAAUa,EAASC,CAAM,EACzB,SAASD,GAAU,CACf,IAAIE,EAAQD,IAAW,MAAQA,EAAO,MAAM,KAAM,SAAS,GAAK,KAChE,OAAAC,EAAM,YAAc,SAAUC,EAAG,CAC7BD,EAAM,MAAM,cAAcC,EAAGD,EAAM,MAAM,SAAS,CACtD,EACAA,EAAM,aAAe,SAAUC,EAAG,CAC9BD,EAAM,MAAM,cAAcC,EAAGD,EAAM,MAAM,SAAS,CACtD,EACOA,CACX,CACA,OAAAF,EAAQ,UAAU,OAAS,UAAY,CACnC,OAAQ,gBAAoB,MAAO,CAAE,UAAW,KAAK,MAAM,WAAa,GAAI,MAAOP,GAASA,GAAS,CAAE,SAAU,WAAY,WAAY,MAAO,EAAG9C,GAAO,KAAK,MAAM,SAAS,CAAC,EAAI,KAAK,MAAM,eAAiB,CAAC,CAAE,EAAG,YAAa,KAAK,YAAa,aAAc,KAAK,YAAa,EAAG,KAAK,MAAM,QAAQ,CAC9S,EACOqD,CACX,EAAE,eAAmB,ECtEjB,GAAyC,UAAY,CACrD,IAAIZ,EAAgB,SAAUC,EAAGC,EAAG,CAChC,OAAAF,EAAgB,OAAO,gBAClB,CAAE,UAAW,CAAC,CAAE,YAAa,OAAS,SAAUC,EAAGC,EAAG,CAAED,EAAE,UAAYC,CAAG,GAC1E,SAAUD,EAAGC,EAAG,CAAE,QAASC,KAAKD,EAAO,OAAO,UAAU,eAAe,KAAKA,EAAGC,CAAC,IAAGF,EAAEE,CAAC,EAAID,EAAEC,CAAC,EAAG,EAC7FH,EAAcC,EAAGC,CAAC,CAC7B,EACA,OAAO,SAAUD,EAAGC,EAAG,CACnBF,EAAcC,EAAGC,CAAC,EAClB,SAASE,GAAK,CAAE,KAAK,YAAcH,CAAG,CACtCA,EAAE,UAAYC,IAAM,KAAO,OAAO,OAAOA,CAAC,GAAKE,EAAG,UAAYF,EAAE,UAAW,IAAIE,EACnF,CACJ,EAAG,EACC,GAAsC,UAAY,CAClD,UAAW,OAAO,QAAU,SAASE,EAAG,CACpC,QAAS,EAAGC,EAAI,EAAGC,EAAI,UAAU,OAAQD,EAAIC,EAAGD,IAAK,CACjD,EAAI,UAAUA,CAAC,EACf,QAASJ,KAAK,EAAO,OAAO,UAAU,eAAe,KAAK,EAAGA,CAAC,IAC1DG,EAAEH,CAAC,EAAI,EAAEA,CAAC,EAClB,CACA,OAAOG,CACX,EACO,GAAS,MAAM,KAAM,SAAS,CACzC,EAIIU,GAAe,CACf,MAAO,OACP,OAAQ,MACZ,EACIC,GAAQ,SAAUT,EAAGU,EAAKC,EAAK,CAAE,OAAO,KAAK,IAAI,KAAK,IAAIX,EAAGW,CAAG,EAAGD,CAAG,CAAG,EACzEE,GAAO,SAAUZ,EAAGa,EAAMC,EAAS,CACnC,IAAIC,EAAI,KAAK,MAAMf,EAAIa,CAAI,EAC3B,OAAOE,EAAIF,EAAOC,GAAWC,EAAI,EACrC,EACIC,GAAe,SAAUC,EAAKC,EAAQ,CACtC,OAAO,IAAI,OAAOD,EAAK,GAAG,EAAE,KAAKC,CAAM,CAC3C,EAEIC,GAAe,SAAUxF,EAAO,CAChC,MAAO,GAAQA,EAAM,SAAWA,EAAM,QAAQ,OAClD,EACIyF,GAAe,SAAUzF,EAAO,CAChC,MAAO,IAASA,EAAM,SAAWA,EAAM,UAAY,KAC9CA,EAAM,SAAWA,EAAM,UAAY,GAC5C,EACI0F,GAAkB,SAAUrB,EAAGsB,EAAWC,EAAS,CAC/CA,IAAY,SAAUA,EAAU,GACpC,IAAIC,EAAkBF,EAAU,OAAO,SAAUG,EAAMC,EAAMC,EAAO,CAAE,OAAQ,KAAK,IAAID,EAAO1B,CAAC,EAAI,KAAK,IAAIsB,EAAUG,CAAI,EAAIzB,CAAC,EAAI2B,EAAQF,CAAO,EAAG,CAAC,EAClJG,EAAM,KAAK,IAAIN,EAAUE,CAAe,EAAIxB,CAAC,EACjD,OAAOuB,IAAY,GAAKK,EAAML,EAAUD,EAAUE,CAAe,EAAIxB,CACzE,EACI6B,GAAgB,SAAU7B,EAAG,CAoB7B,OAnBAA,EAAIA,EAAE,SAAS,EACXA,IAAM,QAGNA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,GAAG,GAGdA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,IAAI,GAGfA,EAAE,SAAS,MAAM,GAGjBA,EAAE,SAAS,MAAM,EACVA,EAEJA,EAAI,IACf,EACI8B,GAAe,SAAUjB,EAAMkB,EAAYC,EAAYC,EAAa,CACpE,GAAIpB,GAAQ,OAAOA,GAAS,SAAU,CAClC,GAAIA,EAAK,SAAS,IAAI,EAClB,OAAO,OAAOA,EAAK,QAAQ,KAAM,EAAE,CAAC,EAExC,GAAIA,EAAK,SAAS,GAAG,EAAG,CACpB,IAAIqB,EAAQ,OAAOrB,EAAK,QAAQ,IAAK,EAAE,CAAC,EAAI,IAC5C,OAAOkB,EAAaG,CACxB,CACA,GAAIrB,EAAK,SAAS,IAAI,EAAG,CACrB,IAAIqB,EAAQ,OAAOrB,EAAK,QAAQ,KAAM,EAAE,CAAC,EAAI,IAC7C,OAAOmB,EAAaE,CACxB,CACA,GAAIrB,EAAK,SAAS,IAAI,EAAG,CACrB,IAAIqB,EAAQ,OAAOrB,EAAK,QAAQ,KAAM,EAAE,CAAC,EAAI,IAC7C,OAAOoB,EAAcC,CACzB,CACJ,CACA,OAAOrB,CACX,EACIsB,GAAkB,SAAUJ,EAAYC,EAAYC,EAAaG,EAAUC,EAAWC,EAAUC,EAAW,CAC3G,OAAAH,EAAWN,GAAaM,EAAUL,EAAW,MAAOC,EAAYC,CAAW,EAC3EI,EAAYP,GAAaO,EAAWN,EAAW,OAAQC,EAAYC,CAAW,EAC9EK,EAAWR,GAAaQ,EAAUP,EAAW,MAAOC,EAAYC,CAAW,EAC3EM,EAAYT,GAAaS,EAAWR,EAAW,OAAQC,EAAYC,CAAW,EACvE,CACH,SAAU,OAAOG,EAAa,IAAc,OAAY,OAAOA,CAAQ,EACvE,UAAW,OAAOC,EAAc,IAAc,OAAY,OAAOA,CAAS,EAC1E,SAAU,OAAOC,EAAa,IAAc,OAAY,OAAOA,CAAQ,EACvE,UAAW,OAAOC,EAAc,IAAc,OAAY,OAAOA,CAAS,CAC9E,CACJ,EAOIC,GAAkB,SAAUC,EAAK,CAAE,OAAQ,MAAM,QAAQA,CAAG,EAAIA,EAAM,CAACA,EAAKA,CAAG,CAAI,EACnFC,GAAe,CACf,KACA,MACA,QACA,YACA,OACA,UACA,OACA,SACA,oBACA,OACA,cACA,WACA,YACA,WACA,YACA,kBACA,4BACA,6BACA,SACA,eACA,gBACA,qBACA,qBACA,WACA,gBACA,WACA,eACA,kBACA,QACA,cACA,SACJ,EAEIC,GAAgB,qBAChBC,GAA2B,SAAUvC,EAAQ,CAC7C,GAAUuC,EAAWvC,CAAM,EAC3B,SAASuC,EAAUC,EAAO,CACtB,IAAIC,EAAIC,EAAIC,EAAIC,EACZ3C,EAAQD,EAAO,KAAK,KAAMwC,CAAK,GAAK,KACxC,OAAAvC,EAAM,MAAQ,EACdA,EAAM,UAAY,KAElBA,EAAM,WAAa,EACnBA,EAAM,UAAY,EAElBA,EAAM,cAAgB,EACtBA,EAAM,eAAiB,EACvBA,EAAM,aAAe,EACrBA,EAAM,gBAAkB,EAExBA,EAAM,WAAa,EACnBA,EAAM,UAAY,EAClBA,EAAM,WAAa,UAAY,CAC3B,GAAI,CAACA,EAAM,WAAa,CAACA,EAAM,OAC3B,OAAO,KAEX,IAAI4C,EAAS5C,EAAM,WACnB,GAAI,CAAC4C,EACD,OAAO,KAEX,IAAIC,EAAU7C,EAAM,OAAO,SAAS,cAAc,KAAK,EACvD,OAAA6C,EAAQ,MAAM,MAAQ,OACtBA,EAAQ,MAAM,OAAS,OACvBA,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,UAAY,cAC1BA,EAAQ,MAAM,KAAO,IACrBA,EAAQ,MAAM,KAAO,WACjBA,EAAQ,UACRA,EAAQ,UAAU,IAAIR,EAAa,EAGnCQ,EAAQ,WAAaR,GAEzBO,EAAO,YAAYC,CAAO,EACnBA,CACX,EACA7C,EAAM,WAAa,SAAU8C,EAAM,CAC/B,IAAIF,EAAS5C,EAAM,WACd4C,GAGLA,EAAO,YAAYE,CAAI,CAC3B,EACA9C,EAAM,MAAQ,CACV,WAAY,GACZ,OAAQyC,GAAMD,EAAKxC,EAAM,aAAe,MAAQwC,IAAO,OAAS,OAASA,EAAG,SAAW,MAAQC,IAAO,OAASA,EAAK,OACpH,QAASE,GAAMD,EAAK1C,EAAM,aAAe,MAAQ0C,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQC,IAAO,OAASA,EAAK,OACtH,UAAW,QACX,SAAU,CACN,EAAG,EACH,EAAG,EACH,MAAO,EACP,OAAQ,CACZ,EACA,gBAAiB,CACb,OAAQ,OACR,MAAO,OACP,gBAAiB,gBACjB,OAAQ,OACR,QAAS,EACT,SAAU,QACV,OAAQ,KACR,IAAK,IACL,KAAM,IACN,OAAQ,IACR,MAAO,GACX,EACA,UAAW,MACf,EACA3C,EAAM,cAAgBA,EAAM,cAAc,KAAKA,CAAK,EACpDA,EAAM,YAAcA,EAAM,YAAY,KAAKA,CAAK,EAChDA,EAAM,UAAYA,EAAM,UAAU,KAAKA,CAAK,EACrCA,CACX,CACA,cAAO,eAAesC,EAAU,UAAW,aAAc,CACrD,IAAK,UAAY,CACb,OAAK,KAAK,UAGH,KAAK,UAAU,WAFX,IAGf,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeA,EAAU,UAAW,SAAU,CACjD,IAAK,UAAY,CAIb,MAHI,CAAC,KAAK,WAGN,CAAC,KAAK,UAAU,cACT,KAEJ,KAAK,UAAU,cAAc,WACxC,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeA,EAAU,UAAW,YAAa,CACpD,IAAK,UAAY,CACb,OAAO,KAAK,MAAM,MAAQ,KAAK,MAAM,aAAepC,EACxD,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeoC,EAAU,UAAW,OAAQ,CAC/C,IAAK,UAAY,CACb,IAAIS,EAAQ,EACRC,EAAS,EACb,GAAI,KAAK,WAAa,KAAK,OAAQ,CAC/B,IAAIC,EAAW,KAAK,UAAU,YAC1BC,EAAY,KAAK,UAAU,aAG3BC,EAAc,KAAK,UAAU,MAAM,SACnCA,IAAgB,aAChB,KAAK,UAAU,MAAM,SAAW,YAGpCJ,EAAQ,KAAK,UAAU,MAAM,QAAU,OAAS,KAAK,UAAU,YAAcE,EAC7ED,EAAS,KAAK,UAAU,MAAM,SAAW,OAAS,KAAK,UAAU,aAAeE,EAEhF,KAAK,UAAU,MAAM,SAAWC,CACpC,CACA,MAAO,CAAE,MAAOJ,EAAO,OAAQC,CAAO,CAC1C,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACD,OAAO,eAAeV,EAAU,UAAW,YAAa,CACpD,IAAK,UAAY,CACb,IAAItC,EAAQ,KACRO,EAAO,KAAK,MAAM,KAClB6C,EAAU,SAAUC,EAAK,CACzB,IAAIb,EACJ,GAAI,OAAOxC,EAAM,MAAMqD,CAAG,EAAM,KAAerD,EAAM,MAAMqD,CAAG,IAAM,OAChE,MAAO,OAEX,GAAIrD,EAAM,WAAaA,EAAM,UAAUqD,CAAG,IAAO,GAAAb,EAAKxC,EAAM,UAAUqD,CAAG,KAAO,MAAQb,IAAO,SAAkBA,EAAG,SAAS,EAAE,SAAS,GAAG,GAAI,CAC3I,GAAIxC,EAAM,MAAMqD,CAAG,EAAE,SAAS,EAAE,SAAS,GAAG,EACxC,OAAOrD,EAAM,MAAMqD,CAAG,EAAE,SAAS,EAErC,IAAI5B,EAAazB,EAAM,cAAc,EACjCsD,EAAQ,OAAOtD,EAAM,MAAMqD,CAAG,EAAE,SAAS,EAAE,QAAQ,KAAM,EAAE,CAAC,EAC5DE,EAAWD,EAAQ7B,EAAW4B,CAAG,EAAK,IAC1C,OAAOE,EAAU,GACrB,CACA,OAAOhC,GAAcvB,EAAM,MAAMqD,CAAG,CAAC,CACzC,EACIN,EAAQxC,GAAQ,OAAOA,EAAK,MAAU,KAAe,CAAC,KAAK,MAAM,WAC/DgB,GAAchB,EAAK,KAAK,EACxB6C,EAAQ,OAAO,EACjBJ,EAASzC,GAAQ,OAAOA,EAAK,OAAW,KAAe,CAAC,KAAK,MAAM,WACjEgB,GAAchB,EAAK,MAAM,EACzB6C,EAAQ,QAAQ,EACtB,MAAO,CAAE,MAAOL,EAAO,OAAQC,CAAO,CAC1C,EACA,WAAY,GACZ,aAAc,EAClB,CAAC,EACDV,EAAU,UAAU,cAAgB,UAAY,CAC5C,GAAI,CAAC,KAAK,WACN,OAAK,KAAK,OAGH,CAAE,MAAO,KAAK,OAAO,WAAY,OAAQ,KAAK,OAAO,WAAY,EAF7D,CAAE,MAAO,EAAG,OAAQ,CAAE,EAIrC,IAAIQ,EAAO,KAAK,WAAW,EAC3B,GAAI,CAACA,EACD,MAAO,CAAE,MAAO,EAAG,OAAQ,CAAE,EAGjC,IAAIU,EAAc,GACdC,EAAO,KAAK,WAAW,MAAM,SAC7BA,IAAS,SACTD,EAAc,GACd,KAAK,WAAW,MAAM,SAAW,QAGrCV,EAAK,MAAM,SAAW,WACtBA,EAAK,MAAM,SAAW,OACtBA,EAAK,MAAM,UAAY,OACvB,IAAIvC,EAAO,CACP,MAAOuC,EAAK,YACZ,OAAQA,EAAK,YACjB,EACA,OAAIU,IACA,KAAK,WAAW,MAAM,SAAWC,GAErC,KAAK,WAAWX,CAAI,EACbvC,CACX,EACA+B,EAAU,UAAU,WAAa,UAAY,CACrC,KAAK,SACL,KAAK,OAAO,iBAAiB,UAAW,KAAK,SAAS,EACtD,KAAK,OAAO,iBAAiB,YAAa,KAAK,WAAW,EAC1D,KAAK,OAAO,iBAAiB,aAAc,KAAK,SAAS,EACzD,KAAK,OAAO,iBAAiB,YAAa,KAAK,YAAa,CACxD,QAAS,GACT,QAAS,EACb,CAAC,EACD,KAAK,OAAO,iBAAiB,WAAY,KAAK,SAAS,EAE/D,EACAA,EAAU,UAAU,aAAe,UAAY,CACvC,KAAK,SACL,KAAK,OAAO,oBAAoB,UAAW,KAAK,SAAS,EACzD,KAAK,OAAO,oBAAoB,YAAa,KAAK,WAAW,EAC7D,KAAK,OAAO,oBAAoB,aAAc,KAAK,SAAS,EAC5D,KAAK,OAAO,oBAAoB,YAAa,KAAK,YAAa,EAAI,EACnE,KAAK,OAAO,oBAAoB,WAAY,KAAK,SAAS,EAElE,EACAA,EAAU,UAAU,kBAAoB,UAAY,CAChD,GAAI,GAAC,KAAK,WAAa,CAAC,KAAK,QAG7B,KAAIoB,EAAgB,KAAK,OAAO,iBAAiB,KAAK,SAAS,EAC/D,KAAK,SAAS,CACV,MAAO,KAAK,MAAM,OAAS,KAAK,KAAK,MACrC,OAAQ,KAAK,MAAM,QAAU,KAAK,KAAK,OACvC,UAAWA,EAAc,YAAc,OAASA,EAAc,UAAY,MAC9E,CAAC,EACL,EACApB,EAAU,UAAU,qBAAuB,UAAY,CAC/C,KAAK,QACL,KAAK,aAAa,CAE1B,EACAA,EAAU,UAAU,yBAA2B,SAAUqB,EAASC,EAAM,CACpE,IAAIC,EAAY,KAAK,WAAa,KAAK,UAAUD,CAAI,EACrD,OAAO,KAAK,MAAMA,CAAI,IAAM,QACxB,KAAK,MAAM,SAASA,CAAI,IAAMD,IAC7B,OAAOE,EAAc,KAAeA,IAAc,QACjD,OACAF,CACV,EACArB,EAAU,UAAU,4BAA8B,SAAUR,EAAUC,EAAW,CAC7E,IAAI+B,EAAoB,KAAK,MAAM,kBAC/BC,EAAY,KAAK,MAAM,UACvBC,EAAmBF,GAAqBpD,GAAa,OAAQqD,CAAS,EACtEE,EAAoBH,GAAqBpD,GAAa,MAAOqD,CAAS,EACtEG,EACAC,EACJ,GAAI,KAAK,MAAM,SAAW,SAAU,CAChC,IAAIC,EAAW,KAAK,WAChBA,IACAF,EAAaF,EACP,KAAK,eAAiB,KAAK,WAC3BI,EAAS,aAAe,KAAK,WAAa,KAAK,eACrDD,EAAcF,EACR,KAAK,gBAAkB,KAAK,UAC5BG,EAAS,cAAgB,KAAK,UAAY,KAAK,cAE7D,MACS,KAAK,MAAM,SAAW,SACvB,KAAK,SACLF,EAAaF,EAAmB,KAAK,eAAiB,KAAK,OAAO,WAAa,KAAK,cACpFG,EAAcF,EAAoB,KAAK,gBAAkB,KAAK,OAAO,YAAc,KAAK,cAGvF,KAAK,MAAM,SAChBC,EAAaF,EACP,KAAK,eAAiB,KAAK,WAC3B,KAAK,MAAM,OAAO,aAAe,KAAK,WAAa,KAAK,eAC9DG,EAAcF,EACR,KAAK,gBAAkB,KAAK,UAC5B,KAAK,MAAM,OAAO,cAAgB,KAAK,UAAY,KAAK,eAElE,OAAIC,GAAc,OAAO,SAASA,CAAU,IACxCpC,EAAWA,GAAYA,EAAWoC,EAAapC,EAAWoC,GAE1DC,GAAe,OAAO,SAASA,CAAW,IAC1CpC,EAAYA,GAAaA,EAAYoC,EAAcpC,EAAYoC,GAE5D,CAAE,SAAUrC,EAAU,UAAWC,CAAU,CACtD,EACAO,EAAU,UAAU,8BAAgC,SAAU+B,EAASC,EAAS,CAC5E,IAAIC,EAAQ,KAAK,MAAM,OAAS,EAC5B/B,EAAKN,GAAgB,KAAK,MAAM,aAAe,CAAC,EAAGsC,EAAehC,EAAG,CAAC,EAAGiC,EAAejC,EAAG,CAAC,EAC5FC,EAAK,KAAK,MAAOsB,EAAYtB,EAAG,UAAWiC,EAAWjC,EAAG,SACzDC,EAAK,KAAK,MAAOiC,EAAkBjC,EAAG,gBAAiBkC,EAA6BlC,EAAG,2BAA4BmC,EAA4BnC,EAAG,0BAClJoC,EAAWJ,EAAS,MACpBK,EAAYL,EAAS,OACrBM,EAAcJ,GAA8B,EAC5CK,EAAaJ,GAA6B,EAC9C,OAAInE,GAAa,QAASqD,CAAS,IAC/Be,EAAWJ,EAAS,OAAUL,EAAUK,EAAS,GAAKF,EAAgBD,EAClEI,IACAI,GAAaD,EAAWG,GAAc,KAAK,MAAQD,IAGvDtE,GAAa,OAAQqD,CAAS,IAC9Be,EAAWJ,EAAS,OAAUL,EAAUK,EAAS,GAAKF,EAAgBD,EAClEI,IACAI,GAAaD,EAAWG,GAAc,KAAK,MAAQD,IAGvDtE,GAAa,SAAUqD,CAAS,IAChCgB,EAAYL,EAAS,QAAWJ,EAAUI,EAAS,GAAKD,EAAgBF,EACpEI,IACAG,GAAYC,EAAYC,GAAe,KAAK,MAAQC,IAGxDvE,GAAa,MAAOqD,CAAS,IAC7BgB,EAAYL,EAAS,QAAWJ,EAAUI,EAAS,GAAKD,EAAgBF,EACpEI,IACAG,GAAYC,EAAYC,GAAe,KAAK,MAAQC,IAGrD,CAAE,SAAUH,EAAU,UAAWC,CAAU,CACtD,EACAzC,EAAU,UAAU,gCAAkC,SAAUwC,EAAUC,EAAW1E,EAAKD,EAAK,CAC3F,IAAIoC,EAAK,KAAK,MAAOmC,EAAkBnC,EAAG,gBAAiBoC,EAA6BpC,EAAG,2BAA4BqC,EAA4BrC,EAAG,0BAClJ0C,EAAmB,OAAO9E,EAAI,MAAU,IAAc,GAAKA,EAAI,MAC/D+E,EAAmB,OAAO9E,EAAI,MAAU,KAAeA,EAAI,MAAQ,EAAIyE,EAAWzE,EAAI,MACtF+E,EAAoB,OAAOhF,EAAI,OAAW,IAAc,GAAKA,EAAI,OACjEiF,EAAoB,OAAOhF,EAAI,OAAW,KAAeA,EAAI,OAAS,EAAI0E,EAAY1E,EAAI,OAC1F2E,EAAcJ,GAA8B,EAC5CK,EAAaJ,GAA6B,EAC9C,GAAIF,EAAiB,CACjB,IAAIW,GAAiBF,EAAoBJ,GAAe,KAAK,MAAQC,EACjEM,GAAiBF,EAAoBL,GAAe,KAAK,MAAQC,EACjEO,GAAkBN,EAAmBD,GAAc,KAAK,MAAQD,EAChES,GAAkBN,EAAmBF,GAAc,KAAK,MAAQD,EAChEU,EAAiB,KAAK,IAAIR,EAAkBI,CAAa,EACzDK,EAAiB,KAAK,IAAIR,EAAkBI,CAAa,EACzDK,EAAkB,KAAK,IAAIR,EAAmBI,CAAc,EAC5DK,EAAkB,KAAK,IAAIR,EAAmBI,CAAc,EAChEX,EAAW3E,GAAM2E,EAAUY,EAAgBC,CAAc,EACzDZ,EAAY5E,GAAM4E,EAAWa,EAAiBC,CAAe,CACjE,MAEIf,EAAW3E,GAAM2E,EAAUI,EAAkBC,CAAgB,EAC7DJ,EAAY5E,GAAM4E,EAAWK,EAAmBC,CAAiB,EAErE,MAAO,CAAE,SAAUP,EAAU,UAAWC,CAAU,CACtD,EACAzC,EAAU,UAAU,sBAAwB,UAAY,CACpD,IAAIwD,EAAgB,GAAK,KAAK,MAAM,OAAS,GAE7C,GAAI,KAAK,MAAM,SAAW,SAAU,CAChC,IAAIC,EAAW,KAAK,WACpB,GAAIA,EAAU,CACV,IAAIC,EAAaD,EAAS,sBAAsB,EAChD,KAAK,WAAaC,EAAW,KAAOF,EACpC,KAAK,UAAYE,EAAW,IAAMF,CACtC,CACJ,CAEA,GAAI,KAAK,MAAM,QAAU,OAAO,KAAK,MAAM,QAAW,SAAU,CAC5D,IAAIG,EAAa,KAAK,MAAM,OAAO,sBAAsB,EACzD,KAAK,WAAaA,EAAW,KAAOH,EACpC,KAAK,UAAYG,EAAW,IAAMH,CACtC,CAEA,GAAI,KAAK,UAAW,CAChB,IAAItD,EAAK,KAAK,UAAU,sBAAsB,EAAG0D,EAAO1D,EAAG,KAAM2D,EAAQ3D,EAAG,IAAK4D,EAAQ5D,EAAG,MAAO6D,EAAS7D,EAAG,OAC/G,KAAK,cAAgB0D,EAAOJ,EAC5B,KAAK,eAAiBM,EAAQN,EAC9B,KAAK,aAAeK,EAAQL,EAC5B,KAAK,gBAAkBO,EAASP,CACpC,CACJ,EACAxD,EAAU,UAAU,cAAgB,SAAUjH,EAAO0I,EAAW,CAC5D,GAAI,GAAC,KAAK,WAAa,CAAC,KAAK,QAG7B,KAAIM,EAAU,EACVC,EAAU,EASd,GARIjJ,EAAM,aAAeyF,GAAazF,EAAM,WAAW,GACnDgJ,EAAUhJ,EAAM,YAAY,QAC5BiJ,EAAUjJ,EAAM,YAAY,SAEvBA,EAAM,aAAewF,GAAaxF,EAAM,WAAW,IACxDgJ,EAAUhJ,EAAM,YAAY,QAAQ,CAAC,EAAE,QACvCiJ,EAAUjJ,EAAM,YAAY,QAAQ,CAAC,EAAE,SAEvC,KAAK,MAAM,eACP,KAAK,UAAW,CAChB,IAAIiL,EAAc,KAAK,MAAM,cAAcjL,EAAO0I,EAAW,KAAK,SAAS,EAC3E,GAAIuC,IAAgB,GAChB,MAER,CAGA,KAAK,MAAM,OACP,OAAO,KAAK,MAAM,KAAK,OAAW,KAAe,KAAK,MAAM,KAAK,SAAW,KAAK,MAAM,QACvF,KAAK,SAAS,CAAE,OAAQ,KAAK,MAAM,KAAK,MAAO,CAAC,EAEhD,OAAO,KAAK,MAAM,KAAK,MAAU,KAAe,KAAK,MAAM,KAAK,QAAU,KAAK,MAAM,OACrF,KAAK,SAAS,CAAE,MAAO,KAAK,MAAM,KAAK,KAAM,CAAC,GAItD,KAAK,MACD,OAAO,KAAK,MAAM,iBAAoB,SAAW,KAAK,MAAM,gBAAkB,KAAK,KAAK,MAAQ,KAAK,KAAK,OAC9G,IAAIC,EACA7C,EAAgB,KAAK,OAAO,iBAAiB,KAAK,SAAS,EAC/D,GAAIA,EAAc,YAAc,OAAQ,CACpC,IAAI8C,EAAW,KAAK,WACpB,GAAIA,EAAU,CACV,IAAI7F,EAAM,KAAK,OAAO,iBAAiB6F,CAAQ,EAAE,cACjD,KAAK,QAAU7F,EAAI,WAAW,KAAK,EAAI,MAAQ,SAC/C4F,EAAY7C,EAAc,SAC9B,CACJ,CAEA,KAAK,sBAAsB,EAC3B,KAAK,WAAW,EAChB,IAAI+C,EAAQ,CACR,SAAU,CACN,EAAGpC,EACH,EAAGC,EACH,MAAO,KAAK,KAAK,MACjB,OAAQ,KAAK,KAAK,MACtB,EACA,WAAY,GACZ,gBAAiB,GAAS,GAAS,CAAC,EAAG,KAAK,MAAM,eAAe,EAAG,CAAE,OAAQ,KAAK,OAAO,iBAAiBjJ,EAAM,MAAM,EAAE,QAAU,MAAO,CAAC,EAC3I,UAAW0I,EACX,UAAWwC,CACf,EACA,KAAK,SAASE,CAAK,EACvB,EACAnE,EAAU,UAAU,YAAc,SAAUjH,EAAO,CAC/C,IAAI2E,EAAQ,KACZ,GAAI,GAAC,KAAK,MAAM,YAAc,CAAC,KAAK,WAAa,CAAC,KAAK,QAGvD,IAAI,KAAK,OAAO,YAAca,GAAaxF,CAAK,EAC5C,GAAI,CACAA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,CAC1B,MACU,CAEV,CAEJ,IAAImH,EAAK,KAAK,MAAOV,EAAWU,EAAG,SAAUT,EAAYS,EAAG,UAAWR,EAAWQ,EAAG,SAAUP,EAAYO,EAAG,UAC1G6B,EAAUxD,GAAaxF,CAAK,EAAIA,EAAM,QAAQ,CAAC,EAAE,QAAUA,EAAM,QACjEiJ,EAAUzD,GAAaxF,CAAK,EAAIA,EAAM,QAAQ,CAAC,EAAE,QAAUA,EAAM,QACjEoH,EAAK,KAAK,MAAOsB,EAAYtB,EAAG,UAAWiC,EAAWjC,EAAG,SAAUM,EAAQN,EAAG,MAAOO,EAASP,EAAG,OACjGhB,EAAa,KAAK,cAAc,EAChCpB,EAAMwB,GAAgBJ,EAAY,KAAK,OAAO,WAAY,KAAK,OAAO,YAAaK,EAAUC,EAAWC,EAAUC,CAAS,EAC/HH,EAAWzB,EAAI,SACf0B,EAAY1B,EAAI,UAChB2B,EAAW3B,EAAI,SACf4B,EAAY5B,EAAI,UAEhB,IAAIqC,EAAK,KAAK,8BAA8B2B,EAASC,CAAO,EAAGS,EAAYrC,EAAG,UAAWoC,EAAWpC,EAAG,SAEnGgE,EAAc,KAAK,4BAA4B5E,EAAUC,CAAS,EAClE,KAAK,MAAM,MAAQ,KAAK,MAAM,KAAK,IACnC+C,EAAW/D,GAAgB+D,EAAU,KAAK,MAAM,KAAK,EAAG,KAAK,MAAM,OAAO,GAE1E,KAAK,MAAM,MAAQ,KAAK,MAAM,KAAK,IACnCC,EAAYhE,GAAgBgE,EAAW,KAAK,MAAM,KAAK,EAAG,KAAK,MAAM,OAAO,GAGhF,IAAIpB,EAAU,KAAK,gCAAgCmB,EAAUC,EAAW,CAAE,MAAO2B,EAAY,SAAU,OAAQA,EAAY,SAAU,EAAG,CAAE,MAAO1E,EAAU,OAAQC,CAAU,CAAC,EAG9K,GAFA6C,EAAWnB,EAAQ,SACnBoB,EAAYpB,EAAQ,UAChB,KAAK,MAAM,KAAM,CACjB,IAAIgD,EAAerG,GAAKwE,EAAU,KAAK,MAAM,KAAK,CAAC,EAAG,KAAK,MAAM,QAAU,KAAK,MAAM,QAAQ,CAAC,EAAI,CAAC,EAChG8B,EAAgBtG,GAAKyE,EAAW,KAAK,MAAM,KAAK,CAAC,EAAG,KAAK,MAAM,QAAU,KAAK,MAAM,QAAQ,CAAC,EAAI,CAAC,EAClGzD,EAAM,KAAK,MAAM,SAAW,EAC5BuF,EAAIvF,IAAQ,GAAK,KAAK,IAAIqF,EAAe7B,CAAQ,GAAKxD,EAAMqF,EAAe7B,EAC3EgC,EAAIxF,IAAQ,GAAK,KAAK,IAAIsF,EAAgB7B,CAAS,GAAKzD,EAAMsF,EAAgB7B,EAClFD,EAAW+B,EACX9B,EAAY+B,CAChB,CACA,IAAIC,EAAQ,CACR,MAAOjC,EAAWJ,EAAS,MAC3B,OAAQK,EAAYL,EAAS,MACjC,EACA,GAAI3B,GAAS,OAAOA,GAAU,UAC1B,GAAIA,EAAM,SAAS,GAAG,EAAG,CACrB,IAAIQ,EAAWuB,EAAWrD,EAAW,MAAS,IAC9CqD,EAAWvB,EAAU,GACzB,SACSR,EAAM,SAAS,IAAI,EAAG,CAC3B,IAAIiE,GAAMlC,EAAW,KAAK,OAAO,WAAc,IAC/CA,EAAWkC,GAAK,IACpB,SACSjE,EAAM,SAAS,IAAI,EAAG,CAC3B,IAAIkE,GAAMnC,EAAW,KAAK,OAAO,YAAe,IAChDA,EAAWmC,GAAK,IACpB,EAEJ,GAAIjE,GAAU,OAAOA,GAAW,UAC5B,GAAIA,EAAO,SAAS,GAAG,EAAG,CACtB,IAAIO,EAAWwB,EAAYtD,EAAW,OAAU,IAChDsD,EAAYxB,EAAU,GAC1B,SACSP,EAAO,SAAS,IAAI,EAAG,CAC5B,IAAIgE,GAAMjC,EAAY,KAAK,OAAO,WAAc,IAChDA,EAAYiC,GAAK,IACrB,SACShE,EAAO,SAAS,IAAI,EAAG,CAC5B,IAAIiE,GAAMlC,EAAY,KAAK,OAAO,YAAe,IACjDA,EAAYkC,GAAK,IACrB,EAEJ,IAAIC,EAAW,CACX,MAAO,KAAK,yBAAyBpC,EAAU,OAAO,EACtD,OAAQ,KAAK,yBAAyBC,EAAW,QAAQ,CAC7D,EACI,KAAK,UAAY,MACjBmC,EAAS,UAAYA,EAAS,MAEzB,KAAK,UAAY,WACtBA,EAAS,UAAYA,EAAS,QAElC,IAAIC,EAAe,KAAK,MAAM,QAAUD,EAAS,MAC7CE,EAAgB,KAAK,MAAM,SAAWF,EAAS,OAC/CG,EAAkB,KAAK,MAAM,YAAcH,EAAS,UACpDI,EAAUH,GAAgBC,GAAiBC,EAC3CC,MAEA,cAAU,UAAY,CAClBtH,EAAM,SAASkH,CAAQ,CAC3B,CAAC,EAED,KAAK,MAAM,UACPI,GACA,KAAK,MAAM,SAASjM,EAAO0I,EAAW,KAAK,UAAWgD,CAAK,EAGvE,EACAzE,EAAU,UAAU,UAAY,SAAUjH,EAAO,CAC7C,IAAImH,EAAIC,EACJC,EAAK,KAAK,MAAO6E,EAAa7E,EAAG,WAAYqB,EAAYrB,EAAG,UAAWgC,EAAWhC,EAAG,SACzF,GAAI,GAAC6E,GAAc,CAAC,KAAK,WAGzB,KAAIR,EAAQ,CACR,MAAO,KAAK,KAAK,MAAQrC,EAAS,MAClC,OAAQ,KAAK,KAAK,OAASA,EAAS,MACxC,EACI,KAAK,MAAM,cACX,KAAK,MAAM,aAAarJ,EAAO0I,EAAW,KAAK,UAAWgD,CAAK,EAE/D,KAAK,MAAM,MACX,KAAK,SAAS,CAAE,OAAQvE,EAAK,KAAK,MAAM,KAAK,SAAW,MAAQA,IAAO,OAASA,EAAK,OAAQ,QAASC,EAAK,KAAK,MAAM,KAAK,UAAY,MAAQA,IAAO,OAASA,EAAK,MAAO,CAAC,EAEhL,KAAK,aAAa,EAClB,KAAK,SAAS,CACV,WAAY,GACZ,gBAAiB,GAAS,GAAS,CAAC,EAAG,KAAK,MAAM,eAAe,EAAG,CAAE,OAAQ,MAAO,CAAC,CAC1F,CAAC,EACL,EACAH,EAAU,UAAU,WAAa,SAAU/B,EAAM,CAC7C,IAAIiC,EAAIC,EACR,KAAK,SAAS,CAAE,OAAQD,EAAKjC,EAAK,SAAW,MAAQiC,IAAO,OAASA,EAAK,OAAQ,QAASC,EAAKlC,EAAK,UAAY,MAAQkC,IAAO,OAASA,EAAK,MAAO,CAAC,CAC1J,EACAH,EAAU,UAAU,cAAgB,SAAUkF,EAAY,CACtD,IAAIxH,EAAQ,KACRwC,EAAK,KAAK,MAAOiF,EAASjF,EAAG,OAAQkF,EAAelF,EAAG,aAAcmF,EAAgBnF,EAAG,cAAeoF,EAAqBpF,EAAG,mBAAoBqF,EAAqBrF,EAAG,mBAAoBsF,EAAkBtF,EAAG,gBACxN,GAAI,CAACiF,EACD,OAAO,KAEX,IAAIM,EAAWP,EACV,OAAO,SAAU7G,EAAK,CAAE,OAAO8G,EAAO9G,CAAG,IAAM,EAAO,CAAC,EACvD,IAAI,SAAUA,EAAK,CACpB,OAAI8G,EAAO9G,CAAG,IAAM,GACR,gBAAoBb,GAAS,CAAE,IAAKa,EAAK,UAAWA,EAAK,cAAeX,EAAM,cAAe,cAAe0H,GAAgBA,EAAa/G,CAAG,EAAG,UAAWgH,GAAiBA,EAAchH,CAAG,CAAE,EAAGmH,GAAmBA,EAAgBnH,CAAG,EAAImH,EAAgBnH,CAAG,EAAI,IAAI,EAE3Q,IACX,CAAC,EAED,OAAQ,gBAAoB,MAAO,CAAE,UAAWkH,EAAoB,MAAOD,CAAmB,EAAGG,CAAQ,CAC7G,EACAzF,EAAU,UAAU,OAAS,UAAY,CACrC,IAAItC,EAAQ,KACRgI,EAAe,OAAO,KAAK,KAAK,KAAK,EAAE,OAAO,SAAUC,EAAK5E,EAAK,CAClE,OAAIjB,GAAa,QAAQiB,CAAG,IAAM,KAGlC4E,EAAI5E,CAAG,EAAIrD,EAAM,MAAMqD,CAAG,GACnB4E,CACX,EAAG,CAAC,CAAC,EACDC,EAAQ,GAAS,GAAS,GAAS,CAAE,SAAU,WAAY,WAAY,KAAK,MAAM,WAAa,OAAS,MAAO,EAAG,KAAK,MAAM,KAAK,EAAG,KAAK,SAAS,EAAG,CAAE,SAAU,KAAK,MAAM,SAAU,UAAW,KAAK,MAAM,UAAW,SAAU,KAAK,MAAM,SAAU,UAAW,KAAK,MAAM,UAAW,UAAW,aAAc,WAAY,CAAE,CAAC,EAChU,KAAK,MAAM,YACXA,EAAM,UAAY,KAAK,MAAM,WAEjC,IAAIC,EAAU,KAAK,MAAM,IAAM,MAC/B,OAAQ,gBAAoBA,EAAS,GAAS,CAAE,MAAOD,EAAO,UAAW,KAAK,MAAM,SAAU,EAAGF,EAAc,CAG3G,IAAK,SAAUI,EAAG,CACVA,IACApI,EAAM,UAAYoI,EAE1B,CAAE,CAAC,EACH,KAAK,MAAM,YAAc,gBAAoB,MAAO,CAAE,MAAO,KAAK,MAAM,eAAgB,CAAC,EACzF,KAAK,cAAc,CAAC,UAAW,MAAO,WAAY,MAAM,CAAC,EACzD,KAAK,MAAM,SACX,KAAK,cAAc,CAAC,QAAS,aAAc,SAAU,aAAa,CAAC,CAAC,CAC5E,EACA9F,EAAU,aAAe,CACrB,GAAI,MACJ,cAAe,UAAY,CAAE,EAC7B,SAAU,UAAY,CAAE,EACxB,aAAc,UAAY,CAAE,EAC5B,OAAQ,CACJ,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,GACN,SAAU,GACV,YAAa,GACb,WAAY,GACZ,QAAS,EACb,EACA,MAAO,CAAC,EACR,KAAM,CAAC,EAAG,CAAC,EACX,QAAS,CAAC,EAAG,CAAC,EACd,gBAAiB,GACjB,0BAA2B,EAC3B,2BAA4B,EAC5B,MAAO,EACP,YAAa,EACb,QAAS,CACb,EACOA,CACX,EAAE,eAAmB,E,YChwBd,SAAS+F,GAAc9F,EAAc,CAC1C,KAAM,CAAE,SAAA+F,EAAU,SAAAC,EAAU,cAAAC,CAAc,EAAIjG,EACxCvE,KAAQ,MAAU,EAClBvB,KAAS,MAAW,EAAS,EAC7BgM,KAAa,MAAczK,CAAK,EAEhCgF,EAASwF,GAAiB,GAAGxK,EAAM,WAAW,iBAAiB,aAAa,KAElF,SACE,OAACsE,GAAA,CACC,aAAW,MAAG7F,EAAO,MAAOA,EAAO,UAAWA,EAAO,YAAY,EACjE,YAAa,CAAE,MAAO,OAAQ,OAAAuG,CAAO,EACrC,cAAe,CAAE,IAAKyF,EAAW,oBAAqB,EACtD,OAAQ,CACN,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,GACN,SAAU,GACV,YAAa,GACb,WAAY,GACZ,QAAS,EACX,EACA,UAAU,QACV,SAAAF,EAEC,SAAAD,CAAA,CACH,CAEJ,CAEA,MAAMI,GAAe1K,MAAyB;AAAA;AAAA,4BAElBA,EAAM,WAAW,iBAAiB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQrE,GAAaA,IAA0B,CAE3C,SAAO,OAAI,CACT,SAAU,qBACZ,CAAC,EACD,aAAW,OAAI,CACb,OAAQ,EACR,WAAYA,EAAM,OAAO,WAAW,QACpC,UAAW,aAAaA,EAAM,OAAO,OAAO,IAAI,GAChD,UAAWA,EAAM,QAAQ,GACzB,OAAQA,EAAM,OAAO,WACvB,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,EACT,CAACA,EAAM,YAAY,aAAa,eAAe,CAAC,EAAG,CACjD,UAAW,iBAAiB0K,GAAY1K,CAAK,CAAC,EAChD,CACF,CAAC,CACH,G,8MCvEI2K,GAAY,SAAUC,EAAK,CAM3B,IAAIpG,KAAKqG,GAAA,GAAY,CACjB,EAAG,EACH,EAAG,CACP,CAAC,EAAGpC,EAAQjE,EAAG,CAAC,EAAGsG,EAAWtG,EAAG,CAAC,EAClC,sBAAU,UAAY,CAClB,IAAIpH,EAAU,UAAY,CAClBwN,EAAI,SACJE,EAAS,CACL,EAAGF,EAAI,QAAQ,WACf,EAAGA,EAAI,QAAQ,SACnB,CAAC,CAET,EACA,OAAIA,EAAI,YACJ,OAAGA,EAAI,QAAS,SAAUxN,EAAS,CAC/B,QAAS,GACT,QAAS,EACb,CAAC,EAEE,UAAY,CACXwN,EAAI,YACJ,OAAIA,EAAI,QAAS,SAAUxN,CAAO,CAE1C,CACJ,EAAG,CAACwN,CAAG,CAAC,EACDnC,CACX,EACA,SAAekC,GCIFI,MAAwB,iBAAsD,MAAS,EAE7F,SAASC,GAA8B,CAAE,SAAAV,EAAU,oBAAAW,CAAoB,EAAuC,CACnH,KAAM,CAACC,EAAcC,CAAe,KAAI,YAA2C,CAAC,CAAC,EAC/EC,KAAqB,UAAwB,CAAC,CAAC,EAE/CC,KAA6B,eAAaC,GAAgB,CAE9D,MAAMC,EAAKD,EAAY,GACnBA,EAAY,MACZ,aAAS,GAAGA,EAAY,OAAO,IAAIA,EAAY,KAAK,IAAIA,EAAY,IAAI,GAAG,EAE/E,OAAAH,EAAiBK,GAAc,CAC7B,GAAIF,EAAY,QAAU,OAAQ,CAChC,MAAMG,EAAkBL,EAAmB,QAAQE,EAAY,OAAO,GAAK,CAAC,EAK5E,OAAIG,EAAgB,OAAS,GAC3BL,EAAmB,QAAQE,EAAY,OAAO,EAAE,QAASI,GAAS,CAC5DA,EAAK,OAAS,WAChBA,EAAK,IAAMJ,EAAY,IAE3B,CAAC,EAIHF,EAAmB,QAAQE,EAAY,OAAO,EAAI,CAAC,EAE9B,CACnB,GAAGE,EACH,CACE,GAAGF,EACH,GAAAC,EACA,SAAUE,CACZ,CACF,EAEoB,KAAKE,EAA8B,CACzD,CAEA,GAAIL,EAAY,QAAU,QAAS,CACjC,IAAIM,EAA4B,GAchC,GAXA,OAAO,KAAKR,EAAmB,OAAO,EAAE,QAAS/F,GAAQ,CAKvD,GAJ6B+F,EAAmB,QAAQ/F,CAAG,EAAE,KAC1DqG,GACCA,EAAK,QAAUJ,EAAY,OAASA,EAAY,OAAS,UAAYA,EAAY,UAAYI,EAAK,OACtG,EAC0B,CACxBE,EAA4B,GAC5B,MACF,CACF,CAAC,EAEGA,EACF,MAAO,CAAC,GAAGJ,CAAS,EAGtB,MAAMK,EAAcL,EAAU,UAC3BE,GAASA,EAAK,UAAYJ,EAAY,SAAWI,EAAK,QAAU,MACnE,EACA,GAAIG,IAAgB,GAKlB,OAJ8B,OAAO,KAAKT,EAAmB,OAAO,EAAE,KACnE/F,GAAQA,IAAQiG,EAAY,OAC/B,EAGEF,EAAmB,QAAQE,EAAY,OAAO,EAAE,KAAK,CACnD,GAAGA,EACH,GAAAC,CACF,CAAC,EAEDH,EAAmB,QAAQE,EAAY,OAAO,EAAI,CAChD,CACE,GAAGA,EACH,GAAAC,CACF,CACF,EAEK,CAAC,GAAGC,CAAS,EAGtB,MAAMM,EAAW,CAAC,GAAGN,CAAS,EACxB5G,EAAS,CAAE,GAAGkH,EAASD,CAAW,CAAE,EAIpCE,EAAuBnH,EAAO,UAAU,KAC3C8G,GACCA,EAAK,QAAUJ,EAAY,OAASA,EAAY,OAAS,UAAYA,EAAY,UAAYI,EAAK,OACtG,EAEA,GAAIK,GAAwBA,EAAqB,YAAcT,EAAY,UACzE,OAAA1G,EAAO,UAAU,IAAKoH,GAAU,CAC1BA,EAAM,QAAUD,GAAsB,QACxCC,EAAM,UAAYV,EAAY,UAElC,CAAC,EACM,CAAC,GAAGE,CAAS,EACf,GAAIO,EACT,MAAO,CAAC,GAAGP,CAAS,EAGtB,IAAIZ,EAAMU,EAAY,IAClBA,EAAY,OAAS,WACvBV,EAAMhG,EAAO,KAGf,IAAIqH,EAAkB,CAAC,CAAE,GAAGX,EAAa,GAAAC,EAAI,IAAAX,CAAI,EAAG,GAAIhG,EAAO,UAAY,CAAC,CAAE,EAE9E,OAAK0G,EAAY,aACfW,EAAkBC,GAAUD,CAAe,GAG7CH,EAASD,CAAW,EAAI,CACtB,GAAGjH,EACH,SAAUqH,CACZ,EAEOH,CACT,CAEA,MAAO,CAAC,GAAGN,CAAS,CACtB,CAAC,EAEMD,CACT,EAAG,CAAC,CAAC,EAECY,KAAa,eAAaZ,GAAe,CAC7CJ,EAAiBK,GACfA,EACG,OAAQE,GAASA,EAAK,KAAOH,CAAE,EAC/B,IAAKG,IACAA,EAAK,WACPA,EAAK,SAAWA,EAAK,SAAS,OAAQM,GAAUA,EAAM,KAAOT,CAAE,GAE1DG,EACR,CACL,CACF,EAAG,CAAC,CAAC,EAECU,KAAqB,eAAaN,GAA+C,CACrFX,EAAgBW,CAAQ,CAC1B,EAAG,CAAC,CAAC,EAECO,KAAa,eAAY,CAACd,EAAYe,IAAoE,CAC9GnB,EAAiBK,GACfA,EAAU,IAAKE,GACTA,EAAK,KAAOH,EACP,CACL,GAAGG,EACH,GAAGY,CACL,EAEKZ,CACR,CACH,CACF,EAAG,CAAC,CAAC,EAECa,KAAwB,eAC5B,CAACC,EAAiFC,IAA0B,CAC1GtB,EAAiBK,GAAc,CAC7B,MAAMkB,EAAWF,EAAehB,CAAS,EACzC,OAAKkB,EAGElB,EAAU,IAAKE,IAChBA,EAAK,KAAOgB,IACdhB,EAAK,SAAWA,EAAK,UAAU,OAAQM,GAAUA,EAAM,OAASS,CAAS,GAEpEf,EACR,EAPQF,CAQX,CAAC,CACH,EACA,CAAC,CACH,EAEA,sBAAU,IAAM,CACdL,EAAiBK,GAAc,CAC7B,MAAMM,EAAW,CAAC,GAAGN,CAAS,EAC9B,UAAWE,KAAQI,EAAU,CAC3B,MAAMa,EAAcT,GAAUR,EAAK,UAAY,CAAC,CAAC,EACjDA,EAAK,SAAWiB,CAClB,CACA,OAAOb,CACT,CAAC,CACH,EAAG,CAACb,CAAmB,CAAC,KAGtB,OAACF,GAAsB,SAAtB,CACC,MAAO,CAAE,aAAAG,EAAc,SAAAG,EAAU,WAAAc,EAAY,mBAAAC,EAAoB,sBAAAG,EAAuB,WAAAF,CAAW,EAElG,SAAA/B,CAAA,CACH,CAEJ,CAEA,SAASqB,GAA+BiB,EAAmCxL,EAAmC,CAC5G,GAAIwL,EAAE,KAAOxL,EAAE,IAAK,CAClB,MAAMyL,EAAOD,EAAE,IAAI,wBAAwBxL,EAAE,GAAG,EAChD,GAAIyL,IAAS,KAAK,4BAChB,MAAO,GACF,GAAIA,IAAS,KAAK,4BACvB,MAAO,EAEX,CACA,MAAO,EACT,CAEA,SAASX,GAAUhB,EAAkF,CACnG,KAAM,CAAC4B,EAAUC,CAAQ,EAAI7B,EAAa,OAGxC,CAACjB,EAAKyB,KACJA,EAAK,WAAazB,EAAI,CAAC,EAAE,KAAKyB,CAAI,EAAIzB,EAAI,CAAC,EAAE,KAAKyB,CAAI,EAC/CzB,GAET,CAAC,CAAC,EAAG,CAAC,CAAC,CACT,EAEA,OAAA8C,EAAS,KAAKpB,EAA8B,EAErC,CAAC,GAAGmB,EAAU,GAAGC,CAAQ,CAClC,CAEO,SAASC,IAA2B,CACzC,SAAO,cAAWjC,EAAqB,CACzC,C,eClPO,SAASkC,GAAyB,CACvC,uBAAAC,EACA,MAAAC,EACA,KAAAC,EACA,QAAAC,EACA,iBAAAC,EAAmB,SACnB,UAAAC,EACA,YAAAC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,EACA,eAAAC,EACA,UAAAC,EACA,gBAAAC,EACA,MAAAC,EACA,SAAAC,EACA,GAAGC,CACL,EAAkC,CAChC,MAAMjO,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,EAAO+N,CAAK,EAE/BG,KAAe,MAAGzP,EAAO,OAAQ8O,CAAS,EAE1CY,KAAU,UAAoB,IAAI,EAClC,CAACC,EAAeC,CAAgB,KAAI,YAAS,EAAK,KAExD,aAAU,IAAM,CACVF,EAAQ,SACVE,EAAiBF,EAAQ,SAAS,YAAcA,EAAQ,SAAS,WAAW,CAEhF,EAAG,CAAChB,CAAK,CAAC,EAEV,MAAMmB,KACJ,QAAC,OAAI,aAAW,MAAG7P,EAAO,gBAAiB+O,CAAW,EACnD,UAAAC,MACC,OAAC,UACC,UAAWhP,EAAO,eAClB,QAASqP,EACT,aAAW,uCACX,gBAAe,CAACJ,EAChB,gBAAeG,EAEf,mBAACU,GAAA,CAAY,KAAMb,EAAY,cAAgB,aAAc,EAC/D,KAEF,QAAC,UACC,aAAW,MAAGQ,EAAc,CAC1B,CAACzP,EAAO,MAAM,EAAGkP,EACjB,CAAClP,EAAO,cAAc,EAAGmP,CAC3B,CAAC,EACD,aAAYP,EACX,GAAGY,EAEJ,oBAACM,GAAA,CAAY,KAAAnB,CAAA,CAAY,EACxBD,MACC,OAAC,QAAK,UAAW1O,EAAO,cAAe,IAAK0P,EACzC,SAAAhB,CAAA,CACH,GAEJ,EACCa,MACC,OAACpQ,EAAA,IACC,QAAQ,cACR,UAAWa,EAAO,aAClB,KAAK,QACL,QAAS,IAAMuP,EAAS,EACxB,cAAY,qCACd,GAEJ,EAMF,OAFoBX,IAAY,CAACH,GAA0BkB,MAGzD,OAACtO,GAAA,EAAO,CAAC,QAASuN,EAAS,UAAWC,EACnC,SAAAgB,CAAA,CACH,EAEAA,CAEJ,CAEA,SAASC,GAAY,CAAE,KAAAnB,CAAK,EAAyC,CACnE,OAAKA,KAID,OAAWA,CAAI,KACV,OAACrN,GAAA,EAAI,CAAC,KAAMqN,EAAM,KAAM,KAAM,MAAOA,CAAA,CAAM,EAG7CA,EAPE,IAQX,CAEA,MAAM,GAAY,CAACpN,EAAsB+N,KAChC,CACL,mBAAiB,OAAI,CACnB,SAAU,WACV,QAAS,OACT,WAAY,SACZ,SAAU,EACV,IAAK/N,EAAM,QAAQ,GAAI,EACvB,MAAO,OACP,SAAU,QACZ,CAAC,EACD,UAAQ,OAAI,CACV,MAAO,8BACP,QAAS,OACT,WAAY,SACZ,OAAQA,EAAM,QAAQA,EAAM,WAAW,OAAO,EAAE,EAChD,IAAKA,EAAM,QAAQ,EAAG,EACtB,MAAOA,EAAM,OAAO,KAAK,UACzB,MAAO,OACP,WAAY,cACZ,SAAU,SACV,OAAQ,MACV,CAAC,EACD,kBAAgB,OAAI,CAClB,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,MAAOA,EAAM,QAAQ,CAAC,EACtB,OAAQA,EAAM,QAAQ,CAAC,EACvB,aAAcA,EAAM,MAAM,OAAO,QACjC,MAAOA,EAAM,OAAO,KAAK,UACzB,WAAY,cACZ,OAAQ,OACR,SAAU,SAEV,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,QACzB,WAAYA,EAAM,OAAO,UAAU,KACrC,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,WAAY,SACZ,SAAU,SACV,aAAc,WACd,SAAUA,EAAM,WAAW,UAAU,SACrC,WAAYA,EAAM,QAAQ,EAAG,CAC/B,CAAC,EACD,UAAQ,OAAI,CACV,gBAAiBA,EAAM,OAAO,WAAW,UACzC,qBAAsBA,EAAM,MAAM,OAAO,QACzC,wBAAyBA,EAAM,MAAM,OAAO,QAC5C,SAAU,WACV,OAAQA,EAAM,QAAQA,EAAM,WAAW,OAAO,EAAE,EAEhD,YAAa,CACX,gBAAiB+N,IAAU,OAAY,OAAS/N,EAAM,OAAO,UAAU,cACvE,gBAAiB+N,IAAU,OAAYA,EAAQ,OAC/C,aAAc/N,EAAM,MAAM,OAAO,QACjC,QAAS,MACT,QAAS,QACT,OAAQ,OACR,SAAU,WACV,UAAW,mBACX,MAAOA,EAAM,QAAQ,EAAG,EACxB,KAAM,KACR,CACF,CAAC,EACD,kBAAgB,OAAI,CAClB,gBAAiBA,EAAM,OAAO,WAAW,UACzC,qBAAsBA,EAAM,MAAM,OAAO,QACzC,wBAAyBA,EAAM,MAAM,OAAO,QAC5C,SAAU,WAEV,YAAa,CACX,gBAAiB+N,IAAU,OAAY,OAAS/N,EAAM,OAAO,UAAU,cACvE,gBAAiB+N,IAAU,OAAYA,EAAQ,OAC/C,aAAc/N,EAAM,MAAM,OAAO,QACjC,QAAS,MACT,QAAS,QACT,OAAQ,OACR,SAAU,WACV,UAAW,mBACX,MAAOA,EAAM,QAAQ,EAAG,EACxB,KAAM,KACR,CACF,CAAC,EACD,gBAAc,OAAI,CAChB,MAAOA,EAAM,QAAQ,CAAC,EACtB,OAAQA,EAAM,QAAQ,CAAC,EACvB,QAASA,EAAM,QAAQ,IAAM,GAAI,EACjC,YAAaA,EAAM,QAAQ,EAAG,CAChC,CAAC,CACH,GC7MF,SAASwO,GAAmB9C,EAAsC,CAChE,OAAOA,EAAK,UAAU,OAAQM,GAAUA,EAAM,OAAS,QAAQ,GAAK,CAAC,CACvE,CAIA,SAASyC,GACP/C,EACAgD,EACAC,EACAC,EACA,CACA,MAAMC,EAAmBH,IAAoBhD,EAAK,GAC5CoD,EAAkBH,IAAyBjD,EAAK,GAChDqD,EAAc,CAACH,EAAiBlD,EAAK,EAAE,EACvCsD,EAA6BR,GAAmB9C,CAAI,EAAE,OAAS,EAC/DuD,EAAiBC,GAAcxD,EAAMiD,CAAoB,GAAK,CAACC,EAAiBlD,EAAK,EAAE,EAE7F,OAAIsD,EACKD,IAAgBF,GAAoBI,GAEpCJ,GAAoBC,CAE/B,CAEO,MAAMK,GAAqC,CAChD,QAAS,yCACT,SAAU,yCACZ,EAEO,SAASC,GAAe,CAAE,SAAAC,EAAU,QAAAC,CAAQ,EAA2D,CAC5G,KAAM,CAACpC,EAAwBqC,CAA4B,KAAIC,GAAA,GAC7DC,GAAA,EAAM,QAAQN,GAAmC,SAAU,EAAI,CACjE,EACM1Q,KAAS,MAAW,GAAWyO,CAAsB,EACrDwC,KAAc,UAAOL,GAAY,IAAI,EACrC,CAAE,EAAGM,CAAe,EAAI,GAAUD,CAAW,EAC7C,CAAE,aAAAxE,CAAa,EAAI8B,GAAyB,GAAK,CAAE,aAAc,CAAC,CAAE,EACpE,CAAC0B,EAAiBkB,CAAkB,KAAI,YAAS1E,EAAa,CAAC,GAAG,EAAE,EACpE,CAACyD,EAAsBkB,CAAuB,KAAI,YAAS3E,EAAa,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,EAE7F4E,EAA2B5E,EAAa,KAC3CQ,GAASA,EAAK,UAAY,EAAEA,EAAK,kBAAoBA,EAAK,UAAU,SAAW,IAAMA,EAAK,SAAS,OAAS,CAC/G,EAEMqE,EAA+B7E,EAAa,KAAMQ,GAASA,EAAK,UAAU,KAAMM,GAAUA,EAAM,QAAQ,CAAC,EAEzG,CAAC4C,EAAkBoB,CAAmB,KAAI,YAAS,IAChD9E,EAAa,OAAO,CAACjB,EAAiCyB,KAC3DzB,EAAIyB,EAAK,EAAE,EAAI,CAAC,CAACA,EAAK,SACfzB,GACN,CAAC,CAAC,CACN,EAEKgG,EAAiB,CAACrF,EAAyBsF,EAAkB,IAAM,CACvE,IAAIC,EAAc,EACdC,EAAqCxF,EAEzC,GAAKwF,EAIL,IACED,GAAeC,GAAI,WAAa,EAChCA,EAAKA,GAAI,wBAAwB,YAAcA,EAAG,aAAe,aAC1DA,GAAMA,IAAOf,GAEtBA,GAAU,OAAO,CACf,IAAKc,EAAcD,EACnB,SAAU,QACZ,CAAC,EACH,EAEMG,EAAqB3E,GAAyC,CAClE,GAAIA,EAAK,QAAU,SAAWA,EAAK,OAAS,SAAU,CACpD,MAAM4E,EAAepF,EAAa,KAAMtG,GAC/BA,EAAO,UAAU,KAAMoH,GAAUA,EAAM,KAAON,EAAK,EAAE,CAC7D,EAEG4E,GACFL,EAAeK,EAAa,IAAKA,EAAa,eAAe,CAEjE,MACEL,EAAevE,EAAK,IAAKA,EAAK,eAAe,KAC7C,MAAkB,yCAA0C,CAC1D,KAAM,iBACN,KAAMA,EAAK,OACb,CAAC,CAEL,EAEM6E,EAAS,IAAM,CACnBd,GAAA,EAAM,IAAIN,GAAmC,SAAU,CAACjC,CAAsB,EAC9EqC,EAA6B,KAC7B,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAMrC,EAAyB,WAAa,QAC9C,CAAC,CACH,EAEMsD,EAAiBC,GAAmB,CACxCT,EAAqB7M,IAAU,CAC7B,GAAGA,EACH,CAACsN,CAAM,EAAG,CAACtN,EAAKsN,CAAM,CACxB,EAAE,KACF,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAO7B,EAAiB6B,CAAM,EAAiB,SAAb,UACpC,CAAC,CACH,EAEA,sBAAU,IAAM,CACd,IAAIC,EAEJ,UAAWhF,KAAQR,EAAc,CAC/B,IAAIyF,EAAMjF,GAAM,KAAK,sBAAsB,EAAE,IAGzCiF,GAAOA,GAAO,IAChBD,EAAahF,GAIf,MAAMkF,EAAcpC,GAAmB9C,CAAI,EAAE,KAAMM,GAAU,CAC3D,MAAM6E,EAAY7E,EAAM,iBAAmB,EAC3C,IAAI8E,EAAW9E,GAAO,KAAK,sBAAsB,EAAE,IACnD,OAAO8E,GAAYA,GAAYD,CACjC,CAAC,EAED,GAAID,GAAeG,GAAcrF,CAAI,EAAG,CACtCmE,EAAwBe,EAAY,EAAE,EACtChB,EAAmBlE,EAAK,EAAE,EAC1B,KACF,CAEA,GAAIgF,EAAY,CACdd,EAAmBc,EAAW,EAAE,EAChCb,EAAwB,MAAS,EACjC,KACF,CACF,CACF,EAAG,CAAC3E,EAAcyE,CAAc,CAAC,KAG/B,OAACqB,GAAA,EAAc,CAAC,UAAWvS,EAAO,QAAS,GAAI6Q,EAC7C,mBAAC2B,GAAA,EAAe,CACd,oBAAC,OAAI,UAAWxS,EAAO,QACrB,oBAACwO,GAAA,CACC,KAAM,mBACN,QAASC,EAAyB,mBAAqB,iBACvD,iBAAkBA,EAAyB,QAAU,SACrD,QAASqD,EACT,aAAW,MAAG9R,EAAO,2BAA4B,CAC/C,CAACA,EAAO,aAAa,EAAG,CAACyO,GAA0B,CAAC4C,CACtD,CAAC,EACD,gBAAe5C,CAAA,CACjB,EAEChC,EAAa,IAAKQ,MAEf,QAAC,WAAQ,CACP,oBAACuB,GAAA,CAEC,MAAOC,EAAyBxB,EAAK,MAAQ,OAC7C,uBAAAwB,EACA,aAAW,MAAGzO,EAAO,aAAc,CACjC,CAACA,EAAO,aAAa,EAAG,CAACyO,GAA0B,CAAC6C,EACpD,CAACtR,EAAO,kBAAkB,EAAGyQ,GAAcxD,EAAMiD,CAAoB,GAAK,CAACzB,CAC7E,CAAC,EACD,eAAa,MAAG,CACd,CAACzO,EAAO,UAAU,EAAG,CAACsS,GAAcrF,CAAI,GAAKoE,EAC7C,CAACrR,EAAO,kBAAkB,EACxByQ,GAAcxD,EAAMiD,CAAoB,GAAK,CAACzB,GAA0B0B,EAAiBlD,EAAK,EAAE,CACpG,CAAC,EACD,KAAMA,EAAK,KACX,QAAS,IAAM2E,EAAkB3E,CAAI,EACrC,QAASA,EAAK,MACd,YAAaqF,GAAcrF,CAAI,EAC/B,UAAW,CAACkD,EAAiBlD,EAAK,EAAE,EACpC,gBAAiB,IAAM8E,EAAc9E,EAAK,EAAE,EAC5C,SAAU+C,GAAe/C,EAAMgD,EAAiBC,EAAsBC,CAAgB,EACtF,UAAWlD,EAAK,GAChB,MAAOA,EAAK,OApBPA,EAAK,EAqBZ,KACA,OAAC,OAAI,GAAIA,EAAK,GAAI,cAAa,mBAAmBA,EAAK,EAAE,GACtD,SAAAA,EAAK,UACJqF,GAAcrF,CAAI,GAClBkD,EAAiBlD,EAAK,EAAE,GACxBA,EAAK,SAAS,IAAI,CAACM,EAAOvK,OACxB,QAAC,OAAmB,UAAWhD,EAAO,YACnC,UAAAyO,MACC,OAAC,OACC,aAAW,MAAGzO,EAAO,cAAe,CAClC,CAACA,EAAO,kBAAkB,EAAGgD,IAAM,EACnC,CAAChD,EAAO,iBAAiB,EAAGgD,KAAOiK,EAAK,UAAU,QAAU,GAAK,CACnE,CAAC,EACH,KAEF,OAACuB,GAAA,CAEC,MAAOC,EAAyBlB,EAAM,MAAQ,OAC9C,uBAAAkB,EACA,KAAMA,EAAyB,OAAYxB,EAAK,KAChD,aAAW,MAAGjN,EAAO,aAAc,CACjC,CAACA,EAAO,aAAa,EAAG,CAACyO,GAA0B,CAAC6C,EACpD,CAACtR,EAAO,kBAAkB,EACxByQ,GAAcxD,EAAMiD,CAAoB,GAAK,CAACzB,CAClD,CAAC,EACD,YAAazO,EAAO,YACpB,QAAUwD,GAAM,CACdoO,EAAkBrE,CAAK,EACvBA,EAAM,UAAU/J,CAAC,CACnB,EACA,QAAS+J,EAAM,MACf,SAAUyC,GAAezC,EAAO0C,EAAiBC,EAAsBC,CAAgB,EACvF,eAAgB5C,EAAM,UACtB,MAAOA,EAAM,MACb,SAAUA,EAAM,SAAW,IAAMA,EAAM,WAAWA,EAAM,EAAE,EAAI,QAlBzDA,EAAM,EAmBb,IA7BQA,EAAM,EA8BhB,CACD,EACL,IA7DaN,EAAK,EA8DpB,CAEH,GACH,EACF,EACF,CAEJ,CAEA,MAAM,GAAY,CAAC1L,EAAsBkR,KAChC,CACL,WAAS,OAAI,CACX,MAAO,UACP,SAAU,WACV,QAAS,OACT,eAAgB,SAChB,YAAalR,EAAM,QAAQ,CAAC,EAC5B,OAAQ,OACR,gBAAiBA,EAAM,OAAO,WAAW,QACzC,MAAOkR,EAAW,QAAU,OAC5B,SAAUA,EAAW,QAAU,MACjC,CAAC,EACD,WAAS,OAAI,CACX,MAAO,UACP,WAAYlR,EAAM,QAAQ,EAAG,EAC7B,IAAK,CACP,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,OACT,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,QACzB,eAAgB,WAClB,CACF,CAAC,EACD,8BAA4B,OAAI,CAC9B,UAAW,CACT,MAAOA,EAAM,OAAO,KAAK,OAC3B,EACA,UAAWkR,EAAW,iBAAmB,GACzC,YAAaA,EAAWlR,EAAM,QAAQ,EAAG,EAAI,MAC/C,CAAC,EACD,cAAY,OAAI,CACd,YAAaA,EAAM,QAAQ,CAAC,CAC9B,CAAC,EACD,eAAa,OAAI,CACf,YAAakR,EAAWlR,EAAM,QAAQ,CAAC,EAAIA,EAAM,QAAQ,IAAI,CAC/D,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,OAAQA,EAAM,QAAQ,CAAC,EACvB,WAAY,QACd,CAAC,EACD,iBAAe,OAAI,CACjB,SAAU,WACV,OAAQ,OACR,MAAOA,EAAM,QAAQ,GAAG,EACxB,YAAa,CACX,YAAa,aAAaA,EAAM,OAAO,OAAO,MAAM,GACpD,QAAS,KACT,OAAQ,OACR,KAAMA,EAAM,QAAQ,IAAI,EACxB,SAAU,WACV,UAAW,iBACb,CACF,CAAC,EACD,sBAAoB,OAAI,CACtB,YAAa,CACX,IAAKA,EAAM,QAAQ,CAAC,EACpB,OAAQ,eAAeA,EAAM,QAAQ,CAAC,CAAC,GACzC,CACF,CAAC,EACD,qBAAmB,OAAI,CACrB,YAAa,CACX,OAAQ,eAAeA,EAAM,QAAQ,CAAC,CAAC,GACzC,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,eAAgB,QAClB,CAAC,EACD,sBAAoB,OAAI,CACtB,gBAAiBA,EAAM,OAAO,WAAW,SAC3C,CAAC,CACH,GAGF,SAAS+Q,GAAcrF,EAA+C,CACpE,MAAO,CAAC,EAAEA,EAAK,UAAYA,EAAK,SAAS,OAAS,IAAM,CAACA,EAAK,kBAAoBA,EAAK,SAAS,SAAW,GAC7G,CAEA,SAASwD,GAAcxD,EAAsCiD,EAA0C,CACrG,OAAOjD,EAAK,UAAU,KAAMM,GAAUA,EAAM,KAAO2C,CAAoB,CACzE,CChRO,SAASwC,GAAmB,CACjC,QAAA7B,EACA,MAAAnC,EACA,KAAAC,EACA,gBAAAgE,EACA,SAAA9G,EACA,UAAAiD,EACA,MAAA8D,EAAQ,OACR,iBAAAC,EACA,KAAAC,EAAO,iBACP,QAAAC,CACF,EAA4B,CAC1B,KAAM,CAAE,SAAAnG,EAAU,WAAAc,CAAW,EAAIa,GAAyB,GAAK,CAAC,EAC1DpC,KAAM,UAAO,IAAI,EAEvB,sBAAU,IAAM,CACd,GAAI,CAACS,GAAY,CAACc,EAChB,OAIF,MAAMZ,EAAKF,EAAS,CAClB,QAAAiE,EACA,MAAAnC,EACA,KAAAC,EACA,IAAKxC,EAAI,QACT,gBAAAwG,EACA,MAAAC,EACA,iBAAAC,EACA,KAAAC,CACF,CAAC,EAGD,MAAO,IAAMpF,EAAWZ,CAAE,CAC5B,EAAG,CAAC+D,EAASnC,EAAOC,EAAMgE,EAAiBC,EAAOC,EAAkBjG,EAAUc,EAAYoF,EAAMC,CAAO,CAAC,KAGtG,OAAC,OAAI,UAAAjE,EAAsB,IAAA3C,EACxB,SAAAN,CAAA,CACH,CAEJ,C,kMClEA,MAAMmH,GAAmB,CAAC,CAAE,MAAAC,EAAO,YAAAC,CAAY,OAC7C,QAAC9R,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,aACpD,oBAAC+R,GAAA,EAAK,CAAE,SAAAF,CAAA,CAAM,KACd,OAAC5R,GAAA,EAAO,CAAC,QAAS6R,EAChB,mBAAC5R,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,IAAK,GACrC,GACF,EAGW8R,GAAoC,CAAC,CAChD,OAAArU,EACA,SAAAE,EACA,UAAAoU,EACA,qBAAAC,CACF,IAA8C,CAC5C,KAAM,CAACC,EAAcC,CAAe,KAAI,YAA6B,MAAS,EACxE,CAACC,EAAoBC,CAAqB,KAAI,YAAqB,CAAC,CAAC,EACrE,CAACC,EAAeC,CAAgB,KAAI,YAAyB,CACjE,gBAAiB,CAAE,KAAM,EAAM,EAC/B,kBAAmB,CAAE,KAAM,EAAM,CACnC,CAAC,EACK,CAACC,EAAYC,CAAa,KAAI,YAAS,EAAK,EAC5C,CAACC,EAAaC,CAAc,KAAI,YAAS,EAAK,EAC9C,CAAE,UAAAC,EAAW,QAAAC,EAAS,SAAAtH,EAAU,MAAAuH,CAAM,KAAI,OAAsC,CACpF,iBAAe,WAAQ,IAAM,CAC3B,GAAIb,EAAsB,CACxB,MAAMc,EAAaf,EAAUC,GAAsB,KAAM,EACzDE,EAAgBY,CAAU,EACtBd,GAAsB,YACxBQ,EAAc,EAAI,EAEpB,MAAMO,KAA4B,OAA6Bf,GAAsB,IAAK,EAC1FM,EAAiB,CACf,gBAAiBS,EAA0B,gBAC3C,kBAAmBA,EAA0B,iBAC/C,CAAC,EAED,MAAMZ,KAAqB,MACzB,CACE,KAAMH,GAAsB,KAC5B,WAAYA,GAAsB,WAClC,SAAUA,GAAsB,QAClC,EACAc,GAAc,GACdd,GAAsB,KACxB,EACA,OAAAI,EAAsB,CAAE,GAAGD,CAAmB,CAAC,EAC/CO,EAAe,EAAI,EACZ,CACL,KAAMV,GAAsB,KAC5B,MAAOA,GAAsB,MAC7B,SAAUA,GAAsB,SAChC,WAAYA,GAAsB,UACpC,CACF,KACE,OAEJ,EAAG,CAACD,EAAWC,CAAoB,CAAC,CACtC,CAAC,EACKxG,KAAK,SAAM,EAEjB,sBAAU,IAAM,CACd,MAAMwH,EAAeH,EAAOI,GAAe,CACzC,MAAMC,EAAaD,EAAW,WAC9B,IAAIE,EAAoB,GACxB,GAAID,IAAe,OAAW,CAC5BC,EAAoB,GACpB,GAAI,CACF,IAAI,OAAOD,CAAU,CACvB,MAAY,CACVC,EAAoB,EACtB,CACF,MACEA,EAAoB,CAACd,EAAc,kBAAkB,KAEvDG,EAAcW,CAAiB,EAC/B,IAAIC,EAAY,CAAC,EACjB,GAAIH,EAAW,KAAM,CACnB,MAAMd,KAAqB,MACzB,CACE,KAAMc,EAAW,KACjB,WAAYE,EAAoBD,EAAa,GAC7C,SAAUD,EAAW,QACvB,EACAlB,EAAUkB,EAAW,KAAM,GAAK,GAChCA,EAAW,KACb,EAEAG,EAAY,OAAO,KAAKjB,CAAkB,EAC1CC,EAAsBgB,EAAU,OAAS,EAAI,CAAE,GAAGjB,CAAmB,EAAI,CAAC,CAAC,CAC7E,CAEIiB,EAAU,SAAW,GAAK,CAACD,EAC7BT,EAAe,EAAK,EAEpBA,EAAe,EAAI,CAEvB,CAAC,EACD,MAAO,IAAMM,EAAa,YAAY,CACxC,EAAG,CAACjB,EAAWM,EAAc,kBAAkB,KAAMQ,CAAK,CAAC,KAGzD,QAACjV,GAAA,GACC,OAAQ,GACR,MAAO,GAAGoU,EAAuB,OAAS,KAAK,kBAC/C,UAAWrU,EACX,aAAW,OAAI,CAAE,MAAO,OAAQ,CAAC,EAEjC,oBAAC,KAAE,yIAGH,KACA,OAAC0V,GAAA,EAAK,CAAC,MAAM,QACX,mBAAC,OACC,QAAAT,EACA,OAAQ,CAAC,CAAE,MAAO,CAAE,SAAAU,EAAU,IAAAzI,EAAK,GAAG0I,CAAM,CAAE,OAC5C,OAACC,GAAA,IACE,GAAGD,EACJ,SAAWhO,GAAU,CACfA,EAAM,QACR+N,EAAS/N,EAAM,KAAK,EACpB2M,EAAgBH,EAAUxM,EAAM,KAAK,CAAC,EAE1C,EACA,QAAS,OAAO,QAAQwM,CAAS,EAAE,IAAK0B,IAC/B,CAAE,MAAOA,EAAM,CAAC,EAAG,MAAOA,EAAM,CAAC,CAAE,EAC3C,EACD,aAAW,QACb,EAEF,KAAM,QACR,EACF,EAECxB,MACC,oBACE,oBAAC,OACC,mBAAC,MACC,gBAAiBA,EACjB,YAAa,CAACM,EAAcI,EAAU,YAAY,GAAK,GAAM,EAAE,EAC/D,WAAY,GACd,EACF,KACA,OAACU,GAAA,EAAK,CAAC,MAAM,OACX,mBAAC,OACC,QAAAT,EACA,OAAQ,CAAC,CAAE,MAAO,CAAE,SAAAU,EAAU,IAAAzI,EAAK,GAAG0I,CAAM,CAAE,OAC5C,OAACC,GAAA,IACE,GAAGD,EACJ,SAAWhO,GAAU,CACnB+N,EAAS/N,EAAM,KAAK,EACpB,MAAMwN,KAA4B,OAA6BxN,EAAM,KAAM,EAC3E+M,EAAiB,CACf,gBAAiBS,EAA0B,gBAC3C,kBAAmBA,EAA0B,iBAC/C,CAAC,CACH,EACA,WAAS,OAAoB,EAC7B,aAAW,OACb,EAEF,KAAM,OACR,EACF,EACCV,EAAc,kBAAkB,SAC/B,OAACgB,GAAA,GACC,MACEhB,EAAc,kBAAkB,YAC9B,OAACX,GAAA,CAAiB,MAAM,aAAa,YAAaW,EAAc,kBAAkB,SAAU,EAE5F,aAGJ,QAAS,GAAG7G,CAAE,cACd,SAAU6G,EAAc,kBAAkB,SAE1C,mBAACqB,GAAA,EAAK,CAAE,GAAGpI,EAAS,YAAY,EAAG,GAAI,GAAGE,CAAE,cAAe,EAC7D,EAED6G,EAAc,gBAAgB,SAC7B,OAACgB,GAAA,GACC,MACEhB,EAAc,gBAAgB,YAC5B,OAACX,GAAA,CAAiB,MAAM,gBAAgB,YAAaW,EAAc,gBAAgB,SAAU,EAE7F,gBAGJ,QAAS,GAAG7G,CAAE,YAEd,mBAACkI,GAAA,EAAK,CAAE,GAAGpI,EAAS,UAAU,EAAG,GAAI,GAAGE,CAAE,YAAa,EACzD,EAED,OAAO,QAAQ2G,CAAkB,EAAE,OAAS,MAC3C,oBAAE,qEAEA,OAAC,OACE,gBAAO,QAAQA,CAAkB,EAAE,IAAKsB,GAChC,MAAOA,EAAM,CAAC,CAAC,OAAQA,EAAM,CAAC,GAAG,KAAK;AAAA,CAC9C,EACH,GACF,GAEJ,KAEF,QAAC7V,GAAA,EAAM,UAAN,CACC,oBAACC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAASF,EAAU,KAAK,UAAU,kBAE9D,KACA,OAACE,EAAA,GAAM,CAAC,QAAQ,UAAU,QAAS,IAAMJ,EAAOkV,EAAU,CAAC,EAAG,SAAU,CAACF,EACtE,SAAAT,EAAuB,sBAAwB,oCAClD,GACF,GACF,CAEJ,EC1Ma2B,GAAoB,CAAC,CAAE,UAAAxU,EAAW,aAAAyU,CAAa,IAAa,CACvE,MAAMnV,KAAW,eAAY,EACvBC,KAAS,MAAW,EAAS,EAC7BF,KAAQ,eAAY,IAAW,EAC/BqV,EAAY,OAAO,OAAOrV,CAAK,EAC/B,CAAE,MAAOsV,EAAc,QAASC,CAAa,KAAIC,GAAA,GACrD,SAAY,QAAM,OAAqBH,EAAU,CAAC,EAAIA,EAAU,CAAC,CAAE,EACnE,CACEA,EAAU,CAAC,GAAG,mBACdA,EAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,WACzBA,EAAU,CAAC,GAAG,mBACdA,EAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,UAC3B,CACF,EAEM,CAAE,SAAAvI,EAAU,MAAAuH,EAAO,UAAAF,EAAW,SAAAsB,CAAS,KAAI,OAAoB,EAC/D,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAA4BC,CAA6B,KAAI,YAAS,EAAK,EAC5E,CAACC,EAAiBC,CAAkB,KAAI,YAAyC,CAAC,CAAC,EACnF,CAACC,EAAyBC,CAA0B,KAAI,YAA6B,MAAS,EAC9F/V,KAAqB,eAAY,IAAwB,EACzD4M,KAAK,SAAM,EAGjB,sBAAU,KACR/M,KAAS,MAA+B,CAAE,QAAS,EAAK,CAAC,CAAC,EACnD,IAAM,CACXA,KAAS,MAA+B,CAAE,QAAS,EAAM,CAAC,CAAC,CAC7D,GACC,CAACA,CAAQ,CAAC,KAEb,aAAU,IAAM,CAEZ,CAACsV,GACDD,IAAiB,QACjB,CAAClV,GAAoB,kBACrB+T,EAAU,OAAO,IAAM,IAEvBsB,EAAS,QAASH,CAAY,CAElC,EAAG,CAAClV,GAAoB,iBAAkBkV,EAAcnB,EAAWoB,EAAcE,CAAQ,CAAC,KAE1F,aAAU,IAAM,CACd,MAAMjB,EAAeH,EAAOtN,GAAU,CACpC,IAAIqP,EAAQhW,GAAoB,kBAAoB,GAChDiW,EAActP,EAAM,aAAe,GACnC,CAACqP,IAAUrP,EAAM,QAAUuO,GAAgBe,IAAgB,IAC7DD,EAAQ,GACCA,GAASrP,EAAM,QAAUuO,GAAgBe,EAAY,KAAK,IAAM,KACzED,EAAQ,IAEVnW,KACE,MAA+B,CAAE,MAAO8G,EAAM,MAAO,YAAaA,EAAM,YAAa,iBAAkBqP,CAAM,CAAC,CAChH,CACF,CAAC,EACD,MAAO,IAAM5B,EAAa,YAAY,CACxC,EAAG,CAACpU,GAAoB,iBAAkBkV,EAAcrV,EAAUoU,CAAK,CAAC,KAExE,aAAU,IAAM,CACd,MAAM+B,EACJ,CAAChW,GAAoB,kBAAoB4V,EAAgB,OAAS,EAAI,GAAO5V,GAAoB,iBACnGH,KAAS,MAA+B,CAAE,gBAAA+V,EAAkC,iBAAkBI,CAAM,CAAC,CAAC,EACtG,IAAIE,EAA0C,CAAC,EAC/CN,EAAgB,QAASO,GAAmB,CAC1C,MAAM5C,KAAqB,MACzB,CACE,KAAM4C,EAAe,KACrB,WAAYA,EAAe,WAC3B,SAAUA,EAAe,QAC3B,EACAnB,EAAa,KAAKmB,EAAe,KAAM,EACvCA,EAAe,KACjB,EAEA,OAAO,KAAK5C,CAAkB,EAAE,QAAS7M,GAAQ,CAC/CwP,EAAgBxP,CAAG,EAAI6M,EAAmB7M,CAAG,GAAG,KAClD,CAAC,CACH,CAAC,EAED7G,KACE,OAA4B,CAC1B,UAAAU,EACA,4BAA6B,CAC3B,YAAayU,EAAa,YAC1B,SAAUA,EAAa,SACvB,KAAM,CAAE,GAAGA,EAAa,SAAU,GAAGkB,CAAgB,CACvD,CACF,CAAC,CACH,CAEF,EAAG,CAACrW,EAAU+V,CAAe,CAAC,KAG5B,oBACG,UAAAF,MACC,OAACxC,GAAA,CACC,SAAU,IAAM,CACd6C,EAA2B,MAAS,EACpCJ,EAA8B,EAAK,CACrC,EACA,OAASQ,GAAiD,CACxD,GAAIL,IAA4B,OAAW,CACzC,MAAMM,EAAsB,CAAC,GAAGR,CAAe,EAC/CQ,EAAoBN,CAAuB,EAAIK,EAC/CN,EAAmBO,CAAmB,EACtCL,EAA2B,MAAS,CACtC,MACEF,EAAmB,CAAC,GAAGD,EAAiBO,CAAc,CAAC,EAEzDR,EAA8B,EAAK,CACrC,EACA,UAAWX,EAAa,SACxB,qBACEc,IAA4B,OAAYF,EAAgBE,CAAuB,EAAI,OAEvF,KAEF,QAACO,GAAA,EAAK,CAAC,MAAM,sBAAsB,SAAS,OAAO,wDACT,OAAC,QAAM,SAAArB,EAAa,YAAY,EAAO,8EAE/E,OAAC,OACE,gBAAO,QAAQA,EAAa,IAAI,EAAE,IAAKH,GAC/B,MAAOA,EAAM,CAAC,CAAC,OAAQA,EAAM,CAAC,CAAC;AAAA,CACvC,EACH,KACA,QAACyB,GAAA,GACC,YAAW,GACX,OAAQhB,EACR,SAAU,IAAM,CACdC,EAAmB,CAACD,CAAe,CACrC,EACA,SACE,QAACpU,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,SAAS,gCAE5D,CAACoU,GAAmB,CAACH,MACpB,OAAC,QAAK,UAAWrV,EAAO,qBAAuB,mBAAUiU,EAAU,OAAO,GAAKmB,CAAY,GAAG,GAElG,EAGF,oBAACT,GAAA,EAAK,CAAC,MAAM,QAAQ,QAAS,GAAG7H,CAAE,SACjC,mBAACkI,GAAA,GACE,GAAGpI,EAAS,OAAO,EACpB,GAAI,GAAGE,CAAE,SACT,OAAQ,IAAM,CACRmH,EAAU,OAAO,IAAM,IAAMmB,IAAiB,QAChDG,EAAS,QAASH,CAAY,CAElC,EACF,EACF,KACA,OAACT,GAAA,EAAK,CAAC,MAAM,cAAc,QAAS,GAAG7H,CAAE,eACvC,mBAACkI,GAAA,EAAK,CAAE,GAAGpI,EAAS,aAAa,EAAG,GAAI,GAAGE,CAAE,eAAgB,EAC/D,GACF,KACA,QAAC0J,GAAA,GACC,YAAW,GACX,OAAQd,EACR,SAAU,IAAM,CACdC,EAAmB,CAACD,CAAe,CACrC,EACA,SACE,QAACtU,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,KAAK,OAAO,WAAW,SAAS,+BAE7D,OAACC,GAAA,EAAO,CAAC,QAAQ,yEACf,mBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,IAAK,GACrC,GACF,EAGF,oBAACnC,EAAA,IACC,QAAQ,YACR,KAAK,UACL,QAAS,IAAM,CACb0W,EAA8B,EAAI,CACpC,EACA,UAAW7V,EAAO,qBACnB,8BAED,EACC8V,EAAgB,IAAI,CAACO,EAAgBrT,IAAM,CAC1C,KAAM,CAAE,KAAA8P,EAAM,MAAA+B,EAAO,WAAAL,EAAY,SAAAiC,CAAS,EAAIJ,EACxCK,GAAgB,EACnBD,GAAY,IAAI,OAAS,EAAI,kBAAkBA,CAAQ,GAAK,QAC5DjC,GAAc,IAAI,OAAS,KAC1B,oBAAE,4BACY,OAAC,QAAM,SAAAA,CAAA,CAAW,GAChC,EACE,MACN,EAAE,OAAQ9O,IAAQA,EAAG,EACrB,SACE,QAACiR,GAAA,EAAI,CACH,qBAACA,GAAA,EAAK,QAAL,CACE,UAAA9B,EAAM,KAAG/B,CAAA,EACZ,EACC4D,GAAc,OAAS,MACtB,OAACC,GAAA,EAAK,KAAL,CAAU,UAAW3W,EAAO,mBAAqB,SAAA0W,EAAA,CAAc,KAElE,QAACC,GAAA,EAAK,iBAAL,CACC,oBAACC,GAAA,GAEC,KAAK,OACL,aAAW,sBACX,QAAS,IAAM,CACbX,EAA2BjT,CAAC,EAC5B6S,EAA8B,EAAI,CACpC,GANI,MAON,KACA,OAACgB,GAAA,GACC,aAAW,wBACX,UAAW,IAAMd,EAAmBD,EAAgB,OAAO,CAACgB,GAAGC,IAAQ/T,IAAM+T,CAAG,CAAC,EACjF,eAAc,GAChB,GACF,IAtBS,SAAS/T,CAAC,EAuBrB,CAEJ,CAAC,GACH,GACF,GACF,CAEJ,EAEM,GAAazB,IACV,CACL,wBAAsB,OAAI,CACxB,WAAYA,EAAM,QAAQ,CAAC,EAC3B,GAAGA,EAAM,WAAW,UACpB,UAAW,QACb,CAAC,EACD,wBAAsB,OAAI,CACxB,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,sBAAoB,OAAI,CACtB,WAAY,UACd,CAAC,CACH,G,gECjQK,SAASyV,GAAgB,CAC9B,MAAA1Q,EACA,OAAAC,EACA,SAAA0Q,EACA,MAAAjN,EACA,SAAAkN,EACA,OAAAC,EACA,UAAAC,EACA,YAAAC,EACA,SAAAC,CACF,EAAU,CACR,MAAMC,KAAS,OAAmBL,CAAQ,EAIpCM,EAA6B,CACjC,yBAH4BC,GAAA,GAAgCJ,EAAaD,CAAS,EAIlF,SAAAE,EACA,YAAa,SACf,EAEA,SACE,OAACI,GAAA,GAAoB,CAAC,MAAOF,EAC3B,mBAACG,GAAA,GAAW,CAAC,MAAOJ,EAAO,KAAM,MAAAjR,EAAc,OAAAC,EAAgB,aAAcyD,EAC1E,UAAC/E,EAAYC,OACZ,OAAC0S,GAAA,GACC,KAAM,CAAE,OAAQT,EAAQ,MAAAnN,EAAc,UAAAoN,CAAU,EAChD,SAAAF,EACA,MAAM,GACN,MAAOjS,EACP,OAAQC,EACR,SAAA+R,CAAA,CACF,EAEJ,EACF,CAEJ,C,wLClDO,SAASY,GAAe/R,EAA4B,CACzD,KAAM,CAAE,QAAAiN,EAAS,SAAA+E,CAAS,EAAIhS,EAExBiS,EAAmB,IAAM,CAC7B,KAAM,CAAE,SAAAD,CAAS,EAAIhS,EACf8I,EAAUkJ,EAAW,mBAAqB,oCAChD,SAAO,mBAAG,SAAAlJ,CAAA,CAAQ,CACpB,EAEA,SACE,OAACvN,GAAA,EAAO,CAAC,QAAS0W,EAAkB,UAAU,SAC5C,mBAACC,GAAA,GACC,KAAK,OACL,QAASF,EAAW,SAAW,SAC/B,aAAYA,EAAW,eAAiB,iBACxC,QAAA/E,CAAA,CACF,EACF,CAEJ,CCFO,MAAMkF,WAA4B,WAAiB,CAAnD,kCACL,sBAAoB3Q,GAAsB,CACxC,KAAM,CAAE,MAAA4Q,EAAO,aAAAC,EAAc,SAAAlB,CAAS,EAAI,KAAK,MACzC,CAAE,KAAAmB,EAAM,GAAAC,CAAG,KAAI,OAAoB/Q,EAAW4Q,CAAK,EACnDI,EAAgB,CACpB,QAAM,OAAoBrB,EAAUmB,CAAI,EACxC,MAAI,OAAoBnB,EAAUoB,CAAE,CACtC,EAEAF,EAAaG,CAAa,CAC5B,EAEA,mBAAgB,IAAM,KAAK,iBAAiB,CAAC,EAC7C,gBAAa,IAAM,KAAK,iBAAiB,EAAE,EAE3C,wBAAsBlB,GAAyB,CAC7C,MAAMmB,EAAe,gBAAsBnB,EAAU,IAAI,IAAI,EAAIA,EAAU,IAAI,KAAOA,EAAU,KAC1FoB,EAAa,gBAAsBpB,EAAU,IAAI,EAAE,EAAIA,EAAU,IAAI,GAAKA,EAAU,GAE1F,KAAK,MAAM,aAAa,CACtB,KAAMmB,EACN,GAAIC,CACN,CAAC,KAED,MAAkB,iDAAkD,CAClE,cAAeD,EACf,YAAaC,CACf,CAAC,CACH,EAEA,YAAS,IAAM,CACb,KAAM,CAAE,MAAAN,EAAO,aAAAC,EAAc,SAAAlB,CAAS,EAAI,KAAK,MACzC,CAAE,KAAAmB,EAAM,GAAAC,CAAG,KAAI,OAAmBH,EAAO,CAAC,EAC1CI,EAAgB,CACpB,QAAM,OAAoBrB,EAAUmB,CAAI,EACxC,MAAI,OAAoBnB,EAAUoB,CAAE,CACtC,EAEAF,EAAaG,CAAa,CAC5B,EAEA,QAAS,CACP,KAAM,CACJ,MAAAJ,EACA,SAAAjB,EACA,qBAAAwB,EACA,SAAAxW,EACA,YAAAyW,EACA,iBAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,6BAAAC,CACF,EAAI,KAAK,MACHC,EAAiB9W,KAAW,OAAC4V,GAAc,CAAC,QAASc,EAAkB,SAAUD,CAAA,CAAa,EAAK,OACnGM,EAAwB,CAC5B,MAAOd,EACP,SAAAjB,EACA,qBAAAwB,EACA,eAAgB,KAAK,WACrB,cAAe,KAAK,cACpB,OAAQ,KAAK,OACb,SAAAG,CACF,EAEA,SACE,OAACK,GAAA,GACC,WAAU,GACT,GAAGD,EACJ,eAAAD,EACA,SAAUL,EACV,cAAezW,EAAW,OAAO,WAAa,EAAI,OAClD,SAAU,KAAK,mBACf,iBAAA4W,EACA,6BAAAC,CAAA,CACF,CAEJ,CACF,C,gBCrFO,SAASI,GAAepT,EAA4B,CACzD,MAAMqT,KAAgB,UAAO,IAAI,EAC3B,CAAE,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,OAAAC,EAAQ,SAAAC,EAAU,KAAAC,EAAM,SAAAxX,CAAS,EAAI6D,EAC7D4T,EAAgBH,GAAU,CAACC,EAAW,SAAW,SACjDG,EAAcJ,EAAUC,EAAWF,EAASD,EAASD,EAE3D,SACE,QAACQ,GAAA,EAAW,CACV,oBAACvY,GAAA,GACC,QAASkY,GAAU,CAACC,KAAW,mBAAE,iCAAqB,KAAM,mBAAE,uCAA2B,EACzF,UAAU,SAEV,mBAACxB,GAAA,GACC,SAAU/V,EACV,QAASyX,EACT,KAAM,CAACH,GAAUC,EAAW,OAAS,QACrC,QAASG,EAER,SAAAJ,GAAUC,EAAW,SAAW,OACnC,EACF,KAEA,OAACK,GAAA,GACC,aAAc,GACd,cAAe,GACf,QAAS,IACT,GAAIN,EACJ,WAAY,CACV,MAAO,GAAO,gBACd,YAAa,GAAO,sBACpB,KAAM,GAAO,eACb,WAAY,GAAO,oBACrB,EACA,QAASJ,EAET,mBAAC9X,GAAA,EAAO,CAAC,WAAS,mBAAE,yCAA6B,EAAK,UAAU,SAC9D,mBAAC2W,GAAA,EAAa,CAAC,IAAKmB,EAAe,QAASO,EAAe,QAASD,EAAM,KAAK,cAAe,GAChG,EACF,GACF,CAEJ,CAEA,MAAM,GAAS,CACb,mBAAiB,OAAI,CACnB,MAAO,kBACP,MAAO,EACP,QAAS,EACT,SAAU,QACZ,CAAC,EACD,yBAAuB,OAAI,CACzB,MAAO,wBACP,QAAS,EACT,MAAO,MACT,CAAC,EACD,kBAAgB,OAAI,CAClB,MAAO,iBACP,MAAO,OACP,QAAS,EACT,SAAU,QACZ,CAAC,EACD,wBAAsB,OAAI,CACxB,MAAO,uBACP,QAAS,EACT,MAAO,CACT,CAAC,CACH,E,4BChFA,MAAMK,GAA8B,gCAE7B,SAASC,GAAwBC,EAAe,IACrD,MAAkBF,GAA6B,CAC7C,KAAM,uBACN,KAAME,EAAO,OAAS,OACxB,CAAC,CACH,CAEO,SAASC,GAAqCC,EAAwB,IAC3E,MAAkBJ,GAA6B,CAC7C,KAAM,+BACN,KAAMI,CACR,CAAC,CACH,CAEO,SAASC,IAAoD,IAClE,MAAkBL,GAA6B,CAC7C,KAAM,qCACN,KAAM,MACR,CAAC,CACH,CAEO,SAASM,GAAiCF,EAAwB,IACvE,MAAkBJ,GAA6B,CAC7C,KAAM,2BACN,KAAMI,CACR,CAAC,CACH,CAEO,SAASG,IAA8B,IAC5C,MAAkBP,GAA6B,CAC7C,KAAM,cACR,CAAC,CACH,CAEO,SAASQ,GAA0BJ,EAAwB,IAChE,MAAkBJ,GAA6B,CAC7C,KAAM,YACN,KAAMI,CACR,CAAC,CACH,CAEO,SAASK,IAAwC,IACtD,MAAkBT,GAA6B,CAC7C,KAAM,yBACR,CAAC,CACH,CAEO,SAASU,IAAoC,IAClD,MAAkBV,GAA6B,CAC7C,KAAM,mBACR,CAAC,CACH,CChDO,IAAKW,IAAAA,IACVA,EAAA,aAAe,gBACfA,EAAA,YAAc,gBACdA,EAAA,QAAU,UACVA,EAAA,SAAW,WAJDA,IAAAA,IAAA,IAeL,MAAMC,MAAuB,iBAAuC,CACzE,YAAa,OACb,eAAgB,IAAM,CAAC,EACvB,sBAAuB,GACvB,aAAc,GACd,gBAAiB,IAAM,CAAC,CAC1B,CAAC,EAEM,SAASC,IAA0B,CACxC,SAAO,cAAWD,EAAoB,CACxC,CAEO,SAASE,GAA6B,CAAE,SAAA/O,CAAS,EAAsB,CAC5E,MAAMgP,EAAwBtY,EAAA,EAAO,eAAe,eAAiB,GAC/D,CAACuY,EAAaC,CAAc,KAAI,YACpCF,EAAwB,gBAAoB,MAC9C,EACM,CAACG,EAAcC,CAAe,KAAI,YAAkB,EAAK,EAEzDC,KAAW,eAAY,IAAyB,EAEtD,sBAAU,IAAM,CACVA,GAAY,CAACL,GACfE,EAAeG,EAAS,qBAAuB,UAAe,eAAgB,CAElF,EAAG,CAACA,EAAUH,EAAgBF,CAAqB,CAAC,KAGlD,OAACH,GAAqB,SAArB,CACC,MAAO,CACL,sBAAAG,EACA,YAAAC,EACA,eAAAC,EACA,aAAAC,EACA,gBAAAC,CACF,EAEC,SAAApP,CAAA,CACH,CAEJ,CC5DO,MAAMsP,GAAO,CAClB,gBAAc,KAAE,qCAAsC,eAAe,EACrE,gBAAc,KAAE,qCAAsC,eAAe,CACvE,ECSO,SAASC,GAAsB,CAAE,QAAAC,CAAQ,EAAU,CACxD,KAAM,CAAE,YAAAP,EAAa,eAAAC,EAAgB,sBAAAF,EAAuB,aAAAG,EAAc,gBAAAC,CAAgB,EACxFN,GAAwB,EAEpB3a,KAAS,MAAW,EAAS,EAEnC,GAAI,CAAC6a,EACH,OAGF,SAAS/I,EAAOwJ,EAAW,CACzBA,IAAQb,GAAK,cAAgBV,GAAwB,CAACiB,CAAY,EAElED,EAAeO,CAAG,EAClBL,EAAgB,EAAK,EACrBA,EAAgB,EAAI,CACtB,CAEA,MAAMM,KACJ,QAACC,GAAA,EAAI,CACH,oBAACA,GAAA,EAAK,KAAL,CAAU,MAAOL,GAAK,aAAc,QAAS,IAAMrJ,EAAO2I,GAAK,YAAY,EAAG,KAC/E,OAACe,GAAA,EAAK,KAAL,CAAU,MAAOL,GAAK,aAAc,QAAS,IAAMrJ,EAAO2I,GAAK,WAAW,EAAG,GAChF,EAGF,SACE,QAACb,GAAA,EAAW,CACV,oBAAC5B,GAAA,GACC,KAAK,OACL,QAASgD,EAAe,SAAW,SACnC,QAAS,IAAM,CACbC,EAAgB,CAACD,CAAY,EAC7BF,IAAgBL,GAAK,cAAgBV,GAAwB,CAACiB,CAAY,CAC5E,EACA,aAAYF,EAEX,SAAAO,IAAY,OAASP,EAAc,OACtC,EACCE,KACC,OAAC7b,EAAA,IACC,UAAWa,EAAO,MAClB,QAAQ,YACR,KAAK,QACL,QAAS,IAAM,CACbib,EAAgB,EAAK,EACrBH,IAAgBL,GAAK,cAAgBV,GAAwB,EAAK,CACpE,EACD,KAED,OAAC0B,GAAA,EAAQ,CAAC,QAASF,EACjB,mBAACvD,GAAA,EAAa,CAAC,UAAWhY,EAAO,OAAQ,QAAQ,SAAS,KAAK,YAAa,GAC9E,GAEJ,CAEJ,CAEA,MAAM,GAAY,KAAO,CACvB,UAAQ,OAAI,CAAE,MAAO,MAAO,CAAC,EAE7B,SAAO,OAAI,CAAE,MAAO,OAAQ,QAAS,CAAE,SAAU,WAAY,KAAM,CAAE,CAAE,CAAC,CAC1E,G,mDC/CA,MAAM0b,GAAqC,CACzC,IAAK,YACL,SAAO,KAAE,sCAAuC,oBAAoB,EACpE,KAAM,YACN,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,EAEO,SAASC,IAAsB,CACpC,MAAM7b,KAAQ,eAAY,IAAW,EAC/B,CAAC8b,EAAQC,CAAS,KAAI,YAAS,EAAK,EACpC,CAACC,EAAcC,CAAe,KAAI,YAASL,EAAW,EACtDM,EAAa,CAACC,EAAkBC,EAAkBC,IAAiB,CACnEF,MACF,OAAuBE,GAAO,IAAO,SAAS,IAAI,KAClD,MAAkB,yCAA0C,CAAE,eAAgBD,CAAQ,CAAC,OAEvF,OACEC,IAAQ,OACJ,GAAG,OAAO,SAAS,QAAQ,KAAK,OAAO,SAAS,IAAI,GAAG5Z,EAAA,EAAO,SAAS,GAAG4Z,CAAG,GAC7E,IAAO,SAAS,IACtB,KACA,MAAkB,oCAAqC,CAAE,eAAgBD,CAAQ,CAAC,EAEtF,EAEME,EAAoC,CACxC,CACE,IAAK,SACL,SAAO,KAAE,6CAA8C,kBAAkB,EACzE,MAAO,CACL,CACE,IAAK,sBACL,KAAM,OACN,SAAO,KAAE,sCAAuC,oBAAoB,EACpE,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,EACA,CACE,IAAK,YACL,KAAM,OACN,SAAO,KAAE,4BAA6B,UAAU,EAChD,OAAQ,IAAG,GACX,QAAS,GACT,QAAS,EACX,CACF,CACF,EACA,CACE,IAAK,WACL,SAAO,KAAE,+CAAgD,oDAAoD,EAC7G,MAAO,CACL,CACE,IAAK,2BACL,KAAM,aACN,SAAO,KAAE,+CAAgD,6BAA6B,EACtF,QAAS,GACT,OAAQ,OACC,OAAqBtc,CAAK,EAEnC,QAAS,EACX,EACA,CACE,IAAK,qBACL,KAAM,aACN,SAAO,KAAE,qCAAsC,mBAAmB,EAClE,QAAS,GACT,OAAQ,OACC,OAAqBA,CAAK,EAEnC,QAAS,EACX,CACF,CACF,CACF,EAEMuc,KACJ,OAACb,GAAA,EAAI,CACF,SAAAY,EAAY,IAAKE,MAEd,OAACC,GAAA,EAAS,CAAuB,MAAOD,EAAY,MACjD,SAAAA,EAAY,MAAM,IAAKE,MAEpB,OAAChB,GAAA,EAAK,KAAL,CAEC,MAAOgB,EAAO,MACd,KAAMA,EAAO,KACb,QAAS,IAAM,CACb,MAAML,EAAMK,EAAO,OAAO,EAC1BR,EAAWQ,EAAO,QAASA,EAAO,QAASL,CAAG,EAC9CJ,EAAgBS,CAAM,CACxB,GAPKA,EAAO,GAQd,CAEH,GAdaF,EAAY,GAe5B,CAEH,EACH,EAIF,SACE,OAACG,GAAA,EAAgB,CACf,oBAACrb,GAAA,EAAK,CAAC,IAAK,EAAG,UAAU,MAAM,WAAW,SAAS,KAAK,SACtD,oBAAC4W,GAAA,GACC,QAAS8D,EAAa,MACtB,KAAMA,EAAa,KACnB,SAAU,GACV,OAAQ,GACR,QAAS,IAAM,CACb,MAAMK,EAAML,EAAa,OAAO,EAChCE,EAAWF,EAAa,QAASA,EAAa,QAASK,CAAG,CAC5D,EACA,gBAAY,KAAE,sCAAuC,oBAAoB,EAC3E,KACA,OAACV,GAAA,EAAQ,CAAC,QAASY,EAAa,UAAU,aAAa,gBAAiBR,EACtE,mBAAC7D,GAAA,GACC,OAAQ,GACR,OAAA4D,EACA,gBAAY,KAAE,2CAA4C,wBAAwB,EACpF,EACF,GACF,EACF,CAEJ,C,oDC9IA,MAAMc,MAAiB,QAAK,IAC1B,gCAA2B,KAAK,CAAC,CAAE,eAAAA,CAAe,KAAO,CAAE,QAASA,CAAe,EAAE,CACvF,EAOO,SAASC,GAAsB7W,EAAmC,CACvE,KAAM,CAAE,UAAArF,CAAU,EAAIqF,EAChB,CAAC8W,EAAmBC,CAAoB,KAAI,YAA0C,EACtF,CAACjB,EAAQC,CAAS,KAAI,YAAkB,EAAK,EAC7CiB,EAAUC,GAAyBjX,CAAK,EACxC,CAAE,MAAAkX,CAAM,KAAIC,GAAA,GAAe,CAC/B,iBAAkB,KAAsB,qBACxC,QAAAH,EACA,eAAgB,CAClB,CAAC,EACKI,KAAoB,MAAuBzc,CAAS,EACpD0c,KAAkB,eAAYD,CAAiB,GAAG,SAAS,OAIjE,GAAIF,EAAM,QAAU,EAKlB,OAHE,MAAW,cAAc,sBAAoB,gBAAgB,GAC7D,MAAW,cAAc,sBAAoB,eAAe,KAO5D,OAAC,WAAQ,CAAC,SAAU,KAClB,mBAACN,GAAA,CAAe,UAAAjc,CAAA,CAAsB,EACxC,EANO,KAUX,MAAM8a,KAAO,OAAC6B,GAAA,EAAyB,CAAC,WAAYJ,EAAO,SAAUH,CAAA,CAAsB,EAE3F,SACE,oBACE,oBAACpB,GAAA,EAAQ,CAAC,gBAAiBI,EAAW,UAAU,eAAe,QAASN,EACtE,mBAACvD,GAAA,EAAa,CAAC,aAAW,MAAM,SAAU,CAASmF,EAAkB,QAAQ,SAAS,OAAAvB,EAAgB,eAEtG,EACF,EACC,CAAC,CAACgB,GAAqB,CAAC,CAACA,EAAkB,SAC1C,OAACS,GAAA,GACC,KAAMT,EAAkB,KACxB,MAAOA,EAAkB,MACzB,UAAW,IAAMC,EAAqB,MAAS,EACjD,GAEJ,CAEJ,CAWA,SAASE,GAAyBjX,EAA6C,CAC7E,KAAM,CAAE,UAAArF,EAAW,SAAAwW,CAAS,EAAInR,EAE1BwX,KADuB,eAAY,IAAwB,GACV,YAAc,GAC/D,CAAE,QAAAC,EAAS,cAAAC,EAAe,MAAAtF,CAAM,KAAI,kBAAY,MAAuBzX,CAAS,CAAC,EACjFgd,KAAa,kBAAY,MAAmBhd,CAAS,CAAC,EAEtDid,EAAiBH,EAAQ,IAAKvb,GAAUA,GAAO,YAAY,GAAG,EAAE,OAAQ2b,GAAQA,IAAQ,MAAS,EACjGC,EAAe,CAAC,GAAG,IAAI,IAAIF,CAAc,CAAC,EAAE,OAC5Cxb,EAAuB,MAAW,cAAc,sBAAoB,gBAAgB,EAE1F,SAAO,WAAQ,KACN,CACL,UAAAzB,EACA,QAAS8c,EACT,KAAMC,EACN,UAAWtF,EAAM,IACjB,YAAU,MAAY,CAAE,SAAAjB,CAAS,CAAC,EAClC,yBACE1U,EAAA,EAAO,eAAe,eAAiB,IACvCL,GACA,CAACob,GACDG,GACAG,IAAiB,CACrB,GACC,CACDnd,EACA8c,EACAC,EACAtF,EAAM,IACNjB,EACA/U,EACAob,EACAG,EACAG,CACF,CAAC,CACH,C,gBC3GO,SAASC,GAAoBpd,EAAmB,CACrD,MAAMV,KAAW,eAAY,EAEvBsZ,KAAQ,eAAY,IAAM,CAC9BtZ,KAAS,MAAqB,CAAE,UAAAU,EAAW,SAAU,EAAK,CAAC,CAAC,CAC9D,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAElBuZ,KAAS,eAAY,IAAM,CAC/BvZ,KAAS,MAAqB,CAAE,UAAAU,EAAW,SAAU,EAAM,CAAC,CAAC,CAC/D,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAElB0Z,KAAO,eAAY,IAAM,CAI7BJ,EAAM,EAINtZ,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAiBqd,GAAA,GAAc,UAAU,KAAM,CAAC,CAAC,EAC7F/d,KAAS,MAAW,CAAE,UAAAU,CAAU,CAAC,CAAC,CACpC,EAAG,CAACA,EAAWV,EAAUsZ,CAAK,CAAC,EAEzBD,KAAQ,eAAY,IAAM,CAC9BrZ,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAiBqd,GAAA,GAAc,WAAW,KAAM,CAAC,CAAC,CAChG,EAAG,CAACrd,EAAWV,CAAQ,CAAC,EAElBge,KAAQ,eAAY,IAAM,CAC9Bhe,KAAS,MAAU,CAAE,UAAAU,CAAU,CAAC,CAAC,CACnC,EAAG,CAACA,EAAWV,CAAQ,CAAC,EAExB,MAAO,CACL,MAAAsZ,EACA,OAAAC,EACA,KAAAG,EACA,MAAAL,EACA,MAAA2E,CACF,CACF,CAUO,SAASC,GAAiBlY,EAAc,CAC7C,MAAMmY,EAAWJ,GAAoB/X,EAAM,SAAS,EACpD,OAAOA,EAAM,SAASmY,CAAQ,CAChC,CClBA,MAAM,GAAY,CAAC1c,EAAsBU,KAAuB,CAC9D,cAAY,OAAI,CACd,cAAe,CACb,UAAW,gBACb,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,QAAS,OACT,eAAgB,SAChB,YAAaV,EAAM,QAAQ,EAAG,EAC9B,MAAOU,GAAYV,EAAM,QAAQ,CAAC,CACpC,CAAC,CACH,GASO,SAAS2c,GAAe,CAAE,UAAAzd,EAAW,aAAA0X,EAAc,uBAAAgG,EAAwB,qBAAAC,CAAqB,EAAU,CAC/G,MAAMre,KAAW,OAAY,EACvBkC,KAAW,OAAY,IAAO,EAC9BjC,KAAS,MAAW,GAAWiC,CAAQ,EAEvCgV,KAAW,OAAajN,MAAsB,MAAYA,EAAM,IAAI,CAAC,EACrEyO,KAAuB,OAAazO,MAAsB,MAAwBA,EAAM,IAAI,CAAC,EAC7F,CAAE,gBAAAqU,EAAiB,mBAAAC,EAAoB,MAAApG,EAAO,OAAAqB,EAAQ,SAAAC,EAAU,YAAAd,CAAY,KAAI,OACnF1O,IAAuB,CACtB,MAAG,SAAKA,EAAM,QAAQ,MAAMvJ,CAAS,EAAI,kBAAmB,qBAAsB,QAAS,SAAU,UAAU,EAC/G,YAAauJ,EAAM,QAAQ,WAC7B,GACA,eACF,EACMuU,KAAU,UAAY,MAAuB9d,CAAS,CAAC,EACvD+d,KAAe,OAAaxU,GAAsBA,EAAM,QAAQ,kBAAoBvJ,CAAS,EAC7Fge,KAAsB,OAAazU,GAAU/H,GAAY+H,EAAM,QAAQ,MAAMvJ,CAAS,EAAG,eAAiB,IAAI,EAC9Gie,KAA4B,OAC/B1U,GAAUA,EAAM,QAAQ,MAAMvJ,CAAS,EAAG,gBAAkBwB,EAAW,IAAM,IAChF,EAEMnC,KAAQ,OAAY,IAAkB,EACtCI,KAAqB,OAAY,IAAwB,EACzDod,EAA2Bpd,GAAoB,YAAc,GAC7Dud,KAAa,UAAY,MAAmBhd,CAAS,CAAC,EACtDke,EAAiBpc,EAAA,EAAO,eAAe,aAEvCqc,KAAwB,WAC5B,IAAOnB,GAAce,GAAkB,CAACf,GAAc,CAACe,EACvD,CAACf,EAAYe,CAAY,CAC3B,EAEMK,EAAqBN,KACvB,KAAE,wCAAyC,QAAQ,KACnD,KAAE,qCAAsC,WAAW,EAEjDO,EAAqB,MAAOC,GAA2C,CACtEzB,EAGCpd,GAAoB,kBAAoBA,GAAoB,iBAE9DH,KACE,MAA+B,CAC7B,UAAW,GACX,kBAAmB,CACjB,UAAAU,EACA,OAAQ,MAAuC,kBAC/C,oBAAqBse,EAAW,IAChC,aAActB,CAChB,CACF,CAAC,CACH,GAGIA,GACF3d,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,CACF,CAAC,EAGHb,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAYse,EAAW,IAAK,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,GA5BxGhf,KAAS,OAAiB,CAAE,UAAAU,EAAW,WAAYse,EAAW,IAAK,QAAS,CAAE,cAAe,EAAK,CAAE,CAAC,CAAC,CA+B1G,EAEMC,EAAa,CAACT,EAAU,KAEnBxe,EADLwe,KACc,MAAc9d,CAAS,KAEvB,MAAW,CAAE,UAAAA,CAAU,CAAC,CAFA,EAMtCoY,EAAoBoG,GAAqBlf,KAAS,OAAyBkf,CAAQ,CAAC,EAEpFC,EAAkB,IAAM,CAC5Bnf,KAAS,MAAU,CAAC,KACpB,MAAkB,oCAAqC,CAAE,OAAQ,MAAO,CAAC,CAC3E,EAEMof,GAAmB,IAAM,CACzB7B,EACEpd,GAAoB,kBAAoBA,GAAoB,iBAE9DH,KACE,MAA+B,CAC7B,UAAW,GACX,kBAAmB,CACjB,UAAAU,EACA,OAAQ,MAAuC,WAC/C,aAAcgd,CAChB,CACF,CAAC,CACH,GAGA3d,EAAM,QAASc,GAAS,CACtBb,KACE,OAA4B,CAC1B,UAAWa,EAAK,CAAC,EACjB,4BAA6B,MAC/B,CAAC,CACH,CACF,CAAC,EACDb,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,IAGvDV,KAAS,MAAWU,CAAS,CAAC,KAC9B,MAAkB,mCAAmC,EAEzD,EAEM2e,GAAgB,IAAM,CAExBrf,EADEye,KACO,MAAqB,KAErB,MAAmB,CAAE,UAAA/d,CAAU,CAAC,CAFV,CAInC,EAEMkY,EAAmB,IAAM,CAC7B5Y,KAAS,OAAUU,CAAS,CAAC,CAC/B,EAEMqY,EAAgCuG,GACpCtf,KAAS,OAAqCsf,CAAoB,CAAC,EAE/DC,EAA2BjB,GAA4B,CAC3Dte,KAAS,OAAsB,CAAE,UAAAU,EAAW,gBAAA4d,CAAgB,CAAC,CAAC,CAChE,EAEMkB,EAAgB,IAAC,OAAC5D,GAAmB,GAAK,OAAQ,KAAI,OAAC,OAAI,MAAO,CAAE,KAAM,CAAE,GAAO,SAAU,CAAE,EAErG,SACE,QAAC,OACE,UAAA0C,MAAmB,OAACmB,GAAA,EAAW,CAAC,KAAMR,EAAY,SAAUX,EAAiB,QAAAE,CAAA,CAAkB,EAC/F,CAACI,MACA,OAAC,OACC,mBAACc,GAAA,EAAe,CAAC,QAASF,CAAA,CAAe,EAC3C,KAEF,OAACG,GAAA,GACC,gBAAY,KAAE,6BAA8B,iBAAiB,EAC7D,UAAW,IACT,OAAC1H,GAAA,GAEC,QAAQ,SACR,QAAQ,kBACR,KAAK,cACL,SAAU/V,EACV,QAASkc,EACT,gBAAeC,EACf,gBAAeA,EAAuB,4BAA8B,OACpE,UAAWpe,EAAO,cACnB,oBATK,iBAWN,KACA,OAAC2f,GAAA,GAEC,MAAO,CAACrC,EACR,SAAUwB,EACV,QAASR,GAAoB,OAAO,EACpC,cAAeI,EACf,MAAOA,EAA4B,EAAI,QALlC,GAAGje,CAAS,YAMnB,EACAke,MAAkB,OAAChD,GAAmB,GAAK,OAAQ,CACrD,EAAE,OAAO,OAAO,EAChB,mBAAkB,GAEjB,aACC,OAACP,GAAqB,CAAoB,QAASnZ,EAAW,UAAY,QAA/C,cAAuD,EACjFA,KAYC,QAAC2X,GAAA,EAAW,CACV,oBAAC5B,GAAA,GACC,QAAQ,SACR,QACEwG,KACI,KAAE,+BAAgC,aAAa,KAC/C,KAAE,8BAA+B,YAAY,EAEnD,QAASY,GACT,KAAMZ,EAAe,mBAAqB,oBAC1C,SAAU,GACV,aAAW,MAAGI,GAAyB5e,EAAO,UAAU,EAC1D,KACA,OAACgY,GAAA,GACC,WAAS,KAAE,sCAAuC,kBAAkB,EACpE,QAASmH,GACT,KAAK,QACL,QAAQ,SAER,mBAAC,KAAK,CAAC,QAAQ,8BAA8B,mBAAO,EACtD,IApBe,gBAqBjB,KAhCA,OAACnH,GAAA,GACC,QAAQ,SAER,WAAS,KAAE,gCAAiC,gBAAgB,EAC5D,QAASkH,EACT,KAAK,UACL,SAAU3F,EAEV,mBAAC,KAAK,CAAC,QAAQ,8BAA8B,iBAAK,GAN9C,OAON,KAyBF,OAACoD,GAAqB,CAA+B,UAAAlc,EAAsB,SAAAwW,CAAA,EAAhD,yBAAoE,EAC/F,CAACsC,MACC,OAACtB,GAAA,CAEC,UAAAxX,EACA,MAAAyX,EACA,SAAAjB,EACA,qBAAAwB,EACA,aAAAN,EACA,SAAAlW,EACA,YAAAyW,EACA,iBAAAC,EACA,SAAU8F,EACV,iBAAA5F,EACA,6BAAAC,CAAA,EAXI,cAYN,KAEF,OAACgF,GAAA,IAEC,kBAAmBwB,EACnB,MAAOjB,EACP,UAAWE,EACX,KAAME,EAAsB,OAAYI,EACxC,QAASJ,EAAsBI,EAAqB,OACpD,UAAW,MAAW,kBAAkB,KAAgB,EACxD,OAAAtF,EACA,UAAW,IAAMyF,EAAWT,CAAO,EACnC,iBAAkBhF,EAClB,QAAS,GACT,OAAQkF,EAAsB,GAAK,KAAO,MAXtC,eAYN,EACAH,GAAoB,KAAK,cACvB,OAACN,GAAgB,CAAoB,UAAAvd,EAClC,SAACkL,GAAM,CACN,MAAMsS,EAAW,CACf,GAAGtS,EACH,MAAO,IAAM,IACX,MAAkB,4CAA6C,CAC7D,eAAgB2S,GAAoB,IACtC,CAAC,EACD3S,EAAE,MAAM,CACV,CACF,EACA,SACE,OAACuN,GAAA,CACC,SAAAjX,EACA,OAAAsX,EACA,SAAAC,EACA,MAAOyE,EAAS,MAChB,MAAOA,EAAS,MAChB,OAAQA,EAAS,OACjB,KAAMA,EAAS,KACjB,CAEJ,GAtBoB,cAuBtB,CAEJ,EAAE,OAAO,OAAO,EAClB,GACF,CAEJ,C,gBCzUA,SAAS2B,GAAYC,EAAc/C,EAA2C,CAAC,EAAG,IAChF,MAAkB,sBAAsB+C,CAAI,GAAI,CAC9C,IAAK,MAAQ,QACb,gBAAiBtd,EAAA,EAAO,UAAU,QAClC,GAAGua,CACL,CAAC,CACH,CAEO,MAAMgD,GAA8Bha,GAAiB,CAC1D,MAAM9F,KAAS,MAAYuB,GAAU,GAAUA,CAAK,CAAC,EAErD,SACE,OAAC,OAAI,UAAWvB,EAAO,UACrB,mBAAC,MACC,KAAM8F,EAAM,WAAW,CAAC,EACxB,aAAc,GACd,SAAU,IAAMvD,EAAA,EAAO,OACvB,mBAAoB,IAAMqd,GAAY,qBAAqB,EAC3D,eAAiBG,GAAiBH,GAAY,gBAAiB,CAAE,KAAAG,CAAK,CAAC,EACvE,oBAAsBC,GAAkBJ,GAAY,sBAAuB,CAAE,MAAAI,CAAM,CAAC,EACpF,YAAcC,GAAiBL,GAAY,sBAAuB,CAAE,KAAAK,CAAK,CAAC,EAC5E,EACF,CAEJ,EAEM,GAAa1e,IAA0B,CAC3C,aAAW,OAAI,CACb,WAAYA,EAAM,OAAO,WAAW,QACpC,QAAS,YACT,QAASA,EAAM,QAAQ,EAAG,EAAG,EAAG,CAAC,EACjC,OAAQ,aAAaA,EAAM,WAAW,MAAM,WAAW,GACvD,aAAcA,EAAM,MAAM,OAAO,OACnC,CAAC,CACH,G,+GCxCA,MAAM2e,GAAW,IAQJC,GAAc,CAAC,CAAE,SAAAC,EAAU,SAAAC,EAAU,UAAAvR,CAAU,IAAwB,CAClF,KAAM,CAACwR,EAASC,CAAU,KAAI,YAAS,CAAC,EAGxC,SAAAC,GAAA,GAAY,IAAMD,EAAWD,EAAUJ,EAAQ,EAAGA,EAAQ,KAE1D,aAAU,IAAMK,EAAW,CAAC,EAAG,CAACH,CAAQ,CAAC,KAElC,OAACK,GAAA,EAAI,CAAC,SAAUH,EAAS,UAAAxR,EAAsB,SAAAuR,CAAA,CAAoB,CAC5E,E,gBCPA,MAAM,GAAa9e,IAA0B,CAC3C,gBAAc;AAAA;AAAA,mBAEGA,EAAM,WAAW,mBAAmB;AAAA,iBACtCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASlD,eAAa;AAAA;AAAA,aAEFA,EAAM,OAAO,IAAI;AAAA,2BACNmf,GAAA,GAAUnf,EAAM,OAAO,KAAK,WAAW,EAAE,SAAS,GAAI,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA,+BAI9Dmf,GAAA,GAAUnf,EAAM,OAAO,KAAK,WAAW,EAAE,SAAS,GAAI,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO5F,qBAAmB;AAAA,iBACJA,EAAM,WAAW,GAAG,QAAQ;AAAA,mBAC1BA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,IAIjC,UAAQ;AAAA,oBACUA,EAAM,QAAQ,CAAC,CAAC;AAAA,IAElC,aAAW;AAAA;AAAA,GAGb,GAiBA,MAAMof,WAAiB,eAA4B,CAIjD,YAAY7a,EAAc,CACxB,MAAMA,CAAK,EAJb,KAAQ,WAAoC,KAC5C,KAAQ,mBAAqB,YAAyC,EAiCtE,cAAYlH,GAAgC,CAC1C,KAAM,CAAE,SAAA4a,EAAU,QAAAoH,CAAQ,EAAI,KAAK,MAC7B,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAa,EAAIniB,EAAM,cAC7BmiB,GAAgBF,EAAYC,IAC7B,GAAK,CAACtH,GAC9BoH,EAAQ,CAEZ,EAEA,kBAAe,IAAM,CACnB,KAAM,CAAE,SAAApH,CAAS,EAAI,KAAK,MAC1B,GAAI,CAAE,gBAAiBwH,EAAe,CAAC,CAAE,EAAI,KAAK,MAClD,OAAKxH,IAEHwH,KAAe,OAAYA,EAAc,KAAc,SAAS,EAAE,MAAM,IAAI,GAEvEA,CACT,EA9CE,KAAK,MAAQ,CACX,gBAAiBlb,EAAM,OACzB,CACF,CAEA,OAAO,yBAAyBmb,EAAkBjX,EAAc,CAC9D,OAAIiX,EAAU,UAAYA,EAAU,eAC3B,CACL,mBAAiB,OAAqBA,EAAU,eAAgBjX,EAAM,eAAe,CACvF,EAGEiX,EAAU,SACL,KAGF,CAIL,gBAAiBA,EAAU,OAC7B,CACF,CA0BA,QAAS,CACP,KAAM,CAAE,MAAA1f,EAAO,SAAA0V,EAAU,QAAA2J,EAAS,SAAAM,EAAU,QAAAC,EAAS,SAAA3H,CAAS,EAAI,KAAK,MACjExZ,EAAS,GAAUuB,CAAK,EACxB,CAAE,QAAA6f,EAAS,iBAAAC,EAAkB,eAAAC,CAAe,KAAIC,GAAA,GAAgBhgB,CAAK,EAE3E,SACE,QAAC,OACC,oBAAC,SAAM,UAAWvB,EAAO,UACvB,oBAAC,SACC,SAAUwZ,EAAW,OAAY,KAAK,SACtC,UAAWxZ,EAAO,aAClB,IAAK,KAAK,mBAET,eAAK,aAAa,EAAE,IAAKwhB,MAEtB,QAAC,MAAG,aAAW,MAAGJ,EAASphB,EAAO,WAAW,EAC3C,oBAAC,MAAG,UAAWqhB,EAAmB,mBAAeG,EAAI,YAAa,CAAE,SAAAvK,CAAS,CAAC,EAAE,KAChF,OAAC,MAAG,UAAWqK,EAAiB,SAAAE,EAAI,WAAU,OAACC,GAAA,EAAc,CAAC,MAAOD,EAAI,IAAK,EAAKA,EAAI,MAAM,IAF1CA,EAAI,GAGzD,CAEH,KACD,OAAC,MACC,IAAMpb,GAAY,CAChB,KAAK,WAAaA,EAId,KAAK,YAAc,KAAK,mBAAmB,SAAS,UAAY,CAACoT,GACnE,KAAK,mBAAmB,SAAS,SAAS,EAAG,KAAK,mBAAmB,QAAQ,YAAY,CAE7F,EACF,GACF,EACF,KACA,QAAC,OAAI,UAAWxZ,EAAO,kBACrB,oBAACb,EAAA,IACC,KAAMqa,EAAW,OAAS,QAC1B,QAAQ,YACR,QAASA,EAAW0H,EAAWN,EAC/B,UAAW5gB,EAAO,OAEjB,SAAAwZ,EAAW,SAAW,QACzB,KACA,OAACra,EAAA,GAAM,CAAC,KAAK,YAAY,QAAQ,YAAY,QAASgiB,EAAS,UAAWnhB,EAAO,OAAQ,sBAEzF,KACA,OAACb,EAAA,GAAM,CAAC,KAAK,eAAe,QAAQ,YAAY,QAAS,KAAK,MAAM,SAAU,UAAWa,EAAO,OAAQ,0BAExG,EACCwZ,GACE,KAAK,aAAa,EAAE,OAAS,MAC5B,QAAC,QAAK,oCACgB,OAAC2G,GAAW,CAAC,SAAU,KAAK,MAAM,QAAS,SAAU,GAAM,EAAE,QACnF,GAEN,GACF,CAEJ,CACF,CAEO,MAAMuB,MAAoB,MAAWf,EAAQ,E,oJCjK7C,MAAMgB,GAAiB,CAAC,CAC7B,IAAAC,EACA,SAAA/V,EACA,QAAA0S,EACA,aAAAsD,EACA,MAAA3J,EACA,KAAA4J,EACA,cAAAC,EACA,UAAAC,EACA,SAAA/K,EACA,iBAAAgL,EAAmB,EACrB,IAAa,CACX,KAAM,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EACtD,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChD,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChDC,KAAU,UAAsBZ,CAAI,EACpCa,KAAa,UAAeZ,GAAe,WAAa,CAAC,KAG/D,aAAU,IAAM,CACdI,EAAmB,EAAK,EACxBE,EAAmB,EAAK,CAC1B,EAAG,CAACnK,EAAO4J,EAAME,CAAS,CAAC,KAG3B,aAAU,IAAM,CACTzD,IACHgE,EAAgB,EAAK,EACrBE,EAAgB,EAAK,EAEzB,EAAG,CAAClE,CAAO,CAAC,KAGZ,aAAU,IAAM,CACViE,GAAgBT,GAClBA,EAAc,SAAS,EAAGA,EAAc,aAAeA,EAAc,YAAY,CAErF,EAAG,CAACS,EAAcT,CAAa,CAAC,KAGhC,aAAU,IAAM,CACVD,IAASY,EAAQ,SAAWZ,EAAK,SAAWY,EAAQ,QAAQ,SAAWJ,GAAgBE,KACrFR,IAAc,KAAc,YAAcQ,EAC5CH,EAAmB,EAAI,EACdL,IAAc,KAAc,WAAaM,GAClDH,EAAmB,EAAI,GAG3BO,EAAQ,QAAUZ,CACpB,EAAG,CAACU,EAAcV,EAAME,EAAWM,CAAY,CAAC,KAEhD,aAAU,IAAM,CACd,GAAI,CAACP,GAAiB,CAACF,EACrB,OAGF,SAASe,EAAahkB,EAA2B,CAC/C,GAAI,CAACmjB,GAAiB,CAACF,GAAgB,CAACC,EAAK,QAAUvD,GAAW,CAAChc,EAAA,EAAO,eAAe,sBACvF,OAEF3D,EAAM,yBAAyB,EAC/B,MAAMikB,EAAkBC,GAAelkB,EAAOmjB,EAAeY,EAAW,OAAO,EAC/EA,EAAW,QAAUZ,EAAc,UAC/Bc,IAAoB,IAEbA,IAAoB,IAAuBZ,EACpDpB,EAAU,EACDgC,IAAoB,GAC7BE,EAAa,EAEjB,CAEA,SAASlC,GAAY,CACnB,MAAMmC,EAAWC,GAAaC,GAAgBpB,CAAI,EAAG5J,EAAOjB,EAAU+K,CAAS,EAC/E,GAAI,CAACgB,EAAU,CACbb,EAAmB,EAAI,EACvB,MACF,CACAA,EAAmB,EAAK,EACxBN,IAAemB,CAAQ,EACvBT,EAAgB,EAAI,KACpB,MAAkB,kCAAmC,CACnD,UAAW,MACX,WAAYP,CACd,CAAC,CACH,CAEA,SAASe,GAAe,CACtB,MAAMC,EAAWG,GAAgBD,GAAgBpB,CAAI,EAAG5J,EAAOjB,EAAU+K,CAAS,EAClF,GAAI,CAACgB,EAAU,CACbX,EAAmB,EAAI,EACvB,MACF,CACAA,EAAmB,EAAK,EACxBR,IAAemB,CAAQ,EACvBP,EAAgB,EAAI,KACpB,MAAkB,kCAAmC,CACnD,UAAW,SACX,WAAYT,CACd,CAAC,CACH,CAEA,OAAAD,EAAc,iBAAiB,SAAUa,CAAY,EACrDb,EAAc,iBAAiB,QAASa,CAAY,EAE7C,IAAM,CACXb,EAAc,oBAAoB,SAAUa,CAAY,EACxDb,EAAc,oBAAoB,QAASa,CAAY,CACzD,CACF,EAAG,CAACf,EAActD,EAASrG,EAAO4J,EAAMC,EAAeC,EAAW/K,EAAUgL,CAAgB,CAAC,EAG7F,MAAMmB,EAAiBpB,IAAc,KAAc,eAAc,mBAAe9J,EAAM,IAAI,EAAE,EACtFmL,EAAoBrB,IAAc,KAAc,cAAa,mBAAe9J,EAAM,IAAI,EAAE,EAExFoL,KAAgB,eAAY,IAAM,IAEtC,MAAkB,mDAAoD,CACpE,SAAU,iBACZ,CAAC,EACD,MAAMN,EAAWC,GAAaC,GAAgBpB,CAAI,EAAG5J,EAAOjB,EAAU+K,CAAS,EAC/E,GAAI,CAACgB,EAAU,CACbb,EAAmB,EAAI,EACvB,MACF,CACAA,EAAmB,EAAK,EACxBN,IAAemB,CAAQ,EACvBT,EAAgB,EAAI,EACpBR,GAAe,OAAO,CACpB,SAAU,OACV,IAAK,CACP,CAAC,CACH,EAAG,CAACF,EAAc3J,EAAO4J,EAAMC,EAAeC,EAAW/K,CAAQ,CAAC,EAElE,SACE,oBACG,UAAAqL,MAAgB,OAACiB,GAAA,EAAgB,CAAC,UAAWvB,IAAc,KAAc,WAAa,QAAU,QAAS,EACzG,CAACoB,GAAkBlB,GAAmBsB,GACtCxB,IAAc,KAAc,WAAaJ,IAAQ,MAAQ,YACxD,OAACziB,EAAA,GAAM,CAAC,UAAW,GAAO,UAAW,QAAQ,YAAY,QAASmkB,EAAe,SAAU/E,EACzF,oBAAC,OAAI,UAAW,GAAO,iBACrB,oBAACjd,GAAA,EAAI,CAAC,KAAK,WAAW,KAAK,IAAK,MAChC,OAAC,KAAK,CAAC,QAAQ,kCAAkC,sBAAU,GAC7D,EACF,EAEDuK,EACA,CAACwX,GAAqBjB,GAAmBoB,GACzChB,MAAgB,OAACe,GAAA,EAAgB,CAAC,UAAWvB,IAAc,KAAc,WAAa,QAAU,QAAS,GAC5G,CAEJ,EAEM,GAAS,CACb,oBAAkB,OAAI,CACpB,UAAW,SACX,QAAS,GACX,CAAC,EACD,aAAW,OAAI,CACb,MAAO,OACP,OAAQ,OACR,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,WAAY,IACZ,SAAU,WACV,IAAK,EACL,MAAO,GACP,OAAQ,CACV,CAAC,EACD,oBAAkB,OAAI,CACpB,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,WAAY,QACd,CAAC,CACH,EAEMwB,MACJ,OAAC,OAAI,UAAW,GAAO,iBAAkB,cAAY,eAAe,2CAEpE,EAGF,IAAKC,IAAAA,IACHA,EAAAA,EAAA,IAAM,EAAE,EAAR,MACAA,EAAAA,EAAA,OAAS,CAAC,EAAV,SACAA,EAAAA,EAAA,SAAW,CAAC,EAAZ,WAHGA,IAAAA,IAAA,IAKL,SAASX,GAAelkB,EAA2BwH,EAAyBuc,EAAqC,CAE/G,GAAIvc,EAAQ,cAAgBA,EAAQ,aAClC,MAAO,GAET,MAAMkE,EAAQ1L,aAAiB,WAAaA,EAAM,OAASwH,EAAQ,UAAYuc,EAC/E,GAAIrY,IAAU,EACZ,MAAO,GAET,MAAMuY,EAAkBvY,EAAQ,EAAI,GAAsB,EAM1D,OAJEuY,IAAoB,GAChBzc,EAAQ,UACRA,EAAQ,aAAeA,EAAQ,UAAYA,EAAQ,eAE1C,EAAIyc,EAAkB,CACvC,CAEA,SAASK,GAAgBpB,EAAqB,CAC5C,MAAM4B,EAAiB5B,EAAK,CAAC,EAAE,YACzB6B,EAAgB7B,EAAKA,EAAK,OAAS,CAAC,EAAE,YAO5C,OAJE6B,EAAgBD,EACZ,CAAE,KAAMC,EAAe,GAAID,CAAe,EAC1C,CAAE,KAAMA,EAAgB,GAAIC,CAAc,CAGlD,CAEA,SAASC,GAAaC,EAAiCC,EAAyB,CAC9E,MAAO,CAAE,KAAMA,EAAa,KAAK,QAAQ,EAAG,GAAID,EAAa,IAAK,CACpE,CAEA,SAASE,GAAaF,EAAiCC,EAAyB7M,EAAoB,CAElG,OAAA6M,EAAeE,GAAmBF,EAAc7M,CAAQ,EACjD,CAAE,KAAM4M,EAAa,GAAI,GAAIC,EAAa,GAAG,QAAQ,CAAE,CAChE,CAEO,MAAMG,GAAsB,IAGnC,SAAShB,GACPY,EACAC,EACA7M,EACA+K,EAC+B,CAC/B,OAAIA,IAAc,KAAc,YAE9B8B,EAAeE,GAAmBF,EAAc7M,CAAQ,EACtC6M,EAAa,GAAG,QAAQ,EAAID,EAAa,GAAKI,GAC7CF,GAAaF,EAAcC,EAAc7M,CAAQ,EAAI,QAGxD,KAAK,IAAI6M,EAAa,KAAK,QAAQ,EAAID,EAAa,IAAI,EAAII,GAC3DL,GAAaC,EAAcC,CAAY,EAAI,MAChE,CAEA,SAASX,GACPU,EACAC,EACA7M,EACA+K,EAC+B,CAC/B,OAAIA,IAAc,KAAc,WACZ,KAAK,IAAI8B,EAAa,KAAK,QAAQ,EAAID,EAAa,IAAI,EAAII,GAC3DL,GAAaC,EAAcC,CAAY,EAAI,QAGhEA,EAAeE,GAAmBF,EAAc7M,CAAQ,EACtC6M,EAAa,GAAG,QAAQ,EAAID,EAAa,GAAKI,GAC7CF,GAAaF,EAAcC,EAAc7M,CAAQ,EAAI,OAC1E,CAGA,SAAS+M,GAAmB5M,EAAsBH,EAAoB,CACpE,SAAO,wBAAoBG,EAAU,GAAG,KAAI,sBAAkBA,EAAU,IAAKH,CAAQ,EAAIG,CAC3F,C,oDCrSO,SAAS8M,IAA8B,IAC5C,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,8BACR,CAAC,CACH,CAEO,SAASC,IAAgC,IAC9C,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,gCACR,CAAC,CACH,CAEO,SAASC,IAAqC,IACnD,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,sCACR,CAAC,CACH,CAEO,SAASC,IAAgC,IAC9C,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,gCACR,CAAC,CACH,CAEO,SAASC,IAAkC,IAChD,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,gCACR,CAAC,CACH,CAEO,SAASC,GAA+B3R,EAAiD,IAC9F,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAM,eAAeA,EAAM,QAAQ,EACrC,CAAC,CACH,C,gBClCO,SAAS4R,GAAa,CAAE,YAAAC,CAAY,EAAU,CACnD,MAAMzkB,KAAS,MAAW,EAAS,EACnC,SACE,OAACoB,GAAA,EAAK,CACJ,oBAAC,KACC,KAAMqjB,EACN,UAAWzkB,EAAO,KAClB,MAAM,kEACN,OAAO,SACP,IAAI,sBAEJ,oBAACsB,GAAA,EAAI,CAAC,KAAK,qBAAsB,GAAE,kBACrC,EACF,CAEJ,CAEA,SAAS,GAAUC,EAAsB,CACvC,MAAO,CACL,QAAM,OAAI,CACR,MAAOA,EAAM,OAAO,KAAK,UACzB,SAAUA,EAAM,WAAW,UAAU,SACrC,SAAU,CACR,MAAOA,EAAM,OAAO,KAAK,IAC3B,CACF,CAAC,CACH,CACF,C,qFC9BA,MAAM,GAAaA,IAA0B,CAC3C,iBAAe,OAAI,CACjB,KAAM,EACN,MAAOA,EAAM,OAAO,KAAK,UACzB,aAAcA,EAAM,QAAQ,CAAC,EAC7B,SAAU,MACV,QAAS,OACT,SAAU,MACZ,CAAC,EACD,YAAU,OAAI,CACZ,YAAaA,EAAM,QAAQ,CAAC,EAC5B,UAAWA,EAAM,QAAQ,EAAG,EAC5B,QAAS,OACT,WAAY,SACX,yBAA2B,CAC1B,MAAOA,EAAM,OAAO,MAAM,IAC5B,CACF,CAAC,EACD,aAAW,OAAI,CACb,YAAa,QAAQA,EAAM,QAAQ,CAAC,CAAC,QACrC,SAAUA,EAAM,WAAW,UAAU,SACrC,WAAYA,EAAM,WAAW,gBAC/B,CAAC,EACD,aAAW,OAAI,CACb,WAAYA,EAAM,WAAW,oBAC7B,SAAUA,EAAM,WAAW,UAAU,QACvC,CAAC,CACH,GAOMmjB,MAAe,QAAK,SAAsB5e,EAAsB,CACpE,MAAM2F,KAAQ,MAAW,EAAS,EAC5B,CAAE,MAAAwH,EAAO,MAAApM,CAAM,EAAIf,EAEzB,SACE,QAAC,OAAI,cAAY,sBAAsB,UAAW2F,EAAM,SACrD,UAAAwH,MAAS,QAAC,QAAK,UAAWxH,EAAM,UAAY,UAAAwH,EAAM,KAAC,KACpD,OAAC,QAAK,UAAWxH,EAAM,UAAY,SAAA5E,CAAA,CAAM,GAC3C,CAEJ,CAAC,EAMY8d,MAAe,QAAK,SAAsB7e,EAA0B,CAC/E,MAAM2F,KAAQ,MAAW,EAAS,EAC5B,CAAE,UAAAmZ,CAAU,EAAI9e,EAEtB,SACE,OAAC,OAAI,UAAW2F,EAAM,cAAe,cAAY,iBAC9C,SAAAmZ,EAAU,IAAI,CAAC3X,EAAMrI,OACpB,OAAC8f,GAAA,CAA4C,MAAOzX,EAAK,MAAO,MAAOA,EAAK,OAAzD,GAAGrI,CAAK,IAAIqI,EAAK,KAAK,EAA0C,CACpF,EACH,CAEJ,CAAC,E,gECzBM,SAAS4X,GAAU/e,EAAc,CACtC,KAAM,CAAE,SAAAmR,EAAU,UAAA6N,EAAW,MAAA5M,EAAO,cAAA6M,EAAe,MAAAze,EAAO,UAAA0e,EAAW,gBAAAC,EAAiB,UAAAC,CAAU,EAAIpf,EAC9F,CAACqf,EAAYC,CAAa,KAAI,YAAgC,MAAS,EACvEC,EAAYH,GAAW,UAAU,MAEjCI,KAAoB,eACvBC,GAAgC,CAC/B,GAAI,CAACA,EAAM,OACT,OAAOA,EAGT,MAAMC,KAAc,OAAcD,EAAOF,EAAWN,IAAkB,KAAc,UAAU,EAExF,CAACU,CAAkB,KAAI,OAAoB,CAC/C,KAAM,CAACD,CAAW,EAClB,SAAAvO,EACA,MAAO1U,EAAA,EAAO,OACd,iBAAmByB,GAAcA,EACjC,YAAa,CACX,SAAU,CACR,OAAQ,CAAC,CACX,EACA,UAAW,CAAC,CACd,CACF,CAAC,EAED,UAAW6Q,KAAS4Q,EAAmB,OACrC5Q,EAAM,SAAYtS,MACT,OAAwB,CAC7B,MAAAsS,EACA,SAAUtS,EAAO,cACjB,YAAauiB,EACb,MAAA5M,EACA,UAAWsN,CACb,CAAC,EAEH3Q,EAAM,OAAS,CACb,GAAGA,EAAM,OACT,OAAQ,CACN,QAAS,GACT,WAAY,GACZ,MAAO6Q,GAAqB7Q,CAAK,EACjC,GAAGA,EAAM,OAAO,MAClB,EAEA,WAAY8Q,GAAkB9Q,EAAOqQ,GAAW,UAAU,MAAQ,GAAIA,GAAW,UAAU,MAAQ,EAAE,CACvG,EAGArQ,EAAM,KAAOA,EAAM,OAAS,MAAU,UAAU,OAAuBA,CAAK,GAAK,MAAU,OAAUA,EAAM,KAG7G,OAAO4Q,CACT,EACA,CAACV,EAAe9N,EAAU6N,EAAW5M,EAAOgN,GAAW,UAAU,KAAMA,GAAW,UAAU,KAAMG,CAAS,CAC7G,EAqDA,MAnDA,aAAU,IAAM,EACE,SAAY,CAC1B,GAAI,CAACH,GAAW,UAAU,MAAQ,CAACA,GAAW,UAAU,KAAM,CAC5DE,EAAc,MAAS,EACvB,MACF,CAGA,MAAMtP,EAA0E8P,GAAqBZ,CAAS,EAE9G,IAAIa,EAAeC,GAAkBb,CAAe,EAGpD,MAAMc,EAAYC,GAAyBH,CAAY,EAoBvD,GAnBIE,EACFjQ,EAAgB,KAAKiQ,CAAS,EAG9BjQ,EAAgB,KAAK,CACnB,GAAI,WACJ,QAAS,CACP,YAAa,CACX,CAACoP,EAAU,UAAU,IAAI,EAAG,EAC5B,CAACA,EAAU,UAAU,IAAI,EAAG,CAC9B,EACA,cAAe,CACb,CAACA,EAAU,UAAU,IAAI,EAAG,GAC5B,CAACA,EAAU,UAAU,IAAI,EAAG,EAC9B,CACF,CACF,CAAC,EAGCpP,EAAgB,OAAS,EAAG,CAC9B,MAAMmQ,EAAuB,QAAMC,GAAA,MAAcC,GAAA,GAAmBrQ,EAAiB,CAACkP,CAAS,CAAC,CAAC,EAC3FG,EAAaG,EAAkBW,EAAqB,CAAC,CAAC,EAC5Db,EAAcD,CAAU,CAC1B,MACEC,EAAcE,EAAkBN,CAAS,CAAC,CAE9C,GACQ,CACV,EAAG,CACDC,EACAD,EACAD,EACAO,EACAJ,GAAW,UAAU,KACrBA,GAAW,UAAU,IACvB,CAAC,EAEG,CAACC,EACH,OAAO,KAGT,MAAMiB,EAAqBC,GAA4B,CACrD,KAAM,CAAE,MAAAxf,EAAO,IAAAD,EAAK,SAAA0f,CAAS,EAAID,EAC3B,CAAE,mBAAAE,EAAoB,sBAAAC,CAAsB,EAAI1gB,EAClD,CAACygB,GAAsB,CAACC,IAGxBF,IAAa,OACfC,EAAmB3f,EAAKC,EAAOme,CAAS,EAGtCsB,IAAa,OACfE,EAAsB5f,EAAKC,EAAOme,CAAS,EAE/C,EAEA,SACE,OAACyB,GAAA,GACC,KAAMtB,EACN,MAAA7e,EACA,kBAAmBR,EAAM,oBAAsBA,EAAM,sBAAwBsgB,EAAoB,OACjG,OAAQtgB,EAAM,OACd,cAAe,CAAE,KAAM,GAAM,QAAS,CAAC,OAAO,EAAG,UAAW,EAAK,EACjE,cAAe,CACb,CAAE,YAAaof,GAAW,UAAU,MAAQ,GAAI,KAAMH,IAAkB,KAAc,UAAW,CACnG,EACF,CAEJ,CAEA,MAAMY,GAAoB,CAAC9Q,EAAc6R,EAAkBC,IACrD,GAACD,GAAY,CAACC,GAGdD,IAAa7R,EAAM,MAGnB8R,IAAa9R,EAAM,MAGnBA,EAAM,OAAO,OAAO,QASnB,SAAS+Q,GAAqBZ,EAAsB,CACzD,OAAOA,EAAU,OACd,OAAQnQ,GAAoD,CAC3D,MAAM+R,EACJ/R,EAAM,UAAU,QAAU,mBAC1BA,EAAM,OAAS,UACfmQ,GAAW,MAAM,OAAS,KAAc,SACpC6B,EACJhS,EAAM,OAAS,UAAYA,EAAM,OAAS,MAAU,OAASmQ,GAAW,MAAM,OAAS,KAAc,SACvG,OAAO4B,GAAqBC,CAC9B,CAAC,EACA,QAAShS,GACD,CACL,CACE,GAAI,gBACJ,QAAS,CACP,OAAQ,OACR,SAAU,GACV,QAAS,GACT,OAAQA,EAAM,IAChB,CACF,CACF,CACD,CACL,CAEA,SAASiR,GAAkBb,EAAgD,CAEzE,IAAIY,EAAuC,CAAC,EAC5C,cAAO,KAAKZ,CAAe,EACxB,OAAQre,GAAQqe,EAAgBre,CAAG,EAAE,MAAM,EAC3C,QAASA,GAAQ,CAChB,MAAMhC,EAAQqgB,EAAgBre,CAAG,EAAE,MAE/BhC,IAAU,SACZihB,EAAajf,CAAG,EAAIhC,EAExB,CAAC,EAEIihB,CACT,CAEA,SAASG,GAAyBH,EAAsC,CACtE,IAAIiB,EAA+C,CAAC,EAEpD,UAAWlgB,KAAOif,EAChBiB,EAAoBlgB,CAAG,EAAI,GAG7B,OAAI,OAAO,KAAKif,CAAY,EAAE,OAAS,EAC9B,CACL,GAAI,WACJ,QAAS,CACP,YAAaA,EACb,cAAeiB,CACjB,CACF,EAEK,IACT,CAEA,SAASpB,GAAqB7Q,EAAkC,CAC9D,GAAIA,EAAM,OAAS,MAAU,KAC3B,MAAO,IAGX,CC/OA,MAAM,GAAY,KAAO,CACvB,iBAAe;AAAA;AAAA;AAAA;AAAA,GAKjB,GAcA,IAAKkS,IAAAA,IACHA,EAAA,KAAO,OACPA,EAAA,KAAO,OACPA,EAAA,IAAM,MAHHA,IAAAA,IAAA,IAME,MAAMC,MAAc,QACzB,CAAC,CACC,KAAAC,EACA,cAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,oBAAAC,EACA,oBAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,QAAAC,CACF,IAAa,CACX,MAAMhc,KAAQ,MAAW,EAAS,EAE5Bic,EAAe,MAAOC,GAA2B,CAOrD,UANA,MAAkB,qCAAsC,CACtD,IAAK,MAAQ,QACb,OAAAA,EACA,KAAM,eACR,CAAC,EAEOA,EAAQ,CACd,IAAK,UACHC,GAAA,IAAuB,CAAE,KAAAX,EAAM,KAAMQ,CAAQ,EAAG,SAAS,EACzD,MACF,IAAK,OACH,MAAMI,KAAW,OAAsBJ,CAAO,EACxCK,EAAO,IAAI,KAAK,CAAC,KAAK,UAAUD,CAAQ,CAAC,EAAG,CAChD,KAAM,gCACR,CAAC,EACKE,EAAW,mBAAgB,OAAe,IAAI,IAAM,CAAC,QAC3D,KAAOD,EAAMC,CAAQ,EACrB,MACF,IAAK,MACH,MAAMC,EAAe,IAAI,IACzBP,EAAQ,QAASjG,GAAQ,CACnBA,EAAI,WAAW,OAAS,CAACwG,EAAa,IAAIxG,EAAI,WAAW,KAAK,GAChEwG,EAAa,IAAIxG,EAAI,WAAW,MAAOA,EAAI,SAAS,CAExD,CAAC,EACDwG,EAAa,QAAQ,MAAOhD,GAAc,CACxC,MAAMiD,EAAqErC,GAAqBZ,CAAS,EACzGiD,EAAW,KAAK,CACd,GAAI,WACJ,QAAS,CACP,cAAe,CACZ,OAAW,GACX,WAAe,EAClB,CACF,CACF,CAAC,EACD,MAAMhC,EAAuB,QAAMC,GAAA,MAAcC,GAAA,GAAmB8B,EAAY,CAACjD,CAAS,CAAC,CAAC,KAC5F4C,GAAA,IAAuB3B,EAAqB,CAAC,EAAG,gBAAgBjB,EAAU,KAAK,EAAE,CACnF,CAAC,CACL,CACF,EAEMkD,EAAoD,CAAC,GAAGjB,CAAI,EAG9DC,IAAkB,KAAkB,MACtCgB,EAAa,KAAK,CAChB,MAAO,sBACP,MAAOf,EACP,KAAM,MAAa,MACrB,CAAC,EAGCM,EAAQ,KAAMU,GAAMA,EAAE,MAAM,OAAS,IAAc,GACrDD,EAAa,KAAK,CAChB,MAAO,OACP,MAAO,6EACP,KAAM,MAAa,MACrB,CAAC,EAICd,GAAiB,OAAS,GAC5Bc,EAAa,KACX,CACE,MAAO,+BACP,SAAO,OAACE,GAAA,EAAa,CAAC,OAAQhB,CAAA,CAAiB,CACjD,EACA,CACE,MAAO,GACP,SACE,OAACjoB,EAAA,GAAM,CAAC,QAAQ,YAAY,KAAK,KAAK,QAASkoB,EAAqB,8BAEpE,CAEJ,CACF,EAIEC,GACFY,EAAa,KAAK,CAChB,MAAO,mDACP,SACE,OAAC7mB,GAAA,GACC,QAAQ,4IACR,UAAU,QAEV,mBAAClC,EAAA,GAAM,CAAC,QAAQ,YAAY,KAAK,KAAK,QAASqoB,EAC5C,SAAAD,EAAc,kBAAoB,kBACrC,EACF,CAEJ,CAAC,EAEH,MAAMc,KACJ,QAAC7M,GAAA,EAAI,CACH,oBAACA,GAAA,EAAK,KAAL,CAAU,MAAM,MAAM,QAAS,IAAMkM,EAAa,MAAmB,EAAG,KACzE,OAAClM,GAAA,EAAK,KAAL,CAAU,MAAM,OAAO,QAAS,IAAMkM,EAAa,MAAmB,EAAG,KAC1E,OAAClM,GAAA,EAAK,KAAL,CAAU,MAAM,MAAM,QAAS,IAAMkM,EAAa,KAAkB,EAAG,GAC1E,EAEF,SACE,mBACG,SAAAQ,MACC,QAAC,OAAI,UAAWzc,EAAM,cACpB,oBAACkZ,GAAA,CACC,UAAWuD,EAAa,IAAKjb,IACpB,CACL,MAAOA,EAAK,MACZ,MAAO,SAAUA,EAAOqb,GAAerb,EAAK,MAAOA,EAAK,IAAI,EAAIA,EAAK,KACvE,EACD,EACH,KACA,OAACwO,GAAA,EAAQ,CAAC,QAAS4M,EACjB,mBAACrQ,GAAA,EAAa,CAAC,OAAQ,GAAO,QAAQ,SAAS,KAAK,eAAe,oBAEnE,EACF,GACF,EAEJ,CAEJ,CACF,EAEAgP,GAAY,YAAc,cAE1B,SAASsB,GAAezhB,EAAiCM,EAAoB,CAC3E,OAAI,OAAON,GAAU,UAAY,OAAOA,GAAU,YACzC,mBAAG,SAAAA,CAAA,CAAM,EAEdM,IAAS,MAAa,aACjB,OAACihB,GAAA,EAAS,CAAC,OAAQvhB,CAAA,CAAO,EAE/BM,IAAS,MAAa,SACjB,OAAC,QAAK,UAAU,wBAAyB,SAAAN,EAAM,SAAS,EAAE,GAEnE,QAAQ,MAAM,aAAa,OAAOA,CAAK,IAAIA,CAAK,kBAAkB,KAC3D,oBAAE,EACX,C,wCCjMO,SAAS0hB,GAAoB,CAAE,MAAAC,EAAO,iBAAAC,EAAkB,gBAAAC,EAAiB,SAAAzR,EAAU,QAAAsH,EAAS,QAAAxL,CAAQ,EAAU,CACnH,MAAM4V,EAAcC,GACX,MAAG,OAAeA,EAAM,CAC7B,OAAQ,MAAkB,SAAS,OACnC,SAAA3R,CACF,CAAC,CAAC,GAGE4R,EAAoB,CAACC,EAAgBlkB,IAAkB,CAC3D,GAAI6jB,IAAqB7jB,GAAS2Z,EAChC,SAAO,OAACwK,GAAA,EAAO,EAAC,EAElB,MAAMC,EAAaL,EAAWD,EAAkBI,EAAK,UAAU,KAAOA,EAAK,UAAU,EAAE,EACjFG,EAAgBN,EAAWD,EAAkBI,EAAK,UAAU,GAAKA,EAAK,UAAU,IAAI,EAC1F,MAAO,GAAGE,CAAU,WAAMC,CAAa,EACzC,EAEM1nB,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,EAAOgd,CAAO,EAEvC,SACE,OAAC/L,GAAA,EAAe,CAAC,SAAQ,GACvB,mBAAC,OAAI,UAAWxS,EAAO,aAAc,cAAY,sBAC/C,mBAAC,OAAI,UAAWA,EAAO,eACpB,SAAAwoB,EAAM,IAAI,CAACM,EAAgBlkB,OAC1B,QAAC,UACC,KAAK,SACL,cAAa,OAAOA,EAAQ,CAAC,GAC7B,aAAW,SAAG,MAAkBrD,CAAK,EAAGvB,EAAO,IAAI,EAEnD,QAAS,IAAM,CACb+S,EAAQ+V,EAAMlkB,EAAQ,CAAC,CACzB,EACA,SAAU2Z,EAEV,oBAAC,OAAI,aAAW,MAAGve,EAAO,KAAM,CAAE,WAAYyoB,IAAqB7jB,CAAM,CAAC,EAAG,KAC7E,OAAC,OAAI,aAAW,MAAG5E,EAAO,KAAM,CAAE,aAAcyoB,IAAqB7jB,CAAM,CAAC,EACzE,SAAAikB,EAAkBC,EAAMlkB,CAAK,EAChC,IATKkkB,EAAK,WAAW,EAUvB,CACD,EACH,EACF,EACF,CAEJ,CAEA,MAAM,GAAY,CAACvnB,EAAsBgd,KAChC,CACL,gBAAc;AAAA;AAAA,sBAEIhd,EAAM,QAAQ,EAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAS5BA,EAAM,OAAO,WAAW,OAAO;AAAA,YAC/BA,EAAM,OAAO,WAAW,OAAO;AAAA,YAC/BA,EAAM,OAAO,WAAW,SAAS;AAAA,YACjCA,EAAM,OAAO,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOzC,kBAAgB;AAAA;AAAA;AAAA;AAAA,MAKhB,QAAM;AAAA;AAAA,gBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,gBAChBgd,EAAU,OAAS,SAAS;AAAA;AAAA;AAAA,sBAGtBhd,EAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA,iBAG9BA,EAAM,OAAO,QAAQ,IAAI;AAAA;AAAA,MAGtC,QAAM;AAAA;AAAA;AAAA;AAAA,oBAIUA,EAAM,OAAO,KAAK,SAAS;AAAA,MAE3C,QAAM;AAAA;AAAA;AAAA,mBAGSA,EAAM,GAAG,WAAW,KAAK,EAAE;AAAA,sBACxBA,EAAM,QAAQ,EAAG,CAAC;AAAA;AAAA;AAAA,KAItC,GCxFF,SAAS2nB,GAAe,CACtB,cAAAC,EACA,cAAApE,EACA,SAAA9N,EACA,QAAAsH,EACA,aAAApG,EACA,gBAAAiR,EACA,aAAAvF,EACA,QAAAtG,EACA,WAAA8L,EACA,kBAAAC,CACF,EAAU,CACR,KAAM,CAACd,EAAOe,CAAQ,KAAI,YAAqB,CAAC,CAAC,EAG3CC,KAAqB,UAAoB,EACzCC,KAAmB,UAA0B,EAG7CC,KAAe,UAAO,CAAC,EAEvBjB,KAAmB,WACvB,IACED,EAAM,UAAWM,GACRA,EAAK,WAAW,KAAOK,EAAc,EAC7C,EACH,CAACA,EAAc,GAAIX,CAAK,CAC1B,EAEME,EAAkB3D,IAAkB,KAAc,UAClD4E,EAAcjB,EAAkBD,IAAqBD,EAAM,OAAS,EAAIC,IAAqB,EAC7FmB,EAAalB,EAAkBD,IAAqB,EAAIA,IAAqBD,EAAM,OAAS,EAC5FjnB,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,EAAOmnB,CAAe,KAG/C,aAAU,IAAM,CACd,MAAMmB,EAAU,CAAE,UAAWhG,EAAc,WAAYsF,CAAc,EACrE,IAAIW,EAAuB,CAAC,EAExB,IAAC,YAAQL,EAAiB,QAASN,CAAa,GAAK,IAAC,YAAQK,EAAmB,QAASjM,CAAO,GACnG8L,EAAW,EACXE,EAAS,CAACM,CAAO,CAAC,EAClBL,EAAmB,QAAUjM,EAC7BmM,EAAa,QAAUP,EAAc,GAAKA,EAAc,MAExDI,EAAUf,IAERsB,EAAWtB,EAAM,OAAQM,IAAS,IAAC,YAAQe,EAAQ,WAAYf,GAAK,UAAU,CAAC,EAE/EgB,EAAW,CAAC,GAAGA,EAAUD,CAAO,EAAE,KAAK,CAAC1b,GAAGxL,KAAMonB,EAAU5b,GAAGxL,GAAGoiB,CAAa,CAAC,EACxE+E,EACR,CAEL,EAAG,CAACjG,EAAcsF,EAAepE,EAAexH,EAAS8L,EAAYC,CAAiB,CAAC,EAEvF,MAAMU,KAAa,eACjB,CAAC,CAAE,KAAA5R,EAAM,GAAAC,CAAG,IAAyB,CACnCiR,EAAkB,EAClBG,EAAiB,QAAU,CAAE,KAAArR,EAAM,GAAAC,CAAG,EACtCF,EAAa,CAAE,KAAAC,EAAM,GAAAC,CAAG,CAAC,CAC3B,EACA,CAACF,EAAcmR,CAAiB,CAClC,EAEMS,EAAY,CAAC5b,EAAaxL,EAAaoiB,IACvCA,IAAkB,KAAc,UAC3B5W,EAAE,WAAW,GAAKxL,EAAE,WAAW,GAAK,EAAI,GAE1CwL,EAAE,WAAW,GAAKxL,EAAE,WAAW,GAAK,GAAK,EAG5CsnB,KACJ,OAAC9qB,EAAA,IACC,cAAY,kBACZ,UAAWa,EAAO,UAClB,QAAQ,YACR,QAAS,IAAM,CAKb,MAHA,MAAkB,0CAA2C,CAC3D,SAAU,iBACZ,CAAC,EACI4pB,EAQHI,EAAW,CAAE,KAAMnG,EAAa,KAAO6F,EAAa,QAAS,GAAI7F,EAAa,IAAK,CAAC,MARrE,CACf,MAAMqG,EAAcxB,EAAkB,GAAK,EAC3CsB,EAAW,CACT,KAAMxB,EAAMC,EAAmByB,CAAW,EAAE,WAAW,KACvD,GAAI1B,EAAMC,EAAmByB,CAAW,EAAE,WAAW,EACvD,CAAC,CACH,CAIAd,EAAgB,CAClB,EACA,SAAU7K,EAEV,oBAAC,OAAI,UAAWve,EAAO,iBACpB,UAAAue,KAAU,OAACwK,GAAA,EAAO,EAAC,KAAK,OAACznB,GAAA,EAAI,CAAC,KAAMonB,EAAkB,WAAa,aAAc,KAAK,IAAK,GAAG,cAEjG,EACF,EAGIyB,KACJ,OAAChrB,EAAA,IACC,cAAY,kBACZ,UAAWa,EAAO,UAClB,QAAQ,YACR,QAAS,IAAM,CAKb,MAJA,MAAkB,0CAA2C,CAC3D,SAAU,iBACZ,CAAC,EAEG,CAAC2pB,EAAa,CAChB,MAAMO,EAAcxB,EAAkB,EAAI,GAC1CsB,EAAW,CACT,KAAMxB,EAAMC,EAAmByB,CAAW,EAAE,WAAW,KACvD,GAAI1B,EAAMC,EAAmByB,CAAW,EAAE,WAAW,EACvD,CAAC,CACH,CACAd,EAAgB,CAElB,EACA,SAAU7K,GAAWoL,EAErB,oBAAC,OAAI,UAAW3pB,EAAO,iBACpB,UAAAue,MAAW,OAACwK,GAAA,EAAO,EAAC,EACpBY,GAAepL,EAAU,QAAO,OAACjd,GAAA,EAAI,CAAC,KAAMonB,EAAkB,aAAe,WAAY,KAAK,IAAK,GACnGiB,EAAc,iBAAmB,cACpC,EACF,EAGIS,KAAc,eAClB,CAACtB,EAAgBuB,IAAuB,IACtC,MAAkB,0CAA2C,CAC3D,SAAU,OACV,WAAAA,CACF,CAAC,EACDL,EAAW,CAAE,KAAMlB,EAAK,WAAW,KAAM,GAAIA,EAAK,WAAW,EAAG,CAAC,EACjEM,EAAgB,CAClB,EACA,CAACY,EAAYZ,CAAe,CAC9B,EAEMkB,KAAqB,eAAY,IAAM,IAC3C,MAAkB,yCAAyC,EAC3DlB,EAAgB,CAClB,EAAG,CAACA,CAAe,CAAC,EAEpB,SACE,QAAC,OAAI,UAAWppB,EAAO,aACpB,WAACuC,EAAA,EAAO,eAAe,0BACtB,oBACG,UAAAmmB,EAAkBuB,EAAkBE,KACrC,OAAC5B,GAAA,CACC,MAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,SAAAzR,EACA,QAAAsH,EACA,QAAS6L,CAAA,CACX,EACC1B,EAAkByB,EAAkBF,CAAA,EACvC,KAEF,OAAC9qB,EAAA,IACC,cAAY,cACZ,UAAWa,EAAO,kBAClB,QAAQ,YACR,QAASsqB,EACT,MAAM,gBAEN,mBAAChpB,GAAA,EAAI,CAAC,KAAK,WAAW,KAAK,IAAK,GAClC,GACF,CAEJ,CAEA,YAAe,QAAK4nB,EAAc,EAE5B,GAAY,CAAC3nB,EAAsBmnB,IAA6B,CACpE,MAAM6B,EAAqB,kBAAkBhpB,EAAM,QAAQ,CAAC,CAAC,QAAQ,IAAoB,MACzF,MAAO,CACL,gBAAc;AAAA,oBACEgpB,CAAkB;AAAA,QAC9B7B,EAAkB,eAAiB,EAAE;AAAA;AAAA;AAAA,QAGrCnmB,EAAA,EAAO,eAAe,sBACpB,6BACA,oBAAoBmmB,EAAkB,aAAe,eAAe,GAAG;AAAA;AAAA,aAEpEnnB,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGzB,aAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASX,oBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASlB,qBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOHA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAElC,CACF,E,gBCxPA,SAAS,GAAUA,EAAsB,CACvC,MAAO,CACL,cAAY,OAAI,CACd,QAAS,GAAGA,EAAM,QAAQ,EAAG,CAAC,MAAMA,EAAM,QAAQ,EAAG,CAAC,IAAIA,EAAM,QAAQ,EAAG,CAAC,EAC9E,CAAC,CACH,CACF,CAEO,SAASipB,GAAiB1kB,EAAoF,CACnH,MAAMvE,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EAC9B,SACE,OAACoT,GAAA,EAAK,CAAC,UAAW3U,EAAO,WACvB,mBAACgV,GAAA,EAAK,CAAC,MAAOlP,EAAM,MAAO,KAAM,OAAQ,YAAa,wBAAyB,SAAUA,EAAM,SAAU,EAC3G,CAEJ,C,gBCjBA,SAAS,GAAUvE,EAAsB,CACvC,MAAO,CACL,SAAO,OAAI,CACT,aAAcA,EAAM,QAAQ,CAAC,EAC7B,WAAYA,EAAM,QAAQ,IAAI,EAC9B,SAAUA,EAAM,WAAW,QAC7B,CAAC,CACH,CACF,CAEO,SAASkpB,IAAuB,CACrC,MAAMlpB,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EAC9B,SAAO,OAAC,OAAI,UAAWvB,EAAO,MAAO,qBAAS,CAChD,C,gBCXA,SAAS,GAAUuB,EAAsB,CACvC,MAAO,CACL,YAAU,OAAI,CACZ,OAAQ,OACR,WAAYA,EAAM,QAAQ,CAAC,EAC3B,QAAS,EACX,CAAC,EACD,cAAY,OAAI,CACd,WAAYA,EAAM,QAAQ,EAAG,EAC7B,YAAaA,EAAM,QAAQ,EAAG,EAC9B,WAAY,OACZ,WAAY,OACZ,OAAQ,OACR,SAAUA,EAAM,WAAW,QAAQ,EAAE,EACrC,QAAS,EACX,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,WAAY,SACZ,eAAgB,gBAChB,MAAO,MACT,CAAC,EAED,iBAAe,OAAI,CACjB,SAAU,CACR,SAAU,SACV,aAAc,WACd,WAAY,SACZ,QAAS,QACT,SAAU,MACZ,CACF,CAAC,CACH,CACF,CAEO,SAASmpB,GAAkB5kB,EAMA,CAChC,MAAMvE,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EAE9B,GAAIuE,EAAM,OAAOA,EAAM,KAAK,EAC1B,SACE,oBACE,qBAAC,OAAI,UAAW9F,EAAO,YACrB,oBAAC2qB,GAAA,GACC,UAAW3qB,EAAO,cAClB,MAAO8F,EAAM,MACb,SAAUA,EAAM,SAChB,QAASA,EAAM,OAAOA,EAAM,KAAK,GAAG,QAAU,GAChD,EACCA,EAAM,cACL,QAAC,UAAO,UAAW9F,EAAO,WAAY,QAAS8F,EAAM,SAClD,UAAAA,EAAM,OAAOA,EAAM,KAAK,GAAG,wBAAwB,KACtD,GAEJ,EACCA,EAAM,cACL,OAACxE,GAAA,GACC,aAAW,qBACX,MAAM,2BACN,KAAK,gBACL,KAAK,KACL,UAAWtB,EAAO,SACpB,GAEJ,CAIN,CCxEO,SAAS4qB,GAAoBrpB,EAAsB,CACxD,MAAO,CACL,QAAM,OAAI,CACR,UAAWA,EAAM,QAAQ,CAAC,EAC1B,aAAcA,EAAM,QAAQ,CAAC,EAC7B,QAAS,OACT,WAAYA,EAAM,OAAO,WAAW,OACtC,CAAC,EACD,YAAU,OAAI,CACZ,WAAYA,EAAM,OAAO,WAAW,SACtC,CAAC,EACD,iBAAe,OAAI,CACjB,aAAcA,EAAM,QAAQ,GAAG,EAE/B,YAAaA,EAAM,QAAQ,EAAG,CAChC,CAAC,CACH,CACF,CAEA,SAASspB,GAAWC,EAAuC,CACzD,MAAO,CAAC3c,EAAWxL,IAAc,CAC/B,MAAMooB,EAAKD,EAAO3c,CAAC,EACb6c,EAAKF,EAAOnoB,CAAC,EAGnB,OAAIooB,EAAG,OAAS,MAAQC,EAAG,OAAS,KAC3BD,EAAG,MAAQC,EAAG,MAIhB,CACT,CACF,CAEO,MAAMC,GAAyBnlB,GAMnB,CACjB,KAAM,CAAE,cAAAolB,EAAe,OAAAJ,EAAQ,YAAAK,EAAa,aAAAC,CAAa,EAAItlB,EACvDvE,KAAQ,MAAU,EAClBvB,EAAS4qB,GAAoBrpB,CAAK,EAClC8pB,EAAY,OAAO,KAAKP,CAAM,EAAE,OAAQQ,GAAcH,EAAYG,CAAS,CAAC,EAE5EC,EAAaC,GAAuB,CACnCA,EAAO,aAGZN,EAAcM,EAAO,OAAO,MAAOA,EAAO,YAAY,KAAK,CAC7D,EAEMC,EAAeH,GAAsB,CACzC,MAAMrY,EAAQ6X,EAAOQ,CAAS,EAC9B,GAAIrY,EACF,MAAO,GAAGqY,CAAS,eAAerY,GAAO,uBAAuB,gBAIpE,EAEA,OAAIoY,EAAU,UAEV,OAAC,MAAe,CAAC,UAAAE,EACf,mBAAC,MAAS,CAAC,YAAY,eAAe,UAAU,WAC7C,SAACG,MACA,QAAC,OAAI,UAAW1rB,EAAO,cAAgB,GAAG0rB,EAAS,eAAgB,IAAKA,EAAS,SAC9E,UAAAL,EAAU,KAAKR,GAAWC,CAAM,CAAC,EAAE,IAAI,CAACQ,EAAW1mB,OAClD,OAAC,MAAS,CAAC,YAAa0mB,EAA2B,MAAA1mB,EAChD,UAAC8mB,EAA6BC,OAC7B,OAAC,OACC,aAAW,MAAG3rB,EAAO,KAAM2rB,EAAS,WAAa3rB,EAAO,SAAW,MAAS,EAC5E,IAAK0rB,EAAS,SACb,GAAGA,EAAS,eACZ,GAAGA,EAAS,gBACb,MAAOD,EAAYH,CAAS,EAE5B,mBAACZ,GAAA,CACC,MAAOY,EACP,SAAU,IAAMF,EAAaE,CAAS,EACtC,OAAAR,EACA,UAAW,GACb,EACF,GAfoCQ,CAiBxC,CACD,EACAI,EAAS,aACZ,EAEJ,EACF,KAIG,OAACjB,GAAoB,EAAC,CAC/B,ECpGMmB,GAAW,IAAI,KAAK,SAAS,OAAW,CAAE,YAAa,MAAO,CAAC,EAErE,SAAS,GAAWd,EAAuC,CACzD,MAAO,CAAC3c,EAAWxL,IAAc,CAC/B,MAAMooB,EAAKD,EAAO3c,CAAC,EACb6c,EAAKF,EAAOnoB,CAAC,EAGnB,OAAIooB,GAAM,MAAQC,GAAM,KAEpB,EAAOA,EAAG,OAAS,cAAgB,EAAOD,EAAG,OAAS,eACtD,EAAOC,EAAG,OAAS,cAAgB,EAAOD,EAAG,OAAS,eACtDa,GAAS,QAAQzd,EAAGxL,CAAC,EAKlB,CACT,CACF,CAEO,MAAMkpB,GAA4B/lB,GAItB,CACjB,KAAM,CAAE,OAAAglB,EAAQ,YAAAK,EAAa,aAAAC,CAAa,EAAItlB,EACxCvE,KAAQ,MAAU,EAClBvB,EAAS4qB,GAAoBrpB,CAAK,EAClC8pB,EAAY,OAAO,KAAKP,CAAM,EAAE,OAAQQ,GAAcH,EAAYG,CAAS,CAAC,EAClF,OAAID,EAAU,UAGV,OAAC,OAAI,UAAWrrB,EAAO,cACpB,SAAAqrB,EAAU,KAAK,GAAWP,CAAM,CAAC,EAAE,IAAI,CAACQ,EAAW1mB,OAClD,OAAC,OAEC,UAAW5E,EAAO,KAClB,MAAO,GAAGsrB,CAAS,eAAeR,EAAOQ,CAAS,GAAG,uBAAuB,iBAE5E,mBAACZ,GAAA,CACC,UAAW,GACX,MAAOY,EACP,SAAU,IAAMF,EAAaE,CAAS,EACtC,OAAAR,CAAA,CACF,GATKQ,CAUP,CACD,EACH,KAIG,OAACb,GAAoB,EAAC,CAC/B,ECnDA,SAAS,GAAUlpB,EAAsB,CACvC,MAAO,CACL,eAAa,OAAI,CACf,UAAW,SACX,OAAQ,oBAER,uBAAwB,CACtB,QAAS,MACX,EAEA,eAAgB,MAClB,CAAC,EACD,sBAAoB,OAAI,CACtB,WAAY,OACZ,WAAY,OACZ,OAAQ,OACR,SAAUA,EAAM,WAAW,QAAQ,EAAE,CACvC,CAAC,EACD,gBAAc,OAAI,CAChB,QAAS,OACT,eAAgB,gBAChB,SAAUA,EAAM,WAAW,GAAG,SAC9B,WAAYA,EAAM,OAAO,WAAW,UACpC,SAAU,SACV,IAAK,EACL,KAAM,EACN,WAAYA,EAAM,QAAQ,GAAI,EAC9B,aAAcA,EAAM,QAAQ,GAAI,EAChC,cAAeA,EAAM,QAAQ,GAAI,EACjC,YAAaA,EAAM,QAAQ,GAAG,EAC9B,OAAQ,EACR,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,CACH,CACF,CAEO,MAAMuqB,GAAwBhmB,GAM/B,CACJ,MAAMvE,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EAE9B,SACE,OAAC,OAAI,UAAWvB,EAAO,YAErB,gCACE,qBAAC,OAAI,UAAWA,EAAO,aAAc,+BAEnC,OAAC,UAAO,QAAS8F,EAAM,MAAO,UAAW9F,EAAO,mBAAoB,iBAEpE,GACF,KACA,OAACirB,GAAA,CACC,cAAenlB,EAAM,cACrB,aAAcA,EAAM,aACpB,OAAQA,EAAM,yBAA2BA,EAAM,gBAC/C,YAAce,GAAUf,EAAM,gBAAgBe,CAAK,GAAG,QAAU,GAChE,GAAI,kBACN,KAEA,OAAC,OAAI,UAAW7G,EAAO,aAAc,kBAAM,KAC3C,OAAC6rB,GAAA,CACC,aAAc/lB,EAAM,aACpB,OAAQA,EAAM,yBAA2BA,EAAM,gBAC/C,YAAce,GAAU,CAACf,EAAM,gBAAgBe,CAAK,GAAG,OACzD,GACF,EACF,CAEJ,E,gBC/EA,MAAMklB,GAAK,IAAI,KAAO,CACpB,UAAW,EACX,SAAU,EACV,SAAU,EACV,SAAU,EACV,SAAU,CACZ,CAAC,EAEM,SAASC,GAAYC,EAAoBjqB,EAAekqB,EAAwC,CACrG,KAAM,CAACC,EAAMC,EAAMC,CAAK,EAAIN,GAAG,OAAOE,EAAUjqB,EAAO,EAAG,GAAG,EAE7D,IAAIsqB,EAA0B,CAAC,EAC3BC,EAA0B,IAAI,IAClC,GAAIJ,GAAQE,EAAO,CAMjB,MAAMG,EAAO,CAACC,EAAcC,IAAqB,CAC3CA,GACFH,EAAW,IAAIE,CAAI,CAEvB,EAGA,QAASzpB,EAAI,EAAGA,EAAIqpB,EAAM,OAAQrpB,IAAK,CACrC,IAAI2pB,EAAUN,EAAMrpB,CAAC,EAGrB,KAAO,UAAUipB,EAASG,EAAK,IAAIO,CAAO,CAAC,EAAGP,EAAK,OAAOO,CAAO,EAAGH,CAAI,EAExEF,EAAc,KAAKL,EAASG,EAAK,IAAIO,CAAO,CAAC,CAAC,CAChD,CAEAT,EAAW,CAACI,EAAe,CAAC,GAAGC,CAAU,CAAC,CAAC,CAC7C,MAAYvqB,GACVkqB,EAAW,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,CAEvB,CAEO,MAAMU,MAAuB,aAAeZ,GAAa,GAAG,ECe5D,SAASa,GAAc/mB,EAAc,CAC1C,KAAM,CAAE,WAAAgnB,EAAY,iBAAAC,EAAkB,WAAAC,CAAW,EAAIlnB,EAC/CmnB,EAAeD,GAAY,QAE3B,CAAC/H,EAAiBiI,CAAkB,KAAI,YAAyC,MAAS,EAG1F,CAACC,EAAyBC,CAA0B,KAAI,YAAyC,MAAS,EAC1G,CAACC,EAAaC,CAAc,KAAI,YAAiB,EAAE,EAEnD/mB,EAASgnB,GAAmB,EAC5BC,EAAkB1nB,GAAO,YAAY,MAGrC,CAAC2nB,EAAkBC,CAAmB,KAAI,YAC9CZ,EAAW,KAAMa,GAAMA,EAAE,QAAUH,CAAe,GAAKV,EAAW,CAAC,CACrE,EAEMc,KAAsB,eACzBC,GAAmC,CAClC,MAAMC,EAAqBhoB,EAAM,YAAY,QAC7C,OAAIgoB,GACF,OAAO,OAAOA,CAAkB,EAAE,QAAQ,CAAClnB,EAAKhC,IAAU,CACpDipB,EAAWjnB,CAAG,IAChBinB,EAAWjnB,CAAG,EAAE,OAAS,GACzBinB,EAAWjnB,CAAG,EAAE,MAAQhC,EAE5B,CAAC,EAEIipB,CACT,EACA,CAAC/nB,EAAM,YAAY,OAAO,CAC5B,EACMof,KAAY,MAAeuI,CAAgB,KAEjD,aAAU,IAAM,CACd,GAAIvI,GAAW,UAAU,MAAQA,GAAW,UAAU,MAAQ,CAAC+H,EAAc,CAC3E,MAAMc,EAAiB,CAAE,EAAG7I,GAAW,UAAU,MAAQ,GAAI,EAAGA,GAAW,UAAU,MAAQ,EAAG,EAChG6H,EAAiB,CACf,QAAS,OAAO,OAAOgB,CAAc,EACrC,kBAAmB,QACnB,eAAgB7I,GAAW,kBAAkB,GAAK,MACpD,CAAC,CACH,CACF,EAAG,CAACA,EAAW+H,EAAcF,CAAgB,CAAC,KAK9C,aAAU,IAAM,CACd,MAAMiB,EAAWlB,EAAW,KAAMa,GAAMA,EAAE,QAAUH,CAAe,GAAKV,EAAW,CAAC,EAChFkB,GACFN,EAAoBM,CAAQ,CAEhC,EAAG,CAAClB,EAAYU,CAAe,CAAC,KAOhC,aAAU,IAAM,CACd,GAAI,CAACvI,GAAmB,CAACkI,EACvB,OAEF,IAAIc,EAAc,CAAE,GAAGd,CAAwB,EAC3Ce,EAAO,GACX,OAAO,KAAKjJ,CAAe,EAAE,QAASre,GAAQ,CACxCqnB,EAAYrnB,CAAG,GAAKqnB,EAAYrnB,CAAG,EAAE,SAAWqe,EAAgBre,CAAG,EAAE,SACvEqnB,EAAYrnB,CAAG,EAAIqe,EAAgBre,CAAG,EACtCsnB,EAAO,GAEX,CAAC,EACGA,GACFd,EAA2Ba,CAAW,CAE1C,EAAG,CAAChJ,EAAiBkI,CAAuB,CAAC,KAU7C,aAAU,IAAM,CAEd,GAAI,CAACM,EAAiB,OACpB,OAEF,MAAMU,EAAmBV,EAAmBA,EAAiB,OAAS,EAChEvI,KAAY,MAAeuI,CAAgB,EAC3C3C,EAAS5F,GAAW,0BAA0B,EAE9CkJ,EAAc,CAAC,EAEjBlJ,GACFkJ,EAAY,KAAK,GAAGlJ,EAAU,YAAY,OAAQrQ,IAAU,CAACA,IAAO,QAAQ,QAAQ,MAAM,CAAC,EAEzFqQ,GAAW,eACbkJ,EAAY,KAAKlJ,GAAW,aAAa,EAEvCA,GAAW,WACbkJ,EAAY,KAAKlJ,GAAW,SAAS,EAEnCA,GAAW,WACbkJ,EAAY,KAAKlJ,GAAW,SAAS,EAIvC,MAAMmJ,EAAmB,IAAI,IAG7B,IAAIC,EAAwC,CAAC,EAGzCxD,GAAQ,QAAUqD,IAEpBrD,EAAO,QAASA,IAAmB,CACb,OAAO,KAAKA,EAAM,EAE1B,QAAS7X,IAAU,CAE7B,GAAIob,EAAiB,IAAIpb,EAAK,EAAG,CAC/B,MAAMpM,GAAQwnB,EAAiB,IAAIpb,EAAK,EACpCpM,KACEA,IAAO,OACTwnB,EAAiB,IAAIpb,GAAO,CAC1B,wBAAyBpM,GAAM,wBAA0B,EACzD,OAAQ,GACR,MAAOA,GAAM,KACf,CAAC,EAEDwnB,EAAiB,IAAIpb,GAAO,CAC1B,wBAAyBpM,GAAM,wBAA0B,EACzD,OAAQ,GACR,MAAO,MACT,CAAC,EAIP,MACEwnB,EAAiB,IAAIpb,GAAO,CAAE,wBAAyB,EAAG,OAAQ,GAAO,MAAO,MAAU,CAAC,CAE/F,CAAC,CACH,CAAC,EAGDqb,EAAoB,OAAO,YAAYD,CAAgB,EAGvD,OAAO,KAAKC,CAAiB,EAAE,QAAS1nB,IAAQ,CAC9C0nB,EAAkB1nB,EAAG,EAAE,wBAA0B2nB,GAC/CD,EAAkB1nB,EAAG,EAAE,wBACvBunB,CACF,CACF,CAAC,GAIHC,EAAY,QAASvZ,IAAU,CAC7B,MAAM3F,GAAWof,EAAkBzZ,GAAM,IAAI,GAAG,OAC1CjQ,GAAQ0pB,EAAkBzZ,GAAM,IAAI,GAAG,MACzC3F,IAAYtK,KAAU,OACxB0pB,EAAkBzZ,GAAM,IAAI,EAAI,CAC9B,wBAAyB0Z,GACvB1Z,GAAM,OAAO,OAAQhO,IAAUA,IAAU,IAA2B,EAAE,OACtEsnB,CACF,EACA,OAAQ,GACR,MAAAvpB,EACF,EAEA0pB,EAAkBzZ,GAAM,IAAI,EAAI,CAC9B,wBAAyB0Z,GACvB1Z,GAAM,OAAO,OAAQhO,IAAUA,IAAU,IAA2B,EAAE,OACtEsnB,CACF,EACA,OAAQ,GACR,MAAO,MACT,CAEJ,CAAC,EAEDG,EAAoBV,EAAoBU,CAAiB,EAG1C,OAAO,KAAKA,CAAiB,EAAE,OAAQ1nB,IAAQ0nB,EAAkB1nB,EAAG,EAAE,MAAM,EAGhF,SAAW,IAChBse,GAAW,WAAW,OACxBoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,OAAS,IAEnDA,GAAW,WAAW,OACxBoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,OAAS,KAIrDA,GAAW,WAAW,MAAQA,GAAW,WAAW,OACtDoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,KAAO,aACnDoJ,EAAkBpJ,EAAU,UAAU,IAAI,EAAE,KAAO,cAGrDgI,EAAmBoB,CAAiB,CAGtC,EAAG,CAACb,EAAkBG,CAAmB,CAAC,EAE1C,KAAM,CAACY,EAAcC,CAAe,KAAI,YAAS,GAAG,EAC9CC,EAAa5oB,EAAM,MAAQ0oB,EAEjC,GAAI,CAACvJ,EACH,OAAO,KAGT,SAAS0J,EAAkBC,EAAoB,CAC7C,GAAI3J,EAAiB,CACnB,MAAMxa,EAAW,CAACwa,EAAgB2J,CAAU,GAAG,OACzCC,EAAmB,OAAO,KAAK5J,CAAe,EAAE,OAAQ6J,GAAW7J,EAAgB6J,CAAM,GAAG,MAAM,GAAG,OACrGlwB,EAAQ,CACZ,aAAc6L,EAAW,MAAQ,SACjC,YAAaA,EAAWokB,EAAmB,EAAIA,EAAmB,EAClE,eAAgB/oB,EAAM,cACxB,KACA,MAAkB,mDAAoDlH,CAAK,CAC7E,CACF,CAEA,SAASmwB,EAAkBC,EAA2B,IACpD,MAAkB,sDAAuD,CACvE,YAAaA,EACb,eAAgBlpB,EAAM,gBAAkB,SAC1C,CAAC,CACH,CAEA,MAAMmpB,EAAiB,IAAM,CAC3B,MAAMX,EAAoB,CAAE,GAAGrJ,CAAgB,EAC/C,IAAIrgB,EAAQ,EACZ,OAAO,KAAK0pB,CAAiB,EAAE,QAAS1nB,GAAQ,CAC9C,MAAMsoB,EAAiB,CAAC,CAACZ,EAAkB1nB,CAAG,EAAE,KAEhD0nB,EAAkB1nB,CAAG,EAAE,OAASsoB,EAEhCZ,EAAkB1nB,CAAG,EAAE,MAAQsoB,EAAiBtqB,IAAU,MAC5D,CAAC,EACDsoB,EAAmBoB,CAAiB,CACtC,EAEMpD,EAAgB,CAACiE,EAAqBC,IAA6B,CACvE,GAAID,IAAgBC,EAClB,OAGF,MAAMd,EAAoB,CAAE,GAAGrJ,CAAgB,EAEzC9iB,EAAO,OAAO,KAAKmsB,CAAiB,EACvC,OAAQ1nB,GAAQ0nB,EAAkB1nB,CAAG,EAAE,MAAM,EAC7C,IAAKA,IAAS,CACb,UAAWA,EACX,MAAO0nB,EAAkB1nB,CAAG,EAAE,OAAS,CACzC,EAAE,EACD,KAAK,CAACuH,EAAGxL,KAAMwL,EAAE,MAAQxL,GAAE,KAAK,EAE7B,CAAC0sB,CAAM,EAAIltB,EAAK,OAAOgtB,EAAa,CAAC,EAC3ChtB,EAAK,OAAOitB,EAAkB,EAAGC,CAAM,EAEvCltB,EAAK,QAAQ,CAACyE,EAAKhC,KAAU,CAC3B0pB,EAAkB1nB,EAAI,SAAS,EAAE,MAAQhC,EAC3C,CAAC,EAGDsoB,EAAmBoB,CAAiB,EAGpCgB,EAAmBhB,CAAiB,CACtC,EAEA,SAASgB,EAAmBhB,EAAuC,CAEjE,MAAMiB,EAAkB,OAAO,KAAKjB,CAAiB,EAElD,OAAQ1nB,GAAQ0nB,EAAkB1nB,CAAG,GAAG,MAAM,EAC9C,KAAK,CAACuH,EAAGxL,KAAM,CACd,MAAM6sB,GAAKlB,EAAkBngB,CAAC,EACxBshB,GAAKnB,EAAkB3rB,EAAC,EAC9B,OAAI6sB,GAAG,QAAU,QAAaC,GAAG,QAAU,OAClCD,GAAG,MAAQC,GAAG,MAEhB,CACT,CAAC,EAEGC,EAAqC,OAAO,OAChD,CAAC,EAEDH,CACF,EAEMxB,EAAiB,CAAE,EAAG7I,GAAW,UAAU,MAAQ,GAAI,EAAGA,GAAW,UAAU,MAAQ,EAAG,EAC1FyK,EAAuC,CAC3C,GAAG7pB,EAAM,WAET,QAAS,OAAO,KAAK4pB,CAAU,EAAE,OAASA,EAAa3B,EACvD,MAAON,EAAiB,MACxB,kBAAmB,QACnB,eAAgBvI,GAAW,kBAAkB,GAAK,MACpD,EAGA6H,EAAiB4C,CAAa,CAChC,CAGA,MAAMvE,EAAgBwD,GAA0B,CAC9C,GAAI,CAAC3J,GAAmB,EAAE2J,KAAc3J,GAAkB,CACxD,QAAQ,KAAK,uBAAwBA,CAAe,EACpD,MACF,CAEA,MAAM2K,EAAS,OAAO,KAAK3K,CAAe,EAAE,OAAQtZ,GAAMsZ,EAAgBtZ,CAAC,EAAE,MAAM,EAAE,OAC/EuD,EAAY+V,EAAgB2J,CAAU,EAAE,OAAgB,OAAP,GAEvD,IAAIN,EA4BJ,GA3BIpf,EACFof,EAAoB,CAClB,GAAGrJ,EACH,CAAC2J,CAAU,EAAG,CACZ,GAAG3J,EAAgB2J,CAAU,EAC7B,OAAQ1f,EACR,MAAO0gB,CACT,CACF,EAEAtB,EAAoB,CAClB,GAAGrJ,EACH,CAAC2J,CAAU,EAAG,CACZ,GAAG3J,EAAgB2J,CAAU,EAC7B,OAAQ,GACR,MAAO,MACT,CACF,EAIFD,EAAkBC,CAAU,EAG5B1B,EAAmBoB,CAAiB,EAGhCnB,EAAyB,CAC3B,MAAM0C,EAAS,CAAC1C,EAAwByB,CAAU,GAAG,OACrD,IAAIkB,EACAD,EACFC,EAA4B,CAC1B,GAAG3C,EACH,CAACyB,CAAU,EAAG,CACZ,GAAGzB,EAAwByB,CAAU,EACrC,OAAAiB,EACA,MAAOD,CACT,CACF,EAEAE,EAA4B,CAC1B,GAAG3C,EACH,CAACyB,CAAU,EAAG,CACZ,GAAGzB,EAAwByB,CAAU,EACrC,OAAQ,GACR,MAAO,MACT,CACF,EAGFxB,EAA2B0C,CAAyB,CACtD,CAEAR,EAAmBhB,CAAiB,CACtC,EAGMpC,EAAc6D,GAAqB,CACvC,MAAMC,EAAUD,EAAK,CAAC,EACtB,IAAIE,EAAyC,CAAC,EAC1CC,EAAkB,EACtBF,EAAQ,QAASG,GAAU,CACrBA,KAASlL,IACXgL,EAAmBE,CAAK,EAAIlL,EAAgBkL,CAAK,EACjDD,IAEJ,CAAC,EACD9C,EAA2B6C,CAAkB,EAC7ClB,EAAkBmB,CAAe,CACnC,EAGME,EAAUC,GAAmB,CACjCrE,GAAY,OAAO,KAAK/G,CAAe,EAAGoL,EAAQnE,CAAU,CAC9D,EAGMoE,EAAuB9sB,GAAyC,CACpE,MAAMqD,EAAQrD,EAAE,eAAe,MAC/B8pB,EAAezmB,CAAK,EAChBA,EACFupB,EAAOvpB,CAAK,EAGZumB,EAA2B,MAAS,CAExC,EAEMmD,EAAyB1pB,GAAmC,CACtCimB,EAAW,KAAMvH,GAAUA,EAAM,QAAU1e,EAAM,KAAK,GAE9E6mB,EAAoBZ,EAAW,KAAMvH,GAAUA,EAAM,QAAU1e,EAAM,KAAK,GAAKimB,EAAW,CAAC,CAAC,EAE9FhnB,EAAM,iBAAiB,CAAE,MAAOe,EAAM,MAAO,eAAgBqe,GAAW,kBAAkB,GAAK,MAAU,CAAC,CAC5G,EAEMllB,GAAS,GAAU8F,EAAM,MAAOS,EAAQioB,CAAY,EAEpDgC,GAA8B,CAAC5xB,EAAO0I,EAAW6E,IAAQ,CAC7D,MAAMskB,EAAkB,OAAOtkB,EAAI,MAAM,MAAM,MAAM,EAAG,EAAE,CAAC,EACtD,MAAMskB,CAAe,GACxBhC,EAAgBgC,CAAe,CAEnC,EAEA,SACE,oBACE,oBAAC,OACE,SAAA3D,EAAW,OAAS,MACnB,OAAC,OACC,mBAAC4D,GAAA,GACC,MAAM,eACN,QAAQ,oCACR,WAAY,GACZ,QAAQ,4CAER,mBAAC5b,GAAA,IACC,QAAS,oCACT,aAAY,uBACZ,MAAO2Y,EAAiB,MACxB,QAASX,EAAW,IAAKvH,IAChB,CACL,MAAOA,EAAM,MACb,MAAOA,EAAM,KACf,EACD,EACD,SAAUgL,CAAA,CACZ,EACF,EACF,EAEJ,KACA,QAAC,OAAI,UAAWvwB,GAAO,QACrB,oBAAC6F,GAAA,CACC,OAAQ,CACN,MAAO,EACT,EACA,cAAe,CAAE,MAAO7F,GAAO,QAAS,EACxC,SAAUwwB,GAEV,oBAAC,WAAQ,UAAWxwB,GAAO,QACzB,oBAACwqB,GAAgB,CAAC,MAAO6C,EAAa,SAAUiD,CAAA,CAAqB,KACrE,OAACxE,GAAA,CACC,cAAAZ,EACA,aAAAE,EACA,wBAAA+B,EACA,gBAAAlI,EACA,MAAOgK,CAAA,CACT,GACF,EACF,KACA,OAACpK,GAAA,CACC,UAAAK,EACA,mBAAoBpf,EAAM,mBAC1B,sBAAuBA,EAAM,sBAC7B,cAAeA,EAAM,cACrB,MAAOA,EAAM,MACb,UAAWA,EAAM,UACjB,SAAUA,EAAM,SAChB,MAAO4oB,EACP,UAAWjB,EACX,gBAAAxI,EACA,OAAA1e,CAAA,CACF,GACF,GACF,CAEJ,CAEA,MAAMgoB,GAAY,CAAC1nB,EAAe8pB,IACzB,KAAK,KAAM,IAAM9pB,EAAS8pB,CAAK,EAGxC,SAAS,GAAUpvB,EAAsBgF,EAAgBD,EAAe,CACtE,MAAO,CACL,WAAS,OAAI,CACX,QAAS,MACX,CAAC,EACD,WAAS,OAAI,CACX,OAAAC,EACA,SAAUhF,EAAM,WAAW,QAAQ,EAAE,EACrC,UAAW,SACX,MAAA+E,EACA,aAAc/E,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,YAAU,OAAI,CACZ,WAAYA,EAAM,OAAO,UAAU,KACnC,CAACA,EAAM,YAAY,aAAa,gBAAiB,QAAQ,CAAC,EAAG,CAC3D,WAAY,6BACd,EACA,SAAU,WACV,OAAQ,iBACR,MAAO,GAAGA,EAAM,QAAQ,CAAC,CAAC,cAC1B,IAAK,iBACL,MAAO,GAAGA,EAAM,QAAQ,CAAC,CAAC,cAC1B,OAAQ,OACR,aAAcA,EAAM,MAAM,OAAO,KAChC,UAAY,CACX,WAAYA,EAAM,OAAO,UAAU,KACrC,CACF,CAAC,CACH,CACF,CAEO,MAAMgsB,GAAqB,IAKzB,KAAK,IAAI,OAAO,YAAc,IAAK,GAAG,EClkBxC,SAASqD,GAAyB9qB,EAAc,CACrD,KAAM,CAAC8V,EAAQC,CAAS,KAAI,YAAS,EAAK,EACpCgV,EAA4B,IAC5B,CAAE,MAAAC,EAAO,MAAApiB,EAAO,gBAAAqiB,EAAiB,kBAAAC,EAAmB,SAAAzhB,EAAU,SAAA0hB,EAAW,SAAU,EAAInrB,EAGvFpH,EAAUoyB,GAAO,SAAWA,GAAO,MAAM,SAAW,GACpDI,EAAa,CAACtV,GAAUld,EAAQ,OAASmyB,EACzCtvB,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EAE9B,SACE,OAAC,OAAI,UAAWvB,EAAO,4BACrB,mBAACuW,GAAA,EAAK,CAAC,MAAA7H,EAAc,SAAAuiB,EAAoB,SAAA1hB,EACvC,oBAAC,OAAI,UAAWvP,EAAO,uBACpB,UAAAkxB,KACC,OAAC/xB,EAAA,IACC,QAAQ,YACR,KAAK,KACL,QAAS,IAAM,CACb0c,EAAU,EAAI,CAChB,EACD,wBAED,EAEAnd,EAEDqyB,GAAmBC,MAClB,OAAC,OAAI,UAAWhxB,EAAO,uBACrB,mBAACb,EAAA,GAAM,CAAC,QAAQ,UAAU,KAAK,KAAK,QAAS6xB,EAC1C,SAAAD,CAAA,CACH,EACF,GAEJ,EACF,EACF,CAEJ,CAEA,MAAM,GAAaxvB,IACV,CACL,+BAA6B,OAAI,CAC/B,MAAO,MACP,SAAU,GAAGA,EAAM,YAAY,OAAO,EAAE,KACxC,OAAQ,QACV,CAAC,EACD,0BAAwB,OAAI,CAC1B,OAAQA,EAAM,QAAQ,CAAC,EACtB,OAAW,CACV,SAAU,WACV,MAAOA,EAAM,QAAQ,CAAC,EACtB,IAAKA,EAAM,QAAQ,CAAC,CACtB,CACF,CAAC,CACH,G,eCnCK,SAAS4vB,GAAgBrrB,EAAc,CAC5C,KAAM,CACJ,MAAAQ,EACA,SAAA2Q,EACA,UAAA6N,EACA,kBAAAsM,EACA,sBAAAC,EACA,qBAAAC,EACA,gBAAAC,CACF,EAAIzrB,EACEvE,KAAQ,MAAU,EAClBvB,KAAS,MAAW,EAAS,EAC7BwxB,EAAU,SAASjwB,EAAM,QAAQ,CAAC,EAAE,MAAM,EAAG,EAAE,EAAG,EAAE,EACpDgF,EAAS,IAETkrB,EAAiB3rB,EAAM,eAEvB4rB,KAAiB,OAA4BD,GAAgB,IAAI,EACvE,IAAIE,EAAYD,EAAiB,GAAGA,EAAe,IAAI,GAAK,MAExD,OAAoBD,EAAe,IAAI,IACzCE,EAAY,CACVA,EACA,oHACF,EACG,OAAO,WAAQ,EACf,KAAK,IAAI,GAGd,IAAIC,KAAqB,OAAC,QAAM,SAAAD,CAAA,CAAU,EAE1C,OAAIF,EAAe,QAAU,MAAa,YACxCG,KACE,oBACG,UAAAA,KACD,OAACvwB,GAAA,EAAO,CAAC,QAAQ,YACf,mBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,KAAK,KAAK,UAAWtB,EAAO,UAAW,cAAY,uBAAwB,GACtG,GACF,MAKF,QAAC,OAAI,MAAO,CAAE,OAAAuG,CAAO,EAAG,UAAWvG,EAAO,iBACxC,oBAAC6xB,GAAA,GACC,gBAAAN,EACA,mBAAoB,CAClB,MAAO,CAAC,KAAK,CACf,EACA,WAAW,QACX,aAAcE,EAAe,OAAS,MAAa,KACnD,KAAMA,EAAe,KACrB,OAAAlrB,EACA,MAAOD,EAAQkrB,EAAU,EACzB,UAAW1rB,EAAM,UACjB,aAAcsrB,EACd,SAAAna,EACA,YAAa6N,EACb,mBAAoB,KAAmB,MACvC,sBAAAuM,EACA,aAAY,GACZ,aAAcC,EACd,SAAUxrB,EAAM,SAChB,YAAaA,EAAM,YACrB,EACC8rB,MAAsB,OAAC,OAAI,UAAW5xB,EAAO,mBAAqB,SAAA4xB,CAAA,CAAmB,GACxF,CAEJ,CAEA,MAAM,GAAarwB,IACV,CACL,sBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMLA,EAAM,WAAW,UAAU,QAAQ;AAAA,eACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,MAEtC,oBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMlB,aAAW;AAAA,eACAA,EAAM,OAAO,QAAQ,IAAI;AAAA,KAEtC,GC1HK,SAASuwB,GAAuBC,EAAkD,CAIvF,MAHI,CAACA,GAGD,CAACA,EAAS,OAAS,CAACA,EAAS,OACxB,IAGMA,EAAS,MAAQ,CAACA,EAAS,KAAK,EAAIA,EAAS,QAAU,CAAC,GAEzD,KAAMjB,IACF,GAAGA,EAAM,SAAWA,EAAM,MAAM,OAAO,IAAI,YAAY,GACxD,SAAS,SAAS,CAClC,CACH,CCuBO,MAAMkB,GAAsB,CAAC,CAClC,eAAAP,EACA,cAAAtI,EACA,kBAAAiI,EACA,MAAA9qB,EACA,iBAAA2rB,EACA,sBAAAZ,EACA,SAAA/Z,EACA,UAAAwN,EACA,SAAA7N,EACA,QAAAib,EACA,gBAAAX,CACF,IAAa,CACX,KAAM,CACJ,WAAAY,EACA,aAAcC,EACd,aAAcC,EACd,YAAAC,CACF,KAAI,WAAQ,IAAM,CAChB,IAAIC,EAAe,KACnB,MAAMxC,EAAO0B,GAAgB,KAAK,OAAQlM,GAAqBA,EAAM,MAAM,YAAc,KAAU,WAAW,EACxG+M,EACJb,GAAgB,KAAK,OAAQlM,GAAqBA,EAAM,MAAM,YAAc,KAAU,WAAW,GAAK,CAAC,EACnGiN,KAAS,WAAOzC,GAAQ,CAAC,EAAG,4BAA4B,EACxD0C,KAAU,YAAQD,EAAQ,4BAA4B,EACtDL,KAAa,cAAUM,EAAU5rB,GAAU,CAC/C,MAAM6rB,MAAa,OAA0B7rB,CAAK,EAClD,OAAA0rB,EAAe,KAAK,IAAIA,EAAcG,GAAW,OAAO,EACjDA,GAAW,UACpB,CAAC,EACKC,KAAe,UAA0B,YAAQ,OAAO,OAAOR,CAAU,CAAC,CAAC,EACjF,MAAO,CACL,aAAAI,EACA,aAAAI,EACA,WAAAR,EACA,YAAAG,CACF,CACF,EAAG,CAACb,CAAc,CAAC,EAEbzxB,KAAS,MAAW,EAAS,EAE7B4yB,EAAqB,OAAO,KAAKT,CAAU,EAAE,OAE7CU,EAAiB,OAAO,OAAOV,CAAU,EAAE,KAAMpC,GAAsB,CAC3E,MAAM+C,EAAYC,GAAmBhD,EAAM5G,CAAa,EACxD,MAAO,IAAC,OAAoB4G,CAAI,GAAK+C,GAAaA,EAAY,CAChE,CAAC,EAEKE,EAAelB,GAAuBL,CAAc,EAEpDrZ,KAAO,OAAS,KAAK,IAAI+Q,EAAc,KAAMkJ,EAA0B,IAAI,CAAC,EAC5Eha,KAAK,OAAS,KAAK,IAAI8Q,EAAc,GAAIkJ,EAA0B,EAAE,CAAC,EACtExO,EAA0B,CAAE,KAAAzL,EAAM,GAAAC,EAAI,IAAK,CAAE,KAAAD,EAAM,GAAAC,CAAG,CAAE,EAE9D,OAAIoZ,GAAgB,QAAU,MAAa,WAClC,OAAC,QAAK,sBAAU,EACduB,KAEP,OAACpC,GAAA,CACC,MAAM,sCAEN,SAAS,OACT,gBAAgB,QAChB,kBAAmBqB,EACnB,SAAUC,CAAA,CACZ,EAEOT,GAAgB,QAAU,UAC5B,OAACb,GAAwB,CAAC,MAAOa,EAAe,MAAO,MAAM,0CAA2C,GAG7GmB,IAAuB,KAEvB,OAAC,OAAI,UAAW5yB,EAAO,eACrB,mBAACuW,GAAA,EAAK,CAAC,SAAS,OAAO,MAAM,2BAA2B,mFAExD,EACF,KAKF,QAAC,OAAI,UAAWvW,EAAO,cACpB,iBAAO,KAAKmyB,CAAU,EAAE,IAAI,CAACtS,EAAMjb,IAAU,CAC5C,MAAM6sB,EAAiB,CAAE,KAAMU,EAAWtS,CAAI,CAAE,EAChD,SACE,OAACsR,GAAA,CACC,gBAAAI,EAEA,UAAW1N,EACX,qBAAsBuO,EACtB,MAAA9rB,EACA,eAAgBmrB,EAChB,kBAAAL,EACA,SAAAna,EACA,UAAA6N,EACA,iBAAAmN,EAEA,sBAAuBW,EAAqB,EAAI,IAAM,CAAC,EAAIvB,EAC3D,SAAA/Z,EACA,YAAAgb,CAAA,EAZK1tB,CAaP,CAEJ,CAAC,EACAiuB,MACC,OAAC,OAAI,UAAW7yB,EAAO,mBACrB,mBAAC0wB,GAAA,EAAW,CAAC,MAAM,oBAAoB,YAAW,GAChD,mBAACvxB,EAAA,GAAM,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,YAAY,QAAS8yB,EAAkB,GAAG,eAAgB,GAClG,EACF,GAEJ,CAEJ,EAEM,GAAa1wB,IACV,CACL,iBAAe;AAAA;AAAA,MAGf,sBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpB,eAAa;AAAA,mBACEA,EAAM,WAAW,UAAU,QAAQ;AAAA,eACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,MAEtC,kBAAgB;AAAA;AAAA,mBAEDA,EAAM,YAAY,OAAO,EAAE;AAAA;AAAA,KAG5C,GAGF,SAASwxB,GACPtB,EACAwB,EACoB,CACpB,MAAMC,EAAYzB,GAAkBA,EAAe,CAAC,GAAKA,EAAe,CAAC,EAAE,MAAM,QAAQ,cACzF,OAAOyB,GAAaD,EAAkB,KAAOA,EAAkB,KAAOC,EAAU,KAAOA,EAAU,IAAM,MACzG,C,gBCnDA,MAAMC,GAAgB,CACpB,KAAkB,KAClB,KAAkB,MAClB,KAAkB,QAClB,KAAkB,SACpB,EAEMC,GAA8B,IAA6B,CAC/D,MAAMC,EAAoB,KAAM,IAAI,IAAoB,EACxD,OAAIA,IAAsB,QACjB,QAELA,IAAsB,OACjB,OAEL9wB,EAAA,EAAO,eAAe,qCACjB,QAEF,MACT,EAEM+wB,GAAoB,GACpBC,GAAoB,aACpBC,GAAsB,yBACtBC,GAAsB,OAEtBC,GAAgD5tB,GAAiB,CACrE,KAAM,CACJ,MAAAQ,EACA,UAAAwe,EACA,QAAA2C,EACA,SAAAkM,EACA,kBAAAC,EACA,eAAAnC,EACA,mBAAAoC,EACA,QAAAtV,EAAU,GACV,mBAAAgI,EACA,sBAAAC,EACA,SAAAvP,EACA,SAAA6c,EACA,UAAAC,EACA,kBAAAC,EACA,cAAA7K,EACA,aAAAhR,EACA,cAAA8b,EACA,MAAA1yB,EACA,YAAA2yB,EACA,WAAA7K,EACA,kBAAAC,EACA,UAAA7oB,EACA,cAAA0zB,EACA,mBAAAC,EACA,mBAAAC,EACA,aAAAxS,EACA,WAAAmL,EACA,SAAA1V,CACF,EAAIxR,EACE,CAACwuB,EAAYC,EAAa,KAAI,YAAkB,KAAM,QAAQ,KAAc,WAAY,EAAK,CAAC,EAC9F,CAACC,GAAUC,CAAW,KAAI,YAAkB,KAAM,QAAQ,KAAc,SAAU,EAAI,CAAC,EACvF,CAACC,EAAgBC,CAAiB,KAAI,YAAkB,KAAM,QAAQ,KAAc,eAAgB,EAAI,CAAC,EACzG,CAACC,EAAoBC,CAAqB,KAAI,YAClD,KAAM,QAAQ,KAAc,mBAAoB,EAAK,CACvD,EACM,CAAC3N,EAAe4N,EAAgB,KAAI,YAA4B,KAAkB,IAAI,EACtF,CAACC,GAAiBC,EAAkB,KAAI,YAAqB,CAAC,CAAC,EAC/D,CAACjQ,GAAekQ,EAAgB,KAAI,YACxC,KAAM,IAAI,KAAc,aAAa,GAAK,KAAc,UAC1D,EACM,CAACC,GAAYC,EAAa,KAAI,YAAkB,EAAK,EACrD,CAAC/N,GAAiBgO,EAAkB,KAAI,YAAmB,CAAC,CAAC,EAC7D,CAAC7N,GAAa8N,EAAc,KAAI,YAAkB,EAAK,EACvD,CAACC,GAAaC,EAAc,KAAI,YAAkB,EAAK,EACvD,CAACC,GAAYC,EAAa,KAAI,YAAkC,MAAS,EACzE,CAACC,GAA2BC,EAA4B,KAAI,YAAyBnC,EAAmB,EACxG,CAACH,GAAmBuC,EAAoB,KAAI,YAChD5I,GAAY,MAAM,mBAAqBoG,GAA4B,CACrE,EACM,CAAC5hB,GAAgBqkB,EAAiB,KAAI,YAAuD,MAAS,EACtGC,MAAmB,UAAmC,MAAS,EAC/D/1B,MAAW,eAAY,EACvBg2B,MAAkBC,GAAA,GAAYzX,CAAO,EAErC0X,GAAqB3e,EAAS,aAAa,aAAc,CAAE,UAAW,EAAM,CAAC,EAC7E,CAAE,SAAA1K,GAAU,WAAAc,GAAY,aAAAjB,GAAc,WAAAmB,GAAY,sBAAAE,EAAsB,EAAIS,GAAyB,GAAK,CAAC,EAC3G2nB,MAAiB,UAA2B,MAAS,EACrDC,MAAsB,UAA2B,MAAS,EAC1D5E,MAAkB,UAAiE,IAAM,CAAC,CAAC,EAC3F6E,MAAa,UAAuB,IAAI,EAExCC,GAAc9I,GAAmB,EACjCvtB,GAAS,GAAUuB,EAAOmzB,EAAgB2B,EAAW,EACrDC,GAAU7O,GAAWA,EAAQ,OAAS,EACtC8O,GAAWxC,EAAY,YAAY,qBAA4BA,CAAS,CAAC,GAAK,cAI9EyC,GADa/pB,IAAc,KAAMQ,GAASA,EAAK,UAAYwmB,IAAuBxmB,EAAK,QAAU,MAAM,GAC9E,UAC3B,OAAQwpB,GAAaA,EAAS,QAAUlD,EAAiB,EAC1D,IAAKiD,GAAeA,EAAW,EAAE,EAE9BE,MAAqB,eAAY,IAClBjqB,IAAc,KAAMQ,GAASA,EAAK,UAAYwmB,IAAuBxmB,EAAK,QAAU,MAAM,GAC1F,UAAU,OAAQM,GAAUA,EAAM,QAAUgmB,EAAiB,EAAE,QAAU,EAC3F,CAAC9mB,EAAY,CAAC,EAEXkqB,MAAsC,eAAY,IAAM,CAC5D,MAAMC,EAAY,OAAO,KAAK,KAAa,EACrCC,EAAsB,IAAI,IAAIpF,GAAgB,IAAI,EAElDqF,EAAarF,GAAgB,KAAK,OACrClM,IAAqBA,GAAM,MAAM,YAAc,KAAU,WAC5D,EACMkN,MAAU,YAAQqE,EAAY,4BAA4B,EAC1DlE,GAAqB,OAAO,KAAKH,EAAO,EAAE,OAG5C3kB,IACFA,GAAuBipB,IACFA,IAAO,KAAM9pB,IAASA,GAAK,UAAYwmB,IAAuBxmB,GAAK,QAAU,MAAM,GACnF,GAClB,QAAQ,EAIb,MAAM+pB,GAAkE,CAAC,EACzEH,EAAoB,QAAS7R,IAAc,CACzC,KAAM,CAAE,MAAApS,EAAM,KAAI,OAAgBoS,EAAS,EAC3CgS,GAAe,KAAK,CAAE,SAAUpkB,GAAO,YAAU,OAAYA,EAAK,CAAE,CAAC,CACvE,CAAC,EAED,MAAMqkB,GAAgBD,GAAe,KACnC,CAAC7oB,GAA6CxL,KACrCi0B,EAAU,QAAQzoB,GAAE,SAAS,SAAS,CAAC,EAAIyoB,EAAU,QAAQj0B,GAAE,SAAS,SAAS,CAAC,EAAI,EAAI,EAErG,EAEMu0B,GAAY,IAAI,IAAID,EAAa,EAEnCC,GAAU,KAAO,GAAKtD,GAAqBhB,KAAuB,GACpEsE,GAAU,QAAStkB,IAAU,CAC3B,MAAMukB,GAAoBpC,GAAgB,SAAW,EAC/CqC,GAAuB,CAACrC,GAAgB,KAAMsC,IAAgBA,KAAgBzkB,GAAM,QAAQ,EAC9FhG,IACFA,GAAS,CACP,MAAOgG,GAAM,SACb,KAAM,UACN,QAAS6gB,GACT,MAAO,QACP,KAAM,SACN,UAAW2D,IAAwB,CAACD,GACpC,QAAU3zB,IAAwB,CAChC+tB,GAAgB,UAAU3e,GAAM,YAAU,MAAoBpP,EAAC,CAAC,EAChE+gB,GAA+B3R,EAAK,CACtC,EACA,IAAK,KACL,MAAO,MAAcA,GAAM,QAAQ,CACrC,CAAC,CAEL,CAAC,CAEL,EAAG,CAAC6e,GAAgB,KAAM3jB,GAAuB8lB,EAAmBmB,GAAiBnoB,GAAU2kB,EAAe,CAAC,KAE/G,aAAU,IAAM,CACVmF,GAAmB,IAAMpD,GAC3BqC,MACE,QAAC,QAAK,MAAO,CAAE,QAAS,OAAQ,UAAW,QAAS,EAAG,4BAErD,QAAC,KAAK,CAAC,QAAQ,mCAAmC,wBACpC,CAAE,kBAAArC,EAAkB,EAAE,qDACpC,GACF,CACF,EAEAqC,GAA6BnC,EAAmB,CAEpD,EAAG,CAAC/mB,GAAciqB,EAAkB,CAAC,KAErC,aAAU,IAAM,CACVnY,GAAW,CAACwX,IAAmB/I,GAAY,MAAM,KAEnD,OAAOA,EAAW,KAAK,GAEvBjtB,MACE,OAAiBU,EAAW,OAAQ,CAClC,GAAGusB,CACL,CAAC,CACH,EAEJ,EAAG,CAACjtB,GAAUU,EAAW8d,EAASyO,EAAY+I,EAAe,CAAC,KAE9D,aAAU,IAAM,CACd,MAAM1C,EAAoBrG,GAAY,MAAM,mBAAqBoG,GAA4B,EAC7FwC,GAAqBvC,CAAiB,EAEtC,KAAM,IAAI,KAAsBA,CAAiB,CACnD,EAAG,CAACrG,GAAY,MAAM,iBAAiB,CAAC,KAExC,aAAU,IAAM,CACd2J,GAAoC,CACtC,EAAG,CAAClF,GAAgB,KAAMsD,GAAiB4B,EAAmC,CAAC,KAE/Eh2B,GAAA,GAAW,IAAM,CACXu1B,IACF,OAAO,aAAaA,GAAe,OAAO,EAExCC,IACF,OAAO,aAAaA,GAAoB,OAAO,CAEnD,CAAC,KAEDx1B,GAAA,GAAW,IAAM,EAEXqsB,GAAY,MAAM,SAAWA,GAAY,MAAM,OAASA,GAAY,MAAM,iBAC5EjtB,MACE,OAAiBU,EAAW,OAAQ,CAClC,GAAGusB,GAAY,KACf,QAAS,OACT,kBAAAqG,GACA,eAAgB,OAChB,MAAO,MACT,CAAC,CACH,CAEJ,CAAC,EAED,MAAMtG,MAAmB,eACtBuK,GAAmD,CAClD,MAAMttB,KAAsC,OAAS,EAAE,QAAQ,MAAMvJ,CAAS,EAC1EuJ,GAAO,aACTjK,MACE,OAAiBU,EAAW,OAAQ,CAClC,GAAGuJ,EAAM,YAAY,KACrB,QAASstB,EAAe,SAAWtK,GAAY,MAAM,QACrD,kBAAmBsK,EAAe,mBAAqBjE,GACvD,eAAgBiE,EAAe,eAC/B,MAAOA,EAAe,OAAStK,GAAY,MAAM,KACnD,CAAC,CACH,CAEJ,EACA,CAACjtB,GAAUU,EAAWusB,GAAY,MAAM,QAASA,GAAY,MAAM,MAAOqG,EAAiB,CAC7F,EAGMkE,MAAgB,eACnB/V,GAAsB,CAChBA,EAGH1b,EAAM,SAAS,QACb,IAAI,MAAe,CACjB,MAAO,CACL,KAAM0b,EAAI,WACZ,CACF,CAAC,CACH,EARA1b,EAAM,SAAS,QAAQ,IAAI,KAAqB,CAUpD,EACA,CAACA,EAAM,QAAQ,CACjB,EAEM0xB,MAAqB,eACxBC,GAAyB,CACxB3B,GAAiB,QAAU2B,EAQ3B5B,GAAkB,IAAOzvB,GAAyB,CAChD,GAAI7D,EAAA,EAAO,eAAe,sBAAuB,CAC3CuzB,GAAiB,UACnBM,GAAW,SAAS,eAAe,EACnCN,GAAiB,QAAQ,OAAO,CAC9B,SAAU,SACV,IAAKA,GAAiB,QAAQ,UAAY1vB,EAAQ,sBAAsB,EAAE,IAAM,OAAO,YAAc,CACvG,CAAC,GAGH,MACF,CACA,MAAM2b,EAAgBjc,EAAM,cAExBic,GACFA,EAAc,OAAO,CACnB,SAAU,SACV,IAAKA,EAAc,UAAY3b,EAAQ,sBAAsB,EAAE,IAAM,OAAO,YAAc,CAC5F,CAAC,CAEL,CAAC,CACH,EACA,CAACN,EAAM,aAAa,CACtB,EAEM4xB,GAAwB,IAAM,CAClCvC,GAAc,EAAI,EAElBe,GAAe,QAAU,OAAO,WAAW,IAAM,CAC/C,MAAMyB,EACJ5S,KAAkB,KAAc,WAAa,KAAc,UAAY,KAAc,WACvF,KAAM,IAAI,KAAc,cAAe4S,CAAY,EACnD1C,GAAiB0C,CAAY,CAC/B,EAAG,CAAC,EACJxB,GAAoB,QAAU,OAAO,WAAW,IAAMhB,GAAc,EAAK,EAAG,GAAI,CAClF,EAEM3N,MAAmB,eAAY,IAAM,CACzC6N,GAAe,CAAC9N,EAAW,CAC7B,EAAG,CAACA,EAAW,CAAC,EAEVqQ,MAAwB,eAC3BC,GAAyC,CACxCjC,GAAqBiC,CAAa,EAClC,MAAMC,EAAU,CACd,GAAG9K,GAAY,KACf,kBAAmB6K,CACrB,EACA9K,GAAiB+K,CAAO,KAExB,MAAkB,6CAA8C,CAC9D,qBAAsBD,EACtB,eAAgB/xB,EAAM,gBAAkB,UACxC,yBAA0BvD,EAAA,EAAO,eAAe,qCAAuC,QAAU,MACnG,CAAC,CACH,EACA,CAACyqB,GAAY,KAAMlnB,EAAM,eAAgBinB,EAAgB,CAC3D,EAEMgL,MAAgB,eACnB7Q,GAAqC,IACpC,MAAkB,6CAA8C,CAC9D,kBAAmBA,EACnB,eAAgBphB,EAAM,cACxB,CAAC,EACDgvB,GAAiB5N,CAAa,CAChC,EACA,CAACphB,EAAM,cAAc,CACvB,EAEMkyB,MAAiB,eAAap5B,GAA+C,CACjF,KAAM,CAAE,OAAAuF,CAAO,EAAIvF,EACnB,GAAIuF,EAAQ,CACV,MAAMmwB,EAAanwB,EAAO,QAE1BowB,GAAcD,CAAU,EACxB,KAAM,IAAI,KAAc,WAAYA,CAAU,CAChD,CACF,EAAG,CAAC,CAAC,EAEC2D,MAAmB,eAAar5B,GAA+C,CACnF,KAAM,CAAE,OAAAuF,CAAO,EAAIvF,EACnB,GAAIuF,EAAQ,CACV,MAAMqwB,EAAWrwB,EAAO,QAExBswB,EAAYD,CAAQ,EACpB,KAAM,IAAI,KAAc,SAAUA,CAAQ,CAC5C,CACF,EAAG,CAAC,CAAC,EAEC0D,MAAyB,eAAat5B,GAA+C,CACzF,KAAM,CAAE,OAAAuF,CAAO,EAAIvF,EACnB,GAAIuF,EAAQ,CACV,MAAMuwB,EAAiBvwB,EAAO,QAE9BwwB,EAAkBD,CAAc,EAChC,KAAM,IAAI,KAAc,eAAgBA,CAAc,CACxD,CACF,EAAG,CAAC,CAAC,EAECyD,MAA6B,eAAav5B,GAA+C,CAC7F,KAAM,CAAE,OAAAuF,CAAO,EAAIvF,EACnB,GAAIuF,EAAQ,CACV,MAAMywB,EAAqBzwB,EAAO,QAElC0wB,EAAsBD,CAAkB,EACxC,KAAM,IAAI,KAAc,mBAAoBA,CAAkB,CAChE,CACF,EAAG,CAAC,CAAC,EAECwD,MAAmB,eAAaC,GAA8B,CAClE,MAAMtD,EAAkBsD,EAAgB,IAAKzlB,MAAU,OAAmBA,CAAK,CAAC,EAChFoiB,GAAmBD,CAAe,CACpC,EAAG,CAAC,CAAC,EAECuD,MAA6B,eAChCrpB,GAAuB,CACtBnJ,EAAM,uBAAuB,CAACmJ,CAAS,KACvC,MAAkB,gDAAiD,CACjE,eAAgBnJ,EAAM,eACtB,KAAOmJ,EAAqB,QAAT,MACrB,CAAC,CACH,EACA,CAACnJ,CAAK,CACR,EAEMyyB,MAAc,eACjB35B,GAAgC,CAC/BA,EAAM,eAAe,EACjBkH,EAAM,kBACRA,EAAM,gBAAgB,KACtB,MAAkB,+CAAgD,CAChE,KAAM,QACN,eAAgBA,EAAM,cACxB,CAAC,EAEL,EACA,CAACA,CAAK,CACR,EAEM0yB,MAAkB,eACrB55B,GAAgC,CAC/BA,EAAM,eAAe,EACjBkH,EAAM,gBACRA,EAAM,eAAe,CAEzB,EACA,CAACA,CAAK,CACR,EAEM2yB,MAAY,eACf7xB,GAAgB,CACDwgB,GAAgB,QAAQxgB,CAAG,IAE3B,IACZwuB,GAAmBhO,GAAgB,OAAOxgB,CAAG,CAAC,CAElD,EACA,CAACwgB,EAAe,CAClB,EAEMsR,MAAY,eACf9xB,GAAgB,CACDwgB,GAAgB,QAAQxgB,CAAG,EAC7B,IACVwuB,GAAmBhO,GAAgB,OAAQuR,GAAM/xB,IAAQ+xB,CAAC,CAAC,CAE/D,EACA,CAACvR,EAAe,CAClB,EAEMC,MAAsB,eAAY,IAAM,CAC5C+N,GAAmB,CAAC,CAAC,CACvB,EAAG,CAAC,CAAC,EAECwD,MAAqB,UAAmB,IAAM,CAAC,CAAC,EAEtD,IAAIC,MAAiB,eAAY,IAAM,CACrCtD,GAAe,EAAK,EACpBE,GAAc,MAAS,KACvB,MAAkB,0CAA2C,CAC3D,eAAgBD,IAAY,eAC5B,UAAWA,IAAY,GACzB,CAAC,EACDoD,IAAoB,QAAQ,CAC9B,EAAG,CAACpD,IAAY,eAAgBA,IAAY,IAAKoD,EAAkB,CAAC,EAEpE,MAAME,GAAgB,CAACtX,EAAkB0Q,IAAwB,CAE/DqD,GAAe,EAAI,EACnBE,GAAcjU,CAAG,KACjB,MAAkB,0CAA2C,CAC3D,eAAgBA,EAAI,eACpB,UAAWA,EAAI,GACjB,CAAC,EACDoX,GAAmB,QAAU1G,CAC/B,EAEM6G,MAAiB,eAAY,CAACvX,EAAkBwX,IAA2B,CAC/E,QAASh2B,EAAIg2B,EAAQ,QAAQxX,CAAG,EAAI,EAAGxe,GAAK,EAAGA,IAC7C,GAAIg2B,EAAQh2B,CAAC,EAAE,YAAcwe,EAAI,YAC/B,OAAOwX,EAAQh2B,CAAC,EAIpB,OAAO,IACT,EAAG,CAAC,CAAC,EAECi2B,MAAoB,eACvBzX,GAAqB,CACpB,MAAMtJ,EAAQ,CACZ,KAAM,IAAI,KAAKiR,EAAc,IAAI,EAAE,YAAY,EAC/C,GAAI,IAAI,KAAKA,EAAc,EAAE,EAAE,YAAY,CAC7C,EACA,GAAI,CAAC5mB,EAAA,EAAO,eAAe,sBACzB,OAAO2V,EAKT,MAAM8gB,EAAUvR,EAAQ,OAAQyR,IAAWA,GAAO,UAAU,QAAU1X,EAAI,UAAU,KAAK,EACnF2X,GAAUJ,GAAevX,EAAKwX,CAAO,EAE3C,OAAIxX,EAAI,YAAc2H,EAAc,IAAM,CAACgQ,GAGlC,CACL,KAAM,IAAI,KAAKhQ,EAAc,IAAI,EAAE,YAAY,EAE/C,GAAI,IAAI,KAAK3H,EAAI,YAAc,CAAC,EAAE,YAAY,CAChD,EAGK,CACL,KAAM,IAAI,KAAK2H,EAAc,IAAI,EAAE,YAAY,EAC/C,GAAI,IAAI,KAAKgQ,GAAUA,GAAQ,YAAchQ,EAAc,EAAE,EAAE,YAAY,CAC7E,CACF,EACA,CAACA,EAAc,KAAMA,EAAc,GAAI4P,GAAgBtR,CAAO,CAChE,EAEM2R,GAAmB,MAAO5X,GAAqB,CAKnD,GAAIA,EAAI,QAAU,OAChB,OAIF,MAAM6X,KAAW,SAAyB,OAAS,EAAE,QAAQ,MAAM54B,CAAS,CAAE,EAC9E44B,EAAS,YAAc,CACrB,GAAGrM,EACH,KAAM,CAAE,GAAIxL,EAAI,IAAK,kBAAmB6R,IAAqBD,GAA4B,CAAE,CAC7F,EACAiG,EAAS,MAAQJ,GAAkBzX,CAAG,EAGtC,MAAM8X,KAAkB,OAAyBD,CAAQ,EACnDE,GAAU,kBAAkB,KAAK,GAAG,OAAO,SAAS,IAAI,EAAE,EAAG,CAAC,EAC9Dpd,GAAM,MAAQ,UAAU,GAAGod,EAAO,WAAY,CAAE,KAAMD,CAAgB,CAAC,EAC7E,QAAM,OAAuBnd,EAAG,KAEhC,MAAkB,yCAA0C,CAC1D,eAAgBqF,EAAI,gBAAkB,UACtC,UAAWA,EAAI,IACf,YAAaA,EAAI,QACnB,CAAC,CACH,EAEM4H,MAAkB,eAAY,IAAM,CACpC7mB,EAAA,EAAO,eAAe,uBACpBuzB,GAAiB,SACnBA,GAAiB,QAAQ,OAAO,CAC9B,SAAU,OACV,IAAK,CACP,CAAC,EAGLM,GAAW,SAAS,eAAe,CACrC,EAAG,CAACN,GAAkBM,EAAU,CAAC,EAE3BoD,GAA6B,CAAChY,EAAkBiY,EAAa,KAAS,CAC1E,GAAI/C,GAAmB,IAAMpD,IAAqB,CAACmG,EAAY,CAC7DrV,GAAmC,EACnC,MACF,CAGA,MAAMsV,EAAajtB,IAAc,KAAMQ,IAASA,GAAK,UAAYwmB,IAAuBxmB,GAAK,QAAU,MAAM,EAGzGysB,GAAc9rB,IAChBA,GAAW8rB,EAAW,GAAI,CAAE,SAAU,EAAK,CAAC,EAG9C,MAAMC,GAAgBnD,IAAY,KAAMoD,IAAQA,KAAQpY,EAAI,KAAK,EAC7DmY,IAAiBnY,EAAI,OAASiY,GAChC/rB,KAAa8T,EAAI,KAAK,EACtB2C,GAA8B,GACrBuS,GAAmB,IAAMpD,IAAqB,CAACqG,KACxD/sB,KAAW,CACT,GAAI4U,EAAI,MACR,KAAM,UACN,MAAO+R,GACP,QAASE,GACT,MAAO,QACP,IAAK,KACL,MAAO,MAAcjS,EAAI,QAAQ,EACjC,WAAY,GACZ,QAAS,IAAM,CACbsX,GAActX,EAAK,IAAM,CAAC,CAAC,EAC3B6C,GAA8B,CAChC,EACA,SAAWvX,IAAe,CACxBY,KAAaZ,EAAE,EACfwX,GAAgC,CAClC,CACF,CAAC,EACDJ,GAA4B,GAG9Bpe,EAAM,oBAAoB,CAC5B,EAEMwhB,GAAsBuS,GAAsBpS,CAAO,EACnDqS,GAAeC,GAAWtS,EAASsN,EAAe,EAClD,CAAE,YAAAiF,GAAa,WAAA7S,EAAW,EAAI8S,GAAUH,GAAc5S,CAAa,EACnEgT,GAAkBC,GAAsB1S,CAAO,EAErD,SACE,oBACG,UAAA0M,GAAiBqB,OAChB,OAAC4E,GAAA,GACC,KAAM9E,GACN,IAAKE,GACL,QAASqD,GACT,cAAe,CAACrX,EAAK6Y,IAAYlG,EAAc3S,EAAKgU,GAAY6E,CAAO,EACvE,mBAAAhG,EACA,mBAAAD,EACA,cAAArP,GACA,SAAA9N,CAAA,CACF,KAEF,OAACU,GAAA,IACC,MAAM,cACN,YAAW,GACX,UAAW,CAACic,EACZ,iBAAkB0E,GAEjB,SAAA1E,MACC,OAAC5B,GAAA,CACC,gBAAAT,GACA,cAAApI,EACA,MAAA7iB,EACA,eAAAmrB,EACA,kBAAmBtZ,EACnB,SAAAlB,EACA,UAAA6N,EACA,iBAAkB+O,EAClB,sBAAuBuE,GACvB,SAAUnC,GACV,QAAS,IAAMqC,GAA2B,EAAI,EAChD,EAEJ,KACA,QAAC3gB,GAAA,IACC,WAAY,CACVpV,EAAA,EAAO,eAAe,8BACpB8wB,KAAsB,OAAS,QAC7B,OAAC1b,GAAA,GAAY,UAAZ,CAAsB,MAAM,WAC3B,mBAAC6M,GAAY,CAAC,YAAY,qCAAsC,IADtB,GAE5C,EAEA,IACN,EACA,MAAO,OACP,WACE,mBACG,SAAAjiB,EAAA,EAAO,eAAe,kCACrB,OAAC,OAAI,UAAWvC,GAAO,kBACrB,mBAACs6B,GAAA,GACC,UAAWt6B,GAAO,uBAClB,QAAS,CACP,CACE,MAAO,OACP,MAAO,OACP,YAAa,oCACf,EACA,CACE,MAAO,QACP,MAAO,QACP,YAAa,qCACf,CACF,EACA,KAAK,KACL,MAAOqzB,GACP,SAAUuE,EAAA,CACZ,EACF,EAEJ,EAEF,aAAcrZ,EAAU,MAAa,QAAU,MAAa,KAE5D,qBAAC,OAAI,UAAWve,GAAO,iBACpB,UAAAqzB,KAAsB,YACrB,QAAC,OAAI,UAAWrzB,GAAO,WACrB,qBAACu6B,GAAA,EAAc,CACb,oBAAC7J,GAAA,EAAW,CAAC,MAAM,OAAO,UAAW1wB,GAAO,sBAAuB,YAAW,GAC5E,mBAAC,MACC,MAAOw0B,GACP,SAAUyD,GACV,UAAWj4B,GAAO,uBAClB,YAAW,GACX,GAAI,aAAaS,CAAS,GAC5B,EACF,KACA,OAACiwB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAW1wB,GAAO,sBAAuB,YAAW,GACrF,mBAAC,MACC,MAAOs0B,EACP,SAAU0D,GACV,UAAWh4B,GAAO,uBAClB,YAAW,GACX,GAAI,iBAAiBS,CAAS,GAChC,EACF,KACA,OAACiwB,GAAA,EAAW,CAAC,MAAM,aAAa,UAAW1wB,GAAO,sBAAuB,YAAW,GAClF,mBAAC,MACC,MAAO00B,EACP,SAAUwD,GACV,UAAWl4B,GAAO,uBAClB,YAAW,GACX,GAAI,cAAcS,CAAS,GAC7B,EACF,KACA,OAACiwB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAW1wB,GAAO,sBAAuB,YAAW,GACrF,mBAAC,MACC,MAAO40B,EACP,SAAUuD,GACV,UAAWn4B,GAAO,uBAClB,YAAW,GACX,GAAI,YAAYS,CAAS,GAC3B,EACF,KACA,OAACiwB,GAAA,EAAW,CAAC,MAAM,gBAAgB,UAAW1wB,GAAO,sBAAuB,YAAW,GACrF,mBAACs6B,GAAA,GACC,QAASnH,GAAc,IAAKqH,IAAe,CACzC,SAAO,eAAWA,CAAS,EAC3B,MAAOA,EACP,YAAa,MAAqBA,CAAS,CAC7C,EAAE,EACF,MAAOtT,EACP,SAAU6Q,GACV,UAAW/3B,GAAO,aACpB,EACF,GACF,KAEA,OAAC,OACC,mBAAC0wB,GAAA,GACC,MAAM,kBACN,UAAW1wB,GAAO,sBAClB,YAAW,GACX,SAAUk1B,IAAc3W,EAExB,mBAAC+b,GAAA,GACC,QAAS,CACP,CACE,MAAO,eACP,MAAO,KAAc,WACrB,YAAa,+BACf,EACA,CACE,MAAO,eACP,MAAO,KAAc,UACrB,YAAa,+BACf,CACF,EACA,MAAOvV,GACP,SAAU2S,GACV,UAAW13B,GAAO,aACpB,EACF,EACF,GACF,KAEF,OAAC,OAAI,IAAKo2B,EAAA,CAAY,KACtB,OAACpP,GAAA,CACC,QAAAS,EACA,KAAMkM,GAAY,CAAC,EACnB,cAAAzM,EACA,WAAAC,GACA,oBAAAG,GACA,YAAAC,GACA,gBAAAH,GACA,iBAAAI,GACA,oBAAAH,EAAA,CACF,GACF,KACA,QAAC,OAAI,aAAW,MAAGrnB,GAAO,YAAaqzB,KAAsB,QAAUrzB,GAAO,UAAY,MAAS,EAChG,UAAAqzB,KAAsB,SAAWiD,OAChC,OAAC,OAAI,UAAWt2B,GAAO,QAAS,cAAY,eAE1C,mBAAC6sB,GAAA,CACC,cAAA9H,GACA,MAAOjf,EAAM,MACb,UAAAgf,EACA,SAAA7N,EACA,MAAO3Q,EAAQ,GACf,WAAYR,EAAM,YAAc,CAAC,EACjC,mBAAAygB,EACA,sBAAAC,EACA,WAAYwG,GAAY,KACxB,MAAAzrB,EACA,iBAAAwrB,GACA,eAAgBjnB,EAAM,eACxB,EACF,EAEDutB,KAAsB,QAAUiD,OAC/B,OAAC,OACC,UAAW/zB,EAAA,EAAO,eAAe,sBAAwBvC,GAAO,kBAAoBA,GAAO,QAC3F,cAAY,UACZ,IAAKw3B,GAEL,mBAAC7V,GAAA,CACC,QAAApD,EACA,aAAAsD,EACA,MAAO/b,EAAM,MACb,SAAAmR,EACA,KAAMwQ,EACN,cAAeqO,GAAiB,QAChC,UAAW/Q,GACX,IAAK,MAAQ,QAEb,mBAAC0V,GAAA,GACC,WAAAjE,GACA,QAAA/O,EACA,iBAAkBuS,GAClB,cAAA9S,EACA,mBAAAX,EACA,sBAAAC,EACA,kBAAAwN,EACA,mBAAAK,EACA,WAAAC,EACA,SAAAE,GACA,iBAAkB,GAClB,YAAAjN,GACA,eAAAmN,EACA,mBAAAE,EACA,SAAA3d,EACA,cAAAgd,EACA,cAAAlP,GACA,gBAAAqC,GACA,iBAAkBqR,GAClB,iBAAkBC,GAClB,IAAK,MAAQ,QACb,cAAAnB,GACA,cAAAuB,GACA,iBAAAM,GACA,iBAAkBpM,GAAY,MAAM,GACpC,eAAAxb,GACA,oBAAqB1L,EAAM,oBAC3B,kBAAmB,CAAC,CAACgwB,GACrB,oBAAqBhwB,EAAM,oBAC3B,uBAAwBA,EAAM,uBAC9B,YAAa0zB,GACb,UAAWA,GACX,0BAAA9D,EAAA,CACF,EACF,EACF,EAED,CAACnX,GAAW,CAAC+X,IAAW,CAACxC,MACxB,OAAC,OAAI,UAAW9zB,GAAO,QACrB,oBAAC,OAAI,UAAWA,GAAO,OACrB,oBAAC,KAAK,CAAC,QAAQ,6BAA6B,0BAAc,KAC1D,OAACb,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAASo5B,GAC7C,mBAAC,KAAK,CAAC,QAAQ,mCAAmC,+BAAmB,EACvE,GACF,EACF,EAEDzE,MACC,OAAC,OAAI,UAAW9zB,GAAO,QACrB,oBAAC,OAAI,UAAWA,GAAO,OACrB,oBAAC,QAAM,SAAAu2B,EAAA,CAAS,KAChB,OAACp3B,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAASq5B,GAC7C,mBAAC,KAAK,CAAC,QAAQ,yBAAyB,qBAAS,EACnD,GACF,EACF,KAEF,OAAC,IACC,cAAAzT,GACA,aAAcmV,IAAmB/Q,EACjC,cAAAA,EACA,SAAAlS,EACA,aAAAkB,EACA,QAAAoG,EACA,QAAS2V,GAAe,CAAC,EACzB,gBAAA9K,GACA,kBAAAE,EACA,WAAAD,CAAA,CACF,GACF,GACF,GACF,CAEJ,EAEaqR,MAAO,MAAWhH,EAAY,EAErC,GAAY,CAACnyB,EAAsBmzB,EAAyB2B,KACzD,CACL,UAAQ,OAAI,CACV,QAAS,CACP,WAAY,OACd,CACF,CAAC,EACD,cAAY,OAAI,CACd,QAAS,OACT,eAAgB,gBAChB,WAAY,WACZ,SAAU,OACV,gBAAiB90B,EAAM,OAAO,WAAW,QACzC,QAAS,GAAGA,EAAM,QAAQ,CAAC,CAAC,IAAIA,EAAM,QAAQ,CAAC,CAAC,GAChD,aAAcA,EAAM,MAAM,OAAO,QACjC,OAAQ,GAAGA,EAAM,QAAQ,EAAG,EAAG,CAAC,CAAC,GACjC,OAAQ,aAAaA,EAAM,OAAO,OAAO,MAAM,EACjD,CAAC,EACD,gBAAc,OAAI,CAChB,OAAQ,GAAGA,EAAM,QAAQ,GAAK,EAAG,EAAG,CAAC,CAAC,EACxC,CAAC,EACD,yBAAuB,OAAI,CACzB,YAAa,CACX,YAAa,GACf,CACF,CAAC,EACD,0BAAwB,OAAI,CAC1B,QAAS,KAAKA,EAAM,QAAQ,CAAC,CAAC,MAChC,CAAC,EACD,gBAAc,OAAI,CAChB,OAAQ,GACV,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,cAAe,MACf,eAAgB,gBAChB,SAAU,UACZ,CAAC,EACD,aAAW,OAAI,CACb,UAAW,GAAG80B,CAAW,IAC3B,CAAC,EACD,qBAAmB,OAAI,CACrB,UAAW,SACX,MAAO,OACP,UAAW,MACb,CAAC,EACD,WAAS,OAAI,CACX,UAAW,GAAG3B,EAAiB,QAAU,QAAQ,GACjD,UAAW,UACX,MAAO,MACT,CAAC,EACD,qBAAmB,OAAI,CACrB,QAAS,OACT,KAAM,IACN,eAAgB,eAClB,CAAC,EACD,0BAAwB,OAAI,CAC1B,OAAQ,SAASnzB,EAAM,QAAQ,CAAC,CAAC,EACnC,CAAC,EACD,oBAAkB,OAAI,CACpB,SAAU,UACV,GAAIgB,EAAA,EAAO,eAAe,uBAAyB,CAAE,aAAc,KAAM,CAC3E,CAAC,CACH,GAGIs3B,MAAwB,MAAYpS,GACjCA,EAAQ,KAAMU,GAAMA,EAAE,mBAAmB,CACjD,EAEK8R,MAAY,MAAW,CAACxS,EAAwBP,IAAqC,CACzF,MAAM8S,KAAc,OAAavS,EAASP,CAAa,EACjDC,EAAa6S,EAAY,OAAO,CAACW,EAAKnZ,IAASA,EAAI,WAAamZ,EAAMnZ,EAAI,WAAamZ,EAAM,CAAC,EACpG,MAAO,CAAE,YAAAX,EAAa,WAAA7S,CAAW,CACnC,CAAC,EAEK4S,MAAa,MAAW,CAACtS,EAAwBsN,OAC9C,OAAgBtN,EAAS,IAAI,IAAIsN,CAAe,CAAC,CACzD,EAEKoF,MAAwB,MAAY1S,GAAqE,CAC7G,GAAI,CAACA,GAAWA,EAAQ,SAAW,EACjC,OAEF,MAAM/D,EAAiB+D,EAAQ,CAAC,EAAE,YAC5B9D,EAAgB8D,EAAQA,EAAQ,OAAS,CAAC,EAAE,YAElD,OAAI9D,EAAgBD,EACX,CAAE,KAAMC,EAAe,GAAID,CAAe,EAG5C,CAAE,KAAMA,EAAgB,GAAIC,CAAc,CACnD,CAAC,ECllCKiX,GAAqB,IAIrBC,GAAkB,IAElB,MAAY,MAAW,KACpB,CACL,aAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOX,mBAAiB;AAAA;AAAA;AAAA,4BAGOD,EAAkB,eAAeC,EAAe;AAAA,MAExE,YAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOV,kBAAgB;AAAA;AAAA;AAAA,4BAGQD,EAAkB,eAAeC,EAAe;AAAA,KAE1E,EACD,EAWM,SAASC,GAAwBh1B,EAAc,CACpD,KAAM,CAAE,QAAAi1B,EAAS,SAAAlvB,CAAS,EAAI/F,EACxBqT,KAAgB,UAAO,IAAI,EAC3BnZ,EAAS,GAAU,EACzB,SACE,OAAC6Z,GAAA,GACC,GAAIkhB,EACJ,aAAc,GACd,cAAe,GACf,QAASH,GAAqBC,GAC9B,WAAY,CACV,MAAO76B,EAAO,UACd,YAAaA,EAAO,gBACpB,KAAMA,EAAO,SACb,WAAYA,EAAO,cACrB,EACA,QAASmZ,EAET,mBAAC,OAAI,IAAKA,EAAgB,SAAAtN,CAAA,CAAS,EACrC,CAEJ,CCIA,MAAMmvB,WAAsB,eAAsD,CAAlF,kCACE,WAA4B,CAC1B,YAAa,CAAC,CAChB,EA6DA,kBAAgB7R,GAAqC,CACnD,KAAM,CAAE,UAAA1oB,EAAW,gBAAAw6B,CAAgB,EAAI,KAAK,MAC5CA,EAAgB,CAAE,UAAAx6B,EAAW,cAAA0oB,CAAc,CAAC,CAC9C,EAEA,kBAAgBA,GAAqC,CACnD,KAAM,CAAE,UAAA1oB,EAAW,aAAAohB,CAAa,EAAI,KAAK,MACzCA,EAAa,CAAE,UAAAphB,EAAW,cAAA0oB,CAAc,CAAC,CAC3C,EAcA,sBAAmB,MACjB3H,EACA0Z,EACAb,IACoC,CACpC,KAAM,CAAE,YAAAnG,CAAY,EAAI,KAAK,MAE7B,GAAI,CAACgH,EAAQ,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAQ,UAAU,KAAK,EAC7E,OAAO,QAAQ,QAAQ,CAAC,CAAC,EAG3B,MAAMC,EAAK,KAAK,MAAM,YAAYD,EAAQ,UAAU,KAAK,EACzD,GAAI,IAAC,OAAsBC,CAAE,EAC3B,OAAO,QAAQ,QAAQ,CAAC,CAAC,EAG3B,MAAMn5B,EAAQ,KAAK,SAASkyB,EAAagH,EAASC,CAAE,EACpD,OAAOn5B,EAAQm5B,EAAG,iBAAiB3Z,EAAK6Y,EAASr4B,CAAK,EAAI,QAAQ,QAAQ,CAAC,CAAC,CAC9E,EAEA,2BAAwB,MACtBwf,EACA6Y,EACAe,EAAe,KACe,CAC9B,KAAM,CAAE,YAAAlH,CAAY,EAAI,KAAK,MAE7B,GAAI,CAAC1S,EAAI,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EACrE,OAAO,QAAQ,QAAQ,IAAI,EAG7B,MAAM2Z,EAAK,KAAK,MAAM,YAAY3Z,EAAI,UAAU,KAAK,EACrD,GAAI,IAAC,OAAsB2Z,CAAE,EAC3B,OAAO,QAAQ,QAAQ,IAAI,EAG7B,MAAMn5B,EAAQ,KAAK,SAASkyB,EAAa1S,EAAK2Z,CAAE,EAChD,OAAOn5B,GAASm5B,EAAG,sBACfA,EAAG,sBAAsB3Z,EAAK6Y,EAASr4B,EAAOo5B,CAAY,EAC1D,QAAQ,QAAQ,IAAI,CAC1B,EAEA,wBAAqB,CAAC5Z,EAAkB6Z,IAAkD,CACxF,KAAM,CAAE,YAAAnH,CAAY,EAAI,KAAK,MAE7B,GAAI,CAAC1S,EAAI,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EACrE,SAAO,oBAAE,EAGX,MAAM2Z,EAAK,KAAK,MAAM,YAAY3Z,EAAI,UAAU,KAAK,EACrD,GAAI,IAAC,OAAsB2Z,CAAE,EAC3B,SAAO,oBAAE,EAGX,MAAMn5B,EAAQ,KAAK,SAASkyB,EAAa1S,EAAK2Z,CAAE,EAChD,OAAOn5B,MAAS,OAAwBm5B,CAAE,GAAKA,EAAG,mBAChDA,EAAG,mBAAmB3Z,EAAK6Z,EAAiBr5B,CAAK,KAEjD,oBAAE,CAEN,EAEA,uBAAqBwf,GACf,CAACA,GAAK,UAAU,OAAS,CAAC,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,EAC/D,MAEF,OAAsB,KAAK,MAAM,YAAYA,EAAI,UAAU,KAAK,CAAC,EAG1E,mBAAgB,CAAC3M,EAAcymB,EAAkBtW,IAAyB,CACxE,KAAM,CAAE,YAAA3N,EAAa,MAAAa,CAAM,EAAI,KAAK,MACpC,SAAO,OAAwB,CAAE,MAAArD,EAAO,SAAAymB,EAAU,YAAAjkB,EAAa,MAAAa,EAAO,UAAA8M,CAAU,CAAC,CACnF,EAEA,+BAA4B,IACnB,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1CmW,GAAOA,GAAI,gBAAe,OAA4BA,CAAE,MAAK,OAAiCA,CAAE,CACnG,EAGF,0BAAuB,IACd,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1CA,MAAO,OAA4BA,CAAE,GAAKA,GAAI,+BAA+B,EAAE,SAAS,mBAAmB,CAC9G,EAGF,6BAA0B,IACjB,OAAO,OAAO,KAAK,MAAM,WAAW,EAAE,KAC1CA,MAAO,OAA4BA,CAAE,GAAKA,GAAI,+BAA+B,EAAE,SAAS,uBAAuB,CAClH,EAGF,uBAAoB,IAAM,CACxB,KAAK,MAAM,kBAAkB,KAAK,MAAM,SAAS,CACnD,EAEA,gBAAa,IAAM,CACjB,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS,CAC5C,EAnLA,mBAAoB,CAClB,KAAK,0BAA0B,CACjC,CAEA,mBAAmBI,EAA+B,CAC5CA,EAAU,cAAgB,KAAK,MAAM,aACvC,KAAK,0BAA0B,CAEnC,CAEQ,2BAA4B,CAClC,KAAM,CAAE,YAAArH,EAAa,mBAAA5V,CAAmB,EAAI,KAAK,MACjD,GAAI,CAAC4V,GAAe,CAAC5V,EACnB,OAGF,MAAMkd,EAAkD,CAAC,EAGzD,GAAIld,EAAmB,MAAQ,MAAuB,CACpD4V,EAAY,QAAQ,CAAC,CAAE,MAAAuH,CAAM,IAAM,CACjCD,EAAYC,CAAK,EAAInd,CACvB,CAAC,EACD,KAAK,SAAS,CAAE,YAAAkd,CAAY,CAAC,EAC7B,MACF,CAGA,MAAME,EAAmE,CAAC,EAC1E,UAAW15B,KAASkyB,EAAa,CAC/B,GAAI,CAAClyB,EAAM,WACT,UAEgB,CAACw5B,EAAYx5B,EAAM,KAAK,GAAKw5B,EAAYx5B,EAAM,KAAK,EAAE,MAAQA,EAAM,WAAW,MAE/F05B,EAAW,KACT,IAAI,QAASC,GAAY,IACvB,MAAiB,EACd,IAAI35B,EAAM,UAAU,EACpB,KAAMm5B,GAAO,CACZQ,EAAQ,CAAE,GAAAR,EAAI,MAAOn5B,EAAM,KAAM,CAAC,CACpC,CAAC,CACL,CAAC,CACH,CAEJ,CAEK05B,EAAW,QAIhB,QAAQ,IAAIA,CAAU,EAAE,KAAME,GAAc,CAC1CA,EAAU,QAAQ,CAAC,CAAE,GAAAT,EAAI,MAAAM,CAAM,IAAM,CACnCD,EAAYC,CAAK,EAAIN,CACvB,CAAC,EACD,KAAK,SAAS,CAAE,YAAAK,CAAY,CAAC,CAC/B,CAAC,CACH,CAYQ,SACNtH,EACA1S,EACAlD,EACA,CAGA,OAAQ4V,GAAe,CAAC,GAAG,KACxB2H,GAAMA,EAAE,QAAUra,EAAI,UAAU,OAASqa,EAAE,YAAc,MAAQA,EAAE,WAAW,OAASvd,EAAmB,IAC7G,CACF,CAsGA,QAAS,CACP,KAAM,CACJ,QAAAC,EACA,aAAAud,EACA,QAAArU,EACA,SAAAkM,EACA,WAAAoI,EACA,YAAA7H,EACA,2BAAA8H,EACA,6BAAAC,EACA,mBAAA1V,EACA,sBAAAC,EACA,gBAAA0V,EACA,eAAAC,EACA,cAAAhT,EACA,SAAAlS,EACA,aAAA4M,EACA,SAAAiQ,EACA,MAAA5b,EACA,MAAA5R,EACA,YAAA+Q,EACA,OAAAkC,EACA,UAAA9Y,EACA,WAAA27B,EACA,cAAAra,EACA,kBAAAsa,CACF,EAAI,KAAK,MAET,OAAK5U,KAKH,oBACE,oBAACqT,GAAuB,CAAC,QAASvhB,EAChC,mBAAC/C,GAAA,EAAQ,CAAC,MAAM,OAAO,QAAS,GAAO,OAAM,GAC3C,mBAACwH,GAAgB,CAAC,UAAAvd,EACf,SAACwd,MACA,OAACyD,GAAA,CACC,QAAA+F,EACA,SAAAxQ,EACA,SAAUgH,EAAS,KACnB,SAAU,KAAK,MAAM,SACrB,QAASA,EAAS,MAClB,SAAUA,EAAS,OACnB,QAASA,EAAS,MAClB,eAAgB,KAAK,MAAM,eAC7B,EAEJ,EACF,EACF,KACA,OAAC6c,GAAuB,CAAC,QAAS,CAACvhB,EACjC,mBAACmhB,GAAA,CACC,UAAAj6B,EACA,eAAgB,KAAK,MAAM,oBAAoB,KAC/C,QAAAgnB,EACA,SAAAkM,EACA,WAAAoI,EACA,kBAAmBK,EAAW,QAC9B,uBAAyB39B,GACvBw9B,EAA6Bx7B,EAAWhC,EAAS,MAAuB,UAAU,EAEpF,eAAgB29B,EAAW,KAC3B,YAAAlI,EACA,MAAA5tB,EACA,UAAW+Q,EACX,QAAAkH,EACA,aAAAud,EACA,mBAAoB,IAAME,EAA2Bv7B,EAAW,MAAuB,UAAU,EACjG,aAAc,KAAK,aACnB,aAAc,KAAK,aACnB,mBAAoB,KAAK,0BAA0B,EAAI8lB,EAAqB,OAC5E,sBAAuB,KAAK,0BAA0B,EAAIC,EAAwB,OAClF,gBAAA0V,EACA,eAAAC,EACA,cAAAhT,EACA,aAAAtF,EACA,SAAA5M,EACA,SAAA6c,EACA,UAAW5b,EAAM,IACjB,kBAAmB,KAAK,kBACxB,cAAe,KAAK,iBACpB,mBAAoB,KAAK,sBACzB,mBAAoB,KAAK,mBACzB,cAAe,KAAK,cACpB,kBAAmB,KAAK,kBACxB,WAAY,KAAK,WACjB,SAAU,KAAK,MAAM,SACrB,WAAY,KAAK,MAAM,WACvB,WAAY,KAAK,MAAM,WACvB,cAAA6J,EACA,oBAAqB,KAAK,0BAA0B,EAAI,KAAK,MAAM,oBAAsB,OACzF,MAAA7J,EACA,kBAAAmkB,EACA,oBAAqB,KAAK,qBAAqB,EAAI,KAAK,MAAM,oBAAsB,OACpF,uBAAwB,KAAK,wBAAwB,EAAI,KAAK,MAAM,uBAAyB,OAC/F,EACF,GACF,EAtEO,IAwEX,CACF,CAEA,SAASC,GAAgBtyB,EAAmB,CAAE,UAAAvJ,CAAU,EAA0B,CAEhF,MAAMwM,EADUjD,EAAM,QACiB,MAAMvJ,CAAS,EAChD,CACJ,WAAA87B,EACA,SAAAzI,EACA,mBAAAxV,EACA,OAAA/E,EACA,SAAAC,EACA,eAAAgjB,EACA,MAAAtkB,EACA,cAAAiR,EACA,qBAAAsT,CACF,EAAIxvB,EACEsR,KAAU,MAAuB9d,CAAS,EAAEuJ,CAAK,EACjDgjB,EAAa/f,EAAK,YAClBgK,KAAW,MAAYjN,EAAM,IAAI,EACjCoyB,EAAaK,EAAqB,MAAuB,UAAU,EAEzE,MAAO,CACL,QAAAle,EACA,QAASge,GAAY,KACrB,SAAUA,GAAY,KACtB,WAAYA,GAAY,OACxB,YAAaA,GAAY,QACzB,aAAcA,GAAY,aAC1B,SAAAzI,EACA,SAAA7c,EACA,mBAAAqH,EACA,OAAA/E,EACA,SAAAC,EACA,eAAAgjB,EACA,MAAAtkB,EACA,cAAAiR,EACA,WAAAiT,EACA,WAAApP,EACA,WAAY/f,EAAK,cAAc,UACjC,CACF,CAEA,MAAMyvB,GAAqB,CACzB,gBAAe,MACf,aAAY,MACZ,kBAAiB,KACjB,WAAU,KACV,2BAA0B,KAC1B,6BAA4B,IAC9B,EAKA,MAHkB,YAAQJ,GAAiBI,EAAkB,EAGpC1B,EAAa,EChY/B,SAAS2B,GAAgB72B,EAAc,CAC5C,KAAM,CAAE,cAAA0X,EAAe,SAAAvG,EAAU,QAAAxY,EAAS,qBAAAm+B,EAAsB,mBAAAte,EAAoB,QAAAf,EAAS,UAAAuH,CAAU,EAAIhf,EAErG9F,KAAS,MAAW,EAAS,EAC7B68B,EAA8BjhB,GAAoB,CACtDghB,EAAqBhhB,CAAM,KAC3B,MAAkB,6CAA8C,CAC9D,eAAgB0C,GAAoB,MAAQ,UAC5C,KAAM1C,EAAS,OAAS,OAC1B,CAAC,CACH,EAEMkhB,EAAwB,IAAM,CAIlC,GAHI,CAACxe,GAGD,IAAC,OAA6BA,EAAoB,MAAuB,UAAU,EACrF,OAAO,KAGT,MAAMye,EAAmBxf,EACtB,IAAKvb,GAAUsc,EAAmB,sBAAsB,CAAE,KAAM,MAAuB,UAAW,EAAGtc,CAAK,CAAC,EAC3G,OAAQA,GAA8B,CAAC,CAACA,CAAK,EAEhD,GAAI,CAAC+6B,EAAiB,OACpB,OAAO,KAGT,MAAMC,EAAc,IAAM,CACxBlY,EAAU,CAAE,QAASiY,EAAkB,cAAeze,EAAmB,GAAI,CAAC,KAC9E,MAAkB,mDAAoD,CACpE,eAAgBA,GAAoB,MAAQ,UAC5C,aAAcye,EAAiB,MACjC,CAAC,CACH,EAEA,SACE,OAAC59B,EAAA,GAAM,CAAC,KAAK,KAAK,UAAWa,EAAO,iBAAkB,QAASg9B,EAAa,mCAE5E,CAEJ,EAEA,IAAIC,EAEJ,GAAIzf,IAAkB,OACpByf,EAAyB,aAChBzf,EAAc,QAAU,OACjCyf,KACE,OAACrM,GAAwB,CAAC,MAAOpT,EAAc,MAAO,MAAM,2CAA4C,WAEjGA,EAAc,QAAU,MAAa,QAC9Cyf,KAAyB,OAAC,QAAK,qCAAyB,UAC/Czf,EAAc,KAAK,SAAW,GAAKA,EAAc,KAAK,MAAO+H,GAAUA,EAAM,SAAW,CAAC,EAClG0X,KAAyB,OAAC,QAAK,gCAAoB,MAC9C,CACL,MAAMC,KAAO,OAAqB1f,EAAc,IAAI,EACpDyf,KACE,oBACE,oBAACH,EAAA,EAAsB,KACvB,OAAC,OAAI,UAAW98B,EAAO,aACrB,mBAACy6B,GAAA,GACC,QAASyC,EAAK,KACd,cAAe,KAAkB,KACjC,WAAY,KAAM,QAAQ,KAAc,WAAY,EAAK,EACzD,SAAU,KAAM,QAAQ,KAAc,SAAU,EAAI,EACpD,eAAgB,KAAM,QAAQ,KAAc,eAAgB,EAAI,EAChE,mBAAoB,KAAM,QAAQ,KAAc,mBAAoB,EAAK,EACzE,SAAAjmB,EACA,iBAAkB,GACpB,EACF,GACF,CAEJ,CAEA,OAAOuG,GAAe,QAAU,MAAa,cAC3C,OAAChH,GAAA,GACC,SACE,QAAC,OAAI,2BAEH,OAACnV,GAAA,EAAO,CAAC,QAAQ,wDACf,mBAACC,GAAA,EAAI,CAAC,KAAK,cAAc,UAAWtB,EAAO,YAAa,EAC1D,GACF,EAEF,OAAQvB,EACR,YAAa,GACb,SAAUo+B,EAET,SAAAI,CAAA,CACH,EACE,IACN,CAEA,MAAM,GAAa17B,IACV,CACL,oBAAkB;AAAA;AAAA,aAETA,EAAM,QAAQ,CAAC,CAAC;AAAA,eACdA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAE3B,gBAAc;AAAA;AAAA,MAGd,eAAa;AAAA,qBACIA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAEnC,GCxIW47B,GAAS,IAAM,CAC1B,MAAMC,KAAM,MAAW,EAAS,EAChC,SACE,mBACE,mBAAC7qB,GAAA,EAAc,CAAC,cAAY,kBAAkB,UAAW6qB,EAAI,QAC3D,mBAAC,QAAK,UAAWA,EAAI,QAAU,mBAAU,EAC3C,EACF,CAEJ,EAEM,GAAa77B,IAA0B,CAC3C,WAAS,OAAI,CACX,MAAO,eACP,QAASA,EAAM,QAAQ,CAAC,EACxB,WAAYA,EAAM,OAAO,WAAW,QACpC,aAAcA,EAAM,MAAM,OAAO,QACjC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,SAAU,CACZ,CAAC,EACD,WAAS,OAAI,CACX,SAAUA,EAAM,WAAW,GAAG,SAC9B,QAASA,EAAM,QAAQ,CAAC,EACxB,MAAOA,EAAM,OAAO,KAAK,QAC3B,CAAC,CACH,G,gBC1BA,SAAS87B,GAAc97B,EAAsB,CAC3C,SAAO,OAAI,CACT,SAAU,GAAGA,EAAM,YAAY,OAAO,EAAE,KACxC,UAAWA,EAAM,QAAQ,CAAC,EAC1B,UAAW,QACb,CAAC,CACH,CAEO,MAAM+7B,GAA2B,IAAM,CAC5C,MAAMC,KAAa,MAAWF,EAAa,EAErCG,EACJ,MAAW,cAAc,sBAAoB,iBAAiB,GAC9D,MAAW,cAAc,sBAAoB,gBAAgB,EAEzD9+B,EACJ,uGACI++B,KACJ,oBACE,oBAACn8B,GAAA,EAAI,CAAC,KAAK,QAAS,MACpB,mBAAE,mFAAuE,KACzE,OAAC,KACC,KAAK,uFACL,OAAO,SACP,IAAI,aACJ,UAAU,YACX,sBAED,GACF,EAGIo8B,KACJ,OAAC,KAAU,CAAC,KAAK,KAAK,KAAK,kBAAkB,KAAK,WAAW,SAAU,CAACF,EAAqB,2BAE7F,EAGF,SAAO,OAACG,GAAA,EAAgB,CAAC,oBAAqBD,EAAY,UAAWH,EAAY,OAAAE,EAAgB,QAAA/+B,CAAA,CAAkB,CACrH,E,wCChCA,MAAM,GAAa6C,IAA0B,CAC3C,eAAa;AAAA;AAAA;AAAA;AAAA,iBAIEA,EAAM,WAAW,UAAU,QAAQ;AAAA,aACvCA,EAAM,OAAO,KAAK,SAAS;AAAA,GAExC,GAcO,SAASq8B,GAA8B93B,EAAc,CAC1D,KAAM,CAAE,WAAA+3B,EAAY,MAAA3lB,EAAO,YAAAb,EAAa,cAAAymB,EAAe,eAAA5jB,CAAe,EAAIpU,EACpEi4B,KAAW,OAAS7lB,EAAOb,CAAW,EACtC9V,KAAQ,MAAU,EAClBvB,KAAS,MAAW,EAAS,EAK7BmX,KAAS,OAAoB,CACjC,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,KAAM0mB,EAEN,iBAAmBh3B,GAAUA,EAC7B,MAAAtF,CACF,CAAC,EAEK,CAAE,MAAAy8B,CAAM,KAAIC,GAAA,GAAoB9mB,CAAM,EACtC,CAAClI,EAAWI,CAAe,KAAI0B,GAAA,GAAU,EAAI,EAE7CmtB,EAAU,IAAM,CACpB7uB,EAAgB,KAChB,MAAkB,0CAA2C,CAC3D,eAAA6K,EACA,gBAAiB3X,EAAA,EAAO,UAAU,QAClC,WAAY,CAAC,IACf,CAAC,CACH,EAGM,CAAE,OAAQ47B,CAAa,KAAIC,GAAA,GAAc,EACzCC,KAAe,UAAuB,IAAI,EAC1C,CAACnsB,EAAKosB,CAAM,KAAI,YAAS,GAAG,KAClC,aAAU,IAAM,CACd,GAAID,EAAa,QAAS,CACxB,KAAM,CAAE,IAAAnsB,CAAI,EAAImsB,EAAa,QAAQ,sBAAsB,EAC3DC,EAAOpsB,CAAG,CACZ,CACF,EAAG,CAACmsB,CAAY,CAAC,EACjB,MAAM93B,EAAS43B,EAAejsB,EAAM,GAE9BqsB,EACJT,GAAiBE,EAAM,CAAC,GAAG,OAAS,OAClC,QAAC,QAAK,UAAWh+B,EAAO,YAAa,eAAGg+B,EAAM,CAAC,EAAE,OAAO,gCAA4B,EAClF,KAEN,SACE,OAACrmB,GAAA,IACC,MAAO,aACP,WAAY4mB,EAEZ,YAAa,CAAC,CAACT,EACf,UAAWA,EAAgB7uB,EAAY,GACvC,iBAAkB6uB,EAAgBI,EAAU,OAE5C,mBAAC,OACC,IAAKG,EACL,MACEP,EACI,CAAE,OAAQ,GAAI,EACd,CACE,UAAW,IACX,OAAAv3B,CACF,EAGN,mBAACi4B,GAAA,EAAS,CAAC,WAAYrnB,EAAQ,SAAA4mB,CAAA,CAAoB,EACrD,EACF,CAEJ,CAEA,SAAS,GAAgB/zB,EAAmB,CAAE,UAAAvJ,CAAU,EAAa,CACnE,MAAO,CACL,MAAOuJ,EAAM,QAAQ,MAAMvJ,CAAS,EAAG,KACzC,CACF,CAGO,MAAMg+B,MADK,YAAQ,GAAiB,CAAC,CAAC,EACDb,EAA6B,E,oDCnGzE,MAAMc,GAAiBj+B,GAAsB,CAC3C,MAAMk+B,KAAsB,MAAuBl+B,CAAS,EAC5D,MAAO,CACL,cAAY,OAAek+B,EAAsBC,GAAMA,EAAG,OAAO,EACjE,oBAAkB,OAAeD,EAAsBC,GAAMA,EAAG,aAAa,EAC7E,cAAY,OAAeD,EAAsBC,GAAMA,EAAG,OAAO,EACjE,kBAAgB,OAAeD,EAAsBC,GAAMA,EAAG,WAAW,EACzE,iCAA+B,OAC7BD,EACCC,MAAM,OAAiB,EAAE,oBAAoBA,EAAG,oBAAoB,GAAG,CAC1E,CACF,CACF,EAEaC,GAAY,CAAC,CAAE,UAAAp+B,CAAU,IAAa,CACjD,MAAMV,KAAW,eAAY,EACvB,CAAE,WAAA++B,EAAY,8BAAAC,EAA+B,iBAAAC,EAAkB,WAAAC,EAAY,eAAAC,CAAe,KAAI,WAClG,IAAMR,GAAcj+B,CAAS,EAC7B,CAACA,CAAS,CACZ,EAEM8c,KAAU,eAAYuhB,CAAU,EAChC/f,KAAa,eAAYggB,CAA6B,EACtDvhB,KAAgB,eAAYwhB,CAAgB,EAC5CG,KAAU,eAAYF,CAAU,EAChCG,KAAc,eAAYF,CAAc,EAExCG,KAAe,eAAY,IAAM,CACrCt/B,KAAS,MAAW,CAAE,UAAAU,CAAU,CAAC,CAAC,CACpC,EAAG,CAACV,EAAUU,CAAS,CAAC,EAElBmU,KAAW,eACd0qB,GAA4B,CAC3Bv/B,KAAS,MAAc,CAAE,UAAAU,EAAW,QAAS6+B,CAAW,CAAC,CAAC,CAC5D,EACA,CAACv/B,EAAUU,CAAS,CACtB,EAEM8+B,KAAa,eAChBv9B,GAAqB,CACpB4S,EAAS,CAAC,GAAG2I,EAAS,CAAE,GAAGvb,EAAO,SAAO,MAAaub,CAAO,CAAE,CAAC,CAAC,CACnE,EACA,CAAC3I,EAAU2I,CAAO,CACpB,EAEMiiB,EAAgB,IAAM,IAC1B,MAAkB,gCAAgC,CACpD,EAEMC,EAAiB,IAAM,IAC3B,MAAkB,kCAAkC,CACtD,EAEMC,EAAkBC,GAA0B,IAChD,MAAkB,2BAA4BA,IAAgB,OAAY,CAAC,EAAI,CAAE,aAAcA,CAAY,CAAC,CAC9G,EAEA,SACE,OAACC,GAAA,GACC,WAAA7gB,EACA,QAAAxB,EACA,gBAAiB3I,EACjB,WAAA2qB,EACA,aAAAF,EACA,cAAAG,EACA,eAAAC,EACA,eAAAC,EACA,KAAMliB,EACN,IAAK,MAAQ,QACb,QAAA2hB,EACA,SAAUC,EACV,gBAAiB,CAACvzB,EAAU4vB,OAC1B,OAAC/oB,GAAA,CACC,MAAO+oB,EACP,KAAK,QAEL,QAAQ,UACR,gBAAiB,IACjB,MAAM,QAEL,SAAA5vB,CAAA,EALI4vB,CAMP,EAEJ,CAEJ,E,qFCjFA,MAAM,GAAS,CACb,WAAS;AAAA;AAAA;AAAA,IAIT,iBAAe;AAAA;AAAA;AAAA;AAAA,IAKf,eAAa;AAAA;AAAA;AAAA,IAIb,UAAQ;AAAA;AAAA,IAGR,eAAa;AAAA;AAAA,IAGb,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQV,EAEMoE,GAAuB,IACvBC,GAA6C,EAsHnD,GA/G0Bh6B,GAAiC,CACzD,KAAM,CAAE,YAAAi6B,CAAY,EAAIj6B,EAClBkf,KAAY,cAAU+a,CAAW,EACjCC,KAAU,UAAoB,IAAI,EAElCC,EAAcjb,EAAU,OAAO,OAAQnQ,GAAUA,EAAM,KAAK,SAAS,OAAO,CAAC,EAC7EkiB,KAAQmJ,GAAA,GAAuClb,CAAS,EACxD,CAAE,MAAA1e,CAAM,KAAI83B,GAAA,GAAc,EAC1B,CAAC+B,EAAgBC,CAAiB,KAAI,YAC1C95B,GAASu5B,IAAwBI,EAAY,OAASH,EACxD,EAEMO,EAAiB,IAAM,CAC3BD,EAAkB,CAACD,CAAc,EACjC,MAAMr6B,EAAQ,CACZ,WAAY,CAACq6B,CACf,KACA,MAAkB,gEAAiEr6B,CAAK,CAC1F,KAEA,aAAU,IAAM,CAEdk6B,EAAQ,SAAS,gBAAgB,EAAG,EAAI,CAC1C,EAAG,CAACG,CAAc,CAAC,EAEnB,MAAMG,EAA0B1Q,GAA2B,CAIzD,GAAIA,EAAS,GAAiB,CAC5B,IAAI+K,EAAM,EACV,QAAS33B,EAAI,EAAGA,EAAI4sB,EAAQ5sB,IAC1B23B,GAAO4F,EAAkBv9B,EAAG,EAAI,EAGlC,OAAO,KAAK,IAAI,IAAe23B,CAAG,CACpC,CAEA,MAAO,IACT,EAEM4F,EAAoB,CAACC,EAAmBL,IAA4B,CAGxE,GAAI,CAACA,EACH,MAAO,IAET,MAAMlzB,EAAO8pB,EAAMyJ,CAAS,EAG5B,MAAO,KAAM,IAAoB,OAAO,KAAKvzB,CAAI,EAAE,OAASgzB,EAAY,QAAU,EACpF,EAEMQ,EAAW,qBAAkB,SAAM,CAAC,GAE1C,SACE,QAAC,WACC,qBAAC,UAAO,UAAW,GAAO,OACxB,oBAAC9rB,GAAA,EAAK,CAAC,UAAW,GAAO,cAAe,MAAO,iBAAkB,QAAS,iBACxE,mBAAC,OAAI,UAAW,GAAO,OACrB,mBAAC+rB,GAAA,EAAM,CAAC,SAAUL,EAAgB,GAAII,EAAU,MAAON,EAAgB,MAAO,iBAAkB,EAClG,EACF,KAEA,QAAC,OAAI,UAAW,GAAO,YAAa,4BAAgBpJ,EAAM,QAAO,GACnE,KAEA,OAAC,OAAI,KAAM,QAEP,gCAEG,UAAAkJ,EAAY,OAAS,GAAK,CAACE,MAC1B,OAACQ,GAAA,EAAU,CAAC,YAAAV,EAA0B,SAAUE,CAAA,CAAgB,KAElE,OAAC,OACC,IAAKH,EACL,UAAWjJ,EAAM,OACjB,UAAW,GAAO,QAClB,SAAWnyB,GAAU27B,EAAkB37B,EAAOu7B,CAAc,EAC5D,OAAQG,EAAuBvJ,EAAM,MAAM,EAC3C,MAAM,OAEL,UAAC,CAAE,MAAAnyB,EAAO,MAAA6G,CAAM,IAAM,CACrB,IAAIm1B,EACJ,OAAIT,IACFS,EAAsBX,EAAY,OAAQY,GAAe,CACvD,MAAMC,EAAgB/J,EAAMnyB,CAAK,EAAEi8B,EAAW,IAAI,EAClD,OAAOC,GAAiBA,IAAkB,IAC5C,CAAC,MAID,OAAC,OAAI,KAAK,MAAM,MAAO,CAAE,GAAGr1B,EAAO,SAAU,QAAS,EACpD,mBAACs1B,GAAA,IACC,eAAAZ,EACA,YAAaS,EACb,oBAAqBX,EAAY,OACjC,QAASlJ,EAAMnyB,CAAK,EAAE,SACtB,aAAcmyB,EAAMnyB,CAAK,EAC3B,EACF,CAEJ,EACF,GACF,EAEJ,GACF,CAEJ,EC3IA,SAAS,GAAgBoF,EAAmB,CAAE,UAAAvJ,CAAU,EAAgC,CAEtF,MAAMwM,EADUjD,EAAM,QACiB,MAAMvJ,CAAS,EAChD,CAAE,YAAAs/B,EAAa,oBAAAiB,EAAqB,MAAA9oB,EAAO,cAAAsF,CAAc,EAAIvQ,EAC7Dg0B,EAAkCD,EAAsB,CAACA,CAAmB,EAAI,CAAC,EACjFxV,GAAUuU,GAAa,QAAU,GAAK,GAAKiB,EAAsBjB,EAAckB,EAGrF,MAAO,CAAE,QAFOzjB,EAAc,MAEZ,YAAagO,EAAQ,MAAAtT,CAAM,CAC/C,CAEA,MAAM,MAAY,YAAQ,GAAiB,CAAC,CAAC,EAItC,MAAMgpB,WAA+B,eAA+C,CACzF,YAAYp7B,EAAc,CACxB,MAAMA,CAAK,EAUb,0BAAwBq7B,GAAoC,CAC1D,KAAK,SAAS,CAAE,aAAAA,CAAa,CAAC,CAChC,EAaA,iBAAc,IAAM,CAClB,MAAM3P,KAAU,OAAI,CAClB,QAAS,OACT,eAAgB,gBAChB,KAAM,GACR,CAAC,EACK4P,EAAqE,MAAqB,IAAK31B,IAAW,CAC9G,MAAOA,EAEP,MAAOA,EAAM,CAAC,EAAE,YAAY,EAAIA,EAAM,MAAM,CAAC,EAAE,QAAQ,IAAK,GAAG,CACjE,EAAE,EAEF,SACE,OAAC,OAAI,UAAW+lB,EACd,mBAAC8I,GAAA,GACC,QAAS,IAAM,CACb,MAAMx0B,EAAQ,CACZ,MACE,KAAK,MAAM,eAAiB,sBAAoB,MAC5C,sBAAoB,IACpB,sBAAoB,KAC5B,KACA,MAAkB,6DAA8DA,CAAK,CACvF,EACA,KAAK,KACL,QAASs7B,EACT,MAAO,KAAK,OAAO,aACnB,SAAU,KAAK,qBACjB,EACF,CAEJ,EArDMt7B,EAAM,oBACR,KAAK,MAAQ,CACX,aAAc,sBAAoB,GACpC,EAEJ,CAMA,gBAAiB,CACf,KAAM,CAAE,YAAAi6B,CAAY,EAAI,KAAK,MAE7B,MAAI,CAACA,GAAeA,EAAY,SAAW,EAClC,IAIF,KAAK,IAAI,KAAK,IAAI,IAAKA,EAAY,CAAC,EAAE,OAAS,EAAE,EAAI,EAAE,CAChE,CAmCA,QAAS,CACP,KAAM,CAAE,QAAAxhB,EAAS,kBAAA6H,EAAmB,YAAA2Z,EAAa,MAAAz5B,EAAO,YAAA+Q,EAAa,MAAAa,EAAO,UAAAmpB,EAAW,SAAApqB,CAAS,EAAI,KAAK,MACnG1Q,EAAS,KAAK,eAAe,EAC7BmoB,EAAapoB,EAAQ,MAAO,MAAM,aAAe,EAAI,MAE3D,IAAIu3B,EAAakC,EAEjB,MAAMuB,KAAwB,OAAoCjqB,EAAaa,CAAK,EAEhF2lB,GAAY,SACdA,KAAa,OAAoB,CAC/B,KAAMA,EACN,SAAA5mB,EACA,MAAO,MAAO,OACd,oBAAkB,MAAe,EAAE,QAAQ,QAAK,MAAe,CAAC,EAChE,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,sBAAAqqB,CACF,CAAC,GAGH,MAAMnqB,EAAS0mB,GAAY,OACxBtY,GAAqD,CAAC,CAACA,GAASA,EAAM,SAAW,CACpF,EAEM7W,EAAQ,KAAK,MAAM,eAAiB,sBAAoB,IAAM,MAAQ,QACtEuE,EAAQ,KAAK,OAAO,eAAiB,OAAY,KAAK,YAAY,EAAI,QAGtEsuB,EAAc,CAAC,KAAK,OAAO,cAAgB,KAAK,OAAO,eAAiB,sBAAoB,MAElG,SACE,QAAC5pB,GAAA,GAAW,CAAC,MAAAjJ,EAAc,QAASuE,EAAO,aAAcsL,EACtD,UAAApH,GAAQ,WACP,oBACG,UAAAoqB,MACC,OAAC9a,GAAA,GACC,UAAA4a,EACA,KAAMlqB,EAAO,CAAC,EACd,MAAOuX,EACP,OAAAnoB,EACA,kBAAA6f,CAAA,CACF,EAED,KAAK,OAAO,eAAiB,sBAAoB,QAAO,OAAC,GAAgB,CAAC,YAAajP,EAAO,CAAC,EAAG,GACrG,EAED,CAACA,GAAQ,WAAU,OAACwN,GAAY,CAAC,UAAW,CAAC,CAAE,MAAO,mBAAoB,CAAC,EAAG,GACjF,CAEJ,CACF,CAEA,SAAe,GAAUuc,EAAsB,E,gBCtJxC,MAAMM,GAAU17B,GAAiB,CACtC,MAAMqT,KAAgB,UAAO,IAAI,EAC3BsoB,EAA8B,CAClC,WAAY,WAAW37B,EAAM,QAAQ,YACrC,QAAS,CACX,EAEM47B,EAAqD,CACzD,OAAQ,CAAE,QAAS,EAAG,QAAS,MAAO,EACtC,SAAU,CAAE,QAAS,CAAE,EACvB,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,CACxB,EAEA,SACE,OAACC,GAAA,IACC,GAAI77B,EAAM,GACV,QAASA,EAAM,SACf,cAAeA,EAAM,eAAiB,GACtC,SAAUA,EAAM,SAChB,QAASqT,EAER,SAACnP,MACA,OAAC,OACC,IAAKmP,EACL,MAAO,CACL,GAAGsoB,EACH,GAAGC,EAAiB13B,CAAK,CAC3B,EAEC,SAAAlE,EAAM,SACT,EAEJ,CAEJ,ECtCa87B,GAAkB97B,GAA+B,CAC5D,KAAM,CAAE,WAAA+7B,CAAW,EAAI/7B,EACjBg8B,EAAY,EAAAD,EACZE,EAAWD,EAAY,IAAM,GAC7BpzB,EAAQmzB,EAAa,cAAgB,gBACrCnjC,EAAUmjC,GAAY,SAAWA,GAAY,MAAM,SAAW,KAEpE,SACE,OAACL,GAAM,CAAC,GAAIM,EAAW,SAAAC,EACrB,mBAACxrB,GAAA,EAAK,CAAC,SAAS,QAAQ,MAAA7H,EAAc,WAAY,EAC/C,SAAAhQ,CAAA,CACH,EACF,CAEJ,ECdO,SAASsjC,GAAuBl8B,EAAc,CACnD,MAAM0X,KAAgB,eAAaxT,GAAUA,EAAM,QAAQ,MAAMlE,EAAM,SAAS,EAAG,aAAa,EAC1F+7B,EAAarkB,GAAe,QAAU,MAAa,MAAQA,GAAe,MAAQ,OAGxF,OAAIqkB,GAAY,MACP,QAGF,OAACD,GAAc,CAAC,WAAAC,CAAA,CAAwB,CACjD,C,gBCCA,MAAM,GAAatgC,IACV,CACL,mBAAiB,OAAI,CACnB,QAAS,OACT,SAAU,OACV,IAAKA,EAAM,QAAQ,CAAC,EACpB,UAAWA,EAAM,QAAQ,CAAC,CAC5B,CAAC,CACH,GAGK,SAAS0gC,GAAiBn8B,EAAc,CAC7C,MAAMvE,KAAQ,MAAU,EAClBvB,EAAS,GAAUuB,CAAK,EACxB,CAAE,aAAAyZ,EAAc,gBAAAC,EAAiB,sBAAAJ,CAAsB,EAAIF,GAAwB,EAGnFunB,EAAoB,CAACp8B,EAAM,4BAA8B,CAAC+U,EAEhE,SACE,QAAC,OAAI,UAAW7a,EAAO,gBACpB,WAAC8F,EAAM,4BACN,OAACkS,GAAA,GACC,QAAQ,SACR,gBAAY,KAAE,wDAAyD,WAAW,EAClF,QAASlS,EAAM,yBACf,SAAUA,EAAM,0BAChB,KAAK,OAEL,mBAAC,KAAK,CAAC,QAAQ,6CAA6C,qBAAS,EACvE,EAEDo8B,MACC,OAAClqB,GAAA,GACC,QAASgD,EAAe,SAAW,SACnC,gBAAY,KAAE,4DAA6D,eAAe,EAC1F,QAAS,IAAMC,EAAgB,CAACD,CAAY,EAC5C,cAAa,KAAW,SAAS,mBACjC,KAAK,UAEL,mBAAC,KAAK,CAAC,QAAQ,iDAAiD,yBAAa,EAC/E,KAEF,OAAChD,GAAA,GACC,QAASlS,EAAM,2BAA6B,SAAW,SACvD,gBAAY,KAAE,8DAA+D,iBAAiB,EAC9F,QAASA,EAAM,4BACf,KAAK,cAEL,mBAAC,KAAK,CAAC,QAAQ,mDAAmD,2BAAe,EACnF,GACF,CAEJ,C,gBC1CA,SAAS,GAAgBkE,EAAmB,CAAE,UAAAvJ,CAAU,EAAwB,CAE9E,MAAMwM,EADUjD,EAAM,QACiB,MAAMvJ,CAAS,EAChD,CAAE,YAAAs/B,EAAa,MAAA7nB,CAAM,EAAIjL,EACzBk1B,KAAiB,MAAuB1hC,CAAS,EAEvD,MAAO,CAAE,QADOs/B,GAAeA,EAAY,OAAS,EAAI,GAAQoC,EAC9C,YAAApC,EAAa,MAAA7nB,CAAM,CACvC,CAEA,MAAM,MAAY,YAAQ,GAAiB,CAAC,CAAC,EAItC,MAAMkqB,WAAuB,eAAqB,CAAlD,kCACL,kBAAgBrS,GAAoBA,EAAK,OAAO,KAAMpC,GAAMA,EAAE,OAAS,MAAU,YAAY,EAE7F,eAAe0U,EAAkBC,EAAuB,CACtD,OAAID,IAAa,EACR,IAIF,KAAK,IAAI,IAAK,KAAK,IAAIA,EAAW,GAAIC,EAAe,IAAM,CAAC,EAAI,GAAK,EAAE,CAChF,CAEA,cAAczE,EAAgC9N,EAAiB/sB,EAAW,CACxE,IAAI6c,EAAOkQ,EAAK,KAChB,MAAI,CAAClQ,IAASge,GAAY,QAAU,GAAK,IACvChe,EAAOkQ,EAAK,OAAS,GAAG/sB,CAAC,IAGpB6c,KACH,KAAE,gCAAiC,mBAAoB,CAAE,KAAAA,EAAM,cAAe,CAAE,YAAa,EAAM,CAAE,CAAC,KACtG,KAAE,sBAAuB,OAAO,CACtC,CAEA,QAAS,CACP,KAAM,CAAE,QAAAtB,EAAS,kBAAA6H,EAAmB,YAAA2Z,EAAa,MAAAz5B,EAAO,YAAA+Q,EAAa,MAAAa,EAAO,UAAAmpB,EAAW,SAAApqB,EAAU,MAAA1V,CAAM,EACrG,KAAK,MAEP,IAAIs8B,KAAa,OAA4BkC,CAAW,KACpD,OAAwCA,CAAW,EACnDA,EACJ,MAAMuB,KAAwB,OAAoCjqB,EAAaa,CAAK,EAEhF2lB,GAAY,SACdA,KAAa,OAAoB,CAC/B,KAAMA,EACN,SAAA5mB,EACA,MAAO,MAAO,OACd,oBAAkB,MAAe,EAAE,QAAQ,QAAK,MAAe,CAAC,EAChE,YAAa,CACX,SAAU,CAAC,EACX,UAAW,CAAC,CACd,EACA,sBAAAqqB,CACF,CAAC,GAGH,MAAMnqB,EAAS0mB,GAAY,OACxBtY,GAAqD,CAAC,CAACA,GAASA,EAAM,SAAW,CACpF,EAEA,SACE,oBACG,UAAApO,GAAUA,EAAO,SAAW,MAC3B,OAACQ,GAAA,GAAW,CAAC,SAAO,KAAE,sBAAuB,OAAO,EAAG,MAAArR,EAAc,OAAQ,IAC1E,gBAAM,OAACqe,GAAY,CAAC,UAAW,CAAC,CAAE,SAAO,KAAE,wBAAyB,mBAAmB,CAAE,CAAC,EAAG,EAChG,EAEDxN,GAAUA,EAAO,OAAS,MACzB,OAAC,OAAI,aAAW,OAAI,CAAE,QAAS,OAAQ,cAAe,SAAU,IAAK5V,EAAM,QAAQ,CAAC,CAAE,CAAC,EACpF,SAAA4V,EAAO,IAAI,CAAC4Y,EAAM/sB,OACjB,OAAC2U,GAAA,IAEC,MAAO,KAAK,cAAckmB,EAAY9N,EAAM/sB,CAAC,EAC7C,MAAAsD,EACA,OAAQ,KAAK,eAAeypB,EAAK,OAAQ,KAAK,aAAaA,CAAI,CAAC,EAChE,aAAcxR,EAAU,MAAa,QAAU,OAE9C,UAACtZ,EAAYC,OACZ,OAACuhB,GAAA,GACC,UAAA4a,EACA,KAAAtR,EACA,MAAO9qB,EACP,OAAQC,EACR,kBAAAkhB,CAAA,CACF,GAbG2J,EAAK,OAAS,SAAS/sB,CAAC,EAe/B,CACD,EACH,GAEJ,CAEJ,CACF,CAEO,MAAMu/B,MAA0B,MAAWH,EAAc,EAEhE,MAAe,MAAW,GAAUA,EAAc,CAAC,E,4BClH5C,SAASI,GAAmB18B,EAAc,CAE/C,MAAMyf,EAAQzf,EAAM,WAAW,CAAC,EAC1B,CAAE,WAAA+3B,EAAY,YAAAxmB,EAAa,UAAA5W,EAAW,cAAAshB,CAAc,EAAIjc,EACxD28B,KAAY,WAAQ,OAAM1c,GAAA,GAAoBR,CAAK,EAAG,CAACA,CAAK,CAAC,EAC7Dmd,KAAa,eAChB14B,GAAsBA,EAAM,QAAQ,MAAMlE,EAAM,SAAS,GAAG,oBAAsB,MACrF,EAEA,OAAK28B,KAKH,OAAC9qB,GAAA,GAAW,CAAC,QAAQ,OAAO,MAAM,QAChC,mBAACgrB,GAAA,GACC,UAAAliC,EACA,WAAAo9B,EACA,YAAAxmB,EACA,cAAA0K,EACA,UAAA0gB,EACA,WAAAC,CAAA,CACF,EACF,EAbO,IAeX,CC6BA,MAAM,GAAanhC,IACV,CACL,eAAa,OAAI,CACf,MAAO,cAEP,SAAU,WACV,UAAW,OACX,QAAS,OACT,cAAe,SACf,IAAKA,EAAM,QAAQ,CAAC,CACtB,CAAC,EACD,kBAAgB,OAAI,CAClB,MAAO,iBACP,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,oBAAkB,OAAI,CACpB,MAAO,mBACP,QAAS,OACT,cAAe,SACf,aAAcA,EAAM,QAAQ,CAAC,EAC7B,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,WAAS,OAAI,CACX,SAAU,WACV,IAAK,EACL,KAAMA,EAAM,QAAQ,CAAC,EACrB,MAAO,EACP,OAAQ,EACR,QAAS,MACX,CAAC,CACH,GA0CK,MAAMqhC,WAAgB,eAAmC,CAK9D,YAAY98B,EAAc,CACxB,MAAMA,CAAK,EAQb,kBAAgB+8B,GAA2B,CACzC,KAAM,CAAE,gBAAA5H,EAAiB,UAAAx6B,CAAU,EAAI,KAAK,MAC5Cw6B,EAAgB,CAAE,UAAAx6B,EAAW,SAAAoiC,CAAS,CAAC,CACzC,EAGA,oBAAkB7gC,GAAqB,CACrC,KAAK,MAAM,WAAW,KAAK,MAAM,UAAW,CAACA,CAAK,CAAC,CACrD,EAEA,uBAAqBqkB,GAA4B,CAC/C,KAAM,CAAE,MAAAxf,EAAO,IAAAD,EAAK,SAAA0f,CAAS,EAAID,EAC7BC,IAAa,OACf,KAAK,mBAAmB1f,EAAKC,CAAK,EAGhCyf,IAAa,OACf,KAAK,sBAAsB1f,EAAKC,CAAK,CAEzC,EAEA,4BAAyB,IAAM,CAC7BmK,GAAA,EAAM,IAAIN,GAAmC,QAAS,CAAC,KAAK,MAAM,qBAAqB,EACvF,KAAK,SAAU1G,OACb,MAAkB,yCAA0C,CAC1D,KAAM,UACN,KAAMA,EAAM,sBAAwB,QAAU,MAChD,CAAC,EACM,CACL,sBAAuB,CAACA,EAAM,qBAChC,EACD,CACH,EAOA,yBAAsB,MAAOpD,EAAaC,EAAwB40B,IAAmB,CACnF,MAAMz5B,EAAQ,KAAK,MAAM,QAAQ,KAAM65B,GAAMA,EAAE,QAAUJ,CAAK,EAC9D,GAAI,CAACz5B,EACH,MAAO,GAET,MAAMm5B,EAAK,QAAM,MAAiB,EAAE,IAAIn5B,EAAM,UAAU,EACxD,MAAI,aAAiCm5B,CAAE,GAAKA,EAAG,eAAen5B,EAAO,CAAE,IAAA4E,EAAK,MAAOC,EAAM,SAAS,CAAE,CAAC,EAIvG,EAKA,wBAAqB,CAACD,EAAaC,EAAwB0e,IAAsB,CAC/E,KAAK,gBACH,CACE,KAAM,aACN,QAAS,CAAE,IAAA3e,EAAK,MAAOC,EAAM,SAAS,CAAE,EACxC,MAAA0e,CACF,EACAA,GAAO,KACT,CACF,EAKA,2BAAwB,CAAC3e,EAAaC,EAAwB0e,IAAsB,CAClF,KAAK,gBACH,CACE,KAAM,iBACN,QAAS,CAAE,IAAA3e,EAAK,MAAOC,EAAM,SAAS,CAAE,EACxC,MAAA0e,CACF,EACAA,GAAO,KACT,CACF,EAKA,yBAAsB,CAAC1e,EAAwB40B,IAAmB,CAChE,KAAK,gBAAgB,CAAE,KAAM,oBAAqB,QAAS,CAAE,MAAO50B,EAAM,SAAS,CAAE,CAAE,EAAG40B,CAAK,CACjG,EAKA,4BAAyB,CAAC50B,EAAwB40B,IAAmB,CACnE,KAAK,gBAAgB,CAAE,KAAM,wBAAyB,QAAS,CAAE,MAAO50B,EAAM,SAAS,CAAE,CAAE,EAAG40B,CAAK,CACrG,EAEA,8BAA2B,IAAM,CAC/B,KAAM,CAAE,UAAAh7B,EAAW,UAAAqiC,CAAU,EAAI,KAAK,MACtC,KAAK,MAAM,YAAYriC,EAAWqiC,EAAU,MAAM,CACpD,EAKA,qBAAkB,CAACxjC,EAAwBm8B,IAAmB,CAC5D,MAAMsH,EAAW,MAAO/gC,EAAkBghC,IAAiC,CAGzE,GAAIvH,GAASA,IAAUz5B,EAAM,MAC3B,OAAOA,EAET,KAAM,CAAE,WAAA0gC,CAAW,EAAI1gC,EACvB,GAAI0gC,GAAc,KAChB,OAAO1gC,EAET,MAAMm5B,EAAK,QAAM,MAAiB,EAAE,IAAIuH,CAAU,EAC5CO,EAAoB,CAAC,aAAc,gBAAgB,EACzD,SAAI,OAAiC9H,CAAE,GAAK8H,EAAkB,SAASD,EAAa,IAAI,EAC/E7H,EAAG,kBAAkBn5B,EAAO,CACjC,KAAMghC,EAAa,OAAS,aAAe,aAAe,aAC1D,QAASA,EAAa,SAAW,CAAC,EAClC,MAAOA,EAAa,KACtB,CAAC,EAEC7H,EAAG,YACEA,EAAG,YAAYn5B,EAAOghC,CAAY,EAElChhC,CAEX,EACA,KAAK,MAAM,cAAc,KAAK,MAAM,UAAW1C,EAAQyjC,CAAQ,CACjE,EAEA,cAAYj/B,GAAyB,CACnC,KAAK,MAAM,WAAW,KAAK,MAAM,UAAWA,CAAI,CAClD,EAEA,qBAAkB,IAAM,CAEtB,KAAK,MAAM,UAAU,KAAK,MAAM,SAAS,CAC3C,EAEA,oBAAiB,IAAM,CACrB,KAAK,MAAM,eAAe,CAAE,UAAW,KAAK,MAAM,SAAU,CAAC,CAC/D,EAEA,uBAAqBqlB,GAAqC,CACxD,KAAM,CAAE,UAAA1oB,EAAW,gBAAAw6B,CAAgB,EAAI,KAAK,MAC5CA,EAAgB,CAAE,UAAAx6B,EAAW,cAAA0oB,CAAc,CAAC,CAC9C,EAEA,iBAAe+Z,GACN,MAAO7I,GAA+B,CAE3C,GADA,KAAK,MAAM,UAAUA,CAAO,EACxBA,GAAW,KAAK,MAAM,mBAAoB,CAC5C,MAAMl2B,GAAU,QAAM,MAAiB,EAAE,IAAIk2B,EAAQ,aAAa,GAAG,KAC/DhL,EACJ,KAAK,MAAM,mBAAmB,MAAQ,SAClC,QAAI,KAAK,MAAM,QAAS,mBAAmB,EAC3C,KAAK,MAAM,mBAAmB,KAC9B8T,EAAW,CACf,OAAQ,QACR,UAAAD,EACA,OAAA7T,EACA,OAAAlrB,EACA,UAAW,KAAK,MAAM,SACxB,KACA,MAAkB,oCAAqCg/B,CAAQ,CACjE,CACF,EA7KA,KAAK,MAAQ,CACX,sBAAuBnyB,GAAA,EAAM,QAAQN,GAAmC,QAAS,EAAI,CACvF,EACA,KAAK,cAAgB5K,EAAM,SAAS,aAAa,QAAS,CAAE,UAAW,EAAM,CAAC,EAC9E,KAAK,aAAeA,EAAM,SAAS,aAAa,OAAQ,CAAE,UAAW,EAAM,CAAC,CAC9E,CA2KA,iBAAiBs9B,EAAgC,CAC/C,SACE,OAAC,OAAI,aAAW,MAAGA,CAAsB,EACvC,mBAAC9F,GAAwB,EAAC,EAC5B,CAEJ,CAEA,cAAe,CACb,SAAO,OAACH,GAAM,EAAC,CACjB,CAEA,aAAa72B,EAAe,CAC1B,KAAM,CAAE,SAAA2Q,EAAU,cAAAuG,EAAe,SAAAlG,CAAS,EAAI,KAAK,MAE7C+rB,KAAkB,YAAQ7lB,GAAe,aAAc,qCAAqC,EAElG,OAAO,OAAO,QAAQ6lB,CAAe,EAAE,IAAI,CAAC,CAACnsB,EAAUC,CAAM,EAAGvS,OAE5D,OAAC8N,GAAkB,CAAC,QAASwE,EAAU,MAAOA,EAAU,KAAK,OAC3D,mBAACF,GAAA,CAEC,SAAAC,EACA,SAAAC,EACA,OAAAC,EACA,MAAOqG,EAAc,MACrB,UAAWA,EAAc,UACzB,OAAQ,IACR,MAAAlX,EACA,YAAa,KAAK,YAAY4Q,CAAQ,EACtC,SAAAI,CAAA,EATK1S,CAUP,GAZuEA,CAazE,CAEH,CACH,CAEA,iBAAiB0B,EAAe,CAC9B,KAAM,CAAE,YAAAg9B,EAAa,SAAArsB,EAAU,cAAAuG,EAAe,eAAA+lB,CAAe,EAAI,KAAK,MAEtE,SACE,OAAC7wB,GAAkB,CAAC,QAAQ,QAAQ,MAAM,QAAQ,KAAK,YACrD,mBAAC8wB,GAAA,GACC,KAAMF,EACN,OAAQC,EAAiB,IAAM,IAC/B,MAAAj9B,EACA,UAAWkX,EAAc,UACzB,SAAAvG,EACA,aAAc,KAAK,kBACnB,YAAauG,EAAc,YAC3B,YAAa,KAAK,YAAY,OAAO,EACrC,aAAcA,EAAc,MAC5B,SAAU,KAAK,cACjB,EACF,CAEJ,CAEA,iBAAiBlX,EAAe,CAC9B,KAAM,CAAE,UAAA7F,EAAW,SAAAwW,CAAS,EAAI,KAAK,MACrC,SACE,OAACvE,GAAkB,CAAC,QAAQ,QAAQ,MAAM,QAAQ,KAAK,QACrD,mBAAC,IACC,UAAW,MAAU,MAAM,QAAQ,QAAQ,MAC3C,MAAApM,EACA,UAAA7F,EACA,kBAAmB,KAAK,kBACxB,SAAAwW,EACA,YAAa,KAAK,YAAY,OAAO,EACvC,EACF,CAEJ,CAEA,oBAAoB3Q,EAAe,CACjC,KAAM,CAAE,UAAA7F,EAAW,mBAAA6d,EAAoB,SAAArH,CAAS,EAAI,KAAK,MACzD,SACE,OAACvE,GAAkB,CAAC,QAAQ,iBAAiB,MAAM,iBAAiB,KAAK,gBACvE,mBAAC,IACC,kBAAmB,GACnB,UAAW,MAAU,MAAM,QAAQ,QAAQ,MAC3C,MAAApM,EACA,UAAA7F,EACA,kBAAmB6d,GAAoB,YAAc,KAAK,kBAAoB,OAC9E,SAAArH,EACA,YAAa,KAAK,YAAY,OAAO,EACvC,EACF,CAEJ,CAEA,gBAAgB3Q,EAAe,CAC7B,KAAM,CAAE,UAAA7F,EAAW,YAAAiY,EAAa,MAAAnX,EAAO,cAAAic,CAAc,EAAI,KAAK,MACxDgU,EAAU,SAASjwB,EAAM,QAAQ,CAAC,EAAE,MAAM,EAAG,EAAE,EAAG,EAAE,EAEpDkiC,KAA4B,OAAI,CACpC,QAAS,OACT,cAAe,SACf,IAAKliC,EAAM,QAAQ,CAAC,CACtB,CAAC,EACD,SACE,OAACmR,GAAkB,CAAC,QAAQ,OAAO,MAAM,OAAO,KAAK,UAAU,UAAW+wB,EACxE,mBAAC,IACC,UAAAhjC,EACA,aAAc+c,EAAc,MAC5B,YAAA9E,EACA,MAAOpS,EAAQkrB,EACf,mBAAoB,KAAK,mBACzB,sBAAuB,KAAK,sBAC5B,gBAAiB,KAAK,gBACtB,eAAgB,KAAK,eACrB,SAAU,KAAK,aACf,YAAa,KAAK,YAAY,MAAM,EACpC,cAAe,KAAK,cACpB,oBAAqB,KAAK,oBAC1B,oBAAqB,KAAK,oBAC1B,uBAAwB,KAAK,uBAC7B,kBAAmB,IAAM,CACvB,KAAK,SAAS,CAAE,sBAAuB,EAAK,CAAC,CAC/C,EACF,EACF,CAEJ,CAEA,uBAAwB,CACtB,KAAM,CAAE,WAAAkS,EAAY,SAAAzsB,EAAU,6BAAAglB,EAA8B,UAAAx7B,EAAW,mBAAA6d,EAAoB,QAAAf,CAAQ,EAAI,KAAK,MAE5G,SACE,OAAC7K,GAAkB,CAAC,QAAQ,cAAc,MAAM,cAAc,KAAK,UACjE,mBAACiqB,GAAA,CACC,cAAe+G,EAAW,KAC1B,SAAAzsB,EACA,QAASysB,EAAW,QACpB,QAAAnmB,EACA,mBAAAe,EACA,UAAW,KAAK,YAAY,YAAY,EACxC,qBAAuB7f,GACrBw9B,EAA6Bx7B,EAAWhC,EAAS,MAAuB,UAAU,EAEtF,EACF,CAEJ,CAEA,sBAAuB,CACrB,KAAM,CAAE,UAAAgC,EAAW,UAAAkjC,EAAW,cAAAnmB,EAAe,mBAAAc,CAAmB,EAAI,KAAK,MACnEpE,EAAiBoE,EAAqBA,GAAoB,KAAO,UAEvE,SACE,OAAC5L,GAAkB,CAAC,QAAQ,aAAa,MAAM,aAAa,KAAK,cAC/D,mBAAC+rB,GAAA,CACC,WAAYjhB,EAAc,gBAC1B,UAAA/c,EACA,cAAekjC,EACf,eAAAzpB,EACA,YAAa,KAAK,YAAY,WAAW,EAC3C,EACF,CAEJ,CAEA,uBAAwB,CACtB,KAAM,CAAE,cAAAsD,CAAc,EAAI,KAAK,MAC/B,SACE,OAAC9K,GAAkB,CAAC,QAAQ,cAAc,MAAM,cAAc,KAAK,OACjE,mBAACoN,GAA0B,CAAC,WAAYtC,EAAc,iBAAkB,EAC1E,CAEJ,CAEA,sBAAuB,CACrB,KAAM,CAAE,cAAAA,EAAe,UAAA/c,CAAU,EAAI,KAAK,MACpCo9B,EAAargB,EAAc,OAAO,OAAQomB,GAAWA,EAAO,MAAM,6BAA+B,OAAO,EAE9G,OAEE/F,EAAW,WACT,OAACnrB,GAAkB,CAAC,QAAQ,SAAS,MAAM,SAAS,KAAK,WACvD,mBAAC8vB,GAAA,CACC,UAAA/hC,EACA,WAAAo9B,EACA,YAAa,KAAK,YAAY,WAAW,EACzC,cAAe,KAAK,cACtB,EACF,CAGN,CAEA,QAAS,CACP,KAAM,CACJ,mBAAAvf,EACA,UAAA7d,EACA,YAAA6iC,EACA,cAAA9lB,EACA,OAAAjE,EACA,MAAAhY,EACA,YAAAsiC,EACA,UAAAC,EACA,kBAAAC,EACA,SAAAC,EACA,UAAAL,EACA,WAAAM,EACA,cAAAC,EACA,eAAAX,EACA,eAAAY,EACA,yBAAAC,EACA,4BAAAC,EACA,mBAAAC,EACA,sBAAAC,CACF,EAAI,KAAK,MACH,CAAE,sBAAAC,CAAsB,EAAI,KAAK,MACjCxkC,EAAS,GAAUuB,CAAK,EACxBkjC,EAAajnB,GAAiBA,EAAc,QAAU,MAAa,WACnEknB,EAA6B,IAAC,OAAkB,EAAE,sBAClDC,EACJnnB,EAAc,QAAU,MAAa,MACrC,CACEA,EAAc,WACdA,EAAc,YACdA,EAAc,gBACdA,EAAc,iBACdA,EAAc,YACdA,EAAc,oBACdA,EAAc,YACdA,EAAc,YAChB,EAAE,MAAOha,GAAMA,EAAE,SAAW,CAAC,EAE/B,IAAIohC,EACJ,MAAMtnB,EAA2B8mB,GAA0B,WAE3D,MAD8B,GAAQ9mB,GAA4B8mB,GAA0B,mBAC/DC,IAAgC,SAC3DO,KAAkB,OAAC3vB,GAAiB,CAAC,UAAAxU,EAAsB,aAAc4jC,CAAA,CAA6B,MAItG,QAAC93B,GAA6B,CAAC,oBAAqB,KAAK,MAAM,QAC7D,oBAAC2R,GAAA,CACC,UAAAzd,EACA,aAAc,KAAK,aACnB,uBAAwB,KAAK,uBAC7B,qBAAsB+jC,CAAA,CACxB,KACA,OAAC,OACC,MAAO,CACL,SAAU,WACV,OAAQ,OACR,YAAajjC,EAAM,QAAQ,CAAC,CAC9B,EAEA,oBAAC,OAAI,UAAWvB,EAAO,QACpB,UAAAwkC,MACC,OAAC7zB,GAAc,CAAC,SAAU,KAAK,cAAe,QAAS,6BAA6BlQ,CAAS,GAAI,KAEnG,OAAC+R,GAAA,GACC,OAAQ,MAAU,MAAM,QAAQ,QAAQ,WACxC,kBAAoBuP,GAAmB,KAAK,cAAgBA,GAAiB,OAC7E,oBAAmB,GAEnB,mBAAC,OAAI,UAAW/hB,EAAO,iBACpB,SAAAse,KACC,oBACE,oBAAC5L,GAAkB,CAAC,QAAQ,UAAU,MAAM,UAAU,KAAK,QAAQ,iBAAkB,GACnF,oBAACH,GAAA,EAAc,CAAC,UAAWvS,EAAO,eAC/B,UAAA4kC,KACD,OAAC/F,GAAS,CAAC,UAAAp+B,CAAA,CAAsB,KACjC,OAACwhC,GAAA,CAEC,0BACE1oB,GAAW+D,GAA4BgB,EAAmB,KAAK,MAIjE,wBAAyB,GACzB,2BAAAomB,EACA,2BAA4BJ,EAC5B,yBAA0B,KAAK,yBAC/B,4BAA6B,IAAMC,EAAsB,CAACD,CAAkB,EAC9E,KACA,OAACtC,GAAsB,CAAC,UAAAvhC,CAAA,CAAsB,GAChD,EACF,KACA,OAAC,MAAS,CAAC,SAAU,KAAK,SAAU,cAAa,GAC9C,UAAC,CAAE,MAAA6F,CAAM,IACJA,IAAU,EACL,QAIP,OAAC,QAAK,aAAW,MAAGtG,EAAO,WAAW,EAAG,MAAO,CAAE,MAAAsG,CAAM,EACtD,mBAACu+B,GAAA,GAAkB,CAChB,SAAAJ,MACC,oBACG,UAAAZ,GAAeP,MACd,OAACuB,GAAA,GAAkB,CAAE,cAAK,iBAAiBv+B,CAAK,EAAE,EAEnDy9B,MACC,OAACc,GAAA,GAAkB,CAAE,cAAK,oBAAoBv+B,CAAK,EAAE,EAEtDw9B,MAAa,OAACe,GAAA,GAAkB,CAAE,cAAK,iBAAiBv+B,CAAK,EAAE,EAC/D09B,MAAY,OAACa,GAAA,GAAkB,CAAE,cAAK,gBAAgBv+B,CAAK,EAAE,EAC7D49B,MACC,OAACW,GAAA,GAAkB,CAAE,cAAK,qBAAqB,EAAE,EAElDtB,MACC,OAACsB,GAAA,GAAkB,CAAE,cAAK,sBAAsB,EAAE,EAEnDlB,MAAa,OAACkB,GAAA,GAAkB,CAAE,cAAK,qBAAqB,EAAE,EAC9DV,MACC,OAACU,GAAA,GAAkB,CAAE,cAAK,sBAAsB,EAAE,EAEnDZ,MAAc,OAACY,GAAA,GAAkB,CAAE,cAAK,aAAav+B,CAAK,EAAE,EAC5Dq+B,MAAc,OAACE,GAAA,GAAkB,CAAE,cAAK,aAAa,EAAE,GAC1D,EAEJ,EACF,CAEJ,CACF,GACF,EAEA,KAAK,iBAAiB7kC,EAAO,gBAAgB,EAEjD,EACF,GACF,EACF,GACF,CAEJ,CACF,CAEA,SAAS,GAAgBgK,EAAmB,CAAE,UAAAvJ,CAAU,EAAiB,CACvE,MAAMqkC,EAAU96B,EAAM,QAChB,CAAE,YAAA0O,CAAY,EAAIosB,EAClB73B,EAAO63B,EAAQ,MAAMrkC,CAAS,EAE9BwW,KAAW,MAAYjN,EAAM,IAAI,EACjC,CACJ,mBAAAsU,EACA,UAAAwkB,EACA,QAAAvlB,EACA,OAAAhE,EACA,YAAA+pB,EACA,YAAAvD,EACA,WAAAxD,EACA,SAAAyH,EACA,YAAAH,EACA,UAAAC,EACA,UAAAH,EACA,WAAAM,EACA,cAAAzmB,EACA,cAAA0mB,EACA,eAAAX,EACA,kBAAAQ,EACA,qBAAAtH,EACA,4BAAA4H,CACF,EAAIp3B,EAEEsR,KAAU,MAAuB9d,CAAS,EAAEuJ,CAAK,EACjD05B,EAAajH,EAAqB,MAAuB,UAAU,EAEnE0H,EAAiB,CAAC,EAAET,EAAW,eAAiB,QAAa,CAACnH,IAAe+G,GAAevD,IAElG,MAAO,CACL,mBAAAzhB,EACA,UAAAwkB,EACA,QAAAvlB,EACA,OAAAhE,EACA,YAAA+pB,EACA,WAAY/G,GAAc,OAC1B,cAAA/e,EACA,YAAA9E,EACA,SAAAzB,EACA,SAAA+sB,EACA,YAAAH,EACA,UAAAC,EACA,UAAAH,EACA,WAAAM,EACA,cAAAC,EACA,kBAAAH,EACA,eAAAR,EACA,YAAU,MAAQv5B,CAAK,EACvB,QAAAuU,EACA,WAAAmlB,EACA,eAAAS,EACA,4BAAAE,EACA,yBAA0BS,EAAQ,wBACpC,CACF,CAEA,MAAM,GAAqB,CACzB,WAAU,MACV,cAAa,KACb,UAAS,KACT,eAAc,KACd,WAAU,KACV,gBAAe,MACf,YAAW,KACX,UAAS,KACT,6BAA4B,IAC9B,EAEM,MAAY,YAAQ,GAAiB,EAAkB,EAE7D,MAAe,MAAW,GAAUlC,EAAO,CAAC,E,4EC9rBrC,SAASmC,GAAsBj/B,EAAc,CAClD,KAAM,CAAE,QAAAosB,EAAS,cAAA1U,EAAe,SAAAvG,EAAU,QAAA+tB,EAAS,UAAAvkC,CAAU,EAAIqF,EAC3D,CAACm/B,EAAaC,CAAc,KAAI,YAAyB,CAC7D,eAAgB,GAChB,gBAAiB,EACnB,CAAC,EACKrH,EAAargB,GAAe,QAAU,CAAC,EAC7C,IAAIrf,EAASqf,GAAe,OACxB,CAACrf,GAAQ,QAAUqf,GAAe,QACpCrf,EAAS,CAACqf,EAAc,KAAK,GAE/B,MAAMxd,KAAS,MAAW,EAAS,KAEnC,aAAU,IAAM,IACd,MAAkB,wCAAwC,CAC5D,EAAG,CAAC,CAAC,EAEL,MAAMmlC,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,aACN,WAAS,OAACC,GAAA,EAAe,CAAC,KAAM5nB,EAAgB,SAAUA,GAAe,SAAS,UAAY,IAAe,CAAE,CACjH,EAEM6nB,EAAqB,CACzB,MAAO,OACP,MAAO,OACP,KAAM,iBACN,WAAS,OAACC,GAAA,EAAc,CAAC,KAAM9nB,EAAe,QAAA0U,CAAA,CAAkB,CAClE,EAEMqT,EAAqB,CACzB,MAAO,OACP,MAAO,OACP,KAAM,WACN,WACE,OAACC,GAAA,GACC,KAAM3H,EACN,SAAU,UACV,UAAWrgB,EAAc,QAAU,MAAa,QAChD,QAASynB,EACT,SAAAhuB,EACA,IAAK,MAAQ,QACb,yBAAyB,kCACzB,gBAAiBiuB,CAAA,CACnB,CAEJ,EAEMO,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,cACN,WACE,OAAC,OAAI,UAAWzlC,EAAO,sBACrB,mBAAC0lC,GAAA,GACC,WAAYV,KAAU,OAAe,KAAG,OAAmBvkC,CAAS,CAAC,KAAI,OAAmBA,CAAS,EACrG,KAAM+c,EACN,eAAgB,IAAM1X,EAAM,WAAW,CAAE,UAAArF,CAAU,CAAC,EACtD,EACF,CAEJ,EAEMklC,EAAO,CAACR,EAAUM,EAAUJ,EAASE,CAAO,EAClD,GAAIpnC,GAAQ,OAAQ,CAClB,MAAMynC,EAAsB,CAC1B,MAAO,QACP,MAAO,QACP,KAAM,uBACN,WAAS,OAACC,GAAA,EAAe,CAAC,OAAA1nC,CAAA,CAAgB,CAC5C,EACAwnC,EAAK,KAAKC,CAAQ,CACpB,CACA,SACE,OAACh6B,GAAa,CACZ,mBAACk6B,GAAA,EAAe,CAAC,KAAAH,EAAY,QAAAzT,EAAkB,iBAAiB,uBAAwB,GAC1F,CAEJ,CAEA,SAAS,GAAgBloB,EAAmB,CAAE,UAAAvJ,CAAU,EAA0B,CAEhF,MAAMwM,EADUjD,EAAM,QACiB,MAAMvJ,CAAS,EAChD,CAAE,cAAA+c,CAAc,EAAIvQ,EAE1B,MAAO,CACL,cAAAuQ,EACA,QAASvQ,EAAK,oBAAoB,KAAK,OAAS,EAClD,CACF,CAEA,MAAM,GAAqB,CACzB,WAAU,IACZ,EAEM,GAAa1L,IAA0B,CAC3C,yBAAuB,OAAI,CACzB,cAAeA,EAAM,QAAQ,CAAC,CAChC,CAAC,CACH,GAIA,MAFkB,YAAQ,GAAiB,EAAkB,EAEpCwjC,EAAqB,ECxHxCgB,MAAkB,OAAI,CAC1B,MAAO,uBACP,QAAS,OACT,cAAe,SACf,SAAU,QACV,OAAQ,MACV,CAAC,EAeD,SAASC,GAAgC,CAAE,UAAAvlC,CAAU,EAAU,CAC7DwlC,GAAexlC,CAAS,EACxB,MAAM6W,KAAW,UAAO,IAAI4uB,GAAA,CAAa,EACnC/5B,KAAM,UAAO,IAAI,EACjB,CAACm4B,EAAoBC,CAAqB,KAAI,YAAS,EAAK,EAElE,sBAAU,IAAM,CACd,MAAM4B,EAAM7uB,EAAS,QACrB,MAAO,IAAM6uB,EAAI,mBAAmB,CACtC,EAAG,CAAC,CAAC,KAGH,OAAC3zB,GAAA,EAAe,CAAC,kBAAiB,GAChC,oBAAC,OAAI,UAAWuzB,GAAiB,IAAA55B,EAAU,cAAa,MAAU,MAAM,QAAQ,QAAQ,UACtF,oBAAC,IACC,UAAA1L,EACA,SAAU6W,EAAS,QACnB,mBAAAgtB,EACA,sBAAAC,CAAA,CACF,EACCD,MACC,OAAC,IACC,UAAA7jC,EACA,QAAS,IAAM8jC,EAAsB,EAAK,EAC1C,YAAU,MAAY,EACxB,GAEJ,EACF,CAEJ,CAEA,SAAS,GAAgBv6B,EAAmBlE,EAAc,CAGxD,MAAO,CAAE,KAFIkE,EAAM,QAAQ,MAAMlE,EAAM,SAAS,CAElC,CAChB,CAIO,MAAMsgC,MAFK,YAAQ,EAAe,EAEKJ,EAA+B,EAE7E,SAASC,GAAexlC,EAAmB,CACzC,MAAM4lC,KAAe,WAAQ,OAAM,MAAuB5lC,CAAS,EAAG,CAACA,CAAS,CAAC,EAC3E6lC,KAAU,UAAwC,EACxDA,EAAQ,WAAU,eAAYD,CAAY,KAE1C,aAAU,IACD,IAAM,IACX,OAAeC,EAAQ,SAAS,iBAAiB,CACnD,EACC,CAAC,CAAC,CACP,C,sFCvFO,MAAMC,GAAyB,KAAO,CAC3C,KAAM,cACN,WAAY,2BACZ,SAAU,CAAC,EACX,KAAM,CAAC,kBAAmB,iBAAiB,EAC3C,QAAS,CACP,CACE,SAAU,CACR,KAAM,OACN,KAAM,YACR,EACA,YAAa,aACb,UAAW,2CACX,WAAY,CACd,EACA,CACE,SAAU,CACR,KAAM,OACN,KAAM,YACR,EACA,YAAa,aACb,UAAW,2CACX,WAAY,CACd,CACF,CACF,GCzBaC,GAAmB,KAAO,CACrC,KAAM,oBACN,WAAY,6BACZ,SAAU,CACR,gBAAiB,sBACjB,mBAAoB,CACtB,EACA,MAAO,CACL,CACE,KAAM,gBACN,WAAY,6BACZ,SAAU,CACR,KAAM,gBACN,aAAc,WACd,UAAW,UACX,IAAK,uCACL,gBAAiB,sBACjB,kBAAmB,uBACnB,YAAa,CAAE,wBAAyB,iBAAkB,CAC5D,EACA,KAAM,CACJ,MAAO,yBACP,QAAS,CACP,CACE,UAAW,CAAC,EACZ,WAAY,CACV,MAAO,IACP,WAAY,CACV,KAAM,gBACN,IAAK,aACP,EACA,MAAO,GACP,QAAS,CACP,CACE,GAAI,IACJ,KAAM,OACR,CACF,EACA,WAAY,CACV,CACE,MAAO,aACP,GAAI,IACJ,SAAU,CACR,SAAU,MACZ,EACA,KAAM,gBACR,CACF,EACA,UAAW,aACX,MAAO,YACT,CACF,CACF,CACF,CACF,EACA,CACE,KAAM,gBACN,WAAY,6BACZ,SAAU,CACR,KAAM,aACN,aAAc,QACd,UAAW,UACX,IAAK,uCACL,gBAAiB,sBACjB,kBAAmB,uBACnB,YAAa,CAAE,wBAAyB,iBAAkB,CAC5D,EACA,KAAM,CACJ,MAAO,sBACP,KAAM,CACJ,CACE,IAAK,UACL,cAAe,CAAC,EAAE,EAClB,oBAAqB,CACnB,aAAc,EAChB,CACF,CACF,EACA,QAAS,CACP,CACE,UAAW,CACT,QAAS,CACP,CACE,KAAM,4CACN,SAAU,CACR,MAAO,EACP,IAAK,EACP,EACA,OAAQ,KACV,EACA,CACE,KAAM,4CACN,SAAU,CACR,MAAO,EACP,IAAK,EACP,EACA,OAAQ,KACV,EACA,CACE,KAAM,4CACN,SAAU,CACR,MAAO,EACP,IAAK,EACP,EACA,OAAQ,KACV,CACF,CACF,EACA,WAAY,CACV,MAAO,IACP,WAAY,CACV,KAAM,OACN,IAAK,UACP,EACA,UAAW,QACX,WAAY,OACZ,KAAM,eACR,CACF,CACF,CACF,CACF,CACF,CACF,GCvHaC,GAAW,CACtB,IAAK,CACH,IAAK,MACL,SAAUD,GAAiB,CAC7B,EACA,gBAAiB,CACf,SAAUD,GAAuB,CACnC,CACF,ECEa,CACX,0BAAAG,GACA,4BAAAC,GACA,+BAAAC,GACA,6BAAAC,EACF,EAAI,KAEG,SAASC,IAAwB,CACtC,OAAOvkC,EAAA,EAAO,eAAe,YAC/B,CAEO,MAAMwkC,GAAoB,CAC/B,KAAMN,GAAS,GACjB,EAEaO,GAAuB,CAClC,KAAMP,GAAS,eACjB,EC1BO,SAASQ,GAAcC,EAAsC,CAClE,KAAM,CAAE,MAAArgC,CAAM,KAAIyO,GAAA,GAAS,SAAY,QAAM,MAAiB,EAAE,IAAI4xB,CAAa,EAAG,CAACA,CAAa,CAAC,EACnG,OAAOrgC,CACT,CCqBA,MAAMsgC,GAAoB,CACxB,CAAE,MAAO,SAAU,SAAO,KAAE,+BAAgC,QAAQ,CAAE,EACtE,CAAE,MAAO,UAAW,SAAO,KAAE,gCAAiC,SAAS,CAAE,CAC3E,EAEMC,GAAkBC,GACfA,KACH,KACE,wCACA,8HACF,KACA,KACE,yCACA,8HACF,EAGOC,GAAoB,CAAC,CAAE,SAAAroC,EAAU,OAAAF,EAAQ,WAAAwoC,EAAY,aAAAC,CAAa,IAAa,CAC1F,KAAM,CAAE,SAAA56B,EAAU,aAAA66B,CAAa,KAAI,OAAsB,CACvD,cAAe,CACb,YAAaD,GAAc,WAC7B,CACF,CAAC,EAEK,CAACE,CAAgB,EAAIf,GAA4B,EACjD,CAACgB,CAAiB,EAAId,GAA6B,EAEnDnE,EAAauE,GAAcM,GAAY,UAAU,EAGjDhqB,EACJgqB,IAAe,OAAY,CAACA,CAAU,EAAIC,GAAc,QAAU,OAAY,CAACA,GAAc,KAAK,EAAI,CAAC,EAEnGI,EAAyB,MAAOC,GAC7BH,EAAiBG,CAAuB,EAC5C,OAAO,EACP,KAAK,QACJ,OAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,aAAa,KAC7B,QAAS,IACP,KAAE,6CAA8C,kDAAkD,CACpG,CACF,CAAC,EACM,GACR,EACA,MAAM,QACL,OAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,WAAW,KAC3B,QAAS,IACP,KAAE,iDAAkD,mDAAmD,CACzG,CACF,CAAC,EACM,GACR,EAGCC,EAA0B,MAAOC,GAC9BJ,EAAkBI,CAAwB,EAC9C,OAAO,EACP,KAAK,QACJ,OAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,aAAa,KAC7B,QAAS,IAAC,KAAE,8CAA+C,oCAAoC,CAAC,CAClG,CAAC,EACM,GACR,EACA,MAAM,QACL,OAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,WAAW,KAC3B,QAAS,IAAC,KAAE,kDAAmD,qCAAqC,CAAC,CACvG,CAAC,EACM,GACR,EAGCC,EAAW,MAAOjY,GAAuB,CAC7C,MAAMkY,KAAY,OAAS,EAAE,YAAY,EACnCC,EACJnY,EAAK,gBAAe,KAAE,4CAA6C,SAAU,CAAE,UAAAkY,CAAqB,CAAC,EAEnGT,GAAc,IAChBM,EAAwB,CAAE,IAAKN,EAAa,IAAK,YAAa,CAAE,MAAOzX,EAAK,WAAY,CAAE,CAAC,EAAE,KAAMoY,GAAc,CAC/GppC,EAAOopC,CAAS,CAClB,CAAC,EACQZ,GACTK,EAAuB,CAAE,MAAOM,EAAuB,QAAS,CAACX,CAAU,CAAE,CAAC,EAAE,KAAMY,GAAc,CAClGppC,EAAOopC,CAAS,CAClB,CAAC,CAEL,EAEM,CAAE,MAAOC,CAAU,KAAI9yB,GAAA,GAAS,SAAY,CAChD,MAAM+yB,EAAW9qB,EAAQ,IAAI,MAAOvb,EAAOgB,KACtB,QAAM,MAAiB,EAAE,IAAIhB,EAAM,UAAU,IAC7C,sBAAsBA,CAAK,MAAK,OAAoBA,CAAK,CAC7E,EACD,OAAO,QAAQ,IAAIqmC,CAAQ,CAC7B,CAAC,EAED,SACE,QAAC,QAAK,SAAUZ,EAAaO,CAAQ,EACnC,oBAAC,KAAG,SAAAZ,GAAeI,IAAiB,MAAS,EAAE,EAC9CY,GACCA,EAAU,IAAI,CAACE,EAAatlC,OAC1B,OAAC2R,GAAA,EAAK,CAAoB,SAAO,KAAE,qCAAsC,OAAO,EAC9E,mBAAC4zB,GAAA,EAAQ,CAAC,SAAU,GAAM,MAAOD,CAAA,CAAa,GADpC,SAAStlC,CAAC,EAEtB,CACD,EACFukC,MACC,oBACE,oBAAC5yB,GAAA,EAAK,CAAC,SAAO,KAAE,gDAAiD,kBAAkB,EACjF,mBAAC,KAAgB,CAAC,QAAS+tB,GAAY,IAAK,SAAU,GAAM,EAC9D,KACA,OAAC/tB,GAAA,EAAK,CAAC,SAAO,KAAE,iDAAkD,kBAAkB,EAClF,mBAACK,GAAA,EAAK,CAAC,SAAU,GAAM,aAAc0tB,GAAY,KAAK,KAAM,EAC9D,GACF,KAEF,OAAC/tB,GAAA,EAAK,CAAC,SAAO,KAAE,2CAA4C,aAAa,EACvE,mBAACK,GAAA,EAAK,CAAC,GAAG,6BAA6B,UAAW,GAAO,GAAGpI,EAAS,aAAa,EAAG,EACvF,KACA,OAAC+H,GAAA,EAAK,CAAC,SAAO,KAAE,0CAA2C,YAAY,EACrE,mBAAC2lB,GAAA,EAAgB,CAAC,QAAS6M,GAAmB,MAAO,SAAU,SAAU,GAAM,EACjF,KACA,OAAC,MACC,UAAW,GACX,SAAU,GACV,SAAO,KACL,yCACA,2EACF,EACF,KACA,QAACjoC,GAAA,EAAM,UAAN,CACC,oBAACC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAAS,IAAMF,EAAS,EAAG,KAAK,UAC1D,mBAAC,KAAK,CAAC,QAAQ,+BAA+B,kBAAM,EACtD,KACA,OAACE,EAAA,GAAM,CAAC,QAAQ,UAAU,KAAK,SAC7B,mBAAC,KAAK,CAAC,QAAQ,6BAA6B,gBAAI,EAClD,GACF,GACF,CAEJ,E,gEC/JA,MAAMqpC,GAAW,4CAAkCjmC,EAAA,EAAO,SAAS,WAE5D,eAAekmC,GAAYtsB,EAA8C,CAE9E,OADiB,QAAM,OAAc,EAAE,IAAI,GAAGqsB,EAAQ,GAAGrsB,CAAG,EAAE,CAEhE,C,+DCJA,MAAM,GAAqB,CACzB,WAAU,KACV,iBAAgB,KAClB,EAEM,MAAY,YAAQ,OAAW,EAAkB,EAiBhD,SAASusB,GAAsB,CACpC,kBAAAC,EACA,QAAAprB,EACA,SAAAqrB,EAAW,GACX,QAAAvtB,EAAU,YACV,QAAAtI,EACA,iBAAA81B,EACA,WAAAC,CACF,EAAU,CACR,KAAM,CAACC,EAAoBC,CAAqB,KAAI,YAAS,EAAK,EAC5DC,KAAc,eAAY,IAAO,EACjCC,KAAkB,eAAY,IAAmB,EACjDC,KAAe,eAAY,IAAkB,EAE7CC,EAAwB,CAACzrB,EAAald,IAC1C,CAACyoC,EAAgB,YAAY,KAAMG,GAAOA,EAAG,WAAW,MAAQ1rB,CAAG,GAAG,WAAW,SAASld,CAAS,EAG/F6oC,EAAe,CAAC7oC,EAAmB8oC,IAEhCA,IAAU,QAAa9oC,IAAc,QAAa2oC,EAAsBG,EAAO9oC,CAAS,EAC3F,CACE,aAAc,mCACd,eAAa,MAAE,6CAA8C,kCAAkC,CACjG,EACA,CACE,aAAc,YACd,eAAa,MAAE,qCAAsC,WAAW,CAClE,EAGA+oC,EAAW,MAAO/oC,GAAsB,CAC5C,MAAMgpC,EAAsBL,EAAsBT,EAAoBloC,CAAS,EAC3EgpC,GACF,MAAMZ,EAAiB,CAAE,UAAApoC,EAAW,WAAYkoC,CAAmB,CAAC,EAEtEG,EAAWroC,EAAW8c,CAAO,KAE7B,MAAkB,oCAAqC,CACrD,oBAAqBhb,EAAA,EAAO,oBAC5B,oBAAAknC,CACF,CAAC,CACH,EAEMC,EAAY,IAAM,CACtB,MAAMC,EAAYf,GAAYrrB,EAAQ,SAAW,GAAKorB,IAAsB,OAC5E,GAAKM,EAgBE,CACL,MAAM1tB,KACJ,OAACC,GAAA,EAAI,CACF,SAAA2tB,EAAa,IAAI,CAACvoC,EAAMoC,IAAM,CAC7B,MAAM4mC,EAAaN,EAAa1oC,EAAK,CAAC,EAAG+nC,CAAiB,EACpDkB,EACJ7mC,IAAM,KAAI,MAAE,8BAA+B,WAAW,KAAI,MAAE,+BAAgC,YAAY,EAC1G,SACE,OAACwY,GAAA,EAAK,KAAL,CAEC,UAAWouB,EAAW,aACtB,QAAS,IAAM,CACbJ,EAAS5oC,EAAK,CAAC,CAAC,EAChBmS,IAAU,CACZ,EACA,MAAO,GAAG82B,CAAS,KAAKD,EAAW,WAAW,GAC9C,SAAUD,GAAa/oC,EAAK,CAAC,IAAM,QAP9BoC,CAQP,CAEJ,CAAC,EACH,EAGF,SACE,OAACyY,GAAA,EAAQ,CAAC,gBAAkBzR,GAAUg/B,EAAsBh/B,CAAK,EAAG,UAAU,eAAe,QAASuR,EACpG,mBAACvD,GAAA,EAAa,CAAC,aAAW,oBAAoB,QAAQ,SAAS,OAAQ+wB,EACpE,kBAAE,qCAAsC,WAAW,EACtD,EACF,CAEJ,KA9CkB,CAChB,MAAMtoC,EAAYyoC,EAAgB,YAAY,CAAC,GAAG,UAC5CU,EAAaN,EAAa7oC,EAAWkoC,CAAiB,EAC5D,SACE,OAACxpC,EAAA,IACC,QAAAkc,EACA,aAAYuuB,EAAW,YACvB,QAAS,IAAM,CACbJ,EAAS/oC,CAAS,EAClBsS,IAAU,CACZ,EACA,SAAU42B,GAAalpC,IAAc,OAEpC,SAAAmpC,EAAW,YACd,CAEJ,CA+BF,EAEA,SAAO,mBAAG,SAAAF,EAAU,EAAE,CACxB,CAEA,SAAe,GAAUhB,EAAqB,EChIjCoB,GAA4B,OAChC,MAAW,EAAS,EAGvB,GAAavoC,IAA0B,CAC3C,QAAM,OAAI,CACR,YAAaA,EAAM,QAAQ,CAAC,EAC5B,MAAO,MACT,CAAC,EACD,UAAQ,OAAI,CACV,OAAQ,EACR,SAAUA,EAAM,WAAW,GAAG,SAC9B,MAAOA,EAAM,OAAO,KAAK,SAC3B,CAAC,EACD,YAAU,OAAI,CACZ,OAAQ,EACR,SAAUA,EAAM,WAAW,KAAK,SAChC,aAAc,UAChB,CAAC,EACD,aAAW,OAAI,CACb,OAAQ,EACR,SAAUA,EAAM,WAAW,KAAK,SAChC,MAAOA,EAAM,OAAO,KAAK,UACzB,aAAc,UAChB,CAAC,EACD,cAAY,OAAI,CACd,QAAS,cACT,gBAAiB,WACjB,gBAAiB,EACjB,SAAU,QACZ,CAAC,EACD,QAAM,OAAI,CACR,QAAS,OACT,WAAY,SACZ,eAAgB,CACd,eAAgB,KAClB,CACF,CAAC,EACD,gBAAc,OAAI,CAChB,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,CACH,GCjBA,SAASwoC,GAAY,CAAE,cAAAC,EAAe,kBAAArB,EAAmB,SAAAsB,CAAS,EAAqB,CACrF,KAAM,CAACC,CAAmB,EAAItD,GAA+B,EACvD,CAACuD,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChD,CAAE,gBAAAnvB,CAAgB,EAAIN,GAAwB,EAC9C3a,EAAS8pC,GAA0B,EAEnCO,EAAiBJ,GAAqB,CAC1C,MAAMK,EAAiBL,GAAqB,CAC1CC,EAAoB,CAAE,IAAKD,CAAS,CAAC,KACrC,UAAS,UAAU,UAA0B,KAAE,sCAAuC,eAAe,CAAC,CAAC,CAAC,EACxG5vB,GAA4B,CAC9B,KAEA,OAAa,EAAE,QACb,IAAI,MAAsB,CACxB,SAAO,KAAE,2CAA4C,cAAc,EACnE,QAAM,KACJ,0CACA,kHACF,EACA,WAAS,KAAE,oCAAqC,cAAc,EAC9D,KAAM,YACN,UAAW,IAAMiwB,EAAcL,CAAQ,CACzC,CAAC,CACH,CACF,EAEA,SACE,QAAC,OAAI,UAAWjqC,EAAO,KACrB,oBAAC4W,GAAA,GACC,UAAW5W,EAAO,aAClB,KAAK,KACL,KAAK,YACL,SAAO,KAAE,qCAAsC,cAAc,EAC7D,WAAS,KAAE,qCAAsC,cAAc,EAC/D,QAAS,IAAM,CACTiqC,GACFI,EAAcJ,CAAQ,CAE1B,EACF,KACA,OAACrzB,GAAA,GACC,UAAW5W,EAAO,aAClB,KAAK,KACL,KAAK,cACL,SAAO,KAAE,6CAA8C,sBAAsB,EAC7E,WAAS,KAAE,6CAA8C,sBAAsB,EAC/E,QAAS,IAAM,CACboqC,EAAgB,EAAI,EACpB7vB,GAAsC,CACxC,EACF,KACA,OAAC,IACC,QAASyvB,EAAc,MAAQ,CAACA,EAAc,KAAK,EAAI,CAAC,EACxD,kBAAArB,EACA,QAAQ,UACR,QAAS,IAAM,CACb1tB,EAAgB,EAAK,EACrBX,GAA0B0vB,EAAc,gBAAkB,EAAE,CAC9D,EACF,KACA,OAAC9qC,GAAA,GACC,SAAO,KAAE,0CAA2C,YAAY,EAChE,OAAQirC,EACR,UAAW,IAAMC,EAAgB,EAAK,EAEtC,mBAAC9C,GAAA,CACC,SAAU,IAAM8C,EAAgB,EAAK,EACrC,aAAcJ,EACd,OAAQ,IAAM,CACZI,EAAgB,EAAK,CACvB,EACF,EACF,GACF,CAEJ,CAEA,SAAeL,G,gBCnGR,SAASQ,GAAYzkC,EAAyB,CACnD,MAAM9F,EAAS8pC,GAA0B,EAEzC,SACE,QAAC,OACC,oBAAC,QAAK,UAAW9pC,EAAO,KACtB,mBAACwqC,GAAA,EAAM,CAAC,IAAK1kC,EAAM,MAAM,WAAa,qCAAsC,IAAI,SAAU,GAC5F,KACA,OAAC,QAAK,UAAW9F,EAAO,UAAY,SAAA8F,EAAM,MAAM,aAAe,UAAU,GAC3E,CAEJ,CCZO,SAAS2kC,GAAmB3kC,EAAoC,CACrE,MAAM4kC,EAAgBzD,GAAcnhC,EAAM,IAAI,SAAS,aAAa,EAC9D9F,EAAS8pC,GAA0B,EAEzC,SAAO,OAAC,KAAE,UAAW9pC,EAAO,UAAY,SAAA0qC,GAAe,KAAK,KAAK,CACnE,CCLO,SAASC,GAAc7kC,EAAoC,CAChE,MAAM9F,EAAS8pC,GAA0B,EACnCc,KAAgB,OAAS9kC,EAAM,IAAI,SAAS,kBAAkB,EAAE,OAAO,qBAAqB,EAElG,SAAO,OAAC,KAAE,UAAW9F,EAAO,UAAY,SAAA4qC,CAAA,CAAc,CACxD,CCDO,SAASC,GAAqB/kC,EAAoC,CACvE,MAAM4kC,EAAgBzD,GAAcnhC,EAAM,IAAI,SAAS,aAAa,EAC9DglC,EAAyBhB,GAA0B,EACnD9pC,KAAS,MAAW,EAAS,EAEnC,GAAI,CAAC0qC,EACH,SAAO,OAAC3hB,GAAA,EAAO,EAAC,EAGlB,GAAI,CAACjjB,EAAM,IAAI,SAAS,MACtB,SAAO,OAAC,OAAI,sBAAU,EAExB,MAAMilC,EAAmBjlC,EAAM,IAAI,SAAS,UACtCqQ,EAAcrQ,EAAM,IAAI,SAAS,YACjCklC,EAASllC,EAAM,IAAI,SAAS,eAElC,SACE,QAAC,OAAI,UAAW9F,EAAO,UAAW,aAAY,sBAAsBgrC,CAAM,KAAK70B,CAAW,GACxF,qBAAC,KAAE,UAAW20B,EAAuB,OACnC,oBAAC,OACC,UAAWA,EAAuB,KAClC,IAAKJ,GAAe,KAAK,KAAK,MAAM,OAAS,gCAC7C,IAAKA,GAAe,KAAK,KAAK,YAChC,EACCM,CAAA,EACH,KACA,OAAC3pC,GAAA,EAAO,CAAC,QAAS0pC,GAAoB,GAAI,UAAU,eAClD,mBAAC,KAAE,aAAW,MAAGD,EAAuB,SAAUA,EAAuB,WAAY9qC,EAAO,gBAAgB,EACzG,SAAA+qC,CAAA,CACH,EACF,KACA,OAAC,KAAE,aAAW,MAAGD,EAAuB,UAAWA,EAAuB,UAAU,EAAI,SAAA30B,CAAA,CAAY,GACtG,CAEJ,CAEA,MAAM,GAAa5U,IAA0B,CAC3C,aAAW,OAAI,CACb,SAAUA,EAAM,QAAQ,EAAE,CAC5B,CAAC,EACD,oBAAkB,OAAI,CACpB,gBAAiBA,EAAM,OAAO,WAAW,MAC3C,CAAC,CACH,GCnCM0pC,GAA2C,CAC/C,CAAE,GAAI,cAAe,OAAQ,wBAAyB,KAAMJ,EAAqB,EACjF,CAAE,GAAI,UAAW,OAAQ,WAAY,KAAM,CAAC,CAAE,IAAK,CAAE,SAAA5iC,CAAS,CAAE,OAAM,OAACsiC,GAAW,CAAC,KAAMtiC,EAAS,KAAM,CAAG,EAC3G,CAAE,GAAI,iBAAkB,OAAQ,kBAAmB,KAAMwiC,GAAoB,SAAU,QAAS,EAChG,CAAE,GAAI,qBAAsB,OAAQ,aAAc,KAAME,GAAe,SAVvB,CAACO,EAAMC,EAAMr0B,EAAGs0B,IAAS,CACzE,MAAMC,EAAQH,EAAK,SAAS,oBAAsB,EAC5CI,EAAQH,EAAK,SAAS,oBAAsB,EAClD,OAAOC,EAAOC,EAAQC,EAAQA,EAAQD,CACxC,CAMiG,EAC/F,CACE,GAAI,UACJ,OAAQ,GACR,KAAM,CAAC,CAAE,IAAK,CAAE,SAAApjC,CAAS,CAAE,OACzB,OAAC,GAAW,CAAC,cAAeA,EAAU,kBAAmBA,EAAS,eAAe,IAAK,SAAUA,EAAS,IAAK,CAElH,CACF,EAMe,SAASsjC,GAAoB,CAAE,kBAAAC,CAAkB,EAAU,CACxE,MAAMxrC,KAAS,MAAW,EAAS,EACnC,SACE,OAACyrC,GAAA,GACC,QAAAR,GACA,KAAMO,EACN,SAAWhqB,GAA2BA,EAAI,MAC1C,SAAU,GACV,UAAWxhB,EAAO,MACpB,CAEJ,CAEA,MAAM,GAAauB,IAA0B,CAC3C,SAAO,OAAI,CACT,WAAY,CACV,SAAU,WACV,gBAAiBA,EAAM,OAAO,WAAW,UACzC,eAAgB,WAChB,aAAc,QACd,SAAU,QACZ,EAEA,kBAAmB,CACjB,QAAS,KACT,SAAU,WACV,MAAO,aACP,OAAQA,EAAM,QAAQ,EAAG,EACzB,gBAAiBA,EAAM,OAAO,WAAW,OAC3C,CACF,CAAC,CACH,GClEamqC,GAAqB,CAChCC,EACA3pC,EACA4pC,EACAC,IAEeF,EAAa,OAAQ1+B,GAAS,CAC3C,MAAM6+B,EACJF,EAAU,SAAW,GAAKA,EAAU,KAAMje,GAAM1gB,EAAK,gBAAgB,YAAY,EAAE,SAAS0gB,EAAE,YAAY,CAAC,CAAC,EACxGoe,EACJF,EAAgB,SAAW,GAAKA,EAAgB,SAAS5+B,EAAK,MAAM,aAAe,EAAE,EACvF,OACGA,EAAK,gBAAgB,YAAY,EAAE,SAASjL,EAAM,YAAY,CAAC,GAC9DiL,EAAK,gBAAgB,YAAY,EAAE,SAASjL,EAAM,YAAY,CAAC,GAC/DiL,EAAK,aAAa,YAAY,EAAE,SAASjL,EAAM,YAAY,CAAC,GAC5DiL,EAAK,WAAW,YAAY,EAAE,SAASjL,EAAM,YAAY,CAAC,IAC5D8pC,GACAC,CAEJ,CAAC,ECEI,SAASC,GAAmBlmC,EAAgC,CACjE,KAAM,CAAE,KAAAiqB,EAAM,UAAAkc,EAAW,MAAAnb,CAAM,EAAI4V,GAA0B,EACvD,CAACwF,EAAaC,CAAc,KAAI,YAAS,EAAE,EAC3C,CAACC,EAAmBC,CAAoB,KAAI,YAChDvmC,EAAM,mBAAmB,IAAKq1B,IAAQ,CAAE,MAAOA,EAAI,MAAOA,CAAG,EAAE,GAAK,CAAC,CACvE,EACM,CAACmR,EAAUC,CAAW,KAAI,YAAmB,CAAC,CAAC,EAC/C,CAACC,EAAaC,CAAc,KAAI,YAAyC,CAAC,CAAC,EAE3E,CAACC,EAAsBC,CAAuB,KAAI,YAA6B,CAAC,CAAC,EACjF,CAACC,EAAeC,CAAgB,KAAI,YAAS,EAAI,EACjD7sC,KAAS,MAAW,EAAS,KAEnC,aAAU,IAAM,CACd,IAAI8sC,EAAe,GAgFnB,OA9EkB,SAAY,CAC5B,GAAI,CAAC/c,EAAM,CACT8c,EAAiB,EAAK,EACtB,MACF,CAEA,IAAIE,EAEJ,MAAMC,KADa,YAAK,YAAQjd,EAAK,IAAKkd,GAAOA,EAAG,MAAM,GAAG,CAAC,CAAC,EACjC,IAAKC,GAAY,OAAO,mBAAmBA,CAAO,CAAC,EAAE,EAAE,KAAK,GAAG,EAC7F,GAAI,CACFH,EAAe,MAAMtE,GAAY,IAAIuE,CAAU,EAAE,CACnD,OAASlc,EAAO,IACd,OAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,WAAW,KAC3B,QAAS,IACP,KAAE,oCAAqC,gEAAiE,CACtG,MAAO,KAAK,UAAUA,CAAK,CAC7B,CAAC,CACH,CACF,CAAC,EACD+b,EAAiB,EAAK,EACtB,MACF,CAEAN,EAAYQ,EAAa,QAAQ,IAAKI,GAASA,EAAK,WAAW,CAAC,EAEhE,MAAMC,EAAerd,EAAK,IAAI,MAAOia,EAA8BplC,IAAkB,CACnF,GAAI,CACF,MAAMyoC,EAAgBrD,EAAc,QAAQ,CAAC,GAAG,WAC1CU,GAAgB,QAAM,MAAiB,EAAE,IAAI2C,CAAa,EAC1DnzB,MAAiB,OAAiB,EAAE,oBAAoBmzB,CAAa,GAAG,KAAK,MAAQ,GACrFrrC,EAAQgoC,EAAc,QAAQ,CAAC,EAC/B5B,KAAY,OAAgBpmC,EAAO0oC,EAAa,EAChD4C,EAAiB5C,IAAe,MAAQ,GACxC6C,EAAmBR,EAAa,QAAQ,KAC3CI,GAAS,GAAGA,GAAM,SAAS,IAAI,IAAIA,GAAM,SAAS,IAAI,KAAOnD,EAAc,MAAM,GACpF,EAEA,MAAO,CACL,MAAOplC,EAAM,SAAS,EACtB,IAAKolC,EAAc,IACnB,eAAAsD,EACA,cAAAD,EACA,eAAAnzB,GACA,mBAAoB8vB,GAAe,oBAAsB,EACzD,MAAAhoC,EACA,UAAAomC,EACA,YAAa4B,EAAc,MAC3B,KAAM,CACJ,IAAKA,EAAc,MAAM,KAAO,GAChC,YAAauD,GAAkB,aAAe,GAC9C,UAAWA,GAAkB,WAAa,EAC5C,CACF,CACF,OAASzc,EAAO,CACd,gBAAa,EAAE,QAAQ,CACrB,KAAM,MAAU,WAAW,KAC3B,QAAS,IACP,KACE,yCACA,qEACA,CAAE,MAAO,KAAK,UAAUA,CAAK,CAAE,CACjC,CACF,CACF,CAAC,EACM,CAAE,MAAOlsB,EAAM,SAAS,EAAG,MAAAksB,CAAM,CAC1C,CACF,CAAC,EAGKhP,GADU,MAAM,QAAQ,WAAWsrB,CAAY,GAChC,OAAQ5hB,GAAWA,EAAO,SAAW,WAAW,EAAE,IAAKA,GAAWA,EAAO,KAAK,EAE/FshB,IACFH,EAAwB7qB,CAAI,EAC5B+qB,EAAiB,EAAK,EAE1B,GAEU,EAEH,IAAM,CACXC,EAAe,EACjB,CACF,EAAG,CAAC/c,CAAI,CAAC,EAET,MAAMyb,KAAoB,WACxB,IACEE,GACEgB,EACAR,EACAE,EAAkB,IAAKze,GAAMA,EAAE,OAAS,EAAE,EAC1C6e,EAAY,IAAK7e,GAAMA,EAAE,OAAS,EAAE,CACtC,EACF,CAAC+e,EAAsBR,EAAaE,EAAmBI,CAAW,CACpE,EAEMgB,KAAkB,WAAQ,OACvB,WAAOd,EAAsB,gBAAgB,EAAE,IAAKlrB,GAAQA,EAAI,cAAc,EACpF,CAACkrB,CAAoB,CAAC,EAEzB,OAAI5b,KAEA,OAAC2c,GAAA,EAAU,CAAC,QAAQ,YAAY,QAAS,uBACtC,SAAA3c,EAAM,QACT,EAIAmb,GAAaW,KACR,OAAC7jB,GAAA,EAAO,EAAC,EAGd,CAACgH,GAAQA,EAAK,SAAW,KAEzB,OAAC0d,GAAA,EAAU,CAAC,QAAS,gBAAiB,QAAQ,YAC5C,mBAAC,KAEG,wHAEJ,EACF,KAKF,oBACE,qBAACrsC,GAAA,EAAK,CAAC,IAAK,GACV,oBAACssC,GAAA,GACC,UAAW1tC,EAAO,YAClB,eAAa,KAAE,uBAAwB,qDAAqD,EAC5F,gBAAY,KAAE,uBAAwB,qDAAqD,EAC3F,MAAOksC,EACP,SAAWlqC,GAAUmqC,EAAenqC,CAAK,EACzC,YAAa,GACf,KACA,OAAC2rC,GAAA,EAAW,CAAC,UAAW3tC,EAAO,MAAO,MAAM,OAC1C,mBAAC,KAAK,CAAC,QAAQ,iCAAiC,+BAAmB,EACrE,KACA,OAAC,OACC,UAAWA,EAAO,YAClB,SAAU,CAAC+2B,EAAO6W,IAAe,CAC/BvB,EAAqBtV,CAAK,EAC1B6W,EAAW,SAAW,iBAAmBpzB,GAAkC,CAC7E,EACA,MAAO4xB,EACP,QAASoB,EAAgB,IAAKrlB,IACrB,CAAE,MAAOA,EAAG,MAAOA,CAAE,EAC7B,EACD,YAAa,qCACb,aAAY,qCACd,KACA,OAACwlB,GAAA,EAAW,CAAC,UAAW3tC,EAAO,MAAO,MAAM,OAC1C,mBAAC,KAAK,CAAC,QAAQ,2BAA2B,yBAAa,EACzD,KACA,OAAC,OACC,UAAWA,EAAO,YAClB,SAAU,CAAC+2B,EAAO6W,IAAe,CAC/BnB,EAAe1V,CAAK,EACpB6W,EAAW,SAAW,iBAAmBpzB,GAAkC,CAC7E,EACA,MAAOgyB,EACP,QAASF,EAAS,IAAKnkB,IACd,CAAE,MAAOA,EAAG,MAAOA,CAAE,EAC7B,EACD,YAAa,kCACb,aAAY,kCACd,GACF,KACA,OAACojB,GAAmB,CAAC,kBAAAC,CAAA,CAAsC,GAC7D,CAEJ,CAEA,MAAM,GAAajqC,IAA0B,CAC3C,eAAa,OAAI,CACf,SAAUA,EAAM,QAAQ,EAAE,CAC5B,CAAC,EACD,eAAa,OAAI,CACf,SAAUA,EAAM,QAAQ,EAAE,CAC5B,CAAC,EACD,SAAO,OAAI,CACT,WAAYA,EAAM,QAAQ,CAAC,EAC3B,OAAQ,aAAaA,EAAM,OAAO,UAAU,MAAM,EACpD,CAAC,CACH,GCvNO,SAASssC,GAAa,CAAE,kBAAAC,CAAkB,EAAsB,CACrE,SAAO,OAAC9B,GAAkB,CAAC,kBAAA8B,CAAA,CAAsC,CACnE,C,4BCOO,MAAMC,GAA0B,CAAC,CAAE,MAAA/rC,CAAM,IAAa,CAC3D,KAAM,CAAC4Z,EAAQC,CAAS,KAAI,YAAS,EAAK,EACpC,CAACmyB,EAAcC,CAAe,KAAI,YAAS,EAAK,EAEhDC,KAAc,MAAE,2CAA4C,gBAAgB,EAElF,OAAOpH,GAAsB,GAAK,CAACkH,KACjC,oBACE,oBAAC7uC,EAAA,IACC,QAAQ,YACR,aAAY+uC,EACZ,QAAS,IAAM,CACbryB,EAAU,EAAI,EACd1B,GAAkD,CACpD,EAEC,SAAA+zB,CAAA,CACH,KACA,OAAChvC,GAAA,GACC,SAAO,MAAE,yCAA0C,4BAA4B,EAC/E,OAAA0c,EACA,UAAW,IAAMC,EAAU,EAAK,EAEhC,mBAACyrB,GAAA,CACC,SAAU,IAAMzrB,EAAU,IAAM,EAAK,EACrC,WAAY7Z,EACZ,OAASmmC,GAAc,CACjBA,IACFtsB,EAAU,EAAK,EACfoyB,EAAgB,EAAI,EACpBh0B,GAAqCjY,EAAM,YAAY,MAAQ,EAAE,EAErE,EACF,EACF,GACF,EACE,MACN,EC5BM,GAAqB,CACzB,iBAAgB,MAChB,kBAAiB,MACjB,mBAAkB,MAClB,gBAAe,MACf,WAAU,IACZ,EAEM,MAAY,YAAQ,OAAW,EAAkB,EASjD,GAAaT,GAAyB,CAE1C,MAAM4sC,EAAmB,QACnBC,EAA0B,QAG1BC,EAAY9sC,EAAM,OAAO,WAAW,UAE1C,MAAO,CACL,aAAW;AAAA;AAAA;AAAA;AAAA,0BAIWA,EAAM,OAAO,OAAO,IAAI;AAAA,gBAClCA,EAAM,QAAQ,CAAC,CAAC;AAAA,0BACN8sC,CAAS;AAAA,uBACZ9sC,EAAM,MAAM,OAAO,OAAO;AAAA;AAAA,iBAEhCA,EAAM,GAAG,QAAQ,MAAM;AAAA;AAAA,MAGpC,WAAS;AAAA;AAAA;AAAA;AAAA,iBAIIA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,mCAGEA,EAAM,OAAO,OAAO,IAAI;AAAA,mBACxCA,EAAM,QAAQ,GAAK,CAAC,CAAC;AAAA;AAAA;AAAA,kBAGtBA,EAAM,WAAW,QAAQ;AAAA,qBACtBA,EAAM,WAAW,QAAQ;AAAA,wBACtBA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGpC,sBAAoB;AAAA,mBACL6sC,CAAuB;AAAA;AAAA;AAAA,mBAGvB7sC,EAAM,WAAW,KAAK,IAAI;AAAA;AAAA,uBAEtBA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGnC,kBAAgB;AAAA,qBACCA,EAAM,WAAW,gBAAgB;AAAA,2BAC3B4sC,CAAgB;AAAA,MAEvC,0BAAwB;AAAA,2BACDA,CAAgB;AAAA,oBACvB5sC,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEhC,WAAS;AAAA;AAAA,mBAEMA,EAAM,WAAW,UAAU,QAAQ;AAAA,qBACjCA,EAAM,WAAW,iBAAiB;AAAA,oBACnCA,EAAM,QAAQ,EAAG,CAAC;AAAA,MAElC,oBAAkB;AAAA;AAAA,sBAEAA,EAAM,QAAQ,CAAC,CAAC;AAAA,wBACdA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGpC,YAAU;AAAA;AAAA,MAGV,aAAW;AAAA,mBACI6sC,CAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKvB7sC,EAAM,QAAQ,GAAK,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpC,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOcA,EAAM,OAAO,WAAW,SAAS;AAAA,KAEzD,CACF,EAEO,SAAS+sC,GAAgBxoC,EAAc,CAC5C,KAAM,CAAE,iBAAAyoC,EAAkB,mBAAAC,EAAoB,gBAAAC,EAAiB,kBAAAC,EAAmB,oBAAAC,CAAoB,EAAI7oC,EAEpG,CAAC8oC,EAAqBC,CAAsB,KAAI,YAAS,EAAK,EAC9D,CAACC,EAASC,CAAU,KAAI,YAA6BR,EAAiB,OAAO,EAC7EvuC,KAAS,MAAW,EAAS,EAE7BgvC,EAAqBL,EACvBA,EAAoB,KAAMtF,GAAOA,EAAG,MAAQkF,EAAiB,aAAa,EAC1E,OAEEU,EAAc,SAAY,CAC9B,MAAMC,EAAc,CAAC,GAAGX,EAAiB,QAAQ,IAAKvsC,GAAUA,EAAM,YAAY,MAAQ,SAAS,CAAC,KACpG,MAAkB,2CAA4C,CAC5D,YAAAktC,EACA,MAAO,EAAQF,GAAoB,KAAK,KAC1C,CAAC,EAED,MAAMG,EAAcZ,EAAiB,QAClC,IAAKvsC,GAAU,CACd,IAAIotC,EAAUT,GAAqB,KAAMtF,GAAOA,EAAG,MAAQkF,EAAiB,aAAa,EACzF,OAAIa,GAAS,KAAK,QAChBA,EAAUT,GAAqB,KAAMtF,GAAOA,EAAG,MAAQrnC,EAAM,YAAY,GAAG,MAEvE,OAAgBA,EAAOotC,CAAO,CACvC,CAAC,EACA,KAAK;AAAA,CAAI,KAEZ,OAAsBD,CAAW,KACjC,UACE,UACE,UAA0B,KAAE,iDAAkD,2BAA2B,CAAC,CAC5G,CACF,CACF,EAEME,EAAoB,SAAY,CACpC,MAAMC,KAAO,OAAyBf,CAAgB,EACtD,QAAM,OAAuBe,CAAI,CACnC,EAEMjF,EAAgB,IAAM,CAC1B,MAAMC,EAAiBiF,GAAoB,CACzCb,EAAkBa,CAAO,KACzB,UACE,UAAU,UAA0B,KAAE,kDAAmD,eAAe,CAAC,CAAC,CAC5G,KACA,MAAkB,wCAAyC,CACzD,oBAAqBhtC,EAAA,EAAO,mBAC9B,CAAC,CACH,EAGIgsC,EAAiB,WACnB,OAAa,EAAE,QACb,IAAI,MAAsB,CACxB,SAAO,KAAE,4DAA6D,QAAQ,EAC9E,QAAM,KACJ,mEACA,iEACF,EACA,WAAS,KAAE,2CAA4C,QAAQ,EAC/D,KAAM,YACN,UAAW,IAAMjE,EAAciE,EAAiB,EAAE,CACpD,CAAC,CACH,EAEAjE,EAAciE,EAAiB,EAAE,CAErC,EAEMiB,EAAc,IAAM,CACxBf,EAAgBF,EAAiB,GAAI,CAACA,EAAiB,OAAO,KAC9D,MAAkB,wCAAyC,CACzD,oBAAqBhsC,EAAA,EAAO,oBAC5B,SAAU,CAACgsC,EAAiB,OAC9B,CAAC,CACH,EAEMkB,EAA4B,IAAMZ,EAAuB,CAACD,CAAmB,EAE7Ec,EAAkB,IAAM,CAC5BlB,EAAmBD,EAAiB,GAAIO,CAAO,EAC/CD,EAAuB,EAAK,KAC5B,MAAkB,0CAA2C,CAC3D,oBAAqBtsC,EAAA,EAAO,mBAC9B,CAAC,CACH,EAEMotC,EAAwB,IAAM,CAClCd,EAAuB,EAAK,EAC5BE,EAAWR,EAAiB,OAAO,CACrC,EAEMqB,EAAaC,GAAkC,CAC/CA,EAAS,MAAQ,UAAYA,EAAS,UAAYA,EAAS,UAC7DH,EAAgB,EAGdG,EAAS,MAAQ,UACnBF,EAAsB,CAE1B,EAEMG,KACJ,QAAC,OACC,UAAW9vC,EAAO,uBAClB,aACE8uC,KACI,KAAE,gDAAiD,qBAAqB,KACxE,KAAE,6CAA8C,kBAAkB,EAGxE,oBAACvG,GAAA,GACC,UAAAqH,EACA,MAAOd,EACP,YACEA,EACI,UACA,KAAE,iDAAkD,iDAAiD,EAE3G,SAAWtrC,GAAMurC,EAAWvrC,EAAE,cAAc,KAAK,EACjD,UAAWxD,EAAO,SACpB,KACA,QAAC,OAAI,UAAWA,EAAO,iBACrB,oBAACb,EAAA,GAAM,CAAC,QAASuwC,EACf,mBAAC,KAAK,CAAC,QAAQ,yCAAyC,wBAAY,EACtE,KACA,OAACvwC,EAAA,GAAM,CAAC,QAAQ,YAAY,QAASwwC,EACnC,mBAAC,KAAK,CAAC,QAAQ,mCAAmC,kBAAM,EAC1D,GACF,GACF,EAGII,KACJ,QAAC,OAAI,UAAW/vC,EAAO,mBACrB,oBAAC4W,GAAA,GACC,KAAK,cACL,QAAS64B,EACT,QACElB,EAAiB,SAAS,OAAS,KAC/B,KAAE,iDAAkD,cAAc,KAClE,KAAE,gDAAiD,aAAa,EAExE,KACA,OAAC33B,GAAA,GACC,KAAK,OACL,QAASq4B,EACT,WAAS,KAAE,+CAAgD,yBAAyB,EACtF,EACCD,MACC,OAACp4B,GAAA,GACC,KAAK,YACL,QAASy4B,EACT,WACE,OAAC,KAAK,CAAC,QAAQ,wDAAwD,4CAEvE,EAEJ,KAEF,OAACz4B,GAAA,GACC,KAAK,YACL,SAAO,KAAE,+CAAgD,cAAc,EACvE,WAAS,KAAE,iDAAkD,cAAc,EAC3E,QAASyzB,CAAA,CACX,KACA,OAACzzB,GAAA,GACC,KAAM23B,EAAiB,QAAU,WAAa,OAC9C,SAAUA,EAAiB,QAAU,OAAS,UAC9C,QAASiB,EACT,QACEjB,EAAiB,WACb,KAAE,iDAAkD,cAAc,KAClE,KAAE,+CAAgD,YAAY,EAEtE,GACF,EAGF,SACE,QAAC,OAAI,UAAWvuC,EAAO,UACrB,qBAAC,OAAI,UAAWA,EAAO,QACrB,oBAACgwC,GAAA,CAAe,MAAOhB,EAAoB,KAAK,IAAK,GAEpDe,CAAA,EACH,KACA,QAAC,OAAI,aAAW,MAAG/vC,EAAO,OAAO,EAC/B,qBAAC,OAAI,UAAWA,EAAO,eACpB,UAAAuuC,GAAkB,QAAQ,IAAI,CAAC1S,EAAG74B,IAAM,CACvC,MAAMitC,EAAUtB,GAAqB,KAAMxT,GAAOA,EAAG,MAAQU,EAAE,YAAY,GAAG,EAC9E,SACE,OAACqU,GAAA,CACC,MAAO,CAAE,MAAOrU,EAAG,WAAYoU,CAAQ,EAEvC,WAAYjB,GAAoB,KAAK,OADhC,GAAGnT,CAAC,IAAI74B,CAAC,EAEhB,CAEJ,CAAC,EACA,CAAC4rC,GAAuBL,EAAiB,YACxC,OAAC,OACC,gBAAY,KAAE,gDAAiD,eAAe,EAC9E,UAAWvuC,EAAO,QAEjB,SAAAuuC,EAAiB,QACpB,EAEDK,GAAuBkB,CAAA,EAC1B,EACC,CAAClB,MAAuB,OAACb,GAAuB,CAAC,MAAOQ,GAAkB,QAAQ,CAAC,EAAG,EACtF,CAACK,MACA,OAAC,OAAI,UAAW5uC,EAAO,UACrB,mBAAC,GAAqB,CAAC,QAASuuC,EAAiB,QAAS,kBAAmBS,GAAoB,IAAK,EACxG,GAEJ,GACF,CAEJ,CAEA,MAAMmB,GAAkB5uC,IAA0B,CAChD,YAAU;AAAA,4BACgBA,EAAM,OAAO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASlD,mBAAiB;AAAA;AAAA;AAAA,IAIjB,aAAW;AAAA;AAAA,GAGb,GAWM2uC,GAAQ,CAAC,CAAE,MAAAluC,EAAO,WAAAouC,EAAa,EAAM,IAAkB,CAC3D,MAAMpwC,KAAS,MAAWmwC,EAAc,EAExC,SACE,QAAC,OAAI,UAAWnwC,EAAO,SACpB,UAAAowC,MACC,QAAC,OAAI,UAAWpwC,EAAO,gBACrB,oBAACgwC,GAAA,CAAe,MAAOhuC,EAAM,WAAY,KAAK,IAAK,GAClD,MACH,KAEF,OAAC,QAAK,gBAAY,KAAE,6CAA8C,YAAY,EAAG,UAAWhC,EAAO,UAChG,mBAAgBgC,EAAM,MAAOA,EAAM,UAAU,EAChD,GACF,CAEJ,EAEMquC,GAAmBvsC,GAAuBvC,MAAyB;AAAA;AAAA;AAAA,eAG1DA,EAAM,WAAWuC,IAAS,KAAO,YAAc,MAAM,EAAE,QAAQ;AAAA,iBAC7DvC,EAAM,WAAW,gBAAgB;AAAA;AAAA,EAIlD,SAASyuC,GAAe,CAAE,MAAAM,EAAO,KAAAxsC,CAAK,EAAiD,CACrF,MAAM7D,KAAY,eAAasB,GAAyB8uC,GAAgBvsC,CAAI,EAAEvC,CAAK,EAAG,CAACuC,CAAI,CAAC,EACtF9D,KAAS,MAAWC,CAAS,EAEnC,SACE,QAAC,OAAI,UAAWD,EACd,oBAAC,OACC,IAAKswC,GAAO,KAAK,KAAK,MAAM,OAAS,gCACrC,IAAKA,GAAO,SAAQ,KAAE,iDAAkD,oCAAoC,EAC5G,gBAAY,KAAE,kDAAmD,kBAAkB,EACrF,KACA,OAAC,OAAI,gBAAY,KAAE,kDAAmD,kBAAkB,EACrF,SAAAA,GAAO,SAAQ,KAAE,iDAAkD,oCAAoC,EAC1G,GACF,CAEJ,CAEA,SAAe,GAAUhC,EAAe,EC7YlC,GAAY,CAAC/sC,EAAsBgF,KAChC,CACL,aAAW;AAAA;AAAA,MAGX,eAAa;AAAA,mBACEhF,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,sBAEhCA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,uBAGfA,EAAM,WAAW,gBAAgB;AAAA,yBAC/BA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,MAGrC,oBAAkB;AAAA;AAAA;AAAA,MAIlB,mBAAiB;AAAA;AAAA,sBAECA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAElC,eAAa;AAAA;AAAA,MAGb,UAAQ;AAAA;AAAA,gBAEIgF,EAAS,GAAG;AAAA;AAAA,iBAEXhF,EAAM,QAAQ,CAAC,CAAC;AAAA,MAE7B,aAAW;AAAA;AAAA;AAAA;AAAA,MAKX,eAAa;AAAA,uBACMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,eAAa;AAAA;AAAA,uBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,QAAM;AAAA;AAAA,MAGN,eAAa;AAAA;AAAA;AAAA;AAAA,oBAIGA,EAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,MAKhC,WAAS;AAAA,mBACMA,EAAM,WAAW,GAAG,QAAQ;AAAA,gBAC/BA,EAAM,QAAQ,EAAG,IAAM,EAAG,GAAI,CAAC;AAAA,MAE3C,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKSA,EAAM,WAAW,eAAe;AAAA,mBAClCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,uBAE/BA,EAAM,WAAW,gBAAgB;AAAA,uBACjCA,EAAM,QAAQ,GAAI,CAAC;AAAA;AAAA,MAGtC,WAAS;AAAA,mBACMA,EAAM,WAAW,UAAU,QAAQ;AAAA,qBACjCA,EAAM,WAAW,iBAAiB;AAAA,qBAClCA,EAAM,QAAQ,EAAG,CAAC;AAAA,KAErC,GAGK,SAASgvC,GAAsBzqC,EAAmC,CACvE,KAAM,CACJ,QAAAyX,EACA,aAAAizB,EACA,QAAAjyB,EACA,yBAAAkyB,EACA,cAAAC,EACA,wBAAAC,EACA,oBAAAC,EACA,oBAAAC,EACA,OAAAtqC,EACA,kBAAAuqC,EACA,kBAAAhD,CACF,EAAIhoC,EAEE9F,KAAS,MAAW,GAAWuG,CAAM,KAG3C,aAAU,IAAM,CACd,MAAM6lC,EACJ,CAACyE,EAAoB,uBAAyBA,EAAoB,0BAC9DA,EAAoB,0BACpB/C,EACAiD,EAAoC,CACxC,OAAQ,GACR,UAAW,MAAU,WACrB,kBAAA3E,EACA,KAAM,EACN,GAAIyE,EAAoB,gBACxB,QAAS,EACX,EACA,OAAAH,EAAcK,CAAO,EAEd,IAAM,CACXJ,EAAwB,CAC1B,CAEF,EAAG,CAAC,CAAC,EAEL,KAAM,CAAE,MAAOK,EAAsB,QAASC,CAAU,KAAI37B,GAAA,GAAS,SAAY,CAE/E,MAAM47B,EADmBJ,EAAkB,IAAK3V,GAAOA,EAAG,GAAG,EAC1B,IAAI,MAAOgW,GAAQ,CACpD,GAAI,CAEF,SAAO,MAAiB,EAAE,IAAIA,CAAG,CACnC,MAAY,CACV,OAAO,QAAQ,QAAQ,CACzB,CACF,CAAC,EAED,OAAID,IAAc,QACgB,MAAM,QAAQ,IAAIA,CAAS,GAAG,OAAQE,GAA8B,CAAC,CAACA,CAAG,EAGlG,CAAC,CAEZ,EAAG,CAACX,GAA0B,iBAAiB,CAAC,EAEhD,GAAI,CAACA,EACH,SACE,OAAC,QACC,mBAAC,KAAK,CAAC,QAAQ,2CAA2C,sBAAU,EACtE,EAOJ,MAAMY,KAA0B,OAAqB9zB,EAASkzB,EAAyB,SAAS,EAC1Fa,EAAmBC,GAAoB,EACvCC,EAAiBj0B,EAAQ,QAAUA,EAAQ,SAAWizB,EACtDiB,EAAa,CACjBhB,EAAyB,MAAQ,EACjCA,EAAyB,IAAMI,EAAoB,eACrD,EAEA,SACE,QAAC,OAAI,UAAW7wC,EAAO,UACrB,oBAAC,OAAI,UAAWA,EAAO,gBACrB,oBAAC,OAAI,UAAWA,EAAO,YACrB,oBAAC,OAAI,UAAWA,EAAO,YACrB,mBAAC,KAAK,CAAC,QAAQ,kDAAkD,0BAAc,EACjF,KACA,OAAC,OAAI,UAAWA,EAAO,YAAc,mBAAwByxC,EAAW,CAAC,CAAC,EAAE,KAC5E,OAAC,OAAI,UAAWzxC,EAAO,OACrB,mBAAC0xC,GAAA,GACC,qBAAsB,GACtB,IAAK,EACL,IAAKb,EAAoB,gBACzB,MAAOY,EACP,YAAY,WACZ,oBAAqB,MACrB,QAAS,GACT,cAAgB5qC,GAAU,CACxB6pC,EAAc,CAAE,KAAM7pC,EAAO,CAAC,EAAG,GAAIA,EAAO,CAAC,CAAE,CAAC,CAClD,EACF,EACF,KACA,OAAC,OAAI,UAAW7G,EAAO,YAAc,mBAAwByxC,EAAW,CAAC,CAAC,EAAE,GAC9E,EACF,KAEA,QAAC,OAAI,UAAWzxC,EAAO,iBAAkB,cAAY,4BACnD,qBAAC,OAAI,UAAWA,EAAO,UACpB,WAAC6wC,EAAoB,0BACpB,OAAC,OACC,UAAW7wC,EAAO,YAClB,QAAS8wC,EAAkB,IAAK3V,IACvB,CAAE,MAAOA,EAAG,KAAM,MAAOA,EAAG,IAAK,EACzC,EACD,MAAOsV,EAAyB,kBAChC,eAAa,KACX,sDACA,oCACF,EACA,gBAAY,KAAE,qDAAsD,oCAAoC,EACxG,SAAWpW,GAA+B,CACxCqW,EAAc,CAAE,kBAAmBrW,EAAQ,IAAK7d,GAAWA,EAAO,KAAK,CAAE,CAAC,CAC5E,EACF,KAEF,OAAC,OAAI,UAAWxc,EAAO,YACrB,mBAAC0tC,GAAA,GACC,YAAa,GACb,eAAa,KAAE,sDAAuD,gBAAgB,EACtF,MAAO+C,EAAyB,OAChC,SAAWrgB,GAAmBsgB,EAAc,CAAE,OAAAtgB,CAAO,CAAC,EACxD,EACF,KACA,OAAC,OACC,gBAAY,KAAE,mDAAoD,cAAc,EAChF,UAAWpwB,EAAO,KAElB,mBAAC8U,GAAA,IACC,MAAOw8B,EAAiB,OAAQjlB,GAAUA,EAAM,QAAUokB,EAAyB,SAAS,EAC5F,QAASa,EACT,eAAa,KAAE,oDAAqD,iBAAiB,EACrF,SAAW9tC,GAAkCktC,EAAc,CAAE,UAAWltC,EAAE,KAAM,CAAC,EACnF,EACF,GACF,GAEE+a,GAAW0yB,OACX,OAAC,QACC,mBAAC,KAAK,CAAC,QAAQ,mDAAmD,8BAAkB,EACtF,EAGD,EAAE1yB,GAAW0yB,IACZ,OAAO,KAAKI,CAAuB,EAAE,IAAKM,MAEtC,QAAC,OACC,qBAAC,OAAI,UAAW3xC,EAAO,QACpB,UAAA2xC,EAAS,OACV,OAAC,QAAK,UAAW3xC,EAAO,QACrB,SAAAwxC,KACC,OAAC,MACC,QAAQ,8DACR,SAAS,iCACT,OAAQ,CAAE,MAAOH,EAAwBM,CAAO,EAAE,MAAO,EAC3D,KAEA,OAAC,MACC,QAAQ,sDACR,SAAS,sBACT,OAAQ,CAAE,MAAON,EAAwBM,CAAO,EAAE,MAAO,EAC3D,EAEJ,GACF,EACCN,EAAwBM,CAAO,EAAE,IAAK9V,MAC9B,OAAC,GAAe,CAAC,oBAAqBmV,EAAsB,iBAAkBnV,CAAA,EAAQA,EAAE,EAAI,CACpG,IArBO8V,CAsBV,CAEH,EACFH,KACC,OAAC,OACC,mBAAC,MACC,QAAQ,mDACR,SAAS,sDACT,OAAQ,CAAE,MAAOj0B,EAAQ,OAAQ,MAAOizB,CAAa,EACrD,WAAY,IACV,OAACrxC,EAAA,GAAM,CAAC,QAASyxC,EAA0C,sBAAjB,gBAE1C,CACF,EACF,EACF,EACE,QACJ,OAAC,OAAI,UAAW5wC,EAAO,OACpB,SAACuC,EAAA,EAAO,oBAKL,MAJA,KACE,iDACA,qEACF,CACA,CACN,GACF,GACF,CAEJ,C,gBCpSA,MAAM,GAAahB,IACV,CACL,aAAW;AAAA,mBACIA,EAAM,WAAW,UAAU,QAAQ;AAAA,MAElD,gBAAc;AAAA,uBACKA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,SAAO;AAAA;AAAA,MAGP,QAAM;AAAA,qBACWA,EAAM,WAAW,cAAc;AAAA,MAEhD,gBAAc;AAAA,uBACKA,EAAM,QAAQ,CAAC,CAAC;AAAA,KAErC,GAGIqwC,GAAyB,CAC7B,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,EAAG,SAAO,KAAE,4DAA6D,QAAQ,CAAE,EAC5F,CAAE,MAAO,GAAI,SAAO,KAAE,6DAA8D,SAAS,CAAE,CACjG,EAEO,SAASC,GAAuB/rC,EAAiC,CACtE,KAAM,CACJ,gBAAAgsC,EACA,qBAAAC,EACA,sBAAAC,EACA,wBAAAC,EACA,2BAAAC,EACA,4BAAAC,EACA,kBAAAC,CACF,EAAItsC,EACE9F,KAAS,MAAW,EAAS,EAC7BqyC,EAAiBT,GAAuB,KAAM5tC,GAAMA,EAAE,QAAU8tC,CAAe,EAE/EQ,EAAW,IAAM,IACrB,OAAa,EAAE,QACb,IAAI,MAAsB,CACxB,SAAO,KAAE,iDAAkD,QAAQ,EACnE,QAAM,KACJ,wDACA,iEACF,EACA,WAAS,KAAE,mDAAoD,QAAQ,EACvE,KAAM,YACN,UAAW,IAAM,CACfF,EAAkB,KAClB,UACE,UACE,UACE,KAAE,0DAA2D,uBAAuB,CACtF,CACF,CACF,CACF,CACF,CAAC,CACH,CACF,EAEA,SACE,QAAC,OAAI,UAAWpyC,EAAO,UACpB,oBAAkB,EAAE,mBACnB,OAAC2U,GAAA,GACC,SAAO,KAAE,sDAAuD,mBAAmB,EACnF,eAAa,KACX,kEACA,gIACA,CAAE,kBAAiB,KAAC,CACtB,EAEA,mBAAC,OAAI,UAAW3U,EAAO,MACrB,mBAAC8U,GAAA,GAAM,CAAC,MAAOu9B,EAAgB,QAAST,GAAwB,SAAUK,CAAA,CAAyB,EACrG,EACF,KAEA,OAAC17B,GAAA,EAAK,CAAC,SAAS,OAAO,SAAO,KAAE,sDAAuD,mBAAmB,EACvG,iBACC,+CACA,oFACA,CACE,YAAa87B,GAAgB,KAC/B,CACF,EACF,KAEF,OAAC3hB,GAAA,GACC,SAAO,KACL,uDACA,qFACF,EACA,UAAW1wB,EAAO,aAElB,mBAAC,MACC,GAAG,oDACH,MAAO+xC,EACP,SAAUG,CAAA,CACZ,EACF,KACC,OAAkB,EAAE,yBACnB,OAACxhB,GAAA,GACC,SAAO,KACL,gEACA,+DACF,EACA,UAAW1wB,EAAO,aAElB,mBAAC,MACC,GAAG,sDACH,MAAOgyC,EACP,SAAUG,CAAA,CACZ,EACF,KAED,OAAkB,EAAE,iBACnB,QAAC,OACC,oBAAC,OAAI,UAAWnyC,EAAO,KACrB,mBAAC,KAAK,CAAC,QAAQ,wDAAwD,+BAAmB,EAC5F,KACA,OAAC,OAAI,UAAWA,EAAO,aACrB,mBAAC,KAAK,CAAC,QAAQ,uDAAuD,0DAEtE,EACF,KACA,OAACb,EAAA,GAAM,CAAC,QAAQ,cAAc,QAASmzC,EACrC,mBAAC,KAAK,CAAC,QAAQ,+DAA+D,+BAAmB,EACnG,GACF,GAEJ,CAEJ,CC9HA,MAAM,GAAa/wC,IACV,CACL,aAAW;AAAA;AAAA,MAGX,oBAAkB;AAAA;AAAA,MAGlB,aAAW;AAAA;AAAA;AAAA;AAAA,MAKX,eAAa;AAAA;AAAA,uBAEMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,eAAa;AAAA,uBACMA,EAAM,QAAQ,CAAC,CAAC;AAAA,MAEnC,QAAM;AAAA;AAAA,MAGN,UAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKSA,EAAM,WAAW,eAAe;AAAA,mBAClCA,EAAM,WAAW,UAAU,QAAQ;AAAA;AAAA,uBAE/BA,EAAM,WAAW,gBAAgB;AAAA,uBACjCA,EAAM,QAAQ,GAAI,CAAC;AAAA;AAAA,KAGxC,GAGK,SAASgxC,GAAsBzsC,EAAmC,CACvE,KAAM,CACJ,cAAA4qC,EACA,wBAAAC,EACA,oBAAAC,EACA,oBAAAC,EACA,QAAAtzB,EACA,aAAAizB,EACA,QAAAjyB,EACA,yBAAAkyB,CACF,EAAI3qC,EAEE9F,KAAS,MAAW,EAAS,EAC7BkpC,KAAkB,eAAY,IAAmB,EAEjD4H,KAAoB,OAAsB,KAEhD,aAAU,IAAM,CACd,MAAM1E,EACJyE,EAAoB,uBAAyBA,EAAoB,0BAC7DA,EAAoB,0BACpB3H,EAAgB,YACb,IAAKsJ,GAAQ1B,EAAkB,KAAM3V,GAAOA,EAAG,MAAQqX,EAAI,YAAY,GAAG,GAAG,IAAI,EACjF,OAAQ3yB,GAAyB,CAAC,CAACA,CAAI,EAC1CkxB,EAAoC,CACxC,OAAQ,GACR,UAAW,MAAU,WACrB,kBAAA3E,EACA,KAAM,EACN,GAAIyE,EAAoB,gBACxB,QAAS,EACX,EACA,OAAAH,EAAcK,CAAO,EACd,IAAM,CACXJ,EAAwB,CAC1B,CAEF,EAAG,CAAC,CAAC,EAEL,KAAM,CAAE,MAAOK,EAAsB,QAASC,CAAU,KAAI37B,GAAA,GAAS,SAAY,CAK/E,MAAM47B,EAAY,MAHhBT,GAA0B,mBAAqBA,GAA0B,kBAAkB,OAAS,EAChGA,GAA0B,kBAC1BK,EAAkB,IAAK3V,GAAOA,EAAG,GAAG,GACD,IAAI,MAAOgW,GAAQ,CAC1D,GAAI,CAEF,SAAO,MAAiB,EAAE,IAAIA,CAAG,CACnC,MAAY,CACV,OAAO,QAAQ,QAAQ,CACzB,CACF,CAAC,EAED,OAAID,IAAc,QACgB,MAAM,QAAQ,IAAIA,CAAS,GAAG,OAAQE,GAA8B,CAAC,CAACA,CAAG,EAIlG,CAAC,CAEZ,EAAG,CAACX,GAA0B,iBAAiB,CAAC,EAEhD,GAAI,CAACA,EACH,SACE,QAAC,QACC,oBAAC,KAAK,CAAC,QAAQ,2CAA2C,sBAAU,EAAQ,KAC9E,EAIJ,MAAMa,EAAmBC,GAAoB,EAE7C,SACE,OAAC,OAAI,UAAWvxC,EAAO,UACrB,oBAAC,OAAI,UAAWA,EAAO,iBACrB,qBAAC,OAAI,UAAWA,EAAO,UACpB,WAAC6wC,EAAoB,0BACpB,OAAC,OACC,UAAW7wC,EAAO,YAClB,QAAS8wC,EAAkB,IAAK3V,IACvB,CAAE,MAAOA,EAAG,KAAM,MAAOA,EAAG,IAAK,EACzC,EACD,MAAOsV,EAAyB,kBAChC,eAAa,KACX,8DACA,oCACF,EACA,gBAAY,KACV,6DACA,oCACF,EACA,SAAWpW,GAA+B,CACxCqW,EAAc,CAAE,kBAAmBrW,EAAQ,IAAK7d,GAAWA,EAAO,KAAK,CAAE,CAAC,CAC5E,EACF,KAEF,OAAC,OAAI,UAAWxc,EAAO,YACrB,mBAAC0tC,GAAA,GACC,YAAa,GACb,eAAa,KAAE,8DAA+D,gBAAgB,EAC9F,MAAO+C,EAAyB,OAChC,SAAWrgB,GAAmBsgB,EAAc,CAAE,OAAAtgB,CAAO,CAAC,EACxD,EACF,KACA,OAAC,OACC,gBAAY,KAAE,2DAA4D,cAAc,EACxF,UAAWpwB,EAAO,KAElB,mBAAC8U,GAAA,IACC,MAAOw8B,EAAiB,OAAQjlB,GAAUA,EAAM,QAAUokB,EAAyB,SAAS,EAC5F,QAASa,EACT,eAAa,KAAE,4DAA6D,iBAAiB,EAC7F,SAAW9tC,GAAkCktC,EAAc,CAAE,UAAWltC,EAAE,KAAM,CAAC,EACnF,EACF,GACF,EACC+a,GAAW0yB,MACV,OAAC,QACC,mBAAC,KAAK,CAAC,QAAQ,mDAAmD,8BAAkB,EACtF,EAED,EAAE1yB,GAAW0yB,IACZ1zB,EAAQ,IAAKse,MACJ,OAAC,GAAe,CAAC,iBAAkBA,EAAc,oBAAqBmV,CAAA,EAA3BnV,EAAE,EAA+C,CACpG,EACFte,EAAQ,QAAUA,EAAQ,SAAWizB,KACpC,OAAC,OACC,mBAAC,MACC,QAAQ,mDACR,SAAS,sDACT,OAAQ,CAAE,MAAOjzB,EAAQ,OAAQ,MAAOizB,CAAa,EACrD,WAAY,IACV,OAACrxC,EAAA,GAAM,CAAC,QAASyxC,EAA0C,sBAAjB,gBAE1C,CACF,EACF,EACF,EACE,QACJ,OAAC,OAAI,UAAW5wC,EAAO,OACpB,SAACuC,EAAA,EAAO,oBAKL,MAJA,KACE,yDACA,qEACF,CACA,CACN,GACF,EACF,CAEJ,CCnMO,MAAMgvC,GAAsB,IACjC,CACE,CAAE,SAAO,KAAE,oCAAqC,cAAc,EAAG,MAAO,MAAU,UAAW,EAC7F,CAAE,SAAO,KAAE,oCAAqC,cAAc,EAAG,MAAO,MAAU,SAAU,EAC5F,CAAE,SAAO,KAAE,sCAAuC,iBAAiB,EAAG,MAAO,MAAU,YAAa,EACpG,CAAE,SAAO,KAAE,sCAAuC,iBAAiB,EAAG,MAAO,MAAU,YAAa,CACtG,EAAE,OAAQ/0B,MAAW,OAAkB,EAAE,iBAAiB,SAASA,EAAO,KAAK,CAAC,EAkB3E,SAASi2B,GAAY3sC,EAAyB,CACnD,KAAM,CAAE,YAAA4sC,EAAa,iBAAAC,EAAkB,OAAApsC,EAAQ,kBAAA6rC,EAAmB,QAAAlgB,EAAS,SAAA0gB,CAAS,EAAI9sC,EAElF,CAACyY,EAASs0B,CAAU,KAAI,YAAS,EAAK,EAEtC,CAAE,sBAAAh4B,CAAsB,EAAIF,GAAwB,EAEpDm4B,EAAkBC,GAAmD,CACzEjtC,EAAM,sBAAsB,CAAE,GAAGA,EAAM,oBAAqB,GAAGitC,CAAiB,CAAC,CACnF,EAEMrC,EAAiBsC,GAAwD,CAC7E,MAAMjC,EAAU,CACd,GAAGjrC,EAAM,yBACT,GAAGktC,EACH,KAAM,CACR,EACAltC,EAAM,2BAA2BirC,CAAO,EACxCkC,EAAgB,CAClB,EAEMA,KAAkB,aAAS,IAAM,CACrCntC,EAAM,gBAAgB,EACtB+sC,EAAW,EAAI,CACjB,EAAG,GAAG,EAEAZ,EAA2BH,GAA6C,CACxEA,EAAgB,QAAU,QAC5BgB,EAAe,CAAE,gBAAiBhB,EAAgB,KAAM,CAAC,CAE7D,EAEMI,EAA6B,IACjCY,EAAe,CAAE,qBAAsB,CAAChtC,EAAM,oBAAoB,oBAAqB,CAAC,EAEpFqsC,EAA8B,IAClCW,EAAe,CAAE,sBAAuB,CAAChtC,EAAM,oBAAoB,qBAAsB,CAAC,KAE5F,aAAU,IAAM,CACd+sC,EAAW,EAAK,CAClB,EAAG,CAACH,CAAW,CAAC,EAEhB,MAAMxJ,KAAkB,eAAY,IAAmB,EACjD4H,KAAoB,OAAsB,EAC1ChD,EAAoB5E,EAAgB,YACvC,IAAKsJ,GAAQ1B,EAAkB,KAAM3V,GAAOA,EAAG,MAAQqX,EAAI,YAAY,GAAG,GAAG,IAAI,EACjF,OAAQ3yB,GAAyB,CAAC,CAACA,CAAI,EAEpCqzB,EAA6B,CACjC,MAAO/3B,GAAK,aACZ,MAAOV,GAAK,aACZ,WAAS,OAACozB,GAAY,CAAC,kBAAAC,CAAA,CAAsC,EAC7D,KAAM,MACR,EAEMqF,EAAwB,CAC5B,MAAOh4B,GAAK,aACZ,MAAOV,GAAK,YACZ,WACE,OAAC81B,GAAA,CACC,QAASmC,EACT,aAAcC,GAAoB,EAClC,QAAAp0B,EACA,cAAAmyB,EACA,wBAAyB,IAAM5qC,EAAM,wBAAwB,EAC7D,oBAAqB,IAAMA,EAAM,oBAAoB,EACrD,oBAAqBA,EAAM,oBAC3B,yBAA0BA,EAAM,yBAChC,OAAAS,EACA,kBAAAunC,EACA,kBAAAgD,CAAA,CACF,EAEF,KAAM,SACR,EAEMsC,EAAwB,CAC5B,SAAO,KAAE,+BAAgC,SAAS,EAClD,MAAO34B,GAAK,QACZ,WACE,OAAC83B,GAAA,CACC,QAASG,EACT,aAAcC,GAAoB,EAClC,QAAAp0B,EACA,cAAAmyB,EACA,wBAAyB,IAAM5qC,EAAM,wBAAwB,EAC7D,oBAAqB,IAAMA,EAAM,oBAAoB,EACrD,oBAAqBA,EAAM,oBAC3B,yBAA0BA,EAAM,yBAClC,EAEF,KAAM,MACR,EAEMutC,EAAyB,CAC7B,SAAO,KAAE,gCAAiC,UAAU,EACpD,MAAO54B,GAAK,SACZ,WACE,OAACo3B,GAAA,CACC,gBAAiB/rC,EAAM,oBAAoB,gBAC3C,qBAAsBA,EAAM,oBAAoB,qBAChD,sBAAuBA,EAAM,oBAAoB,sBACjD,wBAAAmsC,EACA,2BAAAC,EACA,4BAAAC,EACA,kBAAAC,CAAA,CACF,EAEF,KAAM,eACR,EAEA,IAAIzM,GAAQ9qB,EAAwB,CAACq4B,CAAe,EAAI,CAAC,GAAG,OAAO,CAACC,EAAYC,EAAYC,CAAW,CAAC,EACxG,SACE,OAACvN,GAAA,GACC,KAAAH,EACA,QAAAzT,EACA,WAAY0gB,EACZ,oBAAkB,KAAE,qCAAsC,qBAAqB,EAC/E,OAAQ,MAAU,MAAM,QAAQ,aAAa,UAC/C,CAEJ,CCjJA,SAAS,GAAgB5oC,EAAmB,CAC1C,MAAM86B,EAAU96B,EAAM,QAChBymC,EAA2B3L,EAAQ,yBACnC,CAAE,oBAAA+L,EAAqB,YAAA6B,EAAa,iBAAAC,CAAiB,EAAI7N,EAE/D,MAAO,CACL,YAAA4N,EACA,iBAAAC,EACA,oBAAA9B,EACA,yBAAAJ,CACF,CACF,CAEA,MAAM,GAAqB,CACzB,gBAAe,MACf,gBAAe,MACf,oBAAmB,MACnB,wBAAuB,MACvB,sBAAqB,MACrB,2BAA0B,MAC1B,kBAAiB,KACnB,EAEM,MAAY,YAAQ,GAAiB,EAAkB,EAOtD,SAAS6C,GAAqBxtC,EAAc,CACjD,MAAMvE,KAAQ,MAAU,EAElB,CACJ,YAAAmxC,EACA,iBAAAC,EACA,kBAAAP,EACA,gBAAAmB,EACA,gBAAAN,EACA,oBAAArC,EACA,wBAAAD,EACA,oBAAAE,EACA,sBAAA2C,EACA,yBAAA/C,EACA,2BAAAgD,EACA,QAAAvhB,CACF,EAAIpsB,KAEJ,aAAU,IAAM,CACdytC,EAAgB,CAClB,EAAG,CAACA,CAAe,CAAC,EAEpB,KAAM,CAAE,YAAAz4B,CAAY,EAAIH,GAAwB,EAC1C,CAAC+4B,EAASC,CAAU,KAAI,YAAS,EAAK,EAY5C,SAVA,aAAU,IAAM,CACTD,IACHC,EAAW,EAAI,KACf,MAAkB,uCAAwC,CACxD,oBAAqBpxC,EAAA,EAAO,oBAC5B,YAAAuY,CACF,CAAC,EAEL,EAAG,CAAC44B,EAAS54B,CAAW,CAAC,EAErB,CAAC+1B,GAAuB,CAAC/1B,KAEzB,OAAC,QACC,mBAAC,KAAK,CAAC,QAAQ,yCAAyC,sBAAU,EACpE,KAKF,OAAC23B,GAAA,CACC,YAAAC,EACA,iBAAAC,EACA,SAAU73B,EACV,QAAAoX,EACA,OAAQ3wB,EAAM,WAAW,iBAAiB,cAC1C,kBAAmB6wC,EACnB,oBAAAvB,EACA,yBAAAJ,EACA,sBAAuB+C,EACvB,2BAA4BC,EAC5B,gBAAiBR,EACjB,oBAAqBrC,EACrB,wBAAyBD,CAAA,CAC3B,CAEJ,CAEA,SAAe,GAAU2C,EAAoB,E,4BC5GtC,SAASM,GAAoBC,EAA4B,CAC9D,MAAMC,KAAWC,GAAA,GAAY,SAAS,EAChC,CAAE,OAAAC,CAAO,KAAI,OAAW,KAE9B,aAAU,IAAM,CACd,GAAI,CAACH,EAAO,OAAS,OAAOA,EAAO,OAAU,SAC3C,OAGF,IAAII,EACJ,GAAI,CACFA,EAAc,KAAK,MAAMJ,EAAO,KAAK,CACvC,MAAQ,CACN,MACF,CAEI,OAAOI,GAAgB,UAAYA,IAAgB,MAIvD,QAAQ,WACN,OAAO,OAAOA,CAAW,EAAE,IAAKrzC,GAE5B,CAACA,GACD,OAAOA,GAAS,UAChB,IAAC,MAAO,aAAcA,CAAI,GAC1B,CAACA,EAAK,YACN,OAAOA,EAAK,YAAe,SAEpB,QAAQ,OAAO,KAGjB,MAAiB,EAAE,IAAIA,EAAK,UAAU,CAC9C,CACH,EACG,KAAMszC,GAAYA,EAAQ,OAAO,IAAW,EAAE,IAAK1oB,GAAWA,EAAO,KAAK,CAAC,EAC3E,KAAM0jB,GAAgB,CACrB,GAAIA,EAAY,SAAW,EAAG,CAC5B,IAAO,SAAS,MAAQ,GAAG4E,EAAS,KAAK,IAAI,MAAMK,GAAA,EAAS,QAAQ,GACpEH,EAAO,OAAO,CACZ,QAAS,MACX,CAAC,EACD,MACF,CAEA,MAAMI,EAAclF,EAAY,IAAK/T,GAAOA,EAAG,IAAI,EAAE,KAAK,KAAK,EAC/D6Y,EAAO,OAAO,CACZ,QAAS,CACP,KAAMI,CACR,CACF,CAAC,EACD,IAAO,SAAS,MAAQ,GAAGN,EAAS,KAAK,IAAI,MAAMM,CAAW,MAAMD,GAAA,EAAS,QAAQ,EACvF,CAAC,CACL,EAAG,CAACN,EAAO,MAAOC,EAAS,KAAK,KAAME,CAAM,CAAC,CAC/C,CChDO,SAASK,IAAuB,CACrC,KAAM,CAAE,YAAAC,CAAY,KAAI,OAAW,EAC7Bv0C,KAAW,eAAY,KAE7B,aAAU,IAAM,CACdu0C,EAAY,uBAAuB,EAAK,EAExC,MAAMC,EAA6B,CAAC,EAEpC,OAAAA,EAAS,QACP,OAAa,EAAE,UAAU,MAAmB,IAAM,CAChDx0C,KAAS,OAAiB,CAAC,CAC7B,CAAC,CACH,EAEAw0C,EAAS,QACP,OAAa,EAAE,UAAU,MAAiB31C,GAAU,CAClDmB,KAAS,OAAUnB,EAAM,QAAQ,SAAS,CAAC,CAC7C,CAAC,CACH,EAEA21C,EAAS,QACP,OAAa,EAAE,UAAU,MAAe31C,GAAU,CAChDmB,KAAS,OAAQnB,EAAM,QAAQ,KAAK,CAAC,CACvC,CAAC,CACH,EAEA21C,EAAS,QACP,OAAa,EAAE,UAAU,MAAe,IAAM,CAC5Cx0C,KAAS,OAAyB,CAAC,CACrC,CAAC,CACH,EAEAw0C,EAAS,QACP,OAAa,EAAE,UAAU,MAAgB,IAAM,CAC7Cx0C,KAAS,OAA4B,CAAC,CACxC,CAAC,CACH,EAEO,IAAM,CACXw0C,EAAS,QAASC,GAAMA,EAAE,YAAY,CAAC,CACzC,CACF,EAAG,CAACz0C,EAAUu0C,CAAW,CAAC,CAC5B,CClDO,MAAMG,GAAuBlvC,GAAqB,CACvD,MAAMxF,KAAW,eAAY,EACvB,CAAE,MAAO20C,CAAY,KAAItW,GAAA,GAAc,EACvCt+B,KAAQ,eAAY,IAAkB,EACtC60C,KAAW,eAAY,IAAO,EAC9B,CAACC,EAAqBC,CAAsB,KAAI,YAAS,EAAG,EAE5DC,KAAe,eAAa9qC,GAAUA,EAAM,OAAO,EAEnD+qC,EAAmBjxC,GAAiB,CACxC,MAAMkxC,EAAiBN,EAAc,EAC/BO,KAAiB,YAAQnxC,EAAMkxC,EAAiB,IAAKA,EAAiB,GAAG,EAE7Ej1C,EADEk1C,KACO,MAAsB,CAAE,gBAAiB,MAAU,CAAC,KAG3D,MAAsB,CACpB,gBAAiBnxC,EAAOkxC,EAAiBl1C,EAAM,CAAC,EAAE,CAAC,EAAIA,EAAM,CAAC,EAAE,CAAC,CACnE,CAAC,CAL2D,EAShE+0C,EAAuB/wC,EAAO4wC,CAAW,CAC3C,EAEA,IAAIQ,EAAY,EAChB,OAAIP,IACE,CAACG,EAAa,gBAAkBA,EAAa,eAC/CI,EAAYJ,EAAa,iBAAmBh1C,EAAM,CAAC,EAAE,CAAC,EAAI40C,EAAcnvC,EAAWA,EAC1EuvC,EAAa,eACtBI,EAAY,KAAK,MAAMR,EAAc,CAAC,EAC7BE,IAAwB,SACjCM,EAAYR,EAAcE,IAIvB,CAAE,gBAAAG,EAAiB,UAAAG,CAAU,CACtC,EC/BO,SAASC,IAAgB,CAC9B,KAAM,CAAE,SAAAh0C,CAAS,KAAI,OAAW,KAEhC,aAAU,IAAM,CACd,MAAMi0C,EAAej0C,EAAS,gBAAgB,GAC1Ci0C,EAAa,MAAQA,EAAa,KACpCj0C,EAAS,QAAQ,CAAE,KAAM,OAAW,GAAI,MAAU,EAAG,EAAI,CAE7D,EAAG,CAACA,CAAQ,CAAC,CACf,CCSA,MAAMk0C,GAAiB,IACjBC,GAA2B,qBAElB,SAASC,GAAYzvC,EAA2D,CAC7F,SACE,OAAC8U,GAA4B,CAC3B,mBAAC46B,GAAA,CAAoB,GAAG1vC,CAAA,CAAO,EACjC,CAEJ,CAEA,SAAS0vC,GAAmB1vC,EAA2D,CACrF,MAAM9F,KAAS,MAAW,EAAS,EAC7BuB,KAAQ,MAAU,EACxB4zC,GAAc,KACdM,GAAA,GAAa3vC,EAAM,WAAW,EAM9B8tC,GAAoB9tC,EAAM,WAAW,EACrC,KAAM,CAAE,OAAAkuC,CAAO,KAAI,OAAW,EACxBF,KAAWC,GAAA,GAAY,SAAS,EAChC,CAAE,gBAAAgB,EAAiB,UAAAG,CAAU,EAAIT,GAAoBY,EAAc,EAEnEv1C,KAAQ,eAAY,IAAkB,EACtC60C,KAAW,eAAY,IAAO,EAC9Bz0C,KAAqB,eAAY,IAAwB,EACzD,CAAE,aAAA8a,EAAc,gBAAAC,EAAiB,sBAAAJ,CAAsB,EAAIF,GAAwB,EACnF+6B,EAA2BnzC,EAAA,EAAO,eAAe,eAAiBrC,GAAoB,YAAc,IACpG,CAACqnC,EAAYoO,CAAa,KAAI,YAAgC,EAEpE,sBAAU,IAAM,CAGd3B,EAAO,OAAO,CACZ,WAAYF,CACd,CAAC,CACH,EAAG,CAACE,EAAQF,CAAQ,CAAC,KAErB,aAAU,IAAM,EACUvxC,EAAA,EAAO,eAAe,cAAgB,KAE5D,KAAoB,0BAA0B+yC,GAA0B,CACtE,MAAO,MAAQ,QACf,qBAAuBxvC,MACrB,OAAC8vC,GAAA,GAEC,SAAO,KAAE,+CAAgD,uBAAuB,EAChF,KAAK,OACL,QAAS,IAAM,CACbD,EAAc7vC,EAAM,KAAK,CAC3B,GALKA,EAAM,GAMb,CAEJ,CAAC,CAEL,EAAG,CAAC,CAAC,EAELuuC,GAAqB,KAGnB,QAAC,OACC,aAAW,MAAGr0C,EAAO,qBAAsB,CACzC,CAACA,EAAO,2BAA2B,EAAG01C,CACxC,CAAC,EAED,oBAAC,MAAG,UAAU,UACZ,mBAAC,KAAK,CAAC,QAAQ,mBAAoB,GACrC,KACA,OAAC7zC,GAAc,EAAC,EACf6zC,MAA4B,OAAC71C,GAAwB,CAAC,MAAAC,CAAA,CAAc,KACrE,OAAC+1C,GAAA,GACC,iBAAiB,WACjB,SAAUX,EACV,QAASG,GACT,QAASA,GAAiB,GAC1B,QAAQ,SACR,aAAcV,EACd,YAAae,EAA2B,CAAE,OAAQ,eAAen0C,EAAM,QAAQ,CAAC,CAAC,EAAG,EAAI,CAAC,EACzF,UAAW,CAAE,SAAU,OAAQ,QAAS,OAAQ,cAAe,QAAS,EACxE,eAAiBuC,GAASA,GAAQixC,EAAgBjxC,CAAI,EAErD,SAAAhE,EAAM,IAAI,CAAC,CAACW,CAAS,OAElB,OAACokC,GAAA,GAAkB,CAAiB,MAAM,OACxC,mBAACuB,GAAoB,CAAC,UAAA3lC,CAAA,CAAsB,GADrBA,CAEzB,CAEH,EACH,EACCua,MACC,OAACpP,GAAa,CAAC,cAAeiP,EAAwB,OAAS,OAC7D,mBAAC,IACC,QAAS,IAAM,CACbI,EAAgB,EAAK,CACvB,EACF,EACF,KAEF,OAAC/b,GAAA,GACC,SAAO,KAAE,yCAA0C,4BAA4B,EAC/E,OAAQqoC,IAAe,OACvB,UAAW,IAAMoO,EAAc,MAAS,EAExC,mBAACrO,GAAA,CACC,SAAU,IAAM,CACdqO,EAAc,MAAS,CACzB,EACA,OAASxN,GAAc,CACjBA,IACFwN,EAAc,MAAS,EACvBv7B,GAAiCmtB,GAAY,YAAY,MAAQ,EAAE,EAEvE,EACA,WAAAA,CAAA,CACF,EACF,GACF,CAEJ,CAEA,MAAM,GAAahmC,IACV,CACL,wBAAsB,OAAI,CACxB,MAAO,OACP,SAAU,EACV,UAAW,EACX,OAAQ,OACR,SAAU,WACV,SAAU,QACZ,CAAC,EACD,+BAA6B,OAAI,CAC/B,WAAY,aAAaA,EAAM,OAAO,QAAQ,IAAI,GAClD,YAAa,aAAaA,EAAM,OAAO,QAAQ,IAAI,GACnD,aAAc,aAAaA,EAAM,OAAO,QAAQ,IAAI,GACpD,SAAU,QACZ,CAAC,CACH,E,4HCvJK,MAAMu0C,EAAyBC,IAEhC,CAACA,EAAM,eAAiB,YAAaA,GACvC,QAAQ,IAAI,oBAAqBA,CAAK,EAIjCA,EAAM,SAGTC,GAAgB,CACpB,mBAAoB,eACpB,sBAAuB,kBACvB,wBAAyB,SACzB,MAAO,OACT,EAEMC,GAAa,CACjB,IAAK,OACL,IAAK,MACL,IAAK,MACL,MAAO,MACP,QAAS,cACT,MAAO,OACT,EAEMC,GAAe,CACnB,KAAM,mBACN,IAAK,mBACL,MAAO,YACT,EAkBMC,GAAqB,CAACC,EAAsBC,KACzC,CAAC,KAAW,GAAGD,CAAU,EAAE,IAAI,CAACE,GAAWv/B,MAAS,CACzD,MAAOs/B,GAAOt/B,EAAG,EACjB,SAAO,YAASu/B,EAAS,EAAIA,GAAY,SAASA,GAAW,EAAE,CACjE,EAAE,EAGEC,GAAyB,CAC7BR,EACAS,KACG,CACH,MAAM1gC,GAAoCigC,EAAM,iBAAmB,CAAC,EACpE,GAAI,OAAO,KAAKC,EAAa,EAAE,SAASQ,GAAQ,SAAS,EAAG,CAC1D,MAAMC,GAAiC,CACrC,SAAU,CAAC,CACb,EACID,GAAQ,YAAc,4BACxBC,GAAK,iBAAmB,GACxBA,GAAK,SAAWD,GAAQ,QAAQ,IAAK1nB,GAAmBmnB,GAAWnnB,EAAO,KAAK,CAAC,GAElFhZ,GAAgB,KAAK,CACnB,GAAIkgC,GAAcQ,GAAQ,SAAS,EACnC,QAASC,EACX,CAAC,CACH,CACA,OAAO3gC,EACT,EAmBM4gC,GAA+BjrC,GAAiB,CAEpD,MAAMkrC,GAA+B,CACnC,QAAS,CACP,GAHmB,WAAW,KAAKlrC,EAAM,OAAO,EAAI,KAAe,SAAW,KAAe,OAI7F,QAASA,EAAM,OACjB,EACA,WAAY,CAAC,CACf,EAEA,OAAIA,EAAM,OACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,cACJ,MAAOlrC,EAAM,KACf,CAAC,EAGCA,EAAM,MACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,OACJ,MAAOlrC,EAAM,IACf,CAAC,EAGCA,EAAM,UACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,WACJ,MAAOlrC,EAAM,QACf,CAAC,EAGCA,EAAM,OAAS,QACjBkrC,GAAS,WAAW,KAAK,CACvB,GAAI,OACJ,MAAO,SAASlrC,EAAM,UAAU,EAClC,CAAC,EAGCA,EAAM,OAAS,UACjBkrC,GAAS,WAAW,KAAK,CACvB,GAAI,gBACJ,MAAO,EACT,CAAC,EAGClrC,EAAM,MACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,QACJ,MAAO,CACL,CACE,SAAO,aAAUlrC,EAAM,YAAa,EAAE,EACtC,OAAK,aAAUA,EAAM,QAAS,EAAE,EAChC,eAAa,aAAUA,EAAM,gBAAiB,EAAK,CACrD,CACF,CACF,CAAC,EAGCA,EAAM,WACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,qBACJ,MAAO,CACL,KAAMT,GAAazqC,EAAM,SAAS,CACpC,CACF,CAAC,EAGCA,EAAM,OACRkrC,GAAS,WAAW,KAAK,CACvB,GAAI,eACJ,MAAOlrC,EAAM,QAAU,OAAS,KAAOA,EAAM,KAC/C,CAAC,EAGCA,EAAM,YAAY,QACpBkrC,GAAS,WAAW,KAAK,CACvB,GAAI,aACJ,MAAO,CACL,KAAM,KAAe,SACrB,MAAOR,GAAmB1qC,EAAM,WAAYA,EAAM,MAAM,CAC1D,CACF,CAAC,EAGIkrC,EACT,EAEMC,EAAmBC,GAAwB,CAC/C,IAAIC,GAAwB,CAC1B,OAAQ,CAAC,CACX,EACA,GAAID,EAAc,CAahB,GAZAC,MAAW,UACT,CACE,KAAMD,EAAa,KACnB,SAAUA,EAAa,SACvB,YAAaA,EAAa,MAC1B,OAAQ,CACN,MAAOA,EAAa,QAAU,OAAS,KAAOA,EAAa,KAC7D,CACF,EACA,OACF,EAEIA,EAAa,WAAW,OAAQ,CAClC,MAAMT,GAA+B,CACnC,KAAM,KAAe,SACrB,MAAOD,GAAmBU,EAAa,WAAYA,EAAa,MAAM,CACxE,EACAC,GAAS,WAAaV,EACxB,CAEIS,EAAa,YACfC,GAAS,OAAO,YAAc,CAC5B,KAAMZ,GAAaW,EAAa,SAAS,CAC3C,EAEJ,CACA,OAAOC,EACT,EAKaC,EAA2B,CACtChB,EACAiB,GACAC,KACG,CAEH,GAAID,KAAiB,aAAeC,GAAY,QAAS,CACvD,MAAMT,GAAUS,GAAY,QACtBnhC,EAAkBygC,GAAuBR,EAAOS,EAAO,EACvDK,GAAeL,GAAQ,OAAO,KAAM/qC,GAAeA,EAAM,UAAY,MAAM,EAC3EqrC,GAAWF,EAAgBC,EAAY,EACvCK,GAAYV,GAAQ,OAAO,OAAQ/qC,GAAeA,EAAM,UAAY,MAAM,EAAE,IAAIirC,EAA2B,EAEjHX,EAAM,gBAAkBjgC,EACxBigC,EAAM,YAAc,CAClB,SAAAe,GACA,UAAAI,EACF,CACF,CAEA,MAAO,CAAC,CACV,EAEMC,GAAiBhgC,GACdA,GAAQ,OAAQigC,IAAOA,GAAG,MAAM,QAAQ,iBAAmB,MAAS,GAAK,CAACjgC,IAAS,CAAC,CAAC,EAQjFkgC,GAA2ClgC,GAA+B,CACrF,MAAMmgC,GAA8B,CAAC,EAKrC,OAJmBH,GAAchgC,CAAM,EAAE,OACtCoO,IAAqD,CAAC,CAACA,IAASA,GAAM,SAAW,CACpF,GAEY,QAASA,IAAU,CAC7B,MAAMgyB,EAAYpgC,GAAQ,OAAQigC,GAAO7xB,GAAM,QAAU6xB,EAAG,OAASA,EAAG,MAAM,QAAQ,iBAAmB,MAAS,EAC5GI,MAAmB,WAAQD,EAAYhyB,GAAqBA,EAAM,MAAM,QAAQ,cAAc,EAC9FkyB,GAAmB,OAAO,KAAKD,EAAgB,EAAE,IAAK5wC,GAAQ4wC,GAAiB5wC,CAAG,CAAC,EACnF8wC,GAAgB,CAAE,GAAGnyB,EAAM,EAE7BgyB,GAAaA,EAAU,OAAS,GAClCG,GAAc,OAAO,KAAK,CACxB,KAAM,SACN,KAAM,KAAU,aAChB,OAAQ,CAAC,EACT,OAAQD,EACV,CAAC,EAEHH,GAAe,KAAKI,EAAa,CACnC,CAAC,EAEMJ,EACT,EAEaK,GAA+BxgC,GACnCA,GAAQ,KAAMigC,IAAOA,GAAG,MAAM,QAAQ,iBAAmB,MAAS,C,qDCxSvE52B,EAAc,SAAUo3B,GAAUC,EAAO,CACzC,IAAIC,KAAgB,UAAO,UAAY,CAAE,CAAC,KAC1C,aAAU,UAAY,CAClBA,EAAc,QAAUF,EAC5B,CAAC,KACD,aAAU,UAAY,CAClB,GAAIC,IAAU,KAAM,CAChB,IAAIE,GAAa,YAAY,UAAY,CAAE,OAAOD,EAAc,QAAQ,CAAG,EAAGD,GAAS,CAAC,EACxF,OAAO,UAAY,CAAE,OAAO,cAAcE,EAAU,CAAG,CAC3D,CAEJ,EAAG,CAACF,CAAK,CAAC,CACd,EACA,QAAer3B,C","sources":["webpack://grafana/./public/app/features/correlations/Forms/types.ts","webpack://grafana/./node_modules/react-use/esm/useBeforeUnload.js","webpack://grafana/./public/app/features/explore/CorrelationUnsavedChangesModal.tsx","webpack://grafana/./public/app/features/explore/correlationEditLogic.ts","webpack://grafana/./public/app/features/explore/CorrelationEditorModeBar.tsx","webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./node_modules/re-resizable/lib/resizer.js","webpack://grafana/./node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./node_modules/react-use/esm/useScroll.js","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineContext.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItemButton.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutline.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItem.tsx","webpack://grafana/./public/app/features/explore/CorrelationTransformationAddModal.tsx","webpack://grafana/./public/app/features/explore/CorrelationHelper.tsx","webpack://grafana/./public/app/features/explore/CustomContainer.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryLibraryAnalyticsEvents.ts","webpack://grafana/./public/app/features/explore/QueriesDrawer/QueriesDrawerContext.tsx","webpack://grafana/./public/app/features/explore/QueriesDrawer/utils.ts","webpack://grafana/./public/app/features/explore/QueriesDrawer/QueriesDrawerDropdown.tsx","webpack://grafana/./public/app/features/explore/ShortLinkButtonMenu.tsx","webpack://grafana/./public/app/features/explore/extensions/ToolbarExtensionPoint.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/FlameGraph/FlameGraphExploreContainer.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/Logs/LiveLogs.tsx","webpack://grafana/./public/app/features/logs/components/InfiniteScroll.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineAnalyticEvents.ts","webpack://grafana/./public/app/features/explore/Logs/LogsFeedback.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTable.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsColumnSearch.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableEmptyFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableNavField.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableActiveFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableAvailableFields.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTableMultiSelect.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/uFuzzy.ts","webpack://grafana/./public/app/features/explore/Logs/LogsTableWrap.tsx","webpack://grafana/./public/app/features/explore/SupplementaryResultError.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/logsVolumeResponse.ts","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanelList.tsx","webpack://grafana/./public/app/features/explore/Logs/Logs.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsSamplePanel.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraph/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListContainer.tsx","webpack://grafana/./public/app/features/explore/RawPrometheus/RawPrometheusContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/Table/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/query-library/api/testdata/identityDisplayList.ts","webpack://grafana/./public/app/features/query-library/api/testdata/testQueryList.ts","webpack://grafana/./public/app/features/query-library/api/mocks.ts","webpack://grafana/./public/app/features/query-library/index.ts","webpack://grafana/./public/app/features/explore/QueryLibrary/utils/useDatasource.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplateForm.tsx","webpack://grafana/./public/app/features/query-library/api/user.ts","webpack://grafana/./public/app/features/explore/ExploreRunQueryButton.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/styles.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/ActionsCell.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/AddedByCell.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/DatasourceTypeCell.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/DateAddedCell.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/QueryDescriptionCell.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesTable/index.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/utils/search.ts","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryTemplatesList.tsx","webpack://grafana/./public/app/features/explore/QueryLibrary/QueryLibrary.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryAddToLibrary.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/hooks/useExplorePageTitle.ts","webpack://grafana/./public/app/features/explore/hooks/useKeyboardShortcuts.ts","webpack://grafana/./public/app/features/explore/hooks/useSplitSizeUpdater.ts","webpack://grafana/./public/app/features/explore/hooks/useTimeSrvFix.ts","webpack://grafana/./public/app/features/explore/ExplorePage.tsx","webpack://grafana/./public/app/plugins/panel/table/migrations.ts","webpack://grafana/./node_modules/react-use/esm/useInterval.js"],"sourcesContent":["import { DeepMap, FieldError, FieldErrors } from 'react-hook-form';\n\nimport { SupportedTransformationType } from '@grafana/data';\nimport { t } from 'app/core/internationalization';\n\nimport { CorrelationConfigExternal, CorrelationConfigQuery, OmitUnion } from '../types';\n\nexport interface FormExternalDTO {\n  sourceUID: string;\n  label: string;\n  description: string;\n  type: 'external';\n  config: CorrelationConfigExternal;\n}\n\nexport interface FormQueryDTO {\n  sourceUID: string;\n  targetUID: string;\n  label: string;\n  description: string;\n  type: 'query';\n  config: CorrelationConfigQuery;\n}\n\nexport type FormDTO = FormExternalDTO | FormQueryDTO;\n\nexport function assertIsQueryTypeError(\n  errors: FieldErrors<FormDTO>\n): asserts errors is DeepMap<FormQueryDTO, FieldError> {\n  // explicitly assert the type so that TS can narrow down FormDTO to FormQueryDTO\n}\n\nexport type EditFormDTO = OmitUnion<FormDTO, 'targetUID' | 'sourceUID'>;\n\nexport type TransformationDTO = {\n  type: SupportedTransformationType;\n  expression?: string;\n  mapValue?: string;\n};\n\nexport interface TransformationFieldDetails {\n  show: boolean;\n  required?: boolean;\n  helpText?: string;\n}\n\ninterface SupportedTransformationTypeDetails {\n  label: string;\n  value: SupportedTransformationType;\n  description?: string;\n  expressionDetails: TransformationFieldDetails;\n  mapValueDetails: TransformationFieldDetails;\n}\n\nexport function getSupportedTransTypeDetails(\n  transType: SupportedTransformationType\n): SupportedTransformationTypeDetails {\n  switch (transType) {\n    case SupportedTransformationType.Logfmt:\n      return {\n        label: t('correlations.trans-details.logfmt-label', 'Logfmt'),\n        value: SupportedTransformationType.Logfmt,\n        description: t(\n          'correlations.trans-details.logfmt-description',\n          'Parse provided field with logfmt to get variables'\n        ),\n        expressionDetails: { show: false },\n        mapValueDetails: { show: false },\n      };\n    case SupportedTransformationType.Regex:\n      return {\n        label: t('correlations.trans-details.regex-label', 'Regular expression'),\n        value: SupportedTransformationType.Regex,\n        description: t(\n          'correlations.trans-details.regex-description',\n          'Field will be parsed with regex. Use named capture groups to return multiple variables, or a single unnamed capture group to add variable to named map value. Regex is case insensitive.'\n        ),\n        expressionDetails: {\n          show: true,\n          required: true,\n          helpText: t(\n            'correlations.trans-details.regex-expression',\n            'Use capture groups to extract a portion of the field.'\n          ),\n        },\n        mapValueDetails: {\n          show: true,\n          required: false,\n          helpText: t(\n            'correlations.trans-details.regex-map-values',\n            'Defines the name of the variable if the capture group is not named.'\n          ),\n        },\n      };\n    default:\n      return {\n        label: transType,\n        value: transType,\n        expressionDetails: { show: false },\n        mapValueDetails: { show: false },\n      };\n  }\n}\n\nexport const getTransformOptions = () => {\n  return Object.values(SupportedTransformationType).map((transformationType) => {\n    const transType = getSupportedTransTypeDetails(transformationType);\n    return {\n      label: transType.label,\n      value: transType.value,\n      description: transType.description,\n    };\n  });\n};\n","import { useCallback, useEffect } from 'react';\nimport { off, on } from './misc/util';\nvar useBeforeUnload = function (enabled, message) {\n    if (enabled === void 0) { enabled = true; }\n    var handler = useCallback(function (event) {\n        var finalEnabled = typeof enabled === 'function' ? enabled() : true;\n        if (!finalEnabled) {\n            return;\n        }\n        event.preventDefault();\n        if (message) {\n            event.returnValue = message;\n        }\n        return message;\n    }, [enabled, message]);\n    useEffect(function () {\n        if (!enabled) {\n            return;\n        }\n        on(window, 'beforeunload', handler);\n        return function () { return off(window, 'beforeunload', handler); };\n    }, [enabled, handler]);\n};\nexport default useBeforeUnload;\n","import { css } from '@emotion/css';\n\nimport { Button, Modal } from '@grafana/ui';\n\ninterface UnsavedChangesModalProps {\n  message: string;\n  onDiscard: () => void;\n  onCancel: () => void;\n  onSave: () => void;\n}\n\nexport const CorrelationUnsavedChangesModal = ({ onSave, onDiscard, onCancel, message }: UnsavedChangesModalProps) => {\n  return (\n    <Modal\n      isOpen={true}\n      title={`Unsaved changes to correlation`}\n      onDismiss={onCancel}\n      icon=\"exclamation-triangle\"\n      className={css({ width: '600px' })}\n    >\n      <h5>{message}</h5>\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onCancel} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button variant=\"destructive\" onClick={onDiscard}>\n          Continue without saving\n        </Button>\n        <Button variant=\"primary\" onClick={onSave}>\n          Save correlation\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","import { template } from 'lodash';\n\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION } from 'app/types';\n\nenum CONSEQUENCES {\n  SOURCE_TARGET_CHANGE = 'cause the query in the right pane to be re-ran and links added to that data',\n  FULL_QUERY_LOSS = 'lose the changed query',\n  FULL_CORR_LOSS = 'cause the correlation in progress to be lost',\n  INVALID_VAR = 'remove the variables, and your changed query may no longer be valid',\n}\n\n// returns a string if the modal should show, with what the message string should be\n// returns undefined if the modal shouldn't show\nexport const showModalMessage = (\n  action: CORRELATION_EDITOR_POST_CONFIRM_ACTION,\n  isActionLeft: boolean,\n  dirtyCorrelation: boolean,\n  dirtyQueryEditor: boolean\n) => {\n  const messageTemplate = template(\n    '<%= actionStr %> will <%= consequenceStr %>. Would you like to save before continuing?'\n  );\n  let actionStr = '';\n  let consequenceStr = '';\n\n  // dirty correlation message always takes priority over dirty query\n  if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n    actionStr = 'Closing the pane';\n    if (isActionLeft) {\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.SOURCE_TARGET_CHANGE;\n      } else {\n        return undefined;\n      }\n    } else {\n      // right pane close\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.FULL_QUERY_LOSS;\n      } else {\n        return undefined;\n      }\n    }\n  } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE) {\n    actionStr = 'Changing the datasource';\n    if (isActionLeft) {\n      if (dirtyCorrelation) {\n        consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n      } else {\n        return undefined;\n      }\n    } else {\n      // right datasource change\n      if (dirtyQueryEditor) {\n        consequenceStr = CONSEQUENCES.FULL_QUERY_LOSS;\n      } else {\n        return undefined;\n      }\n    }\n  } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR) {\n    actionStr = 'Closing the editor';\n    if (dirtyCorrelation) {\n      consequenceStr = CONSEQUENCES.FULL_CORR_LOSS;\n    } else if (dirtyQueryEditor) {\n      consequenceStr = CONSEQUENCES.INVALID_VAR;\n    } else {\n      return undefined;\n    }\n  }\n  return messageTemplate({ actionStr, consequenceStr });\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { useBeforeUnload, useUnmount } from 'react-use';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Icon, Stack, Tooltip, useStyles2 } from '@grafana/ui';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION, ExploreItemState, useDispatch, useSelector } from 'app/types';\n\nimport { CorrelationUnsavedChangesModal } from './CorrelationUnsavedChangesModal';\nimport { showModalMessage } from './correlationEditLogic';\nimport { saveCurrentCorrelation } from './state/correlations';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport { changeCorrelationEditorDetails, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { selectCorrelationDetails, selectIsHelperShowing } from './state/selectors';\n\nexport const CorrelationEditorModeBar = ({ panes }: { panes: Array<[string, ExploreItemState]> }) => {\n  const dispatch = useDispatch();\n  const styles = useStyles2(getStyles);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const isHelperShowing = useSelector(selectIsHelperShowing);\n  const [saveMessage, setSaveMessage] = useState<string | undefined>(undefined); // undefined means do not show\n\n  // handle refreshing and closing the tab\n  useBeforeUnload(correlationDetails?.correlationDirty || false, 'Save correlation?');\n  useBeforeUnload(\n    (!correlationDetails?.correlationDirty && correlationDetails?.queryEditorDirty) || false,\n    'The query editor was changed. Save correlation before continuing?'\n  );\n\n  // decide if we are displaying prompt, perform action if not\n  useEffect(() => {\n    if (correlationDetails?.isExiting) {\n      const { correlationDirty, queryEditorDirty } = correlationDetails;\n      let isActionLeft = undefined;\n      let action = undefined;\n      if (correlationDetails.postConfirmAction) {\n        isActionLeft = correlationDetails.postConfirmAction.isActionLeft;\n        action = correlationDetails.postConfirmAction.action;\n      } else {\n        // closing the editor only\n        action = CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR;\n        isActionLeft = false;\n      }\n\n      const modalMessage = showModalMessage(action, isActionLeft, correlationDirty, queryEditorDirty);\n      if (modalMessage !== undefined) {\n        setSaveMessage(modalMessage);\n      } else {\n        // if no prompt, perform action\n        if (\n          action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n          correlationDetails.postConfirmAction\n        ) {\n          const { exploreId, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n          if (exploreId && changeDatasourceUid) {\n            dispatch(\n              changeDatasource({ exploreId, datasource: changeDatasourceUid, options: { importQueries: true } })\n            );\n            dispatch(\n              changeCorrelationEditorDetails({\n                isExiting: false,\n              })\n            );\n          }\n        } else if (\n          action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE &&\n          correlationDetails.postConfirmAction\n        ) {\n          const { exploreId } = correlationDetails?.postConfirmAction;\n          if (exploreId !== undefined) {\n            dispatch(splitClose(exploreId));\n            dispatch(\n              changeCorrelationEditorDetails({\n                isExiting: false,\n              })\n            );\n          }\n        } else if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_EDITOR) {\n          dispatch(\n            changeCorrelationEditorDetails({\n              editorMode: false,\n            })\n          );\n        }\n      }\n    }\n  }, [correlationDetails, dispatch, isHelperShowing]);\n\n  // clear data when unmounted\n  useUnmount(() => {\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: false,\n        isExiting: false,\n        correlationDirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  });\n\n  const resetEditor = () => {\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: true,\n        isExiting: false,\n        correlationDirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  };\n\n  const closePane = (exploreId: string) => {\n    setSaveMessage(undefined);\n    dispatch(splitClose(exploreId));\n    reportInteraction('grafana_explore_split_view_closed');\n  };\n\n  const changeDatasourcePostAction = (exploreId: string, datasourceUid: string) => {\n    setSaveMessage(undefined);\n    dispatch(changeDatasource({ exploreId, datasource: datasourceUid, options: { importQueries: true } }));\n  };\n\n  const saveCorrelationPostAction = (skipPostConfirmAction: boolean) => {\n    dispatch(\n      saveCurrentCorrelation(\n        correlationDetails?.label,\n        correlationDetails?.description,\n        correlationDetails?.transformations\n      )\n    );\n    if (!skipPostConfirmAction && correlationDetails?.postConfirmAction !== undefined) {\n      const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n      if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n        closePane(exploreId);\n        resetEditor();\n      } else if (\n        action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n        changeDatasourceUid !== undefined\n      ) {\n        changeDatasource({ exploreId, datasource: changeDatasourceUid });\n        resetEditor();\n      }\n    } else {\n      dispatch(changeCorrelationEditorDetails({ editorMode: false, correlationDirty: false, isExiting: false }));\n    }\n  };\n\n  return (\n    <>\n      {/* Handle navigating outside of Explore */}\n      <Prompt\n        message={(location) => {\n          if (\n            location.pathname !== '/explore' &&\n            (correlationDetails?.editorMode || false) &&\n            (correlationDetails?.correlationDirty || false)\n          ) {\n            return 'You have unsaved correlation data. Continue?';\n          } else {\n            return true;\n          }\n        }}\n      />\n\n      {saveMessage !== undefined && (\n        <CorrelationUnsavedChangesModal\n          onDiscard={() => {\n            if (correlationDetails?.postConfirmAction !== undefined) {\n              const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n              if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n                closePane(exploreId);\n              } else if (\n                action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n                changeDatasourceUid !== undefined\n              ) {\n                changeDatasourcePostAction(exploreId, changeDatasourceUid);\n              }\n              dispatch(changeCorrelationEditorDetails({ isExiting: false }));\n            } else {\n              // exit correlations mode\n              // if we are discarding the in progress correlation, reset everything\n              // this modal only shows if the editorMode is false, so we just need to update the dirty state\n              dispatch(\n                changeCorrelationEditorDetails({\n                  editorMode: false,\n                  correlationDirty: false,\n                  isExiting: false,\n                })\n              );\n            }\n          }}\n          onCancel={() => {\n            // if we are cancelling the exit, set the editor mode back to true and hide the prompt\n            dispatch(changeCorrelationEditorDetails({ isExiting: false }));\n            setSaveMessage(undefined);\n          }}\n          onSave={() => {\n            saveCorrelationPostAction(false);\n          }}\n          message={saveMessage}\n        />\n      )}\n      <div className={styles.correlationEditorTop}>\n        <Stack gap={2} justifyContent=\"flex-end\" alignItems=\"center\">\n          <Tooltip content=\"Correlations editor in Explore is an experimental feature.\">\n            <Icon className={styles.iconColor} name=\"info-circle\" size=\"xl\" />\n          </Tooltip>\n          <Button\n            variant=\"secondary\"\n            disabled={!correlationDetails?.canSave}\n            fill=\"outline\"\n            className={correlationDetails?.canSave ? styles.buttonColor : styles.disabledButtonColor}\n            onClick={() => {\n              saveCorrelationPostAction(true);\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"secondary\"\n            fill=\"outline\"\n            className={styles.buttonColor}\n            icon=\"times\"\n            onClick={() => {\n              dispatch(changeCorrelationEditorDetails({ isExiting: true }));\n              reportInteraction('grafana_explore_correlation_editor_exit_pressed');\n            }}\n          >\n            Exit correlation editor\n          </Button>\n        </Stack>\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const contrastColor = theme.colors.getContrastText(theme.colors.primary.main);\n  const lighterBackgroundColor = colorManipulator.lighten(theme.colors.primary.main, 0.1);\n  const darkerBackgroundColor = colorManipulator.darken(theme.colors.primary.main, 0.2);\n\n  const disabledColor = colorManipulator.darken(contrastColor, 0.2);\n\n  return {\n    correlationEditorTop: css({\n      backgroundColor: theme.colors.primary.main,\n      marginTop: '3px',\n      padding: theme.spacing(1),\n    }),\n    iconColor: css({\n      color: contrastColor,\n    }),\n    buttonColor: css({\n      color: contrastColor,\n      borderColor: contrastColor,\n      '&:hover': {\n        color: contrastColor,\n        borderColor: contrastColor,\n        backgroundColor: lighterBackgroundColor,\n      },\n    }),\n    // important needed to override disabled state styling\n    disabledButtonColor: css({\n      color: `${disabledColor} !important`,\n      backgroundColor: `${darkerBackgroundColor} !important`,\n    }),\n  };\n};\n","import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { useEffect, useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose, changeCorrelationEditorDetails } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit, selectPanes } from './state/selectors';\n\n// FIXME: this should use the new IDs\nexport const ExploreActions = () => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const panes = useSelector(selectPanes);\n  const splitted = useSelector(isSplit);\n\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  useEffect(() => {\n    const keys = Object.keys(panes);\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      if ([panes[1]]) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries({ exploreId: keys[1] }));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[0]));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[1]));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      // command palette doesn't know what pane we're in, only show option if not split and no datasource is mixed\n      const hasMixed = Object.values(panes).some((pane) => {\n        return pane?.datasourceInstance?.uid === MIXED_DATASOURCE_NAME;\n      });\n\n      if (config.featureToggles.correlations && canWriteCorrelations && !hasMixed) {\n        actionsArr.push({\n          id: 'explore/correlations-editor',\n          name: 'Correlations editor',\n          perform: () => {\n            dispatch(changeCorrelationEditorDetails({ editorMode: true }));\n            dispatch(runQueries({ exploreId: keys[0] }));\n          },\n          section: exploreSection,\n        });\n      }\n\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [panes, splitted, query, dispatch, canWriteCorrelations]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size, gridGap) {\n    var v = Math.round(n / size);\n    return v * size + gridGap * (v - 1);\n};\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\n/**\n * transform T | [T, T] to [T, T]\n * @param val\n * @returns\n */\n// tslint:disable-next-line\nvar normalizeToPair = function (val) { return (Array.isArray(val) ? val : [val, val]); };\nvar definedProps = [\n    'as',\n    'ref',\n    'style',\n    'className',\n    'grid',\n    'gridGap',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _a, _b, _c, _d;\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.state = {\n            isResizing: false,\n            width: (_b = (_a = _this.propsSize) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 'auto',\n            height: (_d = (_c = _this.propsSize) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 'auto',\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                var _a;\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && ((_a = _this.propsSize[key]) === null || _a === void 0 ? void 0 : _a.toString().endsWith('%'))) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var _a = normalizeToPair(this.props.resizeRatio || 1), resizeRatioX = _a[0], resizeRatioY = _a[1];\n        var _b = this.state, direction = _b.direction, original = _b.original;\n        var _c = this.props, lockAspectRatio = _c.lockAspectRatio, lockAspectRatioExtraHeight = _c.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _c.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatioX) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatioX) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatioY) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatioY) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        var adjustedScale = 1 / (this.props.scale || 1);\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left * adjustedScale;\n                this.parentTop = parentRect.top * adjustedScale;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left * adjustedScale;\n            this.targetTop = targetRect.top * adjustedScale;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left * adjustedScale;\n            this.resizableRight = right * adjustedScale;\n            this.resizableTop = top_1 * adjustedScale;\n            this.resizableBottom = bottom * adjustedScale;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0], this.props.gridGap ? this.props.gridGap[0] : 0);\n            var newGridHeight = snap(newHeight, this.props.grid[1], this.props.gridGap ? this.props.gridGap[1] : 0);\n            var gap = this.props.snapGap || 0;\n            var w = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            var h = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n            newWidth = w;\n            newHeight = h;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        var widthChanged = this.state.width !== newState.width;\n        var heightChanged = this.state.height !== newState.height;\n        var flexBaseChanged = this.state.flexBasis !== newState.flexBasis;\n        var changed = widthChanged || heightChanged || flexBaseChanged;\n        if (changed) {\n            // For v18, update state sync\n            flushSync(function () {\n                _this.setState(newState);\n            });\n        }\n        if (this.props.onResize) {\n            if (changed) {\n                this.props.onResize(event, direction, this.resizable, delta);\n            }\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a, _b;\n        var _c = this.state, isResizing = _c.isResizing, direction = _c.direction, original = _c.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState({ width: (_a = this.props.size.width) !== null && _a !== void 0 ? _a : 'auto', height: (_b = this.props.size.height) !== null && _b !== void 0 ? _b : 'auto' });\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        var _a, _b;\n        this.setState({ width: (_a = size.width) !== null && _a !== void 0 ? _a : 'auto', height: (_b = size.height) !== null && _b !== void 0 ? _b : 'auto' });\n    };\n    Resizable.prototype.renderResizer = function (directions) {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = directions\n            .filter(function (dir) { return enable[dir] !== false; })\n            .map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ style: style, className: this.props.className }, extendsProps, { \n            // `ref` is after `extendsProps` to ensure this one wins over a version\n            // passed in\n            ref: function (c) {\n                if (c) {\n                    _this.resizable = c;\n                }\n            } }),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.renderResizer(['topLeft', 'top', 'topRight', 'left']),\n            this.props.children,\n            this.renderResizer(['right', 'bottomLeft', 'bottom', 'bottomRight'])));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        gridGap: [0, 0],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport * as React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getDragStyles, useStyles2, useTheme2 } from '@grafana/ui';\n\nexport interface Props {\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n  initialHeight?: string;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { children, onResize, initialHeight } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const dragStyles = getDragStyles(theme);\n\n  const height = initialHeight || `${theme.components.horizontalDrawer.defaultHeight}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.fixed, styles.container, styles.drawerActive)}\n      defaultSize={{ width: '100%', height }}\n      handleClasses={{ top: dragStyles.dragHandleHorizontal }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  // @ts-expect-error csstype doesn't allow !important. see https://github.com/frenic/csstype/issues/114\n  fixed: css({\n    position: 'absolute !important',\n  }),\n  container: css({\n    bottom: 0,\n    background: theme.colors.background.primary,\n    borderTop: `1px solid ${theme.colors.border.weak}`,\n    boxShadow: theme.shadows.z3,\n    zIndex: theme.zIndex.navbarFixed,\n  }),\n  drawerActive: css({\n    opacity: 1,\n    [theme.transitions.handleMotion('no-preference')]: {\n      animation: `0.5s ease-out ${drawerSlide(theme)}`,\n    },\n  }),\n});\n","import { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { off, on } from './misc/util';\nvar useScroll = function (ref) {\n    if (process.env.NODE_ENV === 'development') {\n        if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n            console.error('`useScroll` expects a single ref argument.');\n        }\n    }\n    var _a = useRafState({\n        x: 0,\n        y: 0,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            if (ref.current) {\n                setState({\n                    x: ref.current.scrollLeft,\n                    y: ref.current.scrollTop,\n                });\n            }\n        };\n        if (ref.current) {\n            on(ref.current, 'scroll', handler, {\n                capture: false,\n                passive: true,\n            });\n        }\n        return function () {\n            if (ref.current) {\n                off(ref.current, 'scroll', handler);\n            }\n        };\n    }, [ref]);\n    return state;\n};\nexport default useScroll;\n","import { uniqueId } from 'lodash';\nimport { useState, useContext, createContext, ReactNode, useCallback, useRef, useEffect } from 'react';\nimport { SetOptional } from 'type-fest';\n\nimport { ContentOutlineItemBaseProps, ITEM_TYPES } from './ContentOutlineItem';\n\nexport interface ContentOutlineItemContextProps extends ContentOutlineItemBaseProps {\n  id: string;\n  ref: HTMLElement | null;\n  color?: string;\n  children?: ContentOutlineItemContextProps[];\n}\n\ntype RegisterFunction = (outlineItem: SetOptional<ContentOutlineItemContextProps, 'id'>) => string;\n\nexport interface ContentOutlineContextProps {\n  outlineItems: ContentOutlineItemContextProps[];\n  register: RegisterFunction;\n  unregister: (id: string) => void;\n  unregisterAllChildren: (\n    parentIdGetter: (items: ContentOutlineItemContextProps[]) => string | undefined,\n    childType: ITEM_TYPES\n  ) => void;\n  updateOutlineItems: (newItems: ContentOutlineItemContextProps[]) => void;\n  updateItem: (id: string, properties: Partial<Omit<ContentOutlineItemContextProps, 'id'>>) => void;\n}\n\ninterface ContentOutlineContextProviderProps {\n  children: ReactNode;\n  /**\n   * used to resort children of an outline item when the dependencies change\n   * e.g. when the order of query rows changes on drag and drop\n   */\n  refreshDependencies?: unknown[];\n}\n\ninterface ParentlessItems {\n  [panelId: string]: ContentOutlineItemContextProps[];\n}\n\nexport const ContentOutlineContext = createContext<ContentOutlineContextProps | undefined>(undefined);\n\nexport function ContentOutlineContextProvider({ children, refreshDependencies }: ContentOutlineContextProviderProps) {\n  const [outlineItems, setOutlineItems] = useState<ContentOutlineItemContextProps[]>([]);\n  const parentlessItemsRef = useRef<ParentlessItems>({});\n\n  const register: RegisterFunction = useCallback((outlineItem) => {\n    // Allow the caller to define unique ID so the outlineItem can be differentiated\n    const id = outlineItem.id\n      ? outlineItem.id\n      : uniqueId(`${outlineItem.panelId}-${outlineItem.title}-${outlineItem.icon}_`);\n\n    setOutlineItems((prevItems) => {\n      if (outlineItem.level === 'root') {\n        const parentlessItems = parentlessItemsRef.current[outlineItem.panelId] || [];\n\n        // if item has children in parentlessItemsRef and they are filters,\n        // modify each child to have ref = outlineItem.ref\n        // so that clicking on the filter will also bring the parent item into view\n        if (parentlessItems.length > 0) {\n          parentlessItemsRef.current[outlineItem.panelId].forEach((item) => {\n            if (item.type === 'filter') {\n              item.ref = outlineItem.ref;\n            }\n          });\n        }\n\n        // remove children from parentlessItemsRef\n        parentlessItemsRef.current[outlineItem.panelId] = [];\n\n        const updatedItems = [\n          ...prevItems,\n          {\n            ...outlineItem,\n            id,\n            children: parentlessItems,\n          },\n        ];\n\n        return updatedItems.sort(sortElementsByDocumentPosition);\n      }\n\n      if (outlineItem.level === 'child') {\n        let siblingWithSameTitleFound = false;\n        // items with type filter should not have siblings with the same title\n        // look at all parentless items and check if there is a sibling with the same title\n        Object.keys(parentlessItemsRef.current).forEach((key) => {\n          const siblingWithSameTitle = parentlessItemsRef.current[key].find(\n            (item) =>\n              item.title === outlineItem.title && outlineItem.type === 'filter' && outlineItem.panelId === item.panelId\n          );\n          if (siblingWithSameTitle) {\n            siblingWithSameTitleFound = true;\n            return;\n          }\n        });\n\n        if (siblingWithSameTitleFound) {\n          return [...prevItems];\n        }\n\n        const parentIndex = prevItems.findIndex(\n          (item) => item.panelId === outlineItem.panelId && item.level === 'root'\n        );\n        if (parentIndex === -1) {\n          const parentlessItemSibling = Object.keys(parentlessItemsRef.current).find(\n            (key) => key === outlineItem.panelId\n          );\n\n          if (parentlessItemSibling) {\n            parentlessItemsRef.current[outlineItem.panelId].push({\n              ...outlineItem,\n              id,\n            });\n          } else {\n            parentlessItemsRef.current[outlineItem.panelId] = [\n              {\n                ...outlineItem,\n                id,\n              },\n            ];\n          }\n          return [...prevItems];\n        }\n\n        const newItems = [...prevItems];\n        const parent = { ...newItems[parentIndex] };\n\n        // look at all registered items inside items parent and check if there is\n        // a filter sibling with the same title\n        const siblingWithSameTitle = parent.children?.find(\n          (item) =>\n            item.title === outlineItem.title && outlineItem.type === 'filter' && outlineItem.panelId === item.panelId\n        );\n        // check if sibling's highlight property has updated\n        if (siblingWithSameTitle && siblingWithSameTitle.highlight !== outlineItem.highlight) {\n          parent.children?.map((child) => {\n            if (child.title === siblingWithSameTitle?.title) {\n              child.highlight = outlineItem.highlight;\n            }\n          });\n          return [...prevItems];\n        } else if (siblingWithSameTitle) {\n          return [...prevItems];\n        }\n\n        let ref = outlineItem.ref;\n        if (outlineItem.type === 'filter') {\n          ref = parent.ref;\n        }\n\n        let childrenUpdated = [{ ...outlineItem, id, ref }, ...(parent.children || [])];\n\n        if (!outlineItem.childOnTop) {\n          childrenUpdated = sortItems(childrenUpdated);\n        }\n\n        newItems[parentIndex] = {\n          ...parent,\n          children: childrenUpdated,\n        };\n\n        return newItems;\n      }\n\n      return [...prevItems];\n    });\n\n    return id;\n  }, []);\n\n  const unregister = useCallback((id: string) => {\n    setOutlineItems((prevItems) =>\n      prevItems\n        .filter((item) => item.id !== id)\n        .map((item) => {\n          if (item.children) {\n            item.children = item.children.filter((child) => child.id !== id);\n          }\n          return item;\n        })\n    );\n  }, []);\n\n  const updateOutlineItems = useCallback((newItems: ContentOutlineItemContextProps[]) => {\n    setOutlineItems(newItems);\n  }, []);\n\n  const updateItem = useCallback((id: string, properties: Partial<Omit<ContentOutlineItemContextProps, 'id'>>) => {\n    setOutlineItems((prevItems) =>\n      prevItems.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            ...properties,\n          };\n        }\n        return item;\n      })\n    );\n  }, []);\n\n  const unregisterAllChildren = useCallback(\n    (parentIdGetter: (items: ContentOutlineItemContextProps[]) => string | undefined, childType: ITEM_TYPES) => {\n      setOutlineItems((prevItems) => {\n        const parentId = parentIdGetter(prevItems);\n        if (!parentId) {\n          return prevItems;\n        }\n        return prevItems.map((item) => {\n          if (item.id === parentId) {\n            item.children = item.children?.filter((child) => child.type !== childType);\n          }\n          return item;\n        });\n      });\n    },\n    []\n  );\n\n  useEffect(() => {\n    setOutlineItems((prevItems) => {\n      const newItems = [...prevItems];\n      for (const item of newItems) {\n        const sortedItems = sortItems(item.children || []);\n        item.children = sortedItems;\n      }\n      return newItems;\n    });\n  }, [refreshDependencies]);\n\n  return (\n    <ContentOutlineContext.Provider\n      value={{ outlineItems, register, unregister, updateOutlineItems, unregisterAllChildren, updateItem }}\n    >\n      {children}\n    </ContentOutlineContext.Provider>\n  );\n}\n\nfunction sortElementsByDocumentPosition(a: ContentOutlineItemContextProps, b: ContentOutlineItemContextProps) {\n  if (a.ref && b.ref) {\n    const diff = a.ref.compareDocumentPosition(b.ref);\n    if (diff === Node.DOCUMENT_POSITION_PRECEDING) {\n      return 1;\n    } else if (diff === Node.DOCUMENT_POSITION_FOLLOWING) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nfunction sortItems(outlineItems: ContentOutlineItemContextProps[]): ContentOutlineItemContextProps[] {\n  const [skipSort, sortable] = outlineItems.reduce<\n    [ContentOutlineItemContextProps[], ContentOutlineItemContextProps[]]\n  >(\n    (acc, item) => {\n      item.childOnTop ? acc[0].push(item) : acc[1].push(item);\n      return acc;\n    },\n    [[], []]\n  );\n\n  sortable.sort(sortElementsByDocumentPosition);\n\n  return [...skipSort, ...sortable];\n}\n\nexport function useContentOutlineContext() {\n  return useContext(ContentOutlineContext);\n}\n","import { cx, css } from '@emotion/css';\nimport { ButtonHTMLAttributes, useEffect, useRef, useState } from 'react';\nimport * as React from 'react';\n\nimport { IconName, isIconName, GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Tooltip, useTheme2 } from '@grafana/ui';\nimport { TooltipPlacement } from '@grafana/ui/src/components/Tooltip';\n\ntype CommonProps = {\n  contentOutlineExpanded?: boolean;\n  title?: string;\n  icon?: IconName | React.ReactNode;\n  tooltip?: string;\n  tooltipPlacement?: TooltipPlacement;\n  className?: string;\n  indentStyle?: string;\n  collapsible?: boolean;\n  collapsed?: boolean;\n  isActive?: boolean;\n  extraHighlight?: boolean;\n  sectionId?: string;\n  toggleCollapsed?: () => void;\n  color?: string;\n  onRemove?: () => void;\n};\n\nexport type ContentOutlineItemButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport function ContentOutlineItemButton({\n  contentOutlineExpanded,\n  title,\n  icon,\n  tooltip,\n  tooltipPlacement = 'bottom',\n  className,\n  indentStyle,\n  collapsible,\n  collapsed,\n  isActive,\n  extraHighlight,\n  sectionId,\n  toggleCollapsed,\n  color,\n  onRemove,\n  ...rest\n}: ContentOutlineItemButtonProps) {\n  const theme = useTheme2();\n  const styles = getStyles(theme, color);\n\n  const buttonStyles = cx(styles.button, className);\n\n  const textRef = useRef<HTMLElement>(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsOverflowing(textRef.current?.scrollWidth > textRef.current?.clientWidth);\n    }\n  }, [title]);\n\n  const body = (\n    <div className={cx(styles.buttonContainer, indentStyle)}>\n      {collapsible && (\n        <button\n          className={styles.collapseButton}\n          onClick={toggleCollapsed}\n          aria-label=\"Content outline item collapse button\"\n          aria-expanded={!collapsed}\n          aria-controls={sectionId}\n        >\n          <OutlineIcon icon={collapsed ? 'angle-right' : 'angle-down'} />\n        </button>\n      )}\n      <button\n        className={cx(buttonStyles, {\n          [styles.active]: isActive,\n          [styles.extraHighlight]: extraHighlight,\n        })}\n        aria-label={tooltip}\n        {...rest}\n      >\n        <OutlineIcon icon={icon} />\n        {title && (\n          <span className={styles.textContainer} ref={textRef}>\n            {title}\n          </span>\n        )}\n      </button>\n      {onRemove && (\n        <Button\n          variant=\"destructive\"\n          className={styles.deleteButton}\n          icon=\"times\"\n          onClick={() => onRemove()}\n          data-testid=\"content-outline-item-delete-button\"\n        />\n      )}\n    </div>\n  );\n\n  // if there's a tooltip we want to show it if the text is overflowing\n  const showTooltip = tooltip && (!contentOutlineExpanded || isOverflowing);\n\n  return showTooltip ? (\n    <Tooltip content={tooltip} placement={tooltipPlacement}>\n      {body}\n    </Tooltip>\n  ) : (\n    body\n  );\n}\n\nfunction OutlineIcon({ icon }: { icon: IconName | React.ReactNode }) {\n  if (!icon) {\n    return null;\n  }\n\n  if (isIconName(icon)) {\n    return <Icon name={icon} size={'lg'} title={icon} />;\n  }\n\n  return icon;\n}\n\nconst getStyles = (theme: GrafanaTheme2, color?: string) => {\n  return {\n    buttonContainer: css({\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      flexGrow: 1,\n      gap: theme.spacing(0.25),\n      width: '100%',\n      overflow: 'hidden',\n    }),\n    button: css({\n      label: 'content-outline-item-button',\n      display: 'flex',\n      alignItems: 'center',\n      height: theme.spacing(theme.components.height.md),\n      gap: theme.spacing(0.5),\n      color: theme.colors.text.secondary,\n      width: '100%',\n      background: 'transparent',\n      overflow: 'hidden',\n      border: 'none',\n    }),\n    collapseButton: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: theme.spacing(3),\n      height: theme.spacing(4),\n      borderRadius: theme.shape.radius.default,\n      color: theme.colors.text.secondary,\n      background: 'transparent',\n      border: 'none',\n      overflow: 'hidden',\n\n      '&:hover': {\n        color: theme.colors.text.primary,\n        background: theme.colors.secondary.shade,\n      },\n    }),\n    textContainer: css({\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontSize: theme.typography.bodySmall.fontSize,\n      marginLeft: theme.spacing(0.5),\n    }),\n    active: css({\n      backgroundColor: theme.colors.background.secondary,\n      borderTopRightRadius: theme.shape.radius.default,\n      borderBottomRightRadius: theme.shape.radius.default,\n      position: 'relative',\n      height: theme.spacing(theme.components.height.md),\n\n      '&::before': {\n        backgroundImage: color !== undefined ? 'none' : theme.colors.gradients.brandVertical,\n        backgroundColor: color !== undefined ? color : 'none',\n        borderRadius: theme.shape.radius.default,\n        content: '\" \"',\n        display: 'block',\n        height: '100%',\n        position: 'absolute',\n        transform: 'translateX(-50%)',\n        width: theme.spacing(0.5),\n        left: '2px',\n      },\n    }),\n    extraHighlight: css({\n      backgroundColor: theme.colors.background.secondary,\n      borderTopRightRadius: theme.shape.radius.default,\n      borderBottomRightRadius: theme.shape.radius.default,\n      position: 'relative',\n\n      '&::before': {\n        backgroundImage: color !== undefined ? 'none' : theme.colors.gradients.brandVertical,\n        backgroundColor: color !== undefined ? color : 'none',\n        borderRadius: theme.shape.radius.default,\n        content: '\" \"',\n        display: 'block',\n        height: '100%',\n        position: 'absolute',\n        transform: 'translateX(-50%)',\n        width: theme.spacing(0.5),\n        left: '2px',\n      },\n    }),\n    deleteButton: css({\n      width: theme.spacing(1),\n      height: theme.spacing(1),\n      padding: theme.spacing(0.75, 0.75),\n      marginRight: theme.spacing(0.5),\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport { useToggle, useScroll } from 'react-use';\n\nimport { GrafanaTheme2, store } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { useStyles2, PanelContainer, CustomScrollbar } from '@grafana/ui';\n\nimport { ContentOutlineItemContextProps, useContentOutlineContext } from './ContentOutlineContext';\nimport { ContentOutlineItemButton } from './ContentOutlineItemButton';\n\nfunction scrollableChildren(item: ContentOutlineItemContextProps) {\n  return item.children?.filter((child) => child.type !== 'filter') || [];\n}\n\ntype SectionsExpanded = Record<string, boolean>;\n\nfunction shouldBeActive(\n  item: ContentOutlineItemContextProps,\n  activeSectionId: string,\n  activeSectionChildId: string | undefined,\n  sectionsExpanded: SectionsExpanded\n) {\n  const isAnActiveParent = activeSectionId === item.id;\n  const isAnActiveChild = activeSectionChildId === item.id;\n  const isCollapsed = !sectionsExpanded[item.id];\n  const containsScrollableChildren = scrollableChildren(item).length > 0;\n  const anyChildActive = isChildActive(item, activeSectionChildId) && !sectionsExpanded[item.id];\n\n  if (containsScrollableChildren) {\n    return isCollapsed && (isAnActiveParent || anyChildActive);\n  } else {\n    return isAnActiveParent || isAnActiveChild;\n  }\n}\n\nexport const CONTENT_OUTLINE_LOCAL_STORAGE_KEYS = {\n  visible: 'grafana.explore.contentOutline.visible',\n  expanded: 'grafana.explore.contentOutline.expanded',\n};\n\nexport function ContentOutline({ scroller, panelId }: { scroller: HTMLElement | undefined; panelId: string }) {\n  const [contentOutlineExpanded, toggleContentOutlineExpanded] = useToggle(\n    store.getBool(CONTENT_OUTLINE_LOCAL_STORAGE_KEYS.expanded, true)\n  );\n  const styles = useStyles2(getStyles, contentOutlineExpanded);\n  const scrollerRef = useRef(scroller || null);\n  const { y: verticalScroll } = useScroll(scrollerRef);\n  const { outlineItems } = useContentOutlineContext() ?? { outlineItems: [] };\n  const [activeSectionId, setActiveSectionId] = useState(outlineItems[0]?.id);\n  const [activeSectionChildId, setActiveSectionChildId] = useState(outlineItems[0]?.children?.[0]?.id);\n\n  const outlineItemsShouldIndent = outlineItems.some(\n    (item) => item.children && !(item.mergeSingleChild && item.children?.length === 1) && item.children.length > 0\n  );\n\n  const outlineItemsHaveDeleteButton = outlineItems.some((item) => item.children?.some((child) => child.onRemove));\n\n  const [sectionsExpanded, setSectionsExpanded] = useState(() => {\n    return outlineItems.reduce((acc: { [key: string]: boolean }, item) => {\n      acc[item.id] = !!item.expanded;\n      return acc;\n    }, {});\n  });\n\n  const scrollIntoView = (ref: HTMLElement | null, customOffsetTop = 0) => {\n    let scrollValue = 0;\n    let el: HTMLElement | null | undefined = ref;\n\n    if (!el) {\n      return;\n    }\n\n    do {\n      scrollValue += el?.offsetTop || 0;\n      el = el?.offsetParent instanceof HTMLElement ? el.offsetParent : undefined;\n    } while (el && el !== scroller);\n\n    scroller?.scroll({\n      top: scrollValue + customOffsetTop,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleItemClicked = (item: ContentOutlineItemContextProps) => {\n    if (item.level === 'child' && item.type === 'filter') {\n      const activeParent = outlineItems.find((parent) => {\n        return parent.children?.find((child) => child.id === item.id);\n      });\n\n      if (activeParent) {\n        scrollIntoView(activeParent.ref, activeParent.customTopOffset);\n      }\n    } else {\n      scrollIntoView(item.ref, item.customTopOffset);\n      reportInteraction('explore_toolbar_contentoutline_clicked', {\n        item: 'select_section',\n        type: item.panelId,\n      });\n    }\n  };\n\n  const toggle = () => {\n    store.set(CONTENT_OUTLINE_LOCAL_STORAGE_KEYS.expanded, !contentOutlineExpanded);\n    toggleContentOutlineExpanded();\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'outline',\n      type: contentOutlineExpanded ? 'minimize' : 'expand',\n    });\n  };\n\n  const toggleSection = (itemId: string) => {\n    setSectionsExpanded((prev) => ({\n      ...prev,\n      [itemId]: !prev[itemId],\n    }));\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'section',\n      type: !sectionsExpanded[itemId] ? 'minimize' : 'expand',\n    });\n  };\n\n  useEffect(() => {\n    let activeItem;\n\n    for (const item of outlineItems) {\n      let top = item?.ref?.getBoundingClientRect().top;\n\n      // Check item\n      if (top && top >= 0) {\n        activeItem = item;\n      }\n\n      // Check children\n      const activeChild = scrollableChildren(item).find((child) => {\n        const offsetTop = child.customTopOffset || 0;\n        let childTop = child?.ref?.getBoundingClientRect().top;\n        return childTop && childTop >= offsetTop;\n      });\n\n      if (activeChild && isCollapsible(item)) {\n        setActiveSectionChildId(activeChild.id);\n        setActiveSectionId(item.id);\n        break;\n      }\n\n      if (activeItem) {\n        setActiveSectionId(activeItem.id);\n        setActiveSectionChildId(undefined);\n        break;\n      }\n    }\n  }, [outlineItems, verticalScroll]);\n\n  return (\n    <PanelContainer className={styles.wrapper} id={panelId}>\n      <CustomScrollbar>\n        <div className={styles.content}>\n          <ContentOutlineItemButton\n            icon={'arrow-from-right'}\n            tooltip={contentOutlineExpanded ? 'Collapse outline' : 'Expand outline'}\n            tooltipPlacement={contentOutlineExpanded ? 'right' : 'bottom'}\n            onClick={toggle}\n            className={cx(styles.toggleContentOutlineButton, {\n              [styles.justifyCenter]: !contentOutlineExpanded && !outlineItemsShouldIndent,\n            })}\n            aria-expanded={contentOutlineExpanded}\n          />\n\n          {outlineItems.map((item) => {\n            return (\n              <Fragment key={item.id}>\n                <ContentOutlineItemButton\n                  key={item.id}\n                  title={contentOutlineExpanded ? item.title : undefined}\n                  contentOutlineExpanded={contentOutlineExpanded}\n                  className={cx(styles.buttonStyles, {\n                    [styles.justifyCenter]: !contentOutlineExpanded && !outlineItemsHaveDeleteButton,\n                    [styles.sectionHighlighter]: isChildActive(item, activeSectionChildId) && !contentOutlineExpanded,\n                  })}\n                  indentStyle={cx({\n                    [styles.indentRoot]: !isCollapsible(item) && outlineItemsShouldIndent,\n                    [styles.sectionHighlighter]:\n                      isChildActive(item, activeSectionChildId) && !contentOutlineExpanded && sectionsExpanded[item.id],\n                  })}\n                  icon={item.icon}\n                  onClick={() => handleItemClicked(item)}\n                  tooltip={item.title}\n                  collapsible={isCollapsible(item)}\n                  collapsed={!sectionsExpanded[item.id]}\n                  toggleCollapsed={() => toggleSection(item.id)}\n                  isActive={shouldBeActive(item, activeSectionId, activeSectionChildId, sectionsExpanded)}\n                  sectionId={item.id}\n                  color={item.color}\n                />\n                <div id={item.id} data-testid={`section-wrapper-${item.id}`}>\n                  {item.children &&\n                    isCollapsible(item) &&\n                    sectionsExpanded[item.id] &&\n                    item.children.map((child, i) => (\n                      <div key={child.id} className={styles.itemWrapper}>\n                        {contentOutlineExpanded && (\n                          <div\n                            className={cx(styles.itemConnector, {\n                              [styles.firstItemConnector]: i === 0,\n                              [styles.lastItemConnector]: i === (item.children?.length || 0) - 1,\n                            })}\n                          />\n                        )}\n                        <ContentOutlineItemButton\n                          key={child.id}\n                          title={contentOutlineExpanded ? child.title : undefined}\n                          contentOutlineExpanded={contentOutlineExpanded}\n                          icon={contentOutlineExpanded ? undefined : item.icon}\n                          className={cx(styles.buttonStyles, {\n                            [styles.justifyCenter]: !contentOutlineExpanded && !outlineItemsHaveDeleteButton,\n                            [styles.sectionHighlighter]:\n                              isChildActive(item, activeSectionChildId) && !contentOutlineExpanded,\n                          })}\n                          indentStyle={styles.indentChild}\n                          onClick={(e) => {\n                            handleItemClicked(child);\n                            child.onClick?.(e);\n                          }}\n                          tooltip={child.title}\n                          isActive={shouldBeActive(child, activeSectionId, activeSectionChildId, sectionsExpanded)}\n                          extraHighlight={child.highlight}\n                          color={child.color}\n                          onRemove={child.onRemove ? () => child.onRemove?.(child.id) : undefined}\n                        />\n                      </div>\n                    ))}\n                </div>\n              </Fragment>\n            );\n          })}\n        </div>\n      </CustomScrollbar>\n    </PanelContainer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, expanded: boolean) => {\n  return {\n    wrapper: css({\n      label: 'wrapper',\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      marginRight: theme.spacing(1),\n      height: '100%',\n      backgroundColor: theme.colors.background.primary,\n      width: expanded ? '160px' : undefined,\n      minWidth: expanded ? '160px' : undefined,\n    }),\n    content: css({\n      label: 'content',\n      marginLeft: theme.spacing(0.5),\n      top: 0,\n    }),\n    buttonStyles: css({\n      display: 'flex',\n      '&:hover': {\n        color: theme.colors.text.primary,\n        textDecoration: 'underline',\n      },\n    }),\n    toggleContentOutlineButton: css({\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n      transform: expanded ? 'rotate(180deg)' : '',\n      marginRight: expanded ? theme.spacing(0.5) : undefined,\n    }),\n    indentRoot: css({\n      paddingLeft: theme.spacing(3),\n    }),\n    indentChild: css({\n      paddingLeft: expanded ? theme.spacing(5) : theme.spacing(2.75),\n    }),\n    itemWrapper: css({\n      display: 'flex',\n      height: theme.spacing(4),\n      alignItems: 'center',\n    }),\n    itemConnector: css({\n      position: 'relative',\n      height: '100%',\n      width: theme.spacing(1.5),\n      '&::before': {\n        borderRight: `1px solid ${theme.colors.border.medium}`,\n        content: '\"\"',\n        height: '100%',\n        left: theme.spacing(4.75),\n        position: 'absolute',\n        transform: 'translateX(50%)',\n      },\n    }),\n    firstItemConnector: css({\n      '&::before': {\n        top: theme.spacing(1),\n        height: `calc(100% - ${theme.spacing(1)})`,\n      },\n    }),\n    lastItemConnector: css({\n      '&::before': {\n        height: `calc(100% - ${theme.spacing(1)})`,\n      },\n    }),\n    justifyCenter: css({\n      justifyContent: 'center',\n    }),\n    sectionHighlighter: css({\n      backgroundColor: theme.colors.background.secondary,\n    }),\n  };\n};\n\nfunction isCollapsible(item: ContentOutlineItemContextProps): boolean {\n  return !!(item.children && item.children.length > 0 && (!item.mergeSingleChild || item.children.length !== 1));\n}\n\nfunction isChildActive(item: ContentOutlineItemContextProps, activeSectionChildId: string | undefined) {\n  return item.children?.some((child) => child.id === activeSectionChildId);\n}\n","import { useEffect, useRef, ReactNode } from 'react';\nimport * as React from 'react';\n\nimport { useContentOutlineContext } from './ContentOutlineContext';\n\ntype INDENT_LEVELS = 'root' | 'child';\n\nexport type ITEM_TYPES = 'scrollIntoView' | 'filter';\n\nexport interface ContentOutlineItemBaseProps {\n  panelId: string;\n  title: string;\n  icon: string;\n  /**\n   * Custom offset from the top of the Explore container when scrolling to this item.\n   * Items like query row need some offset so the top of the query row is not hidden behind the header.\n   */\n  customTopOffset?: number;\n  /**\n   * The level of indentation for this item.\n   * - `root` is the top level item.\n   * - `child` is an item that is a child of an item with `root` level.\n   */\n  level?: INDENT_LEVELS;\n  /**\n   * Merges a single child of this item with this item.\n   * e.g. It doesn't make sense to nest a single query row under a queries container\n   * because user can navigate to the query row by navigating to the queries container.\n   */\n  mergeSingleChild?: boolean;\n  // callback that is called when the item is clicked\n  // need this for filtering logs\n  onClick?: (e: React.MouseEvent) => void;\n  type?: ITEM_TYPES;\n  /**\n   * Client can additionally mark filter actions as highlighted\n   */\n  highlight?: boolean;\n  onRemove?: (id: string) => void;\n  /**\n   * Child that will always be on top of the list\n   * e.g. pinned log in Logs section\n   */\n  childOnTop?: boolean;\n  expanded?: boolean;\n}\n\ninterface ContentOutlineItemProps extends ContentOutlineItemBaseProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function ContentOutlineItem({\n  panelId,\n  title,\n  icon,\n  customTopOffset,\n  children,\n  className,\n  level = 'root',\n  mergeSingleChild,\n  type = 'scrollIntoView',\n  onClick,\n}: ContentOutlineItemProps) {\n  const { register, unregister } = useContentOutlineContext() ?? {};\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (!register || !unregister) {\n      return;\n    }\n\n    // When the component mounts, register it and get its unique ID.\n    const id = register({\n      panelId: panelId,\n      title: title,\n      icon: icon,\n      ref: ref.current,\n      customTopOffset: customTopOffset,\n      level: level,\n      mergeSingleChild,\n      type,\n    });\n\n    // When the component unmounts, unregister it using its unique ID.\n    return () => unregister(id);\n  }, [panelId, title, icon, customTopOffset, level, mergeSingleChild, register, unregister, type, onClick]);\n\n  return (\n    <div className={className} ref={ref}>\n      {children}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useId, useState, useMemo, useEffect } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { DataLinkTransformationConfig, ScopedVars } from '@grafana/data';\nimport { Button, Field, Icon, Input, Label, Modal, Select, Tooltip, Stack } from '@grafana/ui';\n\nimport {\n  getSupportedTransTypeDetails,\n  getTransformOptions,\n  TransformationFieldDetails,\n} from '../correlations/Forms/types';\nimport { getTransformationVars } from '../correlations/transformations';\n\ninterface CorrelationTransformationAddModalProps {\n  onCancel: () => void;\n  onSave: (transformation: DataLinkTransformationConfig) => void;\n  fieldList: Record<string, string>;\n  transformationToEdit?: DataLinkTransformationConfig;\n}\n\ninterface ShowFormFields {\n  expressionDetails: TransformationFieldDetails;\n  mapValueDetails: TransformationFieldDetails;\n}\n\nconst LabelWithTooltip = ({ label, tooltipText }: { label: string; tooltipText: string }) => (\n  <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"flex-start\">\n    <Label>{label}</Label>\n    <Tooltip content={tooltipText}>\n      <Icon name=\"info-circle\" size=\"sm\" />\n    </Tooltip>\n  </Stack>\n);\n\nexport const CorrelationTransformationAddModal = ({\n  onSave,\n  onCancel,\n  fieldList,\n  transformationToEdit,\n}: CorrelationTransformationAddModalProps) => {\n  const [exampleValue, setExampleValue] = useState<string | undefined>(undefined);\n  const [transformationVars, setTransformationVars] = useState<ScopedVars>({});\n  const [formFieldsVis, setFormFieldsVis] = useState<ShowFormFields>({\n    mapValueDetails: { show: false },\n    expressionDetails: { show: false },\n  });\n  const [isExpValid, setIsExpValid] = useState(false); // keep the highlighter from erroring on bad expressions\n  const [validToSave, setValidToSave] = useState(false);\n  const { getValues, control, register, watch } = useForm<DataLinkTransformationConfig>({\n    defaultValues: useMemo(() => {\n      if (transformationToEdit) {\n        const exampleVal = fieldList[transformationToEdit?.field!];\n        setExampleValue(exampleVal);\n        if (transformationToEdit?.expression) {\n          setIsExpValid(true);\n        }\n        const transformationTypeDetails = getSupportedTransTypeDetails(transformationToEdit?.type!);\n        setFormFieldsVis({\n          mapValueDetails: transformationTypeDetails.mapValueDetails,\n          expressionDetails: transformationTypeDetails.expressionDetails,\n        });\n\n        const transformationVars = getTransformationVars(\n          {\n            type: transformationToEdit?.type!,\n            expression: transformationToEdit?.expression,\n            mapValue: transformationToEdit?.mapValue,\n          },\n          exampleVal || '',\n          transformationToEdit?.field!\n        );\n        setTransformationVars({ ...transformationVars });\n        setValidToSave(true);\n        return {\n          type: transformationToEdit?.type,\n          field: transformationToEdit?.field,\n          mapValue: transformationToEdit?.mapValue,\n          expression: transformationToEdit?.expression,\n        };\n      } else {\n        return undefined;\n      }\n    }, [fieldList, transformationToEdit]),\n  });\n  const id = useId();\n\n  useEffect(() => {\n    const subscription = watch((formValues) => {\n      const expression = formValues.expression;\n      let isExpressionValid = false;\n      if (expression !== undefined) {\n        isExpressionValid = true;\n        try {\n          new RegExp(expression);\n        } catch (e) {\n          isExpressionValid = false;\n        }\n      } else {\n        isExpressionValid = !formFieldsVis.expressionDetails.show;\n      }\n      setIsExpValid(isExpressionValid);\n      let transKeys = [];\n      if (formValues.type) {\n        const transformationVars = getTransformationVars(\n          {\n            type: formValues.type,\n            expression: isExpressionValid ? expression : '',\n            mapValue: formValues.mapValue,\n          },\n          fieldList[formValues.field!] || '',\n          formValues.field!\n        );\n\n        transKeys = Object.keys(transformationVars);\n        setTransformationVars(transKeys.length > 0 ? { ...transformationVars } : {});\n      }\n\n      if (transKeys.length === 0 || !isExpressionValid) {\n        setValidToSave(false);\n      } else {\n        setValidToSave(true);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [fieldList, formFieldsVis.expressionDetails.show, watch]);\n\n  return (\n    <Modal\n      isOpen={true}\n      title={`${transformationToEdit ? 'Edit' : 'Add'} transformation`}\n      onDismiss={onCancel}\n      className={css({ width: '700px' })}\n    >\n      <p>\n        A transformation extracts variables out of a single field. These variables will be available along with your\n        field variables.\n      </p>\n      <Field label=\"Field\">\n        <Controller\n          control={control}\n          render={({ field: { onChange, ref, ...field } }) => (\n            <Select\n              {...field}\n              onChange={(value) => {\n                if (value.value) {\n                  onChange(value.value);\n                  setExampleValue(fieldList[value.value]);\n                }\n              }}\n              options={Object.entries(fieldList).map((entry) => {\n                return { label: entry[0], value: entry[0] };\n              })}\n              aria-label=\"field\"\n            />\n          )}\n          name={`field` as const}\n        />\n      </Field>\n\n      {exampleValue && (\n        <>\n          <pre>\n            <Highlighter\n              textToHighlight={exampleValue}\n              searchWords={[isExpValid ? (getValues('expression') ?? '') : '']}\n              autoEscape={false}\n            />\n          </pre>\n          <Field label=\"Type\">\n            <Controller\n              control={control}\n              render={({ field: { onChange, ref, ...field } }) => (\n                <Select\n                  {...field}\n                  onChange={(value) => {\n                    onChange(value.value);\n                    const transformationTypeDetails = getSupportedTransTypeDetails(value.value!);\n                    setFormFieldsVis({\n                      mapValueDetails: transformationTypeDetails.mapValueDetails,\n                      expressionDetails: transformationTypeDetails.expressionDetails,\n                    });\n                  }}\n                  options={getTransformOptions()}\n                  aria-label=\"type\"\n                />\n              )}\n              name={`type` as const}\n            />\n          </Field>\n          {formFieldsVis.expressionDetails.show && (\n            <Field\n              label={\n                formFieldsVis.expressionDetails.helpText ? (\n                  <LabelWithTooltip label=\"Expression\" tooltipText={formFieldsVis.expressionDetails.helpText} />\n                ) : (\n                  'Expression'\n                )\n              }\n              htmlFor={`${id}-expression`}\n              required={formFieldsVis.expressionDetails.required}\n            >\n              <Input {...register('expression')} id={`${id}-expression`} />\n            </Field>\n          )}\n          {formFieldsVis.mapValueDetails.show && (\n            <Field\n              label={\n                formFieldsVis.mapValueDetails.helpText ? (\n                  <LabelWithTooltip label=\"Variable Name\" tooltipText={formFieldsVis.mapValueDetails.helpText} />\n                ) : (\n                  'Variable Name'\n                )\n              }\n              htmlFor={`${id}-mapValue`}\n            >\n              <Input {...register('mapValue')} id={`${id}-mapValue`} />\n            </Field>\n          )}\n          {Object.entries(transformationVars).length > 0 && (\n            <>\n              This transformation will add the following variables:\n              <pre>\n                {Object.entries(transformationVars).map((entry) => {\n                  return `\\$\\{${entry[0]}\\} = ${entry[1]?.value}\\n`;\n                })}\n              </pre>\n            </>\n          )}\n        </>\n      )}\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onCancel} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={() => onSave(getValues())} disabled={!validToSave}>\n          {transformationToEdit ? 'Edit transformation' : 'Add transformation to correlation'}\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","import { css } from '@emotion/css';\nimport { useState, useEffect, useId } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAsync } from 'react-use';\n\nimport { DataLinkTransformationConfig, ExploreCorrelationHelperData, GrafanaTheme2 } from '@grafana/data';\nimport {\n  Collapse,\n  Alert,\n  Field,\n  Input,\n  Button,\n  Card,\n  IconButton,\n  useStyles2,\n  DeleteButton,\n  Tooltip,\n  Icon,\n  Stack,\n} from '@grafana/ui';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { getTransformationVars } from '../correlations/transformations';\nimport { generateDefaultLabel } from '../correlations/utils';\n\nimport { CorrelationTransformationAddModal } from './CorrelationTransformationAddModal';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport { changeCorrelationEditorDetails } from './state/main';\nimport { selectCorrelationDetails, selectPanes } from './state/selectors';\n\ninterface Props {\n  exploreId: string;\n  correlations: ExploreCorrelationHelperData;\n}\n\ninterface FormValues {\n  label: string;\n  description: string;\n}\n\nexport const CorrelationHelper = ({ exploreId, correlations }: Props) => {\n  const dispatch = useDispatch();\n  const styles = useStyles2(getStyles);\n  const panes = useSelector(selectPanes);\n  const panesVals = Object.values(panes);\n  const { value: defaultLabel, loading: loadingLabel } = useAsync(\n    async () => await generateDefaultLabel(panesVals[0]!, panesVals[1]!),\n    [\n      panesVals[0]?.datasourceInstance,\n      panesVals[0]?.queries[0].datasource,\n      panesVals[1]?.datasourceInstance,\n      panesVals[1]?.queries[0].datasource,\n    ]\n  );\n\n  const { register, watch, getValues, setValue } = useForm<FormValues>();\n  const [isLabelDescOpen, setIsLabelDescOpen] = useState(false);\n  const [isTransformOpen, setIsTransformOpen] = useState(false);\n  const [showTransformationAddModal, setShowTransformationAddModal] = useState(false);\n  const [transformations, setTransformations] = useState<DataLinkTransformationConfig[]>([]);\n  const [transformationIdxToEdit, setTransformationIdxToEdit] = useState<number | undefined>(undefined);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const id = useId();\n\n  // only fire once on mount to allow save button to enable / disable when unmounted\n  useEffect(() => {\n    dispatch(changeCorrelationEditorDetails({ canSave: true }));\n    return () => {\n      dispatch(changeCorrelationEditorDetails({ canSave: false }));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (\n      !loadingLabel &&\n      defaultLabel !== undefined &&\n      !correlationDetails?.correlationDirty &&\n      getValues('label') !== ''\n    ) {\n      setValue('label', defaultLabel);\n    }\n  }, [correlationDetails?.correlationDirty, defaultLabel, getValues, loadingLabel, setValue]);\n\n  useEffect(() => {\n    const subscription = watch((value) => {\n      let dirty = correlationDetails?.correlationDirty || false;\n      let description = value.description || '';\n      if (!dirty && (value.label !== defaultLabel || description !== '')) {\n        dirty = true;\n      } else if (dirty && value.label === defaultLabel && description.trim() === '') {\n        dirty = false;\n      }\n      dispatch(\n        changeCorrelationEditorDetails({ label: value.label, description: value.description, correlationDirty: dirty })\n      );\n    });\n    return () => subscription.unsubscribe();\n  }, [correlationDetails?.correlationDirty, defaultLabel, dispatch, watch]);\n\n  useEffect(() => {\n    const dirty =\n      !correlationDetails?.correlationDirty && transformations.length > 0 ? true : correlationDetails?.correlationDirty;\n    dispatch(changeCorrelationEditorDetails({ transformations: transformations, correlationDirty: dirty }));\n    let transVarRecords: Record<string, string> = {};\n    transformations.forEach((transformation) => {\n      const transformationVars = getTransformationVars(\n        {\n          type: transformation.type,\n          expression: transformation.expression,\n          mapValue: transformation.mapValue,\n        },\n        correlations.vars[transformation.field!],\n        transformation.field!\n      );\n\n      Object.keys(transformationVars).forEach((key) => {\n        transVarRecords[key] = transformationVars[key]?.value;\n      });\n    });\n\n    dispatch(\n      changeCorrelationHelperData({\n        exploreId: exploreId,\n        correlationEditorHelperData: {\n          resultField: correlations.resultField,\n          origVars: correlations.origVars,\n          vars: { ...correlations.origVars, ...transVarRecords },\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, transformations]);\n\n  return (\n    <>\n      {showTransformationAddModal && (\n        <CorrelationTransformationAddModal\n          onCancel={() => {\n            setTransformationIdxToEdit(undefined);\n            setShowTransformationAddModal(false);\n          }}\n          onSave={(transformation: DataLinkTransformationConfig) => {\n            if (transformationIdxToEdit !== undefined) {\n              const editTransformations = [...transformations];\n              editTransformations[transformationIdxToEdit] = transformation;\n              setTransformations(editTransformations);\n              setTransformationIdxToEdit(undefined);\n            } else {\n              setTransformations([...transformations, transformation]);\n            }\n            setShowTransformationAddModal(false);\n          }}\n          fieldList={correlations.origVars}\n          transformationToEdit={\n            transformationIdxToEdit !== undefined ? transformations[transformationIdxToEdit] : undefined\n          }\n        />\n      )}\n      <Alert title=\"Correlation details\" severity=\"info\">\n        The correlation link will appear by the <code>{correlations.resultField}</code> field. You can use the following\n        variables to set up your correlations:\n        <pre>\n          {Object.entries(correlations.vars).map((entry) => {\n            return `\\$\\{${entry[0]}\\} = ${entry[1]}\\n`;\n          })}\n        </pre>\n        <Collapse\n          collapsible\n          isOpen={isLabelDescOpen}\n          onToggle={() => {\n            setIsLabelDescOpen(!isLabelDescOpen);\n          }}\n          label={\n            <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"center\">\n              Label / Description\n              {!isLabelDescOpen && !loadingLabel && (\n                <span className={styles.labelCollapseDetails}>{`Label: ${getValues('label') || defaultLabel}`}</span>\n              )}\n            </Stack>\n          }\n        >\n          <Field label=\"Label\" htmlFor={`${id}-label`}>\n            <Input\n              {...register('label')}\n              id={`${id}-label`}\n              onBlur={() => {\n                if (getValues('label') === '' && defaultLabel !== undefined) {\n                  setValue('label', defaultLabel);\n                }\n              }}\n            />\n          </Field>\n          <Field label=\"Description\" htmlFor={`${id}-description`}>\n            <Input {...register('description')} id={`${id}-description`} />\n          </Field>\n        </Collapse>\n        <Collapse\n          collapsible\n          isOpen={isTransformOpen}\n          onToggle={() => {\n            setIsTransformOpen(!isTransformOpen);\n          }}\n          label={\n            <Stack gap={1} direction=\"row\" wrap=\"wrap\" alignItems=\"center\">\n              Transformations\n              <Tooltip content=\"A transformation extracts one or more variables out of a single field.\">\n                <Icon name=\"info-circle\" size=\"sm\" />\n              </Tooltip>\n            </Stack>\n          }\n        >\n          <Button\n            variant=\"secondary\"\n            fill=\"outline\"\n            onClick={() => {\n              setShowTransformationAddModal(true);\n            }}\n            className={styles.transformationAction}\n          >\n            Add transformation\n          </Button>\n          {transformations.map((transformation, i) => {\n            const { type, field, expression, mapValue } = transformation;\n            const detailsString = [\n              (mapValue ?? '').length > 0 ? `Variable name: ${mapValue}` : undefined,\n              (expression ?? '').length > 0 ? (\n                <>\n                  Expression: <code>{expression}</code>\n                </>\n              ) : undefined,\n            ].filter((val) => val);\n            return (\n              <Card key={`trans-${i}`}>\n                <Card.Heading>\n                  {field}: {type}\n                </Card.Heading>\n                {detailsString.length > 0 && (\n                  <Card.Meta className={styles.transformationMeta}>{detailsString}</Card.Meta>\n                )}\n                <Card.SecondaryActions>\n                  <IconButton\n                    key=\"edit\"\n                    name=\"edit\"\n                    aria-label=\"edit transformation\"\n                    onClick={() => {\n                      setTransformationIdxToEdit(i);\n                      setShowTransformationAddModal(true);\n                    }}\n                  />\n                  <DeleteButton\n                    aria-label=\"delete transformation\"\n                    onConfirm={() => setTransformations(transformations.filter((_, idx) => i !== idx))}\n                    closeOnConfirm\n                  />\n                </Card.SecondaryActions>\n              </Card>\n            );\n          })}\n        </Collapse>\n      </Alert>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    labelCollapseDetails: css({\n      marginLeft: theme.spacing(2),\n      ...theme.typography['bodySmall'],\n      fontStyle: 'italic',\n    }),\n    transformationAction: css({\n      marginBottom: theme.spacing(2),\n    }),\n    transformationMeta: css({\n      alignItems: 'baseline',\n    }),\n  };\n};\n","import { DataFrame, EventBus, LoadingState, SplitOpen, TimeRange } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { PanelChrome, PanelContext, PanelContextProvider } from '@grafana/ui';\n\nimport { getPanelPluginMeta } from '../plugins/importPanelPlugin';\n\nimport { useExploreDataLinkPostProcessor } from './hooks/useExploreDataLinkPostProcessor';\n\nexport interface Props {\n  width: number;\n  height: number;\n  timeZone: string;\n  pluginId: string;\n  frames: DataFrame[];\n  timeRange: TimeRange;\n  state: LoadingState;\n  splitOpenFn: SplitOpen;\n  eventBus: EventBus;\n}\n\nexport function CustomContainer({\n  width,\n  height,\n  timeZone,\n  state,\n  pluginId,\n  frames,\n  timeRange,\n  splitOpenFn,\n  eventBus,\n}: Props) {\n  const plugin = getPanelPluginMeta(pluginId);\n\n  const dataLinkPostProcessor = useExploreDataLinkPostProcessor(splitOpenFn, timeRange);\n\n  const panelContext: PanelContext = {\n    dataLinkPostProcessor,\n    eventBus,\n    eventsScope: 'explore',\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      <PanelChrome title={plugin.name} width={width} height={height} loadingState={state}>\n        {(innerWidth, innerHeight) => (\n          <PanelRenderer\n            data={{ series: frames, state: state, timeRange }}\n            pluginId={pluginId}\n            title=\"\"\n            width={innerWidth}\n            height={innerHeight}\n            timeZone={timeZone}\n          />\n        )}\n      </PanelChrome>\n    </PanelContextProvider>\n  );\n}\n","import { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'canvas'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import { Component } from 'react';\n\nimport { TimeRange, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: string;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        isOnCanvas\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport { useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const transitionRef = useRef(null);\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'canvas';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n        nodeRef={transitionRef}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton ref={transitionRef} variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css({\n    label: 'stopButtonEnter',\n    width: 0,\n    opacity: 0,\n    overflow: 'hidden',\n  }),\n  stopButtonEnterActive: css({\n    label: 'stopButtonEnterActive',\n    opacity: 1,\n    width: '32px',\n  }),\n  stopButtonExit: css({\n    label: 'stopButtonExit',\n    width: '32px',\n    opacity: 1,\n    overflow: 'hidden',\n  }),\n  stopButtonExitActive: css({\n    label: 'stopButtonExitActive',\n    opacity: 0,\n    width: 0,\n  }),\n};\n","import { reportInteraction } from '@grafana/runtime';\n\nconst QUERY_LIBRARY_EXPLORE_EVENT = 'query_library_explore_clicked';\n\nexport function queryLibraryTrackToggle(open: boolean) {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'query_library_toggle',\n    type: open ? 'open' : 'close',\n  });\n}\n\nexport function queryLibraryTrackAddFromQueryHistory(datasourceType: string) {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'add_query_from_query_history',\n    type: datasourceType,\n  });\n}\n\nexport function queryLibraryTrackAddFromQueryHistoryAddModalShown() {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'add_query_modal_from_query_history',\n    type: 'open',\n  });\n}\n\nexport function queryLibraryTrackAddFromQueryRow(datasourceType: string) {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'add_query_from_query_row',\n    type: datasourceType,\n  });\n}\n\nexport function queryLibaryTrackDeleteQuery() {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'delete_query',\n  });\n}\n\nexport function queryLibraryTrackRunQuery(datasourceType: string) {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'run_query',\n    type: datasourceType,\n  });\n}\n\nexport function queryLibraryTrackAddOrEditDescription() {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'add_or_edit_description',\n  });\n}\n\nexport function queryLibraryTrackFilterDatasource() {\n  reportInteraction(QUERY_LIBRARY_EXPLORE_EVENT, {\n    item: 'filter_datasource',\n  });\n}\n","import { PropsWithChildren, useState, createContext, useContext, useEffect } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { useSelector } from 'app/types';\n\nimport { selectRichHistorySettings } from '../state/selectors';\n\nexport enum Tabs {\n  QueryLibrary = 'Query library',\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\ntype QueryLibraryContextType = {\n  selectedTab?: Tabs;\n  setSelectedTab: (tab: Tabs) => void;\n  queryLibraryAvailable: boolean;\n  drawerOpened: boolean;\n  setDrawerOpened: (value: boolean) => void;\n};\n\nexport const QueriesDrawerContext = createContext<QueryLibraryContextType>({\n  selectedTab: undefined,\n  setSelectedTab: () => {},\n  queryLibraryAvailable: false,\n  drawerOpened: false,\n  setDrawerOpened: () => {},\n});\n\nexport function useQueriesDrawerContext() {\n  return useContext(QueriesDrawerContext);\n}\n\nexport function QueriesDrawerContextProvider({ children }: PropsWithChildren) {\n  const queryLibraryAvailable = config.featureToggles.queryLibrary === true;\n  const [selectedTab, setSelectedTab] = useState<Tabs | undefined>(\n    queryLibraryAvailable ? Tabs.QueryLibrary : undefined\n  );\n  const [drawerOpened, setDrawerOpened] = useState<boolean>(false);\n\n  const settings = useSelector(selectRichHistorySettings);\n\n  useEffect(() => {\n    if (settings && !queryLibraryAvailable) {\n      setSelectedTab(settings.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory);\n    }\n  }, [settings, setSelectedTab, queryLibraryAvailable]);\n\n  return (\n    <QueriesDrawerContext.Provider\n      value={{\n        queryLibraryAvailable,\n        selectedTab,\n        setSelectedTab,\n        drawerOpened,\n        setDrawerOpened,\n      }}\n    >\n      {children}\n    </QueriesDrawerContext.Provider>\n  );\n}\n","import { t } from 'app//core/internationalization';\n\nexport const i18n = {\n  queryLibrary: t('explore.rich-history.query-library', 'Query library'),\n  queryHistory: t('explore.rich-history.query-history', 'Query history'),\n};\n","import { css } from '@emotion/css';\n\nimport { Button, ButtonGroup, Dropdown, Menu, ToolbarButton } from '@grafana/ui';\nimport { useStyles2 } from '@grafana/ui/';\n\nimport { queryLibraryTrackToggle } from '../QueryLibrary/QueryLibraryAnalyticsEvents';\n\nimport { Tabs, useQueriesDrawerContext } from './QueriesDrawerContext';\nimport { i18n } from './utils';\n\ntype Props = {\n  variant: 'compact' | 'full';\n};\n\nexport function QueriesDrawerDropdown({ variant }: Props) {\n  const { selectedTab, setSelectedTab, queryLibraryAvailable, drawerOpened, setDrawerOpened } =\n    useQueriesDrawerContext();\n\n  const styles = useStyles2(getStyles);\n\n  if (!queryLibraryAvailable) {\n    return undefined;\n  }\n\n  function toggle(tab: Tabs) {\n    tab === Tabs.QueryLibrary && queryLibraryTrackToggle(!drawerOpened);\n\n    setSelectedTab(tab);\n    setDrawerOpened(false);\n    setDrawerOpened(true);\n  }\n\n  const menu = (\n    <Menu>\n      <Menu.Item label={i18n.queryLibrary} onClick={() => toggle(Tabs.QueryLibrary)} />\n      <Menu.Item label={i18n.queryHistory} onClick={() => toggle(Tabs.RichHistory)} />\n    </Menu>\n  );\n\n  return (\n    <ButtonGroup>\n      <ToolbarButton\n        icon=\"book\"\n        variant={drawerOpened ? 'active' : 'canvas'}\n        onClick={() => {\n          setDrawerOpened(!drawerOpened);\n          selectedTab === Tabs.QueryLibrary && queryLibraryTrackToggle(!drawerOpened);\n        }}\n        aria-label={selectedTab}\n      >\n        {variant === 'full' ? selectedTab : undefined}\n      </ToolbarButton>\n      {drawerOpened ? (\n        <Button\n          className={styles.close}\n          variant=\"secondary\"\n          icon=\"times\"\n          onClick={() => {\n            setDrawerOpened(false);\n            selectedTab === Tabs.QueryLibrary && queryLibraryTrackToggle(false);\n          }}\n        ></Button>\n      ) : (\n        <Dropdown overlay={menu}>\n          <ToolbarButton className={styles.toggle} variant=\"canvas\" icon=\"angle-down\" />\n        </Dropdown>\n      )}\n    </ButtonGroup>\n  );\n}\n\nconst getStyles = () => ({\n  toggle: css({ width: '36px' }),\n  // tweaking icon position so it's nicely aligned when dropdown turns into a close button\n  close: css({ width: '36px', '> svg': { position: 'relative', left: 2 } }),\n});\n","import { useState } from 'react';\n\nimport { IconName } from '@grafana/data';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport { ToolbarButton, Dropdown, Menu, Stack, ToolbarButtonRow, MenuGroup } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { useSelector } from 'app/types';\n\nimport { selectPanes } from './state/selectors';\nimport { constructAbsoluteUrl } from './utils/links';\n\ninterface ShortLinkGroupData {\n  key: string;\n  label: string;\n  items: ShortLinkMenuItemData[];\n}\n\ninterface ShortLinkMenuItemData {\n  key: string;\n  label: string;\n  icon: IconName;\n  getUrl: Function;\n  shorten: boolean;\n  absTime: boolean;\n}\n\nconst defaultMode: ShortLinkMenuItemData = {\n  key: 'copy-link',\n  label: t('explore.toolbar.copy-shortened-link', 'Copy shortened URL'),\n  icon: 'share-alt',\n  getUrl: () => undefined,\n  shorten: true,\n  absTime: false,\n};\n\nexport function ShortLinkButtonMenu() {\n  const panes = useSelector(selectPanes);\n  const [isOpen, setIsOpen] = useState(false);\n  const [lastSelected, setLastSelected] = useState(defaultMode);\n  const onCopyLink = (shorten: boolean, absTime: boolean, url?: string) => {\n    if (shorten) {\n      createAndCopyShortLink(url || global.location.href);\n      reportInteraction('grafana_explore_shortened_link_clicked', { isAbsoluteTime: absTime });\n    } else {\n      copyStringToClipboard(\n        url !== undefined\n          ? `${window.location.protocol}//${window.location.host}${config.appSubUrl}${url}`\n          : global.location.href\n      );\n      reportInteraction('grafana_explore_copy_link_clicked', { isAbsoluteTime: absTime });\n    }\n  };\n\n  const menuOptions: ShortLinkGroupData[] = [\n    {\n      key: 'normal',\n      label: t('explore.toolbar.copy-links-normal-category', 'Normal URL links'),\n      items: [\n        {\n          key: 'copy-shortened-link',\n          icon: 'link',\n          label: t('explore.toolbar.copy-shortened-link', 'Copy shortened URL'),\n          getUrl: () => undefined,\n          shorten: true,\n          absTime: false,\n        },\n        {\n          key: 'copy-link',\n          icon: 'link',\n          label: t('explore.toolbar.copy-link', 'Copy URL'),\n          getUrl: () => undefined,\n          shorten: false,\n          absTime: false,\n        },\n      ],\n    },\n    {\n      key: 'timesync',\n      label: t('explore.toolbar.copy-links-absolute-category', 'Time-sync URL links (share with time range intact)'),\n      items: [\n        {\n          key: 'copy-short-link-abs-time',\n          icon: 'clock-nine',\n          label: t('explore.toolbar.copy-shortened-link-abs-time', 'Copy absolute shortened URL'),\n          shorten: true,\n          getUrl: () => {\n            return constructAbsoluteUrl(panes);\n          },\n          absTime: true,\n        },\n        {\n          key: 'copy-link-abs-time',\n          icon: 'clock-nine',\n          label: t('explore.toolbar.copy-link-abs-time', 'Copy absolute URL'),\n          shorten: false,\n          getUrl: () => {\n            return constructAbsoluteUrl(panes);\n          },\n          absTime: true,\n        },\n      ],\n    },\n  ];\n\n  const MenuActions = (\n    <Menu>\n      {menuOptions.map((groupOption) => {\n        return (\n          <MenuGroup key={groupOption.key} label={groupOption.label}>\n            {groupOption.items.map((option) => {\n              return (\n                <Menu.Item\n                  key={option.key}\n                  label={option.label}\n                  icon={option.icon}\n                  onClick={() => {\n                    const url = option.getUrl();\n                    onCopyLink(option.shorten, option.absTime, url);\n                    setLastSelected(option);\n                  }}\n                />\n              );\n            })}\n          </MenuGroup>\n        );\n      })}\n    </Menu>\n  );\n\n  // we need the Toolbar button click to be an action separate from opening/closing the menu\n  return (\n    <ToolbarButtonRow>\n      <Stack gap={0} direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\n        <ToolbarButton\n          tooltip={lastSelected.label}\n          icon={lastSelected.icon}\n          iconOnly={true}\n          narrow={true}\n          onClick={() => {\n            const url = lastSelected.getUrl();\n            onCopyLink(lastSelected.shorten, lastSelected.absTime, url);\n          }}\n          aria-label={t('explore.toolbar.copy-shortened-link', 'Copy shortened URL')}\n        />\n        <Dropdown overlay={MenuActions} placement=\"bottom-end\" onVisibleChange={setIsOpen}>\n          <ToolbarButton\n            narrow={true}\n            isOpen={isOpen}\n            aria-label={t('explore.toolbar.copy-shortened-link-menu', 'Open copy link options')}\n          />\n        </Dropdown>\n      </Stack>\n    </ToolbarButtonRow>\n  );\n}\n","import { lazy, ReactElement, Suspense, useMemo, useState } from 'react';\n\nimport { type PluginExtensionLink, PluginExtensionPoints, RawTimeRange, getTimeZone } from '@grafana/data';\nimport { config, usePluginLinks } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Dropdown, ToolbarButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction, ExplorePanelData, useSelector } from 'app/types';\n\nimport { getExploreItemSelector, isLeftPaneSelector, selectCorrelationDetails } from '../state/selectors';\n\nimport { ConfirmNavigationModal } from './ConfirmNavigationModal';\nimport { ToolbarExtensionPointMenu } from './ToolbarExtensionPointMenu';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ntype Props = {\n  exploreId: string;\n  timeZone: TimeZone;\n};\n\nexport function ToolbarExtensionPoint(props: Props): ReactElement | null {\n  const { exploreId } = props;\n  const [selectedExtension, setSelectedExtension] = useState<PluginExtensionLink | undefined>();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const context = useExtensionPointContext(props);\n  const { links } = usePluginLinks({\n    extensionPointId: PluginExtensionPoints.ExploreToolbarAction,\n    context: context,\n    limitPerPlugin: 3,\n  });\n  const selectExploreItem = getExploreItemSelector(exploreId);\n  const noQueriesInPane = useSelector(selectExploreItem)?.queries?.length;\n\n  // If we only have the explore core extension point registered we show the old way of\n  // adding a query to a dashboard.\n  if (links.length <= 1) {\n    const canAddPanelToDashboard =\n      contextSrv.hasPermission(AccessControlAction.DashboardsCreate) ||\n      contextSrv.hasPermission(AccessControlAction.DashboardsWrite);\n\n    if (!canAddPanelToDashboard) {\n      return null;\n    }\n\n    return (\n      <Suspense fallback={null}>\n        <AddToDashboard exploreId={exploreId} />\n      </Suspense>\n    );\n  }\n\n  const menu = <ToolbarExtensionPointMenu extensions={links} onSelect={setSelectedExtension} />;\n\n  return (\n    <>\n      <Dropdown onVisibleChange={setIsOpen} placement=\"bottom-start\" overlay={menu}>\n        <ToolbarButton aria-label=\"Add\" disabled={!Boolean(noQueriesInPane)} variant=\"canvas\" isOpen={isOpen}>\n          Add\n        </ToolbarButton>\n      </Dropdown>\n      {!!selectedExtension && !!selectedExtension.path && (\n        <ConfirmNavigationModal\n          path={selectedExtension.path}\n          title={selectedExtension.title}\n          onDismiss={() => setSelectedExtension(undefined)}\n        />\n      )}\n    </>\n  );\n}\n\nexport type PluginExtensionExploreContext = {\n  exploreId: string;\n  targets: DataQuery[];\n  data: ExplorePanelData;\n  timeRange: RawTimeRange;\n  timeZone: TimeZone;\n  shouldShowAddCorrelation: boolean;\n};\n\nfunction useExtensionPointContext(props: Props): PluginExtensionExploreContext {\n  const { exploreId, timeZone } = props;\n  const isCorrelationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = isCorrelationDetails?.editorMode || false;\n  const { queries, queryResponse, range } = useSelector(getExploreItemSelector(exploreId))!;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n\n  const datasourceUids = queries.map((query) => query?.datasource?.uid).filter((uid) => uid !== undefined);\n  const numUniqueIds = [...new Set(datasourceUids)].length;\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  return useMemo(() => {\n    return {\n      exploreId,\n      targets: queries,\n      data: queryResponse,\n      timeRange: range.raw,\n      timeZone: getTimeZone({ timeZone }),\n      shouldShowAddCorrelation:\n        config.featureToggles.correlations === true &&\n        canWriteCorrelations &&\n        !isCorrelationsEditorMode &&\n        isLeftPane &&\n        numUniqueIds === 1,\n    };\n  }, [\n    exploreId,\n    queries,\n    queryResponse,\n    range.raw,\n    timeZone,\n    canWriteCorrelations,\n    isCorrelationsEditorMode,\n    isLeftPane,\n    numUniqueIds,\n  ]);\n}\n","import { useCallback } from 'react';\nimport * as React from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { setPausedStateAction, runQueries, clearLogs } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: string) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.offOption.value }));\n    dispatch(runQueries({ exploreId }));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.liveOption.value }));\n  }, [exploreId, dispatch]);\n\n  const clear = useCallback(() => {\n    dispatch(clearLogs({ exploreId }));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n    clear,\n  };\n}\n\ntype Props = {\n  exploreId: string;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import { css, cx } from '@emotion/css';\nimport { pick } from 'lodash';\nimport { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport {\n  defaultIntervals,\n  PageToolbar,\n  RefreshPicker,\n  SetInterval,\n  ToolbarButton,\n  ButtonGroup,\n  useStyles2,\n} from '@grafana/ui';\nimport { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\nimport { t, Trans } from 'app/core/internationalization';\nimport { DataSourcePicker } from 'app/features/datasources/components/picker/DataSourcePicker';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION } from 'app/types/explore';\nimport { StoreState, useDispatch, useSelector } from 'app/types/store';\n\nimport { contextSrv } from '../../core/core';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { QueriesDrawerDropdown } from './QueriesDrawer/QueriesDrawerDropdown';\nimport { ShortLinkButtonMenu } from './ShortLinkButtonMenu';\nimport { ToolbarExtensionPoint } from './extensions/ToolbarExtensionPoint';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport {\n  splitClose,\n  splitOpen,\n  maximizePaneAction,\n  evenPaneResizeAction,\n  changeCorrelationEditorDetails,\n} from './state/main';\nimport { cancelQueries, runQueries, selectIsWaitingForData } from './state/query';\nimport { isLeftPaneSelector, isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst getStyles = (theme: GrafanaTheme2, splitted: Boolean) => ({\n  rotateIcon: css({\n    '> div > svg': {\n      transform: 'rotate(180deg)',\n    },\n  }),\n  toolbarButton: css({\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: theme.spacing(0.5),\n    width: splitted && theme.spacing(6),\n  }),\n});\n\ninterface Props {\n  exploreId: string;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  onContentOutlineToogle: () => void;\n  isContentOutlineOpen: boolean;\n}\n\nexport function ExploreToolbar({ exploreId, onChangeTime, onContentOutlineToogle, isContentOutlineOpen }: Props) {\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n  const styles = useStyles2(getStyles, splitted);\n\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n  const fiscalYearStartMonth = useSelector((state: StoreState) => getFiscalYearStartMonth(state.user));\n  const { refreshInterval, datasourceInstance, range, isLive, isPaused, syncedTimes } = useSelector(\n    (state: StoreState) => ({\n      ...pick(state.explore.panes[exploreId]!, 'refreshInterval', 'datasourceInstance', 'range', 'isLive', 'isPaused'),\n      syncedTimes: state.explore.syncedTimes,\n    }),\n    shallowEqual\n  );\n  const loading = useSelector(selectIsWaitingForData(exploreId));\n  const isLargerPane = useSelector((state: StoreState) => state.explore.largerExploreId === exploreId);\n  const showSmallTimePicker = useSelector((state) => splitted || state.explore.panes[exploreId]!.containerWidth < 1210);\n  const showSmallDataSourcePicker = useSelector(\n    (state) => state.explore.panes[exploreId]!.containerWidth < (splitted ? 700 : 800)\n  );\n\n  const panes = useSelector(selectPanesEntries);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = correlationDetails?.editorMode || false;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n  const isSingleTopNav = config.featureToggles.singleTopNav;\n\n  const shouldRotateSplitIcon = useMemo(\n    () => (isLeftPane && isLargerPane) || (!isLeftPane && !isLargerPane),\n    [isLeftPane, isLargerPane]\n  );\n\n  const refreshPickerLabel = loading\n    ? t('explore.toolbar.refresh-picker-cancel', 'Cancel')\n    : t('explore.toolbar.refresh-picker-run', 'Run query');\n\n  const onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    if (!isCorrelationsEditorMode) {\n      dispatch(changeDatasource({ exploreId, datasource: dsSettings.uid, options: { importQueries: true } }));\n    } else {\n      if (correlationDetails?.correlationDirty || correlationDetails?.queryEditorDirty) {\n        // prompt will handle datasource change if needed\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE,\n              changeDatasourceUid: dsSettings.uid,\n              isActionLeft: isLeftPane,\n            },\n          })\n        );\n      } else {\n        // if the left pane is changing, clear helper data for right pane\n        if (isLeftPane) {\n          panes.forEach((pane) => {\n            dispatch(\n              changeCorrelationHelperData({\n                exploreId: pane[0],\n                correlationEditorHelperData: undefined,\n              })\n            );\n          });\n        }\n\n        dispatch(changeDatasource({ exploreId, datasource: dsSettings.uid, options: { importQueries: true } }));\n      }\n    }\n  };\n\n  const onRunQuery = (loading = false) => {\n    if (loading) {\n      return dispatch(cancelQueries(exploreId));\n    } else {\n      return dispatch(runQueries({ exploreId }));\n    }\n  };\n\n  const onChangeTimeZone = (timezone: string) => dispatch(updateTimeZoneForSession(timezone));\n\n  const onOpenSplitView = () => {\n    dispatch(splitOpen());\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  const onCloseSplitView = () => {\n    if (isCorrelationsEditorMode) {\n      if (correlationDetails?.correlationDirty || correlationDetails?.queryEditorDirty) {\n        // if dirty, prompt\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE,\n              isActionLeft: isLeftPane,\n            },\n          })\n        );\n      } else {\n        // otherwise, clear helper data and close\n        panes.forEach((pane) => {\n          dispatch(\n            changeCorrelationHelperData({\n              exploreId: pane[0],\n              correlationEditorHelperData: undefined,\n            })\n          );\n        });\n        dispatch(splitClose(exploreId));\n        reportInteraction('grafana_explore_split_view_closed');\n      }\n    } else {\n      dispatch(splitClose(exploreId));\n      reportInteraction('grafana_explore_split_view_closed');\n    }\n  };\n\n  const onClickResize = () => {\n    if (isLargerPane) {\n      dispatch(evenPaneResizeAction());\n    } else {\n      dispatch(maximizePaneAction({ exploreId }));\n    }\n  };\n\n  const onChangeTimeSync = () => {\n    dispatch(syncTimes(exploreId));\n  };\n\n  const onChangeFiscalYearStartMonth = (fiscalyearStartMonth: number) =>\n    dispatch(updateFiscalYearStartMonthForSession(fiscalyearStartMonth));\n\n  const onChangeRefreshInterval = (refreshInterval: string) => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval }));\n  };\n\n  const navBarActions = [<ShortLinkButtonMenu key=\"share\" />, <div style={{ flex: 1 }} key=\"spacer0\" />];\n\n  return (\n    <div>\n      {refreshInterval && <SetInterval func={onRunQuery} interval={refreshInterval} loading={loading} />}\n      {!isSingleTopNav && (\n        <div>\n          <AppChromeUpdate actions={navBarActions} />\n        </div>\n      )}\n      <PageToolbar\n        aria-label={t('explore.toolbar.aria-label', 'Explore toolbar')}\n        leftItems={[\n          <ToolbarButton\n            key=\"content-outline\"\n            variant=\"canvas\"\n            tooltip=\"Content outline\"\n            icon=\"list-ui-alt\"\n            iconOnly={splitted}\n            onClick={onContentOutlineToogle}\n            aria-expanded={isContentOutlineOpen}\n            aria-controls={isContentOutlineOpen ? 'content-outline-container' : undefined}\n            className={styles.toolbarButton}\n          >\n            Outline\n          </ToolbarButton>,\n          <DataSourcePicker\n            key={`${exploreId}-ds-picker`}\n            mixed={!isCorrelationsEditorMode}\n            onChange={onChangeDatasource}\n            current={datasourceInstance?.getRef()}\n            hideTextValue={showSmallDataSourcePicker}\n            width={showSmallDataSourcePicker ? 8 : undefined}\n          />,\n          isSingleTopNav && <ShortLinkButtonMenu key=\"share\" />,\n        ].filter(Boolean)}\n        forceShowLeftItems\n      >\n        {[\n          <QueriesDrawerDropdown key=\"queryLibrary\" variant={splitted ? 'compact' : 'full'} />,\n          !splitted ? (\n            <ToolbarButton\n              variant=\"canvas\"\n              key=\"split\"\n              tooltip={t('explore.toolbar.split-tooltip', 'Split the pane')}\n              onClick={onOpenSplitView}\n              icon=\"columns\"\n              disabled={isLive}\n            >\n              <Trans i18nKey=\"explore.toolbar.split-title\">Split</Trans>\n            </ToolbarButton>\n          ) : (\n            <ButtonGroup key=\"split-controls\">\n              <ToolbarButton\n                variant=\"canvas\"\n                tooltip={\n                  isLargerPane\n                    ? t('explore.toolbar.split-narrow', 'Narrow pane')\n                    : t('explore.toolbar.split-widen', 'Widen pane')\n                }\n                onClick={onClickResize}\n                icon={isLargerPane ? 'gf-movepane-left' : 'gf-movepane-right'}\n                iconOnly={true}\n                className={cx(shouldRotateSplitIcon && styles.rotateIcon)}\n              />\n              <ToolbarButton\n                tooltip={t('explore.toolbar.split-close-tooltip', 'Close split pane')}\n                onClick={onCloseSplitView}\n                icon=\"times\"\n                variant=\"canvas\"\n              >\n                <Trans i18nKey=\"explore.toolbar.split-close\"> Close </Trans>\n              </ToolbarButton>\n            </ButtonGroup>\n          ),\n          <ToolbarExtensionPoint key=\"toolbar-extension-point\" exploreId={exploreId} timeZone={timeZone} />,\n          !isLive && (\n            <ExploreTimeControls\n              key=\"timeControls\"\n              exploreId={exploreId}\n              range={range}\n              timeZone={timeZone}\n              fiscalYearStartMonth={fiscalYearStartMonth}\n              onChangeTime={onChangeTime}\n              splitted={splitted}\n              syncedTimes={syncedTimes}\n              onChangeTimeSync={onChangeTimeSync}\n              hideText={showSmallTimePicker}\n              onChangeTimeZone={onChangeTimeZone}\n              onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n            />\n          ),\n          <RefreshPicker\n            key=\"refreshPicker\"\n            onIntervalChanged={onChangeRefreshInterval}\n            value={refreshInterval}\n            isLoading={loading}\n            text={showSmallTimePicker ? undefined : refreshPickerLabel}\n            tooltip={showSmallTimePicker ? refreshPickerLabel : undefined}\n            intervals={contextSrv.getValidIntervals(defaultIntervals)}\n            isLive={isLive}\n            onRefresh={() => onRunQuery(loading)}\n            noIntervalPicker={isLive}\n            primary={true}\n            width={(showSmallTimePicker ? 35 : 108) + 'px'}\n          />,\n          datasourceInstance?.meta.streaming && (\n            <LiveTailControls key=\"liveControls\" exploreId={exploreId}>\n              {(c) => {\n                const controls = {\n                  ...c,\n                  start: () => {\n                    reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                      datasourceType: datasourceInstance?.type,\n                    });\n                    c.start();\n                  },\n                };\n                return (\n                  <LiveTailButton\n                    splitted={splitted}\n                    isLive={isLive}\n                    isPaused={isPaused}\n                    start={controls.start}\n                    pause={controls.pause}\n                    resume={controls.resume}\n                    stop={controls.stop}\n                  />\n                );\n              }}\n            </LiveTailControls>\n          ),\n        ].filter(Boolean)}\n      </PageToolbar>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { DataFrame, GrafanaTheme2, CoreApp } from '@grafana/data';\nimport { FlameGraph } from '@grafana/flamegraph';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  dataFrames: DataFrame[];\n}\n\nfunction interaction(name: string, context: Record<string, string | number> = {}) {\n  reportInteraction(`grafana_flamegraph_${name}`, {\n    app: CoreApp.Unknown,\n    grafana_version: config.buildInfo.version,\n    ...context,\n  });\n}\n\nexport const FlameGraphExploreContainer = (props: Props) => {\n  const styles = useStyles2((theme) => getStyles(theme));\n\n  return (\n    <div className={styles.container}>\n      <FlameGraph\n        data={props.dataFrames[0]}\n        stickyHeader={true}\n        getTheme={() => config.theme2}\n        onTableSymbolClick={() => interaction('table_item_selected')}\n        onViewSelected={(view: string) => interaction('view_selected', { view })}\n        onTextAlignSelected={(align: string) => interaction('text_align_selected', { align })}\n        onTableSort={(sort: string) => interaction('table_sort_selected', { sort })}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    background: theme.colors.background.primary,\n    display: 'flow-root',\n    padding: theme.spacing(0, 1, 1, 1),\n    border: `1px solid ${theme.components.panel.borderColor}`,\n    borderRadius: theme.shape.radius.default,\n  }),\n});\n","import { useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: unknown;\n}\n\nexport const ElapsedTime = ({ resetKey, humanize, className }: ElapsedTimeProps) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport { PureComponent } from 'react';\nimport * as React from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, dateTimeFormat, GrafanaTheme2, LogsSortOrder } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../../logs/components/getLogRowStyles';\nimport { sortLogRows } from '../../logs/utils';\nimport { ElapsedTime } from '../ElapsedTime';\nimport { filterLogRowsByIndex } from '../state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  onClear: () => void;\n  clearedAtIndex: number | null;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (nextProps.isPaused && nextProps.clearedAtIndex) {\n      return {\n        logRowsToRender: filterLogRowsByIndex(nextProps.clearedAtIndex, state.logRowsToRender),\n      };\n    }\n\n    if (nextProps.isPaused) {\n      return null;\n    }\n\n    return {\n      // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n      // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n      // without creating a gap in the log results.\n      logRowsToRender: nextProps.logRows,\n    };\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = sortLogRows(rowsToRender, LogsSortOrder.Ascending).slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, onClear, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button\n            icon={isPaused ? 'play' : 'pause'}\n            variant=\"secondary\"\n            onClick={isPaused ? onResume : onPause}\n            className={styles.button}\n          >\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button icon=\"trash-alt\" variant=\"secondary\" onClick={onClear} className={styles.button}>\n            Clear logs\n          </Button>\n          <Button icon=\"square-shape\" variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            Exit live mode\n          </Button>\n          {isPaused ||\n            (this.rowsToRender().length > 0 && (\n              <span>\n                Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n              </span>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import { css } from '@emotion/css';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, CoreApp, LogRowModel, TimeRange } from '@grafana/data';\nimport { convertRawToRange, isRelativeTime, isRelativeTimeRange } from '@grafana/data/src/datetime/rangeutil';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { LogsSortOrder, TimeZone } from '@grafana/schema';\nimport { Button, Icon } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nimport { LoadingIndicator } from './LoadingIndicator';\n\nexport type Props = {\n  app?: CoreApp;\n  children: ReactNode;\n  loading: boolean;\n  loadMoreLogs?: (range: AbsoluteTimeRange) => void;\n  range: TimeRange;\n  rows: LogRowModel[];\n  scrollElement?: HTMLDivElement;\n  sortOrder: LogsSortOrder;\n  timeZone: TimeZone;\n  topScrollEnabled?: boolean;\n};\n\nexport const InfiniteScroll = ({\n  app,\n  children,\n  loading,\n  loadMoreLogs,\n  range,\n  rows,\n  scrollElement,\n  sortOrder,\n  timeZone,\n  topScrollEnabled = false,\n}: Props) => {\n  const [upperOutOfRange, setUpperOutOfRange] = useState(false);\n  const [lowerOutOfRange, setLowerOutOfRange] = useState(false);\n  const [upperLoading, setUpperLoading] = useState(false);\n  const [lowerLoading, setLowerLoading] = useState(false);\n  const rowsRef = useRef<LogRowModel[]>(rows);\n  const lastScroll = useRef<number>(scrollElement?.scrollTop || 0);\n\n  // Reset messages when range/order/rows change\n  useEffect(() => {\n    setUpperOutOfRange(false);\n    setLowerOutOfRange(false);\n  }, [range, rows, sortOrder]);\n\n  // Reset loading messages when loading stops\n  useEffect(() => {\n    if (!loading) {\n      setUpperLoading(false);\n      setLowerLoading(false);\n    }\n  }, [loading]);\n\n  // Ensure bottom loader visibility\n  useEffect(() => {\n    if (lowerLoading && scrollElement) {\n      scrollElement.scrollTo(0, scrollElement.scrollHeight - scrollElement.clientHeight);\n    }\n  }, [lowerLoading, scrollElement]);\n\n  // Request came back with no new past rows\n  useEffect(() => {\n    if (rows !== rowsRef.current && rows.length === rowsRef.current.length && (upperLoading || lowerLoading)) {\n      if (sortOrder === LogsSortOrder.Descending && lowerLoading) {\n        setLowerOutOfRange(true);\n      } else if (sortOrder === LogsSortOrder.Ascending && upperLoading) {\n        setUpperOutOfRange(true);\n      }\n    }\n    rowsRef.current = rows;\n  }, [lowerLoading, rows, sortOrder, upperLoading]);\n\n  useEffect(() => {\n    if (!scrollElement || !loadMoreLogs) {\n      return;\n    }\n\n    function handleScroll(event: Event | WheelEvent) {\n      if (!scrollElement || !loadMoreLogs || !rows.length || loading || !config.featureToggles.logsInfiniteScrolling) {\n        return;\n      }\n      event.stopImmediatePropagation();\n      const scrollDirection = shouldLoadMore(event, scrollElement, lastScroll.current);\n      lastScroll.current = scrollElement.scrollTop;\n      if (scrollDirection === ScrollDirection.NoScroll) {\n        return;\n      } else if (scrollDirection === ScrollDirection.Top && topScrollEnabled) {\n        scrollTop();\n      } else if (scrollDirection === ScrollDirection.Bottom) {\n        scrollBottom();\n      }\n    }\n\n    function scrollTop() {\n      const newRange = canScrollTop(getVisibleRange(rows), range, timeZone, sortOrder);\n      if (!newRange) {\n        setUpperOutOfRange(true);\n        return;\n      }\n      setUpperOutOfRange(false);\n      loadMoreLogs?.(newRange);\n      setUpperLoading(true);\n      reportInteraction('grafana_logs_infinite_scrolling', {\n        direction: 'top',\n        sort_order: sortOrder,\n      });\n    }\n\n    function scrollBottom() {\n      const newRange = canScrollBottom(getVisibleRange(rows), range, timeZone, sortOrder);\n      if (!newRange) {\n        setLowerOutOfRange(true);\n        return;\n      }\n      setLowerOutOfRange(false);\n      loadMoreLogs?.(newRange);\n      setLowerLoading(true);\n      reportInteraction('grafana_logs_infinite_scrolling', {\n        direction: 'bottom',\n        sort_order: sortOrder,\n      });\n    }\n\n    scrollElement.addEventListener('scroll', handleScroll);\n    scrollElement.addEventListener('wheel', handleScroll);\n\n    return () => {\n      scrollElement.removeEventListener('scroll', handleScroll);\n      scrollElement.removeEventListener('wheel', handleScroll);\n    };\n  }, [loadMoreLogs, loading, range, rows, scrollElement, sortOrder, timeZone, topScrollEnabled]);\n\n  // We allow \"now\" to move when using relative time, so we hide the message so it doesn't flash.\n  const hideTopMessage = sortOrder === LogsSortOrder.Descending && isRelativeTime(range.raw.to);\n  const hideBottomMessage = sortOrder === LogsSortOrder.Ascending && isRelativeTime(range.raw.to);\n\n  const loadOlderLogs = useCallback(() => {\n    //If we are not on the last page, use next page's range\n    reportInteraction('grafana_explore_logs_infinite_pagination_clicked', {\n      pageType: 'olderLogsButton',\n    });\n    const newRange = canScrollTop(getVisibleRange(rows), range, timeZone, sortOrder);\n    if (!newRange) {\n      setUpperOutOfRange(true);\n      return;\n    }\n    setUpperOutOfRange(false);\n    loadMoreLogs?.(newRange);\n    setUpperLoading(true);\n    scrollElement?.scroll({\n      behavior: 'auto',\n      top: 0,\n    });\n  }, [loadMoreLogs, range, rows, scrollElement, sortOrder, timeZone]);\n\n  return (\n    <>\n      {upperLoading && <LoadingIndicator adjective={sortOrder === LogsSortOrder.Descending ? 'newer' : 'older'} />}\n      {!hideTopMessage && upperOutOfRange && outOfRangeMessage}\n      {sortOrder === LogsSortOrder.Ascending && app === CoreApp.Explore && (\n        <Button className={styles.navButton} variant=\"secondary\" onClick={loadOlderLogs} disabled={loading}>\n          <div className={styles.navButtonContent}>\n            <Icon name=\"angle-up\" size=\"lg\" />\n            <Trans i18nKey=\"logs.infinite-scroll.older-logs\">Older logs</Trans>\n          </div>\n        </Button>\n      )}\n      {children}\n      {!hideBottomMessage && lowerOutOfRange && outOfRangeMessage}\n      {lowerLoading && <LoadingIndicator adjective={sortOrder === LogsSortOrder.Descending ? 'older' : 'newer'} />}\n    </>\n  );\n};\n\nconst styles = {\n  messageContainer: css({\n    textAlign: 'center',\n    padding: 0.25,\n  }),\n  navButton: css({\n    width: '58px',\n    height: '68px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    lineHeight: '1',\n    position: 'absolute',\n    top: 0,\n    right: -3,\n    zIndex: 1,\n  }),\n  navButtonContent: css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'normal',\n  }),\n};\n\nconst outOfRangeMessage = (\n  <div className={styles.messageContainer} data-testid=\"end-of-range\">\n    End of the selected time range.\n  </div>\n);\n\nenum ScrollDirection {\n  Top = -1,\n  Bottom = 1,\n  NoScroll = 0,\n}\nfunction shouldLoadMore(event: Event | WheelEvent, element: HTMLDivElement, lastScroll: number): ScrollDirection {\n  // Disable behavior if there is no scroll\n  if (element.scrollHeight <= element.clientHeight) {\n    return ScrollDirection.NoScroll;\n  }\n  const delta = event instanceof WheelEvent ? event.deltaY : element.scrollTop - lastScroll;\n  if (delta === 0) {\n    return ScrollDirection.NoScroll;\n  }\n  const scrollDirection = delta < 0 ? ScrollDirection.Top : ScrollDirection.Bottom;\n  const diff =\n    scrollDirection === ScrollDirection.Top\n      ? element.scrollTop\n      : element.scrollHeight - element.scrollTop - element.clientHeight;\n\n  return diff <= 1 ? scrollDirection : ScrollDirection.NoScroll;\n}\n\nfunction getVisibleRange(rows: LogRowModel[]) {\n  const firstTimeStamp = rows[0].timeEpochMs;\n  const lastTimeStamp = rows[rows.length - 1].timeEpochMs;\n\n  const visibleRange =\n    lastTimeStamp < firstTimeStamp\n      ? { from: lastTimeStamp, to: firstTimeStamp }\n      : { from: firstTimeStamp, to: lastTimeStamp };\n\n  return visibleRange;\n}\n\nfunction getPrevRange(visibleRange: AbsoluteTimeRange, currentRange: TimeRange) {\n  return { from: currentRange.from.valueOf(), to: visibleRange.from };\n}\n\nfunction getNextRange(visibleRange: AbsoluteTimeRange, currentRange: TimeRange, timeZone: TimeZone) {\n  // When requesting new logs, update the current range if using relative time ranges.\n  currentRange = updateCurrentRange(currentRange, timeZone);\n  return { from: visibleRange.to, to: currentRange.to.valueOf() };\n}\n\nexport const SCROLLING_THRESHOLD = 1e3;\n\n// To get more logs, the difference between the visible range and the current range should be 1 second or more.\nfunction canScrollTop(\n  visibleRange: AbsoluteTimeRange,\n  currentRange: TimeRange,\n  timeZone: TimeZone,\n  sortOrder: LogsSortOrder\n): AbsoluteTimeRange | undefined {\n  if (sortOrder === LogsSortOrder.Descending) {\n    // When requesting new logs, update the current range if using relative time ranges.\n    currentRange = updateCurrentRange(currentRange, timeZone);\n    const canScroll = currentRange.to.valueOf() - visibleRange.to > SCROLLING_THRESHOLD;\n    return canScroll ? getNextRange(visibleRange, currentRange, timeZone) : undefined;\n  }\n\n  const canScroll = Math.abs(currentRange.from.valueOf() - visibleRange.from) > SCROLLING_THRESHOLD;\n  return canScroll ? getPrevRange(visibleRange, currentRange) : undefined;\n}\n\nfunction canScrollBottom(\n  visibleRange: AbsoluteTimeRange,\n  currentRange: TimeRange,\n  timeZone: TimeZone,\n  sortOrder: LogsSortOrder\n): AbsoluteTimeRange | undefined {\n  if (sortOrder === LogsSortOrder.Descending) {\n    const canScroll = Math.abs(currentRange.from.valueOf() - visibleRange.from) > SCROLLING_THRESHOLD;\n    return canScroll ? getPrevRange(visibleRange, currentRange) : undefined;\n  }\n  // When requesting new logs, update the current range if using relative time ranges.\n  currentRange = updateCurrentRange(currentRange, timeZone);\n  const canScroll = currentRange.to.valueOf() - visibleRange.to > SCROLLING_THRESHOLD;\n  return canScroll ? getNextRange(visibleRange, currentRange, timeZone) : undefined;\n}\n\n// Given a TimeRange, returns a new instance if using relative time, or else the same.\nfunction updateCurrentRange(timeRange: TimeRange, timeZone: TimeZone) {\n  return isRelativeTimeRange(timeRange.raw) ? convertRawToRange(timeRange.raw, timeZone) : timeRange;\n}\n","import { LogLevel } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\n\nexport function contentOutlineTrackPinAdded() {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: 'Logs:pinned:pinned-log-added',\n  });\n}\n\nexport function contentOutlineTrackPinRemoved() {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: 'Logs:pinned:pinned-log-deleted',\n  });\n}\n\nexport function contentOutlineTrackPinLimitReached() {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: 'Logs:pinned:pinned-log-limit-reached',\n  });\n}\n\nexport function contentOutlineTrackPinClicked() {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: 'Logs:pinned:pinned-log-clicked',\n  });\n}\n\nexport function contentOutlineTrackUnpinClicked() {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: 'Logs:pinned:pinned-log-deleted',\n  });\n}\n\nexport function contentOutlineTrackLevelFilter(level: { levelStr: string; logLevel: LogLevel }) {\n  reportInteraction('explore_toolbar_contentoutline_clicked', {\n    item: 'section',\n    type: `Logs:filter:${level.levelStr}`,\n  });\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Stack, useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  feedbackUrl?: string;\n}\n\nexport function LogsFeedback({ feedbackUrl }: Props) {\n  const styles = useStyles2(getStyles);\n  return (\n    <Stack>\n      <a\n        href={feedbackUrl}\n        className={styles.link}\n        title=\"The logs table is new, please let us know how we can improve it\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <Icon name=\"comment-alt-message\" /> Give feedback\n      </a>\n    </Stack>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    link: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      ':hover': {\n        color: theme.colors.text.link,\n      },\n    }),\n  };\n}\n","import { css } from '@emotion/css';\nimport { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css({\n    flex: 1,\n    color: theme.colors.text.secondary,\n    marginBottom: theme.spacing(2),\n    minWidth: '30%',\n    display: 'flex',\n    flexWrap: 'wrap',\n  }),\n  metaItem: css({\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(0.5),\n    display: 'flex',\n    alignItems: 'center',\n    ['.logs-meta-item__error']: {\n      color: theme.colors.error.text,\n    },\n  }),\n  metaLabel: css({\n    marginRight: `calc(${theme.spacing(2)} / 2)`,\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.fontWeightMedium,\n  }),\n  metaValue: css({\n    fontFamily: theme.typography.fontFamilyMonospace,\n    fontSize: theme.typography.bodySmall.fontSize,\n  }),\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import { useCallback, useEffect, useState } from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  applyFieldOverrides,\n  CustomTransformOperator,\n  DataFrame,\n  DataFrameType,\n  DataTransformerConfig,\n  Field,\n  FieldType,\n  guessFieldTypeForField,\n  LogsSortOrder,\n  sortDataFrame,\n  SplitOpen,\n  TimeRange,\n  transformDataFrame,\n  ValueLinkConfig,\n} from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { AdHocFilterItem, Table } from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport { LogsFrame } from 'app/features/logs/logsFrame';\n\nimport { getFieldLinksForExplore } from '../utils/links';\n\nimport { FieldNameMeta } from './LogsTableWrap';\n\ninterface Props {\n  dataFrame: DataFrame;\n  width: number;\n  timeZone: string;\n  splitOpen: SplitOpen;\n  range: TimeRange;\n  logsSortOrder: LogsSortOrder;\n  columnsWithMeta: Record<string, FieldNameMeta>;\n  height: number;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  logsFrame: LogsFrame | null;\n}\n\nexport function LogsTable(props: Props) {\n  const { timeZone, splitOpen, range, logsSortOrder, width, dataFrame, columnsWithMeta, logsFrame } = props;\n  const [tableFrame, setTableFrame] = useState<DataFrame | undefined>(undefined);\n  const timeIndex = logsFrame?.timeField.index;\n\n  const prepareTableFrame = useCallback(\n    (frame: DataFrame): DataFrame => {\n      if (!frame.length) {\n        return frame;\n      }\n\n      const sortedFrame = sortDataFrame(frame, timeIndex, logsSortOrder === LogsSortOrder.Descending);\n\n      const [frameWithOverrides] = applyFieldOverrides({\n        data: [sortedFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {\n            custom: {},\n          },\n          overrides: [],\n        },\n      });\n      // `getLinks` and `applyFieldOverrides` are taken from TableContainer.tsx\n      for (const field of frameWithOverrides.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn: splitOpen,\n            range: range,\n            dataFrame: sortedFrame!,\n          });\n        };\n        field.config = {\n          ...field.config,\n          custom: {\n            inspect: true,\n            filterable: true, // This sets the columns to be filterable\n            width: getInitialFieldWidth(field),\n            ...field.config.custom,\n          },\n          // This sets the individual field value as filterable\n          filterable: isFieldFilterable(field, logsFrame?.bodyField.name ?? '', logsFrame?.timeField.name ?? ''),\n        };\n\n        // If it's a string, then try to guess for a better type for numeric support in viz\n        field.type = field.type === FieldType.string ? (guessFieldTypeForField(field) ?? FieldType.string) : field.type;\n      }\n\n      return frameWithOverrides;\n    },\n    [logsSortOrder, timeZone, splitOpen, range, logsFrame?.bodyField.name, logsFrame?.timeField.name, timeIndex]\n  );\n\n  useEffect(() => {\n    const prepare = async () => {\n      if (!logsFrame?.timeField.name || !logsFrame?.bodyField.name) {\n        setTableFrame(undefined);\n        return;\n      }\n\n      // create extract JSON transformation for every field that is `json.RawMessage`\n      const transformations: Array<DataTransformerConfig | CustomTransformOperator> = getLogsExtractFields(dataFrame);\n\n      let labelFilters = buildLabelFilters(columnsWithMeta);\n\n      // Add the label filters to the transformations\n      const transform = getLabelFiltersTransform(labelFilters);\n      if (transform) {\n        transformations.push(transform);\n      } else {\n        // If no fields are filtered, filter the default fields, so we don't render all columns\n        transformations.push({\n          id: 'organize',\n          options: {\n            indexByName: {\n              [logsFrame.bodyField.name]: 0,\n              [logsFrame.timeField.name]: 1,\n            },\n            includeByName: {\n              [logsFrame.bodyField.name]: true,\n              [logsFrame.timeField.name]: true,\n            },\n          },\n        });\n      }\n\n      if (transformations.length > 0) {\n        const transformedDataFrame = await lastValueFrom(transformDataFrame(transformations, [dataFrame]));\n        const tableFrame = prepareTableFrame(transformedDataFrame[0]);\n        setTableFrame(tableFrame);\n      } else {\n        setTableFrame(prepareTableFrame(dataFrame));\n      }\n    };\n    prepare();\n  }, [\n    columnsWithMeta,\n    dataFrame,\n    logsSortOrder,\n    prepareTableFrame,\n    logsFrame?.bodyField.name,\n    logsFrame?.timeField.name,\n  ]);\n\n  if (!tableFrame) {\n    return null;\n  }\n\n  const onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    const { onClickFilterLabel, onClickFilterOutLabel } = props;\n    if (!onClickFilterLabel || !onClickFilterOutLabel) {\n      return;\n    }\n    if (operator === FILTER_FOR_OPERATOR) {\n      onClickFilterLabel(key, value, dataFrame);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      onClickFilterOutLabel(key, value, dataFrame);\n    }\n  };\n\n  return (\n    <Table\n      data={tableFrame}\n      width={width}\n      onCellFilterAdded={props.onClickFilterLabel && props.onClickFilterOutLabel ? onCellFilterAdded : undefined}\n      height={props.height}\n      footerOptions={{ show: true, reducer: ['count'], countRows: true }}\n      initialSortBy={[\n        { displayName: logsFrame?.timeField.name || '', desc: logsSortOrder === LogsSortOrder.Descending },\n      ]}\n    />\n  );\n}\n\nconst isFieldFilterable = (field: Field, bodyName: string, timeName: string) => {\n  if (!bodyName || !timeName) {\n    return false;\n  }\n  if (bodyName === field.name) {\n    return false;\n  }\n  if (timeName === field.name) {\n    return false;\n  }\n  if (field.config.links?.length) {\n    return false;\n  }\n\n  return true;\n};\n\n// TODO: explore if `logsFrame.ts` can help us with getting the right fields\n// TODO Why is typeInfo not defined on the Field interface?\nexport function getLogsExtractFields(dataFrame: DataFrame) {\n  return dataFrame.fields\n    .filter((field: Field & { typeInfo?: { frame: string } }) => {\n      const isFieldLokiLabels =\n        field.typeInfo?.frame === 'json.RawMessage' &&\n        field.name === 'labels' &&\n        dataFrame?.meta?.type !== DataFrameType.LogLines;\n      const isFieldDataplaneLabels =\n        field.name === 'labels' && field.type === FieldType.other && dataFrame?.meta?.type === DataFrameType.LogLines;\n      return isFieldLokiLabels || isFieldDataplaneLabels;\n    })\n    .flatMap((field: Field) => {\n      return [\n        {\n          id: 'extractFields',\n          options: {\n            format: 'json',\n            keepTime: false,\n            replace: false,\n            source: field.name,\n          },\n        },\n      ];\n    });\n}\n\nfunction buildLabelFilters(columnsWithMeta: Record<string, FieldNameMeta>) {\n  // Create object of label filters to include columns selected by the user\n  let labelFilters: Record<string, number> = {};\n  Object.keys(columnsWithMeta)\n    .filter((key) => columnsWithMeta[key].active)\n    .forEach((key) => {\n      const index = columnsWithMeta[key].index;\n      // Index should always be defined for any active column\n      if (index !== undefined) {\n        labelFilters[key] = index;\n      }\n    });\n\n  return labelFilters;\n}\n\nfunction getLabelFiltersTransform(labelFilters: Record<string, number>) {\n  let labelFiltersInclude: Record<string, boolean> = {};\n\n  for (const key in labelFilters) {\n    labelFiltersInclude[key] = true;\n  }\n\n  if (Object.keys(labelFilters).length > 0) {\n    return {\n      id: 'organize',\n      options: {\n        indexByName: labelFilters,\n        includeByName: labelFiltersInclude,\n      },\n    };\n  }\n  return null;\n}\n\nfunction getInitialFieldWidth(field: Field): number | undefined {\n  if (field.type === FieldType.time) {\n    return 200;\n  }\n  return undefined;\n}\n","import { css } from '@emotion/css';\nimport saveAs from 'file-saver';\nimport { memo } from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  LogsDedupStrategy,\n  LogsMetaItem,\n  LogsMetaKind,\n  LogRowModel,\n  CoreApp,\n  dateTimeFormat,\n  transformDataFrame,\n  DataTransformerConfig,\n  CustomTransformOperator,\n  Labels,\n} from '@grafana/data';\nimport { DataFrame } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Dropdown, Menu, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { downloadDataFrameAsCsv, downloadLogsModelAsTxt } from '../../inspector/utils/download';\nimport { LogLabels, LogLabelsList } from '../../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../../logs/components/LogRowMessage';\nimport { logRowsToReadableJson } from '../../logs/utils';\nimport { MetaInfoText, MetaItemProps } from '../MetaInfoText';\n\nimport { getLogsExtractFields } from './LogsTable';\n\nconst getStyles = () => ({\n  metaContainer: css`\n    flex: 1;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  displayedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nenum DownloadFormat {\n  Text = 'text',\n  Json = 'json',\n  CSV = 'csv',\n}\n\nexport const LogsMetaRow = memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    displayedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const style = useStyles2(getStyles);\n\n    const downloadLogs = async (format: DownloadFormat) => {\n      reportInteraction('grafana_logs_download_logs_clicked', {\n        app: CoreApp.Explore,\n        format,\n        area: 'logs-meta-row',\n      });\n\n      switch (format) {\n        case DownloadFormat.Text:\n          downloadLogsModelAsTxt({ meta, rows: logRows }, 'Explore');\n          break;\n        case DownloadFormat.Json:\n          const jsonLogs = logRowsToReadableJson(logRows);\n          const blob = new Blob([JSON.stringify(jsonLogs)], {\n            type: 'application/json;charset=utf-8',\n          });\n          const fileName = `Explore-logs-${dateTimeFormat(new Date())}.json`;\n          saveAs(blob, fileName);\n          break;\n        case DownloadFormat.CSV:\n          const dataFrameMap = new Map<string, DataFrame>();\n          logRows.forEach((row) => {\n            if (row.dataFrame?.refId && !dataFrameMap.has(row.dataFrame?.refId)) {\n              dataFrameMap.set(row.dataFrame?.refId, row.dataFrame);\n            }\n          });\n          dataFrameMap.forEach(async (dataFrame) => {\n            const transforms: Array<DataTransformerConfig | CustomTransformOperator> = getLogsExtractFields(dataFrame);\n            transforms.push({\n              id: 'organize',\n              options: {\n                excludeByName: {\n                  ['labels']: true,\n                  ['labelTypes']: true,\n                },\n              },\n            });\n            const transformedDataFrame = await lastValueFrom(transformDataFrame(transforms, [dataFrame]));\n            downloadDataFrameAsCsv(transformedDataFrame[0], `Explore-logs-${dataFrame.refId}`);\n          });\n      }\n    };\n\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Deduplication count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (displayedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only selected fields',\n          value: <LogLabelsList labels={displayedFields} />,\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n    const downloadMenu = (\n      <Menu>\n        <Menu.Item label=\"txt\" onClick={() => downloadLogs(DownloadFormat.Text)} />\n        <Menu.Item label=\"json\" onClick={() => downloadLogs(DownloadFormat.Json)} />\n        <Menu.Item label=\"csv\" onClick={() => downloadLogs(DownloadFormat.CSV)} />\n      </Menu>\n    );\n    return (\n      <>\n        {logsMetaItem && (\n          <div className={style.metaContainer}>\n            <MetaInfoText\n              metaItems={logsMetaItem.map((item) => {\n                return {\n                  label: item.label,\n                  value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n                };\n              })}\n            />\n            <Dropdown overlay={downloadMenu}>\n              <ToolbarButton isOpen={false} variant=\"canvas\" icon=\"download-alt\">\n                Download\n              </ToolbarButton>\n            </Dropdown>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: string | number | Labels, kind: LogsMetaKind) {\n  if (typeof value === 'string' || typeof value === 'number') {\n    return <>{value}</>;\n  }\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  }\n  if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value.toString()}</span>;\n  }\n  console.error(`Meta type ${typeof value} ${value} not recognized.`);\n  return <></>;\n}\n","import { css, cx } from '@emotion/css';\n\nimport { dateTimeFormat, systemDateFormats, GrafanaTheme2 } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { CustomScrollbar, Spinner, useTheme2, clearButtonStyles } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  onClick: (page: LogsPage, pageNumber: number) => void;\n};\n\nexport function LogsNavigationPages({ pages, currentPageIndex, oldestLogsFirst, timeZone, loading, onClick }: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <button\n              type=\"button\"\n              data-testid={`page${index + 1}`}\n              className={cx(clearButtonStyles(theme), styles.page)}\n              key={page.queryRange.to}\n              onClick={() => {\n                onClick(page, index + 1);\n              }}\n              disabled={loading}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, GrafanaTheme2, LogsSortOrder } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { TOP_BAR_LEVEL_HEIGHT } from 'app/core/components/AppChrome/types';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const currentPageIndex = useMemo(\n    () =>\n      pages.findIndex((page) => {\n        return page.queryRange.to === absoluteRange.to;\n      }),\n    [absoluteRange.to, pages]\n  );\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        return newPages;\n      });\n    }\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  const changeTime = useCallback(\n    ({ from, to }: AbsoluteTimeRange) => {\n      addResultsToCache();\n      expectedRangeRef.current = { from, to };\n      onChangeTime({ from, to });\n    },\n    [onChangeTime, addResultsToCache]\n  );\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n        scrollToTopLogs();\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        scrollToTopLogs();\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  const onPageClick = useCallback(\n    (page: LogsPage, pageNumber: number) => {\n      reportInteraction('grafana_explore_logs_pagination_clicked', {\n        pageType: 'page',\n        pageNumber,\n      });\n      changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n      scrollToTopLogs();\n    },\n    [changeTime, scrollToTopLogs]\n  );\n\n  const onScrollToTopClick = useCallback(() => {\n    reportInteraction('grafana_explore_logs_scroll_top_clicked');\n    scrollToTopLogs();\n  }, [scrollToTopLogs]);\n\n  return (\n    <div className={styles.navContainer}>\n      {!config.featureToggles.logsInfiniteScrolling && (\n        <>\n          {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n          <LogsNavigationPages\n            pages={pages}\n            currentPageIndex={currentPageIndex}\n            oldestLogsFirst={oldestLogsFirst}\n            timeZone={timeZone}\n            loading={loading}\n            onClick={onPageClick}\n          />\n          {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n        </>\n      )}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={onScrollToTopClick}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean) => {\n  const navContainerHeight = `calc(100vh - 2*${theme.spacing(2)} - 2*${TOP_BAR_LEVEL_HEIGHT}px)`;\n  return {\n    navContainer: css`\n      max-height: ${navContainerHeight};\n      ${oldestLogsFirst ? 'width: 58px;' : ''}\n      display: flex;\n      flex-direction: column;\n      ${config.featureToggles.logsInfiniteScrolling\n        ? `justify-content: flex-end;`\n        : `justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};`}\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { Field, Input, useTheme2 } from '@grafana/ui/src';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    searchWrap: css({\n      padding: `${theme.spacing(0.4)} 0 ${theme.spacing(0.4)} ${theme.spacing(0.4)}`,\n    }),\n  };\n}\n\nexport function LogsColumnSearch(props: { onChange: (e: React.FormEvent<HTMLInputElement>) => void; value: string }) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <Field className={styles.searchWrap}>\n      <Input value={props.value} type={'text'} placeholder={'Search fields by name'} onChange={props.onChange} />\n    </Field>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    empty: css({\n      marginBottom: theme.spacing(2),\n      marginLeft: theme.spacing(1.75),\n      fontSize: theme.typography.fontSize,\n    }),\n  };\n}\n\nexport function LogsTableEmptyFields() {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return <div className={styles.empty}>No fields</div>;\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Checkbox, Icon, useTheme2 } from '@grafana/ui';\n\nimport { FieldNameMeta } from './LogsTableWrap';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    dragIcon: css({\n      cursor: 'drag',\n      marginLeft: theme.spacing(1),\n      opacity: 0.4,\n    }),\n    labelCount: css({\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      appearance: 'none',\n      background: 'none',\n      border: 'none',\n      fontSize: theme.typography.pxToRem(11),\n      opacity: 0.6,\n    }),\n    contentWrap: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    }),\n    // Hide text that overflows, had to select elements within the Checkbox component, so this is a bit fragile\n    checkboxLabel: css({\n      '> span': {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        display: 'block',\n        maxWidth: '100%',\n      },\n    }),\n  };\n}\n\nexport function LogsTableNavField(props: {\n  label: string;\n  onChange: () => void;\n  labels: Record<string, FieldNameMeta>;\n  draggable?: boolean;\n  showCount?: boolean;\n}): React.JSX.Element | undefined {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  if (props.labels[props.label]) {\n    return (\n      <>\n        <div className={styles.contentWrap}>\n          <Checkbox\n            className={styles.checkboxLabel}\n            label={props.label}\n            onChange={props.onChange}\n            checked={props.labels[props.label]?.active ?? false}\n          />\n          {props.showCount && (\n            <button className={styles.labelCount} onClick={props.onChange}>\n              {props.labels[props.label]?.percentOfLinesWithLabel}%\n            </button>\n          )}\n        </div>\n        {props.draggable && (\n          <Icon\n            aria-label=\"Drag and drop icon\"\n            title=\"Drag and drop to reorder\"\n            name=\"draggabledots\"\n            size=\"lg\"\n            className={styles.dragIcon}\n          />\n        )}\n      </>\n    );\n  }\n  return undefined;\n}\n","import { css, cx } from '@emotion/css';\nimport { DragDropContext, Draggable, DraggableProvided, Droppable, DropResult } from '@hello-pangea/dnd';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useTheme2 } from '@grafana/ui/src';\n\nimport { LogsTableEmptyFields } from './LogsTableEmptyFields';\nimport { LogsTableNavField } from './LogsTableNavField';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nexport function getLogsFieldsStyles(theme: GrafanaTheme2) {\n  return {\n    wrap: css({\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      display: 'flex',\n      background: theme.colors.background.primary,\n    }),\n    dragging: css({\n      background: theme.colors.background.secondary,\n    }),\n    columnWrapper: css({\n      marginBottom: theme.spacing(1.5),\n      // need some space or the outline of the checkbox is cut off\n      paddingLeft: theme.spacing(0.5),\n    }),\n  };\n}\n\nfunction sortLabels(labels: Record<string, FieldNameMeta>) {\n  return (a: string, b: string) => {\n    const la = labels[a];\n    const lb = labels[b];\n\n    // Sort by index\n    if (la.index != null && lb.index != null) {\n      return la.index - lb.index;\n    }\n\n    // otherwise do not sort\n    return 0;\n  };\n}\n\nexport const LogsTableActiveFields = (props: {\n  labels: Record<string, FieldNameMeta>;\n  valueFilter: (value: string) => boolean;\n  toggleColumn: (columnName: string) => void;\n  reorderColumn: (sourceIndex: number, destinationIndex: number) => void;\n  id: string;\n}): JSX.Element => {\n  const { reorderColumn, labels, valueFilter, toggleColumn } = props;\n  const theme = useTheme2();\n  const styles = getLogsFieldsStyles(theme);\n  const labelKeys = Object.keys(labels).filter((labelName) => valueFilter(labelName));\n\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) {\n      return;\n    }\n    reorderColumn(result.source.index, result.destination.index);\n  };\n\n  const renderTitle = (labelName: string) => {\n    const label = labels[labelName];\n    if (label) {\n      return `${labelName} appears in ${label?.percentOfLinesWithLabel}% of log lines`;\n    }\n\n    return undefined;\n  };\n\n  if (labelKeys.length) {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"order-fields\" direction=\"vertical\">\n          {(provided) => (\n            <div className={styles.columnWrapper} {...provided.droppableProps} ref={provided.innerRef}>\n              {labelKeys.sort(sortLabels(labels)).map((labelName, index) => (\n                <Draggable draggableId={labelName} key={labelName} index={index}>\n                  {(provided: DraggableProvided, snapshot) => (\n                    <div\n                      className={cx(styles.wrap, snapshot.isDragging ? styles.dragging : undefined)}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      title={renderTitle(labelName)}\n                    >\n                      <LogsTableNavField\n                        label={labelName}\n                        onChange={() => toggleColumn(labelName)}\n                        labels={labels}\n                        draggable={true}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n\n  return <LogsTableEmptyFields />;\n};\n","import { useTheme2 } from '@grafana/ui/src';\n\nimport { getLogsFieldsStyles } from './LogsTableActiveFields';\nimport { LogsTableEmptyFields } from './LogsTableEmptyFields';\nimport { LogsTableNavField } from './LogsTableNavField';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nfunction sortLabels(labels: Record<string, FieldNameMeta>) {\n  return (a: string, b: string) => {\n    const la = labels[a];\n    const lb = labels[b];\n\n    // ...sort by type and alphabetically\n    if (la != null && lb != null) {\n      return (\n        Number(lb.type === 'TIME_FIELD') - Number(la.type === 'TIME_FIELD') ||\n        Number(lb.type === 'BODY_FIELD') - Number(la.type === 'BODY_FIELD') ||\n        collator.compare(a, b)\n      );\n    }\n\n    // otherwise do not sort\n    return 0;\n  };\n}\n\nexport const LogsTableAvailableFields = (props: {\n  labels: Record<string, FieldNameMeta>;\n  valueFilter: (value: string) => boolean;\n  toggleColumn: (columnName: string) => void;\n}): JSX.Element => {\n  const { labels, valueFilter, toggleColumn } = props;\n  const theme = useTheme2();\n  const styles = getLogsFieldsStyles(theme);\n  const labelKeys = Object.keys(labels).filter((labelName) => valueFilter(labelName));\n  if (labelKeys.length) {\n    // Otherwise show list with a hardcoded order\n    return (\n      <div className={styles.columnWrapper}>\n        {labelKeys.sort(sortLabels(labels)).map((labelName, index) => (\n          <div\n            key={labelName}\n            className={styles.wrap}\n            title={`${labelName} appears in ${labels[labelName]?.percentOfLinesWithLabel}% of log lines`}\n          >\n            <LogsTableNavField\n              showCount={true}\n              label={labelName}\n              onChange={() => toggleColumn(labelName)}\n              labels={labels}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return <LogsTableEmptyFields />;\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useTheme2 } from '@grafana/ui/src';\n\nimport { LogsTableActiveFields } from './LogsTableActiveFields';\nimport { LogsTableAvailableFields } from './LogsTableAvailableFields';\nimport { FieldNameMeta } from './LogsTableWrap';\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    sidebarWrap: css({\n      overflowY: 'scroll',\n      height: 'calc(100% - 50px)',\n      /* Hide scrollbar for Chrome, Safari, and Opera */\n      '&::-webkit-scrollbar': {\n        display: 'none',\n      },\n      /* Hide scrollbar for Firefox */\n      scrollbarWidth: 'none',\n    }),\n    columnHeaderButton: css({\n      appearance: 'none',\n      background: 'none',\n      border: 'none',\n      fontSize: theme.typography.pxToRem(11),\n    }),\n    columnHeader: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontSize: theme.typography.h6.fontSize,\n      background: theme.colors.background.secondary,\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      paddingTop: theme.spacing(0.75),\n      paddingRight: theme.spacing(0.75),\n      paddingBottom: theme.spacing(0.75),\n      paddingLeft: theme.spacing(1.5),\n      zIndex: 3,\n      marginBottom: theme.spacing(2),\n    }),\n  };\n}\n\nexport const LogsTableMultiSelect = (props: {\n  toggleColumn: (columnName: string) => void;\n  filteredColumnsWithMeta: Record<string, FieldNameMeta> | undefined;\n  columnsWithMeta: Record<string, FieldNameMeta>;\n  clear: () => void;\n  reorderColumn: (oldIndex: number, newIndex: number) => void;\n}) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.sidebarWrap}>\n      {/* Sidebar columns */}\n      <>\n        <div className={styles.columnHeader}>\n          Selected fields\n          <button onClick={props.clear} className={styles.columnHeaderButton}>\n            Reset\n          </button>\n        </div>\n        <LogsTableActiveFields\n          reorderColumn={props.reorderColumn}\n          toggleColumn={props.toggleColumn}\n          labels={props.filteredColumnsWithMeta ?? props.columnsWithMeta}\n          valueFilter={(value) => props.columnsWithMeta[value]?.active ?? false}\n          id={'selected-fields'}\n        />\n\n        <div className={styles.columnHeader}>Fields</div>\n        <LogsTableAvailableFields\n          toggleColumn={props.toggleColumn}\n          labels={props.filteredColumnsWithMeta ?? props.columnsWithMeta}\n          valueFilter={(value) => !props.columnsWithMeta[value]?.active}\n        />\n      </>\n    </div>\n  );\n};\n","import uFuzzy from '@leeoniya/ufuzzy';\nimport { debounce as debounceLodash } from 'lodash';\n\nconst uf = new uFuzzy({\n  intraMode: 1,\n  intraIns: 1,\n  intraSub: 1,\n  intraTrn: 1,\n  intraDel: 1,\n});\n\nexport function fuzzySearch(haystack: string[], query: string, dispatcher: (data: string[][]) => void) {\n  const [idxs, info, order] = uf.search(haystack, query, 0, 1e5);\n\n  let haystackOrder: string[] = [];\n  let matchesSet: Set<string> = new Set();\n  if (idxs && order) {\n    /**\n     * get the fuzzy matches for hilighting\n     * @param part\n     * @param matched\n     */\n    const mark = (part: string, matched: boolean) => {\n      if (matched) {\n        matchesSet.add(part);\n      }\n    };\n\n    // Iterate to create the order of needles(queries) and the matches\n    for (let i = 0; i < order.length; i++) {\n      let infoIdx = order[i];\n\n      /** Evaluate the match, get the matches for highlighting */\n      uFuzzy.highlight(haystack[info.idx[infoIdx]], info.ranges[infoIdx], mark);\n      /** Get the order */\n      haystackOrder.push(haystack[info.idx[infoIdx]]);\n    }\n\n    dispatcher([haystackOrder, [...matchesSet]]);\n  } else if (!query) {\n    dispatcher([[], []]);\n  }\n}\n\nexport const debouncedFuzzySearch = debounceLodash(fuzzySearch, 300);\n","import { css } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport {\n  DataFrame,\n  ExploreLogsPanelState,\n  GrafanaTheme2,\n  Labels,\n  LogsSortOrder,\n  SelectableValue,\n  SplitOpen,\n  TimeRange,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { InlineField, Select, Themeable2 } from '@grafana/ui/';\n\nimport { parseLogsFrame } from '../../logs/logsFrame';\n\nimport { LogsColumnSearch } from './LogsColumnSearch';\nimport { LogsTable } from './LogsTable';\nimport { LogsTableMultiSelect } from './LogsTableMultiSelect';\nimport { fuzzySearch } from './utils/uFuzzy';\n\ninterface Props extends Themeable2 {\n  logsFrames: DataFrame[];\n  width: number;\n  timeZone: string;\n  splitOpen: SplitOpen;\n  range: TimeRange;\n  logsSortOrder: LogsSortOrder;\n  panelState: ExploreLogsPanelState | undefined;\n  updatePanelState: (panelState: Partial<ExploreLogsPanelState>) => void;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  datasourceType?: string;\n}\n\ntype ActiveFieldMeta = {\n  active: false;\n  index: undefined; // if undefined the column is not selected\n};\n\ntype InactiveFieldMeta = {\n  active: true;\n  index: number; // if undefined the column is not selected\n};\n\ntype GenericMeta = {\n  percentOfLinesWithLabel: number;\n  type?: 'BODY_FIELD' | 'TIME_FIELD';\n};\n\nexport type FieldNameMeta = (InactiveFieldMeta | ActiveFieldMeta) & GenericMeta;\n\ntype FieldName = string;\ntype FieldNameMetaStore = Record<FieldName, FieldNameMeta>;\n\nexport function LogsTableWrap(props: Props) {\n  const { logsFrames, updatePanelState, panelState } = props;\n  const propsColumns = panelState?.columns;\n  // Save the normalized cardinality of each label\n  const [columnsWithMeta, setColumnsWithMeta] = useState<FieldNameMetaStore | undefined>(undefined);\n\n  // Filtered copy of columnsWithMeta that only includes matching results\n  const [filteredColumnsWithMeta, setFilteredColumnsWithMeta] = useState<FieldNameMetaStore | undefined>(undefined);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const height = getLogsTableHeight();\n  const panelStateRefId = props?.panelState?.refId;\n\n  // The current dataFrame containing the refId of the current query\n  const [currentDataFrame, setCurrentDataFrame] = useState<DataFrame>(\n    logsFrames.find((f) => f.refId === panelStateRefId) ?? logsFrames[0]\n  );\n\n  const getColumnsFromProps = useCallback(\n    (fieldNames: FieldNameMetaStore) => {\n      const previouslySelected = props.panelState?.columns;\n      if (previouslySelected) {\n        Object.values(previouslySelected).forEach((key, index) => {\n          if (fieldNames[key]) {\n            fieldNames[key].active = true;\n            fieldNames[key].index = index;\n          }\n        });\n      }\n      return fieldNames;\n    },\n    [props.panelState?.columns]\n  );\n  const logsFrame = parseLogsFrame(currentDataFrame);\n\n  useEffect(() => {\n    if (logsFrame?.timeField.name && logsFrame?.bodyField.name && !propsColumns) {\n      const defaultColumns = { 0: logsFrame?.timeField.name ?? '', 1: logsFrame?.bodyField.name ?? '' };\n      updatePanelState({\n        columns: Object.values(defaultColumns),\n        visualisationType: 'table',\n        labelFieldName: logsFrame?.getLabelFieldName() ?? undefined,\n      });\n    }\n  }, [logsFrame, propsColumns, updatePanelState]);\n\n  /**\n   * When logs frame updates (e.g. query|range changes), we need to set the selected frame to state\n   */\n  useEffect(() => {\n    const newFrame = logsFrames.find((f) => f.refId === panelStateRefId) ?? logsFrames[0];\n    if (newFrame) {\n      setCurrentDataFrame(newFrame);\n    }\n  }, [logsFrames, panelStateRefId]);\n\n  /**\n   * Keeps the filteredColumnsWithMeta state in sync with the columnsWithMeta state,\n   * which can be updated by explore browser history state changes\n   * This prevents an edge case bug where the user is navigating while a search is open.\n   */\n  useEffect(() => {\n    if (!columnsWithMeta || !filteredColumnsWithMeta) {\n      return;\n    }\n    let newFiltered = { ...filteredColumnsWithMeta };\n    let flag = false;\n    Object.keys(columnsWithMeta).forEach((key) => {\n      if (newFiltered[key] && newFiltered[key].active !== columnsWithMeta[key].active) {\n        newFiltered[key] = columnsWithMeta[key];\n        flag = true;\n      }\n    });\n    if (flag) {\n      setFilteredColumnsWithMeta(newFiltered);\n    }\n  }, [columnsWithMeta, filteredColumnsWithMeta]);\n\n  /**\n   * when the query results change, we need to update the columnsWithMeta state\n   * and reset any local search state\n   *\n   * This will also find all the unique labels, and calculate how many log lines have each label into the labelCardinality Map\n   * Then it normalizes the counts\n   *\n   */\n  useEffect(() => {\n    // If the data frame is empty, there's nothing to viz, it could mean the user has unselected all columns\n    if (!currentDataFrame.length) {\n      return;\n    }\n    const numberOfLogLines = currentDataFrame ? currentDataFrame.length : 0;\n    const logsFrame = parseLogsFrame(currentDataFrame);\n    const labels = logsFrame?.getLogFrameLabelsAsLabels();\n\n    const otherFields = [];\n\n    if (logsFrame) {\n      otherFields.push(...logsFrame.extraFields.filter((field) => !field?.config?.custom?.hidden));\n    }\n    if (logsFrame?.severityField) {\n      otherFields.push(logsFrame?.severityField);\n    }\n    if (logsFrame?.bodyField) {\n      otherFields.push(logsFrame?.bodyField);\n    }\n    if (logsFrame?.timeField) {\n      otherFields.push(logsFrame?.timeField);\n    }\n\n    // Use a map to dedupe labels and count their occurrences in the logs\n    const labelCardinality = new Map<FieldName, FieldNameMeta>();\n\n    // What the label state will look like\n    let pendingLabelState: FieldNameMetaStore = {};\n\n    // If we have labels and log lines\n    if (labels?.length && numberOfLogLines) {\n      // Iterate through all of Labels\n      labels.forEach((labels: Labels) => {\n        const labelsArray = Object.keys(labels);\n        // Iterate through the label values\n        labelsArray.forEach((label) => {\n          // If it's already in our map, increment the count\n          if (labelCardinality.has(label)) {\n            const value = labelCardinality.get(label);\n            if (value) {\n              if (value?.active) {\n                labelCardinality.set(label, {\n                  percentOfLinesWithLabel: value.percentOfLinesWithLabel + 1,\n                  active: true,\n                  index: value.index,\n                });\n              } else {\n                labelCardinality.set(label, {\n                  percentOfLinesWithLabel: value.percentOfLinesWithLabel + 1,\n                  active: false,\n                  index: undefined,\n                });\n              }\n            }\n            // Otherwise add it\n          } else {\n            labelCardinality.set(label, { percentOfLinesWithLabel: 1, active: false, index: undefined });\n          }\n        });\n      });\n\n      // Converting the map to an object\n      pendingLabelState = Object.fromEntries(labelCardinality);\n\n      // Convert count to percent of log lines\n      Object.keys(pendingLabelState).forEach((key) => {\n        pendingLabelState[key].percentOfLinesWithLabel = normalize(\n          pendingLabelState[key].percentOfLinesWithLabel,\n          numberOfLogLines\n        );\n      });\n    }\n\n    // Normalize the other fields\n    otherFields.forEach((field) => {\n      const isActive = pendingLabelState[field.name]?.active;\n      const index = pendingLabelState[field.name]?.index;\n      if (isActive && index !== undefined) {\n        pendingLabelState[field.name] = {\n          percentOfLinesWithLabel: normalize(\n            field.values.filter((value) => value !== null && value !== undefined).length,\n            numberOfLogLines\n          ),\n          active: true,\n          index: index,\n        };\n      } else {\n        pendingLabelState[field.name] = {\n          percentOfLinesWithLabel: normalize(\n            field.values.filter((value) => value !== null && value !== undefined).length,\n            numberOfLogLines\n          ),\n          active: false,\n          index: undefined,\n        };\n      }\n    });\n\n    pendingLabelState = getColumnsFromProps(pendingLabelState);\n\n    // Get all active columns\n    const active = Object.keys(pendingLabelState).filter((key) => pendingLabelState[key].active);\n\n    // If nothing is selected, then select the default columns\n    if (active.length === 0) {\n      if (logsFrame?.bodyField?.name) {\n        pendingLabelState[logsFrame.bodyField.name].active = true;\n      }\n      if (logsFrame?.timeField?.name) {\n        pendingLabelState[logsFrame.timeField.name].active = true;\n      }\n    }\n\n    if (logsFrame?.bodyField?.name && logsFrame?.timeField?.name) {\n      pendingLabelState[logsFrame.bodyField.name].type = 'BODY_FIELD';\n      pendingLabelState[logsFrame.timeField.name].type = 'TIME_FIELD';\n    }\n\n    setColumnsWithMeta(pendingLabelState);\n\n    // The panel state is updated when the user interacts with the multi-select sidebar\n  }, [currentDataFrame, getColumnsFromProps]);\n\n  const [sidebarWidth, setSidebarWidth] = useState(220);\n  const tableWidth = props.width - sidebarWidth;\n\n  if (!columnsWithMeta) {\n    return null;\n  }\n\n  function columnFilterEvent(columnName: string) {\n    if (columnsWithMeta) {\n      const newState = !columnsWithMeta[columnName]?.active;\n      const priorActiveCount = Object.keys(columnsWithMeta).filter((column) => columnsWithMeta[column]?.active)?.length;\n      const event = {\n        columnAction: newState ? 'add' : 'remove',\n        columnCount: newState ? priorActiveCount + 1 : priorActiveCount - 1,\n        datasourceType: props.datasourceType,\n      };\n      reportInteraction('grafana_explore_logs_table_column_filter_clicked', event);\n    }\n  }\n\n  function searchFilterEvent(searchResultCount: number) {\n    reportInteraction('grafana_explore_logs_table_text_search_result_count', {\n      resultCount: searchResultCount,\n      datasourceType: props.datasourceType ?? 'unknown',\n    });\n  }\n\n  const clearSelection = () => {\n    const pendingLabelState = { ...columnsWithMeta };\n    let index = 0;\n    Object.keys(pendingLabelState).forEach((key) => {\n      const isDefaultField = !!pendingLabelState[key].type;\n      // after reset the only active fields are the special time and body fields\n      pendingLabelState[key].active = isDefaultField;\n      // reset the index\n      pendingLabelState[key].index = isDefaultField ? index++ : undefined;\n    });\n    setColumnsWithMeta(pendingLabelState);\n  };\n\n  const reorderColumn = (sourceIndex: number, destinationIndex: number) => {\n    if (sourceIndex === destinationIndex) {\n      return;\n    }\n\n    const pendingLabelState = { ...columnsWithMeta };\n\n    const keys = Object.keys(pendingLabelState)\n      .filter((key) => pendingLabelState[key].active)\n      .map((key) => ({\n        fieldName: key,\n        index: pendingLabelState[key].index ?? 0,\n      }))\n      .sort((a, b) => a.index - b.index);\n\n    const [source] = keys.splice(sourceIndex, 1);\n    keys.splice(destinationIndex, 0, source);\n\n    keys.forEach((key, index) => {\n      pendingLabelState[key.fieldName].index = index;\n    });\n\n    // Set local state\n    setColumnsWithMeta(pendingLabelState);\n\n    // Sync the explore state\n    updateExploreState(pendingLabelState);\n  };\n\n  function updateExploreState(pendingLabelState: FieldNameMetaStore) {\n    // Get all active columns and sort by index\n    const newColumnsArray = Object.keys(pendingLabelState)\n      // Only include active filters\n      .filter((key) => pendingLabelState[key]?.active)\n      .sort((a, b) => {\n        const pa = pendingLabelState[a];\n        const pb = pendingLabelState[b];\n        if (pa.index !== undefined && pb.index !== undefined) {\n          return pa.index - pb.index; // sort by index\n        }\n        return 0;\n      });\n\n    const newColumns: Record<number, string> = Object.assign(\n      {},\n      // Get the keys of the object as an array\n      newColumnsArray\n    );\n\n    const defaultColumns = { 0: logsFrame?.timeField.name ?? '', 1: logsFrame?.bodyField.name ?? '' };\n    const newPanelState: ExploreLogsPanelState = {\n      ...props.panelState,\n      // URL format requires our array of values be an object, so we convert it using object.assign\n      columns: Object.keys(newColumns).length ? newColumns : defaultColumns,\n      refId: currentDataFrame.refId,\n      visualisationType: 'table',\n      labelFieldName: logsFrame?.getLabelFieldName() ?? undefined,\n    };\n\n    // Update url state\n    updatePanelState(newPanelState);\n  }\n\n  // Toggle a column on or off when the user interacts with an element in the multi-select sidebar\n  const toggleColumn = (columnName: FieldName) => {\n    if (!columnsWithMeta || !(columnName in columnsWithMeta)) {\n      console.warn('failed to get column', columnsWithMeta);\n      return;\n    }\n\n    const length = Object.keys(columnsWithMeta).filter((c) => columnsWithMeta[c].active).length;\n    const isActive = !columnsWithMeta[columnName].active ? true : undefined;\n\n    let pendingLabelState: FieldNameMetaStore;\n    if (isActive) {\n      pendingLabelState = {\n        ...columnsWithMeta,\n        [columnName]: {\n          ...columnsWithMeta[columnName],\n          active: isActive,\n          index: length,\n        },\n      };\n    } else {\n      pendingLabelState = {\n        ...columnsWithMeta,\n        [columnName]: {\n          ...columnsWithMeta[columnName],\n          active: false,\n          index: undefined,\n        },\n      };\n    }\n\n    // Analytics\n    columnFilterEvent(columnName);\n\n    // Set local state\n    setColumnsWithMeta(pendingLabelState);\n\n    // If user is currently filtering, update filtered state\n    if (filteredColumnsWithMeta) {\n      const active = !filteredColumnsWithMeta[columnName]?.active;\n      let pendingFilteredLabelState: FieldNameMetaStore;\n      if (active) {\n        pendingFilteredLabelState = {\n          ...filteredColumnsWithMeta,\n          [columnName]: {\n            ...filteredColumnsWithMeta[columnName],\n            active: active,\n            index: length,\n          },\n        };\n      } else {\n        pendingFilteredLabelState = {\n          ...filteredColumnsWithMeta,\n          [columnName]: {\n            ...filteredColumnsWithMeta[columnName],\n            active: false,\n            index: undefined,\n          },\n        };\n      }\n\n      setFilteredColumnsWithMeta(pendingFilteredLabelState);\n    }\n\n    updateExploreState(pendingLabelState);\n  };\n\n  // uFuzzy search dispatcher, adds any matches to the local state\n  const dispatcher = (data: string[][]) => {\n    const matches = data[0];\n    let newColumnsWithMeta: FieldNameMetaStore = {};\n    let numberOfResults = 0;\n    matches.forEach((match) => {\n      if (match in columnsWithMeta) {\n        newColumnsWithMeta[match] = columnsWithMeta[match];\n        numberOfResults++;\n      }\n    });\n    setFilteredColumnsWithMeta(newColumnsWithMeta);\n    searchFilterEvent(numberOfResults);\n  };\n\n  // uFuzzy search\n  const search = (needle: string) => {\n    fuzzySearch(Object.keys(columnsWithMeta), needle, dispatcher);\n  };\n\n  // onChange handler for search input\n  const onSearchInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const value = e.currentTarget?.value;\n    setSearchValue(value);\n    if (value) {\n      search(value);\n    } else {\n      // If the search input is empty, reset the local search state.\n      setFilteredColumnsWithMeta(undefined);\n    }\n  };\n\n  const onFrameSelectorChange = (value: SelectableValue<string>) => {\n    const matchingDataFrame = logsFrames.find((frame) => frame.refId === value.value);\n    if (matchingDataFrame) {\n      setCurrentDataFrame(logsFrames.find((frame) => frame.refId === value.value) ?? logsFrames[0]);\n    }\n    props.updatePanelState({ refId: value.value, labelFieldName: logsFrame?.getLabelFieldName() ?? undefined });\n  };\n\n  const styles = getStyles(props.theme, height, sidebarWidth);\n\n  const getOnResize: ResizeCallback = (event, direction, ref) => {\n    const newSidebarWidth = Number(ref.style.width.slice(0, -2));\n    if (!isNaN(newSidebarWidth)) {\n      setSidebarWidth(newSidebarWidth);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {logsFrames.length > 1 && (\n          <div>\n            <InlineField\n              label=\"Select query\"\n              htmlFor=\"explore_logs_table_frame_selector\"\n              labelWidth={22}\n              tooltip=\"Select a query to visualize in the table.\"\n            >\n              <Select\n                inputId={'explore_logs_table_frame_selector'}\n                aria-label={'Select query by name'}\n                value={currentDataFrame.refId}\n                options={logsFrames.map((frame) => {\n                  return {\n                    label: frame.refId,\n                    value: frame.refId,\n                  };\n                })}\n                onChange={onFrameSelectorChange}\n              />\n            </InlineField>\n          </div>\n        )}\n      </div>\n      <div className={styles.wrapper}>\n        <Resizable\n          enable={{\n            right: true,\n          }}\n          handleClasses={{ right: styles.rzHandle }}\n          onResize={getOnResize}\n        >\n          <section className={styles.sidebar}>\n            <LogsColumnSearch value={searchValue} onChange={onSearchInputChange} />\n            <LogsTableMultiSelect\n              reorderColumn={reorderColumn}\n              toggleColumn={toggleColumn}\n              filteredColumnsWithMeta={filteredColumnsWithMeta}\n              columnsWithMeta={columnsWithMeta}\n              clear={clearSelection}\n            />\n          </section>\n        </Resizable>\n        <LogsTable\n          logsFrame={logsFrame}\n          onClickFilterLabel={props.onClickFilterLabel}\n          onClickFilterOutLabel={props.onClickFilterOutLabel}\n          logsSortOrder={props.logsSortOrder}\n          range={props.range}\n          splitOpen={props.splitOpen}\n          timeZone={props.timeZone}\n          width={tableWidth}\n          dataFrame={currentDataFrame}\n          columnsWithMeta={columnsWithMeta}\n          height={height}\n        />\n      </div>\n    </>\n  );\n}\n\nconst normalize = (value: number, total: number): number => {\n  return Math.ceil((100 * value) / total);\n};\n\nfunction getStyles(theme: GrafanaTheme2, height: number, width: number) {\n  return {\n    wrapper: css({\n      display: 'flex',\n    }),\n    sidebar: css({\n      height: height,\n      fontSize: theme.typography.pxToRem(11),\n      overflowY: 'hidden',\n      width: width,\n      paddingRight: theme.spacing(3),\n    }),\n    rzHandle: css({\n      background: theme.colors.secondary.main,\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        transition: '0.3s background ease-in-out',\n      },\n      position: 'relative',\n      height: '50% !important',\n      width: `${theme.spacing(1)} !important`,\n      top: '25% !important',\n      right: `${theme.spacing(1)} !important`,\n      cursor: 'grab',\n      borderRadius: theme.shape.radius.pill,\n      ['&:hover']: {\n        background: theme.colors.secondary.shade,\n      },\n    }),\n  };\n}\n\nexport const getLogsTableHeight = () => {\n  // Instead of making the height of the table based on the content (like in the table panel itself), let's try to use the vertical space that is available.\n  // Since this table is in explore, we can expect the user to be running multiple queries that return disparate numbers of rows and labels in the same session\n  // Also changing the height of the table between queries can be and cause content to jump, so we'll set a minimum height of 500px, and a max based on the innerHeight\n  // Ideally the table container should always be able to fit in the users viewport without needing to scroll\n  return Math.max(window.innerHeight - 500, 500);\n};\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { DataQueryError, GrafanaTheme2 } from '@grafana/data';\nimport { Alert, AlertVariant, Button, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  error?: DataQueryError;\n  title: string;\n  severity?: AlertVariant;\n  suggestedAction?: string;\n  onSuggestedAction?(): void;\n  onRemove?(): void;\n};\nexport function SupplementaryResultError(props: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const SHORT_ERROR_MESSAGE_LIMIT = 100;\n  const { error, title, suggestedAction, onSuggestedAction, onRemove, severity = 'warning' } = props;\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = error?.message || error?.data?.message || '';\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.supplementaryErrorContainer}>\n      <Alert title={title} severity={severity} onRemove={onRemove}>\n        <div className={styles.suggestedActionWrapper}>\n          {showButton ? (\n            <Button\n              variant=\"secondary\"\n              size=\"xs\"\n              onClick={() => {\n                setIsOpen(true);\n              }}\n            >\n              Show details\n            </Button>\n          ) : (\n            message\n          )}\n          {suggestedAction && onSuggestedAction && (\n            <div className={styles.suggestedActionWrapper}>\n              <Button variant=\"primary\" size=\"xs\" onClick={onSuggestedAction}>\n                {suggestedAction}\n              </Button>\n            </div>\n          )}\n        </div>\n      </Alert>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    supplementaryErrorContainer: css({\n      width: '50%',\n      minWidth: `${theme.breakpoints.values.sm}px`,\n      margin: '0 auto',\n    }),\n    suggestedActionWrapper: css({\n      height: theme.spacing(6),\n      ['button']: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(7),\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport * as React from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryResponse,\n  LoadingState,\n  SplitOpen,\n  EventBus,\n  GrafanaTheme2,\n  DataFrame,\n  TimeRange,\n} from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { Icon, SeriesVisibilityChangeMode, Tooltip, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { getLogsVolumeDataSourceInfo, isLogsVolumeLimited } from '../../logs/utils';\nimport { ExploreGraph } from '../Graph/ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse;\n  allLogsVolumeMaximum: number;\n  timeRange: TimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  annotations: DataFrame[];\n  toggleLegendRef?: React.MutableRefObject<(name: string, mode: SeriesVisibilityChangeMode) => void> | undefined;\n};\n\nexport function LogsVolumePanel(props: Props) {\n  const {\n    width,\n    timeZone,\n    splitOpen,\n    onUpdateTimeRange,\n    onHiddenSeriesChanged,\n    allLogsVolumeMaximum,\n    toggleLegendRef,\n  } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  const logsVolumeData = props.logsVolumeData;\n\n  const logsVolumeInfo = getLogsVolumeDataSourceInfo(logsVolumeData?.data);\n  let extraInfo = logsVolumeInfo ? `${logsVolumeInfo.name}` : '';\n\n  if (isLogsVolumeLimited(logsVolumeData.data)) {\n    extraInfo = [\n      extraInfo,\n      'This datasource does not support full-range histograms. The graph below is based on the logs seen in the response.',\n    ]\n      .filter(identity)\n      .join('. ');\n  }\n\n  let extraInfoComponent = <span>{extraInfo}</span>;\n\n  if (logsVolumeData.state === LoadingState.Streaming) {\n    extraInfoComponent = (\n      <>\n        {extraInfoComponent}\n        <Tooltip content=\"Streaming\">\n          <Icon name=\"circle-mono\" size=\"md\" className={styles.streaming} data-testid=\"logs-volume-streaming\" />\n        </Tooltip>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ height }} className={styles.contentContainer}>\n      <ExploreGraph\n        toggleLegendRef={toggleLegendRef}\n        vizLegendOverrides={{\n          calcs: ['sum'],\n        }}\n        graphStyle=\"lines\"\n        loadingState={logsVolumeData.state ?? LoadingState.Done}\n        data={logsVolumeData.data}\n        height={height}\n        width={width - spacing * 2}\n        timeRange={props.timeRange}\n        onChangeTime={onUpdateTimeRange}\n        timeZone={timeZone}\n        splitOpenFn={splitOpen}\n        tooltipDisplayMode={TooltipDisplayMode.Multi}\n        onHiddenSeriesChanged={onHiddenSeriesChanged}\n        anchorToZero\n        yAxisMaximum={allLogsVolumeMaximum}\n        eventBus={props.eventBus}\n        annotations={props.annotations}\n      />\n      {extraInfoComponent && <div className={styles.extraInfoContainer}>{extraInfoComponent}</div>}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: -10px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    `,\n    streaming: css`\n      color: ${theme.colors.success.text};\n    `,\n  };\n};\n","import { DataQueryError, DataQueryResponse } from '@grafana/data';\n\n// Currently we can only infer if an error response is a timeout or not.\nexport function isTimeoutErrorResponse(response: DataQueryResponse | undefined): boolean {\n  if (!response) {\n    return false;\n  }\n  if (!response.error && !response.errors) {\n    return false;\n  }\n\n  const errors = response.error ? [response.error] : response.errors || [];\n\n  return errors.some((error: DataQueryError) => {\n    const message = `${error.message || error.data?.message}`?.toLowerCase();\n    return message.includes('timeout');\n  });\n}\n","import { css } from '@emotion/css';\nimport { flatten, groupBy, mapValues, sortBy } from 'lodash';\nimport { useMemo } from 'react';\nimport * as React from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  DataQueryResponse,\n  DataTopic,\n  dateTime,\n  EventBus,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { Button, InlineField, Alert, useStyles2, SeriesVisibilityChangeMode } from '@grafana/ui';\n\nimport { mergeLogsVolumeDataFrames, isLogsVolumeLimited, getLogsVolumeMaximumRange } from '../../logs/utils';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { isTimeoutErrorResponse } from './utils/logsVolumeResponse';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  onClose?(): void;\n  toggleLegendRef?: React.MutableRefObject<(name: string, mode: SeriesVisibilityChangeMode) => void>;\n};\n\nexport const LogsVolumePanelList = ({\n  logsVolumeData,\n  absoluteRange,\n  onUpdateTimeRange,\n  width,\n  onLoadLogsVolume,\n  onHiddenSeriesChanged,\n  eventBus,\n  splitOpen,\n  timeZone,\n  onClose,\n  toggleLegendRef,\n}: Props) => {\n  const {\n    logVolumes,\n    maximumValue: allLogsVolumeMaximumValue,\n    maximumRange: allLogsVolumeMaximumRange,\n    annotations,\n  } = useMemo(() => {\n    let maximumValue = -Infinity;\n    const data = logsVolumeData?.data.filter((frame: DataFrame) => frame.meta?.dataTopic !== DataTopic.Annotations);\n    const annotations =\n      logsVolumeData?.data.filter((frame: DataFrame) => frame.meta?.dataTopic === DataTopic.Annotations) || [];\n    const sorted = sortBy(data || [], 'meta.custom.datasourceName');\n    const grouped = groupBy(sorted, 'meta.custom.datasourceName');\n    const logVolumes = mapValues(grouped, (value) => {\n      const mergedData = mergeLogsVolumeDataFrames(value);\n      maximumValue = Math.max(maximumValue, mergedData.maximum);\n      return mergedData.dataFrames;\n    });\n    const maximumRange = getLogsVolumeMaximumRange(flatten(Object.values(logVolumes)));\n    return {\n      maximumValue,\n      maximumRange,\n      logVolumes,\n      annotations,\n    };\n  }, [logsVolumeData]);\n\n  const styles = useStyles2(getStyles);\n\n  const numberOfLogVolumes = Object.keys(logVolumes).length;\n\n  const containsZoomed = Object.values(logVolumes).some((data: DataFrame[]) => {\n    const zoomRatio = logsLevelZoomRatio(data, absoluteRange);\n    return !isLogsVolumeLimited(data) && zoomRatio && zoomRatio < 1;\n  });\n\n  const timeoutError = isTimeoutErrorResponse(logsVolumeData);\n\n  const from = dateTime(Math.max(absoluteRange.from, allLogsVolumeMaximumRange.from));\n  const to = dateTime(Math.min(absoluteRange.to, allLogsVolumeMaximumRange.to));\n  const visibleRange: TimeRange = { from, to, raw: { from, to } };\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    return <span>Loading...</span>;\n  } else if (timeoutError) {\n    return (\n      <SupplementaryResultError\n        title=\"The logs volume query has timed out\"\n        // Using info to avoid users thinking that the actual query has failed.\n        severity=\"info\"\n        suggestedAction=\"Retry\"\n        onSuggestedAction={onLoadLogsVolume}\n        onRemove={onClose}\n      />\n    );\n  } else if (logsVolumeData?.error !== undefined) {\n    return <SupplementaryResultError error={logsVolumeData.error} title=\"Failed to load log volume for this query\" />;\n  }\n\n  if (numberOfLogVolumes === 0) {\n    return (\n      <div className={styles.alertContainer}>\n        <Alert severity=\"info\" title=\"No logs volume available\">\n          No volume information available for the current queries and time range.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.listContainer}>\n      {Object.keys(logVolumes).map((name, index) => {\n        const logsVolumeData = { data: logVolumes[name] };\n        return (\n          <LogsVolumePanel\n            toggleLegendRef={toggleLegendRef}\n            key={index}\n            timeRange={visibleRange}\n            allLogsVolumeMaximum={allLogsVolumeMaximumValue}\n            width={width}\n            logsVolumeData={logsVolumeData}\n            onUpdateTimeRange={onUpdateTimeRange}\n            timeZone={timeZone}\n            splitOpen={splitOpen}\n            onLoadLogsVolume={onLoadLogsVolume}\n            // TODO: Support filtering level from multiple log levels\n            onHiddenSeriesChanged={numberOfLogVolumes > 1 ? () => {} : onHiddenSeriesChanged}\n            eventBus={eventBus}\n            annotations={annotations}\n          />\n        );\n      })}\n      {containsZoomed && (\n        <div className={styles.extraInfoContainer}>\n          <InlineField label=\"Reload log volume\" transparent>\n            <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n          </InlineField>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    listContainer: css`\n      padding-top: 10px;\n    `,\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    alertContainer: css`\n      width: 50%;\n      min-width: ${theme.breakpoints.values.sm}px;\n      margin: 0 auto;\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataFrame[] | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData[0] && logsVolumeData[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import { css, cx } from '@emotion/css';\nimport { capitalize, groupBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { useCallback, useEffect, useState, useRef } from 'react';\nimport * as React from 'react';\nimport { usePrevious, useUnmount } from 'react-use';\n\nimport {\n  SplitOpen,\n  LogRowModel,\n  LogsMetaItem,\n  DataFrame,\n  DataQuery,\n  AbsoluteTimeRange,\n  GrafanaTheme2,\n  LoadingState,\n  TimeZone,\n  RawTimeRange,\n  DataQueryResponse,\n  LogRowContextOptions,\n  LinkModel,\n  EventBus,\n  ExplorePanelsState,\n  Field,\n  TimeRange,\n  LogsDedupStrategy,\n  LogsSortOrder,\n  LogLevel,\n  DataTopic,\n  CoreApp,\n  LogsDedupDescription,\n  rangeUtil,\n  ExploreLogsPanelState,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  serializeStateToUrlParam,\n  urlUtil,\n} from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport {\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  PanelChrome,\n  PopoverContent,\n  RadioButtonGroup,\n  SeriesVisibilityChangeMode,\n  Themeable2,\n  withTheme2,\n} from '@grafana/ui';\nimport { mapMouseEventToMode } from '@grafana/ui/src/components/VizLegend/utils';\nimport { Trans } from 'app/core/internationalization';\nimport store from 'app/core/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { InfiniteScroll } from 'app/features/logs/components/InfiniteScroll';\nimport { LogRows } from 'app/features/logs/components/LogRows';\nimport { LogRowContextModal } from 'app/features/logs/components/log-context/LogRowContextModal';\nimport { LogLevelColor, dedupLogRows, filterLogLevels } from 'app/features/logs/logsModel';\nimport { getLogLevel, getLogLevelFromKey, getLogLevelInfo } from 'app/features/logs/utils';\nimport { getState } from 'app/store/store';\nimport { ExploreItemState, useDispatch } from 'app/types';\n\nimport {\n  contentOutlineTrackLevelFilter,\n  contentOutlineTrackPinAdded,\n  contentOutlineTrackPinClicked,\n  contentOutlineTrackPinLimitReached,\n  contentOutlineTrackPinRemoved,\n  contentOutlineTrackUnpinClicked,\n} from '../ContentOutline/ContentOutlineAnalyticEvents';\nimport { useContentOutlineContext } from '../ContentOutline/ContentOutlineContext';\nimport { getUrlStateFromPaneState } from '../hooks/useStateSync';\nimport { changePanelState } from '../state/explorePane';\n\nimport { LogsFeedback } from './LogsFeedback';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { LogsTableWrap, getLogsTableHeight } from './LogsTableWrap';\nimport { LogsVolumePanelList } from './LogsVolumePanelList';\nimport { SETTINGS_KEYS, visualisationTypeKey } from './utils/logs';\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: string;\n  datasourceType?: string;\n  logsVolumeEnabled: boolean;\n  logsVolumeData: DataQueryResponse | undefined;\n  onSetLogsVolumeEnabled: (enabled: boolean) => void;\n  loadLogsVolumeData: () => void;\n  showContextToggle?: (row: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel?: (key: string, value: string, frame?: DataFrame) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, origRow: LogRowModel, options: LogRowContextOptions) => Promise<any>;\n  getRowContextQuery?: (\n    row: LogRowModel,\n    options?: LogRowContextOptions,\n    cacheFilters?: boolean\n  ) => Promise<DataQuery | null>;\n  getLogRowContextUi?: (row: LogRowModel, runContextQuery?: () => void) => React.ReactNode;\n  getFieldLinks: (field: Field, rowIndex: number, dataFrame: DataFrame) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n  eventBus: EventBus;\n  panelState?: ExplorePanelsState;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive?: (key: string, value: string, refId?: string) => Promise<boolean>;\n  logsFrames?: DataFrame[];\n  range: TimeRange;\n  onClickFilterString?: (value: string, refId?: string) => void;\n  onClickFilterOutString?: (value: string, refId?: string) => void;\n  loadMoreLogs?(range: AbsoluteTimeRange): void;\n  onPinLineCallback?: () => void;\n}\n\nexport type LogsVisualisationType = 'table' | 'logs';\n\n// we need to define the order of these explicitly\nconst DEDUP_OPTIONS = [\n  LogsDedupStrategy.none,\n  LogsDedupStrategy.exact,\n  LogsDedupStrategy.numbers,\n  LogsDedupStrategy.signature,\n];\n\nconst getDefaultVisualisationType = (): LogsVisualisationType => {\n  const visualisationType = store.get(visualisationTypeKey);\n  if (visualisationType === 'table') {\n    return 'table';\n  }\n  if (visualisationType === 'logs') {\n    return 'logs';\n  }\n  if (config.featureToggles.logsExploreTableDefaultVisualization) {\n    return 'table';\n  }\n  return 'logs';\n};\n\nconst PINNED_LOGS_LIMIT = 10;\nconst PINNED_LOGS_TITLE = 'Pinned log';\nconst PINNED_LOGS_MESSAGE = 'Pin to content outline';\nconst PINNED_LOGS_PANELID = 'Logs';\n\nconst UnthemedLogs: React.FunctionComponent<Props> = (props: Props) => {\n  const {\n    width,\n    splitOpen,\n    logRows,\n    logsMeta,\n    logsVolumeEnabled,\n    logsVolumeData,\n    loadLogsVolumeData,\n    loading = false,\n    onClickFilterLabel,\n    onClickFilterOutLabel,\n    timeZone,\n    scanning,\n    scanRange,\n    showContextToggle,\n    absoluteRange,\n    onChangeTime,\n    getFieldLinks,\n    theme,\n    logsQueries,\n    clearCache,\n    addResultsToCache,\n    exploreId,\n    getRowContext,\n    getLogRowContextUi,\n    getRowContextQuery,\n    loadMoreLogs,\n    panelState,\n    eventBus,\n  } = props;\n  const [showLabels, setShowLabels] = useState<boolean>(store.getBool(SETTINGS_KEYS.showLabels, false));\n  const [showTime, setShowTime] = useState<boolean>(store.getBool(SETTINGS_KEYS.showTime, true));\n  const [wrapLogMessage, setWrapLogMessage] = useState<boolean>(store.getBool(SETTINGS_KEYS.wrapLogMessage, true));\n  const [prettifyLogMessage, setPrettifyLogMessage] = useState<boolean>(\n    store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)\n  );\n  const [dedupStrategy, setDedupStrategy] = useState<LogsDedupStrategy>(LogsDedupStrategy.none);\n  const [hiddenLogLevels, setHiddenLogLevels] = useState<LogLevel[]>([]);\n  const [logsSortOrder, setLogsSortOrder] = useState<LogsSortOrder>(\n    store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending\n  );\n  const [isFlipping, setIsFlipping] = useState<boolean>(false);\n  const [displayedFields, setDisplayedFields] = useState<string[]>([]);\n  const [forceEscape, setForceEscape] = useState<boolean>(false);\n  const [contextOpen, setContextOpen] = useState<boolean>(false);\n  const [contextRow, setContextRow] = useState<LogRowModel | undefined>(undefined);\n  const [pinLineButtonTooltipTitle, setPinLineButtonTooltipTitle] = useState<PopoverContent>(PINNED_LOGS_MESSAGE);\n  const [visualisationType, setVisualisationType] = useState<LogsVisualisationType | undefined>(\n    panelState?.logs?.visualisationType ?? getDefaultVisualisationType()\n  );\n  const [scrollIntoView, setScrollIntoView] = useState<((element: HTMLElement) => void) | undefined>(undefined);\n  const logsContainerRef = useRef<HTMLDivElement | undefined>(undefined);\n  const dispatch = useDispatch();\n  const previousLoading = usePrevious(loading);\n\n  const logsVolumeEventBus = eventBus.newScopedBus('logsvolume', { onlyLocal: false });\n  const { register, unregister, outlineItems, updateItem, unregisterAllChildren } = useContentOutlineContext() ?? {};\n  const flipOrderTimer = useRef<number | undefined>(undefined);\n  const cancelFlippingTimer = useRef<number | undefined>(undefined);\n  const toggleLegendRef = useRef<(name: string, mode: SeriesVisibilityChangeMode) => void>(() => {});\n  const topLogsRef = useRef<HTMLDivElement>(null);\n\n  const tableHeight = getLogsTableHeight();\n  const styles = getStyles(theme, wrapLogMessage, tableHeight);\n  const hasData = logRows && logRows.length > 0;\n  const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n  // Get pinned log lines\n  const logsParent = outlineItems?.find((item) => item.panelId === PINNED_LOGS_PANELID && item.level === 'root');\n  const pinnedLogs = logsParent?.children\n    ?.filter((outlines) => outlines.title === PINNED_LOGS_TITLE)\n    .map((pinnedLogs) => pinnedLogs.id);\n\n  const getPinnedLogsCount = useCallback(() => {\n    const logsParent = outlineItems?.find((item) => item.panelId === PINNED_LOGS_PANELID && item.level === 'root');\n    return logsParent?.children?.filter((child) => child.title === PINNED_LOGS_TITLE).length ?? 0;\n  }, [outlineItems]);\n\n  const registerLogLevelsWithContentOutline = useCallback(() => {\n    const levelsArr = Object.keys(LogLevelColor);\n    const logVolumeDataFrames = new Set(logsVolumeData?.data);\n    // TODO remove this once filtering multiple log volumes is supported\n    const logVolData = logsVolumeData?.data.filter(\n      (frame: DataFrame) => frame.meta?.dataTopic !== DataTopic.Annotations\n    );\n    const grouped = groupBy(logVolData, 'meta.custom.datasourceName');\n    const numberOfLogVolumes = Object.keys(grouped).length;\n\n    // clean up all current log levels\n    if (unregisterAllChildren) {\n      unregisterAllChildren((items) => {\n        const logsParent = items?.find((item) => item.panelId === PINNED_LOGS_PANELID && item.level === 'root');\n        return logsParent?.id;\n      }, 'filter');\n    }\n\n    // check if we have dataFrames that return the same level\n    const logLevelsArray: Array<{ levelStr: string; logLevel: LogLevel }> = [];\n    logVolumeDataFrames.forEach((dataFrame) => {\n      const { level } = getLogLevelInfo(dataFrame);\n      logLevelsArray.push({ levelStr: level, logLevel: getLogLevel(level) });\n    });\n\n    const sortedLLArray = logLevelsArray.sort(\n      (a: { levelStr: string; logLevel: LogLevel }, b: { levelStr: string; logLevel: LogLevel }) => {\n        return levelsArr.indexOf(a.logLevel.toString()) > levelsArr.indexOf(b.logLevel.toString()) ? 1 : -1;\n      }\n    );\n\n    const logLevels = new Set(sortedLLArray);\n\n    if (logLevels.size > 1 && logsVolumeEnabled && numberOfLogVolumes === 1) {\n      logLevels.forEach((level) => {\n        const allLevelsSelected = hiddenLogLevels.length === 0;\n        const currentLevelSelected = !hiddenLogLevels.find((hiddenLevel) => hiddenLevel === level.levelStr);\n        if (register) {\n          register({\n            title: level.levelStr,\n            icon: 'gf-logs',\n            panelId: PINNED_LOGS_PANELID,\n            level: 'child',\n            type: 'filter',\n            highlight: currentLevelSelected && !allLevelsSelected,\n            onClick: (e: React.MouseEvent) => {\n              toggleLegendRef.current?.(level.levelStr, mapMouseEventToMode(e));\n              contentOutlineTrackLevelFilter(level);\n            },\n            ref: null,\n            color: LogLevelColor[level.logLevel],\n          });\n        }\n      });\n    }\n  }, [logsVolumeData?.data, unregisterAllChildren, logsVolumeEnabled, hiddenLogLevels, register, toggleLegendRef]);\n\n  useEffect(() => {\n    if (getPinnedLogsCount() === PINNED_LOGS_LIMIT) {\n      setPinLineButtonTooltipTitle(\n        <span style={{ display: 'flex', textAlign: 'center' }}>\n          ❗️\n          <Trans i18nKey=\"explore.logs.maximum-pinned-logs\">\n            Maximum of {{ PINNED_LOGS_LIMIT }} pinned logs reached. Unpin a log to add another.\n          </Trans>\n        </span>\n      );\n    } else {\n      setPinLineButtonTooltipTitle(PINNED_LOGS_MESSAGE);\n    }\n  }, [outlineItems, getPinnedLogsCount]);\n\n  useEffect(() => {\n    if (loading && !previousLoading && panelState?.logs?.id) {\n      // loading stopped, so we need to remove any permalinked log lines\n      delete panelState.logs.id;\n\n      dispatch(\n        changePanelState(exploreId, 'logs', {\n          ...panelState,\n        })\n      );\n    }\n  }, [dispatch, exploreId, loading, panelState, previousLoading]);\n\n  useEffect(() => {\n    const visualisationType = panelState?.logs?.visualisationType ?? getDefaultVisualisationType();\n    setVisualisationType(visualisationType);\n\n    store.set(visualisationTypeKey, visualisationType);\n  }, [panelState?.logs?.visualisationType]);\n\n  useEffect(() => {\n    registerLogLevelsWithContentOutline();\n  }, [logsVolumeData?.data, hiddenLogLevels, registerLogLevelsWithContentOutline]);\n\n  useUnmount(() => {\n    if (flipOrderTimer) {\n      window.clearTimeout(flipOrderTimer.current);\n    }\n    if (cancelFlippingTimer) {\n      window.clearTimeout(cancelFlippingTimer.current);\n    }\n  });\n\n  useUnmount(() => {\n    // If we're unmounting logs (e.g. switching to another datasource), we need to remove the table specific panel state, otherwise it will persist in the explore url\n    if (panelState?.logs?.columns || panelState?.logs?.refId || panelState?.logs?.labelFieldName) {\n      dispatch(\n        changePanelState(exploreId, 'logs', {\n          ...panelState?.logs,\n          columns: undefined,\n          visualisationType: visualisationType,\n          labelFieldName: undefined,\n          refId: undefined,\n        })\n      );\n    }\n  });\n\n  const updatePanelState = useCallback(\n    (logsPanelState: Partial<ExploreLogsPanelState>) => {\n      const state: ExploreItemState | undefined = getState().explore.panes[exploreId];\n      if (state?.panelsState) {\n        dispatch(\n          changePanelState(exploreId, 'logs', {\n            ...state.panelsState.logs,\n            columns: logsPanelState.columns ?? panelState?.logs?.columns,\n            visualisationType: logsPanelState.visualisationType ?? visualisationType,\n            labelFieldName: logsPanelState.labelFieldName,\n            refId: logsPanelState.refId ?? panelState?.logs?.refId,\n          })\n        );\n      }\n    },\n    [dispatch, exploreId, panelState?.logs?.columns, panelState?.logs?.refId, visualisationType]\n  );\n\n  // actions\n  const onLogRowHover = useCallback(\n    (row?: LogRowModel) => {\n      if (!row) {\n        props.eventBus.publish(new DataHoverClearEvent());\n      } else {\n        props.eventBus.publish(\n          new DataHoverEvent({\n            point: {\n              time: row.timeEpochMs,\n            },\n          })\n        );\n      }\n    },\n    [props.eventBus]\n  );\n\n  const onLogsContainerRef = useCallback(\n    (node: HTMLDivElement) => {\n      logsContainerRef.current = node;\n\n      // In theory this should be just a function passed down to LogRows but:\n      // - LogRow.componentDidMount which calls scrollIntoView is called BEFORE the logsContainerRef is set\n      // - the if check below if (logsContainerRef.current) was falsy and scrolling doesn't happen\n      // - and LogRow.scrollToLogRow marks the line as scrolled anyway (and won't perform scrolling when the ref is set)\n      // - see more details in https://github.com/facebook/react/issues/29897\n      // We can change it once LogRow is converted into a functional component\n      setScrollIntoView(() => (element: HTMLElement) => {\n        if (config.featureToggles.logsInfiniteScrolling) {\n          if (logsContainerRef.current) {\n            topLogsRef.current?.scrollIntoView();\n            logsContainerRef.current.scroll({\n              behavior: 'smooth',\n              top: logsContainerRef.current.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n            });\n          }\n\n          return;\n        }\n        const scrollElement = props.scrollElement;\n\n        if (scrollElement) {\n          scrollElement.scroll({\n            behavior: 'smooth',\n            top: scrollElement.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n          });\n        }\n      });\n    },\n    [props.scrollElement]\n  );\n\n  const onChangeLogsSortOrder = () => {\n    setIsFlipping(true);\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    flipOrderTimer.current = window.setTimeout(() => {\n      const newSortOrder =\n        logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n      store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n      setLogsSortOrder(newSortOrder);\n    }, 0);\n    cancelFlippingTimer.current = window.setTimeout(() => setIsFlipping(false), 1000);\n  };\n\n  const onEscapeNewlines = useCallback(() => {\n    setForceEscape(!forceEscape);\n  }, [forceEscape]);\n\n  const onChangeVisualisation = useCallback(\n    (visualisation: LogsVisualisationType) => {\n      setVisualisationType(visualisation);\n      const payload = {\n        ...panelState?.logs,\n        visualisationType: visualisation,\n      };\n      updatePanelState(payload);\n\n      reportInteraction('grafana_explore_logs_visualisation_changed', {\n        newVisualizationType: visualisation,\n        datasourceType: props.datasourceType ?? 'unknown',\n        defaultVisualisationType: config.featureToggles.logsExploreTableDefaultVisualization ? 'table' : 'logs',\n      });\n    },\n    [panelState?.logs, props.datasourceType, updatePanelState]\n  );\n\n  const onChangeDedup = useCallback(\n    (dedupStrategy: LogsDedupStrategy) => {\n      reportInteraction('grafana_explore_logs_deduplication_clicked', {\n        deduplicationType: dedupStrategy,\n        datasourceType: props.datasourceType,\n      });\n      setDedupStrategy(dedupStrategy);\n    },\n    [props.datasourceType]\n  );\n\n  const onChangeLabels = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n\n      setShowLabels(showLabels);\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  }, []);\n\n  const onChangeShowTime = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n\n      setShowTime(showTime);\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  }, []);\n\n  const onChangeWrapLogMessage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n\n      setWrapLogMessage(wrapLogMessage);\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  }, []);\n\n  const onChangePrettifyLogMessage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n\n      setPrettifyLogMessage(prettifyLogMessage);\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  }, []);\n\n  const onToggleLogLevel = useCallback((hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => getLogLevelFromKey(level));\n    setHiddenLogLevels(hiddenLogLevels);\n  }, []);\n\n  const onToggleLogsVolumeCollapse = useCallback(\n    (collapsed: boolean) => {\n      props.onSetLogsVolumeEnabled(!collapsed);\n      reportInteraction('grafana_explore_logs_histogram_toggle_clicked', {\n        datasourceType: props.datasourceType,\n        type: !collapsed ? 'open' : 'close',\n      });\n    },\n    [props]\n  );\n\n  const onClickScan = useCallback(\n    (event: React.SyntheticEvent) => {\n      event.preventDefault();\n      if (props.onStartScanning) {\n        props.onStartScanning();\n        reportInteraction('grafana_explore_logs_scanning_button_clicked', {\n          type: 'start',\n          datasourceType: props.datasourceType,\n        });\n      }\n    },\n    [props]\n  );\n\n  const onClickStopScan = useCallback(\n    (event: React.SyntheticEvent) => {\n      event.preventDefault();\n      if (props.onStopScanning) {\n        props.onStopScanning();\n      }\n    },\n    [props]\n  );\n\n  const showField = useCallback(\n    (key: string) => {\n      const index = displayedFields.indexOf(key);\n\n      if (index === -1) {\n        setDisplayedFields(displayedFields.concat(key));\n      }\n    },\n    [displayedFields]\n  );\n\n  const hideField = useCallback(\n    (key: string) => {\n      const index = displayedFields.indexOf(key);\n      if (index > -1) {\n        setDisplayedFields(displayedFields.filter((k) => key !== k));\n      }\n    },\n    [displayedFields]\n  );\n\n  const clearDetectedFields = useCallback(() => {\n    setDisplayedFields([]);\n  }, []);\n\n  const onCloseCallbackRef = useRef<() => void>(() => {});\n\n  let onCloseContext = useCallback(() => {\n    setContextOpen(false);\n    setContextRow(undefined);\n    reportInteraction('grafana_explore_logs_log_context_closed', {\n      datasourceType: contextRow?.datasourceType,\n      logRowUid: contextRow?.uid,\n    });\n    onCloseCallbackRef?.current();\n  }, [contextRow?.datasourceType, contextRow?.uid, onCloseCallbackRef]);\n\n  const onOpenContext = (row: LogRowModel, onClose: () => void) => {\n    // we are setting the `contextOpen` open state and passing it down to the `LogRow` in order to highlight the row when a LogContext is open\n    setContextOpen(true);\n    setContextRow(row);\n    reportInteraction('grafana_explore_logs_log_context_opened', {\n      datasourceType: row.datasourceType,\n      logRowUid: row.uid,\n    });\n    onCloseCallbackRef.current = onClose;\n  };\n\n  const getPreviousLog = useCallback((row: LogRowModel, allLogs: LogRowModel[]) => {\n    for (let i = allLogs.indexOf(row) - 1; i >= 0; i--) {\n      if (allLogs[i].timeEpochMs > row.timeEpochMs) {\n        return allLogs[i];\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getPermalinkRange = useCallback(\n    (row: LogRowModel) => {\n      const range = {\n        from: new Date(absoluteRange.from).toISOString(),\n        to: new Date(absoluteRange.to).toISOString(),\n      };\n      if (!config.featureToggles.logsInfiniteScrolling) {\n        return range;\n      }\n\n      // With infinite scrolling, the time range of the log line can be after the absolute range or beyond the request line limit, so we need to adjust\n      // Look for the previous sibling log, and use its timestamp\n      const allLogs = logRows.filter((logRow) => logRow.dataFrame.refId === row.dataFrame.refId);\n      const prevLog = getPreviousLog(row, allLogs);\n\n      if (row.timeEpochMs > absoluteRange.to && !prevLog) {\n        // Because there's no sibling and the current `to` is oldest than the log, we have no reference we can use for the interval\n        // This only happens when you scroll into the future and you want to share the first log of the list\n        return {\n          from: new Date(absoluteRange.from).toISOString(),\n          // Slide 1ms otherwise it's very likely to be omitted in the results\n          to: new Date(row.timeEpochMs + 1).toISOString(),\n        };\n      }\n\n      return {\n        from: new Date(absoluteRange.from).toISOString(),\n        to: new Date(prevLog ? prevLog.timeEpochMs : absoluteRange.to).toISOString(),\n      };\n    },\n    [absoluteRange.from, absoluteRange.to, getPreviousLog, logRows]\n  );\n\n  const onPermalinkClick = async (row: LogRowModel) => {\n    // this is an extra check, to be sure that we are not\n    // creating permalinks for logs without an id-field.\n    // normally it should never happen, because we do not\n    // display the permalink button in such cases.\n    if (row.rowId === undefined) {\n      return;\n    }\n\n    // get explore state, add log-row-id and make timerange absolute\n    const urlState = getUrlStateFromPaneState(getState().explore.panes[exploreId]!);\n    urlState.panelsState = {\n      ...panelState,\n      logs: { id: row.uid, visualisationType: visualisationType ?? getDefaultVisualisationType() },\n    };\n    urlState.range = getPermalinkRange(row);\n\n    // append changed urlState to baseUrl\n    const serializedState = serializeStateToUrlParam(urlState);\n    const baseUrl = /.*(?=\\/explore)/.exec(`${window.location.href}`)![0];\n    const url = urlUtil.renderUrl(`${baseUrl}/explore`, { left: serializedState });\n    await createAndCopyShortLink(url);\n\n    reportInteraction('grafana_explore_logs_permalink_clicked', {\n      datasourceType: row.datasourceType ?? 'unknown',\n      logRowUid: row.uid,\n      logRowLevel: row.logLevel,\n    });\n  };\n\n  const scrollToTopLogs = useCallback(() => {\n    if (config.featureToggles.logsInfiniteScrolling) {\n      if (logsContainerRef.current) {\n        logsContainerRef.current.scroll({\n          behavior: 'auto',\n          top: 0,\n        });\n      }\n    }\n    topLogsRef.current?.scrollIntoView();\n  }, [logsContainerRef, topLogsRef]);\n\n  const onPinToContentOutlineClick = (row: LogRowModel, allowUnPin = true) => {\n    if (getPinnedLogsCount() === PINNED_LOGS_LIMIT && !allowUnPin) {\n      contentOutlineTrackPinLimitReached();\n      return;\n    }\n\n    // find the Logs parent item\n    const logsParent = outlineItems?.find((item) => item.panelId === PINNED_LOGS_PANELID && item.level === 'root');\n\n    //update the parent's expanded state\n    if (logsParent && updateItem) {\n      updateItem(logsParent.id, { expanded: true });\n    }\n\n    const alreadyPinned = pinnedLogs?.find((pin) => pin === row.rowId);\n    if (alreadyPinned && row.rowId && allowUnPin) {\n      unregister?.(row.rowId);\n      contentOutlineTrackPinRemoved();\n    } else if (getPinnedLogsCount() !== PINNED_LOGS_LIMIT && !alreadyPinned) {\n      register?.({\n        id: row.rowId,\n        icon: 'gf-logs',\n        title: PINNED_LOGS_TITLE,\n        panelId: PINNED_LOGS_PANELID,\n        level: 'child',\n        ref: null,\n        color: LogLevelColor[row.logLevel],\n        childOnTop: true,\n        onClick: () => {\n          onOpenContext(row, () => {});\n          contentOutlineTrackPinClicked();\n        },\n        onRemove: (id: string) => {\n          unregister?.(id);\n          contentOutlineTrackUnpinClicked();\n        },\n      });\n      contentOutlineTrackPinAdded();\n    }\n\n    props.onPinLineCallback?.();\n  };\n\n  const hasUnescapedContent = checkUnescapedContent(logRows);\n  const filteredLogs = filterRows(logRows, hiddenLogLevels);\n  const { dedupedRows, dedupCount } = dedupRows(filteredLogs, dedupStrategy);\n  const navigationRange = createNavigationRange(logRows);\n\n  return (\n    <>\n      {getRowContext && contextRow && (\n        <LogRowContextModal\n          open={contextOpen}\n          row={contextRow}\n          onClose={onCloseContext}\n          getRowContext={(row, options) => getRowContext(row, contextRow, options)}\n          getRowContextQuery={getRowContextQuery}\n          getLogRowContextUi={getLogRowContextUi}\n          logsSortOrder={logsSortOrder}\n          timeZone={timeZone}\n        />\n      )}\n      <PanelChrome\n        title=\"Logs volume\"\n        collapsible\n        collapsed={!logsVolumeEnabled}\n        onToggleCollapse={onToggleLogsVolumeCollapse}\n      >\n        {logsVolumeEnabled && (\n          <LogsVolumePanelList\n            toggleLegendRef={toggleLegendRef}\n            absoluteRange={absoluteRange}\n            width={width}\n            logsVolumeData={logsVolumeData}\n            onUpdateTimeRange={onChangeTime}\n            timeZone={timeZone}\n            splitOpen={splitOpen}\n            onLoadLogsVolume={loadLogsVolumeData}\n            onHiddenSeriesChanged={onToggleLogLevel}\n            eventBus={logsVolumeEventBus}\n            onClose={() => onToggleLogsVolumeCollapse(true)}\n          />\n        )}\n      </PanelChrome>\n      <PanelChrome\n        titleItems={[\n          config.featureToggles.logsExploreTableVisualisation ? (\n            visualisationType === 'logs' ? null : (\n              <PanelChrome.TitleItem title=\"Feedback\" key=\"A\">\n                <LogsFeedback feedbackUrl=\"https://forms.gle/5YyKdRQJ5hzq4c289\" />\n              </PanelChrome.TitleItem>\n            )\n          ) : null,\n        ]}\n        title={'Logs'}\n        actions={\n          <>\n            {config.featureToggles.logsExploreTableVisualisation && (\n              <div className={styles.visualisationType}>\n                <RadioButtonGroup\n                  className={styles.visualisationTypeRadio}\n                  options={[\n                    {\n                      label: 'Logs',\n                      value: 'logs',\n                      description: 'Show results in logs visualisation',\n                    },\n                    {\n                      label: 'Table',\n                      value: 'table',\n                      description: 'Show results in table visualisation',\n                    },\n                  ]}\n                  size=\"sm\"\n                  value={visualisationType}\n                  onChange={onChangeVisualisation}\n                />\n              </div>\n            )}\n          </>\n        }\n        loadingState={loading ? LoadingState.Loading : LoadingState.Done}\n      >\n        <div className={styles.stickyNavigation}>\n          {visualisationType !== 'table' && (\n            <div className={styles.logOptions}>\n              <InlineFieldRow>\n                <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n                  <InlineSwitch\n                    value={showTime}\n                    onChange={onChangeShowTime}\n                    className={styles.horizontalInlineSwitch}\n                    transparent\n                    id={`show-time_${exploreId}`}\n                  />\n                </InlineField>\n                <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n                  <InlineSwitch\n                    value={showLabels}\n                    onChange={onChangeLabels}\n                    className={styles.horizontalInlineSwitch}\n                    transparent\n                    id={`unique-labels_${exploreId}`}\n                  />\n                </InlineField>\n                <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n                  <InlineSwitch\n                    value={wrapLogMessage}\n                    onChange={onChangeWrapLogMessage}\n                    className={styles.horizontalInlineSwitch}\n                    transparent\n                    id={`wrap-lines_${exploreId}`}\n                  />\n                </InlineField>\n                <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n                  <InlineSwitch\n                    value={prettifyLogMessage}\n                    onChange={onChangePrettifyLogMessage}\n                    className={styles.horizontalInlineSwitch}\n                    transparent\n                    id={`prettify_${exploreId}`}\n                  />\n                </InlineField>\n                <InlineField label=\"Deduplication\" className={styles.horizontalInlineLabel} transparent>\n                  <RadioButtonGroup\n                    options={DEDUP_OPTIONS.map((dedupType) => ({\n                      label: capitalize(dedupType),\n                      value: dedupType,\n                      description: LogsDedupDescription[dedupType],\n                    }))}\n                    value={dedupStrategy}\n                    onChange={onChangeDedup}\n                    className={styles.radioButtons}\n                  />\n                </InlineField>\n              </InlineFieldRow>\n\n              <div>\n                <InlineField\n                  label=\"Display results\"\n                  className={styles.horizontalInlineLabel}\n                  transparent\n                  disabled={isFlipping || loading}\n                >\n                  <RadioButtonGroup\n                    options={[\n                      {\n                        label: 'Newest first',\n                        value: LogsSortOrder.Descending,\n                        description: 'Show results newest to oldest',\n                      },\n                      {\n                        label: 'Oldest first',\n                        value: LogsSortOrder.Ascending,\n                        description: 'Show results oldest to newest',\n                      },\n                    ]}\n                    value={logsSortOrder}\n                    onChange={onChangeLogsSortOrder}\n                    className={styles.radioButtons}\n                  />\n                </InlineField>\n              </div>\n            </div>\n          )}\n          <div ref={topLogsRef} />\n          <LogsMetaRow\n            logRows={logRows}\n            meta={logsMeta || []}\n            dedupStrategy={dedupStrategy}\n            dedupCount={dedupCount}\n            hasUnescapedContent={hasUnescapedContent}\n            forceEscape={forceEscape}\n            displayedFields={displayedFields}\n            onEscapeNewlines={onEscapeNewlines}\n            clearDetectedFields={clearDetectedFields}\n          />\n        </div>\n        <div className={cx(styles.logsSection, visualisationType === 'table' ? styles.logsTable : undefined)}>\n          {visualisationType === 'table' && hasData && (\n            <div className={styles.logRows} data-testid=\"logRowsTable\">\n              {/* Width should be full width minus logs navigation and padding */}\n              <LogsTableWrap\n                logsSortOrder={logsSortOrder}\n                range={props.range}\n                splitOpen={splitOpen}\n                timeZone={timeZone}\n                width={width - 80}\n                logsFrames={props.logsFrames ?? []}\n                onClickFilterLabel={onClickFilterLabel}\n                onClickFilterOutLabel={onClickFilterOutLabel}\n                panelState={panelState?.logs}\n                theme={theme}\n                updatePanelState={updatePanelState}\n                datasourceType={props.datasourceType}\n              />\n            </div>\n          )}\n          {visualisationType === 'logs' && hasData && (\n            <div\n              className={config.featureToggles.logsInfiniteScrolling ? styles.scrollableLogRows : styles.logRows}\n              data-testid=\"logRows\"\n              ref={onLogsContainerRef}\n            >\n              <InfiniteScroll\n                loading={loading}\n                loadMoreLogs={loadMoreLogs}\n                range={props.range}\n                timeZone={timeZone}\n                rows={logRows}\n                scrollElement={logsContainerRef.current}\n                sortOrder={logsSortOrder}\n                app={CoreApp.Explore}\n              >\n                <LogRows\n                  pinnedLogs={pinnedLogs}\n                  logRows={logRows}\n                  deduplicatedRows={dedupedRows}\n                  dedupStrategy={dedupStrategy}\n                  onClickFilterLabel={onClickFilterLabel}\n                  onClickFilterOutLabel={onClickFilterOutLabel}\n                  showContextToggle={showContextToggle}\n                  getRowContextQuery={getRowContextQuery}\n                  showLabels={showLabels}\n                  showTime={showTime}\n                  enableLogDetails={true}\n                  forceEscape={forceEscape}\n                  wrapLogMessage={wrapLogMessage}\n                  prettifyLogMessage={prettifyLogMessage}\n                  timeZone={timeZone}\n                  getFieldLinks={getFieldLinks}\n                  logsSortOrder={logsSortOrder}\n                  displayedFields={displayedFields}\n                  onClickShowField={showField}\n                  onClickHideField={hideField}\n                  app={CoreApp.Explore}\n                  onLogRowHover={onLogRowHover}\n                  onOpenContext={onOpenContext}\n                  onPermalinkClick={onPermalinkClick}\n                  permalinkedRowId={panelState?.logs?.id}\n                  scrollIntoView={scrollIntoView}\n                  isFilterLabelActive={props.isFilterLabelActive}\n                  containerRendered={!!logsContainerRef}\n                  onClickFilterString={props.onClickFilterString}\n                  onClickFilterOutString={props.onClickFilterOutString}\n                  onUnpinLine={onPinToContentOutlineClick}\n                  onPinLine={onPinToContentOutlineClick}\n                  pinLineButtonTooltipTitle={pinLineButtonTooltipTitle}\n                />\n              </InfiniteScroll>\n            </div>\n          )}\n          {!loading && !hasData && !scanning && (\n            <div className={styles.logRows}>\n              <div className={styles.noData}>\n                <Trans i18nKey=\"explore.logs.no-logs-found\">No logs found.</Trans>\n                <Button size=\"sm\" variant=\"secondary\" onClick={onClickScan}>\n                  <Trans i18nKey=\"explore.logs.scan-for-older-logs\">Scan for older logs</Trans>\n                </Button>\n              </div>\n            </div>\n          )}\n          {scanning && (\n            <div className={styles.logRows}>\n              <div className={styles.noData}>\n                <span>{scanText}</span>\n                <Button size=\"sm\" variant=\"secondary\" onClick={onClickStopScan}>\n                  <Trans i18nKey=\"explore.logs.stop-scan\">Stop scan</Trans>\n                </Button>\n              </div>\n            </div>\n          )}\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={navigationRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n      </PanelChrome>\n    </>\n  );\n};\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean, tableHeight: number) => {\n  return {\n    noData: css({\n      '& > *': {\n        marginLeft: '0.5em',\n      },\n    }),\n    logOptions: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'baseline',\n      flexWrap: 'wrap',\n      backgroundColor: theme.colors.background.primary,\n      padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n      borderRadius: theme.shape.radius.default,\n      margin: `${theme.spacing(0, 0, 1)}`,\n      border: `1px solid ${theme.colors.border.medium}`,\n    }),\n    headerButton: css({\n      margin: `${theme.spacing(0.5, 0, 0, 1)}`,\n    }),\n    horizontalInlineLabel: css({\n      '& > label': {\n        marginRight: '0',\n      },\n    }),\n    horizontalInlineSwitch: css({\n      padding: `0 ${theme.spacing(1)} 0 0`,\n    }),\n    radioButtons: css({\n      margin: '0',\n    }),\n    logsSection: css({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      position: 'relative',\n    }),\n    logsTable: css({\n      maxHeight: `${tableHeight}px`,\n    }),\n    scrollableLogRows: css({\n      overflowY: 'scroll',\n      width: '100%',\n      maxHeight: '75vh',\n    }),\n    logRows: css({\n      overflowX: `${wrapLogMessage ? 'unset' : 'scroll'}`,\n      overflowY: 'visible',\n      width: '100%',\n    }),\n    visualisationType: css({\n      display: 'flex',\n      flex: '1',\n      justifyContent: 'space-between',\n    }),\n    visualisationTypeRadio: css({\n      margin: `0 0 0 ${theme.spacing(1)}`,\n    }),\n    stickyNavigation: css({\n      overflow: 'visible',\n      ...(config.featureToggles.logsInfiniteScrolling && { marginBottom: '0px' }),\n    }),\n  };\n};\n\nconst checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n  return logRows.some((r) => r.hasUnescapedContent);\n});\n\nconst dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n  const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n  const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n  return { dedupedRows, dedupCount };\n});\n\nconst filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n  return filterLogLevels(logRows, new Set(hiddenLogLevels));\n});\n\nconst createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n  if (!logRows || logRows.length === 0) {\n    return undefined;\n  }\n  const firstTimeStamp = logRows[0].timeEpochMs;\n  const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n  if (lastTimeStamp < firstTimeStamp) {\n    return { from: lastTimeStamp, to: firstTimeStamp };\n  }\n\n  return { from: firstTimeStamp, to: lastTimeStamp };\n});\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport { useRef } from 'react';\nimport * as React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactElement;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const transitionRef = useRef(null);\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n      nodeRef={transitionRef}\n    >\n      <div ref={transitionRef}>{children}</div>\n    </CSSTransition>\n  );\n}\n","import { PureComponent } from 'react';\nimport * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  hasLogsContextUiSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  EventBus,\n  SplitOpen,\n  DataFrame,\n  SupplementaryQueryType,\n  DataQueryResponse,\n  LogRowContextOptions,\n  DataSourceWithLogsContextSupport,\n  DataSourceApi,\n  hasToggleableQueryFiltersSupport,\n  DataSourceWithQueryModificationSupport,\n  hasQueryModificationSupport,\n} from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Collapse } from '@grafana/ui';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../../profile/state/selectors';\nimport {\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  selectIsWaitingForData,\n  setSupplementaryQueryEnabled,\n} from '../state/query';\nimport { updateTimeRange, loadMoreLogs } from '../state/time';\nimport { LiveTailControls } from '../useLiveTailControls';\nimport { getFieldLinksForExplore } from '../utils/links';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: string;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel: (key: string, value: string, frame?: DataFrame) => void;\n  onClickFilterOutLabel: (key: string, value: string, frame?: DataFrame) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  eventBus: EventBus;\n  splitOpenFn: SplitOpen;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive: (key: string, value: string, refId?: string) => Promise<boolean>;\n  onClickFilterString: (value: string, refId?: string) => void;\n  onClickFilterOutString: (value: string, refId?: string) => void;\n  onPinLineCallback?: () => void;\n}\n\ntype DataSourceInstance =\n  | DataSourceApi<DataQuery>\n  | (DataSourceApi<DataQuery> & DataSourceWithLogsContextSupport<DataQuery>)\n  | (DataSourceApi<DataQuery> & DataSourceWithQueryModificationSupport<DataQuery>);\n\ninterface LogsContainerState {\n  dsInstances: Record<string, DataSourceInstance>;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps, LogsContainerState> {\n  state: LogsContainerState = {\n    dsInstances: {},\n  };\n\n  componentDidMount() {\n    this.updateDataSourceInstances();\n  }\n\n  componentDidUpdate(prevProps: LogsContainerProps) {\n    if (prevProps.logsQueries !== this.props.logsQueries) {\n      this.updateDataSourceInstances();\n    }\n  }\n\n  private updateDataSourceInstances() {\n    const { logsQueries, datasourceInstance } = this.props;\n    if (!logsQueries || !datasourceInstance) {\n      return;\n    }\n\n    const dsInstances: Record<string, DataSourceInstance> = {};\n\n    // Not in mixed mode.\n    if (datasourceInstance.uid !== MIXED_DATASOURCE_NAME) {\n      logsQueries.forEach(({ refId }) => {\n        dsInstances[refId] = datasourceInstance;\n      });\n      this.setState({ dsInstances });\n      return;\n    }\n\n    // Mixed mode.\n    const dsPromises: Array<Promise<{ ds: DataSourceApi; refId: string }>> = [];\n    for (const query of logsQueries) {\n      if (!query.datasource) {\n        continue;\n      }\n      const mustCheck = !dsInstances[query.refId] || dsInstances[query.refId].uid !== query.datasource.uid;\n      if (mustCheck) {\n        dsPromises.push(\n          new Promise((resolve) => {\n            getDataSourceSrv()\n              .get(query.datasource)\n              .then((ds) => {\n                resolve({ ds, refId: query.refId });\n              });\n          })\n        );\n      }\n    }\n\n    if (!dsPromises.length) {\n      return;\n    }\n\n    Promise.all(dsPromises).then((instances) => {\n      instances.forEach(({ ds, refId }) => {\n        dsInstances[refId] = ds;\n      });\n      this.setState({ dsInstances });\n    });\n  }\n\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  loadMoreLogs = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, loadMoreLogs } = this.props;\n    loadMoreLogs({ exploreId, absoluteRange });\n  };\n\n  private getQuery(\n    logsQueries: DataQuery[] | undefined,\n    row: LogRowModel,\n    datasourceInstance: DataSourceApi<DataQuery> & DataSourceWithLogsContextSupport<DataQuery>\n  ) {\n    // we need to find the query, and we need to be very sure that it's a query\n    // from this datasource\n    return (logsQueries ?? []).find(\n      (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n    );\n  }\n\n  getLogRowContext = async (\n    row: LogRowModel,\n    origRow: LogRowModel,\n    options: LogRowContextOptions\n  ): Promise<DataQueryResponse | []> => {\n    const { logsQueries } = this.props;\n\n    if (!origRow.dataFrame.refId || !this.state.dsInstances[origRow.dataFrame.refId]) {\n      return Promise.resolve([]);\n    }\n\n    const ds = this.state.dsInstances[origRow.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return Promise.resolve([]);\n    }\n\n    const query = this.getQuery(logsQueries, origRow, ds);\n    return query ? ds.getLogRowContext(row, options, query) : Promise.resolve([]);\n  };\n\n  getLogRowContextQuery = async (\n    row: LogRowModel,\n    options?: LogRowContextOptions,\n    cacheFilters = true\n  ): Promise<DataQuery | null> => {\n    const { logsQueries } = this.props;\n\n    if (!row.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return Promise.resolve(null);\n    }\n\n    const ds = this.state.dsInstances[row.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return Promise.resolve(null);\n    }\n\n    const query = this.getQuery(logsQueries, row, ds);\n    return query && ds.getLogRowContextQuery\n      ? ds.getLogRowContextQuery(row, options, query, cacheFilters)\n      : Promise.resolve(null);\n  };\n\n  getLogRowContextUi = (row: LogRowModel, runContextQuery?: () => void): React.ReactNode => {\n    const { logsQueries } = this.props;\n\n    if (!row.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return <></>;\n    }\n\n    const ds = this.state.dsInstances[row.dataFrame.refId];\n    if (!hasLogsContextSupport(ds)) {\n      return <></>;\n    }\n\n    const query = this.getQuery(logsQueries, row, ds);\n    return query && hasLogsContextUiSupport(ds) && ds.getLogRowContextUi ? (\n      ds.getLogRowContextUi(row, runContextQuery, query)\n    ) : (\n      <></>\n    );\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    if (!row?.dataFrame.refId || !this.state.dsInstances[row.dataFrame.refId]) {\n      return false;\n    }\n    return hasLogsContextSupport(this.state.dsInstances[row.dataFrame.refId]);\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number, dataFrame: DataFrame) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range, dataFrame });\n  };\n\n  logDetailsFilterAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => ds?.modifyQuery || hasQueryModificationSupport(ds) || hasToggleableQueryFiltersSupport(ds)\n    );\n  };\n\n  filterValueAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => hasQueryModificationSupport(ds) && ds?.getSupportedQueryModifications().includes('ADD_STRING_FILTER')\n    );\n  };\n\n  filterOutValueAvailable = () => {\n    return Object.values(this.state.dsInstances).some(\n      (ds) => hasQueryModificationSupport(ds) && ds?.getSupportedQueryModifications().includes('ADD_STRING_FILTER_OUT')\n    );\n  };\n\n  addResultsToCache = () => {\n    this.props.addResultsToCache(this.props.exploreId);\n  };\n\n  clearCache = () => {\n    this.props.clearCache(this.props.exploreId);\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      loadSupplementaryQueryData,\n      setSupplementaryQueryEnabled,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      logsVolume,\n      scrollElement,\n      onPinLineCallback,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                  onClear={controls.clear}\n                  clearedAtIndex={this.props.clearedAtIndex}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Logs\n            exploreId={exploreId}\n            datasourceType={this.props.datasourceInstance?.type}\n            logRows={logRows}\n            logsMeta={logsMeta}\n            logsSeries={logsSeries}\n            logsVolumeEnabled={logsVolume.enabled}\n            onSetLogsVolumeEnabled={(enabled) =>\n              setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsVolume)\n            }\n            logsVolumeData={logsVolume.data}\n            logsQueries={logsQueries}\n            width={width}\n            splitOpen={splitOpenFn}\n            loading={loading}\n            loadingState={loadingState}\n            loadLogsVolumeData={() => loadSupplementaryQueryData(exploreId, SupplementaryQueryType.LogsVolume)}\n            onChangeTime={this.onChangeTime}\n            loadMoreLogs={this.loadMoreLogs}\n            onClickFilterLabel={this.logDetailsFilterAvailable() ? onClickFilterLabel : undefined}\n            onClickFilterOutLabel={this.logDetailsFilterAvailable() ? onClickFilterOutLabel : undefined}\n            onStartScanning={onStartScanning}\n            onStopScanning={onStopScanning}\n            absoluteRange={absoluteRange}\n            visibleRange={visibleRange}\n            timeZone={timeZone}\n            scanning={scanning}\n            scanRange={range.raw}\n            showContextToggle={this.showContextToggle}\n            getRowContext={this.getLogRowContext}\n            getRowContextQuery={this.getLogRowContextQuery}\n            getLogRowContextUi={this.getLogRowContextUi}\n            getFieldLinks={this.getFieldLinks}\n            addResultsToCache={this.addResultsToCache}\n            clearCache={this.clearCache}\n            eventBus={this.props.eventBus}\n            panelState={this.props.panelState}\n            logsFrames={this.props.logsFrames}\n            scrollElement={scrollElement}\n            isFilterLabelActive={this.logDetailsFilterAvailable() ? this.props.isFilterLabelActive : undefined}\n            range={range}\n            onPinLineCallback={onPinLineCallback}\n            onClickFilterString={this.filterValueAvailable() ? this.props.onClickFilterString : undefined}\n            onClickFilterOutString={this.filterOutValueAvailable() ? this.props.onClickFilterOutString : undefined}\n          />\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const {\n    logsResult,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    supplementaryQueries,\n  } = item;\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const panelState = item.panelsState;\n  const timeZone = getTimeZone(state.user);\n  const logsVolume = supplementaryQueries[SupplementaryQueryType.LogsVolume];\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    logsVolume,\n    panelState,\n    logsFrames: item.queryResponse.logsFrames,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  loadMoreLogs,\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\n\nimport {\n  DataQueryResponse,\n  DataSourceApi,\n  GrafanaTheme2,\n  hasSupplementaryQuerySupport,\n  LoadingState,\n  LogsDedupStrategy,\n  SplitOpen,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Collapse, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { LogRows } from '../../logs/components/LogRows';\nimport { dataFrameToLogsModel } from '../../logs/logsModel';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { SETTINGS_KEYS } from './utils/logs';\n\ntype Props = {\n  queryResponse: DataQueryResponse | undefined;\n  enabled: boolean;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  datasourceInstance: DataSourceApi | null | undefined;\n  splitOpen: SplitOpen;\n  setLogsSampleEnabled: (enabled: boolean) => void;\n};\n\nexport function LogsSamplePanel(props: Props) {\n  const { queryResponse, timeZone, enabled, setLogsSampleEnabled, datasourceInstance, queries, splitOpen } = props;\n\n  const styles = useStyles2(getStyles);\n  const onToggleLogsSampleCollapse = (isOpen: boolean) => {\n    setLogsSampleEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_sample_toggle_clicked', {\n      datasourceType: datasourceInstance?.type ?? 'unknown',\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  const OpenInSplitViewButton = () => {\n    if (!datasourceInstance) {\n      return null;\n    }\n    if (!hasSupplementaryQuerySupport(datasourceInstance, SupplementaryQueryType.LogsSample)) {\n      return null;\n    }\n\n    const logSampleQueries = queries\n      .map((query) => datasourceInstance.getSupplementaryQuery({ type: SupplementaryQueryType.LogsSample }, query))\n      .filter((query): query is DataQuery => !!query);\n\n    if (!logSampleQueries.length) {\n      return null;\n    }\n\n    const onSplitOpen = () => {\n      splitOpen({ queries: logSampleQueries, datasourceUid: datasourceInstance.uid });\n      reportInteraction('grafana_explore_logs_sample_split_button_clicked', {\n        datasourceType: datasourceInstance?.type ?? 'unknown',\n        queriesCount: logSampleQueries.length,\n      });\n    };\n\n    return (\n      <Button size=\"sm\" className={styles.logSamplesButton} onClick={onSplitOpen}>\n        Open logs in split view\n      </Button>\n    );\n  };\n\n  let LogsSamplePanelContent: JSX.Element | null;\n\n  if (queryResponse === undefined) {\n    LogsSamplePanelContent = null;\n  } else if (queryResponse.error !== undefined) {\n    LogsSamplePanelContent = (\n      <SupplementaryResultError error={queryResponse.error} title=\"Failed to load logs sample for this query\" />\n    );\n  } else if (queryResponse.state === LoadingState.Loading) {\n    LogsSamplePanelContent = <span>Logs sample is loading...</span>;\n  } else if (queryResponse.data.length === 0 || queryResponse.data.every((frame) => frame.length === 0)) {\n    LogsSamplePanelContent = <span>No logs sample data.</span>;\n  } else {\n    const logs = dataFrameToLogsModel(queryResponse.data);\n    LogsSamplePanelContent = (\n      <>\n        <OpenInSplitViewButton />\n        <div className={styles.logContainer}>\n          <LogRows\n            logRows={logs.rows}\n            dedupStrategy={LogsDedupStrategy.none}\n            showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n            showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n            wrapLogMessage={store.getBool(SETTINGS_KEYS.wrapLogMessage, true)}\n            prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n            timeZone={timeZone}\n            enableLogDetails={true}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return queryResponse?.state !== LoadingState.NotStarted ? (\n    <Collapse\n      label={\n        <div>\n          Logs sample\n          <Tooltip content=\"Show log lines that contributed to visualized metrics\">\n            <Icon name=\"info-circle\" className={styles.infoTooltip} />\n          </Tooltip>\n        </div>\n      }\n      isOpen={enabled}\n      collapsible={true}\n      onToggle={onToggleLogsSampleCollapse}\n    >\n      {LogsSamplePanelContent}\n    </Collapse>\n  ) : null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    logSamplesButton: css`\n      position: absolute;\n      top: ${theme.spacing(1)};\n      right: ${theme.spacing(1)};\n    `,\n    logContainer: css`\n      overflow: scroll;\n    `,\n    infoTooltip: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    label: 'no-data-card',\n    padding: theme.spacing(3),\n    background: theme.colors.background.primary,\n    borderRadius: theme.shape.radius.default,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  }),\n  message: css({\n    fontSize: theme.typography.h2.fontSize,\n    padding: theme.spacing(4),\n    color: theme.colors.text.disabled,\n  }),\n});\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { LinkButton, CallToActionCard, Icon, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nfunction getCardStyles(theme: GrafanaTheme2) {\n  return css({\n    maxWidth: `${theme.breakpoints.values.lg}px`,\n    marginTop: theme.spacing(2),\n    alignSelf: 'center',\n  });\n}\n\nexport const NoDataSourceCallToAction = () => {\n  const cardStyles = useStyles2(getCardStyles);\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/?utm_source=explore#data-sources\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  return <CallToActionCard callToActionElement={ctaElement} className={cardStyles} footer={footer} message={message} />;\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useStyles2, useTheme2, PanelChrome } from '@grafana/ui';\n\nimport { NodeGraph } from '../../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { StoreState } from '../../../types';\nimport { useLinks } from '../utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    display: flex;\n    align-items: center;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: string;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [collapsed, toggleCollapsed] = useToggle(true);\n\n  const toggled = () => {\n    toggleCollapsed();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      grafana_version: config.buildInfo.version,\n      isExpanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <PanelChrome\n      title={`Node graph`}\n      titleItems={countWarning}\n      // We allow collapsing this only when it is shown together with trace view.\n      collapsible={!!withTraceView}\n      collapsed={withTraceView ? collapsed : false}\n      onToggleCollapse={withTraceView ? toggled : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </PanelChrome>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore.panes[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { useCallback, useMemo } from 'react';\n\nimport { CoreApp, getNextRefId } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { ContentOutlineItem } from './ContentOutline/ContentOutlineItem';\nimport { changeQueries, runQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: string;\n}\n\nconst makeSelectors = (exploreId: string) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries);\n  const dsSettings = useSelector(getDatasourceInstanceSettings);\n  const queryResponse = useSelector(getQueryResponse);\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries({ exploreId }));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueries({ exploreId, queries: newQueries }));\n    },\n    [dispatch, exploreId]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefId(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n      queryRowWrapper={(children, refId) => (\n        <ContentOutlineItem\n          title={refId}\n          icon=\"arrow\"\n          key={refId}\n          panelId=\"Queries\"\n          customTopOffset={-10}\n          level=\"child\"\n        >\n          {children}\n        </ContentOutlineItem>\n      )}\n    />\n  );\n};\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport { useEffect, useId, useRef, useState } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { VariableSizeList as List } from 'react-window';\n\nimport { DataFrame, Field as DataFrameField } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { Field, Switch } from '@grafana/ui/';\n\nimport { ItemLabels } from './ItemLabels';\nimport RawListItem from './RawListItem';\nimport {\n  getRawPrometheusListItemsFromDataFrame,\n  RawPrometheusListItemEmptyValue,\n} from './utils/getRawPrometheusListItemsFromDataFrame';\n\nexport type instantQueryRawVirtualizedListData = { Value: string; __name__: string; [index: string]: string };\n\nexport interface RawListContainerProps {\n  tableResult: DataFrame;\n}\n\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `,\n  switchWrapper: css`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0;\n  `,\n  switchLabel: css`\n    margin-left: 15px;\n    margin-bottom: 0;\n  `,\n  switch: css`\n    margin-left: 10px;\n  `,\n  resultCount: css`\n    margin-bottom: 4px;\n  `,\n  header: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 0;\n    font-size: 12px;\n    line-height: 1.25;\n  `,\n};\n\nconst mobileWidthThreshold = 480;\nconst numberOfColumnsBeforeExpandedViewIsDefault = 2;\n\n/**\n * The container that provides the virtualized list to the child components\n * @param props\n * @constructor\n */\nconst RawListContainer = (props: RawListContainerProps) => {\n  const { tableResult } = props;\n  const dataFrame = cloneDeep(tableResult);\n  const listRef = useRef<List | null>(null);\n\n  const valueLabels = dataFrame.fields.filter((field) => field.name.includes('Value'));\n  const items = getRawPrometheusListItemsFromDataFrame(dataFrame);\n  const { width } = useWindowSize();\n  const [isExpandedView, setIsExpandedView] = useState(\n    width <= mobileWidthThreshold || valueLabels.length > numberOfColumnsBeforeExpandedViewIsDefault\n  );\n\n  const onContentClick = () => {\n    setIsExpandedView(!isExpandedView);\n    const props = {\n      isExpanded: !isExpandedView,\n    };\n    reportInteraction('grafana_explore_prometheus_instant_query_ui_raw_toggle_expand', props);\n  };\n\n  useEffect(() => {\n    // After the expanded view has updated, tell the list to re-render\n    listRef.current?.resetAfterIndex(0, true);\n  }, [isExpandedView]);\n\n  const calculateInitialHeight = (length: number): number => {\n    const maxListHeight = 600;\n    const shortListLength = 10;\n\n    if (length < shortListLength) {\n      let sum = 0;\n      for (let i = 0; i < length; i++) {\n        sum += getListItemHeight(i, true);\n      }\n\n      return Math.min(maxListHeight, sum);\n    }\n\n    return maxListHeight;\n  };\n\n  const getListItemHeight = (itemIndex: number, isExpandedView: boolean) => {\n    const singleLineHeight = 32;\n    const additionalLineHeight = 22;\n    if (!isExpandedView) {\n      return singleLineHeight;\n    }\n    const item = items[itemIndex];\n\n    // Height of 1.5 lines, plus the number of non-value attributes times the height of additional lines\n    return 1.5 * singleLineHeight + (Object.keys(item).length - valueLabels.length) * additionalLineHeight;\n  };\n\n  const switchId = `isExpandedView ${useId()}`;\n\n  return (\n    <section>\n      <header className={styles.header}>\n        <Field className={styles.switchWrapper} label={`Expand results`} htmlFor={'isExpandedView'}>\n          <div className={styles.switch}>\n            <Switch onChange={onContentClick} id={switchId} value={isExpandedView} label={`Expand results`} />\n          </div>\n        </Field>\n\n        <div className={styles.resultCount}>Result series: {items.length}</div>\n      </header>\n\n      <div role={'table'}>\n        {\n          <>\n            {/* Show the value headings above all the values, but only if we're in the contracted view */}\n            {valueLabels.length > 1 && !isExpandedView && (\n              <ItemLabels valueLabels={valueLabels} expanded={isExpandedView} />\n            )}\n            <List\n              ref={listRef}\n              itemCount={items.length}\n              className={styles.wrapper}\n              itemSize={(index) => getListItemHeight(index, isExpandedView)}\n              height={calculateInitialHeight(items.length)}\n              width=\"100%\"\n            >\n              {({ index, style }) => {\n                let filteredValueLabels: DataFrameField[] | undefined;\n                if (isExpandedView) {\n                  filteredValueLabels = valueLabels.filter((valueLabel) => {\n                    const itemWithValue = items[index][valueLabel.name];\n                    return itemWithValue && itemWithValue !== RawPrometheusListItemEmptyValue;\n                  });\n                }\n\n                return (\n                  <div role=\"row\" style={{ ...style, overflow: 'hidden' }}>\n                    <RawListItem\n                      isExpandedView={isExpandedView}\n                      valueLabels={filteredValueLabels}\n                      totalNumberOfValues={valueLabels.length}\n                      listKey={items[index].__name__}\n                      listItemData={items[index]}\n                    />\n                  </div>\n                );\n              }}\n            </List>\n          </>\n        }\n      </div>\n    </section>\n  );\n};\n\nexport default RawListContainer;\n","import { css } from '@emotion/css';\nimport { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, DataFrame, SelectableValue, SplitOpen } from '@grafana/data';\nimport { getTemplateSrv, reportInteraction } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { RadioButtonGroup, Table, AdHocFilterItem, PanelChrome } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState, TABLE_RESULTS_STYLE } from 'app/types';\nimport { ExploreItemState, TABLE_RESULTS_STYLES, TableResultsStyle } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport RawListContainer from '../PrometheusListView/RawListContainer';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface RawPrometheusContainerProps {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  showRawPrometheus?: boolean;\n  splitOpenFn: SplitOpen;\n}\n\ninterface PrometheusContainerState {\n  resultsStyle: TableResultsStyle;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: RawPrometheusContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, rawPrometheusResult, range, queryResponse } = item;\n  const rawPrometheusFrame: DataFrame[] = rawPrometheusResult ? [rawPrometheusResult] : [];\n  const result = (tableResult?.length ?? 0) > 0 && rawPrometheusResult ? tableResult : rawPrometheusFrame;\n  const loading = queryResponse.state;\n\n  return { loading, tableResult: result, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = RawPrometheusContainerProps & ConnectedProps<typeof connector>;\n\nexport class RawPrometheusContainer extends PureComponent<Props, PrometheusContainerState> {\n  constructor(props: Props) {\n    super(props);\n\n    // If resultsStyle is undefined we won't render the toggle, and the default table will be rendered\n    if (props.showRawPrometheus) {\n      this.state = {\n        resultsStyle: TABLE_RESULTS_STYLE.raw,\n      };\n    }\n  }\n\n  onChangeResultsStyle = (resultsStyle: TableResultsStyle) => {\n    this.setState({ resultsStyle });\n  };\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult[0].length * 35) + 35);\n  }\n\n  renderLabel = () => {\n    const spacing = css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      flex: '1',\n    });\n    const ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<TableResultsStyle>> = TABLE_RESULTS_STYLES.map((style) => ({\n      value: style,\n      // capital-case it and switch `_` to ` `\n      label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n    }));\n\n    return (\n      <div className={spacing}>\n        <RadioButtonGroup\n          onClick={() => {\n            const props = {\n              state:\n                this.state.resultsStyle === TABLE_RESULTS_STYLE.table\n                  ? TABLE_RESULTS_STYLE.raw\n                  : TABLE_RESULTS_STYLE.table,\n            };\n            reportInteraction('grafana_explore_prometheus_instant_query_ui_toggle_clicked', props);\n          }}\n          size=\"sm\"\n          options={ALL_GRAPH_STYLE_OPTIONS}\n          value={this.state?.resultsStyle}\n          onChange={this.onChangeResultsStyle}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    const title = this.state.resultsStyle === TABLE_RESULTS_STYLE.raw ? 'Raw' : 'Table';\n    const label = this.state?.resultsStyle !== undefined ? this.renderLabel() : 'Table';\n\n    // Render table as default if resultsStyle is not set.\n    const renderTable = !this.state?.resultsStyle || this.state?.resultsStyle === TABLE_RESULTS_STYLE.table;\n\n    return (\n      <PanelChrome title={title} actions={label} loadingState={loading}>\n        {frames?.length && (\n          <>\n            {renderTable && (\n              <Table\n                ariaLabel={ariaLabel}\n                data={frames[0]}\n                width={tableWidth}\n                height={height}\n                onCellFilterAdded={onCellFilterAdded}\n              />\n            )}\n            {this.state?.resultsStyle === TABLE_RESULTS_STYLE.raw && <RawListContainer tableResult={frames[0]} />}\n          </>\n        )}\n        {!frames?.length && <MetaInfoText metaItems={[{ value: '0 series returned' }]} />}\n      </PanelChrome>\n    );\n  }\n}\n\nexport default connector(RawPrometheusContainer);\n","import { CSSProperties, useRef } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn = (props: Props) => {\n  const transitionRef = useRef(null);\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n      nodeRef={transitionRef}\n    >\n      {(state) => (\n        <div\n          ref={transitionRef}\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer = (props: ErrorContainerProps) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: string;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore.panes[props.exploreId]!.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Components } from '@grafana/e2e-selectors';\nimport { ToolbarButton, useTheme2 } from '@grafana/ui';\nimport { t, Trans } from 'app/core/internationalization';\n\nimport { useQueriesDrawerContext } from './QueriesDrawer/QueriesDrawerContext';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css({\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    }),\n  };\n};\n\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const { drawerOpened, setDrawerOpened, queryLibraryAvailable } = useQueriesDrawerContext();\n\n  // When queryLibraryAvailable=true we show the button in the toolbar (see QueriesDrawerDropdown)\n  const showHistoryButton = !props.richHistoryRowButtonHidden && !queryLibraryAvailable;\n\n  return (\n    <div className={styles.containerMargin}>\n      {!props.addQueryRowButtonHidden && (\n        <ToolbarButton\n          variant=\"canvas\"\n          aria-label={t('explore.secondary-actions.query-add-button-aria-label', 'Add query')}\n          onClick={props.onClickAddQueryRowButton}\n          disabled={props.addQueryRowButtonDisabled}\n          icon=\"plus\"\n        >\n          <Trans i18nKey=\"explore.secondary-actions.query-add-button\">Add query</Trans>\n        </ToolbarButton>\n      )}\n      {showHistoryButton && (\n        <ToolbarButton\n          variant={drawerOpened ? 'active' : 'canvas'}\n          aria-label={t('explore.secondary-actions.query-history-button-aria-label', 'Query history')}\n          onClick={() => setDrawerOpened(!drawerOpened)}\n          data-testid={Components.QueryTab.queryHistoryButton}\n          icon=\"history\"\n        >\n          <Trans i18nKey=\"explore.secondary-actions.query-history-button\">Query history</Trans>\n        </ToolbarButton>\n      )}\n      <ToolbarButton\n        variant={props.queryInspectorButtonActive ? 'active' : 'canvas'}\n        aria-label={t('explore.secondary-actions.query-inspector-button-aria-label', 'Query inspector')}\n        onClick={props.onClickQueryInspectorButton}\n        icon=\"info-circle\"\n      >\n        <Trans i18nKey=\"explore.secondary-actions.query-inspector-button\">Query inspector</Trans>\n      </ToolbarButton>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, SplitOpen, DataFrame, LoadingState, FieldType } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { TimeZone } from '@grafana/schema';\nimport { Table, AdHocFilterItem, PanelChrome, withTheme2, Themeable2 } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { t } from 'app/core/internationalization';\nimport {\n  hasDeprecatedParentRowIndex,\n  migrateFromParentRowIndexToNestedFrames,\n} from 'app/plugins/panel/table/migrations';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport { selectIsWaitingForData } from '../state/query';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface TableContainerProps extends Themeable2 {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, range } = item;\n  const loadingInState = selectIsWaitingForData(exploreId);\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  hasSubFrames = (data: DataFrame) => data.fields.some((f) => f.type === FieldType.nestedFrames);\n\n  getTableHeight(rowCount: number, hasSubFrames: boolean) {\n    if (rowCount === 0) {\n      return 200;\n    }\n    // tries to estimate table height, with a min of 300 and a max of 600\n    // if there are multiple tables, there is no min\n    return Math.min(600, Math.max(rowCount * 36, hasSubFrames ? 300 : 0) + 40 + 46);\n  }\n\n  getTableTitle(dataFrames: DataFrame[] | null, data: DataFrame, i: number) {\n    let name = data.name;\n    if (!name && (dataFrames?.length ?? 0) > 1) {\n      name = data.refId || `${i}`;\n    }\n\n    return name\n      ? t('explore.table.title-with-name', 'Table - {{name}}', { name, interpolation: { escapeValue: false } })\n      : t('explore.table.title', 'Table');\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone, theme } =\n      this.props;\n\n    let dataFrames = hasDeprecatedParentRowIndex(tableResult)\n      ? migrateFromParentRowIndexToNestedFrames(tableResult)\n      : tableResult;\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    return (\n      <>\n        {frames && frames.length === 0 && (\n          <PanelChrome title={t('explore.table.title', 'Table')} width={width} height={200}>\n            {() => <MetaInfoText metaItems={[{ value: t('explore.table.no-data', '0 series returned') }]} />}\n          </PanelChrome>\n        )}\n        {frames && frames.length > 0 && (\n          <div className={css({ display: 'flex', flexDirection: 'column', gap: theme.spacing(1) })}>\n            {frames.map((data, i) => (\n              <PanelChrome\n                key={data.refId || `table-${i}`}\n                title={this.getTableTitle(dataFrames, data, i)}\n                width={width}\n                height={this.getTableHeight(data.length, this.hasSubFrames(data))}\n                loadingState={loading ? LoadingState.Loading : undefined}\n              >\n                {(innerWidth, innerHeight) => (\n                  <Table\n                    ariaLabel={ariaLabel}\n                    data={data}\n                    width={innerWidth}\n                    height={innerHeight}\n                    onCellFilterAdded={onCellFilterAdded}\n                  />\n                )}\n              </PanelChrome>\n            ))}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const TableContainerWithTheme = withTheme2(TableContainer);\n\nexport default withTheme2(connector(TableContainer));\n","import { useMemo } from 'react';\n\nimport { DataFrame, SplitOpen } from '@grafana/data';\nimport { PanelChrome } from '@grafana/ui';\nimport { StoreState, useSelector } from 'app/types';\n\nimport { TraceView } from './TraceView';\nimport { transformDataFrames } from './utils/transform';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: string;\n  scrollElement?: Element;\n}\n\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const { dataFrames, splitOpenFn, exploreId, scrollElement } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const datasource = useSelector(\n    (state: StoreState) => state.explore.panes[props.exploreId]?.datasourceInstance ?? undefined\n  );\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <PanelChrome padding=\"none\" title=\"Trace\">\n      <TraceView\n        exploreId={exploreId}\n        dataFrames={dataFrames}\n        splitOpenFn={splitOpenFn}\n        scrollElement={scrollElement}\n        traceProp={traceProp}\n        datasource={datasource}\n      />\n    </PanelChrome>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get, groupBy } from 'lodash';\nimport { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer, { HorizontalSize } from 'react-virtualized-auto-sizer';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  EventBus,\n  GrafanaTheme2,\n  hasToggleableQueryFiltersSupport,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  SplitOpenOptions,\n  store,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  AdHocFilterItem,\n  CustomScrollbar,\n  ErrorBoundaryAlert,\n  PanelContainer,\n  Themeable2,\n  withTheme2,\n} from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { CONTENT_OUTLINE_LOCAL_STORAGE_KEYS, ContentOutline } from './ContentOutline/ContentOutline';\nimport { ContentOutlineContextProvider } from './ContentOutline/ContentOutlineContext';\nimport { ContentOutlineItem } from './ContentOutline/ContentOutlineItem';\nimport { CorrelationHelper } from './CorrelationHelper';\nimport { CustomContainer } from './CustomContainer';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { FlameGraphExploreContainer } from './FlameGraph/FlameGraphExploreContainer';\nimport { GraphContainer } from './Graph/GraphContainer';\nimport LogsContainer from './Logs/LogsContainer';\nimport { LogsSamplePanel } from './Logs/LogsSamplePanel';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraph/NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport RawPrometheusContainer from './RawPrometheus/RawPrometheusContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './Table/TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport {\n  addQueryRow,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  selectIsWaitingForData,\n  setQueries,\n  setSupplementaryQueryEnabled,\n} from './state/query';\nimport { isSplit } from './state/selectors';\nimport { updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css({\n      label: 'exploreMain',\n      // Is needed for some transition animations to work.\n      position: 'relative',\n      marginTop: '21px',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n    queryContainer: css({\n      label: 'queryContainer',\n      padding: theme.spacing(1),\n    }),\n    exploreContainer: css({\n      label: 'exploreContainer',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingRight: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    }),\n    wrapper: css({\n      position: 'absolute',\n      top: 0,\n      left: theme.spacing(2),\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n    }),\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: string;\n  theme: GrafanaTheme2;\n  eventBus: EventBus;\n  setShowQueryInspector: (value: boolean) => void;\n  showQueryInspector: boolean;\n}\n\ninterface ExploreState {\n  contentOutlineVisible: boolean;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\n\nexport class Explore extends PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  graphEventBus: EventBus;\n  logsEventBus: EventBus;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      contentOutlineVisible: store.getBool(CONTENT_OUTLINE_LOCAL_STORAGE_KEYS.visible, true),\n    };\n    this.graphEventBus = props.eventBus.newScopedBus('graph', { onlyLocal: false });\n    this.logsEventBus = props.eventBus.newScopedBus('logs', { onlyLocal: false });\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onContentOutlineToogle = () => {\n    store.set(CONTENT_OUTLINE_LOCAL_STORAGE_KEYS.visible, !this.state.contentOutlineVisible);\n    this.setState((state) => {\n      reportInteraction('explore_toolbar_contentoutline_clicked', {\n        item: 'outline',\n        type: state.contentOutlineVisible ? 'close' : 'open',\n      });\n      return {\n        contentOutlineVisible: !state.contentOutlineVisible,\n      };\n    });\n  };\n\n  /**\n   * Used by Logs details.\n   * Returns true if the query identified by `refId` has a filter with the provided key and value.\n   * @alpha\n   */\n  isFilterLabelActive = async (key: string, value: string | number, refId?: string) => {\n    const query = this.props.queries.find((q) => q.refId === refId);\n    if (!query) {\n      return false;\n    }\n    const ds = await getDataSourceSrv().get(query.datasource);\n    if (hasToggleableQueryFiltersSupport(ds) && ds.queryHasFilter(query, { key, value: value.toString() })) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterLabel = (key: string, value: string | number, frame?: DataFrame) => {\n    this.onModifyQueries(\n      {\n        type: 'ADD_FILTER',\n        options: { key, value: value.toString() },\n        frame,\n      },\n      frame?.refId\n    );\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterOutLabel = (key: string, value: string | number, frame?: DataFrame) => {\n    this.onModifyQueries(\n      {\n        type: 'ADD_FILTER_OUT',\n        options: { key, value: value.toString() },\n        frame,\n      },\n      frame?.refId\n    );\n  };\n\n  /**\n   * Used by Logs Popover Menu.\n   */\n  onClickFilterString = (value: string | number, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_STRING_FILTER', options: { value: value.toString() } }, refId);\n  };\n\n  /**\n   * Used by Logs Popover Menu.\n   */\n  onClickFilterOutString = (value: string | number, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_STRING_FILTER_OUT', options: { value: value.toString() } }, refId);\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onModifyQueries = (action: QueryFixAction, refId?: string) => {\n    const modifier = async (query: DataQuery, modification: QueryFixAction) => {\n      // This gives Logs Details support to modify the query that produced the log line.\n      // If not present, all queries are modified.\n      if (refId && refId !== query.refId) {\n        return query;\n      }\n      const { datasource } = query;\n      if (datasource == null) {\n        return query;\n      }\n      const ds = await getDataSourceSrv().get(datasource);\n      const toggleableFilters = ['ADD_FILTER', 'ADD_FILTER_OUT'];\n      if (hasToggleableQueryFiltersSupport(ds) && toggleableFilters.includes(modification.type)) {\n        return ds.toggleQueryFilter(query, {\n          type: modification.type === 'ADD_FILTER' ? 'FILTER_FOR' : 'FILTER_OUT',\n          options: modification.options ?? {},\n          frame: modification.frame,\n        });\n      }\n      if (ds.modifyQuery) {\n        return ds.modifyQuery(query, modification);\n      } else {\n        return query;\n      }\n    };\n    this.props.modifyQueries(this.props.exploreId, action, modifier);\n  };\n\n  onResize = (size: HorizontalSize) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderCustom(width: number) {\n    const { timeZone, queryResponse, eventBus } = this.props;\n\n    const groupedByPlugin = groupBy(queryResponse?.customFrames, 'meta.preferredVisualisationPluginId');\n\n    return Object.entries(groupedByPlugin).map(([pluginId, frames], index) => {\n      return (\n        <ContentOutlineItem panelId={pluginId} title={pluginId} icon=\"plug\" key={index}>\n          <CustomContainer\n            key={index}\n            timeZone={timeZone}\n            pluginId={pluginId}\n            frames={frames}\n            state={queryResponse.state}\n            timeRange={queryResponse.timeRange}\n            height={400}\n            width={width}\n            splitOpenFn={this.onSplitOpen(pluginId)}\n            eventBus={eventBus}\n          />\n        </ContentOutlineItem>\n      );\n    });\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, timeZone, queryResponse, showFlameGraph } = this.props;\n\n    return (\n      <ContentOutlineItem panelId=\"Graph\" title=\"Graph\" icon=\"graph-bar\">\n        <GraphContainer\n          data={graphResult!}\n          height={showFlameGraph ? 180 : 400}\n          width={width}\n          timeRange={queryResponse.timeRange}\n          timeZone={timeZone}\n          onChangeTime={this.onUpdateTimeRange}\n          annotations={queryResponse.annotations}\n          splitOpenFn={this.onSplitOpen('graph')}\n          loadingState={queryResponse.state}\n          eventBus={this.graphEventBus}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, timeZone } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Table\" title=\"Table\" icon=\"table\">\n        <TableContainer\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={this.onCellFilterAdded}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderRawPrometheus(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Raw Prometheus\" title=\"Raw Prometheus\" icon=\"gf-prometheus\">\n        <RawPrometheusContainer\n          showRawPrometheus={true}\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    // Need to make ContentOutlineItem a flex container so the gap works\n    const logsContentOutlineWrapper = css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    });\n    return (\n      <ContentOutlineItem panelId=\"Logs\" title=\"Logs\" icon=\"gf-logs\" className={logsContentOutlineWrapper}>\n        <LogsContainer\n          exploreId={exploreId}\n          loadingState={queryResponse.state}\n          syncedTimes={syncedTimes}\n          width={width - spacing}\n          onClickFilterLabel={this.onClickFilterLabel}\n          onClickFilterOutLabel={this.onClickFilterOutLabel}\n          onStartScanning={this.onStartScanning}\n          onStopScanning={this.onStopScanning}\n          eventBus={this.logsEventBus}\n          splitOpenFn={this.onSplitOpen('logs')}\n          scrollElement={this.scrollElement}\n          isFilterLabelActive={this.isFilterLabelActive}\n          onClickFilterString={this.onClickFilterString}\n          onClickFilterOutString={this.onClickFilterOutString}\n          onPinLineCallback={() => {\n            this.setState({ contentOutlineVisible: true });\n          }}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsSamplePanel() {\n    const { logsSample, timeZone, setSupplementaryQueryEnabled, exploreId, datasourceInstance, queries } = this.props;\n\n    return (\n      <ContentOutlineItem panelId=\"Logs Sample\" title=\"Logs Sample\" icon=\"gf-logs\">\n        <LogsSamplePanel\n          queryResponse={logsSample.data}\n          timeZone={timeZone}\n          enabled={logsSample.enabled}\n          queries={queries}\n          datasourceInstance={datasourceInstance}\n          splitOpen={this.onSplitOpen('logsSample')}\n          setLogsSampleEnabled={(enabled: boolean) =>\n            setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsSample)\n          }\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <ContentOutlineItem panelId=\"Node Graph\" title=\"Node Graph\" icon=\"code-branch\">\n        <NodeGraphContainer\n          dataFrames={queryResponse.nodeGraphFrames}\n          exploreId={exploreId}\n          withTraceView={showTrace}\n          datasourceType={datasourceType}\n          splitOpenFn={this.onSplitOpen('nodeGraph')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderFlameGraphPanel() {\n    const { queryResponse } = this.props;\n    return (\n      <ContentOutlineItem panelId=\"Flame Graph\" title=\"Flame Graph\" icon=\"fire\">\n        <FlameGraphExploreContainer dataFrames={queryResponse.flameGraphFrames} />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <ContentOutlineItem panelId=\"Traces\" title=\"Traces\" icon=\"file-alt\">\n          <TraceViewContainer\n            exploreId={exploreId}\n            dataFrames={dataFrames}\n            splitOpenFn={this.onSplitOpen('traceView')}\n            scrollElement={this.scrollElement}\n          />\n        </ContentOutlineItem>\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showRawPrometheus,\n      showLogs,\n      showTrace,\n      showCustom,\n      showNodeGraph,\n      showFlameGraph,\n      showLogsSample,\n      correlationEditorDetails,\n      correlationEditorHelperData,\n      showQueryInspector,\n      setShowQueryInspector,\n    } = this.props;\n    const { contentOutlineVisible } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.flameGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.rawPrometheusFrames,\n        queryResponse.traceFrames,\n        queryResponse.customFrames,\n      ].every((e) => e.length === 0);\n\n    let correlationsBox = undefined;\n    const isCorrelationsEditorMode = correlationEditorDetails?.editorMode;\n    const showCorrelationHelper = Boolean(isCorrelationsEditorMode || correlationEditorDetails?.correlationDirty);\n    if (showCorrelationHelper && correlationEditorHelperData !== undefined) {\n      correlationsBox = <CorrelationHelper exploreId={exploreId} correlations={correlationEditorHelperData} />;\n    }\n\n    return (\n      <ContentOutlineContextProvider refreshDependencies={this.props.queries}>\n        <ExploreToolbar\n          exploreId={exploreId}\n          onChangeTime={this.onChangeTime}\n          onContentOutlineToogle={this.onContentOutlineToogle}\n          isContentOutlineOpen={contentOutlineVisible}\n        />\n        <div\n          style={{\n            position: 'relative',\n            height: '100%',\n            paddingLeft: theme.spacing(2),\n          }}\n        >\n          <div className={styles.wrapper}>\n            {contentOutlineVisible && (\n              <ContentOutline scroller={this.scrollElement} panelId={`content-outline-container-${exploreId}`} />\n            )}\n            <CustomScrollbar\n              testId={selectors.pages.Explore.General.scrollView}\n              scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n              hideHorizontalTrack\n            >\n              <div className={styles.exploreContainer}>\n                {datasourceInstance ? (\n                  <>\n                    <ContentOutlineItem panelId=\"Queries\" title=\"Queries\" icon=\"arrow\" mergeSingleChild={true}>\n                      <PanelContainer className={styles.queryContainer}>\n                        {correlationsBox}\n                        <QueryRows exploreId={exploreId} />\n                        <SecondaryActions\n                          // do not allow people to add queries with potentially different datasources in correlations editor mode\n                          addQueryRowButtonDisabled={\n                            isLive || (isCorrelationsEditorMode && datasourceInstance.meta.mixed)\n                          }\n                          // We cannot show multiple traces at the same time right now so we do not show add query button.\n                          //TODO:unification\n                          addQueryRowButtonHidden={false}\n                          richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                          queryInspectorButtonActive={showQueryInspector}\n                          onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                          onClickQueryInspectorButton={() => setShowQueryInspector(!showQueryInspector)}\n                        />\n                        <ResponseErrorContainer exploreId={exploreId} />\n                      </PanelContainer>\n                    </ContentOutlineItem>\n                    <AutoSizer onResize={this.onResize} disableHeight>\n                      {({ width }) => {\n                        if (width === 0) {\n                          return null;\n                        }\n\n                        return (\n                          <main className={cx(styles.exploreMain)} style={{ width }}>\n                            <ErrorBoundaryAlert>\n                              {showPanels && (\n                                <>\n                                  {showMetrics && graphResult && (\n                                    <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showRawPrometheus && (\n                                    <ErrorBoundaryAlert>{this.renderRawPrometheus(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                                  {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                                  {showNodeGraph && (\n                                    <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showFlameGraph && (\n                                    <ErrorBoundaryAlert>{this.renderFlameGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                                  {showLogsSample && (\n                                    <ErrorBoundaryAlert>{this.renderLogsSamplePanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showCustom && <ErrorBoundaryAlert>{this.renderCustom(width)}</ErrorBoundaryAlert>}\n                                  {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                                </>\n                              )}\n                            </ErrorBoundaryAlert>\n                          </main>\n                        );\n                      }}\n                    </AutoSizer>\n                  </>\n                ) : (\n                  this.renderEmptyState(styles.exploreContainer)\n                )}\n              </div>\n            </CustomScrollbar>\n          </div>\n        </div>\n      </ContentOutlineContextProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item = explore.panes[exploreId]!;\n\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    tableResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    queryResponse,\n    showNodeGraph,\n    showFlameGraph,\n    showRawPrometheus,\n    supplementaryQueries,\n    correlationEditorHelperData,\n  } = item;\n\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const logsSample = supplementaryQueries[SupplementaryQueryType.LogsSample];\n  // We want to show logs sample only if there are no log results and if there is already graph or table result\n  const showLogsSample = !!(logsSample.dataProvider !== undefined && !logsResult && (graphResult || tableResult));\n\n  return {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    showNodeGraph,\n    showRawPrometheus,\n    showFlameGraph,\n    splitted: isSplit(state),\n    loading,\n    logsSample,\n    showLogsSample,\n    correlationEditorHelperData,\n    correlationEditorDetails: explore.correlationEditorDetails,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withTheme2(connector(Explore));\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { defaultTimeZone, TimeZone } from '@grafana/schema';\nimport { TabbedContainer, TabConfig, useStyles2 } from '@grafana/ui';\nimport { requestIdGenerator } from 'app/core/utils/explore';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { mixedRequestId } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState, ExploreItemState } from 'app/types';\n\nimport { GetDataOptions } from '../query/state/PanelQueryRunner';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  exploreId: string;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { onClose, queryResponse, timeZone, isMixed, exploreId } = props;\n  const [dataOptions, setDataOptions] = useState<GetDataOptions>({\n    withTransforms: false,\n    withFieldConfig: true,\n  });\n  const dataFrames = queryResponse?.series || [];\n  let errors = queryResponse?.errors;\n  if (!errors?.length && queryResponse?.error) {\n    errors = [queryResponse.error];\n  }\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone ?? defaultTimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        dataName={'Explore'}\n        isLoading={queryResponse.state === LoadingState.Loading}\n        options={dataOptions}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n        formattedDataDescription=\"Matches the format in the panel\"\n        onOptionsChange={setDataOptions}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: (\n      <div className={styles.queryInspectorWrapper}>\n        <QueryInspector\n          instanceId={isMixed ? mixedRequestId(0, requestIdGenerator(exploreId)) : requestIdGenerator(exploreId)}\n          data={queryResponse}\n          onRefreshQuery={() => props.runQueries({ exploreId })}\n        />\n      </div>\n    ),\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (errors?.length) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab errors={errors} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { queryResponse } = item;\n\n  return {\n    queryResponse,\n    isMixed: item.datasourceInstance?.meta.mixed || false,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  queryInspectorWrapper: css({\n    paddingBottom: theme.spacing(3),\n  }),\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import { css } from '@emotion/css';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { EventBusSrv, getTimeZone } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { CustomScrollbar } from '@grafana/ui';\nimport { stopQueryState } from 'app/core/utils/explore';\nimport { StoreState, useSelector } from 'app/types';\n\nimport Explore from './Explore';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { getExploreItemSelector } from './state/selectors';\n\nconst containerStyles = css({\n  label: 'explorePaneContainer',\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '600px',\n  height: '100%',\n});\n\ninterface Props {\n  exploreId: string;\n}\n\n/*\n  Connected components subscribe to the store before function components (using hooks) and can react to store changes. Thus, this connector function is called before the parent component (ExplorePage) is rerendered.\n  This means that child components' mapStateToProps will be executed with a zombie `exploreId` that is not present anymore in the store if the pane gets closed.\n  By connecting this component and returning the pane we workaround the zombie children issue here instead of modifying every children.\n  This is definitely not the ideal solution and we should in the future invest more time in exploring other approaches to better handle this scenario, potentially by refactoring panels to be function components\n  (therefore immune to this behaviour), or by forbidding them to access the store directly and instead pass them all the data they need via props or context.\n\n  You can read more about this issue here: https://react-redux.js.org/api/hooks#stale-props-and-zombie-children\n*/\nfunction ExplorePaneContainerUnconnected({ exploreId }: Props) {\n  useStopQueries(exploreId);\n  const eventBus = useRef(new EventBusSrv());\n  const ref = useRef(null);\n  const [showQueryInspector, setShowQueryInspector] = useState(false);\n\n  useEffect(() => {\n    const bus = eventBus.current;\n    return () => bus.removeAllListeners();\n  }, []);\n\n  return (\n    <CustomScrollbar hideVerticalTrack>\n      <div className={containerStyles} ref={ref} data-testid={selectors.pages.Explore.General.container}>\n        <Explore\n          exploreId={exploreId}\n          eventBus={eventBus.current}\n          showQueryInspector={showQueryInspector}\n          setShowQueryInspector={setShowQueryInspector}\n        />\n        {showQueryInspector && (\n          <ExploreQueryInspector\n            exploreId={exploreId}\n            onClose={() => setShowQueryInspector(false)}\n            timeZone={getTimeZone()}\n          />\n        )}\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, props: Props) {\n  const pane = state.explore.panes[props.exploreId];\n\n  return { pane };\n}\n\nconst connector = connect(mapStateToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n\nfunction useStopQueries(exploreId: string) {\n  const paneSelector = useMemo(() => getExploreItemSelector(exploreId), [exploreId]);\n  const paneRef = useRef<ReturnType<typeof paneSelector>>();\n  paneRef.current = useSelector(paneSelector);\n\n  useEffect(() => {\n    return () => {\n      stopQueryState(paneRef.current?.querySubscription);\n    };\n  }, []);\n}\n","export const getIdentityDisplayList = () => ({\n  kind: 'DisplayList',\n  apiVersion: 'iam.grafana.app/v0alpha1',\n  metadata: {},\n  keys: ['user:u000000001', 'user:u000000002'],\n  display: [\n    {\n      identity: {\n        type: 'user',\n        name: 'u000000001',\n      },\n      displayName: 'Test User1',\n      avatarURL: '/avatar/46d229b033af06a191ff2267bca9ae56',\n      internalId: 1,\n    },\n    {\n      identity: {\n        type: 'user',\n        name: 'u000000002',\n      },\n      displayName: 'Test User2',\n      avatarURL: '/avatar/24c9e15e52afc47c225b757e7bee1f9d',\n      internalId: 2,\n    },\n  ],\n});\n","export const getTestQueryList = () => ({\n  kind: 'QueryTemplateList',\n  apiVersion: 'peakq.grafana.app/v0alpha1',\n  metadata: {\n    resourceVersion: '1783293408052252672',\n    remainingItemCount: 0,\n  },\n  items: [\n    {\n      kind: 'QueryTemplate',\n      apiVersion: 'peakq.grafana.app/v0alpha1',\n      metadata: {\n        name: 'AElastic2nkf9',\n        generateName: 'AElastic',\n        namespace: 'default',\n        uid: '65327fce-c545-489d-ada5-16f909453d12',\n        resourceVersion: '1783293341664808960',\n        creationTimestamp: '2024-04-25T20:32:58Z',\n        annotations: { 'grafana.app/createdBy': 'user:u000000001' },\n      },\n      spec: {\n        title: 'Elastic Query Template',\n        targets: [\n          {\n            variables: {},\n            properties: {\n              refId: 'A',\n              datasource: {\n                type: 'elasticsearch',\n                uid: 'elastic-uid',\n              },\n              alias: '',\n              metrics: [\n                {\n                  id: '1',\n                  type: 'count',\n                },\n              ],\n              bucketAggs: [\n                {\n                  field: '@timestamp',\n                  id: '2',\n                  settings: {\n                    interval: 'auto',\n                  },\n                  type: 'date_histogram',\n                },\n              ],\n              timeField: '@timestamp',\n              query: 'test:test ',\n            },\n          },\n        ],\n      },\n    },\n    {\n      kind: 'QueryTemplate',\n      apiVersion: 'peakq.grafana.app/v0alpha1',\n      metadata: {\n        name: 'ALoki296tj',\n        generateName: 'ALoki',\n        namespace: 'default',\n        uid: '3e71de65-efa7-40e3-8f23-124212cca455',\n        resourceVersion: '1783214217151647744',\n        creationTimestamp: '2024-04-25T11:05:55Z',\n        annotations: { 'grafana.app/createdBy': 'user:u000000001' },\n      },\n      spec: {\n        title: 'Loki Query Template',\n        vars: [\n          {\n            key: '__value',\n            defaultValues: [''],\n            valueListDefinition: {\n              customValues: '',\n            },\n          },\n        ],\n        targets: [\n          {\n            variables: {\n              __value: [\n                {\n                  path: '$.datasource.jsonData.derivedFields.0.url',\n                  position: {\n                    start: 0,\n                    end: 14,\n                  },\n                  format: 'raw',\n                },\n                {\n                  path: '$.datasource.jsonData.derivedFields.1.url',\n                  position: {\n                    start: 0,\n                    end: 14,\n                  },\n                  format: 'raw',\n                },\n                {\n                  path: '$.datasource.jsonData.derivedFields.2.url',\n                  position: {\n                    start: 0,\n                    end: 14,\n                  },\n                  format: 'raw',\n                },\n              ],\n            },\n            properties: {\n              refId: 'A',\n              datasource: {\n                type: 'loki',\n                uid: 'loki-uid',\n              },\n              queryType: 'range',\n              editorMode: 'code',\n              expr: '{test=\"test\"}',\n            },\n          },\n        ],\n      },\n    },\n  ],\n});\n","import { BASE_URL } from './query';\nimport { getIdentityDisplayList } from './testdata/identityDisplayList';\nimport { getTestQueryList } from './testdata/testQueryList';\n\nexport const mockData = {\n  all: {\n    url: BASE_URL,\n    response: getTestQueryList(),\n  },\n  identityDisplay: {\n    response: getIdentityDisplayList(),\n  },\n};\n","/**\n * This is a temporary place for Query Library API and data types.\n * To be exposed via grafana-runtime/data in the future.\n *\n * Query Library is an experimental feature, the API and components are subject to change\n *\n * @alpha\n */\n\nimport { config } from '@grafana/runtime';\n\nimport { queryLibraryApi } from './api/factory';\nimport { mockData } from './api/mocks';\n\nexport const {\n  useAllQueryTemplatesQuery,\n  useAddQueryTemplateMutation,\n  useDeleteQueryTemplateMutation,\n  useEditQueryTemplateMutation,\n} = queryLibraryApi;\n\nexport function isQueryLibraryEnabled() {\n  return config.featureToggles.queryLibrary;\n}\n\nexport const QueryLibraryMocks = {\n  data: mockData.all,\n};\n\nexport const IdentityServiceMocks = {\n  data: mockData.identityDisplay,\n};\n","import { useAsync } from 'react-use';\n\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataSourceRef } from '@grafana/schema';\n\nexport function useDatasource(dataSourceRef?: DataSourceRef | null) {\n  const { value } = useAsync(async () => await getDataSourceSrv().get(dataSourceRef), [dataSourceRef]);\n  return value;\n}\n","import { useForm } from 'react-hook-form';\nimport { useAsync } from 'react-use';\n\nimport { AppEvents, dateTime } from '@grafana/data';\nimport { DataSourcePicker, getAppEvents, getDataSourceSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Button, InlineSwitch, Modal, RadioButtonGroup, TextArea } from '@grafana/ui';\nimport { Field } from '@grafana/ui/';\nimport { Input } from '@grafana/ui/src/components/Input/Input';\nimport { Trans, t } from 'app/core/internationalization';\nimport { getQueryDisplayText } from 'app/core/utils/richHistory';\nimport { useAddQueryTemplateMutation, useEditQueryTemplateMutation } from 'app/features/query-library';\nimport { AddQueryTemplateCommand, EditQueryTemplateCommand } from 'app/features/query-library/types';\n\nimport { useDatasource } from '../QueryLibrary/utils/useDatasource';\n\nimport { QueryTemplateRow } from './QueryTemplatesTable/types';\n\ntype Props = {\n  onCancel: () => void;\n  onSave: (isSuccess: boolean) => void;\n  queryToAdd?: DataQuery;\n  templateData?: QueryTemplateRow;\n};\n\nexport type QueryDetails = {\n  description: string;\n};\n\nconst VisibilityOptions = [\n  { value: 'Public', label: t('explore.query-library.public', 'Public') },\n  { value: 'Private', label: t('explore.query-library.private', 'Private') },\n];\n\nconst getInstuctions = (isAdd: boolean) => {\n  return isAdd\n    ? t(\n        'explore.query-template-modal.add-info',\n        `You're about to save this query. Once saved, you can easily access it in the Query Library tab for future use and reference.`\n      )\n    : t(\n        'explore.query-template-modal.edit-info',\n        `You're about to edit this query. Once saved, you can easily access it in the Query Library tab for future use and reference.`\n      );\n};\n\nexport const QueryTemplateForm = ({ onCancel, onSave, queryToAdd, templateData }: Props) => {\n  const { register, handleSubmit } = useForm<QueryDetails>({\n    defaultValues: {\n      description: templateData?.description,\n    },\n  });\n\n  const [addQueryTemplate] = useAddQueryTemplateMutation();\n  const [editQueryTemplate] = useEditQueryTemplateMutation();\n\n  const datasource = useDatasource(queryToAdd?.datasource);\n\n  // this is an array to support multi query templates sometime in the future\n  const queries =\n    queryToAdd !== undefined ? [queryToAdd] : templateData?.query !== undefined ? [templateData?.query] : [];\n\n  const handleAddQueryTemplate = async (addQueryTemplateCommand: AddQueryTemplateCommand) => {\n    return addQueryTemplate(addQueryTemplateCommand)\n      .unwrap()\n      .then(() => {\n        getAppEvents().publish({\n          type: AppEvents.alertSuccess.name,\n          payload: [\n            t('explore.query-library.query-template-added', 'Query template successfully added to the library'),\n          ],\n        });\n        return true;\n      })\n      .catch(() => {\n        getAppEvents().publish({\n          type: AppEvents.alertError.name,\n          payload: [\n            t('explore.query-library.query-template-add-error', 'Error attempting to add this query to the library'),\n          ],\n        });\n        return false;\n      });\n  };\n\n  const handleEditQueryTemplate = async (editQueryTemplateCommand: EditQueryTemplateCommand) => {\n    return editQueryTemplate(editQueryTemplateCommand)\n      .unwrap()\n      .then(() => {\n        getAppEvents().publish({\n          type: AppEvents.alertSuccess.name,\n          payload: [t('explore.query-library.query-template-edited', 'Query template successfully edited')],\n        });\n        return true;\n      })\n      .catch(() => {\n        getAppEvents().publish({\n          type: AppEvents.alertError.name,\n          payload: [t('explore.query-library.query-template-edit-error', 'Error attempting to edit this query')],\n        });\n        return false;\n      });\n  };\n\n  const onSubmit = async (data: QueryDetails) => {\n    const timestamp = dateTime().toISOString();\n    const temporaryDefaultTitle =\n      data.description || t('explore.query-library.default-description', 'Public', { timestamp: timestamp });\n\n    if (templateData?.uid) {\n      handleEditQueryTemplate({ uid: templateData.uid, partialSpec: { title: data.description } }).then((isSuccess) => {\n        onSave(isSuccess);\n      });\n    } else if (queryToAdd) {\n      handleAddQueryTemplate({ title: temporaryDefaultTitle, targets: [queryToAdd] }).then((isSuccess) => {\n        onSave(isSuccess);\n      });\n    }\n  };\n\n  const { value: queryText } = useAsync(async () => {\n    const promises = queries.map(async (query, i) => {\n      const datasource = await getDataSourceSrv().get(query.datasource);\n      return datasource?.getQueryDisplayText?.(query) || getQueryDisplayText(query);\n    });\n    return Promise.all(promises);\n  });\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <p>{getInstuctions(templateData === undefined)}</p>\n      {queryText &&\n        queryText.map((queryString, i) => (\n          <Field key={`query-${i}`} label={t('explore.query-template-modal.query', 'Query')}>\n            <TextArea readOnly={true} value={queryString}></TextArea>\n          </Field>\n        ))}\n      {queryToAdd && (\n        <>\n          <Field label={t('explore.query-template-modal.data-source-name', 'Data source name')}>\n            <DataSourcePicker current={datasource?.uid} disabled={true} />\n          </Field>\n          <Field label={t('explore.query-template-modall.data-source-type', 'Data source type')}>\n            <Input disabled={true} defaultValue={datasource?.meta.name}></Input>\n          </Field>\n        </>\n      )}\n      <Field label={t('explore.query-template-modal.description', 'Description')}>\n        <Input id=\"query-template-description\" autoFocus={true} {...register('description')}></Input>\n      </Field>\n      <Field label={t('explore.query-template-modal.visibility', 'Visibility')}>\n        <RadioButtonGroup options={VisibilityOptions} value={'Public'} disabled={true} />\n      </Field>\n      <InlineSwitch\n        showLabel={true}\n        disabled={true}\n        label={t(\n          'explore.query-template-modal.auto-star',\n          'Auto-star this query to add it to your starred list in the Query Library.'\n        )}\n      />\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={() => onCancel()} fill=\"outline\">\n          <Trans i18nKey=\"explore.query-library.cancel\">Cancel</Trans>\n        </Button>\n        <Button variant=\"primary\" type=\"submit\">\n          <Trans i18nKey=\"explore.query-library.save\">Save</Trans>\n        </Button>\n      </Modal.ButtonRow>\n    </form>\n  );\n};\n","import { getBackendSrv, config } from '@grafana/runtime';\n\nimport { UserDataQueryResponse } from './types';\n\n/**\n * @alpha\n */\nexport const API_VERSION = 'iam.grafana.app/v0alpha1';\n\n/**\n * @alpha\n */\nconst BASE_URL = `apis/${API_VERSION}/namespaces/${config.namespace}/display`;\n\nexport async function getUserInfo(url?: string): Promise<UserDataQueryResponse> {\n  const userInfo = await getBackendSrv().get(`${BASE_URL}${url}`);\n  return userInfo;\n}\n","import { useState } from 'react';\nimport { ConnectedProps, connect } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Button, ButtonVariant, Dropdown, Menu, ToolbarButton } from '@grafana/ui';\nimport { t } from '@grafana/ui/src/utils/i18n';\nimport { useSelector } from 'app/types';\n\nimport { changeDatasource } from './state/datasource';\nimport { setQueries } from './state/query';\nimport { isSplit, selectExploreDSMaps, selectPanesEntries } from './state/selectors';\n\nconst mapDispatchToProps = {\n  setQueries,\n  changeDatasource,\n};\n\nconst connector = connect(undefined, mapDispatchToProps);\n\ninterface ExploreRunQueryButtonProps {\n  queries: DataQuery[];\n  rootDatasourceUid?: string;\n  disabled?: boolean;\n  variant?: ButtonVariant;\n  onClick?: () => void;\n}\n\nexport type Props = ConnectedProps<typeof connector> & ExploreRunQueryButtonProps;\n\n/* \nThis component does not validate datasources before running them. Root datasource validation should happen outside this component and can pass in an undefined if invalid\nIf query level validation is done and a query datasource is invalid, pass in disabled = true\n*/\n\nexport function ExploreRunQueryButton({\n  rootDatasourceUid,\n  queries,\n  disabled = false,\n  variant = 'secondary',\n  onClick,\n  changeDatasource,\n  setQueries,\n}: Props) {\n  const [openRunQueryButton, setOpenRunQueryButton] = useState(false);\n  const isPaneSplit = useSelector(isSplit);\n  const exploreActiveDS = useSelector(selectExploreDSMaps);\n  const panesEntries = useSelector(selectPanesEntries);\n\n  const isDifferentDatasource = (uid: string, exploreId: string) =>\n    !exploreActiveDS.dsToExplore.find((di) => di.datasource.uid === uid)?.exploreIds.includes(exploreId);\n\n  // exploreId on where the query will be ran, and the datasource ID for the item's DS\n  const runQueryText = (exploreId: string, dsUid?: string) => {\n    // if the datasource or exploreID is undefined, it will be disabled, but give it default query button text\n    return dsUid !== undefined && exploreId !== undefined && isDifferentDatasource(dsUid, exploreId)\n      ? {\n          fallbackText: 'Switch data source and run query',\n          translation: t('explore.run-query.switch-datasource-button', 'Switch data source and run query'),\n        }\n      : {\n          fallbackText: 'Run query',\n          translation: t('explore.run-query.run-query-button', 'Run query'),\n        };\n  };\n\n  const runQuery = async (exploreId: string) => {\n    const differentDataSource = isDifferentDatasource(rootDatasourceUid!, exploreId);\n    if (differentDataSource) {\n      await changeDatasource({ exploreId, datasource: rootDatasourceUid! });\n    }\n    setQueries(exploreId, queries);\n\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const runButton = () => {\n    const isInvalid = disabled || queries.length === 0 || rootDatasourceUid === undefined;\n    if (!isPaneSplit) {\n      const exploreId = exploreActiveDS.exploreToDS[0]?.exploreId; // may be undefined if explore is refreshed while the pane is up\n      const buttonText = runQueryText(exploreId, rootDatasourceUid);\n      return (\n        <Button\n          variant={variant}\n          aria-label={buttonText.translation}\n          onClick={() => {\n            runQuery(exploreId);\n            onClick?.();\n          }}\n          disabled={isInvalid || exploreId === undefined}\n        >\n          {buttonText.translation}\n        </Button>\n      );\n    } else {\n      const menu = (\n        <Menu>\n          {panesEntries.map((pane, i) => {\n            const buttonText = runQueryText(pane[0], rootDatasourceUid);\n            const paneLabel =\n              i === 0 ? t('explore.run-query.left-pane', 'Left pane') : t('explore.run-query.right-pane', 'Right pane');\n            return (\n              <Menu.Item\n                key={i}\n                ariaLabel={buttonText.fallbackText}\n                onClick={() => {\n                  runQuery(pane[0]);\n                  onClick?.();\n                }}\n                label={`${paneLabel}: ${buttonText.translation}`}\n                disabled={isInvalid || pane[0] === undefined}\n              />\n            );\n          })}\n        </Menu>\n      );\n\n      return (\n        <Dropdown onVisibleChange={(state) => setOpenRunQueryButton(state)} placement=\"bottom-start\" overlay={menu}>\n          <ToolbarButton aria-label=\"run query options\" variant=\"canvas\" isOpen={openRunQueryButton}>\n            {t('explore.run-query.run-query-button', 'Run query')}\n          </ToolbarButton>\n        </Dropdown>\n      );\n    }\n  };\n\n  return <>{runButton()}</>;\n}\n\nexport default connector(ExploreRunQueryButton);\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data/';\nimport { useStyles2 } from '@grafana/ui/';\n\nexport const useQueryLibraryListStyles = () => {\n  return useStyles2(getStyles);\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logo: css({\n    marginRight: theme.spacing(2),\n    width: '16px',\n  }),\n  header: css({\n    margin: 0,\n    fontSize: theme.typography.h5.fontSize,\n    color: theme.colors.text.secondary,\n  }),\n  mainText: css({\n    margin: 0,\n    fontSize: theme.typography.body.fontSize,\n    textOverflow: 'ellipsis',\n  }),\n  otherText: css({\n    margin: 0,\n    fontSize: theme.typography.body.fontSize,\n    color: theme.colors.text.secondary,\n    textOverflow: 'ellipsis',\n  }),\n  singleLine: css({\n    display: '-webkit-box',\n    WebkitBoxOrient: 'vertical',\n    WebkitLineClamp: 1,\n    overflow: 'hidden',\n  }),\n  cell: css({\n    display: 'flex',\n    alignItems: 'center',\n    '&:last-child': {\n      justifyContent: 'end',\n    },\n  }),\n  actionButton: css({\n    padding: theme.spacing(1),\n  }),\n});\n","import { useState } from 'react';\n\nimport { getAppEvents } from '@grafana/runtime';\nimport { IconButton, Modal } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { t } from 'app/core/internationalization';\nimport { useDeleteQueryTemplateMutation } from 'app/features/query-library';\nimport { dispatch } from 'app/store/store';\nimport { ShowConfirmModalEvent } from 'app/types/events';\n\nimport ExploreRunQueryButton from '../../ExploreRunQueryButton';\nimport { useQueriesDrawerContext } from '../../QueriesDrawer/QueriesDrawerContext';\nimport {\n  queryLibaryTrackDeleteQuery,\n  queryLibraryTrackAddOrEditDescription,\n  queryLibraryTrackRunQuery,\n} from '../QueryLibraryAnalyticsEvents';\nimport { QueryTemplateForm } from '../QueryTemplateForm';\n\nimport { useQueryLibraryListStyles } from './styles';\nimport { QueryTemplateRow } from './types';\n\ninterface ActionsCellProps {\n  queryUid?: string;\n  queryTemplate: QueryTemplateRow;\n  rootDatasourceUid?: string;\n}\n\nfunction ActionsCell({ queryTemplate, rootDatasourceUid, queryUid }: ActionsCellProps) {\n  const [deleteQueryTemplate] = useDeleteQueryTemplateMutation();\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const { setDrawerOpened } = useQueriesDrawerContext();\n  const styles = useQueryLibraryListStyles();\n\n  const onDeleteQuery = (queryUid: string) => {\n    const performDelete = (queryUid: string) => {\n      deleteQueryTemplate({ uid: queryUid });\n      dispatch(notifyApp(createSuccessNotification(t('explore.query-library.query-deleted', 'Query deleted'))));\n      queryLibaryTrackDeleteQuery();\n    };\n\n    getAppEvents().publish(\n      new ShowConfirmModalEvent({\n        title: t('explore.query-library.delete-query-title', 'Delete query'),\n        text: t(\n          'explore.query-library.delete-query-text',\n          \"You're about to remove this query from the query library. This action cannot be undone. Do you want to continue?\"\n        ),\n        yesText: t('query-library.delete-query-button', 'Delete query'),\n        icon: 'trash-alt',\n        onConfirm: () => performDelete(queryUid),\n      })\n    );\n  };\n\n  return (\n    <div className={styles.cell}>\n      <IconButton\n        className={styles.actionButton}\n        size=\"lg\"\n        name=\"trash-alt\"\n        title={t('explore.query-library.delete-query', 'Delete query')}\n        tooltip={t('explore.query-library.delete-query', 'Delete query')}\n        onClick={() => {\n          if (queryUid) {\n            onDeleteQuery(queryUid);\n          }\n        }}\n      />\n      <IconButton\n        className={styles.actionButton}\n        size=\"lg\"\n        name=\"comment-alt\"\n        title={t('explore.query-library.add-edit-description', 'Add/edit description')}\n        tooltip={t('explore.query-library.add-edit-description', 'Add/edit description')}\n        onClick={() => {\n          setEditFormOpen(true);\n          queryLibraryTrackAddOrEditDescription();\n        }}\n      />\n      <ExploreRunQueryButton\n        queries={queryTemplate.query ? [queryTemplate.query] : []}\n        rootDatasourceUid={rootDatasourceUid}\n        variant=\"primary\"\n        onClick={() => {\n          setDrawerOpened(false);\n          queryLibraryTrackRunQuery(queryTemplate.datasourceType || '');\n        }}\n      />\n      <Modal\n        title={t('explore.query-template-modal.edit-title', 'Edit query')}\n        isOpen={editFormOpen}\n        onDismiss={() => setEditFormOpen(false)}\n      >\n        <QueryTemplateForm\n          onCancel={() => setEditFormOpen(false)}\n          templateData={queryTemplate}\n          onSave={() => {\n            setEditFormOpen(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default ActionsCell;\n","import { Avatar } from '@grafana/ui';\nimport { User } from 'app/features/query-library/types';\n\nimport { useQueryLibraryListStyles } from './styles';\n\ntype AddedByCellProps = {\n  user?: User;\n};\nexport function AddedByCell(props: AddedByCellProps) {\n  const styles = useQueryLibraryListStyles();\n\n  return (\n    <div>\n      <span className={styles.logo}>\n        <Avatar src={props.user?.avatarUrl || 'https://secure.gravatar.com/avatar'} alt=\"unknown\" />\n      </span>\n      <span className={styles.otherText}>{props.user?.displayName || 'Unknown'}</span>\n    </div>\n  );\n}\n","import { CellProps } from 'react-table';\n\nimport { useDatasource } from '../utils/useDatasource';\n\nimport { useQueryLibraryListStyles } from './styles';\nimport { QueryTemplateRow } from './types';\n\nexport function DatasourceTypeCell(props: CellProps<QueryTemplateRow>) {\n  const datasourceApi = useDatasource(props.row.original.datasourceRef);\n  const styles = useQueryLibraryListStyles();\n\n  return <p className={styles.otherText}>{datasourceApi?.meta.name}</p>;\n}\n","import { CellProps } from 'react-table';\n\nimport { dateTime } from '@grafana/data';\n\nimport { useQueryLibraryListStyles } from './styles';\nimport { QueryTemplateRow } from './types';\n\nexport function DateAddedCell(props: CellProps<QueryTemplateRow>) {\n  const styles = useQueryLibraryListStyles();\n  const formattedTime = dateTime(props.row.original.createdAtTimestamp).format('YYYY-MM-DD HH:mm:ss');\n\n  return <p className={styles.otherText}>{formattedTime}</p>;\n}\n","import { css, cx } from '@emotion/css';\nimport { CellProps } from 'react-table';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Spinner, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { useDatasource } from '../utils/useDatasource';\n\nimport { useQueryLibraryListStyles } from './styles';\nimport { QueryTemplateRow } from './types';\n\nexport function QueryDescriptionCell(props: CellProps<QueryTemplateRow>) {\n  const datasourceApi = useDatasource(props.row.original.datasourceRef);\n  const queryLibraryListStyles = useQueryLibraryListStyles();\n  const styles = useStyles2(getStyles);\n\n  if (!datasourceApi) {\n    return <Spinner />;\n  }\n\n  if (!props.row.original.query) {\n    return <div>No queries</div>;\n  }\n  const queryDisplayText = props.row.original.queryText;\n  const description = props.row.original.description;\n  const dsName = props.row.original.datasourceName;\n\n  return (\n    <div className={styles.container} aria-label={`Query template for ${dsName}: ${description}`}>\n      <p className={queryLibraryListStyles.header}>\n        <img\n          className={queryLibraryListStyles.logo}\n          src={datasourceApi?.meta.info.logos.small || 'public/img/icn-datasource.svg'}\n          alt={datasourceApi?.meta.info.description}\n        />\n        {dsName}\n      </p>\n      <Tooltip content={queryDisplayText ?? ''} placement=\"bottom-start\">\n        <p className={cx(queryLibraryListStyles.mainText, queryLibraryListStyles.singleLine, styles.queryDisplayText)}>\n          {queryDisplayText}\n        </p>\n      </Tooltip>\n      <p className={cx(queryLibraryListStyles.otherText, queryLibraryListStyles.singleLine)}>{description}</p>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    maxWidth: theme.spacing(60),\n  }),\n  queryDisplayText: css({\n    backgroundColor: theme.colors.background.canvas,\n  }),\n});\n","import { css } from '@emotion/css';\nimport { SortByFn } from 'react-table';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Column, InteractiveTable, useStyles2 } from '@grafana/ui';\n\nimport ActionsCell from './ActionsCell';\nimport { AddedByCell } from './AddedByCell';\nimport { DatasourceTypeCell } from './DatasourceTypeCell';\nimport { DateAddedCell } from './DateAddedCell';\nimport { QueryDescriptionCell } from './QueryDescriptionCell';\nimport { QueryTemplateRow } from './types';\n\nconst timestampSort: SortByFn<QueryTemplateRow> = (rowA, rowB, _, desc) => {\n  const timeA = rowA.original.createdAtTimestamp || 0;\n  const timeB = rowB.original.createdAtTimestamp || 0;\n  return desc ? timeA - timeB : timeB - timeA;\n};\n\nconst columns: Array<Column<QueryTemplateRow>> = [\n  { id: 'description', header: 'Data source and query', cell: QueryDescriptionCell },\n  { id: 'addedBy', header: 'Added by', cell: ({ row: { original } }) => <AddedByCell user={original.user} /> },\n  { id: 'datasourceType', header: 'Datasource type', cell: DatasourceTypeCell, sortType: 'string' },\n  { id: 'createdAtTimestamp', header: 'Date added', cell: DateAddedCell, sortType: timestampSort },\n  {\n    id: 'actions',\n    header: '',\n    cell: ({ row: { original } }) => (\n      <ActionsCell queryTemplate={original} rootDatasourceUid={original.datasourceRef?.uid} queryUid={original.uid} />\n    ),\n  },\n];\n\ntype Props = {\n  queryTemplateRows: QueryTemplateRow[];\n};\n\nexport default function QueryTemplatesTable({ queryTemplateRows }: Props) {\n  const styles = useStyles2(getStyles);\n  return (\n    <InteractiveTable\n      columns={columns}\n      data={queryTemplateRows}\n      getRowId={(row: { index: string }) => row.index}\n      pageSize={20}\n      className={styles.table}\n    />\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css({\n    'tbody tr': {\n      position: 'relative',\n      backgroundColor: theme.colors.background.secondary,\n      borderCollapse: 'collapse',\n      borderBottom: 'unset',\n      overflow: 'hidden', // Ensure the row doesn't overflow and cause additonal scrollbars\n    },\n    /* Adds the pseudo-element for the lines between table rows */\n    'tbody tr::after': {\n      content: '\"\"',\n      position: 'absolute',\n      inset: 'auto 0 0 0',\n      height: theme.spacing(0.5),\n      backgroundColor: theme.colors.background.primary,\n    },\n  }),\n});\n","import { QueryTemplateRow } from '../QueryTemplatesTable/types';\n\nexport const searchQueryLibrary = (\n  queryLibrary: QueryTemplateRow[],\n  query: string,\n  dsFilters: string[],\n  userNameFilters: string[]\n) => {\n  const result = queryLibrary.filter((item) => {\n    const matchesDsFilter =\n      dsFilters.length === 0 || dsFilters.some((f) => item.datasourceName?.toLowerCase().includes(f.toLowerCase()));\n    const matchesUserNameFilter =\n      userNameFilters.length === 0 || userNameFilters.includes(item.user?.displayName || '');\n    return (\n      (item.datasourceName?.toLowerCase().includes(query.toLowerCase()) ||\n        item.datasourceType?.toLowerCase().includes(query.toLowerCase()) ||\n        item.description?.toLowerCase().includes(query.toLowerCase()) ||\n        item.queryText?.toLowerCase().includes(query.toLowerCase())) &&\n      matchesDsFilter &&\n      matchesUserNameFilter\n    );\n  });\n  return result;\n};\n","import { css } from '@emotion/css';\nimport { compact, uniq, uniqBy } from 'lodash';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { AppEvents, GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { getAppEvents, getDataSourceSrv } from '@grafana/runtime';\nimport { EmptyState, FilterInput, InlineLabel, MultiSelect, Spinner, useStyles2, Stack } from '@grafana/ui';\nimport { t, Trans } from 'app/core/internationalization';\nimport { createQueryText } from 'app/core/utils/richHistory';\nimport { useAllQueryTemplatesQuery } from 'app/features/query-library';\nimport { getUserInfo } from 'app/features/query-library/api/user';\nimport { QueryTemplate } from 'app/features/query-library/types';\n\nimport { getDatasourceSrv } from '../../plugins/datasource_srv';\n\nimport { QueryLibraryProps } from './QueryLibrary';\nimport { queryLibraryTrackFilterDatasource } from './QueryLibraryAnalyticsEvents';\nimport QueryTemplatesTable from './QueryTemplatesTable';\nimport { QueryTemplateRow } from './QueryTemplatesTable/types';\nimport { searchQueryLibrary } from './utils/search';\n\ninterface QueryTemplatesListProps extends QueryLibraryProps {}\n\nexport function QueryTemplatesList(props: QueryTemplatesListProps) {\n  const { data, isLoading, error } = useAllQueryTemplatesQuery();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [datasourceFilters, setDatasourceFilters] = useState<Array<SelectableValue<string>>>(\n    props.activeDatasources?.map((ds) => ({ value: ds, label: ds })) || []\n  );\n  const [userData, setUserData] = useState<string[]>([]);\n  const [userFilters, setUserFilters] = useState<Array<SelectableValue<string>>>([]);\n\n  const [allQueryTemplateRows, setAllQueryTemplateRows] = useState<QueryTemplateRow[]>([]);\n  const [isRowsLoading, setIsRowsLoading] = useState(true);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    let shouldCancel = true;\n\n    const fetchRows = async () => {\n      if (!data) {\n        setIsRowsLoading(false);\n        return;\n      }\n\n      let userDataList;\n      const userQtList = uniq(compact(data.map((qt) => qt.user?.uid)));\n      const usersParam = userQtList.map((userUid) => `key=${encodeURIComponent(userUid)}`).join('&');\n      try {\n        userDataList = await getUserInfo(`?${usersParam}`);\n      } catch (error) {\n        getAppEvents().publish({\n          type: AppEvents.alertError.name,\n          payload: [\n            t('query-library.user-info-get-error', 'Error attempting to get user info from the library: {{error}}', {\n              error: JSON.stringify(error),\n            }),\n          ],\n        });\n        setIsRowsLoading(false);\n        return;\n      }\n\n      setUserData(userDataList.display.map((user) => user.displayName));\n\n      const rowsPromises = data.map(async (queryTemplate: QueryTemplate, index: number) => {\n        try {\n          const datasourceRef = queryTemplate.targets[0]?.datasource;\n          const datasourceApi = await getDataSourceSrv().get(datasourceRef);\n          const datasourceType = getDatasourceSrv().getInstanceSettings(datasourceRef)?.meta.name || '';\n          const query = queryTemplate.targets[0];\n          const queryText = createQueryText(query, datasourceApi);\n          const datasourceName = datasourceApi?.name || '';\n          const extendedUserData = userDataList.display.find(\n            (user) => `${user?.identity.type}:${user?.identity.name}` === queryTemplate.user?.uid\n          );\n\n          return {\n            index: index.toString(),\n            uid: queryTemplate.uid,\n            datasourceName,\n            datasourceRef,\n            datasourceType,\n            createdAtTimestamp: queryTemplate?.createdAtTimestamp || 0,\n            query,\n            queryText,\n            description: queryTemplate.title,\n            user: {\n              uid: queryTemplate.user?.uid || '',\n              displayName: extendedUserData?.displayName || '',\n              avatarUrl: extendedUserData?.avatarUrl || '',\n            },\n          };\n        } catch (error) {\n          getAppEvents().publish({\n            type: AppEvents.alertError.name,\n            payload: [\n              t(\n                'query-library.query-template-get-error',\n                'Error attempting to get query template from the library: {{error}}',\n                { error: JSON.stringify(error) }\n              ),\n            ],\n          });\n          return { index: index.toString(), error };\n        }\n      });\n\n      const results = await Promise.allSettled(rowsPromises);\n      const rows = results.filter((result) => result.status === 'fulfilled').map((result) => result.value);\n\n      if (shouldCancel) {\n        setAllQueryTemplateRows(rows);\n        setIsRowsLoading(false);\n      }\n    };\n\n    fetchRows();\n\n    return () => {\n      shouldCancel = false;\n    };\n  }, [data]);\n\n  const queryTemplateRows = useMemo(\n    () =>\n      searchQueryLibrary(\n        allQueryTemplateRows,\n        searchQuery,\n        datasourceFilters.map((f) => f.value || ''),\n        userFilters.map((f) => f.value || '')\n      ),\n    [allQueryTemplateRows, searchQuery, datasourceFilters, userFilters]\n  );\n\n  const datasourceNames = useMemo(() => {\n    return uniqBy(allQueryTemplateRows, 'datasourceName').map((row) => row.datasourceName);\n  }, [allQueryTemplateRows]);\n\n  if (error) {\n    return (\n      <EmptyState variant=\"not-found\" message={`Something went wrong`}>\n        {error.message}\n      </EmptyState>\n    );\n  }\n\n  if (isLoading || isRowsLoading) {\n    return <Spinner />;\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <EmptyState message={`Query Library`} variant=\"not-found\">\n        <p>\n          {\n            \"You haven't saved any queries to your library yet. Start adding them from Explore or your Query History tab.\"\n          }\n        </p>\n      </EmptyState>\n    );\n  }\n\n  return (\n    <>\n      <Stack gap={0.5}>\n        <FilterInput\n          className={styles.searchInput}\n          placeholder={t('query-library.search', 'Search by data source, query content or description')}\n          aria-label={t('query-library.search', 'Search by data source, query content or description')}\n          value={searchQuery}\n          onChange={(query) => setSearchQuery(query)}\n          escapeRegex={false}\n        />\n        <InlineLabel className={styles.label} width=\"auto\">\n          <Trans i18nKey=\"query-library.datasource-names\">Datasource name(s):</Trans>\n        </InlineLabel>\n        <MultiSelect\n          className={styles.multiSelect}\n          onChange={(items, actionMeta) => {\n            setDatasourceFilters(items);\n            actionMeta.action === 'select-option' && queryLibraryTrackFilterDatasource();\n          }}\n          value={datasourceFilters}\n          options={datasourceNames.map((r) => {\n            return { value: r, label: r };\n          })}\n          placeholder={'Filter queries for data sources(s)'}\n          aria-label={'Filter queries for data sources(s)'}\n        />\n        <InlineLabel className={styles.label} width=\"auto\">\n          <Trans i18nKey=\"query-library.user-names\">User name(s):</Trans>\n        </InlineLabel>\n        <MultiSelect\n          className={styles.multiSelect}\n          onChange={(items, actionMeta) => {\n            setUserFilters(items);\n            actionMeta.action === 'select-option' && queryLibraryTrackFilterDatasource();\n          }}\n          value={userFilters}\n          options={userData.map((r) => {\n            return { value: r, label: r };\n          })}\n          placeholder={'Filter queries for user name(s)'}\n          aria-label={'Filter queries for user name(s)'}\n        />\n      </Stack>\n      <QueryTemplatesTable queryTemplateRows={queryTemplateRows} />\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  searchInput: css({\n    maxWidth: theme.spacing(55),\n  }),\n  multiSelect: css({\n    maxWidth: theme.spacing(65),\n  }),\n  label: css({\n    marginLeft: theme.spacing(1),\n    border: `1px solid ${theme.colors.secondary.border}`,\n  }),\n});\n","import { QueryTemplatesList } from './QueryTemplatesList';\n\nexport interface QueryLibraryProps {\n  // List of active datasources to filter the query library by\n  // E.g in Explore the active datasources are the datasources that are currently selected in the query editor\n  activeDatasources?: string[];\n}\n\nexport function QueryLibrary({ activeDatasources }: QueryLibraryProps) {\n  return <QueryTemplatesList activeDatasources={activeDatasources} />;\n}\n","import { t } from 'i18next';\nimport { useState } from 'react';\n\nimport { DataQuery } from '@grafana/schema';\nimport { Button, Modal } from '@grafana/ui';\nimport { isQueryLibraryEnabled } from 'app/features/query-library';\n\nimport {\n  queryLibraryTrackAddFromQueryHistory,\n  queryLibraryTrackAddFromQueryHistoryAddModalShown,\n} from '../QueryLibrary/QueryLibraryAnalyticsEvents';\nimport { QueryTemplateForm } from '../QueryLibrary/QueryTemplateForm';\n\ntype Props = {\n  query: DataQuery;\n};\n\nexport const RichHistoryAddToLibrary = ({ query }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [hasBeenSaved, setHasBeenSaved] = useState(false);\n\n  const buttonLabel = t('explore.rich-history-card.add-to-library', 'Add to library');\n\n  return isQueryLibraryEnabled() && !hasBeenSaved ? (\n    <>\n      <Button\n        variant=\"secondary\"\n        aria-label={buttonLabel}\n        onClick={() => {\n          setIsOpen(true);\n          queryLibraryTrackAddFromQueryHistoryAddModalShown();\n        }}\n      >\n        {buttonLabel}\n      </Button>\n      <Modal\n        title={t('explore.query-template-modal.add-title', 'Add query to Query Library')}\n        isOpen={isOpen}\n        onDismiss={() => setIsOpen(false)}\n      >\n        <QueryTemplateForm\n          onCancel={() => setIsOpen(() => false)}\n          queryToAdd={query}\n          onSave={(isSuccess) => {\n            if (isSuccess) {\n              setIsOpen(false);\n              setHasBeenSaved(true);\n              queryLibraryTrackAddFromQueryHistory(query.datasource?.type || '');\n            }\n          }}\n        />\n      </Modal>\n    </>\n  ) : undefined;\n};\n","import { css, cx } from '@emotion/css';\nimport { useCallback, useState } from 'react';\nimport * as React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { GrafanaTheme2, DataSourceApi } from '@grafana/data';\nimport { config, reportInteraction, getAppEvents } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { TextArea, Button, IconButton, useStyles2 } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { Trans, t } from 'app/core/internationalization';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from 'app/features/explore/state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from 'app/features/explore/state/history';\nimport { setQueries } from 'app/features/explore/state/query';\nimport { dispatch } from 'app/store/store';\nimport { ShowConfirmModalEvent } from 'app/types/events';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport ExploreRunQueryButton from '../ExploreRunQueryButton';\n\nimport { RichHistoryAddToLibrary } from './RichHistoryAddToLibrary';\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(undefined, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  datasourceInstances?: DataSourceApi[];\n  queryHistoryItem: RichHistoryQuery<T>;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.background.secondary;\n\n  return {\n    queryCard: css`\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(1)} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.shape.radius.default};\n      .starred {\n        color: ${theme.v1.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(1)};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border.weak};\n        padding: ${theme.spacing(0.5, 1)};\n      }\n      img {\n        height: ${theme.typography.fontSize}px;\n        max-width: ${theme.typography.fontSize}px;\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing(1)};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing(1)};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-top: ${theme.spacing(1)};\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing(0.5, 2)};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n    loader: css`\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: ${theme.colors.background.secondary};\n    `,\n  };\n};\n\nexport function RichHistoryCard(props: Props) {\n  const { queryHistoryItem, commentHistoryItem, starHistoryItem, deleteHistoryItem, datasourceInstances } = props;\n\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(queryHistoryItem.comment);\n  const styles = useStyles2(getStyles);\n\n  const cardRootDatasource = datasourceInstances\n    ? datasourceInstances.find((di) => di.uid === queryHistoryItem.datasourceUid)\n    : undefined;\n\n  const onCopyQuery = async () => {\n    const datasources = [...queryHistoryItem.queries.map((query) => query.datasource?.type || 'unknown')];\n    reportInteraction('grafana_explore_query_history_copy_query', {\n      datasources,\n      mixed: Boolean(cardRootDatasource?.meta.mixed),\n    });\n\n    const queriesText = queryHistoryItem.queries\n      .map((query) => {\n        let queryDS = datasourceInstances?.find((di) => di.uid === queryHistoryItem.datasourceUid);\n        if (queryDS?.meta.mixed) {\n          queryDS = datasourceInstances?.find((di) => di.uid === query.datasource?.uid);\n        }\n        return createQueryText(query, queryDS);\n      })\n      .join('\\n');\n\n    copyStringToClipboard(queriesText);\n    dispatch(\n      notifyApp(\n        createSuccessNotification(t('explore.rich-history-notification.query-copied', 'Query copied to clipboard'))\n      )\n    );\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(queryHistoryItem);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(\n        notifyApp(createSuccessNotification(t('explore.rich-history-notification.query-deleted', 'Query deleted')))\n      );\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (queryHistoryItem.starred) {\n      getAppEvents().publish(\n        new ShowConfirmModalEvent({\n          title: t('explore.rich-history-card.delete-query-confirmation-title', 'Delete'),\n          text: t(\n            'explore.rich-history-card.delete-starred-query-confirmation-text',\n            'Are you sure you want to permanently delete your starred query?'\n          ),\n          yesText: t('explore.rich-history-card.confirm-delete', 'Delete'),\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(queryHistoryItem.id),\n        })\n      );\n    } else {\n      performDelete(queryHistoryItem.id);\n    }\n  };\n\n  const onStarQuery = () => {\n    starHistoryItem(queryHistoryItem.id, !queryHistoryItem.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !queryHistoryItem.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(queryHistoryItem.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(queryHistoryItem.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div\n      className={styles.updateCommentContainer}\n      aria-label={\n        comment\n          ? t('explore.rich-history-card.update-comment-form', 'Update comment form')\n          : t('explore.rich-history-card.add-comment-form', 'Add comment form')\n      }\n    >\n      <TextArea\n        onKeyDown={onKeyDown}\n        value={comment}\n        placeholder={\n          comment\n            ? undefined\n            : t('explore.rich-history-card.optional-description', 'An optional description of what the query does.')\n        }\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment}>\n          <Trans i18nKey=\"explore.rich-history-card.save-comment\">Save comment</Trans>\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          <Trans i18nKey=\"explore.rich-history-card.cancel\">Cancel</Trans>\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        tooltip={\n          queryHistoryItem.comment?.length > 0\n            ? t('explore.rich-history-card.edit-comment-tooltip', 'Edit comment')\n            : t('explore.rich-history-card.add-comment-tooltip', 'Add comment')\n        }\n      />\n      <IconButton\n        name=\"copy\"\n        onClick={onCopyQuery}\n        tooltip={t('explore.rich-history-card.copy-query-tooltip', 'Copy query to clipboard')}\n      />\n      {cardRootDatasource && (\n        <IconButton\n          name=\"share-alt\"\n          onClick={onCreateShortLink}\n          tooltip={\n            <Trans i18nKey=\"explore.rich-history-card.copy-shortened-link-tooltip\">\n              Copy shortened link to clipboard\n            </Trans>\n          }\n        />\n      )}\n      <IconButton\n        name=\"trash-alt\"\n        title={t('explore.rich-history-card.delete-query-title', 'Delete query')}\n        tooltip={t('explore.rich-history-card.delete-query-tooltip', 'Delete query')}\n        onClick={onDeleteQuery}\n      />\n      <IconButton\n        name={queryHistoryItem.starred ? 'favorite' : 'star'}\n        iconType={queryHistoryItem.starred ? 'mono' : 'default'}\n        onClick={onStarQuery}\n        tooltip={\n          queryHistoryItem.starred\n            ? t('explore.rich-history-card.unstar-query-tooltip', 'Unstar query')\n            : t('explore.rich-history-card.star-query-tooltip', 'Star query')\n        }\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard}>\n      <div className={styles.cardRow}>\n        <DatasourceInfo dsApi={cardRootDatasource} size=\"sm\" />\n\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {queryHistoryItem?.queries.map((q, i) => {\n            const queryDs = datasourceInstances?.find((ds) => ds.uid === q.datasource?.uid);\n            return (\n              <Query\n                query={{ query: q, datasource: queryDs }}\n                key={`${q}-${i}`}\n                showDsInfo={cardRootDatasource?.meta.mixed}\n              />\n            );\n          })}\n          {!activeUpdateComment && queryHistoryItem.comment && (\n            <div\n              aria-label={t('explore.rich-history-card.query-comment-label', 'Query comment')}\n              className={styles.comment}\n            >\n              {queryHistoryItem.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && <RichHistoryAddToLibrary query={queryHistoryItem?.queries[0]} />}\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <ExploreRunQueryButton queries={queryHistoryItem.queries} rootDatasourceUid={cardRootDatasource?.uid} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst getQueryStyles = (theme: GrafanaTheme2) => ({\n  queryRow: css`\n    border-top: 1px solid ${theme.colors.border.weak};\n    display: flex;\n    flex-direction: row;\n    padding: 4px 0px;\n    gap: 4px;\n    :first-child {\n      border-top: none;\n    }\n  `,\n  dsInfoContainer: css`\n    display: flex;\n    align-items: center;\n  `,\n  queryText: css`\n    word-break: break-all;\n  `,\n});\n\ninterface QueryProps {\n  query: {\n    query: DataQuery;\n    datasource?: DataSourceApi;\n  };\n  /** Show datasource info (icon+name) alongside the query text */\n  showDsInfo?: boolean;\n}\n\nconst Query = ({ query, showDsInfo = false }: QueryProps) => {\n  const styles = useStyles2(getQueryStyles);\n\n  return (\n    <div className={styles.queryRow}>\n      {showDsInfo && (\n        <div className={styles.dsInfoContainer}>\n          <DatasourceInfo dsApi={query.datasource} size=\"md\" />\n          {': '}\n        </div>\n      )}\n      <span aria-label={t('explore.rich-history-card.query-text-label', 'Query text')} className={styles.queryText}>\n        {createQueryText(query.query, query.datasource)}\n      </span>\n    </div>\n  );\n};\n\nconst getDsInfoStyles = (size: 'sm' | 'md') => (theme: GrafanaTheme2) => css`\n  display: flex;\n  align-items: center;\n  font-size: ${theme.typography[size === 'sm' ? 'bodySmall' : 'body'].fontSize};\n  font-weight: ${theme.typography.fontWeightMedium};\n  white-space: nowrap;\n`;\n\nfunction DatasourceInfo({ dsApi, size }: { dsApi?: DataSourceApi; size: 'sm' | 'md' }) {\n  const getStyles = useCallback((theme: GrafanaTheme2) => getDsInfoStyles(size)(theme), [size]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles}>\n      <img\n        src={dsApi?.meta.info.logos.small || 'public/img/icn-datasource.svg'}\n        alt={dsApi?.type || t('explore.rich-history-card.datasource-not-exist', 'Data source does not exist anymore')}\n        aria-label={t('explore.rich-history-card.datasource-icon-label', 'Data source icon')}\n      />\n      <div aria-label={t('explore.rich-history-card.datasource-name-label', 'Data source name')}>\n        {dsApi?.name || t('explore.rich-history-card.datasource-not-exist', 'Data source does not exist anymore')}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport { useEffect } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataSourceApi, GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config, getDataSourceSrv } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport {\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryQueriesTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  activeDatasources: string[];\n  listOfDatasources: Array<{ name: string; uid: string }>;\n  height: number;\n}\n\nconst getStyles = (theme: GrafanaTheme2, height: number) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      &:last-of-type {\n        margin-top: ${theme.spacing(3)};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing(1)} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing(3)};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.h4.fontSize};\n      margin: ${theme.spacing(2, 0.25, 1, 0.25)};\n    `,\n    footer: css`\n      height: 60px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport function RichHistoryQueriesTab(props: RichHistoryQueriesTabProps) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    height,\n    listOfDatasources,\n    activeDatasources,\n  } = props;\n\n  const styles = useStyles2(getStyles, height);\n\n  // on mount, set filter to either active datasource or all datasources\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourcesOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : activeDatasources;\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { value: datasourceFilterApis, loading: loadingDs } = useAsync(async () => {\n    const datasourcesToGet = listOfDatasources.map((ds) => ds.uid);\n    const dsGetProm = datasourcesToGet.map(async (dsf) => {\n      try {\n        // this get works off datasource names\n        return getDataSourceSrv().get(dsf);\n      } catch (e) {\n        return Promise.resolve();\n      }\n    });\n\n    if (dsGetProm !== undefined) {\n      const enhancedDatasourceData = (await Promise.all(dsGetProm)).filter((dsi): dsi is DataSourceApi => !!dsi);\n      return enhancedDatasourceData;\n    } else {\n      return [];\n    }\n  }, [richHistorySearchFilters?.datasourceFilters]);\n\n  if (!richHistorySearchFilters) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-queries-tab.loading\">Loading...</Trans>\n      </span>\n    );\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n  const timeFilter = [\n    richHistorySearchFilters.from || 0,\n    richHistorySearchFilters.to || richHistorySettings.retentionPeriod,\n  ];\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>\n            <Trans i18nKey=\"explore.rich-history-queries-tab.filter-history\">Filter history</Trans>\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent} data-testid=\"query-history-queries-tab\">\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourcesOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder={t(\n                'explore.rich-history-queries-tab.filter-placeholder',\n                'Filter queries for data sources(s)'\n              )}\n              aria-label={t('explore.rich-history-queries-tab.filter-aria-label', 'Filter queries for data sources(s)')}\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder={t('explore.rich-history-queries-tab.search-placeholder', 'Search queries')}\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div\n            aria-label={t('explore.rich-history-queries-tab.sort-aria-label', 'Sort queries')}\n            className={styles.sort}\n          >\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder={t('explore.rich-history-queries-tab.sort-placeholder', 'Sort queries by')}\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {(loading || loadingDs) && (\n          <span>\n            <Trans i18nKey=\"explore.rich-history-queries-tab.loading-results\">Loading results...</Trans>\n          </span>\n        )}\n\n        {!(loading || loadingDs) &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? (\n                      <Trans\n                        i18nKey=\"explore.rich-history-queries-tab.displaying-partial-queries\"\n                        defaults=\"Displaying {{ count }} queries\"\n                        values={{ count: mappedQueriesToHeadings[heading].length }}\n                      />\n                    ) : (\n                      <Trans\n                        i18nKey=\"explore.rich-history-queries-tab.displaying-queries\"\n                        defaults=\"{{ count }} queries\"\n                        values={{ count: mappedQueriesToHeadings[heading].length }}\n                      />\n                    )}\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q) => {\n                  return <RichHistoryCard datasourceInstances={datasourceFilterApis} queryHistoryItem={q} key={q.id} />;\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            <Trans\n              i18nKey=\"explore.rich-history-queries-tab.showing-queries\"\n              defaults=\"Showing {{ shown }} of {{ total }} <0>Load more</0>\"\n              values={{ shown: queries.length, total: totalQueries }}\n              components={[\n                <Button onClick={loadMoreRichHistory} key=\"loadMoreButton\">\n                  Load more\n                </Button>,\n              ]}\n            />\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled\n            ? t(\n                'explore.rich-history-queries-tab.history-local',\n                'The history is local to your browser and is not shared with others.'\n              )\n            : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\nimport { useStyles2, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { Trans, t } from 'app/core/internationalization';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourcesOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleActiveDatasourcesOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing(3)};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    bottomMargin: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nconst retentionPeriodOptions = [\n  { value: 2, label: t('explore.rich-history-settings-tab.retention-period.2-days', '2 days') },\n  { value: 5, label: t('explore.rich-history-settings-tab.retention-period.5-days', '5 days') },\n  { value: 7, label: t('explore.rich-history-settings-tab.retention-period.1-week', '1 week') },\n  { value: 14, label: t('explore.rich-history-settings-tab.retention-period.2-weeks', '2 weeks') },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourcesOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleActiveDatasourcesOnly,\n    deleteRichHistory,\n  } = props;\n  const styles = useStyles2(getStyles);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    getAppEvents().publish(\n      new ShowConfirmModalEvent({\n        title: t('explore.rich-history-settings-tab.delete-title', 'Delete'),\n        text: t(\n          'explore.rich-history-settings-tab.delete-confirm-text',\n          'Are you sure you want to permanently delete your query history?'\n        ),\n        yesText: t('explore.rich-history-settings-tab.delete-confirm', 'Delete'),\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(\n            notifyApp(\n              createSuccessNotification(\n                t('explore.rich-history-settings-tab.query-history-deleted', 'Query history deleted')\n              )\n            )\n          );\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label={t('explore.rich-history-settings-tab.history-time-span', 'History time span')}\n          description={t(\n            'explore.rich-history-settings-tab.history-time-span-description',\n            'Select the period of time for which Grafana will save your query history. Up to {{MAX_HISTORY_ITEMS}} entries will be stored.',\n            { MAX_HISTORY_ITEMS }\n          )}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title={t('explore.rich-history-settings-tab.history-time-span', 'History time span')}>\n          {t(\n            'explore.rich-history-settings-tab.alert-info',\n            \"Grafana will keep entries up to {{optionLabel}}.Starred entries won't be deleted.\",\n            {\n              optionLabel: selectedOption?.label,\n            }\n          )}\n        </Alert>\n      )}\n      <InlineField\n        label={t(\n          'explore.rich-history-settings-tab.change-default-tab',\n          'Change the default active tab from “Query history” to “Starred”'\n        )}\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label={t(\n            'explore.rich-history-settings-tab.only-show-active-datasource',\n            'Only show queries for data source currently active in Explore'\n          )}\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourcesOnly}\n            onChange={toggleActiveDatasourcesOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div className={styles.bold}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-query-history\">Clear query history</Trans>\n          </div>\n          <div className={styles.bottomMargin}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-history-info\">\n              Delete all of your query history, permanently.\n            </Trans>\n          </div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            <Trans i18nKey=\"explore.rich-history-settings-tab.clear-query-history-button\">Clear query history</Trans>\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useEffect } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataSourceApi, GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config, getDataSourceSrv } from '@grafana/runtime';\nimport { useStyles2, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { useSelector } from 'app/types';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { selectExploreDSMaps } from '../state/selectors';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryStarredTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n  };\n};\n\nexport function RichHistoryStarredTab(props: RichHistoryStarredTabProps) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n  } = props;\n\n  const styles = useStyles2(getStyles);\n  const exploreActiveDS = useSelector(selectExploreDSMaps);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourcesOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : exploreActiveDS.dsToExplore\n            .map((eDs) => listOfDatasources.find((ds) => ds.uid === eDs.datasource?.uid)?.name)\n            .filter((name): name is string => !!name);\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { value: datasourceFilterApis, loading: loadingDs } = useAsync(async () => {\n    const datasourcesToGet =\n      richHistorySearchFilters?.datasourceFilters && richHistorySearchFilters?.datasourceFilters.length > 0\n        ? richHistorySearchFilters?.datasourceFilters\n        : listOfDatasources.map((ds) => ds.uid);\n    const dsGetProm = await datasourcesToGet.map(async (dsf) => {\n      try {\n        // this get works off datasource names\n        return getDataSourceSrv().get(dsf);\n      } catch (e) {\n        return Promise.resolve();\n      }\n    });\n\n    if (dsGetProm !== undefined) {\n      const enhancedDatasourceData = (await Promise.all(dsGetProm)).filter((dsi): dsi is DataSourceApi => !!dsi);\n      //setDatasourceFilterApiList(enhancedDatasourceData)\n      return enhancedDatasourceData;\n    } else {\n      return [];\n    }\n  }, [richHistorySearchFilters?.datasourceFilters]);\n\n  if (!richHistorySearchFilters) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-starred-tab.loading\">Loading...</Trans>;\n      </span>\n    );\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourcesOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder={t(\n                'explore.rich-history-starred-tab.filter-queries-placeholder',\n                'Filter queries for data sources(s)'\n              )}\n              aria-label={t(\n                'explore.rich-history-starred-tab.filter-queries-aria-label',\n                'Filter queries for data sources(s)'\n              )}\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder={t('explore.rich-history-starred-tab.search-queries-placeholder', 'Search queries')}\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div\n            aria-label={t('explore.rich-history-starred-tab.sort-queries-aria-label', 'Sort queries')}\n            className={styles.sort}\n          >\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder={t('explore.rich-history-starred-tab.sort-queries-placeholder', 'Sort queries by')}\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && loadingDs && (\n          <span>\n            <Trans i18nKey=\"explore.rich-history-starred-tab.loading-results\">Loading results...</Trans>\n          </span>\n        )}\n        {!(loading && loadingDs) &&\n          queries.map((q) => {\n            return <RichHistoryCard queryHistoryItem={q} key={q.id} datasourceInstances={datasourceFilterApis} />;\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            <Trans\n              i18nKey=\"explore.rich-history-starred-tab.showing-queries\"\n              defaults=\"Showing {{ shown }} of {{ total }} <0>Load more</0>\"\n              values={{ shown: queries.length, total: totalQueries }}\n              components={[\n                <Button onClick={loadMoreRichHistory} key=\"loadMoreButton\">\n                  Load more\n                </Button>,\n              ]}\n            />\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled\n            ? t(\n                'explore.rich-history-starred-tab.local-history-message',\n                'The history is local to your browser and is not shared with others.'\n              )\n            : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport { useState, useEffect } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport {\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n  createDatasourcesList,\n} from 'app/core/utils/richHistory';\nimport { useSelector } from 'app/types';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { Tabs, useQueriesDrawerContext } from '../QueriesDrawer/QueriesDrawerContext';\nimport { i18n } from '../QueriesDrawer/utils';\nimport { QueryLibrary } from '../QueryLibrary/QueryLibrary';\nimport { selectExploreDSMaps } from '../state/selectors';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: t('explore.rich-history.newest-first', 'Newest first'), value: SortOrder.Descending },\n    { label: t('explore.rich-history.oldest-first', 'Oldest first'), value: SortOrder.Ascending },\n    { label: t('explore.rich-history.datasource-a-z', 'Data source A-Z'), value: SortOrder.DatasourceAZ },\n    { label: t('explore.rich-history.datasource-z-a', 'Data source Z-A'), value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (filters: RichHistorySearchFilters) => void;\n  loadRichHistory: () => void;\n  loadMoreRichHistory: () => void;\n  clearRichHistoryResults: () => void;\n  deleteRichHistory: () => void;\n  firstTab: Tabs;\n  height: number;\n  onClose: () => void;\n}\n\nexport function RichHistory(props: RichHistoryProps) {\n  const { richHistory, richHistoryTotal, height, deleteRichHistory, onClose, firstTab } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  const { queryLibraryAvailable } = useQueriesDrawerContext();\n\n  const updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    props.updateHistorySettings({ ...props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  const updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    props.updateHistorySearchFilters(filters);\n    loadRichHistory();\n  };\n\n  const loadRichHistory = debounce(() => {\n    props.loadRichHistory();\n    setLoading(true);\n  }, 300);\n\n  const onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  const toggleStarredTabAsFirstTab = () =>\n    updateSettings({ starredTabAsFirstTab: !props.richHistorySettings.starredTabAsFirstTab });\n\n  const toggleActiveDatasourcesOnly = () =>\n    updateSettings({ activeDatasourcesOnly: !props.richHistorySettings.activeDatasourcesOnly });\n\n  useEffect(() => {\n    setLoading(false);\n  }, [richHistory]);\n\n  const exploreActiveDS = useSelector(selectExploreDSMaps);\n  const listOfDatasources = createDatasourcesList();\n  const activeDatasources = exploreActiveDS.dsToExplore\n    .map((eDs) => listOfDatasources.find((ds) => ds.uid === eDs.datasource?.uid)?.name)\n    .filter((name): name is string => !!name);\n\n  const QueryLibraryTab: TabConfig = {\n    label: i18n.queryLibrary,\n    value: Tabs.QueryLibrary,\n    content: <QueryLibrary activeDatasources={activeDatasources} />,\n    icon: 'book',\n  };\n\n  const QueriesTab: TabConfig = {\n    label: i18n.queryHistory,\n    value: Tabs.RichHistory,\n    content: (\n      <RichHistoryQueriesTab\n        queries={richHistory}\n        totalQueries={richHistoryTotal || 0}\n        loading={loading}\n        updateFilters={updateFilters}\n        clearRichHistoryResults={() => props.clearRichHistoryResults()}\n        loadMoreRichHistory={() => props.loadMoreRichHistory()}\n        richHistorySettings={props.richHistorySettings}\n        richHistorySearchFilters={props.richHistorySearchFilters}\n        height={height}\n        activeDatasources={activeDatasources}\n        listOfDatasources={listOfDatasources}\n      />\n    ),\n    icon: 'history',\n  };\n\n  const StarredTab: TabConfig = {\n    label: t('explore.rich-history.starred', 'Starred'),\n    value: Tabs.Starred,\n    content: (\n      <RichHistoryStarredTab\n        queries={richHistory}\n        totalQueries={richHistoryTotal || 0}\n        loading={loading}\n        updateFilters={updateFilters}\n        clearRichHistoryResults={() => props.clearRichHistoryResults()}\n        loadMoreRichHistory={() => props.loadMoreRichHistory()}\n        richHistorySettings={props.richHistorySettings}\n        richHistorySearchFilters={props.richHistorySearchFilters}\n      />\n    ),\n    icon: 'star',\n  };\n\n  const SettingsTab: TabConfig = {\n    label: t('explore.rich-history.settings', 'Settings'),\n    value: Tabs.Settings,\n    content: (\n      <RichHistorySettingsTab\n        retentionPeriod={props.richHistorySettings.retentionPeriod}\n        starredTabAsFirstTab={props.richHistorySettings.starredTabAsFirstTab}\n        activeDatasourcesOnly={props.richHistorySettings.activeDatasourcesOnly}\n        onChangeRetentionPeriod={onChangeRetentionPeriod}\n        toggleStarredTabAsFirstTab={toggleStarredTabAsFirstTab}\n        toggleActiveDatasourcesOnly={toggleActiveDatasourcesOnly}\n        deleteRichHistory={deleteRichHistory}\n      />\n    ),\n    icon: 'sliders-v-alt',\n  };\n\n  let tabs = (queryLibraryAvailable ? [QueryLibraryTab] : []).concat([QueriesTab, StarredTab, SettingsTab]);\n  return (\n    <TabbedContainer\n      tabs={tabs}\n      onClose={onClose}\n      defaultTab={firstTab}\n      closeIconTooltip={t('explore.rich-history.close-tooltip', 'Close query history')}\n      testId={selectors.pages.Explore.QueryHistory.container}\n    />\n  );\n}\n","// Libraries\nimport { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n// Types\nimport { StoreState } from 'app/types';\n\n// Components, enums\nimport { useQueriesDrawerContext } from '../QueriesDrawer/QueriesDrawerContext';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState) {\n  const explore = state.explore;\n  const richHistorySearchFilters = explore.richHistorySearchFilters;\n  const { richHistorySettings, richHistory, richHistoryTotal } = explore;\n\n  return {\n    richHistory,\n    richHistoryTotal,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n  }, [initRichHistory]);\n\n  const { selectedTab } = useQueriesDrawerContext();\n  const [tracked, setTracked] = useState(false);\n\n  useEffect(() => {\n    if (!tracked) {\n      setTracked(true);\n      reportInteraction('grafana_explore_query_history_opened', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n        selectedTab,\n      });\n    }\n  }, [tracked, selectedTab]);\n\n  if (!richHistorySettings || !selectedTab) {\n    return (\n      <span>\n        <Trans i18nKey=\"explore.rich-history-container.loading\">Loading...</Trans>\n      </span>\n    );\n  }\n\n  return (\n    <RichHistory\n      richHistory={richHistory}\n      richHistoryTotal={richHistoryTotal}\n      firstTab={selectedTab}\n      onClose={onClose}\n      height={theme.components.horizontalDrawer.defaultHeight}\n      deleteRichHistory={deleteRichHistory}\n      richHistorySettings={richHistorySettings}\n      richHistorySearchFilters={richHistorySearchFilters}\n      updateHistorySettings={updateHistorySettings}\n      updateHistorySearchFilters={updateHistorySearchFilters}\n      loadRichHistory={loadRichHistory}\n      loadMoreRichHistory={loadMoreRichHistory}\n      clearRichHistoryResults={clearRichHistoryResults}\n    />\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { useEffect } from 'react';\n\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Branding } from 'app/core/components/Branding/Branding';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { ExploreQueryParams } from 'app/types';\n\nimport { isFulfilled, hasKey } from './utils';\n\nexport function useExplorePageTitle(params: ExploreQueryParams) {\n  const navModel = useNavModel('explore');\n  const { chrome } = useGrafana();\n\n  useEffect(() => {\n    if (!params.panes || typeof params.panes !== 'string') {\n      return;\n    }\n\n    let panesObject: unknown;\n    try {\n      panesObject = JSON.parse(params.panes);\n    } catch {\n      return;\n    }\n\n    if (typeof panesObject !== 'object' || panesObject === null) {\n      return;\n    }\n\n    Promise.allSettled(\n      Object.values(panesObject).map((pane) => {\n        if (\n          !pane ||\n          typeof pane !== 'object' ||\n          !hasKey('datasource', pane) ||\n          !pane.datasource ||\n          typeof pane.datasource !== 'string'\n        ) {\n          return Promise.reject();\n        }\n\n        return getDataSourceSrv().get(pane.datasource);\n      })\n    )\n      .then((results) => results.filter(isFulfilled).map((result) => result.value))\n      .then((datasources) => {\n        if (datasources.length === 0) {\n          global.document.title = `${navModel.main.text} - ${Branding.AppTitle}`;\n          chrome.update({\n            pageNav: undefined,\n          });\n          return;\n        }\n\n        const namesString = datasources.map((ds) => ds.name).join(' | ');\n        chrome.update({\n          pageNav: {\n            text: namesString,\n          },\n        });\n        global.document.title = `${navModel.main.text} - ${namesString} - ${Branding.AppTitle}`;\n      });\n  }, [params.panes, navModel.main.text, chrome]);\n}\n","import { useEffect } from 'react';\nimport { Unsubscribable } from 'rxjs';\n\nimport { getAppEvents } from '@grafana/runtime';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useDispatch } from 'app/types';\nimport { AbsoluteTimeEvent, CopyTimeEvent, PasteTimeEvent, ShiftTimeEvent, ZoomOutEvent } from 'app/types/events';\n\nimport {\n  copyTimeRangeToClipboard,\n  makeAbsoluteTime,\n  pasteTimeRangeFromClipboard,\n  shiftTime,\n  zoomOut,\n} from '../state/time';\n\nexport function useKeyboardShortcuts() {\n  const { keybindings } = useGrafana();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    keybindings.setupTimeRangeBindings(false);\n\n    const tearDown: Unsubscribable[] = [];\n\n    tearDown.push(\n      getAppEvents().subscribe(AbsoluteTimeEvent, () => {\n        dispatch(makeAbsoluteTime());\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ShiftTimeEvent, (event) => {\n        dispatch(shiftTime(event.payload.direction));\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ZoomOutEvent, (event) => {\n        dispatch(zoomOut(event.payload.scale));\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(CopyTimeEvent, () => {\n        dispatch(copyTimeRangeToClipboard());\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(PasteTimeEvent, () => {\n        dispatch(pasteTimeRangeFromClipboard());\n      })\n    );\n\n    return () => {\n      tearDown.forEach((u) => u.unsubscribe());\n    };\n  }, [dispatch, keybindings]);\n}\n","import { inRange } from 'lodash';\nimport { useState } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { splitSizeUpdateAction } from '../state/main';\nimport { isSplit, selectPanesEntries } from '../state/selectors';\n\nexport const useSplitSizeUpdater = (minWidth: number) => {\n  const dispatch = useDispatch();\n  const { width: windowWidth } = useWindowSize();\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const [rightPaneWidthRatio, setRightPaneWidthRatio] = useState(0.5);\n\n  const exploreState = useSelector((state) => state.explore);\n\n  const updateSplitSize = (size: number) => {\n    const evenSplitWidth = windowWidth / 2;\n    const areBothSimilar = inRange(size, evenSplitWidth - 100, evenSplitWidth + 100);\n    if (areBothSimilar) {\n      dispatch(splitSizeUpdateAction({ largerExploreId: undefined }));\n    } else {\n      dispatch(\n        splitSizeUpdateAction({\n          largerExploreId: size > evenSplitWidth ? panes[1][0] : panes[0][0],\n        })\n      );\n    }\n\n    setRightPaneWidthRatio(size / windowWidth);\n  };\n\n  let widthCalc = 0;\n  if (hasSplit) {\n    if (!exploreState.evenSplitPanes && exploreState.maxedExploreId) {\n      widthCalc = exploreState.maxedExploreId === panes[1][0] ? windowWidth - minWidth : minWidth;\n    } else if (exploreState.evenSplitPanes) {\n      widthCalc = Math.floor(windowWidth / 2);\n    } else if (rightPaneWidthRatio !== undefined) {\n      widthCalc = windowWidth * rightPaneWidthRatio;\n    }\n  }\n\n  return { updateSplitSize, widthCalc };\n};\n","import { useEffect } from 'react';\n\nimport { useGrafana } from 'app/core/context/GrafanaContext';\n\n/**\n * timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n * using those value regardless of what is passed to the init method.\n * The updated value is then used by Explore to get the range for each pane.\n * This means that if `from` and `to` parameters are present in the URL,\n * it would be impossible to change the time range in Explore.\n * We are only doing this on mount for 2 reasons:\n * 1: Doing it on update means we'll enter a render loop.\n * 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n *    each pane state in order to not trigger un URL update from timeSrv.\n */\nexport function useTimeSrvFix() {\n  const { location } = useGrafana();\n\n  useEffect(() => {\n    const searchParams = location.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      location.partial({ from: undefined, to: undefined }, true);\n    }\n  }, [location]);\n}\n","import { css, cx } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { CoreApp, GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema/dist/esm/index';\nimport { ErrorBoundaryAlert, Modal, useStyles2, useTheme2 } from '@grafana/ui';\nimport { QueryOperationAction } from 'app/core/components/QueryOperationRow/QueryOperationAction';\nimport { SplitPaneWrapper } from 'app/core/components/SplitPaneWrapper/SplitPaneWrapper';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { Trans, t } from 'app/core/internationalization';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useSelector } from 'app/types';\nimport { ExploreQueryParams } from 'app/types/explore';\n\nimport { RowActionComponents } from '../query/components/QueryActionComponent';\n\nimport { CorrelationEditorModeBar } from './CorrelationEditorModeBar';\nimport { ExploreActions } from './ExploreActions';\nimport { ExploreDrawer } from './ExploreDrawer';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { QueriesDrawerContextProvider, useQueriesDrawerContext } from './QueriesDrawer/QueriesDrawerContext';\nimport { queryLibraryTrackAddFromQueryRow } from './QueryLibrary/QueryLibraryAnalyticsEvents';\nimport { QueryTemplateForm } from './QueryLibrary/QueryTemplateForm';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { useExplorePageTitle } from './hooks/useExplorePageTitle';\nimport { useKeyboardShortcuts } from './hooks/useKeyboardShortcuts';\nimport { useSplitSizeUpdater } from './hooks/useSplitSizeUpdater';\nimport { useStateSync } from './hooks/useStateSync';\nimport { useTimeSrvFix } from './hooks/useTimeSrvFix';\nimport { isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\n\nconst MIN_PANE_WIDTH = 200;\nconst QUERY_LIBRARY_ACTION_KEY = 'queryLibraryAction';\n\nexport default function ExplorePage(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  return (\n    <QueriesDrawerContextProvider>\n      <ExplorePageContent {...props} />\n    </QueriesDrawerContextProvider>\n  );\n}\n\nfunction ExplorePageContent(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  useTimeSrvFix();\n  useStateSync(props.queryParams);\n  // We want  to set the title according to the URL and not to the state because the URL itself may lag\n  // (due to how useStateSync above works) by a few milliseconds.\n  // When a URL is pushed to the history, the browser also saves the title of the page and\n  // if we were to update the URL on state change, the title would not match the URL.\n  // Ultimately the URL is the single source of truth from which state is derived, the page title is not different\n  useExplorePageTitle(props.queryParams);\n  const { chrome } = useGrafana();\n  const navModel = useNavModel('explore');\n  const { updateSplitSize, widthCalc } = useSplitSizeUpdater(MIN_PANE_WIDTH);\n\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const { drawerOpened, setDrawerOpened, queryLibraryAvailable } = useQueriesDrawerContext();\n  const showCorrelationEditorBar = config.featureToggles.correlations && (correlationDetails?.editorMode || false);\n  const [queryToAdd, setQueryToAdd] = useState<DataQuery | undefined>();\n\n  useEffect(() => {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    chrome.update({\n      sectionNav: navModel,\n    });\n  }, [chrome, navModel]);\n\n  useEffect(() => {\n    const hasQueryLibrary = config.featureToggles.queryLibrary || false;\n    if (hasQueryLibrary) {\n      RowActionComponents.addKeyedExtraRenderAction(QUERY_LIBRARY_ACTION_KEY, {\n        scope: CoreApp.Explore,\n        queryActionComponent: (props) => (\n          <QueryOperationAction\n            key={props.key}\n            title={t('query-operation.header.save-to-query-library', 'Save to query library')}\n            icon=\"save\"\n            onClick={() => {\n              setQueryToAdd(props.query);\n            }}\n          />\n        ),\n      });\n    }\n  }, []);\n\n  useKeyboardShortcuts();\n\n  return (\n    <div\n      className={cx(styles.pageScrollbarWrapper, {\n        [styles.correlationsEditorIndicator]: showCorrelationEditorBar,\n      })}\n    >\n      <h1 className=\"sr-only\">\n        <Trans i18nKey=\"nav.explore.title\" />\n      </h1>\n      <ExploreActions />\n      {showCorrelationEditorBar && <CorrelationEditorModeBar panes={panes} />}\n      <SplitPaneWrapper\n        splitOrientation=\"vertical\"\n        paneSize={widthCalc}\n        minSize={MIN_PANE_WIDTH}\n        maxSize={MIN_PANE_WIDTH * -1}\n        primary=\"second\"\n        splitVisible={hasSplit}\n        parentStyle={showCorrelationEditorBar ? { height: `calc(100% - ${theme.spacing(6)}` } : {}} // button = 4, padding = 1 x 2\n        paneStyle={{ overflow: 'auto', display: 'flex', flexDirection: 'column' }}\n        onDragFinished={(size) => size && updateSplitSize(size)}\n      >\n        {panes.map(([exploreId]) => {\n          return (\n            <ErrorBoundaryAlert key={exploreId} style=\"page\">\n              <ExplorePaneContainer exploreId={exploreId} />\n            </ErrorBoundaryAlert>\n          );\n        })}\n      </SplitPaneWrapper>\n      {drawerOpened && (\n        <ExploreDrawer initialHeight={queryLibraryAvailable ? '75vh' : undefined}>\n          <RichHistoryContainer\n            onClose={() => {\n              setDrawerOpened(false);\n            }}\n          />\n        </ExploreDrawer>\n      )}\n      <Modal\n        title={t('explore.query-template-modal.add-title', 'Add query to Query Library')}\n        isOpen={queryToAdd !== undefined}\n        onDismiss={() => setQueryToAdd(undefined)}\n      >\n        <QueryTemplateForm\n          onCancel={() => {\n            setQueryToAdd(undefined);\n          }}\n          onSave={(isSuccess) => {\n            if (isSuccess) {\n              setQueryToAdd(undefined);\n              queryLibraryTrackAddFromQueryRow(queryToAdd?.datasource?.type || '');\n            }\n          }}\n          queryToAdd={queryToAdd!}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    pageScrollbarWrapper: css({\n      width: '100%',\n      flexGrow: 1,\n      minHeight: 0,\n      height: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n    }),\n    correlationsEditorIndicator: css({\n      borderLeft: `4px solid ${theme.colors.primary.main}`,\n      borderRight: `4px solid ${theme.colors.primary.main}`,\n      borderBottom: `4px solid ${theme.colors.primary.main}`,\n      overflow: 'scroll',\n    }),\n  };\n};\n","import { omitBy, isNil, isNumber, defaultTo, groupBy } from 'lodash';\n\nimport {\n  PanelModel,\n  FieldMatcherID,\n  ConfigOverrideRule,\n  ThresholdsMode,\n  ThresholdsConfig,\n  FieldConfig,\n  DataFrame,\n  FieldType,\n} from '@grafana/data';\nimport { ReduceTransformerOptions } from '@grafana/data/src/transformations/transformers/reduce';\n\nimport { Options } from './panelcfg.gen';\n\n/**\n * At 7.0, the `table` panel was swapped from an angular implementation to a react one.\n * The models do not match, so this process will delegate to the old implementation when\n * a saved table configuration exists.\n */\nexport const tableMigrationHandler = (panel: PanelModel<Options>): Partial<Options> => {\n  // Table was saved as an angular table, lets just swap to the 'table-old' panel\n  if (!panel.pluginVersion && 'columns' in panel) {\n    console.log('Was angular table', panel);\n  }\n\n  // Nothing changed\n  return panel.options;\n};\n\nconst transformsMap = {\n  timeseries_to_rows: 'seriesToRows',\n  timeseries_to_columns: 'seriesToColumns',\n  timeseries_aggregations: 'reduce',\n  table: 'merge',\n};\n\nconst columnsMap = {\n  avg: 'mean',\n  min: 'min',\n  max: 'max',\n  total: 'sum',\n  current: 'lastNotNull',\n  count: 'count',\n};\n\nconst colorModeMap = {\n  cell: 'color-background',\n  row: 'color-background',\n  value: 'color-text',\n};\n\ntype Transformations = keyof typeof transformsMap;\n\ntype Transformation = {\n  id: string;\n  options: ReduceTransformerOptions;\n};\n\ntype Columns = keyof typeof columnsMap;\n\ntype Column = {\n  value: Columns;\n  text: string;\n};\n\ntype ColorModes = keyof typeof colorModeMap;\n\nconst generateThresholds = (thresholds: string[], colors: string[]) => {\n  return [-Infinity, ...thresholds].map((threshold, idx) => ({\n    color: colors[idx],\n    value: isNumber(threshold) ? threshold : parseInt(threshold, 10),\n  }));\n};\n\nconst migrateTransformations = (\n  panel: PanelModel<Partial<Options>>,\n  oldOpts: { columns: any; transform: Transformations }\n) => {\n  const transformations: Transformation[] = panel.transformations ?? [];\n  if (Object.keys(transformsMap).includes(oldOpts.transform)) {\n    const opts: ReduceTransformerOptions = {\n      reducers: [],\n    };\n    if (oldOpts.transform === 'timeseries_aggregations') {\n      opts.includeTimeField = false;\n      opts.reducers = oldOpts.columns.map((column: Column) => columnsMap[column.value]);\n    }\n    transformations.push({\n      id: transformsMap[oldOpts.transform],\n      options: opts,\n    });\n  }\n  return transformations;\n};\n\ntype Style = {\n  unit: string;\n  type: string;\n  alias: string;\n  decimals: number;\n  colors: string[];\n  colorMode: ColorModes;\n  pattern: string;\n  thresholds: string[];\n  align?: string;\n  dateFormat: string;\n  link: boolean;\n  linkTargetBlank?: boolean;\n  linkTooltip?: string;\n  linkUrl?: string;\n};\n\nconst migrateTableStyleToOverride = (style: Style) => {\n  const fieldMatcherId = /^\\/.*\\/$/.test(style.pattern) ? FieldMatcherID.byRegexp : FieldMatcherID.byName;\n  const override: ConfigOverrideRule = {\n    matcher: {\n      id: fieldMatcherId,\n      options: style.pattern,\n    },\n    properties: [],\n  };\n\n  if (style.alias) {\n    override.properties.push({\n      id: 'displayName',\n      value: style.alias,\n    });\n  }\n\n  if (style.unit) {\n    override.properties.push({\n      id: 'unit',\n      value: style.unit,\n    });\n  }\n\n  if (style.decimals) {\n    override.properties.push({\n      id: 'decimals',\n      value: style.decimals,\n    });\n  }\n\n  if (style.type === 'date') {\n    override.properties.push({\n      id: 'unit',\n      value: `time: ${style.dateFormat}`,\n    });\n  }\n\n  if (style.type === 'hidden') {\n    override.properties.push({\n      id: 'custom.hidden',\n      value: true,\n    });\n  }\n\n  if (style.link) {\n    override.properties.push({\n      id: 'links',\n      value: [\n        {\n          title: defaultTo(style.linkTooltip, ''),\n          url: defaultTo(style.linkUrl, ''),\n          targetBlank: defaultTo(style.linkTargetBlank, false),\n        },\n      ],\n    });\n  }\n\n  if (style.colorMode) {\n    override.properties.push({\n      id: 'custom.cellOptions',\n      value: {\n        type: colorModeMap[style.colorMode],\n      },\n    });\n  }\n\n  if (style.align) {\n    override.properties.push({\n      id: 'custom.align',\n      value: style.align === 'auto' ? null : style.align,\n    });\n  }\n\n  if (style.thresholds?.length) {\n    override.properties.push({\n      id: 'thresholds',\n      value: {\n        mode: ThresholdsMode.Absolute,\n        steps: generateThresholds(style.thresholds, style.colors),\n      },\n    });\n  }\n\n  return override;\n};\n\nconst migrateDefaults = (prevDefaults: Style) => {\n  let defaults: FieldConfig = {\n    custom: {},\n  };\n  if (prevDefaults) {\n    defaults = omitBy(\n      {\n        unit: prevDefaults.unit,\n        decimals: prevDefaults.decimals,\n        displayName: prevDefaults.alias,\n        custom: {\n          align: prevDefaults.align === 'auto' ? null : prevDefaults.align,\n        },\n      },\n      isNil\n    );\n\n    if (prevDefaults.thresholds.length) {\n      const thresholds: ThresholdsConfig = {\n        mode: ThresholdsMode.Absolute,\n        steps: generateThresholds(prevDefaults.thresholds, prevDefaults.colors),\n      };\n      defaults.thresholds = thresholds;\n    }\n\n    if (prevDefaults.colorMode) {\n      defaults.custom.cellOptions = {\n        type: colorModeMap[prevDefaults.colorMode],\n      };\n    }\n  }\n  return defaults;\n};\n\n/**\n * This is called when the panel changes from another panel\n */\nexport const tablePanelChangedHandler = (\n  panel: PanelModel<Partial<Options>>,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular table panel\n  if (prevPluginId === 'table-old' && prevOptions.angular) {\n    const oldOpts = prevOptions.angular;\n    const transformations = migrateTransformations(panel, oldOpts);\n    const prevDefaults = oldOpts.styles.find((style: any) => style.pattern === '/.*/');\n    const defaults = migrateDefaults(prevDefaults);\n    const overrides = oldOpts.styles.filter((style: any) => style.pattern !== '/.*/').map(migrateTableStyleToOverride);\n\n    panel.transformations = transformations;\n    panel.fieldConfig = {\n      defaults,\n      overrides,\n    };\n  }\n\n  return {};\n};\n\nconst getMainFrames = (frames: DataFrame[] | null) => {\n  return frames?.filter((df) => df.meta?.custom?.parentRowIndex === undefined) || [frames?.[0]];\n};\n\n/**\n * In 9.3 meta.custom.parentRowIndex was introduced to support sub-tables.\n * In 10.2 meta.custom.parentRowIndex was deprecated in favor of FieldType.nestedFrames, which supports multiple nested frames.\n * Migrate DataFrame[] from using meta.custom.parentRowIndex to using FieldType.nestedFrames\n */\nexport const migrateFromParentRowIndexToNestedFrames = (frames: DataFrame[] | null) => {\n  const migratedFrames: DataFrame[] = [];\n  const mainFrames = getMainFrames(frames).filter(\n    (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n  );\n\n  mainFrames?.forEach((frame) => {\n    const subFrames = frames?.filter((df) => frame.refId === df.refId && df.meta?.custom?.parentRowIndex !== undefined);\n    const subFramesGrouped = groupBy(subFrames, (frame: DataFrame) => frame.meta?.custom?.parentRowIndex);\n    const subFramesByIndex = Object.keys(subFramesGrouped).map((key) => subFramesGrouped[key]);\n    const migratedFrame = { ...frame };\n\n    if (subFrames && subFrames.length > 0) {\n      migratedFrame.fields.push({\n        name: 'nested',\n        type: FieldType.nestedFrames,\n        config: {},\n        values: subFramesByIndex,\n      });\n    }\n    migratedFrames.push(migratedFrame);\n  });\n\n  return migratedFrames;\n};\n\nexport const hasDeprecatedParentRowIndex = (frames: DataFrame[] | null) => {\n  return frames?.some((df) => df.meta?.custom?.parentRowIndex !== undefined);\n};\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n"],"names":["assertIsQueryTypeError","errors","getSupportedTransTypeDetails","transType","getTransformOptions","transformationType","useBeforeUnload","enabled","message","handler","event","finalEnabled","CorrelationUnsavedChangesModal","onSave","onDiscard","onCancel","Modal","Button","CONSEQUENCES","showModalMessage","action","isActionLeft","dirtyCorrelation","dirtyQueryEditor","messageTemplate","actionStr","consequenceStr","CorrelationEditorModeBar","panes","dispatch","styles","getStyles","correlationDetails","isHelperShowing","saveMessage","setSaveMessage","correlationDirty","queryEditorDirty","modalMessage","exploreId","changeDatasourceUid","useUnmount","pane","resetEditor","closePane","changeDatasourcePostAction","datasourceUid","saveCorrelationPostAction","skipPostConfirmAction","location","Stack","Tooltip","Icon","theme","contrastColor","lighterBackgroundColor","colorManipulator","darkerBackgroundColor","disabledColor","ExploreActions","actions","setActions","query","splitted","canWriteCorrelations","keys","exploreSection","actionsArr","hasMixed","config","__extends","extendStatics","d","b","p","__","__assign","t","i","n","rowSizeBase","colSizeBase","edgeBase","Resizer","_super","_this","e","DEFAULT_SIZE","clamp","min","max","snap","size","gridGap","v","hasDirection","dir","target","isTouchEvent","isMouseEvent","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","index","gap","getStringSize","getPixelSize","parentSize","innerWidth","innerHeight","ratio","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","normalizeToPair","val","definedProps","baseClassName","Resizable","props","_a","_b","_c","_d","parent","element","base","width","height","orgWidth","orgHeight","orgPosition","getSize","key","value","percent","wrapChanged","wrap","computedStyle","newSize","kind","propsSize","boundsByDirection","direction","widthByDirection","heightByDirection","boundWidth","boundHeight","parent_1","clientX","clientY","scale","resizeRatioX","resizeRatioY","original","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","adjustedScale","parent_2","parentRect","targetRect","left","top_1","right","bottom","startResize","flexBasis","parent_3","state","boundaryMax","newGridWidth","newGridHeight","w","h","delta","vw","vh","newState","widthChanged","heightChanged","flexBaseChanged","changed","isResizing","directions","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","style","Wrapper","c","ExploreDrawer","children","onResize","initialHeight","dragStyles","drawerSlide","useScroll","ref","useRafState","setState","ContentOutlineContext","ContentOutlineContextProvider","refreshDependencies","outlineItems","setOutlineItems","parentlessItemsRef","register","outlineItem","id","prevItems","parentlessItems","item","sortElementsByDocumentPosition","siblingWithSameTitleFound","parentIndex","newItems","siblingWithSameTitle","child","childrenUpdated","sortItems","unregister","updateOutlineItems","updateItem","properties","unregisterAllChildren","parentIdGetter","childType","parentId","sortedItems","a","diff","skipSort","sortable","useContentOutlineContext","ContentOutlineItemButton","contentOutlineExpanded","title","icon","tooltip","tooltipPlacement","className","indentStyle","collapsible","collapsed","isActive","extraHighlight","sectionId","toggleCollapsed","color","onRemove","rest","buttonStyles","textRef","isOverflowing","setIsOverflowing","body","OutlineIcon","scrollableChildren","shouldBeActive","activeSectionId","activeSectionChildId","sectionsExpanded","isAnActiveParent","isAnActiveChild","isCollapsed","containsScrollableChildren","anyChildActive","isChildActive","CONTENT_OUTLINE_LOCAL_STORAGE_KEYS","ContentOutline","scroller","panelId","toggleContentOutlineExpanded","useToggle","store","scrollerRef","verticalScroll","setActiveSectionId","setActiveSectionChildId","outlineItemsShouldIndent","outlineItemsHaveDeleteButton","setSectionsExpanded","scrollIntoView","customOffsetTop","scrollValue","el","handleItemClicked","activeParent","toggle","toggleSection","itemId","activeItem","top","activeChild","offsetTop","childTop","isCollapsible","PanelContainer","CustomScrollbar","expanded","ContentOutlineItem","customTopOffset","level","mergeSingleChild","type","onClick","LabelWithTooltip","label","tooltipText","Label","CorrelationTransformationAddModal","fieldList","transformationToEdit","exampleValue","setExampleValue","transformationVars","setTransformationVars","formFieldsVis","setFormFieldsVis","isExpValid","setIsExpValid","validToSave","setValidToSave","getValues","control","watch","exampleVal","transformationTypeDetails","subscription","formValues","expression","isExpressionValid","transKeys","Field","onChange","field","Select","entry","Input","CorrelationHelper","correlations","panesVals","defaultLabel","loadingLabel","useAsync","setValue","isLabelDescOpen","setIsLabelDescOpen","isTransformOpen","setIsTransformOpen","showTransformationAddModal","setShowTransformationAddModal","transformations","setTransformations","transformationIdxToEdit","setTransformationIdxToEdit","dirty","description","transVarRecords","transformation","editTransformations","Alert","Collapse","mapValue","detailsString","Card","IconButton","DeleteButton","_","idx","CustomContainer","timeZone","pluginId","frames","timeRange","splitOpenFn","eventBus","plugin","panelContext","useExploreDataLinkPostProcessor","PanelContext","PanelChrome","PanelRenderer","TimeSyncButton","isSynced","syncTimesTooltip","ToolbarButton","ExploreTimeControls","range","onChangeTime","from","to","nextTimeRange","adjustedFrom","adjustedTo","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","TimePickerWithHistory","LiveTailButton","transitionRef","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","CSSTransition","QUERY_LIBRARY_EXPLORE_EVENT","queryLibraryTrackToggle","open","queryLibraryTrackAddFromQueryHistory","datasourceType","queryLibraryTrackAddFromQueryHistoryAddModalShown","queryLibraryTrackAddFromQueryRow","queryLibaryTrackDeleteQuery","queryLibraryTrackRunQuery","queryLibraryTrackAddOrEditDescription","queryLibraryTrackFilterDatasource","Tabs","QueriesDrawerContext","useQueriesDrawerContext","QueriesDrawerContextProvider","queryLibraryAvailable","selectedTab","setSelectedTab","drawerOpened","setDrawerOpened","settings","i18n","QueriesDrawerDropdown","variant","tab","menu","Menu","Dropdown","defaultMode","ShortLinkButtonMenu","isOpen","setIsOpen","lastSelected","setLastSelected","onCopyLink","shorten","absTime","url","menuOptions","MenuActions","groupOption","MenuGroup","option","ToolbarButtonRow","AddToDashboard","ToolbarExtensionPoint","selectedExtension","setSelectedExtension","context","useExtensionPointContext","links","usePluginLinks","selectExploreItem","noQueriesInPane","ToolbarExtensionPointMenu","ConfirmNavigationModal","isCorrelationsEditorMode","queries","queryResponse","isLeftPane","datasourceUids","uid","numUniqueIds","useLiveTailControls","RefreshPicker","clear","LiveTailControls","controls","ExploreToolbar","onContentOutlineToogle","isContentOutlineOpen","refreshInterval","datasourceInstance","loading","isLargerPane","showSmallTimePicker","showSmallDataSourcePicker","isSingleTopNav","shouldRotateSplitIcon","refreshPickerLabel","onChangeDatasource","dsSettings","onRunQuery","timezone","onOpenSplitView","onCloseSplitView","onClickResize","fiscalyearStartMonth","onChangeRefreshInterval","navBarActions","SetInterval","AppChromeUpdate","PageToolbar","DataSourcePicker","interaction","name","FlameGraphExploreContainer","view","align","sort","INTERVAL","ElapsedTime","resetKey","humanize","elapsed","setElapsed","useInterval","Time","tinycolor","LiveLogs","onPause","scrollTop","clientHeight","scrollHeight","rowsToRender","nextProps","onResume","onClear","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","row","LogMessageAnsi","LiveLogsWithTheme","InfiniteScroll","app","loadMoreLogs","rows","scrollElement","sortOrder","topScrollEnabled","upperOutOfRange","setUpperOutOfRange","lowerOutOfRange","setLowerOutOfRange","upperLoading","setUpperLoading","lowerLoading","setLowerLoading","rowsRef","lastScroll","handleScroll","scrollDirection","shouldLoadMore","scrollBottom","newRange","canScrollTop","getVisibleRange","canScrollBottom","hideTopMessage","hideBottomMessage","loadOlderLogs","LoadingIndicator","outOfRangeMessage","ScrollDirection","firstTimeStamp","lastTimeStamp","getPrevRange","visibleRange","currentRange","getNextRange","updateCurrentRange","SCROLLING_THRESHOLD","contentOutlineTrackPinAdded","contentOutlineTrackPinRemoved","contentOutlineTrackPinLimitReached","contentOutlineTrackPinClicked","contentOutlineTrackUnpinClicked","contentOutlineTrackLevelFilter","LogsFeedback","feedbackUrl","MetaInfoItem","MetaInfoText","metaItems","LogsTable","splitOpen","logsSortOrder","dataFrame","columnsWithMeta","logsFrame","tableFrame","setTableFrame","timeIndex","prepareTableFrame","frame","sortedFrame","frameWithOverrides","getInitialFieldWidth","isFieldFilterable","getLogsExtractFields","labelFilters","buildLabelFilters","transform","getLabelFiltersTransform","transformedDataFrame","lastValueFrom","transformDataFrame","onCellFilterAdded","filter","operator","onClickFilterLabel","onClickFilterOutLabel","Table","bodyName","timeName","isFieldLokiLabels","isFieldDataplaneLabels","labelFiltersInclude","DownloadFormat","LogsMetaRow","meta","dedupStrategy","dedupCount","displayedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logRows","downloadLogs","format","download","jsonLogs","blob","fileName","dataFrameMap","transforms","logsMetaItem","r","LogLabels","downloadMenu","renderMetaItem","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","formatTime","time","createPageContent","page","Spinner","topContent","bottomContent","LogsNavigation","absoluteRange","scrollToTopLogs","clearCache","addResultsToCache","setPages","expectedQueriesRef","expectedRangeRef","rangeSpanRef","onFirstPage","onLastPage","newPage","newPages","sortPages","changeTime","olderLogsButton","indexChange","newerLogsButton","onPageClick","pageNumber","onScrollToTopClick","navContainerHeight","LogsColumnSearch","LogsTableEmptyFields","LogsTableNavField","Checkbox","getLogsFieldsStyles","sortLabels","labels","la","lb","LogsTableActiveFields","reorderColumn","valueFilter","toggleColumn","labelKeys","labelName","onDragEnd","result","renderTitle","provided","snapshot","collator","LogsTableAvailableFields","LogsTableMultiSelect","uf","fuzzySearch","haystack","dispatcher","idxs","info","order","haystackOrder","matchesSet","mark","part","matched","infoIdx","debouncedFuzzySearch","LogsTableWrap","logsFrames","updatePanelState","panelState","propsColumns","setColumnsWithMeta","filteredColumnsWithMeta","setFilteredColumnsWithMeta","searchValue","setSearchValue","getLogsTableHeight","panelStateRefId","currentDataFrame","setCurrentDataFrame","f","getColumnsFromProps","fieldNames","previouslySelected","defaultColumns","newFrame","newFiltered","flag","numberOfLogLines","otherFields","labelCardinality","pendingLabelState","normalize","sidebarWidth","setSidebarWidth","tableWidth","columnFilterEvent","columnName","priorActiveCount","column","searchFilterEvent","searchResultCount","clearSelection","isDefaultField","sourceIndex","destinationIndex","source","updateExploreState","newColumnsArray","pa","pb","newColumns","newPanelState","length","active","pendingFilteredLabelState","data","matches","newColumnsWithMeta","numberOfResults","match","search","needle","onSearchInputChange","onFrameSelectorChange","getOnResize","newSidebarWidth","InlineField","total","SupplementaryResultError","SHORT_ERROR_MESSAGE_LIMIT","error","suggestedAction","onSuggestedAction","severity","showButton","LogsVolumePanel","onUpdateTimeRange","onHiddenSeriesChanged","allLogsVolumeMaximum","toggleLegendRef","spacing","logsVolumeData","logsVolumeInfo","extraInfo","extraInfoComponent","ExploreGraph","isTimeoutErrorResponse","response","LogsVolumePanelList","onLoadLogsVolume","onClose","logVolumes","allLogsVolumeMaximumValue","allLogsVolumeMaximumRange","annotations","maximumValue","sorted","grouped","mergedData","maximumRange","numberOfLogVolumes","containsZoomed","zoomRatio","logsLevelZoomRatio","timeoutError","selectedTimeRange","dataRange","DEDUP_OPTIONS","getDefaultVisualisationType","visualisationType","PINNED_LOGS_LIMIT","PINNED_LOGS_TITLE","PINNED_LOGS_MESSAGE","PINNED_LOGS_PANELID","UnthemedLogs","logsMeta","logsVolumeEnabled","loadLogsVolumeData","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","getRowContext","getLogRowContextUi","getRowContextQuery","showLabels","setShowLabels","showTime","setShowTime","wrapLogMessage","setWrapLogMessage","prettifyLogMessage","setPrettifyLogMessage","setDedupStrategy","hiddenLogLevels","setHiddenLogLevels","setLogsSortOrder","isFlipping","setIsFlipping","setDisplayedFields","setForceEscape","contextOpen","setContextOpen","contextRow","setContextRow","pinLineButtonTooltipTitle","setPinLineButtonTooltipTitle","setVisualisationType","setScrollIntoView","logsContainerRef","previousLoading","usePrevious","logsVolumeEventBus","flipOrderTimer","cancelFlippingTimer","topLogsRef","tableHeight","hasData","scanText","pinnedLogs","outlines","getPinnedLogsCount","registerLogLevelsWithContentOutline","levelsArr","logVolumeDataFrames","logVolData","items","logLevelsArray","sortedLLArray","logLevels","allLevelsSelected","currentLevelSelected","hiddenLevel","logsPanelState","onLogRowHover","onLogsContainerRef","node","onChangeLogsSortOrder","newSortOrder","onChangeVisualisation","visualisation","payload","onChangeDedup","onChangeLabels","onChangeShowTime","onChangeWrapLogMessage","onChangePrettifyLogMessage","onToggleLogLevel","hiddenRawLevels","onToggleLogsVolumeCollapse","onClickScan","onClickStopScan","showField","hideField","k","onCloseCallbackRef","onCloseContext","onOpenContext","getPreviousLog","allLogs","getPermalinkRange","logRow","prevLog","onPermalinkClick","urlState","serializedState","baseUrl","onPinToContentOutlineClick","allowUnPin","logsParent","alreadyPinned","pin","checkUnescapedContent","filteredLogs","filterRows","dedupedRows","dedupRows","navigationRange","createNavigationRange","LogRowContextModal","options","RadioButtonGroup","InlineFieldRow","dedupType","LogRows","Logs","sum","transitionDuration","transitionDelay","LogsCrossFadeTransition","visible","LogsContainer","updateTimeRange","origRow","ds","cacheFilters","runContextQuery","rowIndex","prevProps","dsInstances","refId","dsPromises","resolve","instances","q","loadingState","logsSeries","loadSupplementaryQueryData","setSupplementaryQueryEnabled","onStartScanning","onStopScanning","logsVolume","onPinLineCallback","mapStateToProps","logsResult","clearedAtIndex","supplementaryQueries","mapDispatchToProps","LogsSamplePanel","setLogsSampleEnabled","onToggleLogsSampleCollapse","OpenInSplitViewButton","logSampleQueries","onSplitOpen","LogsSamplePanelContent","logs","NoData","css","getCardStyles","NoDataSourceCallToAction","cardStyles","canCreateDataSource","footer","ctaElement","CallToActionCard","UnconnectedNodeGraphContainer","dataFrames","withTraceView","getLinks","nodes","useCategorizeFrames","toggled","windowHeight","useWindowSize","containerRef","setTop","countWarning","NodeGraph","NodeGraphContainer","makeSelectors","exploreItemSelector","s","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","history","eventBridge","onRunQueries","newQueries","onAddQuery","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","QueryEditorRows","mobileWidthThreshold","numberOfColumnsBeforeExpandedViewIsDefault","tableResult","listRef","valueLabels","getRawPrometheusListItemsFromDataFrame","isExpandedView","setIsExpandedView","onContentClick","calculateInitialHeight","getListItemHeight","itemIndex","switchId","Switch","ItemLabels","filteredValueLabels","valueLabel","itemWithValue","RawListItem","rawPrometheusResult","rawPrometheusFrame","RawPrometheusContainer","resultsStyle","ALL_GRAPH_STYLE_OPTIONS","ariaLabel","dataLinkPostProcessor","renderTable","FadeIn","defaultStyle","transitionStyles","Transition","ErrorContainer","queryError","showError","duration","ResponseErrorContainer","SecondaryActions","showHistoryButton","loadingInState","TableContainer","rowCount","hasSubFrames","TableContainerWithTheme","TraceViewContainer","traceProp","datasource","TraceView","Explore","rawRange","queryKeys","modifier","modification","toggleableFilters","panelType","tracking","exploreContainerStyles","groupedByPlugin","graphResult","showFlameGraph","GraphContainer","logsContentOutlineWrapper","logsSample","showTrace","series","showMetrics","showTable","showRawPrometheus","showLogs","showCustom","showNodeGraph","showLogsSample","correlationEditorDetails","correlationEditorHelperData","showQueryInspector","setShowQueryInspector","contentOutlineVisible","showPanels","richHistoryRowButtonHidden","showNoData","correlationsBox","ErrorBoundary","explore","ExploreQueryInspector","isMixed","dataOptions","setDataOptions","statsTab","InspectStatsTab","jsonTab","InspectJSONTab","dataTab","InspectDataTab","queryTab","QueryInspector","tabs","errorTab","InspectErrorTab","TabbedContainer","containerStyles","ExplorePaneContainerUnconnected","useStopQueries","EventBus","bus","ExplorePaneContainer","paneSelector","paneRef","getIdentityDisplayList","getTestQueryList","mockData","useAllQueryTemplatesQuery","useAddQueryTemplateMutation","useDeleteQueryTemplateMutation","useEditQueryTemplateMutation","isQueryLibraryEnabled","QueryLibraryMocks","IdentityServiceMocks","useDatasource","dataSourceRef","VisibilityOptions","getInstuctions","isAdd","QueryTemplateForm","queryToAdd","templateData","handleSubmit","addQueryTemplate","editQueryTemplate","handleAddQueryTemplate","addQueryTemplateCommand","handleEditQueryTemplate","editQueryTemplateCommand","onSubmit","timestamp","temporaryDefaultTitle","isSuccess","queryText","promises","queryString","TextArea","BASE_URL","getUserInfo","ExploreRunQueryButton","rootDatasourceUid","disabled","changeDatasource","setQueries","openRunQueryButton","setOpenRunQueryButton","isPaneSplit","exploreActiveDS","panesEntries","isDifferentDatasource","di","runQueryText","dsUid","runQuery","differentDataSource","runButton","isInvalid","buttonText","paneLabel","useQueryLibraryListStyles","ActionsCell","queryTemplate","queryUid","deleteQueryTemplate","editFormOpen","setEditFormOpen","onDeleteQuery","performDelete","AddedByCell","Avatar","DatasourceTypeCell","datasourceApi","DateAddedCell","formattedTime","QueryDescriptionCell","queryLibraryListStyles","queryDisplayText","dsName","columns","rowA","rowB","desc","timeA","timeB","QueryTemplatesTable","queryTemplateRows","InteractiveTable","searchQueryLibrary","queryLibrary","dsFilters","userNameFilters","matchesDsFilter","matchesUserNameFilter","QueryTemplatesList","isLoading","searchQuery","setSearchQuery","datasourceFilters","setDatasourceFilters","userData","setUserData","userFilters","setUserFilters","allQueryTemplateRows","setAllQueryTemplateRows","isRowsLoading","setIsRowsLoading","shouldCancel","userDataList","usersParam","qt","userUid","user","rowsPromises","datasourceRef","datasourceName","extendedUserData","datasourceNames","EmptyState","FilterInput","InlineLabel","actionMeta","QueryLibrary","activeDatasources","RichHistoryAddToLibrary","hasBeenSaved","setHasBeenSaved","buttonLabel","rightColumnWidth","rightColumnContentWidth","cardColor","RichHistoryCard","queryHistoryItem","commentHistoryItem","starHistoryItem","deleteHistoryItem","datasourceInstances","activeUpdateComment","setActiveUpdateComment","comment","setComment","cardRootDatasource","onCopyQuery","datasources","queriesText","queryDS","onCreateShortLink","link","queryId","onStarQuery","toggleActiveUpdateComment","onUpdateComment","onCancelUpdateComment","onKeyDown","keyEvent","updateComment","queryActionButtons","DatasourceInfo","queryDs","Query","getQueryStyles","showDsInfo","getDsInfoStyles","dsApi","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","listOfDatasources","filters","datasourceFilterApis","loadingDs","dsGetProm","dsf","dsi","mappedQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","timeFilter","RangeSlider","heading","retentionPeriodOptions","RichHistorySettingsTab","retentionPeriod","starredTabAsFirstTab","activeDatasourcesOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleActiveDatasourcesOnly","deleteRichHistory","selectedOption","onDelete","RichHistoryStarredTab","eDs","RichHistory","richHistory","richHistoryTotal","firstTab","setLoading","updateSettings","settingsToUpdate","filtersToUpdate","loadRichHistory","QueryLibraryTab","QueriesTab","StarredTab","SettingsTab","RichHistoryContainer","initRichHistory","updateHistorySettings","updateHistorySearchFilters","tracked","setTracked","useExplorePageTitle","params","navModel","useNavModel","chrome","panesObject","results","Branding","namesString","useKeyboardShortcuts","keybindings","tearDown","u","useSplitSizeUpdater","windowWidth","hasSplit","rightPaneWidthRatio","setRightPaneWidthRatio","exploreState","updateSplitSize","evenSplitWidth","areBothSimilar","widthCalc","useTimeSrvFix","searchParams","MIN_PANE_WIDTH","QUERY_LIBRARY_ACTION_KEY","ExplorePage","ExplorePageContent","useStateSync","showCorrelationEditorBar","setQueryToAdd","QueryOperationAction","SplitPaneWrapper","tableMigrationHandler","panel","transformsMap","columnsMap","colorModeMap","generateThresholds","thresholds","colors","threshold","migrateTransformations","oldOpts","opts","migrateTableStyleToOverride","override","migrateDefaults","prevDefaults","defaults","tablePanelChangedHandler","prevPluginId","prevOptions","overrides","getMainFrames","df","migrateFromParentRowIndexToNestedFrames","migratedFrames","subFrames","subFramesGrouped","subFramesByIndex","migratedFrame","hasDeprecatedParentRowIndex","callback","delay","savedCallback","interval_1"],"sourceRoot":""}