{"version":3,"file":"5194.f8ee0a8ea1b684b0d25b.js","mappings":"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","sources":["webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/treeTransforms.ts","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/dataTransform.ts","webpack://grafana/./packages/grafana-flamegraph/src/constants.ts","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/FlameGraphContextMenu.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/FlameGraphTooltip.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/murmur3.ts","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/colors.ts","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/rendering.ts","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/FlameGraphCanvas.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/FlameGraphMetadata.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraph/FlameGraph.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraphHeader.tsx","webpack://grafana/./packages/grafana-flamegraph/src/TopTable/FlameGraphTopTableContainer.tsx","webpack://grafana/./packages/grafana-flamegraph/src/FlameGraphContainer.tsx","webpack://grafana/./packages/grafana-flamegraph/src/types.ts","webpack://grafana/./node_modules/react-use/lib/useDebounce.js","webpack://grafana/./node_modules/react-use/lib/useTimeoutFn.js"],"sourcesContent":["import { groupBy } from 'lodash';\n\nimport { LevelItem } from './dataTransform';\n\ntype DataInterface = {\n  getLabel: (index: number) => string;\n};\n\n// Merge parent subtree of the roots for the callers tree in the sandwich view of the flame graph.\nexport function mergeParentSubtrees(roots: LevelItem[], data: DataInterface): LevelItem[][] {\n  const newRoots = getParentSubtrees(roots);\n  return mergeSubtrees(newRoots, data, 'parents');\n}\n\n// Returns a subtrees per root that will have the parents resized to the same value as the root. When doing callers\n// tree we need to keep proper sizes of the parents, before we merge them, so we correctly attribute to the parents\n// only the value it contributed to the root.\n// So if we have something like:\n// [0/////////////]\n// [1//][4/////][6]\n// [2]  [5/////]\n// [6]  [6/][8/]\n// [7]\n// Taking all the node with '6' will create:\n// [0][0/]\n// [1][4/]\n// [2][5/][0]\n// [6][6/][6]\n// Which we can later merge.\nfunction getParentSubtrees(roots: LevelItem[]) {\n  return roots.map((r) => {\n    if (!r.parents?.length) {\n      return r;\n    }\n\n    const newRoot = {\n      ...r,\n      children: [],\n    };\n    const stack: Array<{ child: undefined | LevelItem; parent: LevelItem }> = [\n      { child: newRoot, parent: r.parents[0] },\n    ];\n\n    while (stack.length) {\n      const args = stack.shift()!;\n      const newNode = {\n        ...args.parent,\n        children: args.child ? [args.child] : [],\n        parents: [],\n      };\n\n      if (args.child) {\n        newNode.value = args.child.value;\n        args.child.parents = [newNode];\n      }\n\n      if (args.parent.parents?.length) {\n        stack.push({ child: newNode, parent: args.parent.parents[0] });\n      }\n    }\n    return newRoot;\n  });\n}\n\n// Merge subtrees into a single tree. Returns an array of levels for easy rendering. It assumes roots are mergeable,\n// meaning they represent the same unit of work (same label). Then we walk the tree in a specified direction,\n// merging nodes with the same label and same parent/child into single bigger node. This copies the tree (and all nodes)\n// as we are creating new merged nodes and modifying the parents/children.\nexport function mergeSubtrees(\n  roots: LevelItem[],\n  data: DataInterface,\n  direction: 'parents' | 'children' = 'children'\n): LevelItem[][] {\n  const oppositeDirection = direction === 'parents' ? 'children' : 'parents';\n  const levels: LevelItem[][] = [];\n\n  // Loop instead of recursion to be sure we don't blow stack size limit and save some memory. Each stack item is\n  // basically a list of arrays you would pass to each level of recursion.\n  const stack: Array<{ previous: undefined | LevelItem; items: LevelItem[]; level: number }> = [\n    { previous: undefined, items: roots, level: 0 },\n  ];\n\n  while (stack.length) {\n    const args = stack.shift()!;\n    const indexes = args.items.flatMap((i) => i.itemIndexes);\n    const newItem: LevelItem = {\n      // We use the items value instead of value from the data frame, cause we could have changed it in the process\n      value: args.items.reduce((acc, i) => acc + i.value, 0),\n      itemIndexes: indexes,\n      // these will change later\n      children: [],\n      parents: [],\n      start: 0,\n      level: args.level,\n    };\n\n    levels[args.level] = levels[args.level] || [];\n    levels[args.level].push(newItem);\n\n    if (args.previous) {\n      // Not the first level, so we need to make sure we update previous items to keep the child/parent relationships\n      // and compute correct new start offset for the item.\n      newItem[oppositeDirection] = [args.previous];\n      const prevSiblingsVal =\n        args.previous[direction]?.reduce((acc, node) => {\n          return acc + node.value;\n        }, 0) || 0;\n      newItem.start = args.previous.start + prevSiblingsVal;\n      args.previous[direction]!.push(newItem);\n    }\n\n    const nextItems = args.items.flatMap((i) => i[direction] || []);\n    // Group by label which for now is the only identifier by which we decide if node represents the same unit of work.\n    const nextGroups = groupBy(nextItems, (c) => data.getLabel(c.itemIndexes[0]));\n    for (const g of Object.values(nextGroups)) {\n      stack.push({ previous: newItem, items: g, level: args.level + 1 });\n    }\n  }\n\n  // Reverse the levels if we are doing callers tree, so we return levels in the correct order.\n  if (direction === 'parents') {\n    levels.reverse();\n    levels.forEach((level, index) => {\n      level.forEach((item) => {\n        item.level = index;\n      });\n    });\n  }\n\n  return levels;\n}\n","import {\n  createTheme,\n  DataFrame,\n  DisplayProcessor,\n  Field,\n  FieldType,\n  getDisplayProcessor,\n  GrafanaTheme2,\n} from '@grafana/data';\n\nimport { SampleUnit } from '../types';\n\nimport { mergeParentSubtrees, mergeSubtrees } from './treeTransforms';\n\nexport type LevelItem = {\n  // Offset from the start of the level.\n  start: number;\n  // Value here can be different from a value of items in the data frame as for callers tree in sandwich view we have\n  // to trim the value to correspond only to the part used by the children in the subtree.\n  // In case of diff profile this is actually left + right value.\n  value: number;\n  // Only exists for diff profiles.\n  valueRight?: number;\n  // Index into the data frame. It is an array because for sandwich views we may be merging multiple items into single\n  // node.\n  itemIndexes: number[];\n  children: LevelItem[];\n  level: number;\n  parents?: LevelItem[];\n};\n\nexport type CollapseConfig = {\n  items: LevelItem[];\n  collapsed: boolean;\n};\n\n/**\n * Convert data frame with nested set format into array of level. This is mainly done for compatibility with current\n * rendering code.\n */\nexport function nestedSetToLevels(\n  container: FlameGraphDataContainer,\n  options?: Options\n): [LevelItem[][], Record<string, LevelItem[]>, CollapsedMap] {\n  const levels: LevelItem[][] = [];\n  let offset = 0;\n\n  let parent: LevelItem | undefined = undefined;\n  const uniqueLabels: Record<string, LevelItem[]> = {};\n\n  for (let i = 0; i < container.data.length; i++) {\n    const currentLevel = container.getLevel(i);\n    const prevLevel = i > 0 ? container.getLevel(i - 1) : undefined;\n\n    levels[currentLevel] = levels[currentLevel] || [];\n\n    if (prevLevel && prevLevel >= currentLevel) {\n      // We are going down a level or staying at the same level, so we are adding a sibling to the last item in a level.\n      // So we have to compute the correct offset based on the last sibling.\n      const lastSibling = levels[currentLevel][levels[currentLevel].length - 1];\n      offset =\n        lastSibling.start +\n        container.getValue(lastSibling.itemIndexes[0]) +\n        container.getValueRight(lastSibling.itemIndexes[0]);\n      // we assume there is always a single root node so lastSibling should always have a parent.\n      // Also it has to have the same parent because of how the items are ordered.\n      parent = lastSibling.parents![0];\n    }\n\n    const newItem: LevelItem = {\n      itemIndexes: [i],\n      value: container.getValue(i) + container.getValueRight(i),\n      valueRight: container.isDiffFlamegraph() ? container.getValueRight(i) : undefined,\n      start: offset,\n      parents: parent && [parent],\n      children: [],\n      level: currentLevel,\n    };\n\n    if (uniqueLabels[container.getLabel(i)]) {\n      uniqueLabels[container.getLabel(i)].push(newItem);\n    } else {\n      uniqueLabels[container.getLabel(i)] = [newItem];\n    }\n\n    if (parent) {\n      parent.children.push(newItem);\n    }\n\n    parent = newItem;\n    levels[currentLevel].push(newItem);\n  }\n\n  const collapsedMapContainer = new CollapsedMapBuilder(options?.collapsingThreshold);\n  if (options?.collapsing) {\n    // We collapse similar items here, where it seems like parent and child are the same thing and so the distinction\n    // isn't that important. We create a map of items that should be collapsed together. We need to do it with complete\n    // tree as we need to know how many children an item has to know if we can collapse it.\n    collapsedMapContainer.addTree(levels[0][0]);\n  }\n\n  return [levels, uniqueLabels, collapsedMapContainer.getCollapsedMap()];\n}\n\n/**\n * Small wrapper around the map of items that should be visually collapsed in the flame graph. Reason this is a wrapper\n * is that we want to make sure that when this is in the state we don't update the map directly but create a new map\n * and to have a place for the methods to collapse/expand either single item or all the items.\n */\nexport class CollapsedMap {\n  // The levelItem used as a key is the item that will always be rendered in the flame graph. The config.items are all\n  // the items that are in the group and if the config.collapsed is true they will be hidden.\n  private map: Map<LevelItem, CollapseConfig> = new Map();\n\n  constructor(map?: Map<LevelItem, CollapseConfig>) {\n    this.map = map || new Map();\n  }\n\n  get(item: LevelItem) {\n    return this.map.get(item);\n  }\n\n  keys() {\n    return this.map.keys();\n  }\n\n  values() {\n    return this.map.values();\n  }\n\n  size() {\n    return this.map.size;\n  }\n\n  setCollapsedStatus(item: LevelItem, collapsed: boolean) {\n    const newMap = new Map(this.map);\n    const collapsedConfig = this.map.get(item)!;\n    const newConfig = { ...collapsedConfig, collapsed };\n    for (const item of collapsedConfig.items) {\n      newMap.set(item, newConfig);\n    }\n    return new CollapsedMap(newMap);\n  }\n\n  setAllCollapsedStatus(collapsed: boolean) {\n    const newMap = new Map(this.map);\n    for (const item of this.map.keys()) {\n      const collapsedConfig = this.map.get(item)!;\n      const newConfig = { ...collapsedConfig, collapsed };\n      newMap.set(item, newConfig);\n    }\n\n    return new CollapsedMap(newMap);\n  }\n}\n\n/**\n * Similar to CollapsedMap but this one is mutable and used during transformation of the dataFrame data into structure\n * we use for rendering. This should not be passed to the React components.\n */\nexport class CollapsedMapBuilder {\n  private map = new Map();\n  private threshold = 0.99;\n\n  constructor(threshold?: number) {\n    if (threshold !== undefined) {\n      this.threshold = threshold;\n    }\n  }\n\n  addTree(root: LevelItem) {\n    const stack = [root];\n    while (stack.length) {\n      const current = stack.shift()!;\n\n      if (current.parents?.length) {\n        this.addItem(current, current.parents[0]);\n      }\n\n      if (current.children.length) {\n        stack.unshift(...current.children);\n      }\n    }\n  }\n\n  // The heuristics here is pretty simple right now. Just check if it's single child and if we are within threshold.\n  // We assume items with small self just aren't too important while we cannot really collapse items with siblings\n  // as it's not clear what to do with said sibling.\n  addItem(item: LevelItem, parent?: LevelItem) {\n    if (parent && item.value > parent.value * this.threshold && parent.children.length === 1) {\n      if (this.map.has(parent)) {\n        const config = this.map.get(parent)!;\n        this.map.set(item, config);\n        config.items.push(item);\n      } else {\n        const config = { items: [parent, item], collapsed: true };\n        this.map.set(parent, config);\n        this.map.set(item, config);\n      }\n    }\n  }\n\n  getCollapsedMap() {\n    return new CollapsedMap(this.map);\n  }\n}\n\nexport function getMessageCheckFieldsResult(wrongFields: CheckFieldsResult) {\n  if (wrongFields.missingFields.length) {\n    return `Data is missing fields: ${wrongFields.missingFields.join(', ')}`;\n  }\n\n  if (wrongFields.wrongTypeFields.length) {\n    return `Data has fields of wrong type: ${wrongFields.wrongTypeFields\n      .map((f) => `${f.name} has type ${f.type} but should be ${f.expectedTypes.join(' or ')}`)\n      .join(', ')}`;\n  }\n\n  return '';\n}\n\nexport type CheckFieldsResult = {\n  wrongTypeFields: Array<{ name: string; expectedTypes: FieldType[]; type: FieldType }>;\n  missingFields: string[];\n};\n\nexport function checkFields(data: DataFrame): CheckFieldsResult | undefined {\n  const fields: Array<[string, FieldType[]]> = [\n    ['label', [FieldType.string, FieldType.enum]],\n    ['level', [FieldType.number]],\n    ['value', [FieldType.number]],\n    ['self', [FieldType.number]],\n  ];\n\n  const missingFields = [];\n  const wrongTypeFields = [];\n\n  for (const field of fields) {\n    const [name, types] = field;\n    const frameField = data?.fields.find((f) => f.name === name);\n    if (!frameField) {\n      missingFields.push(name);\n      continue;\n    }\n    if (!types.includes(frameField.type)) {\n      wrongTypeFields.push({ name, expectedTypes: types, type: frameField.type });\n    }\n  }\n\n  if (missingFields.length > 0 || wrongTypeFields.length > 0) {\n    return {\n      wrongTypeFields,\n      missingFields,\n    };\n  }\n  return undefined;\n}\n\nexport type Options = {\n  collapsing: boolean;\n  collapsingThreshold?: number;\n};\n\nexport class FlameGraphDataContainer {\n  data: DataFrame;\n  options: Options;\n\n  labelField: Field;\n  levelField: Field;\n  valueField: Field;\n  selfField: Field;\n\n  // Optional fields for diff view\n  valueRightField?: Field;\n  selfRightField?: Field;\n\n  labelDisplayProcessor: DisplayProcessor;\n  valueDisplayProcessor: DisplayProcessor;\n  uniqueLabels: string[];\n\n  private levels: LevelItem[][] | undefined;\n  private uniqueLabelsMap: Record<string, LevelItem[]> | undefined;\n  private collapsedMap: CollapsedMap | undefined;\n\n  constructor(data: DataFrame, options: Options, theme: GrafanaTheme2 = createTheme()) {\n    this.data = data;\n    this.options = options;\n\n    const wrongFields = checkFields(data);\n    if (wrongFields) {\n      throw new Error(getMessageCheckFieldsResult(wrongFields));\n    }\n\n    this.labelField = data.fields.find((f) => f.name === 'label')!;\n    this.levelField = data.fields.find((f) => f.name === 'level')!;\n    this.valueField = data.fields.find((f) => f.name === 'value')!;\n    this.selfField = data.fields.find((f) => f.name === 'self')!;\n\n    this.valueRightField = data.fields.find((f) => f.name === 'valueRight')!;\n    this.selfRightField = data.fields.find((f) => f.name === 'selfRight')!;\n\n    if ((this.valueField || this.selfField) && !(this.valueField && this.selfField)) {\n      throw new Error(\n        'Malformed dataFrame: both valueRight and selfRight has to be present if one of them is present.'\n      );\n    }\n\n    const enumConfig = this.labelField?.config?.type?.enum;\n    // Label can actually be an enum field so depending on that we have to access it through display processor. This is\n    // both a backward compatibility but also to allow using a simple dataFrame without enum config. This would allow\n    // users to use this panel with correct query from data sources that do not return profiles natively.\n    if (enumConfig) {\n      this.labelDisplayProcessor = getDisplayProcessor({ field: this.labelField, theme });\n      this.uniqueLabels = enumConfig.text || [];\n    } else {\n      this.labelDisplayProcessor = (value) => ({\n        text: value + '',\n        numeric: 0,\n      });\n      this.uniqueLabels = [...new Set<string>(this.labelField.values)];\n    }\n\n    this.valueDisplayProcessor = getDisplayProcessor({\n      field: this.valueField,\n      theme,\n    });\n  }\n\n  isDiffFlamegraph() {\n    return Boolean(this.valueRightField && this.selfRightField);\n  }\n\n  getLabel(index: number) {\n    return this.labelDisplayProcessor(this.labelField.values[index]).text;\n  }\n\n  getLevel(index: number) {\n    return this.levelField.values[index];\n  }\n\n  getValue(index: number | number[]) {\n    return fieldAccessor(this.valueField, index);\n  }\n\n  getValueRight(index: number | number[]) {\n    return fieldAccessor(this.valueRightField, index);\n  }\n\n  getSelf(index: number | number[]) {\n    return fieldAccessor(this.selfField, index);\n  }\n\n  getSelfRight(index: number | number[]) {\n    return fieldAccessor(this.selfRightField, index);\n  }\n\n  getSelfDisplay(index: number | number[]) {\n    return this.valueDisplayProcessor(this.getSelf(index));\n  }\n\n  getUniqueLabels() {\n    return this.uniqueLabels;\n  }\n\n  getUnitTitle() {\n    switch (this.valueField.config.unit) {\n      case SampleUnit.Bytes:\n        return 'RAM';\n      case SampleUnit.Nanoseconds:\n        return 'Time';\n    }\n\n    return 'Count';\n  }\n\n  getLevels() {\n    this.initLevels();\n    return this.levels!;\n  }\n\n  getSandwichLevels(label: string): [LevelItem[][], LevelItem[][]] {\n    const nodes = this.getNodesWithLabel(label);\n\n    if (!nodes?.length) {\n      return [[], []];\n    }\n\n    const callers = mergeParentSubtrees(nodes, this);\n    const callees = mergeSubtrees(nodes, this);\n\n    return [callers, callees];\n  }\n\n  getNodesWithLabel(label: string) {\n    this.initLevels();\n    return this.uniqueLabelsMap![label];\n  }\n\n  getCollapsedMap() {\n    this.initLevels();\n    return this.collapsedMap!;\n  }\n\n  private initLevels() {\n    if (!this.levels) {\n      const [levels, uniqueLabelsMap, collapsedMap] = nestedSetToLevels(this, this.options);\n      this.levels = levels;\n      this.uniqueLabelsMap = uniqueLabelsMap;\n      this.collapsedMap = collapsedMap;\n    }\n  }\n}\n\n// Access field value with either single index or array of indexes. This is needed as we sometimes merge multiple\n// into one, and we want to access aggregated values.\nfunction fieldAccessor(field: Field | undefined, index: number | number[]) {\n  if (!field) {\n    return 0;\n  }\n  let indexArray: number[] = typeof index === 'number' ? [index] : index;\n  return indexArray.reduce((acc, index) => {\n    return acc + field.values[index];\n  }, 0);\n}\n","export const PIXELS_PER_LEVEL = 22 * window.devicePixelRatio;\nexport const MUTE_THRESHOLD = 10 * window.devicePixelRatio;\nexport const HIDE_THRESHOLD = 0.5 * window.devicePixelRatio;\nexport const LABEL_THRESHOLD = 20 * window.devicePixelRatio;\nexport const BAR_BORDER_WIDTH = 0.5 * window.devicePixelRatio;\nexport const BAR_TEXT_PADDING_LEFT = 4 * window.devicePixelRatio;\nexport const GROUP_STRIP_WIDTH = 3 * window.devicePixelRatio;\nexport const GROUP_STRIP_PADDING = 3 * window.devicePixelRatio;\nexport const GROUP_STRIP_MARGIN_LEFT = 4 * window.devicePixelRatio;\nexport const GROUP_TEXT_OFFSET = 2 * window.devicePixelRatio;\nexport const MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH = 800;\nexport const TOP_TABLE_COLUMN_WIDTH = 120;\n","import { DataFrame } from '@grafana/data';\nimport { MenuItem, MenuGroup, ContextMenu, IconName } from '@grafana/ui';\n\nimport { ClickedItemData, SelectedView } from '../types';\n\nimport { CollapseConfig, FlameGraphDataContainer } from './dataTransform';\n\nexport type GetExtraContextMenuButtonsFunction = (\n  clickedItemData: ClickedItemData,\n  data: DataFrame,\n  state: { selectedView: SelectedView; isDiff: boolean; search: string; collapseConfig?: CollapseConfig }\n) => ExtraContextMenuButton[];\n\nexport type ExtraContextMenuButton = {\n  label: string;\n  icon: IconName;\n  onClick: () => void;\n};\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  itemData: ClickedItemData;\n  onMenuItemClick: () => void;\n  onItemFocus: () => void;\n  onSandwich: () => void;\n  onExpandGroup: () => void;\n  onCollapseGroup: () => void;\n  onExpandAllGroups: () => void;\n  onCollapseAllGroups: () => void;\n  getExtraContextMenuButtons?: GetExtraContextMenuButtonsFunction;\n  collapseConfig?: CollapseConfig;\n  collapsing?: boolean;\n  allGroupsCollapsed?: boolean;\n  allGroupsExpanded?: boolean;\n  selectedView: SelectedView;\n  search: string;\n};\n\nconst FlameGraphContextMenu = ({\n  data,\n  itemData,\n  onMenuItemClick,\n  onItemFocus,\n  onSandwich,\n  collapseConfig,\n  onExpandGroup,\n  onCollapseGroup,\n  onExpandAllGroups,\n  onCollapseAllGroups,\n  getExtraContextMenuButtons,\n  collapsing,\n  allGroupsExpanded,\n  allGroupsCollapsed,\n  selectedView,\n  search,\n}: Props) => {\n  function renderItems() {\n    const extraButtons =\n      getExtraContextMenuButtons?.(itemData, data.data, {\n        selectedView,\n        isDiff: data.isDiffFlamegraph(),\n        search,\n        collapseConfig,\n      }) || [];\n    return (\n      <>\n        <MenuItem\n          label=\"Focus block\"\n          icon={'eye'}\n          onClick={() => {\n            onItemFocus();\n            onMenuItemClick();\n          }}\n        />\n        <MenuItem\n          label=\"Copy function name\"\n          icon={'copy'}\n          onClick={() => {\n            navigator.clipboard.writeText(itemData.label).then(() => {\n              onMenuItemClick();\n            });\n          }}\n        />\n        <MenuItem\n          label=\"Sandwich view\"\n          icon={'gf-show-context'}\n          onClick={() => {\n            onSandwich();\n            onMenuItemClick();\n          }}\n        />\n        {extraButtons.map(({ label, icon, onClick }) => {\n          return <MenuItem label={label} icon={icon} onClick={() => onClick()} key={label} />;\n        })}\n        {collapsing && (\n          <MenuGroup label={'Grouping'}>\n            {collapseConfig ? (\n              collapseConfig.collapsed ? (\n                <MenuItem\n                  label=\"Expand group\"\n                  icon={'angle-double-down'}\n                  onClick={() => {\n                    onExpandGroup();\n                    onMenuItemClick();\n                  }}\n                />\n              ) : (\n                <MenuItem\n                  label=\"Collapse group\"\n                  icon={'angle-double-up'}\n                  onClick={() => {\n                    onCollapseGroup();\n                    onMenuItemClick();\n                  }}\n                />\n              )\n            ) : null}\n            {!allGroupsExpanded && (\n              <MenuItem\n                label=\"Expand all groups\"\n                icon={'angle-double-down'}\n                onClick={() => {\n                  onExpandAllGroups();\n                  onMenuItemClick();\n                }}\n              />\n            )}\n            {!allGroupsCollapsed && (\n              <MenuItem\n                label=\"Collapse all groups\"\n                icon={'angle-double-up'}\n                onClick={() => {\n                  onCollapseAllGroups();\n                  onMenuItemClick();\n                }}\n              />\n            )}\n          </MenuGroup>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div data-testid=\"contextMenu\">\n      <ContextMenu\n        renderMenuItems={renderItems}\n        x={itemData.posX + 10}\n        y={itemData.posY}\n        focusOnOpen={false}\n      ></ContextMenu>\n    </div>\n  );\n};\n\nexport default FlameGraphContextMenu;\n","import { css } from '@emotion/css';\n\nimport { DisplayValue, getValueFormat, GrafanaTheme2 } from '@grafana/data';\nimport { InteractiveTable, Portal, useStyles2, VizTooltipContainer } from '@grafana/ui';\n\nimport { CollapseConfig, FlameGraphDataContainer, LevelItem } from './dataTransform';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  totalTicks: number;\n  position?: { x: number; y: number };\n  item?: LevelItem;\n  collapseConfig?: CollapseConfig;\n};\n\nconst FlameGraphTooltip = ({ data, item, totalTicks, position, collapseConfig }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (!(item && position)) {\n    return null;\n  }\n\n  let content;\n\n  if (data.isDiffFlamegraph()) {\n    const tableData = getDiffTooltipData(data, item, totalTicks);\n    content = (\n      <InteractiveTable\n        className={styles.tooltipTable}\n        columns={[\n          { id: 'label', header: '' },\n          { id: 'baseline', header: 'Baseline' },\n          { id: 'comparison', header: 'Comparison' },\n          { id: 'diff', header: 'Diff' },\n        ]}\n        data={tableData}\n        getRowId={(originalRow) => originalRow.rowId}\n      />\n    );\n  } else {\n    const tooltipData = getTooltipData(data, item, totalTicks);\n    content = (\n      <p className={styles.lastParagraph}>\n        {tooltipData.unitTitle}\n        <br />\n        Total: <b>{tooltipData.unitValue}</b> ({tooltipData.percentValue}%)\n        <br />\n        Self: <b>{tooltipData.unitSelf}</b> ({tooltipData.percentSelf}%)\n        <br />\n        Samples: <b>{tooltipData.samples}</b>\n      </p>\n    );\n  }\n\n  return (\n    <Portal>\n      <VizTooltipContainer className={styles.tooltipContainer} position={position} offset={{ x: 15, y: 0 }}>\n        <div className={styles.tooltipContent}>\n          <p className={styles.tooltipName}>\n            {data.getLabel(item.itemIndexes[0])}\n            {collapseConfig && collapseConfig.collapsed ? (\n              <span>\n                <br />\n                and {collapseConfig.items.length} similar items\n              </span>\n            ) : (\n              ''\n            )}\n          </p>\n          {content}\n        </div>\n      </VizTooltipContainer>\n    </Portal>\n  );\n};\n\ntype TooltipData = {\n  percentValue: number;\n  percentSelf: number;\n  unitTitle: string;\n  unitValue: string;\n  unitSelf: string;\n  samples: string;\n};\n\nexport const getTooltipData = (data: FlameGraphDataContainer, item: LevelItem, totalTicks: number): TooltipData => {\n  const displayValue = data.valueDisplayProcessor(item.value);\n  const displaySelf = data.getSelfDisplay(item.itemIndexes);\n\n  const percentValue = Math.round(10000 * (displayValue.numeric / totalTicks)) / 100;\n  const percentSelf = Math.round(10000 * (displaySelf.numeric / totalTicks)) / 100;\n  let unitValue = displayValue.text + displayValue.suffix;\n  let unitSelf = displaySelf.text + displaySelf.suffix;\n\n  const unitTitle = data.getUnitTitle();\n  if (unitTitle === 'Count') {\n    if (!displayValue.suffix) {\n      // Makes sure we don't show 123undefined or something like that if suffix isn't defined\n      unitValue = displayValue.text;\n    }\n    if (!displaySelf.suffix) {\n      // Makes sure we don't show 123undefined or something like that if suffix isn't defined\n      unitSelf = displaySelf.text;\n    }\n  }\n\n  return {\n    percentValue,\n    percentSelf,\n    unitTitle,\n    unitValue,\n    unitSelf,\n    samples: displayValue.numeric.toLocaleString(),\n  };\n};\n\ntype DiffTableData = {\n  rowId: string;\n  label: string;\n  baseline: string | number;\n  comparison: string | number;\n  diff: string | number;\n};\n\nexport const getDiffTooltipData = (\n  data: FlameGraphDataContainer,\n  item: LevelItem,\n  totalTicks: number\n): DiffTableData[] => {\n  const levels = data.getLevels();\n  const totalTicksRight = levels[0][0].valueRight!;\n  const totalTicksLeft = totalTicks - totalTicksRight;\n  const valueLeft = item.value - item.valueRight!;\n\n  const percentageLeft = Math.round((10000 * valueLeft) / totalTicksLeft) / 100;\n  const percentageRight = Math.round((10000 * item.valueRight!) / totalTicksRight) / 100;\n\n  const diff = ((percentageRight - percentageLeft) / percentageLeft) * 100;\n\n  const displayValueLeft = getValueWithUnit(data, data.valueDisplayProcessor(valueLeft));\n  const displayValueRight = getValueWithUnit(data, data.valueDisplayProcessor(item.valueRight!));\n\n  const shortValFormat = getValueFormat('short');\n\n  return [\n    {\n      rowId: '1',\n      label: '% of total',\n      baseline: percentageLeft + '%',\n      comparison: percentageRight + '%',\n      diff: shortValFormat(diff).text + '%',\n    },\n    {\n      rowId: '2',\n      label: 'Value',\n      baseline: displayValueLeft,\n      comparison: displayValueRight,\n      diff: getValueWithUnit(data, data.valueDisplayProcessor(item.valueRight! - valueLeft)),\n    },\n    {\n      rowId: '3',\n      label: 'Samples',\n      baseline: shortValFormat(valueLeft).text,\n      comparison: shortValFormat(item.valueRight!).text,\n      diff: shortValFormat(item.valueRight! - valueLeft).text,\n    },\n  ];\n};\n\nfunction getValueWithUnit(data: FlameGraphDataContainer, displayValue: DisplayValue) {\n  let unitValue = displayValue.text + displayValue.suffix;\n\n  const unitTitle = data.getUnitTitle();\n  if (unitTitle === 'Count') {\n    if (!displayValue.suffix) {\n      // Makes sure we don't show 123undefined or something like that if suffix isn't defined\n      unitValue = displayValue.text;\n    }\n  }\n  return unitValue;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  tooltipContainer: css({\n    title: 'tooltipContainer',\n    overflow: 'hidden',\n  }),\n  tooltipContent: css({\n    title: 'tooltipContent',\n    fontSize: theme.typography.bodySmall.fontSize,\n    width: '100%',\n  }),\n  tooltipName: css({\n    title: 'tooltipName',\n    marginTop: 0,\n    wordBreak: 'break-all',\n  }),\n  lastParagraph: css({\n    title: 'lastParagraph',\n    marginBottom: 0,\n  }),\n  name: css({\n    title: 'name',\n    marginBottom: '10px',\n  }),\n\n  tooltipTable: css({\n    title: 'tooltipTable',\n    maxWidth: '400px',\n  }),\n});\n\nexport default FlameGraphTooltip;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/*\n\nCopyright (c) 2011 Gary Court\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n/* eslint-disable no-plusplus */\n/* eslint-disable prefer-const */\n/* eslint-disable no-bitwise */\n/* eslint-disable camelcase */\n\nexport default function murmurhash3_32_gc(key: string, seed = 0) {\n  let remainder;\n  let bytes;\n  let h1;\n  let h1b;\n  let c1;\n  let c2;\n  let k1;\n  let i;\n\n  remainder = key.length & 3; // key.length % 4\n  bytes = key.length - remainder;\n  h1 = seed;\n  c1 = 0xcc9e2d51;\n  c2 = 0x1b873593;\n  i = 0;\n\n  while (i < bytes) {\n    k1 =\n      (key.charCodeAt(i) & 0xff) |\n      ((key.charCodeAt(++i) & 0xff) << 8) |\n      ((key.charCodeAt(++i) & 0xff) << 16) |\n      ((key.charCodeAt(++i) & 0xff) << 24);\n    ++i;\n\n    k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    h1b = ((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n    h1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n  }\n\n  k1 = 0;\n\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n    // fall through\n    case 2:\n      k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n    // fall through\n    case 1:\n      k1 ^= key.charCodeAt(i) & 0xff;\n    // fall through\n    default:\n      k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n  }\n\n  h1 ^= key.length;\n\n  h1 ^= h1 >>> 16;\n  h1 = ((h1 & 0xffff) * 0x85ebca6b + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n  h1 ^= h1 >>> 13;\n  h1 = ((h1 & 0xffff) * 0xc2b2ae35 + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) & 0xffffffff;\n  h1 ^= h1 >>> 16;\n\n  return h1 >>> 0;\n}\n","import { scaleLinear } from 'd3';\nimport color from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { ColorSchemeDiff } from '../types';\n\nimport murmurhash3_32_gc from './murmur3';\n\n// Colors taken from pyroscope, they should be from Grafana originally, but I didn't find from where exactly.\nconst packageColors = [\n  color({ h: 24, s: 69, l: 60 }),\n  color({ h: 34, s: 65, l: 65 }),\n  color({ h: 194, s: 52, l: 61 }),\n  color({ h: 163, s: 45, l: 55 }),\n  color({ h: 211, s: 48, l: 60 }),\n  color({ h: 246, s: 40, l: 65 }),\n  color({ h: 305, s: 63, l: 79 }),\n  color({ h: 47, s: 100, l: 73 }),\n\n  color({ r: 183, g: 219, b: 171 }),\n  color({ r: 244, g: 213, b: 152 }),\n  color({ r: 78, g: 146, b: 249 }),\n  color({ r: 249, g: 186, b: 143 }),\n  color({ r: 242, g: 145, b: 145 }),\n  color({ r: 130, g: 181, b: 216 }),\n  color({ r: 229, g: 168, b: 226 }),\n  color({ r: 174, g: 162, b: 224 }),\n  color({ r: 154, g: 196, b: 138 }),\n  color({ r: 242, g: 201, b: 109 }),\n  color({ r: 101, g: 197, b: 219 }),\n  color({ r: 249, g: 147, b: 78 }),\n  color({ r: 234, g: 100, b: 96 }),\n  color({ r: 81, g: 149, b: 206 }),\n  color({ r: 214, g: 131, b: 206 }),\n  color({ r: 128, g: 110, b: 183 }),\n];\n\nconst byValueMinColor = getBarColorByValue(1, 100, 0, 1);\nconst byValueMaxColor = getBarColorByValue(100, 100, 0, 1);\nexport const byValueGradient = `linear-gradient(90deg, ${byValueMinColor} 0%, ${byValueMaxColor} 100%)`;\n\n// Handpicked some vaguely rainbow-ish colors\nexport const byPackageGradient = `linear-gradient(90deg, ${packageColors[0]} 0%, ${packageColors[2]} 30%, ${packageColors[6]} 50%, ${packageColors[7]} 70%, ${packageColors[8]} 100%)`;\n\nexport function getBarColorByValue(value: number, totalTicks: number, rangeMin: number, rangeMax: number) {\n  //  / (rangeMax - rangeMin) here so when you click a bar it will adjust the top (clicked)bar to the most 'intense' color\n  const intensity = Math.min(1, value / totalTicks / (rangeMax - rangeMin));\n  const h = 50 - 50 * intensity;\n  const l = 65 + 7 * intensity;\n\n  return color({ h, s: 100, l });\n}\n\nexport function getBarColorByPackage(label: string, theme: GrafanaTheme2) {\n  const packageName = getPackageName(label);\n  // TODO: similar thing happens in trace view with selecting colors of the spans, so maybe this could be unified.\n  const hash = murmurhash3_32_gc(packageName || '', 0);\n  const colorIndex = hash % packageColors.length;\n  let packageColor = packageColors[colorIndex].clone();\n  if (theme.isLight) {\n    packageColor = packageColor.brighten(15);\n  }\n  return packageColor;\n}\n\n// green to red\nexport const diffDefaultColors = ['rgb(0, 170, 0)', 'rgb(148, 142, 142)', 'rgb(200, 0, 0)'];\nexport const diffDefaultGradient = `linear-gradient(90deg, ${diffDefaultColors[0]} 0%, ${diffDefaultColors[1]} 50%, ${diffDefaultColors[2]} 100%)`;\nexport const diffColorBlindColors = ['rgb(26, 133, 255)', 'rgb(148, 142, 142)', 'rgb(220, 50, 32)'];\nexport const diffColorBlindGradient = `linear-gradient(90deg, ${diffColorBlindColors[0]} 0%, ${diffColorBlindColors[1]} 50%, ${diffColorBlindColors[2]} 100%)`;\n\nexport function getBarColorByDiff(\n  ticks: number,\n  ticksRight: number,\n  totalTicks: number,\n  totalTicksRight: number,\n  colorScheme: ColorSchemeDiff\n) {\n  const range = colorScheme === ColorSchemeDiff.Default ? diffDefaultColors : diffColorBlindColors;\n  const colorScale = scaleLinear()\n    .domain([-100, 0, 100])\n    // TODO types from DefinitelyTyped seem to mismatch\n    // @ts-ignore\n    .range(range);\n\n  const ticksLeft = ticks - ticksRight;\n  const totalTicksLeft = totalTicks - totalTicksRight;\n\n  if (totalTicksRight === 0 || totalTicksLeft === 0) {\n    // TODO types from DefinitelyTyped seem to mismatch\n    // @ts-ignore\n    const rgbString: string = colorScale(0);\n    // Fallback to neutral color as we probably have no data for one of the sides.\n    return color(rgbString);\n  }\n\n  const percentageLeft = Math.round((10000 * ticksLeft) / totalTicksLeft) / 100;\n  const percentageRight = Math.round((10000 * ticksRight) / totalTicksRight) / 100;\n\n  const diff = ((percentageRight - percentageLeft) / percentageLeft) * 100;\n\n  // TODO types from DefinitelyTyped seem to mismatch\n  // @ts-ignore\n  const rgbString: string = colorScale(diff);\n  return color(rgbString);\n}\n\n// const getColors = memoizeOne((theme) => getFilteredColors(colors, theme));\n\n// Different regexes to get the package name and function name from the label. We may at some point get an info about\n// the language from the backend and use the right regex but right now we just try all of them from most to least\n// specific.\nconst matchers = [\n  ['phpspy', /^(?<packageName>([^\\/]*\\/)*)(?<filename>.*\\.php+)(?<line_info>.*)$/],\n  ['pyspy', /^(?<packageName>([^\\/]*\\/)*)(?<filename>.*\\.py+)(?<line_info>.*)$/],\n  ['rbspy', /^(?<packageName>([^\\/]*\\/)*)(?<filename>.*\\.rb+)(?<line_info>.*)$/],\n  [\n    'nodespy',\n    /^(\\.\\/node_modules\\/)?(?<packageName>[^/]*)(?<filename>.*\\.?(jsx?|tsx?)?):(?<functionName>.*):(?<line_info>.*)$/,\n  ],\n  ['gospy', /^(?<packageName>.*?\\/.*?\\.|.*?\\.|.+)(?<functionName>.*)$/], // also 'scrape'\n  ['javaspy', /^(?<packageName>.+\\/)(?<filename>.+\\.)(?<functionName>.+)$/],\n  ['dotnetspy', /^(?<packageName>.+)\\.(.+)\\.(.+)\\(.*\\)$/],\n  ['tracing', /^(?<packageName>.+?):.*$/],\n  ['pyroscope-rs', /^(?<packageName>[^::]+)/],\n  ['ebpfspy', /^(?<packageName>.+)$/],\n  ['unknown', /^(?<packageName>.+)$/],\n];\n\n// Get the package name from the symbol. Try matchers from the list and return first one that matches.\nfunction getPackageName(name: string): string | undefined {\n  for (const [_, matcher] of matchers) {\n    const match = name.match(matcher);\n    if (match) {\n      return match.groups?.packageName || '';\n    }\n  }\n  return undefined;\n}\n","import { RefObject, useCallback, useEffect, useMemo, useState } from 'react';\nimport color from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nimport {\n  BAR_BORDER_WIDTH,\n  BAR_TEXT_PADDING_LEFT,\n  MUTE_THRESHOLD,\n  HIDE_THRESHOLD,\n  LABEL_THRESHOLD,\n  PIXELS_PER_LEVEL,\n  GROUP_STRIP_WIDTH,\n  GROUP_STRIP_PADDING,\n  GROUP_STRIP_MARGIN_LEFT,\n  GROUP_TEXT_OFFSET,\n} from '../constants';\nimport { ClickedItemData, ColorScheme, ColorSchemeDiff, TextAlign } from '../types';\n\nimport { getBarColorByDiff, getBarColorByPackage, getBarColorByValue } from './colors';\nimport { CollapseConfig, CollapsedMap, FlameGraphDataContainer, LevelItem } from './dataTransform';\n\ntype RenderOptions = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  data: FlameGraphDataContainer;\n  root: LevelItem;\n  direction: 'children' | 'parents';\n\n  // Depth in number of levels\n  depth: number;\n  wrapperWidth: number;\n\n  // If we are rendering only zoomed in part of the graph.\n  rangeMin: number;\n  rangeMax: number;\n\n  matchedLabels: Set<string> | undefined;\n  textAlign: TextAlign;\n\n  // Total ticks that will be used for sizing\n  totalViewTicks: number;\n  // Total ticks that will be used for computing colors as some color scheme (like in diff view) should not be affected\n  // by sandwich or focus view.\n  totalColorTicks: number;\n  // Total ticks used to compute the diff colors\n  totalTicksRight: number | undefined;\n  colorScheme: ColorScheme | ColorSchemeDiff;\n  focusedItemData?: ClickedItemData;\n  collapsedMap: CollapsedMap;\n};\n\nexport function useFlameRender(options: RenderOptions) {\n  const {\n    canvasRef,\n    data,\n    root,\n    depth,\n    direction,\n    wrapperWidth,\n    rangeMin,\n    rangeMax,\n    matchedLabels,\n    textAlign,\n    totalViewTicks,\n    totalColorTicks,\n    totalTicksRight,\n    colorScheme,\n    focusedItemData,\n    collapsedMap,\n  } = options;\n  const ctx = useSetupCanvas(canvasRef, wrapperWidth, depth);\n  const theme = useTheme2();\n\n  // There is a bit of dependency injections here that does not add readability, mainly to prevent recomputing some\n  // common stuff for all the nodes in the graph when only once is enough. perf/readability tradeoff.\n\n  const mutedColor = useMemo(() => {\n    const barMutedColor = color(theme.colors.background.secondary);\n    return theme.isLight ? barMutedColor.darken(10).toHexString() : barMutedColor.lighten(10).toHexString();\n  }, [theme]);\n\n  const getBarColor = useColorFunction(\n    totalColorTicks,\n    totalTicksRight,\n    colorScheme,\n    theme,\n    mutedColor,\n    rangeMin,\n    rangeMax,\n    matchedLabels,\n    focusedItemData ? focusedItemData.item.level : 0\n  );\n\n  const renderFunc = useRenderFunc(ctx, data, getBarColor, textAlign, collapsedMap);\n\n  useEffect(() => {\n    if (!ctx) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    const mutedPath2D = new Path2D();\n\n    //\n    // Walk the tree and compute the dimensions for each item in the flamegraph.\n    //\n    walkTree(\n      root,\n      direction,\n      data,\n      totalViewTicks,\n      rangeMin,\n      rangeMax,\n      wrapperWidth,\n      collapsedMap,\n      (item, x, y, width, height, label, muted) => {\n        if (muted) {\n          // We do a bit of optimization for muted regions, and we render them all in single fill later on as they don't\n          // have labels and are the same color.\n          mutedPath2D.rect(x, y, width, height);\n        } else {\n          renderFunc(item, x, y, width, height, label);\n        }\n      }\n    );\n\n    // Only fill the muted rects\n    ctx.fillStyle = mutedColor;\n    ctx.fill(mutedPath2D);\n  }, [\n    ctx,\n    data,\n    root,\n    wrapperWidth,\n    rangeMin,\n    rangeMax,\n    totalViewTicks,\n    direction,\n    renderFunc,\n    collapsedMap,\n    mutedColor,\n  ]);\n}\n\ntype RenderFunc = (item: LevelItem, x: number, y: number, width: number, height: number, label: string) => void;\n\ntype RenderFuncWrap = (\n  item: LevelItem,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  label: string,\n  muted: boolean\n) => void;\n\n/**\n * Create a render function with some memoization to prevent excesive repainting of the canvas.\n * @param ctx\n * @param data\n * @param getBarColor\n * @param textAlign\n * @param collapsedMap\n */\nfunction useRenderFunc(\n  ctx: CanvasRenderingContext2D | undefined,\n  data: FlameGraphDataContainer,\n  getBarColor: (item: LevelItem, label: string, muted: boolean) => string,\n  textAlign: TextAlign,\n  collapsedMap: CollapsedMap\n) {\n  return useMemo(() => {\n    if (!ctx) {\n      return () => {};\n    }\n\n    const renderFunc: RenderFunc = (item, x, y, width, height, label) => {\n      ctx.beginPath();\n      ctx.rect(x + BAR_BORDER_WIDTH, y, width, height);\n      ctx.fillStyle = getBarColor(item, label, false);\n      ctx.stroke();\n      ctx.fill();\n\n      const collapsedItemConfig = collapsedMap.get(item);\n      let finalLabel = label;\n      if (collapsedItemConfig && collapsedItemConfig.collapsed) {\n        const numberOfCollapsedItems = collapsedItemConfig.items.length;\n        finalLabel = `(${numberOfCollapsedItems}) ` + label;\n      }\n\n      if (width >= LABEL_THRESHOLD) {\n        if (collapsedItemConfig) {\n          renderLabel(\n            ctx,\n            data,\n            finalLabel,\n            item,\n            width,\n            textAlign === 'left' ? x + GROUP_STRIP_MARGIN_LEFT + GROUP_TEXT_OFFSET : x,\n            y,\n            textAlign\n          );\n\n          renderGroupingStrip(ctx, x, y, height, item, collapsedItemConfig);\n        } else {\n          renderLabel(ctx, data, finalLabel, item, width, x, y, textAlign);\n        }\n      }\n    };\n\n    return renderFunc;\n  }, [ctx, getBarColor, textAlign, data, collapsedMap]);\n}\n\n/**\n * Render small strip on the left side of the bar to indicate that this item is part of a group that can be collapsed.\n * @param ctx\n * @param x\n * @param y\n * @param height\n * @param item\n * @param collapsedItemConfig\n */\nfunction renderGroupingStrip(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  height: number,\n  item: LevelItem,\n  collapsedItemConfig: CollapseConfig\n) {\n  const groupStripX = x + GROUP_STRIP_MARGIN_LEFT;\n\n  // This is to mask the label in case we align it right to left.\n  ctx.beginPath();\n  ctx.rect(x, y, groupStripX - x + GROUP_STRIP_WIDTH + GROUP_STRIP_PADDING, height);\n  ctx.fill();\n\n  // For item in a group that can be collapsed, we draw a small strip to mark them. On the items that are at the\n  // start or and end of a group we draw just half the strip so 2 groups next to each other are separated\n  // visually.\n  ctx.beginPath();\n  if (collapsedItemConfig.collapsed) {\n    ctx.rect(groupStripX, y + height / 4, GROUP_STRIP_WIDTH, height / 2);\n  } else {\n    if (collapsedItemConfig.items[0] === item) {\n      // Top item\n      ctx.rect(groupStripX, y + height / 2, GROUP_STRIP_WIDTH, height / 2);\n    } else if (collapsedItemConfig.items[collapsedItemConfig.items.length - 1] === item) {\n      // Bottom item\n      ctx.rect(groupStripX, y, GROUP_STRIP_WIDTH, height / 2);\n    } else {\n      ctx.rect(groupStripX, y, GROUP_STRIP_WIDTH, height);\n    }\n  }\n\n  ctx.fillStyle = '#666';\n  ctx.fill();\n}\n\n/**\n * Exported for testing don't use directly\n * Walks the tree and computes coordinates, dimensions and other data needed for rendering. For each item in the tree\n * it defers the rendering to the renderFunc.\n */\nexport function walkTree(\n  root: LevelItem,\n  // In sandwich view we use parents direction to show all callers.\n  direction: 'children' | 'parents',\n  data: FlameGraphDataContainer,\n  totalViewTicks: number,\n  rangeMin: number,\n  rangeMax: number,\n  wrapperWidth: number,\n  collapsedMap: CollapsedMap,\n  renderFunc: RenderFuncWrap\n) {\n  // The levelOffset here is to keep track if items that we don't render because they are collapsed into single row.\n  // That means we have to render next items with an offset of some rows up in the stack.\n  const stack: Array<{ item: LevelItem; levelOffset: number }> = [];\n  stack.push({ item: root, levelOffset: 0 });\n\n  const pixelsPerTick = (wrapperWidth * window.devicePixelRatio) / totalViewTicks / (rangeMax - rangeMin);\n  let collapsedItemRendered: LevelItem | undefined = undefined;\n\n  while (stack.length > 0) {\n    const { item, levelOffset } = stack.shift()!;\n    let curBarTicks = item.value;\n    const muted = curBarTicks * pixelsPerTick <= MUTE_THRESHOLD;\n    const width = curBarTicks * pixelsPerTick - (muted ? 0 : BAR_BORDER_WIDTH * 2);\n    const height = PIXELS_PER_LEVEL;\n\n    if (width < HIDE_THRESHOLD) {\n      // We don't render nor it's children\n      continue;\n    }\n\n    let offsetModifier = 0;\n    let skipRender = false;\n    const collapsedItemConfig = collapsedMap.get(item);\n    const isCollapsedItem = collapsedItemConfig && collapsedItemConfig.collapsed;\n\n    if (isCollapsedItem) {\n      if (collapsedItemRendered === collapsedItemConfig.items[0]) {\n        offsetModifier = direction === 'children' ? -1 : +1;\n        skipRender = true;\n      } else {\n        // This is a case where we have another collapsed group right after different collapsed group, so we need to\n        // reset.\n        collapsedItemRendered = undefined;\n      }\n    } else {\n      collapsedItemRendered = undefined;\n    }\n\n    if (!skipRender) {\n      const barX = getBarX(item.start, totalViewTicks, rangeMin, pixelsPerTick);\n      const barY = (item.level + levelOffset) * PIXELS_PER_LEVEL;\n\n      let label = data.getLabel(item.itemIndexes[0]);\n      if (isCollapsedItem) {\n        collapsedItemRendered = item;\n      }\n\n      renderFunc(item, barX, barY, width, height, label, muted);\n    }\n\n    const nextList = direction === 'children' ? item.children : item.parents;\n    if (nextList) {\n      stack.unshift(...nextList.map((c) => ({ item: c, levelOffset: levelOffset + offsetModifier })));\n    }\n  }\n}\n\nfunction useColorFunction(\n  totalTicks: number,\n  totalTicksRight: number | undefined,\n  colorScheme: ColorScheme | ColorSchemeDiff,\n  theme: GrafanaTheme2,\n  mutedColor: string,\n  rangeMin: number,\n  rangeMax: number,\n  matchedLabels: Set<string> | undefined,\n  topLevel: number\n) {\n  return useCallback(\n    function getColor(item: LevelItem, label: string, muted: boolean) {\n      // If collapsed and no search we can quickly return the muted color\n      if (muted && !matchedLabels) {\n        // Collapsed are always grayed\n        return mutedColor;\n      }\n\n      const barColor =\n        item.valueRight !== undefined &&\n        (colorScheme === ColorSchemeDiff.Default || colorScheme === ColorSchemeDiff.DiffColorBlind)\n          ? getBarColorByDiff(item.value, item.valueRight!, totalTicks, totalTicksRight!, colorScheme)\n          : colorScheme === ColorScheme.ValueBased\n            ? getBarColorByValue(item.value, totalTicks, rangeMin, rangeMax)\n            : getBarColorByPackage(label, theme);\n\n      if (matchedLabels) {\n        // Means we are searching, we use color for matches and gray the rest\n        return matchedLabels.has(label) ? barColor.toHslString() : mutedColor;\n      }\n\n      // Mute if we are above the focused symbol\n      return item.level > topLevel - 1 ? barColor.toHslString() : barColor.lighten(15).toHslString();\n    },\n    [totalTicks, totalTicksRight, colorScheme, theme, rangeMin, rangeMax, matchedLabels, topLevel, mutedColor]\n  );\n}\n\nfunction useSetupCanvas(canvasRef: RefObject<HTMLCanvasElement>, wrapperWidth: number, numberOfLevels: number) {\n  const [ctx, setCtx] = useState<CanvasRenderingContext2D>();\n\n  useEffect(() => {\n    if (!(numberOfLevels && canvasRef.current)) {\n      return;\n    }\n    const ctx = canvasRef.current.getContext('2d')!;\n\n    const height = PIXELS_PER_LEVEL * numberOfLevels;\n    canvasRef.current.width = Math.round(wrapperWidth * window.devicePixelRatio);\n    canvasRef.current.height = Math.round(height);\n    canvasRef.current.style.width = `${wrapperWidth}px`;\n    canvasRef.current.style.height = `${height / window.devicePixelRatio}px`;\n\n    ctx.textBaseline = 'middle';\n    ctx.font = 12 * window.devicePixelRatio + 'px monospace';\n    ctx.strokeStyle = 'white';\n    setCtx(ctx);\n  }, [canvasRef, setCtx, wrapperWidth, numberOfLevels]);\n  return ctx;\n}\n\n// Renders a text inside the node rectangle. It allows setting alignment of the text left or right which takes effect\n// when text is too long to fit in the rectangle.\nfunction renderLabel(\n  ctx: CanvasRenderingContext2D,\n  data: FlameGraphDataContainer,\n  label: string,\n  item: LevelItem,\n  width: number,\n  x: number,\n  y: number,\n  textAlign: TextAlign\n) {\n  ctx.save();\n  ctx.clip(); // so text does not overflow\n  ctx.fillStyle = '#222';\n\n  const displayValue = data.valueDisplayProcessor(item.value);\n  const unit = displayValue.suffix ? displayValue.text + displayValue.suffix : displayValue.text;\n\n  // We only measure name here instead of full label because of how we deal with the units and aligning later.\n  const measure = ctx.measureText(label);\n  const spaceForTextInRect = width - BAR_TEXT_PADDING_LEFT;\n\n  let fullLabel = `${label} (${unit})`;\n  let labelX = Math.max(x, 0) + BAR_TEXT_PADDING_LEFT;\n\n  // We use the desired alignment only if there is not enough space for the text, otherwise we keep left alignment as\n  // that will already show full text.\n  if (measure.width > spaceForTextInRect) {\n    ctx.textAlign = textAlign;\n    // If aligned to the right we don't want to take the space with the unit label as the assumption is user wants to\n    // mainly see the name. This also reflects how pyro/flamegraph works.\n    if (textAlign === 'right') {\n      fullLabel = label;\n      labelX = x + width - BAR_TEXT_PADDING_LEFT;\n    }\n  }\n\n  ctx.fillText(fullLabel, labelX, y + PIXELS_PER_LEVEL / 2 + 2);\n  ctx.restore();\n}\n\n/**\n * Returns the X position of the bar. totalTicks * rangeMin is to adjust for any current zoom. So if we zoom to a\n * section of the graph we align and shift the X coordinates accordingly.\n * @param offset\n * @param totalTicks\n * @param rangeMin\n * @param pixelsPerTick\n */\nexport function getBarX(offset: number, totalTicks: number, rangeMin: number, pixelsPerTick: number) {\n  return (offset - totalTicks * rangeMin) * pixelsPerTick;\n}\n","import { css } from '@emotion/css';\nimport { MouseEvent as ReactMouseEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport * as React from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { PIXELS_PER_LEVEL } from '../constants';\nimport { ClickedItemData, ColorScheme, ColorSchemeDiff, SelectedView, TextAlign } from '../types';\n\nimport FlameGraphContextMenu, { GetExtraContextMenuButtonsFunction } from './FlameGraphContextMenu';\nimport FlameGraphTooltip from './FlameGraphTooltip';\nimport { CollapsedMap, FlameGraphDataContainer, LevelItem } from './dataTransform';\nimport { getBarX, useFlameRender } from './rendering';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  rangeMin: number;\n  rangeMax: number;\n  matchedLabels: Set<string> | undefined;\n  setRangeMin: (range: number) => void;\n  setRangeMax: (range: number) => void;\n  style?: React.CSSProperties;\n  onItemFocused: (data: ClickedItemData) => void;\n  focusedItemData?: ClickedItemData;\n  textAlign: TextAlign;\n  onSandwich: (label: string) => void;\n  colorScheme: ColorScheme | ColorSchemeDiff;\n\n  root: LevelItem;\n  direction: 'children' | 'parents';\n  // Depth in number of levels\n  depth: number;\n\n  totalProfileTicks: number;\n  totalProfileTicksRight?: number;\n  totalViewTicks: number;\n  showFlameGraphOnly?: boolean;\n\n  collapsedMap: CollapsedMap;\n  setCollapsedMap: (collapsedMap: CollapsedMap) => void;\n  collapsing?: boolean;\n  getExtraContextMenuButtons?: GetExtraContextMenuButtonsFunction;\n\n  selectedView: SelectedView;\n  search: string;\n};\n\nconst FlameGraphCanvas = ({\n  data,\n  rangeMin,\n  rangeMax,\n  matchedLabels,\n  setRangeMin,\n  setRangeMax,\n  onItemFocused,\n  focusedItemData,\n  textAlign,\n  onSandwich,\n  colorScheme,\n  totalProfileTicks,\n  totalProfileTicksRight,\n  totalViewTicks,\n  root,\n  direction,\n  depth,\n  showFlameGraphOnly,\n  collapsedMap,\n  setCollapsedMap,\n  collapsing,\n  getExtraContextMenuButtons,\n  selectedView,\n  search,\n}: Props) => {\n  const styles = getStyles();\n\n  const [sizeRef, { width: wrapperWidth }] = useMeasure<HTMLDivElement>();\n  const graphRef = useRef<HTMLCanvasElement>(null);\n  const [tooltipItem, setTooltipItem] = useState<LevelItem>();\n\n  const [clickedItemData, setClickedItemData] = useState<ClickedItemData>();\n\n  useFlameRender({\n    canvasRef: graphRef,\n    colorScheme,\n    data,\n    focusedItemData,\n    root,\n    direction,\n    depth,\n    rangeMax,\n    rangeMin,\n    matchedLabels,\n    textAlign,\n    totalViewTicks,\n    // We need this so that if we have a diff profile and are in sandwich view we still show the same diff colors.\n    totalColorTicks: data.isDiffFlamegraph() ? totalProfileTicks : totalViewTicks,\n    totalTicksRight: totalProfileTicksRight,\n    wrapperWidth,\n    collapsedMap,\n  });\n\n  const onGraphClick = useCallback(\n    (e: ReactMouseEvent<HTMLCanvasElement>) => {\n      setTooltipItem(undefined);\n      const pixelsPerTick = graphRef.current!.clientWidth / totalViewTicks / (rangeMax - rangeMin);\n      const item = convertPixelCoordinatesToBarCoordinates(\n        { x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY },\n        root,\n        direction,\n        depth,\n        pixelsPerTick,\n        totalViewTicks,\n        rangeMin,\n        collapsedMap\n      );\n\n      // if clicking on a block in the canvas\n      if (item) {\n        setClickedItemData({\n          posY: e.clientY,\n          posX: e.clientX,\n          item,\n          label: data.getLabel(item.itemIndexes[0]),\n        });\n      } else {\n        // if clicking on the canvas but there is no block beneath the cursor\n        setClickedItemData(undefined);\n      }\n    },\n    [data, rangeMin, rangeMax, totalViewTicks, root, direction, depth, collapsedMap]\n  );\n\n  const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>();\n  const onGraphMouseMove = useCallback(\n    (e: ReactMouseEvent<HTMLCanvasElement>) => {\n      if (clickedItemData === undefined) {\n        setTooltipItem(undefined);\n        setMousePosition(undefined);\n        const pixelsPerTick = graphRef.current!.clientWidth / totalViewTicks / (rangeMax - rangeMin);\n        const item = convertPixelCoordinatesToBarCoordinates(\n          { x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY },\n          root,\n          direction,\n          depth,\n          pixelsPerTick,\n          totalViewTicks,\n          rangeMin,\n          collapsedMap\n        );\n\n        if (item) {\n          setMousePosition({ x: e.clientX, y: e.clientY });\n          setTooltipItem(item);\n        }\n      }\n    },\n    [rangeMin, rangeMax, totalViewTicks, clickedItemData, setMousePosition, root, direction, depth, collapsedMap]\n  );\n\n  const onGraphMouseLeave = useCallback(() => {\n    setTooltipItem(undefined);\n  }, []);\n\n  // hide context menu if outside the flame graph canvas is clicked\n  useEffect(() => {\n    const handleOnClick = (e: MouseEvent) => {\n      if (\n        e.target instanceof HTMLElement &&\n        e.target.parentElement?.id !== 'flameGraphCanvasContainer_clickOutsideCheck'\n      ) {\n        setClickedItemData(undefined);\n      }\n    };\n    window.addEventListener('click', handleOnClick);\n    return () => window.removeEventListener('click', handleOnClick);\n  }, [setClickedItemData]);\n\n  return (\n    <div className={styles.graph}>\n      <div className={styles.canvasWrapper} id=\"flameGraphCanvasContainer_clickOutsideCheck\" ref={sizeRef}>\n        <canvas\n          ref={graphRef}\n          data-testid=\"flameGraph\"\n          onClick={onGraphClick}\n          onMouseMove={onGraphMouseMove}\n          onMouseLeave={onGraphMouseLeave}\n        />\n      </div>\n      <FlameGraphTooltip\n        position={mousePosition}\n        item={tooltipItem}\n        data={data}\n        totalTicks={totalViewTicks}\n        collapseConfig={tooltipItem ? collapsedMap.get(tooltipItem) : undefined}\n      />\n      {!showFlameGraphOnly && clickedItemData && (\n        <FlameGraphContextMenu\n          data={data}\n          itemData={clickedItemData}\n          collapsing={collapsing}\n          collapseConfig={collapsedMap.get(clickedItemData.item)}\n          onMenuItemClick={() => {\n            setClickedItemData(undefined);\n          }}\n          onItemFocus={() => {\n            setRangeMin(clickedItemData.item.start / totalViewTicks);\n            setRangeMax((clickedItemData.item.start + clickedItemData.item.value) / totalViewTicks);\n            onItemFocused(clickedItemData);\n          }}\n          onSandwich={() => {\n            onSandwich(data.getLabel(clickedItemData.item.itemIndexes[0]));\n          }}\n          onExpandGroup={() => {\n            setCollapsedMap(collapsedMap.setCollapsedStatus(clickedItemData.item, false));\n          }}\n          onCollapseGroup={() => {\n            setCollapsedMap(collapsedMap.setCollapsedStatus(clickedItemData.item, true));\n          }}\n          onExpandAllGroups={() => {\n            setCollapsedMap(collapsedMap.setAllCollapsedStatus(false));\n          }}\n          onCollapseAllGroups={() => {\n            setCollapsedMap(collapsedMap.setAllCollapsedStatus(true));\n          }}\n          allGroupsCollapsed={Array.from(collapsedMap.values()).every((i) => i.collapsed)}\n          allGroupsExpanded={Array.from(collapsedMap.values()).every((i) => !i.collapsed)}\n          getExtraContextMenuButtons={getExtraContextMenuButtons}\n          selectedView={selectedView}\n          search={search}\n        />\n      )}\n    </div>\n  );\n};\n\nconst getStyles = () => ({\n  graph: css({\n    label: 'graph',\n    overflow: 'auto',\n    flexGrow: 1,\n    flexBasis: '50%',\n  }),\n  canvasContainer: css({\n    label: 'canvasContainer',\n    display: 'flex',\n  }),\n  canvasWrapper: css({\n    label: 'canvasWrapper',\n    cursor: 'pointer',\n    flex: 1,\n    overflow: 'hidden',\n  }),\n  sandwichMarker: css({\n    label: 'sandwichMarker',\n    writingMode: 'vertical-lr',\n    transform: 'rotate(180deg)',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  }),\n  sandwichMarkerIcon: css({\n    label: 'sandwichMarkerIcon',\n    verticalAlign: 'baseline',\n  }),\n});\n\nexport const convertPixelCoordinatesToBarCoordinates = (\n  // position relative to the start of the graph\n  pos: { x: number; y: number },\n  root: LevelItem,\n  direction: 'children' | 'parents',\n  depth: number,\n  pixelsPerTick: number,\n  totalTicks: number,\n  rangeMin: number,\n  collapsedMap: CollapsedMap\n): LevelItem | undefined => {\n  let next: LevelItem | undefined = root;\n  let currentLevel = direction === 'children' ? 0 : depth - 1;\n  const levelIndex = Math.floor(pos.y / (PIXELS_PER_LEVEL / window.devicePixelRatio));\n  let found = undefined;\n\n  while (next) {\n    const node: LevelItem = next;\n    next = undefined;\n    if (currentLevel === levelIndex) {\n      found = node;\n      break;\n    }\n\n    const nextList = direction === 'children' ? node.children : node.parents || [];\n\n    for (const child of nextList) {\n      const xStart = getBarX(child.start, totalTicks, rangeMin, pixelsPerTick);\n      const xEnd = getBarX(child.start + child.value, totalTicks, rangeMin, pixelsPerTick);\n      if (xStart <= pos.x && pos.x < xEnd) {\n        next = child;\n        // Check if item is a collapsed item. if so also check if the item is the first collapsed item in the chain,\n        // which we render, or a child which we don't render. If it's a child in the chain then don't increase the\n        // level end effectively skip it.\n        const collapsedConfig = collapsedMap.get(child);\n        if (!collapsedConfig || !collapsedConfig.collapsed || collapsedConfig.items[0] === child) {\n          currentLevel = currentLevel + (direction === 'children' ? 1 : -1);\n        }\n        break;\n      }\n    }\n  }\n\n  return found;\n};\n\nexport default FlameGraphCanvas;\n","import { css } from '@emotion/css';\nimport { memo, ReactNode } from 'react';\n\nimport { getValueFormat, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, IconButton, useStyles2 } from '@grafana/ui';\n\nimport { ClickedItemData } from '../types';\n\nimport { FlameGraphDataContainer } from './dataTransform';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  totalTicks: number;\n  onFocusPillClick: () => void;\n  onSandwichPillClick: () => void;\n  focusedItem?: ClickedItemData;\n  sandwichedLabel?: string;\n};\n\nconst FlameGraphMetadata = memo(\n  ({ data, focusedItem, totalTicks, sandwichedLabel, onFocusPillClick, onSandwichPillClick }: Props) => {\n    const styles = useStyles2(getStyles);\n    const parts: ReactNode[] = [];\n    const ticksVal = getValueFormat('short')(totalTicks);\n\n    const displayValue = data.valueDisplayProcessor(totalTicks);\n    let unitValue = displayValue.text + displayValue.suffix;\n    const unitTitle = data.getUnitTitle();\n    if (unitTitle === 'Count') {\n      if (!displayValue.suffix) {\n        // Makes sure we don't show 123undefined or something like that if suffix isn't defined\n        unitValue = displayValue.text;\n      }\n    }\n\n    parts.push(\n      <div className={styles.metadataPill} key={'default'}>\n        {unitValue} | {ticksVal.text}\n        {ticksVal.suffix} samples ({unitTitle})\n      </div>\n    );\n\n    if (sandwichedLabel) {\n      parts.push(\n        <span key={'sandwich'}>\n          <Icon size={'sm'} name={'angle-right'} />\n          <div className={styles.metadataPill}>\n            <Icon size={'sm'} name={'gf-show-context'} />{' '}\n            <span className={styles.metadataPillName}>\n              {sandwichedLabel.substring(sandwichedLabel.lastIndexOf('/') + 1)}\n            </span>\n            <IconButton\n              className={styles.pillCloseButton}\n              name={'times'}\n              size={'sm'}\n              onClick={onSandwichPillClick}\n              tooltip={'Remove sandwich view'}\n              aria-label={'Remove sandwich view'}\n            />\n          </div>\n        </span>\n      );\n    }\n\n    if (focusedItem) {\n      const percentValue = Math.round(10000 * (focusedItem.item.value / totalTicks)) / 100;\n      parts.push(\n        <span key={'focus'}>\n          <Icon size={'sm'} name={'angle-right'} />\n          <div className={styles.metadataPill}>\n            <Icon size={'sm'} name={'eye'} /> {percentValue}% of total\n            <IconButton\n              className={styles.pillCloseButton}\n              name={'times'}\n              size={'sm'}\n              onClick={onFocusPillClick}\n              tooltip={'Remove focus'}\n              aria-label={'Remove focus'}\n            />\n          </div>\n        </span>\n      );\n    }\n\n    return <div className={styles.metadata}>{parts}</div>;\n  }\n);\n\nFlameGraphMetadata.displayName = 'FlameGraphMetadata';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metadataPill: css({\n    label: 'metadataPill',\n    display: 'inline-flex',\n    alignItems: 'center',\n    background: theme.colors.background.secondary,\n    borderRadius: theme.shape.borderRadius(8),\n    padding: theme.spacing(0.5, 1),\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.fontWeightMedium,\n    lineHeight: theme.typography.bodySmall.lineHeight,\n    color: theme.colors.text.secondary,\n  }),\n  pillCloseButton: css({\n    label: 'pillCloseButton',\n    verticalAlign: 'text-bottom',\n    margin: theme.spacing(0, 0.5),\n  }),\n  metadata: css({\n    margin: '8px 0',\n    textAlign: 'center',\n  }),\n  metadataPillName: css({\n    label: 'metadataPillName',\n    maxWidth: '200px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    marginLeft: theme.spacing(0.5),\n  }),\n});\n\nexport default FlameGraphMetadata;\n","// This component is based on logic from the flamebearer project\n// https://github.com/mapbox/flamebearer\n\n// ISC License\n\n// Copyright (c) 2018, Mapbox\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n// INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\nimport { css, cx } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { Icon } from '@grafana/ui';\n\nimport { PIXELS_PER_LEVEL } from '../constants';\nimport { ClickedItemData, ColorScheme, ColorSchemeDiff, SelectedView, TextAlign } from '../types';\n\nimport FlameGraphCanvas from './FlameGraphCanvas';\nimport { GetExtraContextMenuButtonsFunction } from './FlameGraphContextMenu';\nimport FlameGraphMetadata from './FlameGraphMetadata';\nimport { CollapsedMap, FlameGraphDataContainer, LevelItem } from './dataTransform';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  rangeMin: number;\n  rangeMax: number;\n  matchedLabels?: Set<string>;\n  setRangeMin: (range: number) => void;\n  setRangeMax: (range: number) => void;\n  style?: React.CSSProperties;\n  onItemFocused: (data: ClickedItemData) => void;\n  focusedItemData?: ClickedItemData;\n  textAlign: TextAlign;\n  sandwichItem?: string;\n  onSandwich: (label: string) => void;\n  onFocusPillClick: () => void;\n  onSandwichPillClick: () => void;\n  colorScheme: ColorScheme | ColorSchemeDiff;\n  showFlameGraphOnly?: boolean;\n  getExtraContextMenuButtons?: GetExtraContextMenuButtonsFunction;\n  collapsing?: boolean;\n  selectedView: SelectedView;\n  search: string;\n  collapsedMap: CollapsedMap;\n  setCollapsedMap: (collapsedMap: CollapsedMap) => void;\n};\n\nconst FlameGraph = ({\n  data,\n  rangeMin,\n  rangeMax,\n  matchedLabels,\n  setRangeMin,\n  setRangeMax,\n  onItemFocused,\n  focusedItemData,\n  textAlign,\n  onSandwich,\n  sandwichItem,\n  onFocusPillClick,\n  onSandwichPillClick,\n  colorScheme,\n  showFlameGraphOnly,\n  getExtraContextMenuButtons,\n  collapsing,\n  selectedView,\n  search,\n  collapsedMap,\n  setCollapsedMap,\n}: Props) => {\n  const styles = getStyles();\n\n  const [levels, setLevels] = useState<LevelItem[][]>();\n  const [levelsCallers, setLevelsCallers] = useState<LevelItem[][]>();\n  const [totalProfileTicks, setTotalProfileTicks] = useState<number>(0);\n  const [totalProfileTicksRight, setTotalProfileTicksRight] = useState<number>();\n  const [totalViewTicks, setTotalViewTicks] = useState<number>(0);\n\n  useEffect(() => {\n    if (data) {\n      let levels = data.getLevels();\n      let totalProfileTicks = levels.length ? levels[0][0].value : 0;\n      let totalProfileTicksRight = levels.length ? levels[0][0].valueRight : undefined;\n      let totalViewTicks = totalProfileTicks;\n      let levelsCallers = undefined;\n\n      if (sandwichItem) {\n        const [callers, callees] = data.getSandwichLevels(sandwichItem);\n        levels = callees;\n        levelsCallers = callers;\n        // We need this separate as in case of diff profile we want to compute diff colors based on the original ticks.\n        totalViewTicks = callees[0]?.[0]?.value ?? 0;\n      }\n      setLevels(levels);\n      setLevelsCallers(levelsCallers);\n      setTotalProfileTicks(totalProfileTicks);\n      setTotalProfileTicksRight(totalProfileTicksRight);\n      setTotalViewTicks(totalViewTicks);\n    }\n  }, [data, sandwichItem]);\n\n  if (!levels) {\n    return null;\n  }\n\n  const commonCanvasProps = {\n    data,\n    rangeMin,\n    rangeMax,\n    matchedLabels,\n    setRangeMin,\n    setRangeMax,\n    onItemFocused,\n    focusedItemData,\n    textAlign,\n    onSandwich,\n    colorScheme,\n    totalProfileTicks,\n    totalProfileTicksRight,\n    totalViewTicks,\n    showFlameGraphOnly,\n    collapsedMap,\n    setCollapsedMap,\n    getExtraContextMenuButtons,\n    collapsing,\n    search,\n    selectedView,\n  };\n  const canvas = levelsCallers ? (\n    <>\n      <div className={styles.sandwichCanvasWrapper}>\n        <div className={styles.sandwichMarker}>\n          Callers\n          <Icon className={styles.sandwichMarkerIcon} name={'arrow-down'} />\n        </div>\n        <FlameGraphCanvas\n          {...commonCanvasProps}\n          root={levelsCallers[levelsCallers.length - 1][0]}\n          depth={levelsCallers.length}\n          direction={'parents'}\n          // We do not support collapsing in sandwich view for now.\n          collapsing={false}\n        />\n      </div>\n\n      <div className={styles.sandwichCanvasWrapper}>\n        <div className={cx(styles.sandwichMarker, styles.sandwichMarkerCalees)}>\n          <Icon className={styles.sandwichMarkerIcon} name={'arrow-up'} />\n          Callees\n        </div>\n        <FlameGraphCanvas\n          {...commonCanvasProps}\n          root={levels[0][0]}\n          depth={levels.length}\n          direction={'children'}\n          collapsing={false}\n        />\n      </div>\n    </>\n  ) : (\n    <FlameGraphCanvas {...commonCanvasProps} root={levels[0][0]} depth={levels.length} direction={'children'} />\n  );\n\n  return (\n    <div className={styles.graph}>\n      <FlameGraphMetadata\n        data={data}\n        focusedItem={focusedItemData}\n        sandwichedLabel={sandwichItem}\n        totalTicks={totalViewTicks}\n        onFocusPillClick={onFocusPillClick}\n        onSandwichPillClick={onSandwichPillClick}\n      />\n      {canvas}\n    </div>\n  );\n};\n\nconst getStyles = () => ({\n  graph: css({\n    label: 'graph',\n    overflow: 'auto',\n    flexGrow: 1,\n    flexBasis: '50%',\n  }),\n  sandwichCanvasWrapper: css({\n    label: 'sandwichCanvasWrapper',\n    display: 'flex',\n    marginBottom: `${PIXELS_PER_LEVEL / window.devicePixelRatio}px`,\n  }),\n  sandwichMarker: css({\n    label: 'sandwichMarker',\n    writingMode: 'vertical-lr',\n    transform: 'rotate(180deg)',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  }),\n  sandwichMarkerCalees: css({\n    label: 'sandwichMarkerCalees',\n    textAlign: 'right',\n  }),\n  sandwichMarkerIcon: css({\n    label: 'sandwichMarkerIcon',\n    verticalAlign: 'baseline',\n  }),\n});\n\nexport default FlameGraph;\n","import { css, cx } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport usePrevious from 'react-use/lib/usePrevious';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Button, ButtonGroup, Dropdown, Input, Menu, RadioButtonGroup, useStyles2 } from '@grafana/ui';\n\nimport { byPackageGradient, byValueGradient, diffColorBlindGradient, diffDefaultGradient } from './FlameGraph/colors';\nimport { CollapsedMap } from './FlameGraph/dataTransform';\nimport { MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH } from './constants';\nimport { ColorScheme, ColorSchemeDiff, SelectedView, TextAlign } from './types';\n\ntype Props = {\n  search: string;\n  setSearch: (search: string) => void;\n  selectedView: SelectedView;\n  setSelectedView: (view: SelectedView) => void;\n  containerWidth: number;\n  onReset: () => void;\n  textAlign: TextAlign;\n  onTextAlignChange: (align: TextAlign) => void;\n  showResetButton: boolean;\n  colorScheme: ColorScheme | ColorSchemeDiff;\n  onColorSchemeChange: (colorScheme: ColorScheme | ColorSchemeDiff) => void;\n  stickyHeader: boolean;\n  vertical?: boolean;\n  isDiffMode: boolean;\n  setCollapsedMap: (collapsedMap: CollapsedMap) => void;\n  collapsedMap: CollapsedMap;\n\n  extraHeaderElements?: React.ReactNode;\n};\n\nconst FlameGraphHeader = ({\n  search,\n  setSearch,\n  selectedView,\n  setSelectedView,\n  containerWidth,\n  onReset,\n  textAlign,\n  onTextAlignChange,\n  showResetButton,\n  colorScheme,\n  onColorSchemeChange,\n  stickyHeader,\n  extraHeaderElements,\n  vertical,\n  isDiffMode,\n  setCollapsedMap,\n  collapsedMap,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n  const [localSearch, setLocalSearch] = useSearchInput(search, setSearch);\n\n  const suffix =\n    localSearch !== '' ? (\n      <Button\n        icon=\"times\"\n        fill=\"text\"\n        size=\"sm\"\n        onClick={() => {\n          // We could set only one and wait them to sync but there is no need to debounce this.\n          setSearch('');\n          setLocalSearch('');\n        }}\n      >\n        Clear\n      </Button>\n    ) : null;\n\n  return (\n    <div className={cx(styles.header, { [styles.stickyHeader]: stickyHeader })}>\n      <div className={styles.inputContainer}>\n        <Input\n          value={localSearch || ''}\n          onChange={(v) => {\n            setLocalSearch(v.currentTarget.value);\n          }}\n          placeholder={'Search...'}\n          suffix={suffix}\n        />\n      </div>\n\n      <div className={styles.rightContainer}>\n        {showResetButton && (\n          <Button\n            variant={'secondary'}\n            fill={'outline'}\n            size={'sm'}\n            icon={'history-alt'}\n            tooltip={'Reset focus and sandwich state'}\n            onClick={() => {\n              onReset();\n            }}\n            className={styles.buttonSpacing}\n            aria-label={'Reset focus and sandwich state'}\n          />\n        )}\n        <ColorSchemeButton value={colorScheme} onChange={onColorSchemeChange} isDiffMode={isDiffMode} />\n        <ButtonGroup className={styles.buttonSpacing}>\n          <Button\n            variant={'secondary'}\n            fill={'outline'}\n            size={'sm'}\n            tooltip={'Expand all groups'}\n            onClick={() => {\n              setCollapsedMap(collapsedMap.setAllCollapsedStatus(false));\n            }}\n            aria-label={'Expand all groups'}\n            icon={'angle-double-down'}\n            disabled={selectedView === SelectedView.TopTable}\n          />\n          <Button\n            variant={'secondary'}\n            fill={'outline'}\n            size={'sm'}\n            tooltip={'Collapse all groups'}\n            onClick={() => {\n              setCollapsedMap(collapsedMap.setAllCollapsedStatus(true));\n            }}\n            aria-label={'Collapse all groups'}\n            icon={'angle-double-up'}\n            disabled={selectedView === SelectedView.TopTable}\n          />\n        </ButtonGroup>\n        <RadioButtonGroup<TextAlign>\n          size=\"sm\"\n          disabled={selectedView === SelectedView.TopTable}\n          options={alignOptions}\n          value={textAlign}\n          onChange={onTextAlignChange}\n          className={styles.buttonSpacing}\n        />\n        <RadioButtonGroup<SelectedView>\n          size=\"sm\"\n          options={getViewOptions(containerWidth, vertical)}\n          value={selectedView}\n          onChange={setSelectedView}\n        />\n        {extraHeaderElements && <div className={styles.extraElements}>{extraHeaderElements}</div>}\n      </div>\n    </div>\n  );\n};\n\ntype ColorSchemeButtonProps = {\n  value: ColorScheme | ColorSchemeDiff;\n  onChange: (colorScheme: ColorScheme | ColorSchemeDiff) => void;\n  isDiffMode: boolean;\n};\nfunction ColorSchemeButton(props: ColorSchemeButtonProps) {\n  // TODO: probably create separate getStyles\n  const styles = useStyles2(getStyles);\n  let menu = (\n    <Menu>\n      <Menu.Item label=\"By package name\" onClick={() => props.onChange(ColorScheme.PackageBased)} />\n      <Menu.Item label=\"By value\" onClick={() => props.onChange(ColorScheme.ValueBased)} />\n    </Menu>\n  );\n\n  // Show a bit different gradient as a way to indicate selected value\n  const colorDotStyle =\n    {\n      [ColorScheme.ValueBased]: styles.colorDotByValue,\n      [ColorScheme.PackageBased]: styles.colorDotByPackage,\n      [ColorSchemeDiff.DiffColorBlind]: styles.colorDotDiffColorBlind,\n      [ColorSchemeDiff.Default]: styles.colorDotDiffDefault,\n    }[props.value] || styles.colorDotByValue;\n\n  let contents = <span className={cx(styles.colorDot, colorDotStyle)} />;\n\n  if (props.isDiffMode) {\n    menu = (\n      <Menu>\n        <Menu.Item label=\"Default (green to red)\" onClick={() => props.onChange(ColorSchemeDiff.Default)} />\n        <Menu.Item label=\"Color blind (blue to red)\" onClick={() => props.onChange(ColorSchemeDiff.DiffColorBlind)} />\n      </Menu>\n    );\n\n    contents = (\n      <div className={cx(styles.colorDotDiff, colorDotStyle)}>\n        <div>-100% (removed)</div>\n        <div>0%</div>\n        <div>+100% (added)</div>\n      </div>\n    );\n  }\n\n  return (\n    <Dropdown overlay={menu}>\n      <Button\n        variant={'secondary'}\n        fill={'outline'}\n        size={'sm'}\n        tooltip={'Change color scheme'}\n        onClick={() => {}}\n        className={styles.buttonSpacing}\n        aria-label={'Change color scheme'}\n      >\n        {contents}\n      </Button>\n    </Dropdown>\n  );\n}\n\nconst alignOptions: Array<SelectableValue<TextAlign>> = [\n  { value: 'left', description: 'Align text left', icon: 'align-left' },\n  { value: 'right', description: 'Align text right', icon: 'align-right' },\n];\n\nfunction getViewOptions(width: number, vertical?: boolean): Array<SelectableValue<SelectedView>> {\n  let viewOptions: Array<{ value: SelectedView; label: string; description: string }> = [\n    { value: SelectedView.TopTable, label: 'Top Table', description: 'Only show top table' },\n    { value: SelectedView.FlameGraph, label: 'Flame Graph', description: 'Only show flame graph' },\n  ];\n\n  if (width >= MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH || vertical) {\n    viewOptions.push({\n      value: SelectedView.Both,\n      label: 'Both',\n      description: 'Show both the top table and flame graph',\n    });\n  }\n\n  return viewOptions;\n}\n\nfunction useSearchInput(\n  search: string,\n  setSearch: (search: string) => void\n): [string | undefined, (search: string) => void] {\n  const [localSearchState, setLocalSearchState] = useState(search);\n  const prevSearch = usePrevious(search);\n\n  // Debouncing cause changing parent search triggers rerender on both the flamegraph and table\n  useDebounce(\n    () => {\n      setSearch(localSearchState);\n    },\n    250,\n    [localSearchState]\n  );\n\n  // Make sure we still handle updates from parent (from clicking on a table item for example). We check if the parent\n  // search value changed to something that isn't our local value.\n  useEffect(() => {\n    if (prevSearch !== search && search !== localSearchState) {\n      setLocalSearchState(search);\n    }\n  }, [search, prevSearch, localSearchState]);\n\n  return [localSearchState, setLocalSearchState];\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  header: css({\n    label: 'header',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    width: '100%',\n    top: 0,\n    gap: theme.spacing(1),\n    marginTop: theme.spacing(1),\n  }),\n  stickyHeader: css({\n    zIndex: theme.zIndex.navbarFixed,\n    position: 'sticky',\n    background: theme.colors.background.primary,\n  }),\n  inputContainer: css({\n    label: 'inputContainer',\n    flexGrow: 1,\n    minWidth: '150px',\n    maxWidth: '350px',\n  }),\n  rightContainer: css({\n    label: 'rightContainer',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n  }),\n  buttonSpacing: css({\n    label: 'buttonSpacing',\n    marginRight: theme.spacing(1),\n  }),\n  resetButton: css({\n    label: 'resetButton',\n    display: 'flex',\n    marginRight: theme.spacing(2),\n  }),\n  resetButtonIconWrapper: css({\n    label: 'resetButtonIcon',\n    padding: '0 5px',\n    color: theme.colors.text.disabled,\n  }),\n  colorDot: css({\n    label: 'colorDot',\n    display: 'inline-block',\n    width: '10px',\n    height: '10px',\n    // eslint-disable-next-line @grafana/no-border-radius-literal\n    borderRadius: '50%',\n  }),\n  colorDotDiff: css({\n    label: 'colorDotDiff',\n    display: 'flex',\n    width: '200px',\n    height: '12px',\n    color: 'white',\n    fontSize: 9,\n    lineHeight: 1.3,\n    fontWeight: 300,\n    justifyContent: 'space-between',\n    padding: '0 2px',\n    // We have a specific sizing for this so probably makes sense to use hardcoded value here\n    // eslint-disable-next-line @grafana/no-border-radius-literal\n    borderRadius: '2px',\n  }),\n  colorDotByValue: css({\n    label: 'colorDotByValue',\n    background: byValueGradient,\n  }),\n  colorDotByPackage: css({\n    label: 'colorDotByPackage',\n    background: byPackageGradient,\n  }),\n  colorDotDiffDefault: css({\n    label: 'colorDotDiffDefault',\n    background: diffDefaultGradient,\n  }),\n  colorDotDiffColorBlind: css({\n    label: 'colorDotDiffColorBlind',\n    background: diffColorBlindGradient,\n  }),\n  extraElements: css({\n    label: 'extraElements',\n    marginLeft: theme.spacing(1),\n  }),\n});\n\nexport default FlameGraphHeader;\n","import { css } from '@emotion/css';\nimport { memo, useMemo, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport {\n  applyFieldOverrides,\n  DataFrame,\n  DataLinkClickEvent,\n  Field,\n  FieldType,\n  GrafanaTheme2,\n  MappingType,\n} from '@grafana/data';\nimport {\n  IconButton,\n  Table,\n  TableCellDisplayMode,\n  TableCustomCellOptions,\n  TableFieldOptions,\n  TableSortByFieldState,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\n\nimport { diffColorBlindColors, diffDefaultColors } from '../FlameGraph/colors';\nimport { FlameGraphDataContainer } from '../FlameGraph/dataTransform';\nimport { TOP_TABLE_COLUMN_WIDTH } from '../constants';\nimport { ColorScheme, ColorSchemeDiff, TableData } from '../types';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  onSymbolClick: (symbol: string) => void;\n  // This is used for highlighting the search button in case there is exact match.\n  search?: string;\n  // We use these to filter out rows in the table if users is doing text search.\n  matchedLabels?: Set<string>;\n  sandwichItem?: string;\n  onSearch: (str: string) => void;\n  onSandwich: (str?: string) => void;\n  onTableSort?: (sort: string) => void;\n  colorScheme: ColorScheme | ColorSchemeDiff;\n};\n\nconst FlameGraphTopTableContainer = memo(\n  ({\n    data,\n    onSymbolClick,\n    search,\n    matchedLabels,\n    onSearch,\n    sandwichItem,\n    onSandwich,\n    onTableSort,\n    colorScheme,\n  }: Props) => {\n    const table = useMemo(() => {\n      // Group the data by label, we show only one row per label and sum the values\n      // TODO: should be by filename + funcName + linenumber?\n      let filteredTable: { [key: string]: TableData } = {};\n      for (let i = 0; i < data.data.length; i++) {\n        const value = data.getValue(i);\n        const valueRight = data.getValueRight(i);\n        const self = data.getSelf(i);\n        const label = data.getLabel(i);\n\n        // If user is doing text search we filter out labels in the same way we highlight them in flame graph.\n        if (!matchedLabels || matchedLabels.has(label)) {\n          filteredTable[label] = filteredTable[label] || {};\n          filteredTable[label].self = filteredTable[label].self ? filteredTable[label].self + self : self;\n          filteredTable[label].total = filteredTable[label].total ? filteredTable[label].total + value : value;\n          filteredTable[label].totalRight = filteredTable[label].totalRight\n            ? filteredTable[label].totalRight + valueRight\n            : valueRight;\n        }\n      }\n      return filteredTable;\n    }, [data, matchedLabels]);\n\n    const styles = useStyles2(getStyles);\n    const theme = useTheme2();\n\n    const [sort, setSort] = useState<TableSortByFieldState[]>([{ displayName: 'Self', desc: true }]);\n\n    return (\n      <div className={styles.topTableContainer} data-testid=\"topTable\">\n        <AutoSizer style={{ width: '100%' }}>\n          {({ width, height }) => {\n            if (width < 3 || height < 3) {\n              return null;\n            }\n\n            const frame = buildTableDataFrame(\n              data,\n              table,\n              width,\n              onSymbolClick,\n              onSearch,\n              onSandwich,\n              theme,\n              colorScheme,\n              search,\n              sandwichItem\n            );\n            return (\n              <Table\n                initialSortBy={sort}\n                onSortByChange={(s) => {\n                  if (s && s.length) {\n                    onTableSort?.(s[0].displayName + '_' + (s[0].desc ? 'desc' : 'asc'));\n                  }\n                  setSort(s);\n                }}\n                data={frame}\n                width={width}\n                height={height}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n);\n\nFlameGraphTopTableContainer.displayName = 'FlameGraphTopTableContainer';\n\nfunction buildTableDataFrame(\n  data: FlameGraphDataContainer,\n  table: { [key: string]: TableData },\n  width: number,\n  onSymbolClick: (str: string) => void,\n  onSearch: (str: string) => void,\n  onSandwich: (str?: string) => void,\n  theme: GrafanaTheme2,\n  colorScheme: ColorScheme | ColorSchemeDiff,\n  search?: string,\n  sandwichItem?: string\n): DataFrame {\n  const actionField: Field = createActionField(onSandwich, onSearch, search, sandwichItem);\n\n  const symbolField: Field = {\n    type: FieldType.string,\n    name: 'Symbol',\n    values: [],\n    config: {\n      custom: { width: width - actionColumnWidth - TOP_TABLE_COLUMN_WIDTH * 2 },\n      links: [\n        {\n          title: 'Highlight symbol',\n          url: '',\n          onClick: (e: DataLinkClickEvent) => {\n            const field: Field = e.origin.field;\n            const value = field.values[e.origin.rowIndex];\n            onSymbolClick(value);\n          },\n        },\n      ],\n    },\n  };\n\n  let frame;\n\n  if (data.isDiffFlamegraph()) {\n    symbolField.config.custom.width = width - actionColumnWidth - TOP_TABLE_COLUMN_WIDTH * 3;\n\n    const baselineField = createNumberField('Baseline', 'percent');\n    const comparisonField = createNumberField('Comparison', 'percent');\n    const diffField = createNumberField('Diff', 'percent');\n    diffField.config.custom.cellOptions.type = TableCellDisplayMode.ColorText;\n\n    const [removeColor, addColor] =\n      colorScheme === ColorSchemeDiff.DiffColorBlind\n        ? [diffColorBlindColors[0], diffColorBlindColors[2]]\n        : [diffDefaultColors[0], diffDefaultColors[2]];\n\n    diffField.config.mappings = [\n      { type: MappingType.ValueToText, options: { [Infinity]: { text: 'new', color: addColor } } },\n      { type: MappingType.ValueToText, options: { [-100]: { text: 'removed', color: removeColor } } },\n      { type: MappingType.RangeToText, options: { from: 0, to: Infinity, result: { color: addColor } } },\n      { type: MappingType.RangeToText, options: { from: -Infinity, to: 0, result: { color: removeColor } } },\n    ];\n\n    // For this we don't really consider sandwich view even though you can switch it on.\n    const levels = data.getLevels();\n    const totalTicks = levels.length ? levels[0][0].value : 0;\n    const totalTicksRight = levels.length ? levels[0][0].valueRight : undefined;\n\n    for (let key in table) {\n      actionField.values.push(null);\n      symbolField.values.push(key);\n\n      const ticksLeft = table[key].total;\n      const ticksRight = table[key].totalRight;\n\n      // We are iterating over table of the data so totalTicksRight needs to be defined\n      const totalTicksLeft = totalTicks - totalTicksRight!;\n\n      const percentageLeft = Math.round((10000 * ticksLeft) / totalTicksLeft) / 100;\n      const percentageRight = Math.round((10000 * ticksRight) / totalTicksRight!) / 100;\n\n      const diff = ((percentageRight - percentageLeft) / percentageLeft) * 100;\n\n      diffField.values.push(diff);\n      baselineField.values.push(percentageLeft);\n      comparisonField.values.push(percentageRight);\n    }\n\n    frame = {\n      fields: [actionField, symbolField, baselineField, comparisonField, diffField],\n      length: symbolField.values.length,\n    };\n  } else {\n    const selfField = createNumberField('Self', data.selfField.config.unit);\n    const totalField = createNumberField('Total', data.valueField.config.unit);\n\n    for (let key in table) {\n      actionField.values.push(null);\n      symbolField.values.push(key);\n      selfField.values.push(table[key].self);\n      totalField.values.push(table[key].total);\n    }\n\n    frame = { fields: [actionField, symbolField, selfField, totalField], length: symbolField.values.length };\n  }\n\n  const dataFrames = applyFieldOverrides({\n    data: [frame],\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    replaceVariables: (value: string) => value,\n    theme,\n  });\n\n  return dataFrames[0];\n}\n\nfunction createNumberField(name: string, unit?: string): Field {\n  const tableFieldOptions: TableFieldOptions = {\n    width: TOP_TABLE_COLUMN_WIDTH,\n    align: 'auto',\n    inspect: false,\n    cellOptions: { type: TableCellDisplayMode.Auto },\n  };\n\n  return {\n    type: FieldType.number,\n    name,\n    values: [],\n    config: {\n      unit,\n      custom: tableFieldOptions,\n    },\n  };\n}\n\nconst actionColumnWidth = 61;\n\nfunction createActionField(\n  onSandwich: (str?: string) => void,\n  onSearch: (str: string) => void,\n  search?: string,\n  sandwichItem?: string\n): Field {\n  const options: TableCustomCellOptions = {\n    type: TableCellDisplayMode.Custom,\n    cellComponent: (props) => {\n      return (\n        <ActionCell\n          frame={props.frame}\n          onSandwich={onSandwich}\n          onSearch={onSearch}\n          search={search}\n          sandwichItem={sandwichItem}\n          rowIndex={props.rowIndex}\n        />\n      );\n    },\n  };\n\n  const actionFieldTableConfig: TableFieldOptions = {\n    filterable: false,\n    width: actionColumnWidth,\n    hideHeader: true,\n    inspect: false,\n    align: 'auto',\n    cellOptions: options,\n  };\n\n  return {\n    type: FieldType.number,\n    name: 'actions',\n    values: [],\n    config: {\n      custom: actionFieldTableConfig,\n    },\n  };\n}\n\ntype ActionCellProps = {\n  frame: DataFrame;\n  rowIndex: number;\n  search?: string;\n  sandwichItem?: string;\n  onSearch: (symbol: string) => void;\n  onSandwich: (symbol: string) => void;\n};\n\nfunction ActionCell(props: ActionCellProps) {\n  const styles = getStylesActionCell();\n  const symbol = props.frame.fields.find((f: Field) => f.name === 'Symbol')?.values[props.rowIndex];\n  const isSearched = props.search === symbol;\n  const isSandwiched = props.sandwichItem === symbol;\n\n  return (\n    <div className={styles.actionCellWrapper}>\n      <IconButton\n        className={styles.actionCellButton}\n        name={'search'}\n        variant={isSearched ? 'primary' : 'secondary'}\n        tooltip={isSearched ? 'Clear from search' : 'Search for symbol'}\n        aria-label={isSearched ? 'Clear from search' : 'Search for symbol'}\n        onClick={() => {\n          props.onSearch(isSearched ? '' : symbol);\n        }}\n      />\n      <IconButton\n        className={styles.actionCellButton}\n        name={'gf-show-context'}\n        tooltip={isSandwiched ? 'Remove from sandwich view' : 'Show in sandwich view'}\n        variant={isSandwiched ? 'primary' : 'secondary'}\n        aria-label={isSandwiched ? 'Remove from sandwich view' : 'Show in sandwich view'}\n        onClick={() => {\n          props.onSandwich(isSandwiched ? undefined : symbol);\n        }}\n      />\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    topTableContainer: css({\n      label: 'topTableContainer',\n      padding: theme.spacing(1),\n      backgroundColor: theme.colors.background.secondary,\n      height: '100%',\n    }),\n  };\n};\n\nconst getStylesActionCell = () => {\n  return {\n    actionCellWrapper: css({\n      label: 'actionCellWrapper',\n      display: 'flex',\n      height: '24px',\n    }),\n    actionCellButton: css({\n      label: 'actionCellButton',\n      marginRight: 0,\n      width: '24px',\n    }),\n  };\n};\n\nexport default FlameGraphTopTableContainer;\n","import { css } from '@emotion/css';\nimport uFuzzy from '@leeoniya/ufuzzy';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as React from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { ThemeContext } from '@grafana/ui';\n\nimport FlameGraph from './FlameGraph/FlameGraph';\nimport { GetExtraContextMenuButtonsFunction } from './FlameGraph/FlameGraphContextMenu';\nimport { CollapsedMap, FlameGraphDataContainer } from './FlameGraph/dataTransform';\nimport FlameGraphHeader from './FlameGraphHeader';\nimport FlameGraphTopTableContainer from './TopTable/FlameGraphTopTableContainer';\nimport { MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH } from './constants';\nimport { ClickedItemData, ColorScheme, ColorSchemeDiff, SelectedView, TextAlign } from './types';\n\nconst ufuzzy = new uFuzzy();\n\nexport type Props = {\n  /**\n   * DataFrame with the profile data. The dataFrame needs to have the following fields:\n   * label: string - the label of the node\n   * level: number - the nesting level of the node\n   * value: number - the total value of the node\n   * self: number - the self value of the node\n   * Optionally if it represents diff of 2 different profiles it can also have fields:\n   * valueRight: number - the total value of the node in the right profile\n   * selfRight: number - the self value of the node in the right profile\n   */\n  data?: DataFrame;\n\n  /**\n   * Whether the header should be sticky and be always visible on the top when scrolling.\n   */\n  stickyHeader?: boolean;\n\n  /**\n   * Provides a theme for the visualization on which colors and some sizes are based.\n   */\n  getTheme: () => GrafanaTheme2;\n\n  /**\n   * Various interaction hooks that can be used to report on the interaction.\n   */\n  onTableSymbolClick?: (symbol: string) => void;\n  onViewSelected?: (view: string) => void;\n  onTextAlignSelected?: (align: string) => void;\n  onTableSort?: (sort: string) => void;\n\n  /**\n   * Elements that will be shown in the header on the right side of the header buttons. Useful for additional\n   * functionality.\n   */\n  extraHeaderElements?: React.ReactNode;\n\n  /**\n   * Extra buttons that will be shown in the context menu when user clicks on a Node.\n   */\n  getExtraContextMenuButtons?: GetExtraContextMenuButtonsFunction;\n\n  /**\n   * If true the flamegraph will be rendered on top of the table.\n   */\n  vertical?: boolean;\n\n  /**\n   * If true only the flamegraph will be rendered.\n   */\n  showFlameGraphOnly?: boolean;\n\n  /**\n   * Disable behaviour where similar items in the same stack will be collapsed into single item.\n   */\n  disableCollapsing?: boolean;\n};\n\nconst FlameGraphContainer = ({\n  data,\n  onTableSymbolClick,\n  onViewSelected,\n  onTextAlignSelected,\n  onTableSort,\n  getTheme,\n  stickyHeader,\n  extraHeaderElements,\n  vertical,\n  showFlameGraphOnly,\n  disableCollapsing,\n  getExtraContextMenuButtons,\n}: Props) => {\n  const [focusedItemData, setFocusedItemData] = useState<ClickedItemData>();\n\n  const [rangeMin, setRangeMin] = useState(0);\n  const [rangeMax, setRangeMax] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedView, setSelectedView] = useState(SelectedView.Both);\n  const [sizeRef, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const [textAlign, setTextAlign] = useState<TextAlign>('left');\n  // This is a label of the item because in sandwich view we group all items by label and present a merged graph\n  const [sandwichItem, setSandwichItem] = useState<string>();\n  const [collapsedMap, setCollapsedMap] = useState(new CollapsedMap());\n\n  const theme = useMemo(() => getTheme(), [getTheme]);\n  const dataContainer = useMemo((): FlameGraphDataContainer | undefined => {\n    if (!data) {\n      return;\n    }\n\n    const container = new FlameGraphDataContainer(data, { collapsing: !disableCollapsing }, theme);\n    setCollapsedMap(container.getCollapsedMap());\n    return container;\n  }, [data, theme, disableCollapsing]);\n  const [colorScheme, setColorScheme] = useColorScheme(dataContainer);\n  const styles = getStyles(theme);\n  const matchedLabels = useLabelSearch(search, dataContainer);\n\n  // If user resizes window with both as the selected view\n  useEffect(() => {\n    if (\n      containerWidth > 0 &&\n      containerWidth < MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH &&\n      selectedView === SelectedView.Both &&\n      !vertical\n    ) {\n      setSelectedView(SelectedView.FlameGraph);\n    }\n  }, [selectedView, setSelectedView, containerWidth, vertical]);\n\n  const resetFocus = useCallback(() => {\n    setFocusedItemData(undefined);\n    setRangeMin(0);\n    setRangeMax(1);\n  }, [setFocusedItemData, setRangeMax, setRangeMin]);\n\n  function resetSandwich() {\n    setSandwichItem(undefined);\n  }\n\n  useEffect(() => {\n    resetFocus();\n    resetSandwich();\n  }, [data, resetFocus]);\n\n  const onSymbolClick = useCallback(\n    (symbol: string) => {\n      if (search === symbol) {\n        setSearch('');\n      } else {\n        onTableSymbolClick?.(symbol);\n        setSearch(symbol);\n        resetFocus();\n      }\n    },\n    [setSearch, resetFocus, onTableSymbolClick, search]\n  );\n\n  if (!dataContainer) {\n    return null;\n  }\n\n  const flameGraph = (\n    <FlameGraph\n      data={dataContainer}\n      rangeMin={rangeMin}\n      rangeMax={rangeMax}\n      matchedLabels={matchedLabels}\n      setRangeMin={setRangeMin}\n      setRangeMax={setRangeMax}\n      onItemFocused={(data) => setFocusedItemData(data)}\n      focusedItemData={focusedItemData}\n      textAlign={textAlign}\n      sandwichItem={sandwichItem}\n      onSandwich={(label: string) => {\n        resetFocus();\n        setSandwichItem(label);\n      }}\n      onFocusPillClick={resetFocus}\n      onSandwichPillClick={resetSandwich}\n      colorScheme={colorScheme}\n      showFlameGraphOnly={showFlameGraphOnly}\n      collapsing={!disableCollapsing}\n      getExtraContextMenuButtons={getExtraContextMenuButtons}\n      selectedView={selectedView}\n      search={search}\n      collapsedMap={collapsedMap}\n      setCollapsedMap={setCollapsedMap}\n    />\n  );\n\n  const table = (\n    <FlameGraphTopTableContainer\n      data={dataContainer}\n      onSymbolClick={onSymbolClick}\n      search={search}\n      matchedLabels={matchedLabels}\n      sandwichItem={sandwichItem}\n      onSandwich={setSandwichItem}\n      onSearch={setSearch}\n      onTableSort={onTableSort}\n      colorScheme={colorScheme}\n    />\n  );\n\n  let body;\n  if (showFlameGraphOnly || selectedView === SelectedView.FlameGraph) {\n    body = flameGraph;\n  } else if (selectedView === SelectedView.TopTable) {\n    body = <div className={styles.tableContainer}>{table}</div>;\n  } else if (selectedView === SelectedView.Both) {\n    if (vertical) {\n      body = (\n        <div>\n          <div className={styles.verticalGraphContainer}>{flameGraph}</div>\n          <div className={styles.verticalTableContainer}>{table}</div>\n        </div>\n      );\n    } else {\n      body = (\n        <div className={styles.horizontalContainer}>\n          <div className={styles.horizontalTableContainer}>{table}</div>\n          <div className={styles.horizontalGraphContainer}>{flameGraph}</div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    // We add the theme context to bridge the gap if this is rendered in non grafana environment where the context\n    // isn't already provided.\n    <ThemeContext.Provider value={theme}>\n      <div ref={sizeRef} className={styles.container}>\n        {!showFlameGraphOnly && (\n          <FlameGraphHeader\n            search={search}\n            setSearch={setSearch}\n            selectedView={selectedView}\n            setSelectedView={(view) => {\n              setSelectedView(view);\n              onViewSelected?.(view);\n            }}\n            containerWidth={containerWidth}\n            onReset={() => {\n              resetFocus();\n              resetSandwich();\n            }}\n            textAlign={textAlign}\n            onTextAlignChange={(align) => {\n              setTextAlign(align);\n              onTextAlignSelected?.(align);\n            }}\n            showResetButton={Boolean(focusedItemData || sandwichItem)}\n            colorScheme={colorScheme}\n            onColorSchemeChange={setColorScheme}\n            stickyHeader={Boolean(stickyHeader)}\n            extraHeaderElements={extraHeaderElements}\n            vertical={vertical}\n            isDiffMode={dataContainer.isDiffFlamegraph()}\n            setCollapsedMap={setCollapsedMap}\n            collapsedMap={collapsedMap}\n          />\n        )}\n\n        <div className={styles.body}>{body}</div>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nfunction useColorScheme(dataContainer: FlameGraphDataContainer | undefined) {\n  const defaultColorScheme = dataContainer?.isDiffFlamegraph() ? ColorSchemeDiff.Default : ColorScheme.PackageBased;\n  const [colorScheme, setColorScheme] = useState<ColorScheme | ColorSchemeDiff>(defaultColorScheme);\n\n  // This makes sure that if we change the data to/from diff profile we reset the color scheme.\n  useEffect(() => {\n    setColorScheme(defaultColorScheme);\n  }, [defaultColorScheme]);\n\n  return [colorScheme, setColorScheme] as const;\n}\n\n/**\n * Based on the search string it does a fuzzy search over all the unique labels, so we can highlight them later.\n */\nfunction useLabelSearch(\n  search: string | undefined,\n  data: FlameGraphDataContainer | undefined\n): Set<string> | undefined {\n  return useMemo(() => {\n    if (search && data) {\n      const foundLabels = new Set<string>();\n      let idxs = ufuzzy.filter(data.getUniqueLabels(), search);\n\n      if (idxs) {\n        for (let idx of idxs) {\n          foundLabels.add(data.getUniqueLabels()[idx]);\n        }\n      }\n\n      return foundLabels;\n    }\n    // In this case undefined means there was no search so no attempt to highlighting anything should be made.\n    return undefined;\n  }, [search, data]);\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css({\n      label: 'container',\n      overflow: 'auto',\n      height: '100%',\n      display: 'flex',\n      flex: '1 1 0',\n      flexDirection: 'column',\n      minHeight: 0,\n      gap: theme.spacing(1),\n    }),\n    body: css({\n      label: 'body',\n      flexGrow: 1,\n    }),\n\n    tableContainer: css({\n      // This is not ideal for dashboard panel where it creates a double scroll. In a panel it should be 100% but then\n      // in explore we need a specific height.\n      height: 800,\n    }),\n\n    horizontalContainer: css({\n      label: 'horizontalContainer',\n      display: 'flex',\n      minHeight: 0,\n      flexDirection: 'row',\n      columnGap: theme.spacing(1),\n      width: '100%',\n    }),\n\n    horizontalGraphContainer: css({\n      flexBasis: '50%',\n    }),\n\n    horizontalTableContainer: css({\n      flexBasis: '50%',\n      maxHeight: 800,\n    }),\n\n    verticalGraphContainer: css({\n      marginBottom: theme.spacing(1),\n    }),\n\n    verticalTableContainer: css({\n      height: 800,\n    }),\n  };\n}\n\nexport default FlameGraphContainer;\n","import { LevelItem } from './FlameGraph/dataTransform';\n\nexport { type FlameGraphDataContainer } from './FlameGraph/dataTransform';\n\nexport { type ExtraContextMenuButton } from './FlameGraph/FlameGraphContextMenu';\n\nexport type ClickedItemData = {\n  posX: number;\n  posY: number;\n  label: string;\n  item: LevelItem;\n};\n\nexport enum SampleUnit {\n  Bytes = 'bytes',\n  Short = 'short',\n  Nanoseconds = 'ns',\n}\n\nexport enum SelectedView {\n  TopTable = 'topTable',\n  FlameGraph = 'flameGraph',\n  Both = 'both',\n}\n\nexport interface TableData {\n  self: number;\n  total: number;\n  // For diff view\n  totalRight: number;\n}\n\nexport enum ColorScheme {\n  ValueBased = 'valueBased',\n  PackageBased = 'packageBased',\n}\n\nexport enum ColorSchemeDiff {\n  Default = 'default',\n  DiffColorBlind = 'diffColorBlind',\n}\n\nexport type TextAlign = 'left' | 'right';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useTimeoutFn_1 = tslib_1.__importDefault(require(\"./useTimeoutFn\"));\nfunction useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn_1.default(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    react_1.useEffect(reset, deps);\n    return [isReady, cancel];\n}\nexports.default = useDebounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useTimeoutFn(fn, ms) {\n    if (ms === void 0) { ms = 0; }\n    var ready = react_1.useRef(false);\n    var timeout = react_1.useRef();\n    var callback = react_1.useRef(fn);\n    var isReady = react_1.useCallback(function () { return ready.current; }, []);\n    var set = react_1.useCallback(function () {\n        ready.current = false;\n        timeout.current && clearTimeout(timeout.current);\n        timeout.current = setTimeout(function () {\n            ready.current = true;\n            callback.current();\n        }, ms);\n    }, [ms]);\n    var clear = react_1.useCallback(function () {\n        ready.current = null;\n        timeout.current && clearTimeout(timeout.current);\n    }, []);\n    // update ref when function changes\n    react_1.useEffect(function () {\n        callback.current = fn;\n    }, [fn]);\n    // set on mount, clear on unmount\n    react_1.useEffect(function () {\n        set();\n        return clear;\n    }, [ms]);\n    return [isReady, clear, set];\n}\nexports.default = useTimeoutFn;\n"],"names":["mergeParentSubtrees","roots","data","newRoots","getParentSubtrees","mergeSubtrees","newRoot","stack","args","newNode","direction","oppositeDirection","levels","indexes","i","newItem","acc","prevSiblingsVal","node","nextItems","nextGroups","c","g","level","index","item","nestedSetToLevels","container","options","offset","parent","uniqueLabels","currentLevel","prevLevel","lastSibling","collapsedMapContainer","CollapsedMapBuilder","CollapsedMap","map","collapsed","newMap","collapsedConfig","newConfig","threshold","root","current","config","getMessageCheckFieldsResult","wrongFields","f","checkFields","fields","missingFields","wrongTypeFields","field","name","types","frameField","FlameGraphDataContainer","theme","createTheme","enumConfig","value","fieldAccessor","label","nodes","callers","callees","uniqueLabelsMap","collapsedMap","PIXELS_PER_LEVEL","MUTE_THRESHOLD","HIDE_THRESHOLD","LABEL_THRESHOLD","BAR_BORDER_WIDTH","BAR_TEXT_PADDING_LEFT","GROUP_STRIP_WIDTH","GROUP_STRIP_PADDING","GROUP_STRIP_MARGIN_LEFT","GROUP_TEXT_OFFSET","MIN_WIDTH_TO_SHOW_BOTH_TOPTABLE_AND_FLAMEGRAPH","TOP_TABLE_COLUMN_WIDTH","itemData","onMenuItemClick","onItemFocus","onSandwich","collapseConfig","onExpandGroup","onCollapseGroup","onExpandAllGroups","onCollapseAllGroups","getExtraContextMenuButtons","collapsing","allGroupsExpanded","allGroupsCollapsed","selectedView","search","renderItems","extraButtons","MenuItem","icon","onClick","MenuGroup","ContextMenu","FlameGraphTooltip","totalTicks","position","styles","getStyles","content","tableData","getDiffTooltipData","InteractiveTable","originalRow","tooltipData","getTooltipData","Portal","VizTooltipContainer","displayValue","displaySelf","percentValue","percentSelf","unitValue","unitSelf","unitTitle","totalTicksRight","totalTicksLeft","valueLeft","percentageLeft","percentageRight","diff","displayValueLeft","getValueWithUnit","displayValueRight","shortValFormat","murmurhash3_32_gc","key","seed","remainder","bytes","h1","h1b","c1","c2","k1","packageColors","byValueMinColor","getBarColorByValue","byValueMaxColor","byValueGradient","byPackageGradient","rangeMin","rangeMax","intensity","h","l","getBarColorByPackage","packageName","getPackageName","colorIndex","packageColor","diffDefaultColors","diffDefaultGradient","diffColorBlindColors","diffColorBlindGradient","getBarColorByDiff","ticks","ticksRight","colorScheme","range","colorScale","ticksLeft","rgbString","matchers","_","matcher","match","useFlameRender","canvasRef","depth","wrapperWidth","matchedLabels","textAlign","totalViewTicks","totalColorTicks","focusedItemData","ctx","useSetupCanvas","mutedColor","barMutedColor","getBarColor","useColorFunction","renderFunc","useRenderFunc","mutedPath2D","walkTree","x","y","width","height","muted","collapsedItemConfig","finalLabel","renderLabel","renderGroupingStrip","groupStripX","pixelsPerTick","collapsedItemRendered","levelOffset","curBarTicks","offsetModifier","skipRender","isCollapsedItem","barX","getBarX","barY","nextList","topLevel","barColor","numberOfLevels","setCtx","unit","measure","spaceForTextInRect","fullLabel","labelX","FlameGraphCanvas","setRangeMin","setRangeMax","onItemFocused","totalProfileTicks","totalProfileTicksRight","showFlameGraphOnly","setCollapsedMap","sizeRef","useMeasure","graphRef","tooltipItem","setTooltipItem","clickedItemData","setClickedItemData","onGraphClick","e","convertPixelCoordinatesToBarCoordinates","mousePosition","setMousePosition","onGraphMouseMove","onGraphMouseLeave","handleOnClick","pos","next","levelIndex","found","child","xStart","xEnd","FlameGraphMetadata","focusedItem","sandwichedLabel","onFocusPillClick","onSandwichPillClick","parts","ticksVal","Icon","IconButton","FlameGraph","sandwichItem","setLevels","levelsCallers","setLevelsCallers","setTotalProfileTicks","setTotalProfileTicksRight","setTotalViewTicks","commonCanvasProps","canvas","FlameGraphHeader","setSearch","setSelectedView","containerWidth","onReset","onTextAlignChange","showResetButton","onColorSchemeChange","stickyHeader","extraHeaderElements","vertical","isDiffMode","localSearch","setLocalSearch","useSearchInput","suffix","Button","Input","v","ColorSchemeButton","ButtonGroup","RadioButtonGroup","alignOptions","getViewOptions","props","menu","Menu","colorDotStyle","contents","Dropdown","viewOptions","localSearchState","setLocalSearchState","prevSearch","usePrevious","useDebounce","FlameGraphTopTableContainer","onSymbolClick","onSearch","onTableSort","table","filteredTable","valueRight","self","sort","setSort","frame","buildTableDataFrame","Table","s","actionField","createActionField","symbolField","actionColumnWidth","baselineField","createNumberField","comparisonField","diffField","removeColor","addColor","selfField","totalField","tableFieldOptions","ActionCell","actionFieldTableConfig","getStylesActionCell","symbol","isSearched","isSandwiched","ufuzzy","FlameGraphContainer","onTableSymbolClick","onViewSelected","onTextAlignSelected","getTheme","disableCollapsing","setFocusedItemData","setTextAlign","setSandwichItem","dataContainer","setColorScheme","useColorScheme","useLabelSearch","resetFocus","resetSandwich","flameGraph","body","view","align","defaultColorScheme","foundLabels","idxs","idx","SampleUnit","SelectedView","ColorScheme","ColorSchemeDiff","tslib_1","react_1","useTimeoutFn_1","fn","ms","deps","_a","isReady","cancel","reset","exports","useTimeoutFn","ready","timeout","callback","set","clear"],"sourceRoot":""}