{"version":3,"file":"3397.e24df0a60941e1abf504.js","mappings":"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","sources":["webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipContent.tsx","webpack://grafana/./packages/grafana-ui/src/components/Actions/ActionButton.tsx","webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipFooter.tsx","webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipHeader.tsx","webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipWrapper.tsx","webpack://grafana/./public/app/core/components/Form/Form.tsx","webpack://grafana/./public/app/features/actions/utils.ts","webpack://grafana/./public/app/plugins/panel/canvas/panelcfg.gen.ts","webpack://grafana/./public/app/plugins/panel/status-history/utils.ts","webpack://grafana/./public/app/plugins/panel/timeseries/plugins/annotations2/AnnotationEditor2.tsx","webpack://grafana/./public/app/plugins/panel/timeseries/plugins/annotations2/AnnotationTooltip2.tsx","webpack://grafana/./public/app/plugins/panel/timeseries/plugins/annotations2/AnnotationMarker2.tsx","webpack://grafana/./public/app/plugins/panel/timeseries/plugins/AnnotationsPlugin2.tsx","webpack://grafana/./public/app/plugins/panel/timeseries/plugins/OutsideRangePlugin.tsx","webpack://grafana/./public/app/plugins/panel/timeseries/utils.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport { CSSProperties, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { VizTooltipRow } from './VizTooltipRow';\nimport { VizTooltipItem } from './types';\n\ninterface VizTooltipContentProps {\n  items: VizTooltipItem[];\n  children?: ReactNode;\n  scrollable?: boolean;\n  isPinned: boolean;\n  maxHeight?: number;\n}\n\nexport const VizTooltipContent = ({\n  items,\n  children,\n  isPinned,\n  scrollable = false,\n  maxHeight,\n}: VizTooltipContentProps) => {\n  const styles = useStyles2(getStyles);\n\n  const scrollableStyle: CSSProperties = scrollable\n    ? {\n        maxHeight: maxHeight,\n        overflowY: 'auto',\n      }\n    : {};\n\n  return (\n    <div className={styles.wrapper} style={scrollableStyle}>\n      {items.map(({ label, value, color, colorIndicator, colorPlacement, isActive, lineStyle }, i) => (\n        <VizTooltipRow\n          key={i}\n          label={label}\n          value={value}\n          color={color}\n          colorIndicator={colorIndicator}\n          colorPlacement={colorPlacement}\n          isActive={isActive}\n          justify={'space-between'}\n          isPinned={isPinned}\n          lineStyle={lineStyle}\n          showValueScroll={!scrollable}\n        />\n      ))}\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    gap: 2,\n    borderTop: `1px solid ${theme.colors.border.medium}`,\n    padding: theme.spacing(1),\n  }),\n});\n","import { ActionModel, Field } from '@grafana/data';\n\nimport { Button, ButtonProps } from '../Button';\n\ntype ActionButtonProps = ButtonProps & {\n  action: ActionModel<Field>;\n};\n\n/**\n * @internal\n */\nexport function ActionButton({ action, ...buttonProps }: ActionButtonProps) {\n  return (\n    <Button variant=\"primary\" size=\"sm\" onClick={action.onClick} {...buttonProps}>\n      {action.title}\n    </Button>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { ActionModel, Field, GrafanaTheme2, LinkModel } from '@grafana/data';\n\nimport { Button, DataLinkButton, Stack } from '..';\nimport { useStyles2 } from '../../themes';\nimport { ActionButton } from '../Actions/ActionButton';\n\ninterface VizTooltipFooterProps {\n  dataLinks: Array<LinkModel<Field>>;\n  actions?: Array<ActionModel<Field>>;\n  annotate?: () => void;\n}\n\nexport const ADD_ANNOTATION_ID = 'add-annotation-button';\n\nconst renderDataLinks = (dataLinks: LinkModel[], styles: ReturnType<typeof getStyles>) => {\n  return (\n    <Stack direction=\"column\" justifyContent=\"flex-start\" gap={0.5}>\n      {dataLinks.map((link, i) => (\n        <DataLinkButton link={link} key={i} buttonProps={{ className: styles.dataLinkButton, fill: 'text' }} />\n      ))}\n    </Stack>\n  );\n};\n\nconst renderActions = (actions: ActionModel[]) => {\n  return (\n    <Stack direction=\"column\" justifyContent=\"flex-start\">\n      {actions.map((action, i) => (\n        <ActionButton key={i} action={action} variant=\"secondary\" />\n      ))}\n    </Stack>\n  );\n};\n\nexport const VizTooltipFooter = ({ dataLinks, actions, annotate }: VizTooltipFooterProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      {dataLinks.length > 0 && <div className={styles.dataLinks}>{renderDataLinks(dataLinks, styles)}</div>}\n      {actions && actions.length > 0 && <div className={styles.dataLinks}>{renderActions(actions)}</div>}\n      {annotate != null && (\n        <div className={styles.addAnnotations}>\n          <Button icon=\"comment-alt\" variant=\"secondary\" size=\"sm\" id={ADD_ANNOTATION_ID} onClick={annotate}>\n            Add annotation\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    padding: theme.spacing(0),\n  }),\n  dataLinks: css({\n    borderTop: `1px solid ${theme.colors.border.medium}`,\n    padding: theme.spacing(1),\n  }),\n  addAnnotations: css({\n    borderTop: `1px solid ${theme.colors.border.medium}`,\n    padding: theme.spacing(1),\n  }),\n  dataLinkButton: css({\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'underline',\n      background: 'none',\n    },\n  }),\n});\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { VizTooltipRow } from './VizTooltipRow';\nimport { VizTooltipItem } from './types';\n\ninterface Props {\n  item: VizTooltipItem;\n  isPinned: boolean;\n}\nexport const VizTooltipHeader = ({ item, isPinned }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  const { label, value, color, colorIndicator } = item;\n\n  return (\n    <div className={styles.wrapper}>\n      <VizTooltipRow\n        label={label}\n        value={value}\n        color={color}\n        colorIndicator={colorIndicator}\n        marginRight={'22px'}\n        isPinned={isPinned}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    padding: theme.spacing(1),\n    lineHeight: 1,\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode;\n}\n\nexport const VizTooltipWrapper = ({ children, className }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return <div className={cx(styles.wrapper, className)}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: theme.typography.bodySmall.fontSize,\n  }),\n});\n","import { css } from '@emotion/css';\nimport { HTMLProps, useEffect } from 'react';\nimport * as React from 'react';\nimport {\n  useForm,\n  Mode,\n  DefaultValues,\n  SubmitHandler,\n  FieldValues,\n  UseFormReturn,\n  FieldErrors,\n  FieldPath,\n} from 'react-hook-form';\n\nexport type FormAPI<T extends FieldValues> = Omit<UseFormReturn<T>, 'handleSubmit'> & {\n  errors: FieldErrors<T>;\n};\n\ninterface FormProps<T extends FieldValues> extends Omit<HTMLProps<HTMLFormElement>, 'onSubmit' | 'children'> {\n  validateOn?: Mode;\n  validateOnMount?: boolean;\n  validateFieldsOnMount?: FieldPath<T> | Array<FieldPath<T>>;\n  defaultValues?: DefaultValues<T>;\n  onSubmit: SubmitHandler<T>;\n  children: (api: FormAPI<T>) => React.ReactNode;\n  /** Sets max-width for container. Use it instead of setting individual widths on inputs.*/\n  maxWidth?: number | 'none';\n}\n\nexport function Form<T extends FieldValues>({\n  defaultValues,\n  onSubmit,\n  validateOnMount = false,\n  validateFieldsOnMount,\n  children,\n  validateOn = 'onSubmit',\n  maxWidth = 600,\n  ...htmlProps\n}: FormProps<T>) {\n  const { handleSubmit, trigger, formState, ...rest } = useForm<T>({\n    mode: validateOn,\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (validateOnMount) {\n      trigger(validateFieldsOnMount);\n    }\n  }, [trigger, validateFieldsOnMount, validateOnMount]);\n\n  return (\n    <form\n      className={css({\n        maxWidth: maxWidth !== 'none' ? maxWidth + 'px' : maxWidth,\n        width: '100%',\n      })}\n      onSubmit={handleSubmit(onSubmit)}\n      {...htmlProps}\n    >\n      {children({ errors: formState.errors, formState, trigger, ...rest })}\n    </form>\n  );\n}\n","import {\n  Action,\n  ActionModel,\n  AppEvents,\n  DataContextScopedVar,\n  DataFrame,\n  DataLink,\n  Field,\n  FieldType,\n  getFieldDataContextClone,\n  InterpolateFunction,\n  ScopedVars,\n  textUtil,\n  ValueLinkConfig,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv } from '@grafana/runtime';\nimport { appEvents } from 'app/core/core';\n\nimport { HttpRequestMethod } from '../../plugins/panel/canvas/panelcfg.gen';\nimport { createAbsoluteUrl, RelativeUrl } from '../alerting/unified/utils/url';\n\n/** @internal */\nexport const getActions = (\n  frame: DataFrame,\n  field: Field,\n  fieldScopedVars: ScopedVars,\n  replaceVariables: InterpolateFunction,\n  actions: Action[],\n  config: ValueLinkConfig\n): Array<ActionModel<Field>> => {\n  if (!actions || actions.length === 0) {\n    return [];\n  }\n\n  const actionModels = actions.map((action: Action) => {\n    const dataContext: DataContextScopedVar = getFieldDataContextClone(frame, field, fieldScopedVars);\n    const actionScopedVars = {\n      ...fieldScopedVars,\n      __dataContext: dataContext,\n    };\n\n    const boundReplaceVariables: InterpolateFunction = (value, scopedVars, format) => {\n      return replaceVariables(value, { ...actionScopedVars, ...scopedVars }, format);\n    };\n\n    // We are not displaying reduction result\n    if (config.valueRowIndex !== undefined && !isNaN(config.valueRowIndex)) {\n      dataContext.value.rowIndex = config.valueRowIndex;\n    } else {\n      dataContext.value.calculatedValue = config.calculatedValue;\n    }\n\n    let actionModel: ActionModel<Field> = { title: '', onClick: (e) => {} };\n\n    actionModel = {\n      title: replaceVariables(action.title || '', actionScopedVars),\n      onClick: (evt: MouseEvent, origin: Field) => {\n        buildActionOnClick(action, boundReplaceVariables);\n      },\n    };\n\n    return actionModel;\n  });\n\n  return actionModels.filter((action): action is ActionModel => !!action);\n};\n\n/** @internal */\nconst buildActionOnClick = (action: Action, replaceVariables: InterpolateFunction) => {\n  try {\n    const url = new URL(getUrl(replaceVariables(action.fetch.url)));\n\n    const requestHeaders: Record<string, string> = {};\n\n    let request: BackendSrvRequest = {\n      url: url.toString(),\n      method: action.fetch.method,\n      data: getData(action, replaceVariables),\n      headers: requestHeaders,\n    };\n\n    if (action.fetch.headers) {\n      action.fetch.headers.forEach(([name, value]) => {\n        requestHeaders[replaceVariables(name)] = replaceVariables(value);\n      });\n    }\n\n    if (action.fetch.queryParams) {\n      action.fetch.queryParams?.forEach(([name, value]) => {\n        url.searchParams.append(replaceVariables(name), replaceVariables(value));\n      });\n\n      request.url = url.toString();\n    }\n\n    requestHeaders['X-Grafana-Action'] = '1';\n    request.headers = requestHeaders;\n\n    getBackendSrv()\n      .fetch(request)\n      .subscribe({\n        error: (error) => {\n          appEvents.emit(AppEvents.alertError, ['An error has occurred. Check console output for more details.']);\n          console.error(error);\n        },\n        complete: () => {\n          appEvents.emit(AppEvents.alertSuccess, ['API call was successful']);\n        },\n      });\n  } catch (error) {\n    appEvents.emit(AppEvents.alertError, ['An error has occurred. Check console output for more details.']);\n    console.error(error);\n    return;\n  }\n};\n\n/** @internal */\n// @TODO update return type\nexport const getActionsDefaultField = (dataLinks: DataLink[] = [], actions: Action[] = []) => {\n  return {\n    name: 'Default field',\n    type: FieldType.string,\n    config: { links: dataLinks, actions: actions },\n    values: [],\n  };\n};\n\n/** @internal */\nconst getUrl = (endpoint: string) => {\n  const isRelativeUrl = endpoint.startsWith('/');\n  if (isRelativeUrl) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    const sanitizedRelativeURL = textUtil.sanitizeUrl(endpoint) as RelativeUrl;\n    endpoint = createAbsoluteUrl(sanitizedRelativeURL, []);\n  }\n\n  return endpoint;\n};\n\n/** @internal */\nconst getData = (action: Action, replaceVariables: InterpolateFunction) => {\n  let data: string | undefined = action.fetch.body ? replaceVariables(action.fetch.body) : '{}';\n  if (action.fetch.method === HttpRequestMethod.GET) {\n    data = undefined;\n  }\n\n  return data;\n};\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as ui from '@grafana/schema';\n\nexport enum HorizontalConstraint {\n  Center = 'center',\n  Left = 'left',\n  LeftRight = 'leftright',\n  Right = 'right',\n  Scale = 'scale',\n}\n\nexport enum VerticalConstraint {\n  Bottom = 'bottom',\n  Center = 'center',\n  Scale = 'scale',\n  Top = 'top',\n  TopBottom = 'topbottom',\n}\n\nexport interface Constraint {\n  horizontal?: HorizontalConstraint;\n  vertical?: VerticalConstraint;\n}\n\nexport interface Placement {\n  bottom?: number;\n  height?: number;\n  left?: number;\n  right?: number;\n  rotation?: number;\n  top?: number;\n  width?: number;\n}\n\nexport enum BackgroundImageSize {\n  Contain = 'contain',\n  Cover = 'cover',\n  Fill = 'fill',\n  Original = 'original',\n  Tile = 'tile',\n}\n\nexport interface BackgroundConfig {\n  color?: ui.ColorDimensionConfig;\n  image?: ui.ResourceDimensionConfig;\n  size?: BackgroundImageSize;\n}\n\nexport interface LineConfig {\n  color?: ui.ColorDimensionConfig;\n  radius?: number;\n  width?: number;\n}\n\nexport enum HttpRequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n}\n\nexport interface ConnectionCoordinates {\n  x: number;\n  y: number;\n}\n\nexport enum ConnectionPath {\n  Straight = 'straight',\n}\n\nexport interface CanvasConnection {\n  color?: ui.ColorDimensionConfig;\n  path: ConnectionPath;\n  size?: ui.ScaleDimensionConfig;\n  source: ConnectionCoordinates;\n  sourceOriginal?: ConnectionCoordinates;\n  target: ConnectionCoordinates;\n  targetName?: string;\n  targetOriginal?: ConnectionCoordinates;\n  vertices?: Array<ConnectionCoordinates>;\n}\n\nexport const defaultCanvasConnection: Partial<CanvasConnection> = {\n  vertices: [],\n};\n\nexport interface CanvasElementOptions {\n  background?: BackgroundConfig;\n  border?: LineConfig;\n  /**\n   * TODO: figure out how to define this (element config(s))\n   */\n  config?: unknown;\n  connections?: Array<CanvasConnection>;\n  constraint?: Constraint;\n  name: string;\n  placement?: Placement;\n  type: string;\n}\n\nexport const defaultCanvasElementOptions: Partial<CanvasElementOptions> = {\n  connections: [],\n};\n\nexport interface Options {\n  /**\n   * Enable infinite pan\n   */\n  infinitePan: boolean;\n  /**\n   * Enable inline editing\n   */\n  inlineEditing: boolean;\n  /**\n   * Enable pan and zoom\n   */\n  panZoom: boolean;\n  /**\n   * The root element of canvas (frame), where all canvas elements are nested\n   * TODO: Figure out how to define a default value for this\n   */\n  root: {\n    /**\n     * Name of the root element\n     */\n    name: string;\n    /**\n     * Type of root element (frame)\n     */\n    type: 'frame';\n    /**\n     * The list of canvas elements attached to the root element\n     */\n    elements: Array<CanvasElementOptions>;\n  };\n  /**\n   * Show all available element types\n   */\n  showAdvancedTypes: boolean;\n}\n\nexport const defaultOptions: Partial<Options> = {\n  infinitePan: true,\n  inlineEditing: true,\n  panZoom: true,\n  showAdvancedTypes: true,\n};\n","import { ActionModel, Field, InterpolateFunction, LinkModel } from '@grafana/data';\nimport { DataFrame } from '@grafana/data/';\nimport { config } from '@grafana/runtime';\nimport { getActions } from 'app/features/actions/utils';\n\nexport const getDataLinks = (field: Field, rowIdx: number) => {\n  const links: Array<LinkModel<Field>> = [];\n\n  if ((field.config.links?.length ?? 0) > 0 && field.getLinks != null) {\n    const v = field.values[rowIdx];\n    const disp = field.display ? field.display(v) : { text: `${v}`, numeric: +v };\n\n    const linkLookup = new Set<string>();\n\n    field.getLinks({ calculatedValue: disp, valueRowIndex: rowIdx }).forEach((link) => {\n      const key = `${link.title}/${link.href}`;\n      if (!linkLookup.has(key)) {\n        links.push(link);\n        linkLookup.add(key);\n      }\n    });\n  }\n\n  return links;\n};\n\nexport const getFieldActions = (\n  dataFrame: DataFrame,\n  field: Field,\n  replaceVars: InterpolateFunction,\n  rowIndex: number\n) => {\n  if (!config.featureToggles?.vizActions) {\n    return [];\n  }\n\n  const actions: Array<ActionModel<Field>> = [];\n  const actionLookup = new Set<string>();\n\n  const actionsModel = getActions(dataFrame, field, field.state!.scopedVars!, replaceVars, field.config.actions ?? [], {\n    valueRowIndex: rowIndex,\n  });\n\n  actionsModel.forEach((action) => {\n    const key = `${action.title}`;\n    if (!actionLookup.has(key)) {\n      actions.push(action);\n      actionLookup.add(key);\n    }\n  });\n\n  return actions;\n};\n","import { css } from '@emotion/css';\nimport { useRef } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { useAsyncFn, useClickAway } from 'react-use';\n\nimport { AnnotationEventUIModel, GrafanaTheme2, dateTimeFormat, systemDateFormats } from '@grafana/data';\nimport { Button, Field, Stack, TextArea, usePanelContext, useStyles2 } from '@grafana/ui';\nimport { Form } from 'app/core/components/Form/Form';\nimport { TagFilter } from 'app/core/components/TagFilter/TagFilter';\nimport { getAnnotationTags } from 'app/features/annotations/api';\n\ninterface Props {\n  annoVals: Record<string, any[]>;\n  annoIdx: number;\n  timeZone: string;\n  dismiss: () => void;\n}\n\ninterface AnnotationEditFormDTO {\n  description: string;\n  tags: string[];\n}\n\nexport const AnnotationEditor2 = ({ annoVals, annoIdx, dismiss, timeZone, ...otherProps }: Props) => {\n  const styles = useStyles2(getStyles);\n  const { onAnnotationCreate, onAnnotationUpdate } = usePanelContext();\n\n  const clickAwayRef = useRef(null);\n\n  useClickAway(clickAwayRef, dismiss);\n\n  const [createAnnotationState, createAnnotation] = useAsyncFn(async (event: AnnotationEventUIModel) => {\n    const result = await onAnnotationCreate!(event);\n    dismiss();\n    return result;\n  });\n\n  const [updateAnnotationState, updateAnnotation] = useAsyncFn(async (event: AnnotationEventUIModel) => {\n    const result = await onAnnotationUpdate!(event);\n    dismiss();\n    return result;\n  });\n\n  const timeFormatter = (value: number) =>\n    dateTimeFormat(value, {\n      format: systemDateFormats.fullDate,\n      timeZone,\n    });\n\n  const isUpdatingAnnotation = annoVals.id?.[annoIdx] != null;\n  const isRegionAnnotation = annoVals.isRegion?.[annoIdx];\n  const operation = isUpdatingAnnotation ? updateAnnotation : createAnnotation;\n  const stateIndicator = isUpdatingAnnotation ? updateAnnotationState : createAnnotationState;\n  const time = isRegionAnnotation\n    ? `${timeFormatter(annoVals.time[annoIdx])} - ${timeFormatter(annoVals.timeEnd[annoIdx])}`\n    : timeFormatter(annoVals.time[annoIdx]);\n\n  const onSubmit = ({ tags, description }: AnnotationEditFormDTO) => {\n    operation({\n      id: annoVals.id?.[annoIdx] ?? undefined,\n      tags,\n      description,\n      from: Math.round(annoVals.time[annoIdx]!),\n      to: Math.round(annoVals.timeEnd?.[annoIdx] ?? annoVals.time[annoIdx]!),\n    });\n  };\n\n  // Annotation editor\n  return (\n    <div ref={clickAwayRef} className={styles.editor} {...otherProps}>\n      <div className={styles.header}>\n        <Stack justifyContent={'space-between'} alignItems={'center'}>\n          <div>{isUpdatingAnnotation ? 'Edit annotation' : 'Add annotation'}</div>\n          <div>{time}</div>\n        </Stack>\n      </div>\n      <Form<AnnotationEditFormDTO>\n        onSubmit={onSubmit}\n        defaultValues={{ description: annoVals.text?.[annoIdx], tags: annoVals.tags?.[annoIdx] || [] }}\n      >\n        {({ register, errors, control }) => {\n          return (\n            <>\n              <div className={styles.content}>\n                <Field label={'Description'} invalid={!!errors.description} error={errors?.description?.message}>\n                  <TextArea\n                    className={styles.textarea}\n                    {...register('description', {\n                      required: 'Annotation description is required',\n                    })}\n                  />\n                </Field>\n                <Field label={'Tags'}>\n                  <Controller\n                    control={control}\n                    name=\"tags\"\n                    render={({ field: { ref, onChange, ...field } }) => {\n                      return (\n                        <TagFilter\n                          allowCustomValue\n                          placeholder=\"Add tags\"\n                          onChange={onChange}\n                          tagOptions={getAnnotationTags}\n                          tags={field.value}\n                        />\n                      );\n                    }}\n                  />\n                </Field>\n              </div>\n              <div className={styles.footer}>\n                <Stack justifyContent={'flex-end'}>\n                  <Button size={'sm'} variant=\"secondary\" onClick={dismiss} fill=\"outline\">\n                    Cancel\n                  </Button>\n                  <Button size={'sm'} type={'submit'} disabled={stateIndicator?.loading}>\n                    {stateIndicator?.loading ? 'Saving' : 'Save'}\n                  </Button>\n                </Stack>\n              </div>\n            </>\n          );\n        }}\n      </Form>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    editor: css({\n      // zIndex: theme.zIndex.tooltip,\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.weak}`,\n      borderRadius: theme.shape.radius.default,\n      boxShadow: theme.shadows.z3,\n      userSelect: 'text',\n      width: '460px',\n    }),\n    content: css({\n      padding: theme.spacing(1),\n    }),\n    header: css({\n      borderBottom: `1px solid ${theme.colors.border.weak}`,\n      padding: theme.spacing(0.5, 1),\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.fontSize,\n      color: theme.colors.text.primary,\n    }),\n    footer: css({\n      borderTop: `1px solid ${theme.colors.border.weak}`,\n      padding: theme.spacing(1, 1),\n    }),\n    textarea: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, dateTimeFormat, systemDateFormats, textUtil } from '@grafana/data';\nimport { HorizontalGroup, IconButton, Tag, usePanelContext, useStyles2 } from '@grafana/ui';\nimport alertDef from 'app/features/alerting/state/alertDef';\n\ninterface Props {\n  annoVals: Record<string, any[]>;\n  annoIdx: number;\n  timeZone: string;\n  onEdit: () => void;\n}\n\nconst retFalse = () => false;\n\nexport const AnnotationTooltip2 = ({ annoVals, annoIdx, timeZone, onEdit }: Props) => {\n  const annoId = annoVals.id?.[annoIdx];\n\n  const styles = useStyles2(getStyles);\n\n  const { canEditAnnotations = retFalse, canDeleteAnnotations = retFalse, onAnnotationDelete } = usePanelContext();\n\n  const dashboardUID = annoVals.dashboardUID?.[annoIdx];\n  const canEdit = canEditAnnotations(dashboardUID);\n  const canDelete = canDeleteAnnotations(dashboardUID) && onAnnotationDelete != null;\n\n  const timeFormatter = (value: number) =>\n    dateTimeFormat(value, {\n      format: systemDateFormats.fullDate,\n      timeZone,\n    });\n\n  let time = timeFormatter(annoVals.time[annoIdx]);\n  let text = annoVals.text?.[annoIdx] ?? '';\n\n  if (annoVals.isRegion?.[annoIdx]) {\n    time += ' - ' + timeFormatter(annoVals.timeEnd[annoIdx]);\n  }\n\n  let avatar;\n  if (annoVals.login?.[annoIdx] && annoVals.avatarUrl?.[annoIdx]) {\n    avatar = <img className={styles.avatar} alt=\"Annotation avatar\" src={annoVals.avatarUrl[annoIdx]} />;\n  }\n\n  let state: React.ReactNode | null = null;\n  let alertText = '';\n\n  if (annoVals.alertId?.[annoIdx] !== undefined && annoVals.newState?.[annoIdx]) {\n    const stateModel = alertDef.getStateDisplayModel(annoVals.newState[annoIdx]);\n    state = (\n      <div className={styles.alertState}>\n        <i className={stateModel.stateClass}>{stateModel.text}</i>\n      </div>\n    );\n\n    alertText = annoVals.data?.[annoIdx] ? alertDef.getAlertAnnotationText(annoVals.data[annoIdx]) : '';\n  } else if (annoVals.title?.[annoIdx]) {\n    text = annoVals.title[annoIdx] + (text ? `<br />${text}` : '');\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <HorizontalGroup justify={'space-between'} align={'center'} spacing={'md'}>\n          <div className={styles.meta}>\n            <span>\n              {avatar}\n              {state}\n            </span>\n            {time}\n          </div>\n          {(canEdit || canDelete) && (\n            <div className={styles.editControls}>\n              {canEdit && <IconButton name={'pen'} size={'sm'} onClick={onEdit} tooltip=\"Edit\" />}\n              {canDelete && (\n                <IconButton\n                  name={'trash-alt'}\n                  size={'sm'}\n                  onClick={() => onAnnotationDelete(annoId)}\n                  tooltip=\"Delete\"\n                />\n              )}\n            </div>\n          )}\n        </HorizontalGroup>\n      </div>\n\n      <div className={styles.body}>\n        {text && <div className={styles.text} dangerouslySetInnerHTML={{ __html: textUtil.sanitize(text) }} />}\n        {alertText}\n        <div>\n          <HorizontalGroup spacing=\"xs\" wrap>\n            {annoVals.tags?.[annoIdx]?.map((t: string, i: number) => <Tag name={t} key={`${t}-${i}`} />)}\n          </HorizontalGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    zIndex: theme.zIndex.tooltip,\n    whiteSpace: 'initial',\n    borderRadius: theme.shape.radius.default,\n    background: theme.colors.background.primary,\n    border: `1px solid ${theme.colors.border.weak}`,\n    boxShadow: theme.shadows.z2,\n    userSelect: 'text',\n  }),\n  header: css({\n    padding: theme.spacing(0.5, 1),\n    borderBottom: `1px solid ${theme.colors.border.weak}`,\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.fontSize,\n    color: theme.colors.text.primary,\n    display: 'flex',\n  }),\n  meta: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: theme.colors.text.primary,\n    fontWeight: 400,\n  }),\n  editControls: css({\n    display: 'flex',\n    alignItems: 'center',\n    '> :last-child': {\n      marginLeft: 0,\n    },\n  }),\n  body: css({\n    padding: theme.spacing(1),\n    fontSize: theme.typography.bodySmall.fontSize,\n    color: theme.colors.text.secondary,\n    fontWeight: 400,\n    a: {\n      color: theme.colors.text.link,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n  }),\n  text: css({\n    paddingBottom: theme.spacing(1),\n  }),\n  avatar: css({\n    borderRadius: theme.shape.radius.circle,\n    width: 16,\n    height: 16,\n    marginRight: theme.spacing(1),\n  }),\n  alertState: css({\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n  }),\n});\n","import { css } from '@emotion/css';\nimport { flip, shift, autoUpdate } from '@floating-ui/dom';\nimport { useFloating } from '@floating-ui/react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { TimeZone } from '@grafana/schema';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { AnnotationEditor2 } from './AnnotationEditor2';\nimport { AnnotationTooltip2 } from './AnnotationTooltip2';\n\ninterface AnnoBoxProps {\n  annoVals: Record<string, any[]>;\n  annoIdx: number;\n  style: React.CSSProperties | null;\n  className: string;\n  timeZone: TimeZone;\n  exitWipEdit?: null | (() => void);\n  portalRoot: HTMLElement;\n}\n\nconst STATE_DEFAULT = 0;\nconst STATE_EDITING = 1;\nconst STATE_HOVERED = 2;\n\nexport const AnnotationMarker2 = ({\n  annoVals,\n  annoIdx,\n  className,\n  style,\n  exitWipEdit,\n  timeZone,\n  portalRoot,\n}: AnnoBoxProps) => {\n  const styles = useStyles2(getStyles);\n\n  const [state, setState] = useState(exitWipEdit != null ? STATE_EDITING : STATE_DEFAULT);\n  const { refs, floatingStyles } = useFloating({\n    open: true,\n    placement: 'bottom',\n    middleware: [\n      flip({\n        fallbackAxisSideDirection: 'end',\n        // see https://floating-ui.com/docs/flip#combining-with-shift\n        crossAxis: false,\n        boundary: document.body,\n      }),\n      shift(),\n    ],\n    whileElementsMounted: autoUpdate,\n    strategy: 'fixed',\n  });\n\n  const contents =\n    state === STATE_HOVERED ? (\n      <AnnotationTooltip2\n        annoIdx={annoIdx}\n        annoVals={annoVals}\n        timeZone={timeZone}\n        onEdit={() => setState(STATE_EDITING)}\n      />\n    ) : state === STATE_EDITING ? (\n      <AnnotationEditor2\n        annoIdx={annoIdx}\n        annoVals={annoVals}\n        timeZone={timeZone}\n        dismiss={() => {\n          exitWipEdit?.();\n          setState(STATE_DEFAULT);\n        }}\n      />\n    ) : null;\n\n  return (\n    <div\n      ref={refs.setReference}\n      className={className}\n      style={style!}\n      onMouseEnter={() => state !== STATE_EDITING && setState(STATE_HOVERED)}\n      onMouseLeave={() => state !== STATE_EDITING && setState(STATE_DEFAULT)}\n      data-testid={selectors.pages.Dashboard.Annotations.marker}\n    >\n      {contents &&\n        createPortal(\n          <div ref={refs.setFloating} className={styles.annoBox} style={floatingStyles} data-testid=\"annotation-marker\">\n            {contents}\n          </div>,\n          portalRoot\n        )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  // NOTE: shares much with TooltipPlugin2\n  annoBox: css({\n    top: 0,\n    left: 0,\n    zIndex: theme.zIndex.tooltip,\n    borderRadius: theme.shape.radius.default,\n    position: 'absolute',\n    background: theme.colors.background.primary,\n    border: `1px solid ${theme.colors.border.weak}`,\n    boxShadow: theme.shadows.z2,\n    userSelect: 'text',\n    minWidth: '300px',\n  }),\n});\n","import { css } from '@emotion/css';\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState, useReducer } from 'react';\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport tinycolor from 'tinycolor2';\nimport uPlot from 'uplot';\n\nimport { arrayToDataFrame, colorManipulator, DataFrame, DataTopic } from '@grafana/data';\nimport { TimeZone } from '@grafana/schema';\nimport { DEFAULT_ANNOTATION_COLOR, getPortalContainer, UPlotConfigBuilder, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { AnnotationMarker2 } from './annotations2/AnnotationMarker2';\n\n// (copied from TooltipPlugin2)\ninterface TimeRange2 {\n  from: number;\n  to: number;\n}\n\ninterface AnnotationsPluginProps {\n  config: UPlotConfigBuilder;\n  annotations: DataFrame[];\n  timeZone: TimeZone;\n  newRange: TimeRange2 | null;\n  setNewRange: (newRage: TimeRange2 | null) => void;\n  canvasRegionRendering?: boolean;\n}\n\n// TODO: batch by color, use Path2D objects\nconst renderLine = (ctx: CanvasRenderingContext2D, y0: number, y1: number, x: number, color: string) => {\n  ctx.beginPath();\n  ctx.moveTo(x, y0);\n  ctx.lineTo(x, y1);\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\n// const renderUpTriangle = (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, color: string) => {\n//   ctx.beginPath();\n//   ctx.moveTo(x - w/2, y + h/2);\n//   ctx.lineTo(x + w/2, y + h/2);\n//   ctx.lineTo(x, y);\n//   ctx.closePath();\n//   ctx.fillStyle = color;\n//   ctx.fill();\n// }\n\nconst DEFAULT_ANNOTATION_COLOR_HEX8 = tinycolor(DEFAULT_ANNOTATION_COLOR).toHex8String();\n\nfunction getVals(frame: DataFrame) {\n  let vals: Record<string, any[]> = {};\n  frame.fields.forEach((f) => {\n    vals[f.name] = f.values;\n  });\n\n  return vals;\n}\n\nexport const AnnotationsPlugin2 = ({\n  annotations,\n  timeZone,\n  config,\n  newRange,\n  setNewRange,\n  canvasRegionRendering = true,\n}: AnnotationsPluginProps) => {\n  const [plot, setPlot] = useState<uPlot>();\n\n  const [portalRoot] = useState(() => getPortalContainer());\n\n  const styles = useStyles2(getStyles);\n  const getColorByName = useTheme2().visualization.getColorByName;\n\n  const [_, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  const annos = useMemo(() => {\n    let annos = annotations.filter(\n      (frame) => frame.name !== 'exemplar' && frame.length > 0 && frame.fields.some((f) => f.name === 'time')\n    );\n\n    if (newRange) {\n      let isRegion = newRange.to > newRange.from;\n\n      const wipAnnoFrame = arrayToDataFrame([\n        {\n          time: newRange.from,\n          timeEnd: isRegion ? newRange.to : null,\n          isRegion: isRegion,\n          color: DEFAULT_ANNOTATION_COLOR_HEX8,\n        },\n      ]);\n\n      wipAnnoFrame.meta = {\n        dataTopic: DataTopic.Annotations,\n        custom: {\n          isWip: true,\n        },\n      };\n\n      annos.push(wipAnnoFrame);\n    }\n\n    return annos;\n  }, [annotations, newRange]);\n\n  const exitWipEdit = useCallback(() => {\n    setNewRange(null);\n  }, [setNewRange]);\n\n  const annoRef = useRef(annos);\n  annoRef.current = annos;\n  const newRangeRef = useRef(newRange);\n  newRangeRef.current = newRange;\n\n  const xAxisRef = useRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    config.addHook('ready', (u) => {\n      let xAxisEl = u.root.querySelector<HTMLDivElement>('.u-axis')!;\n      xAxisRef.current = xAxisEl;\n      setPlot(u);\n    });\n\n    config.addHook('draw', (u) => {\n      let annos = annoRef.current;\n\n      const ctx = u.ctx;\n\n      ctx.save();\n\n      ctx.beginPath();\n      ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n      ctx.clip();\n\n      annos.forEach((frame) => {\n        let vals = getVals(frame);\n\n        if (frame.name === 'xymark') {\n          // xMin, xMax, yMin, yMax, color, lineWidth, lineStyle, fillOpacity, text\n\n          let xKey = config.scales[0].props.scaleKey;\n          let yKey = config.scales[1].props.scaleKey;\n\n          for (let i = 0; i < frame.length; i++) {\n            let color = getColorByName(vals.color?.[i] || DEFAULT_ANNOTATION_COLOR_HEX8);\n\n            let x0 = u.valToPos(vals.xMin[i], xKey, true);\n            let x1 = u.valToPos(vals.xMax[i], xKey, true);\n            let y0 = u.valToPos(vals.yMax[i], yKey, true);\n            let y1 = u.valToPos(vals.yMin[i], yKey, true);\n\n            ctx.fillStyle = colorManipulator.alpha(color, vals.fillOpacity[i]);\n            ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n\n            ctx.lineWidth = Math.round(vals.lineWidth[i] * uPlot.pxRatio);\n\n            if (vals.lineStyle[i] === 'dash') {\n              // maybe extract this to vals.lineDash[i] in future?\n              ctx.setLineDash([5, 5]);\n            } else {\n              // solid\n              ctx.setLineDash([]);\n            }\n\n            ctx.strokeStyle = color;\n            ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          }\n        } else {\n          let y0 = u.bbox.top;\n          let y1 = y0 + u.bbox.height;\n\n          ctx.lineWidth = 2;\n          ctx.setLineDash([5, 5]);\n\n          for (let i = 0; i < vals.time.length; i++) {\n            let color = getColorByName(vals.color?.[i] || DEFAULT_ANNOTATION_COLOR_HEX8);\n\n            let x0 = u.valToPos(vals.time[i], 'x', true);\n\n            if (!vals.isRegion?.[i]) {\n              renderLine(ctx, y0, y1, x0, color);\n              // renderUpTriangle(ctx, x0, y1, 8 * uPlot.pxRatio, 5 * uPlot.pxRatio, color);\n            } else if (canvasRegionRendering) {\n              renderLine(ctx, y0, y1, x0, color);\n\n              let x1 = u.valToPos(vals.timeEnd[i], 'x', true);\n\n              renderLine(ctx, y0, y1, x1, color);\n\n              ctx.fillStyle = colorManipulator.alpha(color, 0.1);\n              ctx.fillRect(x0, y0, x1 - x0, u.bbox.height);\n            }\n          }\n        }\n      });\n\n      ctx.restore();\n    });\n  }, [config, canvasRegionRendering, getColorByName]);\n\n  // ensure annos are re-drawn whenever they change\n  useEffect(() => {\n    if (plot) {\n      plot.redraw();\n\n      // this forces a second redraw after uPlot is updated (in the Plot.tsx didUpdate) with new data/scales\n      // and ensures the anno marker positions in the dom are re-rendered in correct places\n      // (this is temp fix until uPlot integrtion is refactored)\n      setTimeout(() => {\n        forceUpdate();\n      }, 0);\n    }\n  }, [annos, plot]);\n\n  if (plot) {\n    let markers = annos.flatMap((frame, frameIdx) => {\n      let vals = getVals(frame);\n\n      let markers: React.ReactNode[] = [];\n\n      for (let i = 0; i < vals.time.length; i++) {\n        let color = getColorByName(vals.color?.[i] || DEFAULT_ANNOTATION_COLOR);\n        let left = Math.round(plot.valToPos(vals.time[i], 'x')) || 0; // handles -0\n        let style: React.CSSProperties | null = null;\n        let className = '';\n        let isVisible = true;\n\n        if (vals.isRegion?.[i]) {\n          let right = Math.round(plot.valToPos(vals.timeEnd?.[i], 'x')) || 0; // handles -0\n\n          isVisible = left < plot.rect.width && right > 0;\n\n          if (isVisible) {\n            let clampedLeft = Math.max(0, left);\n            let clampedRight = Math.min(plot.rect.width, right);\n\n            style = { left: clampedLeft, background: color, width: clampedRight - clampedLeft };\n            className = styles.annoRegion;\n          }\n        } else {\n          isVisible = left >= 0 && left <= plot.rect.width;\n\n          if (isVisible) {\n            style = { left, borderBottomColor: color };\n            className = styles.annoMarker;\n          }\n        }\n\n        // @TODO: Reset newRange after annotation is saved\n        if (isVisible) {\n          let isWip = frame.meta?.custom?.isWip;\n\n          markers.push(\n            <AnnotationMarker2\n              annoIdx={i}\n              annoVals={vals}\n              className={className}\n              style={style}\n              timeZone={timeZone}\n              key={`${frameIdx}:${i}`}\n              exitWipEdit={isWip ? exitWipEdit : null}\n              portalRoot={portalRoot}\n            />\n          );\n        }\n      }\n\n      return markers;\n    });\n\n    return createPortal(markers, xAxisRef.current!);\n  }\n\n  return null;\n};\n\nconst getStyles = () => ({\n  annoMarker: css({\n    position: 'absolute',\n    width: 0,\n    height: 0,\n    borderLeft: '5px solid transparent',\n    borderRight: '5px solid transparent',\n    borderBottomWidth: '5px',\n    borderBottomStyle: 'solid',\n    transform: 'translateX(-50%)',\n    cursor: 'pointer',\n    zIndex: 1,\n  }),\n  annoRegion: css({\n    position: 'absolute',\n    height: '5px',\n    cursor: 'pointer',\n    zIndex: 1,\n  }),\n});\n","import { useLayoutEffect, useRef, useState } from 'react';\nimport uPlot, { TypedArray, Scale } from 'uplot';\n\nimport { AbsoluteTimeRange } from '@grafana/data';\nimport { UPlotConfigBuilder, Button } from '@grafana/ui';\n\ninterface ThresholdControlsPluginProps {\n  config: UPlotConfigBuilder;\n  onChangeTimeRange: (timeRange: AbsoluteTimeRange) => void;\n}\n\nexport const OutsideRangePlugin = ({ config, onChangeTimeRange }: ThresholdControlsPluginProps) => {\n  const plotInstance = useRef<uPlot>();\n  const [timevalues, setTimeValues] = useState<number[] | TypedArray>([]);\n  const [timeRange, setTimeRange] = useState<Scale | undefined>();\n\n  useLayoutEffect(() => {\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n    });\n\n    config.addHook('setScale', (u) => {\n      setTimeValues(u.data?.[0] ?? []);\n      setTimeRange(u.scales['x'] ?? undefined);\n    });\n  }, [config]);\n\n  if (timevalues.length < 2 || !onChangeTimeRange) {\n    return null;\n  }\n\n  if (!timeRange || !timeRange.time || !timeRange.min || !timeRange.max!) {\n    return null;\n  }\n\n  // Time values are always sorted for uPlot to work\n  let i = 0,\n    j = timevalues.length - 1;\n\n  while (i <= j && timevalues[i] == null) {\n    i++;\n  }\n\n  while (j >= 0 && timevalues[j] == null) {\n    j--;\n  }\n\n  const first = timevalues[i];\n  const last = timevalues[j];\n  const fromX = timeRange.min;\n  const toX = timeRange.max;\n\n  if (first == null || last == null) {\n    return null;\n  }\n\n  // (StartA <= EndB) and (EndA >= StartB)\n  if (first <= toX && last >= fromX) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        width: '100%',\n        textAlign: 'center',\n      }}\n    >\n      <div>\n        <div>Data outside time range</div>\n        <Button\n          onClick={(v) => onChangeTimeRange({ from: first, to: last })}\n          variant=\"secondary\"\n          data-testid=\"time-series-zoom-to-data\"\n        >\n          Zoom to data\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nOutsideRangePlugin.displayName = 'OutsideRangePlugin';\n","import {\n  DataFrame,\n  Field,\n  FieldType,\n  getDisplayProcessor,\n  GrafanaTheme2,\n  isBooleanUnit,\n  TimeRange,\n  cacheFieldDisplayNames,\n} from '@grafana/data';\nimport { convertFieldType } from '@grafana/data/src/transformations/transformers/convertFieldType';\nimport { applyNullInsertThreshold } from '@grafana/data/src/transformations/transformers/nulls/nullInsertThreshold';\nimport { nullToValue } from '@grafana/data/src/transformations/transformers/nulls/nullToValue';\nimport { GraphFieldConfig, LineInterpolation, TooltipDisplayMode, VizTooltipOptions } from '@grafana/schema';\nimport { buildScaleKey } from '@grafana/ui/src/components/uPlot/internal';\n\nimport { HeatmapTooltip } from '../heatmap/panelcfg.gen';\n\ntype ScaleKey = string;\n\n// this will re-enumerate all enum fields on the same scale to create one ordinal progression\n// e.g. ['a','b'][0,1,0] + ['c','d'][1,0,1] -> ['a','b'][0,1,0] + ['c','d'][3,2,3]\nfunction reEnumFields(frames: DataFrame[]): DataFrame[] {\n  let allTextsByKey: Map<ScaleKey, string[]> = new Map();\n\n  let frames2: DataFrame[] = frames.map((frame) => {\n    return {\n      ...frame,\n      fields: frame.fields.map((field) => {\n        if (field.type === FieldType.enum) {\n          let scaleKey = buildScaleKey(field.config, field.type);\n          let allTexts = allTextsByKey.get(scaleKey);\n\n          if (!allTexts) {\n            allTexts = [];\n            allTextsByKey.set(scaleKey, allTexts);\n          }\n\n          let idxs: number[] = field.values.toArray().slice();\n          let txts = field.config.type!.enum!.text!;\n\n          // by-reference incrementing\n          if (allTexts.length > 0) {\n            for (let i = 0; i < idxs.length; i++) {\n              idxs[i] += allTexts.length;\n            }\n          }\n\n          allTexts.push(...txts);\n\n          // shared among all enum fields on same scale\n          field.config.type!.enum!.text! = allTexts;\n\n          return {\n            ...field,\n            values: idxs,\n          };\n\n          // TODO: update displayProcessor?\n        }\n\n        return field;\n      }),\n    };\n  });\n\n  return frames2;\n}\n\n/**\n * Returns null if there are no graphable fields\n */\nexport function prepareGraphableFields(\n  series: DataFrame[],\n  theme: GrafanaTheme2,\n  timeRange?: TimeRange,\n  // numeric X requires a single frame where the first field is numeric\n  xNumFieldIdx?: number\n): DataFrame[] | null {\n  if (!series?.length) {\n    return null;\n  }\n\n  cacheFieldDisplayNames(series);\n\n  let useNumericX = xNumFieldIdx != null;\n\n  // Make sure the numeric x field is first in the frame\n  if (xNumFieldIdx != null && xNumFieldIdx > 0) {\n    series = [\n      {\n        ...series[0],\n        fields: [series[0].fields[xNumFieldIdx], ...series[0].fields.filter((f, i) => i !== xNumFieldIdx)],\n      },\n    ];\n  }\n\n  // some datasources simply tag the field as time, but don't convert to milli epochs\n  // so we're stuck with doing the parsing here to avoid Moment slowness everywhere later\n  // this mutates (once)\n  for (let frame of series) {\n    for (let field of frame.fields) {\n      if (field.type === FieldType.time && typeof field.values[0] !== 'number') {\n        field.values = convertFieldType(field, { destinationType: FieldType.time }).values;\n      }\n    }\n  }\n\n  let enumFieldsCount = 0;\n\n  loopy: for (let frame of series) {\n    for (let field of frame.fields) {\n      if (field.type === FieldType.enum && ++enumFieldsCount > 1) {\n        series = reEnumFields(series);\n        break loopy;\n      }\n    }\n  }\n\n  let copy: Field;\n\n  const frames: DataFrame[] = [];\n\n  for (let frame of series) {\n    const fields: Field[] = [];\n\n    let hasTimeField = false;\n    let hasValueField = false;\n\n    let nulledFrame = useNumericX\n      ? frame\n      : applyNullInsertThreshold({\n          frame,\n          refFieldPseudoMin: timeRange?.from.valueOf(),\n          refFieldPseudoMax: timeRange?.to.valueOf(),\n        });\n\n    const frameFields = nullToValue(nulledFrame).fields;\n\n    for (let fieldIdx = 0; fieldIdx < frameFields?.length ?? 0; fieldIdx++) {\n      const field = frameFields[fieldIdx];\n\n      switch (field.type) {\n        case FieldType.time:\n          hasTimeField = true;\n          fields.push(field);\n          break;\n        case FieldType.number:\n          hasValueField = useNumericX ? fieldIdx > 0 : true;\n          copy = {\n            ...field,\n            values: field.values.map((v) => {\n              if (!(Number.isFinite(v) || v == null)) {\n                return null;\n              }\n              return v;\n            }),\n          };\n\n          fields.push(copy);\n          break; // ok\n        case FieldType.enum:\n          hasValueField = true;\n        case FieldType.string:\n          copy = {\n            ...field,\n            values: field.values,\n          };\n\n          fields.push(copy);\n          break; // ok\n        case FieldType.boolean:\n          hasValueField = true;\n          const custom: GraphFieldConfig = field.config?.custom ?? {};\n          const config = {\n            ...field.config,\n            max: 1,\n            min: 0,\n            custom,\n          };\n\n          // smooth and linear do not make sense\n          if (custom.lineInterpolation !== LineInterpolation.StepBefore) {\n            custom.lineInterpolation = LineInterpolation.StepAfter;\n          }\n\n          copy = {\n            ...field,\n            config,\n            type: FieldType.number,\n            values: field.values.map((v) => {\n              if (v == null) {\n                return v;\n              }\n              return Boolean(v) ? 1 : 0;\n            }),\n          };\n\n          if (!isBooleanUnit(config.unit)) {\n            config.unit = 'bool';\n            copy.display = getDisplayProcessor({ field: copy, theme });\n          }\n\n          fields.push(copy);\n          break;\n      }\n    }\n\n    if ((useNumericX || hasTimeField) && hasValueField) {\n      frames.push({\n        ...frame,\n        length: nulledFrame.length,\n        fields,\n      });\n    }\n  }\n\n  if (frames.length) {\n    setClassicPaletteIdxs(frames, theme, 0);\n    matchEnumColorToSeriesColor(frames, theme);\n    return frames;\n  }\n\n  return null;\n}\n\nconst matchEnumColorToSeriesColor = (frames: DataFrame[], theme: GrafanaTheme2) => {\n  const { palette } = theme.visualization;\n  for (const frame of frames) {\n    for (const field of frame.fields) {\n      if (field.type === FieldType.enum) {\n        const namedColor = palette[field.state?.seriesIndex! % palette.length];\n        const hexColor = theme.visualization.getColorByName(namedColor);\n        const enumConfig = field.config.type!.enum!;\n\n        enumConfig.color = Array(enumConfig.text!.length).fill(hexColor);\n        field.display = getDisplayProcessor({ field, theme });\n      }\n    }\n  }\n};\n\nexport const setClassicPaletteIdxs = (frames: DataFrame[], theme: GrafanaTheme2, skipFieldIdx?: number) => {\n  let seriesIndex = 0;\n  frames.forEach((frame) => {\n    frame.fields.forEach((field, fieldIdx) => {\n      if (\n        fieldIdx !== skipFieldIdx &&\n        (field.type === FieldType.number || field.type === FieldType.boolean || field.type === FieldType.enum)\n      ) {\n        field.state = {\n          ...field.state,\n          seriesIndex: seriesIndex++, // TODO: skip this for fields with custom renderers (e.g. Candlestick)?\n        };\n        field.display = getDisplayProcessor({ field, theme });\n      }\n    });\n  });\n};\n\nexport function getTimezones(timezones: string[] | undefined, defaultTimezone: string): string[] {\n  if (!timezones || !timezones.length) {\n    return [defaultTimezone];\n  }\n  return timezones.map((v) => (v?.length ? v : defaultTimezone));\n}\n\nexport const isTooltipScrollable = (tooltipOptions: VizTooltipOptions | HeatmapTooltip) => {\n  return tooltipOptions.mode === TooltipDisplayMode.Multi && tooltipOptions.maxHeight != null;\n};\n"],"names":["VizTooltipContent","items","children","isPinned","scrollable","maxHeight","styles","getStyles","scrollableStyle","label","value","color","colorIndicator","colorPlacement","isActive","lineStyle","i","theme","ActionButton","action","buttonProps","Button","ADD_ANNOTATION_ID","renderDataLinks","dataLinks","Stack","link","DataLinkButton","renderActions","actions","VizTooltipFooter","annotate","VizTooltipHeader","item","VizTooltipWrapper","className","Form","defaultValues","onSubmit","validateOnMount","validateFieldsOnMount","validateOn","maxWidth","htmlProps","handleSubmit","trigger","formState","rest","getActions","frame","field","fieldScopedVars","replaceVariables","config","dataContext","actionScopedVars","boundReplaceVariables","scopedVars","format","actionModel","e","evt","origin","buildActionOnClick","url","getUrl","requestHeaders","request","getData","name","error","getActionsDefaultField","endpoint","sanitizedRelativeURL","data","HorizontalConstraint","VerticalConstraint","BackgroundImageSize","HttpRequestMethod","ConnectionPath","defaultCanvasConnection","defaultCanvasElementOptions","defaultOptions","getDataLinks","rowIdx","links","v","disp","linkLookup","key","getFieldActions","dataFrame","replaceVars","rowIndex","actionLookup","AnnotationEditor2","annoVals","annoIdx","dismiss","timeZone","otherProps","onAnnotationCreate","onAnnotationUpdate","clickAwayRef","useClickAway","createAnnotationState","createAnnotation","useAsyncFn","event","result","updateAnnotationState","updateAnnotation","timeFormatter","isUpdatingAnnotation","isRegionAnnotation","operation","stateIndicator","time","tags","description","register","errors","control","Field","TextArea","ref","onChange","TagFilter","retFalse","AnnotationTooltip2","onEdit","annoId","canEditAnnotations","canDeleteAnnotations","onAnnotationDelete","dashboardUID","canEdit","canDelete","text","avatar","state","alertText","stateModel","alertDef","IconButton","t","Tag","STATE_DEFAULT","STATE_EDITING","STATE_HOVERED","AnnotationMarker2","style","exitWipEdit","portalRoot","setState","refs","floatingStyles","contents","selectors","renderLine","ctx","y0","y1","x","DEFAULT_ANNOTATION_COLOR_HEX8","tinycolor","getVals","vals","f","AnnotationsPlugin2","annotations","newRange","setNewRange","canvasRegionRendering","plot","setPlot","getColorByName","_","forceUpdate","annos","isRegion","wipAnnoFrame","annoRef","newRangeRef","xAxisRef","u","xAxisEl","xKey","yKey","x0","x1","colorManipulator","markers","frameIdx","left","isVisible","right","clampedLeft","clampedRight","isWip","OutsideRangePlugin","onChangeTimeRange","plotInstance","timevalues","setTimeValues","timeRange","setTimeRange","j","first","last","fromX","toX","reEnumFields","frames","allTextsByKey","scaleKey","allTexts","idxs","txts","prepareGraphableFields","series","xNumFieldIdx","useNumericX","enumFieldsCount","loopy","copy","fields","hasTimeField","hasValueField","nulledFrame","frameFields","fieldIdx","custom","setClassicPaletteIdxs","matchEnumColorToSeriesColor","palette","namedColor","hexColor","enumConfig","skipFieldIdx","seriesIndex","getTimezones","timezones","defaultTimezone","isTooltipScrollable","tooltipOptions"],"sourceRoot":""}