"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[319],{6911:(oe,O,m)=>{m.d(O,{A:()=>A});var Y=m(924),r=m(46519),Q=m(21053);const D=100;class f{constructor(){this.listeners=[],this.budget=1,this.threshold=1.5,this.ok=new Y.X(!0),this.lastUpdate=Date.now(),this.isLive=!1,this.liveTimeOffset=0,this.measure=()=>{const y=Date.now();this.budget=(y-this.lastUpdate)/D;const I=this.ok.getValue(),G=this.budget<=this.threshold;if(I!==G&&this.ok.next(G),this.lastUpdate=y,this.isLive&&this.ok.getValue()&&this.timeRange){let R;for(const U of this.listeners){if(!U.panel.props.isInView)continue;if(y-U.last>=U.intervalMs){if(!R){const{raw:X}=this.timeRange;R={raw:X,from:(0,r.CQ)(y-this.liveTimeOffset),to:(0,r.CQ)(y)}}U.panel.liveTimeChanged(R),U.last=y}}}}}setLiveTimeRange(y){if(this.timeRange=y,this.isLive=y?.raw?.to==="now",this.isLive){const I=Q.parse(y.raw.from,!1)?.valueOf(),G=Q.parse(y.raw.to,!0)?.valueOf();this.liveTimeOffset=G-I;for(const R of this.listeners)R.intervalMs=p(this.liveTimeOffset,R.panel.props.width)}}listen(y){this.listeners.push({last:this.lastUpdate,panel:y,intervalMs:p(6e4,y.props.width)})}remove(y){this.listeners=this.listeners.filter(I=>I.panel!==y)}updateInterval(y){if(!(!this.timeRange||!this.isLive)){for(const I of this.listeners)if(I.panel===y){I.intervalMs=p(this.liveTimeOffset,I.panel.props.width);return}}}}const T=5*60*1e3;function p(W,y){const I=Math.ceil(W/y/100)*100;return I>T?T:I}const A=new f;setInterval(A.measure,D)},20195:(oe,O,m)=>{m.d(O,{UV:()=>r});const Y=Object.freeze([0,0]);var r=(f=>(f.Annotations="annotations",f.Arrow="arrow",f.CSVContent="csv_content",f.CSVFile="csv_file",f.CSVMetricValues="csv_metric_values",f.DataPointsOutsideRange="datapoints_outside_range",f.ExponentialHeatmapBucketData="exponential_heatmap_bucket_data",f.FlameGraph="flame_graph",f.GrafanaAPI="grafana_api",f.LinearHeatmapBucketData="linear_heatmap_bucket_data",f.Live="live",f.Logs="logs",f.ManualEntry="manual_entry",f.NoDataPoints="no_data_points",f.NodeGraph="node_graph",f.PredictableCSVWave="predictable_csv_wave",f.PredictablePulse="predictable_pulse",f.RandomWalk="random_walk",f.RandomWalkTable="random_walk_table",f.RandomWalkWithError="random_walk_with_error",f.RawFrame="raw_frame",f.ServerError500="server_error_500",f.Simulation="simulation",f.SlowQuery="slow_query",f.StreamingClient="streaming_client",f.TableStatic="table_static",f.Trace="trace",f.USA="usa",f.VariablesQuery="variables-query",f))(r||{});const Q={fields:[],states:[]},D={csvWave:[],points:[],scenarioId:"random_walk"}},50747:(oe,O,m)=>{m.r(O),m.d(O,{plugin:()=>It});var Y=m(7238),r=m(68404);class Q extends r.PureComponent{render(){return r.createElement("div",null)}}var D=m(22350),f=m(68183),T=m(11543),p=m(81764),A=m(53217),W=m(46967),y=m(8944),I=m(97379);const G=[{label:"Speed (ms)",id:"speed",placeholder:"value",min:10,step:10},{label:"Spread",id:"spread",placeholder:"value",min:.5,step:.1},{label:"Noise",id:"noise",placeholder:"value",min:0,step:.1},{label:"Bands",id:"bands",placeholder:"bands",min:0,step:1}],R=[{value:"signal",label:"Signal"},{value:"logs",label:"Logs"},{value:"fetch",label:"Fetch"}],U=({onChange:t,query:e})=>{const a=({value:i})=>{t({target:{name:"type",value:i}})},n=i=>{const{name:o,value:s}=i.target;t({target:{name:o,value:Number(s)}})};return r.createElement(T.Z,null,r.createElement(p._,{label:"Type",labelWidth:14},r.createElement(A.Ph,{width:32,onChange:a,defaultValue:R[0],options:R})),e?.stream?.type==="signal"&&G.map(({label:i,id:o,min:s,step:c,placeholder:l})=>r.createElement(p._,{label:i,labelWidth:14,key:o},r.createElement(W.I,{width:32,type:"number",id:`stream.${o}-${e.refId}`,name:o,min:s,step:c,value:e.stream?.[o],placeholder:l,onChange:n}))),e?.stream?.type==="fetch"&&r.createElement(p._,{label:"URL",labelWidth:14,grow:!0},r.createElement(W.I,{type:"text",name:"url",id:`stream.url-${e.refId}`,value:e?.stream?.url,placeholder:"Fetch URL",onChange:t})))},le=[{label:"Series count",id:"seriesCount",placeholder:"1",min:1,step:1},{label:"Start value",id:"startValue",placeholder:"auto",step:1},{label:"Min",id:"min",placeholder:"none",step:.1},{label:"Max",id:"max",placeholder:"none",step:.1},{label:"Spread",id:"spread",placeholder:"1",min:.5,step:.1},{label:"Noise",id:"noise",placeholder:"0",min:0,step:.1},{label:"Drop (%)",id:"drop",placeholder:"0",min:0,max:100,step:1,tooltip:"Exclude some percent (chance) points"}],X=f.wl.components.DataSource.TestData.QueryTab,ke=({onChange:t,query:e})=>r.createElement(T.Z,null,le.map(({label:a,id:n,min:i,step:o,placeholder:s,tooltip:c})=>{const l=X?.[n];return r.createElement(p._,{label:a,labelWidth:14,key:n,"aria-label":l,tooltip:c},r.createElement(W.I,{width:32,name:n,type:"number",id:`randomWalk-${n}-${e.refId}`,min:i,step:o,value:e[n]||s,placeholder:s,onChange:t}))}));var me=m(9405);const Ce=({onChange:t,query:e})=>{const a=n=>{t({...e,csvContent:n})};return r.createElement(me.p,{height:300,language:"csv",value:e.csvContent??"",onBlur:a,onSave:a,showMiniMap:!1,showLineNumbers:!0})},We=({onChange:t,query:e})=>{const a=({value:i})=>{t({...e,csvFileName:i})},n=["flight_info_by_state.csv","population_by_state.csv","gdp_per_capita.csv","js_libraries.csv","ohlc_dogecoin.csv","weight_height.csv","browser_marketshare.csv"].map(i=>({label:i,value:i}));return r.createElement(T.Z,null,r.createElement(p._,{label:"File",labelWidth:14},r.createElement(A.Ph,{width:32,onChange:a,placeholder:"Select csv file",options:n,value:n.find(i=>i.value===e.csvFileName)})))};var ce=m(31403),w=m(20195);const Ee={timeStep:60,onCount:3,onValue:2,offCount:3,offValue:1},$=[{timeStep:60,valuesCSV:"0,0,2,2,1,1"}],xe={scenarioId:w.UV.RandomWalk,refId:""},Fe=t=>{const{wave:e,last:a,index:n,onAdd:i,onChange:o}=t,[s,c]=(0,r.useState)(e.valuesCSV||""),[l,k]=(0,r.useState)(e.labels||""),[u,h]=(0,r.useState)(e.name||""),E=()=>{a?i():o(n,void 0)},x=(F,L)=>{o(n,{...e,[F]:L})},V=F=>{F.key==="Enter"&&x("valuesCSV",s)};return r.createElement(T.Z,null,r.createElement(p._,{label:"Values",grow:!0,tooltip:"Comma separated values. Each value may be an int, float, or null and must not be empty. Whitespace and trailing commas are removed"},r.createElement(W.I,{value:s,placeholder:"CSV values",onChange:F=>c(F.currentTarget.value),autoFocus:!0,onBlur:()=>x("valuesCSV",s),onKeyDown:V})),r.createElement(p._,{label:"Step",tooltip:"The number of seconds between datapoints."},r.createElement(W.I,{value:e.timeStep,type:"number",placeholder:"60",width:10,onChange:F=>x("timeStep",F.currentTarget.valueAsNumber)})),r.createElement(p._,{label:"Name"},r.createElement(W.I,{value:u,placeholder:"name",width:10,onChange:F=>h(F.currentTarget.value),onBlur:()=>x("name",u)})),r.createElement(p._,{label:"Labels"},r.createElement(W.I,{value:l,placeholder:"labels",width:12,onChange:F=>k(F.currentTarget.value),onBlur:()=>x("labels",l)})),r.createElement(ce.zx,{icon:a?"plus":"minus",variant:"secondary",onClick:E}))};class Te extends r.PureComponent{constructor(){super(...arguments),this.onChange=(e,a)=>{let n=[...this.props.waves??$];a?n[e]={...a}:n.splice(e,1),this.props.onChange(n)},this.onAdd=()=>{const e=[...this.props.waves??$];e.push({...$[0]}),this.props.onChange(e)}}render(){let e=this.props.waves??$;return e.length||(e=$),r.createElement(r.Fragment,null,e.map((a,n)=>r.createElement(Fe,{key:`${n}/${a.valuesCSV}`,wave:a,index:n,onAdd:this.onAdd,onChange:this.onChange,last:n===e.length-1})))}}const Ie=[{label:"Server panic",value:"server_panic"},{label:"Frontend exception",value:"frontend_exception"},{label:"Frontend observable",value:"frontend_observable"}],Pe=({query:t,onChange:e})=>r.createElement(T.Z,null,r.createElement(p._,{labelWidth:14,label:"Error type"},r.createElement(A.Ph,{options:Ie,value:t.errorType,onChange:a=>{e({...t,errorType:a.value})}}))),ue=[{label:"random-2s-stream",value:"random-2s-stream",description:"Random stream with points every 2s"},{label:"random-flakey-stream",value:"random-flakey-stream",description:"Stream that returns data in random intervals"},{label:"random-labeled-stream",value:"random-labeled-stream",description:"Value with moving labels"},{label:"random-20Hz-stream",value:"random-20Hz-stream",description:"Random stream with points in 20Hz"}],Ae=({onChange:t,query:e})=>{const a=({value:n})=>{t({...e,channel:n})};return r.createElement(T.Z,null,r.createElement(p._,{label:"Channel",labelWidth:14},r.createElement(A.Ph,{width:32,onChange:a,placeholder:"Select channel",options:ue,value:ue.find(n=>n.value===e.channel)})))};function Be({query:t,onChange:e}){const a=t.nodes?.type||"random";return r.createElement(T.Z,null,r.createElement(p._,{label:"Data type",labelWidth:14},r.createElement(A.Ph,{options:pe.map(n=>({label:n,value:n})),value:pe.find(n=>n===a),onChange:n=>e({...t.nodes,type:n.value}),width:32})),(a==="random"||a==="random edges")&&r.createElement(p._,{label:"Count",labelWidth:14},r.createElement(W.I,{type:"number",name:"count",value:t.nodes?.count,width:32,onChange:n=>e({...t.nodes,count:n.currentTarget.value?parseInt(n.currentTarget.value,10):0}),placeholder:"10"})))}const pe=["random","response","random edges"],Re=[{label:"Step",id:"timeStep",placeholder:"60",tooltip:"The number of seconds between datapoints."},{label:"On Count",id:"onCount",placeholder:"3",tooltip:"The number of values within a cycle, at the start of the cycle, that should have the onValue."},{label:"Off Count",id:"offCount",placeholder:"6",tooltip:"The number of offValues within the cycle."},{label:"On Value",id:"onValue",placeholder:"1",tooltip:'The value for "on values", may be an int, float, or null.'},{label:"Off Value",id:"offValue",placeholder:"1",tooltip:'The value for "off values", may be a int, float, or null.'}],Ne=({onChange:t,query:e})=>{const a=n=>{const{name:i,value:o}=n.target;t({target:{name:i,value:Number(o)}})};return r.createElement(T.Z,null,Re.map(({label:n,id:i,placeholder:o,tooltip:s})=>r.createElement(p._,{label:n,labelWidth:14,key:i,tooltip:s},r.createElement(W.I,{width:32,type:"number",name:i,id:`pulseWave.${i}-${e.refId}`,value:e.pulseWave?.[i],placeholder:o,onChange:a}))))};var _=m(82897),q=m(16911),Me=m(70006),Ve=m(32689),de=m(45253);const Le=({onChange:t,query:e})=>{const[a,n]=(0,r.useState)(),[i,o]=(0,r.useState)(),s=c=>{try{const l=JSON.parse(c);if((0,_.isArray)(l)){n(void 0),o(void 0),t({...e,rawFrameContent:c});return}let k;if((0,_.isArray)(l.series)&&l.state)k=l.series.map(u=>(0,q.og)((0,q.g0)(u)));else{const u=(0,Ve.z1)({data:l});u.data?.length&&!u.error&&(k=u.data.map(h=>(0,Me.Y)(h)))}if(k){console.log("Original",l),console.log("Save",k),n(void 0),o("Converted to direct frame result"),t({...e,rawFrameContent:JSON.stringify(k,null,2)});return}n("Unable to read dataframes in text")}catch(l){console.log("Error parsing json",l),n("Enter JSON array of data frames (or raw query results body)"),o(void 0)}};return r.createElement(r.Fragment,null,a&&r.createElement(de.b,{title:a,severity:"error"}),i&&r.createElement(de.b,{title:i,severity:"warning"}),r.createElement(me.p,{height:300,language:"json",value:e.rawFrameContent??"[]",onBlur:s,onSave:s,showMiniMap:!0,showLineNumbers:!0}))};var De=m(64353),Ue=m(9892),ze=m(72648),He=m(13393);const Oe=(t,e,a)=>{switch(t.type){case"number":return r.createElement(W.I,{type:"number",defaultValue:a?.[t.name],onChange:n=>{const i=n.currentTarget.valueAsNumber;e({...a,[t.name]:i})}});case"boolean":return r.createElement(y.x,{value:a?.[t.name]??!0,onChange:()=>{e({...a,[t.name]:!a[t.name]})}});default:return r.createElement(W.I,{type:"string",value:a?.[t.name],onChange:n=>{const i=n.target.value;e({...a,[t.name]:i})}})}},Ge=t=>({jsonView:Ue.css`
      margin-bottom: ${t.spacing(1)};
    `}),$e=({config:t,schema:e,onChange:a})=>{const[n,i]=(0,r.useState)(!1),o=(0,ze.wW)(Ge),s=c=>{const l=c.currentTarget;a(JSON.parse(l.value))};return r.createElement(He.C,{label:"Config"},r.createElement(y.x,{className:o.jsonView,label:"JSON View",showLabel:!0,value:n,onChange:()=>i(!n)}),n?r.createElement(I.K,{defaultValue:JSON.stringify(t,null,2),rows:7,onChange:s}):r.createElement(r.Fragment,null,e.fields.map(c=>r.createElement(p._,{label:c.name,key:c.name,labelWidth:14},Oe(c,a,t)))))},je=({onChange:t,query:e,ds:a})=>{const n=e.sim??{},i=n.key??{},[o,s]=(0,r.useState)({}),c=(0,D.Z)(async()=>{const b=await a.getResource("sims");return{sims:b,options:b.map(S=>({label:S.name,value:S.type,description:S.description}))}},[a]),l=(0,r.useMemo)(()=>{const b=i.type;return!b||!c.value?{}:{details:c.value.sims.find(S=>S.type===b),option:c.value.options.find(S=>S.value===b)}},[c.value,i?.type]);let k=(0,D.Z)(async()=>{let b=i.type+"/"+i.tick+"hz";i.uid&&(b+="/"+i.uid);let S=(await a.getResource("sim/"+b))?.config;return s(S.value),S},[i.type,i.tick,i.uid]);const u=b=>{t({...e,sim:{...n,key:b}})},h=b=>{const{value:S}=b.currentTarget;u({...i,uid:S??void 0})},E=b=>{const S=b.currentTarget.valueAsNumber;u({...i,tick:S})},x=b=>{u({...i,type:b.value})},V=()=>{t({...e,sim:{...n,stream:!n.stream}})},F=()=>{t({...e,sim:{...n,last:!n.last}})},L=b=>{let S=i.type+"/"+i.tick+"hz";i.uid&&(S+="/"+i.uid),a.postResource("sim/"+S,b).then(H=>{s(H.config)})};return r.createElement(r.Fragment,null,r.createElement(T.Z,null,r.createElement(p._,{labelWidth:14,label:"Simulation",tooltip:""},r.createElement(A.Ph,{isLoading:c.loading,options:c.value?.options??[],value:l.option,onChange:x,width:32}))),r.createElement(T.Z,null,r.createElement(p._,{labelWidth:14,label:"Stream",tooltip:"connect to the live channel"},r.createElement(y.x,{value:Boolean(n.stream),onChange:V})),r.createElement(p._,{label:"Interval",tooltip:"the rate a simulation will spit out events"},r.createElement(W.I,{width:10,type:"number",value:i.tick,onChange:E,min:1/10,max:50,suffix:"hz"})),r.createElement(p._,{label:"Last",tooltip:"Only return the last value"},r.createElement(De._,null,r.createElement(y.x,{value:Boolean(n.last),onChange:F}))),r.createElement(p._,{label:"UID",tooltip:"A UID will allow multiple simulations to run at the same time"},r.createElement(W.I,{type:"text",placeholder:"optional",value:n.key.uid,onChange:h}))),r.createElement($e,{onChange:L,config:o??k.value,schema:l.details?.config.schema??{fields:[]}}))};function Qe({query:t,onChange:e}){return r.createElement(r.Fragment,null,r.createElement(T.Z,null,r.createElement(p._,{labelWidth:14,label:"Mode"},r.createElement(A.Ph,{options:ee,onChange:a=>{e({...t,mode:a.value})},width:32,value:ee.find(a=>a.value===t.mode)})),r.createElement(p._,{label:"Period"},r.createElement(W.I,{value:t.period,placeholder:"30m",onChange:a=>{e({...t,period:a.currentTarget.value})}}))),r.createElement(T.Z,null,r.createElement(p._,{labelWidth:14,label:"Fields"},r.createElement(A.NU,{options:Ze,onChange:a=>{e({...t,fields:a.map(n=>n.value)})},width:32,placeholder:"all",value:t.fields})),r.createElement(p._,{label:"States",grow:!0},r.createElement(A.NU,{options:Ke,onChange:a=>{e({...t,states:a.map(n=>n.value)})},placeholder:"all",value:t.states}))))}const ee=["values-as-rows","values-as-fields","values-as-labeled-fields","timeseries","timeseries-wide"].map(t=>({label:t,value:t})),Ze=["foo","bar","baz"].map(t=>({label:t,value:t})),Ke=["AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","MD","MA","MI","MN","MS","MO","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"].map(t=>({label:t,value:t}));var te=m(84946),g=m(14582),Z=m(49922),re=m(25091),Je=m(89230),ne=m(6911),Ye=m(28625);let ae=0;function At(){const t=Math.random();return t>.9?LogLevel.critical:t>.8?LogLevel.error:t>.7?LogLevel.warning:t>.4?LogLevel.info:t>.3?LogLevel.debug:t>.1?LogLevel.trace:LogLevel.unknown}function fe(){return ae=(ae+Math.floor(Math.random()*5))%ge.length,ge[ae]}function Xe(t=60){let e=fe();for(;e.length<t;)e+=" "+fe();return e}const ge=["At","vero","eos","et","accusamus","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","Et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","Nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","Temporibus","autem","quibusdam","et","aut","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","Itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","alias","consequatur","aut","perferendis","doloribus","asperiores","repellat"],he={type:"signal",speed:250,spread:3.5,noise:2.2,bands:1};function _e(t,e){const a=(0,_.defaults)(t.stream,he);if(a.type==="signal")return qe(t,a,e);if(a.type==="logs")return et(t,a,e);if(a.type==="fetch")return tt(t,a,e);throw new Error(`Unknown Stream Type: ${a.type}`)}function qe(t,e,a){return new te.y(n=>{const i=`signal-${a.panelId}-${t.refId}`,o=a.maxDataPoints||1e3,s={refId:t.refId,fields:[{name:"time",type:g.fS.time},{name:t.alias??"value",type:g.fS.number}]},{spread:c,speed:l,bands:k=0,noise:u}=e;for(let b=0;b<k;b++){const S=k>1?` ${b+1}`:"";s.fields.push({name:"Min"+S,type:g.fS.number}),s.fields.push({name:"Max"+S,type:g.fS.number})}const h=Ye.Av.fromDataFrameJSON({schema:s},{maxLength:o});let E=Math.random()*100,x,V=-1;const F=b=>{E+=(Math.random()-.5)*c;const S={values:[[b],[E]]};let H=E,d=E;for(let C=0;C<k;C++)H=H-Math.random()*u,d=d+Math.random()*u,S.values.push([H]),S.values.push([d]);const P={data:S};return h.push(P)};{let b=Date.now()-o*l;for(let S=0;S<o;S++)F(b),b+=l}const L=()=>{F(Date.now()),(ne.A.lastUpdate-V>1e3||ne.A.ok)&&(n.next({data:[h],key:i,state:Z.Gu.Streaming}),V=ne.A.lastUpdate),x=setTimeout(L,l)};return setTimeout(L,5),()=>{console.log("unsubscribing to stream "+i),clearTimeout(x)}})}function et(t,e,a){return new te.y(n=>{const i=`logs-${a.panelId}-${t.refId}`,o=a.maxDataPoints||1e3,s=new re.a({append:"tail",capacity:o});s.refId=t.refId,s.name=t.alias||"Logs "+t.refId,s.addField({name:"line",type:g.fS.string}),s.addField({name:"time",type:g.fS.time}),s.meta={preferredVisualisationType:"logs"};const{speed:c}=e;let l;const k=()=>{s.fields[0].values.add(Xe()),s.fields[1].values.add(Date.now()),n.next({data:[s],key:i}),l=setTimeout(k,c)};return setTimeout(k,5),()=>{console.log("unsubscribing to stream "+i),clearTimeout(l)}})}function tt(t,e,a){return new te.y(n=>{const i=`fetch-${a.panelId}-${t.refId}`,o=a.maxDataPoints||1e3;let s=new re.a({append:"tail",capacity:o});s.refId=t.refId,s.name=t.alias||"Fetch "+t.refId;let c;const l=new Je.QM({callback:{onHeader:u=>{s.fields.length&&(s=new re.a({append:"tail",capacity:o}),s.refId=t.refId,s.name="Fetch "+t.refId);for(const h of u)s.addField(h)},onRow:u=>{s.add(u)}}}),k=u=>{if(u.value){const h=new TextDecoder().decode(u.value);l.readCSV(h)}if(n.next({data:[s],key:i,state:u.done?Z.Gu.Done:Z.Gu.Streaming}),u.done){console.log("Finished stream"),n.complete();return}return c.read().then(k)};if(!e.url)throw new Error("query.url is not defined");return fetch(new Request(e.url)).then(u=>{u.body&&(c=u.body.getReader(),c.read().then(k))}),()=>{console.log("unsubscribing to stream "+i)}})}const rt=["random_walk","predictable_pulse"],be=[{value:"datasources",label:"Data Sources"},{value:"search",label:"Search"},{value:"annotations",label:"Annotations"}],nt=f.wl.components.DataSource.TestData.QueryTab,at=({query:t,datasource:e,onChange:a,onRunQuery:n})=>{t={...xe,...t};const{loading:i,value:o}=(0,D.Z)(async()=>{if(t.scenarioId===w.UV.ManualEntry&&t.points){let C=`Time,Value
`;for(const N of t.points)C+=`${N[1]},${N[0]}
`;a({refId:t.refId,datasource:t.datasource,scenarioId:w.UV.CSVContent,csvContent:C})}const d=await e.getScenarios(),P=["simulation"];return d.map(C=>({...C,hideAliasField:P.includes(C.id)}))},[]),s=d=>{a(d),n()},c=(0,r.useMemo)(()=>o?.find(d=>d.id===t.scenarioId),[o,t]),l=c?.id,k=c?.description,u=d=>{const P=o?.find(N=>N.id===d.value);if(!P)return;const C={scenarioId:d.value,refId:t.refId,alias:t.alias,datasource:t.datasource};switch(P.stringInput&&(C.stringInput=P.stringInput),P.id){case w.UV.GrafanaAPI:C.stringInput="datasources";break;case w.UV.StreamingClient:C.stream=he;break;case w.UV.Live:C.channel="random-2s-stream";break;case w.UV.Simulation:C.sim={key:{type:"flight",tick:10}};break;case w.UV.PredictablePulse:C.pulseWave=Ee;break;case w.UV.PredictableCSVWave:C.csvWave=$;break;case w.UV.USA:C.usa={mode:ee[0].value}}s(C)},h=d=>{const{name:P,value:C,type:N}=d.currentTarget;let J=C;N==="number"&&(J=Number(C)),P==="levelColumn"&&d.currentTarget instanceof HTMLInputElement&&(J=d.currentTarget.checked),s({...t,[P]:J})},E=d=>P=>{const{name:C,value:N,type:J}=P.target;let ye=N;J==="number"&&(ye=Number(N)),s({...t,[d]:{...t[d],[C]:ye}})},x=({value:d})=>{s({...t,stringInput:d})},V=E("stream"),F=E("pulseWave"),L=d=>{s({...t,usa:d})},b=d=>{s({...t,csvWave:d})},S=(0,r.useMemo)(()=>(o||[]).map(d=>({label:d.name,value:d.id})).sort((d,P)=>d.label.localeCompare(P.label)),[o]),H=(0,r.useMemo)(()=>rt.includes(t.scenarioId??""),[t]);return i?null:r.createElement(r.Fragment,null,r.createElement(T.Z,{"aria-label":nt.scenarioSelectContainer},r.createElement(p._,{labelWidth:14,label:"Scenario"},r.createElement(A.Ph,{inputId:`test-data-scenario-select-${t.refId}`,options:S,value:S.find(d=>d.value===t.scenarioId),onChange:u,width:32})),c?.stringInput&&r.createElement(p._,{label:"String Input"},r.createElement(W.I,{width:32,id:`stringInput-${t.refId}`,name:"stringInput",placeholder:t.stringInput,value:t.stringInput,onChange:h})),Boolean(!c?.hideAliasField)&&r.createElement(p._,{label:"Alias",labelWidth:14},r.createElement(W.I,{width:32,id:`alias-${t.refId}`,type:"text",placeholder:"optional",pattern:'[^<>&\\\\"]+',name:"alias",value:t.alias,onChange:h})),H&&r.createElement(p._,{label:"Labels",labelWidth:14,tooltip:r.createElement(r.Fragment,null,"Set labels using a key=value syntax:",r.createElement("br",null),'{ key = "value", key2 = "value" }',r.createElement("br",null),'key="value", key2="value"',r.createElement("br",null),"key=value, key2=value",r.createElement("br",null))},r.createElement(W.I,{width:32,id:`labels-${t.refId}`,name:"labels",onChange:h,value:t?.labels,placeholder:"key=value, key2=value2"}))),l===w.UV.RandomWalk&&r.createElement(ke,{onChange:h,query:t,ds:e}),l===w.UV.StreamingClient&&r.createElement(U,{onChange:V,query:t,ds:e}),l===w.UV.Live&&r.createElement(Ae,{onChange:s,query:t,ds:e}),l===w.UV.Simulation&&r.createElement(je,{onChange:s,query:t,ds:e}),l===w.UV.RawFrame&&r.createElement(Le,{onChange:s,query:t,ds:e}),l===w.UV.CSVFile&&r.createElement(We,{onChange:s,query:t,ds:e}),l===w.UV.CSVContent&&r.createElement(Ce,{onChange:s,query:t,ds:e}),l===w.UV.Logs&&r.createElement(T.Z,null,r.createElement(p._,{label:"Lines",labelWidth:14},r.createElement(W.I,{type:"number",name:"lines",value:t.lines,width:32,onChange:h,placeholder:"10"})),r.createElement(p._,{label:"Level",labelWidth:14},r.createElement(y.x,{onChange:h,name:"levelColumn",value:!!t.levelColumn}))),l===w.UV.USA&&r.createElement(Qe,{onChange:L,query:t.usa??{}}),l===w.UV.GrafanaAPI&&r.createElement(p._,{labelWidth:14,label:"Endpoint"},r.createElement(A.Ph,{options:be,onChange:x,width:32,value:be.find(d=>d.value===t.stringInput)})),l===w.UV.Arrow&&r.createElement(p._,{grow:!0},r.createElement(I.K,{name:"stringInput",value:t.stringInput,rows:10,placeholder:"Copy base64 text data from query result",onChange:h})),l===w.UV.PredictablePulse&&r.createElement(Ne,{onChange:F,query:t,ds:e}),l===w.UV.PredictableCSVWave&&r.createElement(Te,{onChange:b,waves:t.csvWave}),l===w.UV.NodeGraph&&r.createElement(Be,{onChange:d=>a({...t,nodes:d}),query:t}),l===w.UV.ServerError500&&r.createElement(Pe,{onChange:s,query:t,ds:e}),l===w.UV.Trace&&r.createElement(p._,{labelWidth:14,label:"Span count"},r.createElement(W.I,{type:"number",name:"spanCount",value:t.spanCount,width:32,onChange:h,placeholder:"10"})),k&&r.createElement("p",null,k))};class it extends r.PureComponent{constructor(e){super(e)}render(){return r.createElement("div",null,"See github for more information about setting up a reproducible test environment.",r.createElement("br",null),r.createElement("br",null),r.createElement(ce.Qj,{variant:"secondary",href:"https://github.com/grafana/grafana/tree/main/devenv",target:"_blank",rel:"noopener noreferrer"},"GitHub"),r.createElement("br",null))}}var M=m(59980),st=m(12877),ot=m(85850),lt=m(49372),z=m(67403),ie=m(71398),mt=m(62163),K=m(38685),ct=m(62626),ut=m(22069),pt=m(20308),dt=m(54899),ft=m(75118),gt=m(92624);function ve(t,e){const a=["A","B","C","D","E","F","G","H"],n=[];if(e>5)return[];for(const i of a){const o=`${t}${i}`;n.push({name:o,children:ve(o,e+1)})}return n}function se(t,e,a){if(a>=e.length||e[a]==="*")return t;const n=e[a];let i=[],o=[n];n.startsWith("{")&&(o=n.replace(/\{|\}/g,"").split(","));for(const s of t)for(const c of o)if(c.indexOf("*")!==-1){const l=c.replace("*","");new RegExp(`^${l}.*`,"gi").test(s.name)&&(i=i.concat(se([s],e,a+1)))}else s.name===c&&(i=i.concat(se(s.children,e,a+1)));return i}function ht(t){if(t.indexOf("value")===0)return[{name:t,children:[]}];const e=ve("",0);return se(e,t.split("."),0)}var v=m(5367),B=m(19695),j=m(66926);const bt={fields:[{name:v.z.id,type:g.fS.string,config:{links:[{title:"Traces/All",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}"))'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/OK",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { ok = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Errors",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { error = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Faults",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { fault = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}}]},values:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{name:v.z.title,type:g.fS.string,config:{displayName:"Name"},values:["auth","products","customers","orders","products","orders","api","shipping","orders","execute-api","shipping","www","api","www","products"]},{name:v.z.subTitle,type:g.fS.string,config:{displayName:"Type"},values:["Compute","SQL","SQL","SQL","remote","Function","Compute","Function","Function","remote","Function","Compute","client","client","Compute"]},{name:v.z.mainStat,type:g.fS.number,config:{unit:"ms/t",displayName:"Average response time"},values:[3.5394042646735553,15.906441318223264,4.913011921591567,7.4163203042094095,1092,22.85961441405067,56.135855729084696,4.45946191601527,12.818300278280843,4.25,12.565442646791492,77.63447512700567,40.387096774193544,77.63447512700567,27.648950187374872]},{name:v.z.secondaryStat,type:g.fS.number,config:{unit:"t/min",displayName:"Transactions per minute"},values:[50.56317154501667,682.4,512.8416666666667,125.64444444444445,.005585812037424941,137.59722222222223,300.0527777777778,30.582348853370394,125.77222222222223,.028706417080318163,30.582348853370394,165.675,.100021510002151,165.675,162.33055555555555]},{name:v.z.arc+"success",type:g.fS.number,config:{color:{mode:j.S.Fixed,fixedColor:"green"},displayName:"Sucesss"},values:[.9338865684765882,1,1,1,.5,1,.9901128505170387,.9069260134520997,1,0,.9069260134520997,.9624432037288534,0,.9624432037288534,.9824945669843769]},{name:v.z.arc+"faults",type:g.fS.number,config:{color:{mode:j.S.Fixed,fixedColor:"red"},displayName:"Faults"},values:[0,0,0,0,.5,0,.009479813736472288,0,0,0,0,.017168821152524185,0,.017168821152524185,.01750543301562313]},{name:v.z.arc+"errors",type:g.fS.number,config:{color:{mode:j.S.Fixed,fixedColor:"semi-dark-yellow"},displayName:"Errors"},values:[.06611343152341174,0,0,0,0,0,.0004073357464890436,.09307398654790038,0,1,.09307398654790038,.02038797511862247,1,.02038797511862247,0]},{name:v.z.arc+"throttled",type:g.fS.number,config:{color:{mode:j.S.Fixed,fixedColor:"purple"},displayName:"Throttled"},values:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}],meta:{preferredVisualisationType:"nodeGraph"},name:"nodes"},vt={fields:[{name:v.z.id,type:g.fS.string,config:{links:[{title:"Traces/All",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}")'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/OK",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { ok = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Errors",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { error = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Faults",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { fault = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}}]},values:["0__2","5__8","6__0","6__5","6__9","6__2","6__14","6__4","8__3","10__7","11__0","11__6","12__6","13__11","14__1","14__2","14__10"]},{name:v.z.source,type:g.fS.string,config:{},values:[0,5,6,6,6,6,6,6,8,10,11,11,12,13,14,14,14]},{name:"sourceName",type:g.fS.string,config:{},values:["auth","orders","api","api","api","api","api","api","orders","shipping","www","www","api","www","products","products","products"]},{name:v.z.target,type:g.fS.string,config:{},values:[2,8,0,5,9,2,14,4,3,7,0,6,6,11,1,2,10]},{name:"targetName",type:g.fS.string,config:{},values:["customers","orders","auth","orders","execute-api","customers","products","products","orders","shipping","auth","api","api","www","products","customers","shipping"]},{name:v.z.mainStat,type:g.fS.string,config:{displayName:"Response percentage"},values:["Success 100.00%","Success 100.00%","Success 100.00%","Success 100.00%","Errors 100.00%","Success 100.00%","Faults 1.75%","Faults 50.00%","Success 100.00%","Errors 9.31%","Errors 6.62%","Faults 1.13%","Errors 100.00%","Faults 1.72%","Success 100.00%","Success 100.00%","Faults 9.30%"]},{name:v.z.secondaryStat,type:g.fS.number,config:{unit:"t/min",displayName:"Transactions per minute"},values:[50.56317154501667,125.77222222222223,.03333333333333333,137.59722222222223,.022222222222222223,299.96666666666664,162.33055555555555,.005555555555555556,125.64444444444445,30.582348853370394,50.51111111111111,299.9166666666667,.100021510002151,165.675,682.4,162.33055555555555,30.558333333333334]}],meta:{preferredVisualisationType:"nodeGraph"},name:"edges"};function Se(t=10){const e=[],a={id:"root",title:"root",subTitle:"client",success:1,error:0,stat1:Math.random(),stat2:Math.random(),edges:[]};e.push(a);const n=[a],i=3;for(let u=1;u<t;u++){const h=St(u);e.push(h);const E=Math.floor(Math.random()*Math.floor(n.length-1)),x=n[E];x.edges.push(h.id),x.edges.length>=i&&n.splice(E,1),n.push(h)}const o=Math.floor(t/2);for(let u=0;u<=o;u++){const h=Math.floor(Math.random()*Math.floor(e.length-1)),E=Math.floor(Math.random()*Math.floor(e.length-1));h===E||e[h].id==="0"||e[E].id==="0"||e[h].edges.push(e[E].id)}const s={[v.z.id]:{values:new B.G,type:g.fS.string,config:{links:[{title:"test data link",url:"",internal:{query:{scenarioId:"logs",alias:"from service graph",stringInput:"tes"},datasourceUid:"gdev-testdata",datasourceName:"gdev-testdata"}}]}},[v.z.title]:{values:new B.G,type:g.fS.string},[v.z.subTitle]:{values:new B.G,type:g.fS.string},[v.z.mainStat]:{values:new B.G,type:g.fS.number,config:{displayName:"Transactions per second"}},[v.z.secondaryStat]:{values:new B.G,type:g.fS.number,config:{displayName:"Average duration"}},[v.z.arc+"success"]:{values:new B.G,type:g.fS.number,config:{color:{fixedColor:"green",mode:j.S.Fixed},displayName:"Success"}},[v.z.arc+"errors"]:{values:new B.G,type:g.fS.number,config:{color:{fixedColor:"red",mode:j.S.Fixed},displayName:"Errors"}},[v.z.icon]:{values:new B.G,type:g.fS.string}},c=new K.v({name:"nodes",fields:Object.keys(s).map(u=>({...s[u],name:u})),meta:{preferredVisualisationType:"nodeGraph"}}),l=new K.v({name:"edges",fields:[{name:v.z.id,values:new B.G,type:g.fS.string},{name:v.z.source,values:new B.G,type:g.fS.string},{name:v.z.target,values:new B.G,type:g.fS.string},{name:v.z.mainStat,values:new B.G,type:g.fS.number}],meta:{preferredVisualisationType:"nodeGraph"}}),k=new Set;for(const u of e){s.id.values.add(u.id),s.title.values.add(u.title),s[v.z.subTitle].values.add(u.subTitle),s[v.z.mainStat].values.add(u.stat1),s[v.z.secondaryStat].values.add(u.stat2),s.arc__success.values.add(u.success),s.arc__errors.values.add(u.error);const h=Math.random();s[v.z.icon].values.add(h>.9?"database":h<.1?"cloud":"");for(const E of u.edges){const x=`${u.id}--${E}`;k.has(x)||(k.add(x),l.fields[0].values.add(`${u.id}--${E}`),l.fields[1].values.add(u.id),l.fields[2].values.add(E),l.fields[3].values.add(Math.random()*100))}}return[c,l]}function St(t){const e=Math.random(),a=1-e;return{id:`service:${t}`,title:`service:${t}`,subTitle:"service",success:e,error:a,stat1:Math.random(),stat2:Math.random(),edges:[]}}function wt(){return[new K.v(bt),new K.v(vt)]}function yt(t=10){return Se(t)[1]}const kt={name:"response",refId:"A",meta:{preferredVisualisationType:"flamegraph"},fields:[{name:"level",values:[0,1,2,3,4,5,6,7,8,9,10,11,12,11,12,13,14,15,16,10,11,12,13,9,10,9,9,7,7,6,5,6,7,8,8,9,10,11,12,13,8,9,10,6,7,8,9,10,11,12,13,14,15,4,5,6,7,8,9,9,10,11,12,11,12,13,8,8,7,8,8,7,6,7,8,9,9,10,11,12,13,14,15,16,17,18,9,8,8,7,8,6,7,8,8,7,6,7,8,8,8,9,10,11,12,4,5,6,7,8,9,9,10,11,9,10,7,4,5,6,7,8,8,7,8,9,10,11,12,13,10,10,11,9,10,10,11,12,13,14,15,16,17,8,9,5,6,7,6,7,6,5,6,6,6,6,5,6,7,6,5,6,7,8,4,5,6,5,6,5,4,5,5,3,4,5,6,7,7,8,7,8,9,8,9,8,7,8,9,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,24,25,26,24,25,22,23,23,24,25,26,27,28,29,30,31,32,21,22,23,24,25,26,27,26,24,25,26,25,24,24,25,26,27,28,29,30,31,32,33,34,35,25,26,27,25,26,24,23,24,24,25,23,23,22,23,24,24,23,24,25,26,24,25,23,24,24,25,23,23,24,24,23,23,23,23,23,24,25,22,23,24,25,22,23,24,25,26,27,28,25,26,27,28,29,24,22,23,24,25,26,27,28,29,30,31,32,33,21,22,23,23,24,24,24,22,23,24,25,24,23,24,24,23,22,23,24,25,25,26,27,24,22,23,24,25,26,27,28,29,30,31,32,24,21,22,23,24,25,26,27,28,21,22,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,24,25,26,27,28,23,24,25,26,27,28,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,31,30,28,29,30,31,32,33,34,35,36,37,29,30,31,26,27,28,28,28,29,27,26,27,26,25,26,27,28,29,30,31,32,32,33,34,30,31,32,33,34,33,34,35,36,37,38,39,29,30,31,32,32,27,28,28,27,28,29,30,31,32,33,34,35,36,37,38,39,40,27,28,27,28,29,30,31,32,33,34,35,36,28,27,28,28,29,27,27,28,27,27,26,27,28,28,29,29,29,26,27,27,28,29,30,29,30,30,29,30,31,28,29,30,28,28,28,28,29,30,29,30,27,28,28,26,27,26,27,27,28,29,26,27,28,29,28,27,28,29,30,30,28,29,30,31,32,32,27,28,26,25,25,26,27,28,29,30,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,31,30,31,32,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,29,26,27,28,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,31,30,29,29,29,25,26,27,28,26,26,27,28,27,28,28,26,27,28,28,27,28,25,26,27,28,29,30,31,32,33,34,25,25,26,27,28,25,26,24,25,22,23,24,25,26,27,28,29,30,31,32,33,33,34,34,32,33,34,34,32,28,29,30,31,27,28,29,26,27,28,29,30,31,32,33,34,26,27,28,29,24,25,26,27,28,29,30,27,28,26,27,25,26,27,28,29,26,25,26,27,26,27,27,28,29,30,31,32,33,34,35,36,37,38,38,39,30,31,32,26,27,28,27,28,29,25,26,27,28,29,30,31,32,28,29,28,29,28,29,27,28,29,30,31,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,35,36,37,38,28,29,30,31,28,29,30,31,26,25,26,27,28,29,27,28,29,30,25,26,15,14,15,16,17,13,14,15,16,15,16,17,18,19,20,12,13,14,15,16,17,10,11,12,13,14,12,13,10,11,12,13,14,15,2,3,4,5,6,7,8,4,5,6,7,8,9,2,3,1,2,3,4,5,6,6,6,6,7,8,8,9,6,7,6,6,6,6,5,5,6,5,5,5,5,5,6,7,4,2,3,4,5,6,4,5,6,7,8,9,1,2,3,4,5,6,7,8,2,3,4,5,6,7,8,9,2,3,4,5,6,1,2,3,3,4,3,2,1,2,3,4,5,6,5,6,7,8,5,5,6,7,4,5,6,4,2,3,4,3,4,5,6,5,5,6,4,1,2,3,4,5,6,2,3,4,5,6,7,8,9,10,11,12,13,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,16,17,18,19,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4]},{name:"value",values:[1646e7,41e8,41e8,367e7,113e7,106e7,102e7,15e7,15e7,5e7,3e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,4e7,1e7,1e7,53e7,8e7,4e7,7e7,5e7,5e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,39e7,39e7,18e7,7e7,5e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,1e7,11e7,8e7,6e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,3e7,2e7,4e7,3e7,2e7,1e7,1e7,4e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,21e7,21e7,21e7,13e7,13e7,1e7,5e7,4e7,4e7,7e7,1e7,4e7,184e7,24e7,24e7,5e7,1e7,1e7,19e7,13e7,5e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,6e7,1e7,133e7,129e7,32e7,1e7,1e7,1e7,13e7,1e7,1e7,6e7,3e7,1e8,4e7,1e7,1e7,4e7,3e7,1e7,1e7,7e7,1e7,1e7,5e7,4e7,1e7,3e7,2e7,1e7,43e7,43e7,43e7,43e7,1e7,4e7,2e7,37e7,2e7,1e7,18e7,1e7,3e7,1e7,1e7,1e7,563e7,558e7,558e7,558e7,558e7,558e7,558e7,558e7,558e7,554e7,554e7,553e7,551e7,55e8,549e7,549e7,161e7,161e7,154e7,154e7,19e7,17e7,17e7,1e7,2e7,12e7,1e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,85e7,35e7,3e8,12e7,11e7,8e7,2e7,1e7,8e7,4e7,2e7,1e7,1e7,5e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,37e7,4e7,2e7,1e7,1e8,1e7,1e7,1e7,3e7,3e7,8e7,2e7,1e7,1e7,1e7,4e7,1e7,1e7,1e7,2e7,1e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,11e7,11e7,6e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,48e7,15e7,1e7,13e7,1e7,1e7,5e7,14e7,8e7,4e7,1e7,1e7,2e7,1e7,1e7,2e7,12e7,6e7,4e7,1e7,1e7,1e7,1e7,2e7,3e7,3e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,6e7,6e7,6e7,6e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,388e7,388e7,388e7,388e7,387e7,323e7,323e7,321e7,32e7,7e7,7e7,4e7,4e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,7e7,6e7,2e7,3e7,1e7,1e7,1e7,1e8,2e7,5e7,185e7,41e7,11e7,11e7,9e7,6e7,6e7,4e7,2e7,2e7,2e7,3e7,3e7,3e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,2e7,2e7,2e7,1e7,1e7,3e7,2e7,1e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,8e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,6e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,16e7,12e7,2e7,1e8,5e7,1e7,1e7,64e7,1e7,55e7,41e7,8e7,6e7,26e7,2e7,17e7,6e7,3e7,2e7,2e7,2e7,1e7,1e7,1e7,2e7,5e7,4e7,1e7,1e7,1e7,7e7,3e7,4e7,29e7,9e7,3e7,1e7,1e7,1e7,1e7,21e7,2e7,1e7,1e7,1e7,12e7,9e7,9e7,6e7,1e7,3e7,3e7,3e7,3e7,1e7,2e7,5e7,1e7,1e7,1e7,28e7,15e7,15e7,15e7,6e7,3e7,8e7,5e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,13e7,13e7,13e7,7e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,59e7,2e7,2e7,1e7,4e7,15e7,3e7,3e7,12e7,1e7,8e7,37e7,26e7,4e7,15e7,11e7,9e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,7e7,6e7,2e7,2e7,64e7,64e7,25e7,25e7,23e7,18e7,17e7,17e7,17e7,17e7,5e7,1e7,4e7,1e7,1e7,6e7,6e7,1e7,3e7,1e7,1e7,1e7,1e7,1e7,5e7,5e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,39e7,6e7,4e7,3e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,3e7,1e7,1e7,1e7,1e7,1e7,9e7,1e7,1e7,6e7,1e7,4e7,4e7,4e7,3e7,3e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,1e7,1e7,1e7,18e7,17e7,5e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,3e7,3e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,9e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,7e7,7e7,7e7,7e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,1e7,4e7,4e7,1e7,1e7,1e7,1e7,1e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,619e7,617e7,617e7,607e7,446e7,1e7,5e7,44e7,54e7,2e7,1e7,1e7,1e7,98e7,1e7,5e7,48e7,54e7,5e7,21e7,3e7,3e7,6e7,18e7,1e7,21e7,2e7,2e7,2e7,1e8,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,17e7,16e7,7e7,3e7,1e7,4e7,1e7,17e7,9e7,9e7,7e7,2e7,1e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,1e7,1e7,7e7,6e7,1e7,1e7,2e7,2e7,2e7,1e7,8e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,5e7,5e7,5e7,5e7,5e7,5e7,5e7,1e7,1e7,1e7,6e7,6e7,6e7,6e7,6e7,6e7,6e7,4e7,4e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7],config:{unit:"short"}},{name:"self",values:[16460,4100,4100,3670,1130,1060,1020,150,150,50,30,20,10,10,10,10,10,10,10,10,10,10,10,80,40,10,10,530,80,40,70,50,50,30,10,10,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,20,10,390,390,180,70,50,10,20,20,10,10,10,10,10,10,10,20,10,10,10,110,80,60,10,20,20,20,10,10,10,10,10,10,10,20,10,10,30,20,40,30,20,10,10,40,40,10,10,10,10,10,10,10,210,210,210,130,130,10,50,40,40,70,10,40,1840,240,240,50,10,10,190,130,50,20,10,10,10,10,10,10,80,20,10,10,10,10,10,10,10,10,60,10,1330,1290,320,10,10,10,130,10,10,60,30,100,40,10,10,40,30,10,10,70,10,10,50,40,10,30,20,10,430,430,430,430,10,40,20,370,20,10,180,10,30,10,10,10,5630,5580,5580,5580,5580,5580,5580,5580,5580,5540,5540,5530,5510,5500,5490,5490,1610,1610,1540,1540,190,170,170,10,20,120,10,10,20,20,20,10,10,10,10,10,10,10,10,10,10,10,850,350,300,120,110,80,20,10,80,40,20,10,10,50,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,10,10,10,10,10,370,40,20,10,100,10,10,10,30,30,80,20,10,10,10,40,10,10,10,20,10,20,10,10,10,10,10,10,10,110,110,60,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,480,150,10,130,10,10,50,140,80,40,10,10,20,10,10,20,120,60,40,10,10,10,10,20,30,30,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10,10,10,60,60,60,60,30,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,30,30,30,30,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3880,3880,3880,3880,3870,3230,3230,3210,320,70,70,40,40,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,30,10,10,10,10,10,10,10,10,10,20,20,20,70,60,20,30,10,10,10,100,20,50,1850,410,110,110,90,60,60,40,20,20,20,30,30,30,10,10,20,20,20,20,20,20,10,20,20,20,10,10,30,20,10,40,10,10,10,10,10,10,10,10,10,10,10,10,10,40,10,80,30,30,10,10,10,10,10,10,10,20,60,30,30,10,10,10,10,10,10,160,120,20,100,50,10,10,640,10,550,410,80,60,260,20,170,60,30,20,20,20,10,10,10,20,50,40,10,10,10,70,30,40,290,90,30,10,10,10,10,210,20,10,10,10,120,90,90,60,10,30,30,30,30,10,20,50,10,10,10,280,150,150,150,60,30,80,50,20,20,20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,20,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,130,130,130,70,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,40,10,590,20,20,10,40,150,30,30,120,10,80,370,260,40,150,110,90,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,70,60,20,20,640,640,250,250,230,180,170,170,170,170,50,10,40,10,10,60,60,10,30,10,10,10,10,10,50,50,20,10,10,10,10,10,10,10,10,10,10,10,10,10,390,60,40,30,20,20,10,10,10,10,10,30,10,10,10,10,10,90,10,10,60,10,40,40,40,30,30,30,30,30,30,30,30,10,10,10,10,10,10,20,10,10,10,10,10,180,170,50,20,20,20,20,10,10,10,10,10,10,10,30,30,20,20,20,10,10,10,10,10,10,10,90,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,70,70,70,70,10,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,10,10,10,10,10,20,20,20,20,20,10,40,40,10,10,10,10,10,30,30,30,30,30,30,10,10,6190,6170,6170,6070,4460,10,50,440,540,20,10,10,10,980,10,50,480,540,50,210,30,30,60,180,10,210,20,20,20,100,20,20,10,10,10,10,10,10,10,10,10,40,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,10,10,10,10,10,170,160,70,30,10,40,10,170,90,90,70,20,10,30,30,30,30,10,10,10,10,10,10,10,10,80,10,10,70,60,10,10,20,20,20,10,80,10,10,10,10,10,20,20,20,20,20,20,20,20,20,20,20,20,50,50,50,50,50,50,50,10,10,10,60,60,60,60,60,60,60,40,40,30,30,30,30,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],config:{unit:"short"}},{name:"label",values:["total","test/pkg/agent.(*Target).start.func1","test/pkg/agent.(*Target).scrape","test/pkg/distributor.(*Distributor).Push","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).deflate","compress/flate.(*compressor).writeBlock","compress/flate.(*huffmanBitWriter).writeBlock","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","runtime.memmove","compress/flate.(*huffmanEncoder).assignEncodingAndSize","sort.Sort","sort.quickSort","sort.quickSort","sort.quickSort","sort.insertionSort","compress/flate.(*byFreq).sort","sort.Sort","sort.quickSort","sort.doPivot","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.offsetCode","compress/flate.(*huffmanBitWriter).dynamicSize","compress/flate.(*compressor).findMatch","compress/flate.matchLen","compress/flate.hash4","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.heapBitsSetType","runtime.heapBitsSetTypeGCProg","runtime.runGCProg","compress/flate.(*compressor).initDeflate","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","test/pkg/pprof.OpenRaw","test/pkg/gen/google/v1.(*Profile).UnmarshalVT","test/pkg/gen/google/v1.(*Sample).UnmarshalVT","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).uncacheSpan","runtime.(*spanSet).push","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.getMCache","runtime.nextFreeFast","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.growslice","test/pkg/gen/google/v1.(*Location).UnmarshalVT","runtime.newobject","runtime.mallocgc","runtime.heapBitsForAddr","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*mheap).allocMSpanLocked","runtime.(*fixalloc).alloc","runtime.heapBitsSetType","runtime.nextFreeFast","runtime.getMCache","runtime.growslice","runtime.mallocgc","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.memmove","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).uncacheSpan","runtime.(*spanSet).push","runtime.(*headTailIndex).incTail","compress/gzip.(*Writer).Close","compress/flate.(*compressor).close","compress/flate.(*compressor).deflate","compress/flate.(*compressor).writeBlock","compress/flate.(*huffmanBitWriter).writeBlock","compress/flate.offsetCode","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.(*compressor).findMatch","test/pkg/pprof.(*Profile).Normalize","sort.Sort","sort.quickSort","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*sortedSample).Swap","sort.quickSort","sort.quickSort","sort.quickSort","sort.quickSort","sort.quickSort","sort.insertionSort","test/pkg/pprof.(*sortedSample).Less","sort.doPivot","sort.insertionSort","test/pkg/pprof.(*sortedSample).Swap","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*sortedSample).Swap","runtime.gcWriteBarrierR8","runtime.gcWriteBarrier","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.findObject","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*Profile).clearSampleReferences","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).clearSampleReferences.func1","runtime.growslice","runtime.memmove","runtime.memmove","test/pkg/pprof.StacktracesHasher.Hashes","github.com/cespare/xxhash/v2.round","github.com/cespare/xxhash/v2.(*Digest).Sum64","github.com/cespare/xxhash/v2.(*Digest).Write","github.com/cespare/xxhash/v2.u64","github.com/samber/lo.Uniq[...]","runtime.mapaccess2_fast64","runtime.memhash64","runtime.bucketMask","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).Normalize.func1","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).Normalize.func1.1","test/pkg/gen/google/v1.(*Profile).MarshalToVT","test/pkg/gen/google/v1.(*Profile).MarshalToSizedBufferVT","test/pkg/gen/google/v1.(*Sample).MarshalToSizedBufferVT","test/pkg/gen/google/v1.(*Profile).SizeVT","test/pkg/gen/google/v1.(*Sample).SizeVT","test/pkg/gen/google/v1.encodeVarint","test/pkg/gen/google/v1.(*Profile).SizeVT","test/pkg/gen/google/v1.(*Location).SizeVT","test/pkg/gen/google/v1.(*Sample).SizeVT","io/ioutil.ReadAll","io.ReadAll","compress/gzip.(*Reader).Read","compress/flate.(*decompressor).Read","runtime.memmove","compress/flate.(*dictDecoder).tryWriteCopy","runtime.memmove","compress/flate.(*decompressor).huffmanBlock","compress/flate.(*dictDecoder).writeCopy","runtime.memmove","compress/flate.(*decompressor).huffSym","bytes.(*Reader).ReadByte","compress/flate.(*decompressor).moreBits","compress/flate.(*decompressor).nextBlock","compress/flate.(*decompressor).huffmanBlock","compress/flate.(*decompressor).moreBits","net/http.(*conn).serve","net/http.serverHandler.ServeHTTP","net/http.HandlerFunc.ServeHTTP","test/pkg/util.glob..func1.1","golang.org/x/net/http2/h2c.h2cHandler.ServeHTTP","net/http.HandlerFunc.ServeHTTP","test/pkg/create.(*create).initServer.func2.1","net/http.HandlerFunc.ServeHTTP","github.com/opentracing-contrib/go-stdlib/nethttp.MiddlewareFunc.func5","net/http.HandlerFunc.ServeHTTP","github.com/weaveworks/common/middleware.Log.Wrap.func1","net/http.HandlerFunc.ServeHTTP","github.com/weaveworks/common/middleware.Instrument.Wrap.func1","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics","github.com/weaveworks/common/middleware.Instrument.Wrap.func1.2","github.com/gorilla/mux.(*Router).ServeHTTP","github.com/bufbuild/connect-go.(*Handler).ServeHTTP","github.com/bufbuild/connect-go.NewUnaryHandler[...].func1","github.com/bufbuild/connect-go.NewUnaryHandler[...].func1.1","test/pkg/ingester.(*Ingester).Push","io.ReadAll","github.com/klauspost/compress/gzip.(*Reader).Read","github.com/klauspost/compress/flate.(*decompressor).Read","github.com/klauspost/compress/flate.(*dictDecoder).tryWriteCopy","github.com/klauspost/compress/flate.(*dictDecoder).writeByte","github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader","github.com/klauspost/compress/flate.(*dictDecoder).writeCopy","runtime.memmove","github.com/klauspost/compress/flate.(*decompressor).nextBlock","github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader","runtime.growslice","runtime.memmove","runtime.mallocgc","runtime.(*mcache).allocLarge","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*pageAlloc).alloc","runtime.(*pageAlloc).allocRange","runtime.(*pageAlloc).update","runtime.(*pallocBits).summarize","test/pkg/create.(*Head).Ingest","test/pkg/create.(*Head).convertSamples","test/pkg/create.(*deduplicatingSlice[...]).ingest","test/pkg/create.(*stacktracesHelper).rewrite","test/pkg/create.idConversionTable.rewriteUint64","runtime.mapaccess2_fast64","runtime.memhash64","runtime.add","test/pkg/create.(*stacktracesHelper).key","github.com/cespare/xxhash/v2.(*Digest).Write","runtime.memmove","github.com/cespare/xxhash/v2.round","runtime.mapaccess2_fast64","runtime.mapassign_fast64","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.findfunc","runtime.(*hmap).newoverflow","runtime.growslice","runtime.releasem","runtime.growWork_fast64","runtime.evacuate_fast64","encoding/binary.littleEndian.PutUint64","runtime.newobject","runtime.acquirem","runtime.mallocgc","runtime.heapBitsSetType","test/pkg/create.(*labelCache).rewriteLabels","runtime.mapaccess1_fast64","test/pkg/create.(*deduplicatingSlice[...]).ingest","runtime.mapaccess2_faststr","aeshashbody","memeqbody","runtime.mapassign_fast64","runtime.(*hmap).newoverflow","runtime.growslice","runtime.nextFreeFast","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.mapaccess2","memeqbody","runtime.memhash_varlen","aeshashbody","runtime.evacuated","test/pkg/create.(*locationsHelper).key","github.com/cespare/xxhash/v2.(*Digest).Sum64","github.com/cespare/xxhash/v2.(*Digest).Write","runtime.bucketShift","test/pkg/create.(*stringsHelper).addToRewriter","encoding/binary.littleEndian.PutUint64","runtime.add","test/pkg/create.(*locationsHelper).rewrite","test/pkg/create.idConversionTable.rewriteUint64","runtime.mapaccess2_fast64","github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues","github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues","github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues","github.com/prometheus/client_golang/prometheus.hashAdd","test/pkg/create.(*deltaProfiles).computeDelta","test/pkg/create.deltaSamples","runtime.mapassign_fast64","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.typedmemmove","runtime.bulkBarrierPreWrite","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.heapBitsSetType","runtime.mapaccess2_fast64","test/pkg/create.copySlice[...]","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*mheap).allocMSpanLocked","runtime.(*fixalloc).alloc","test/pkg/gen/google/v1.(*Profile).UnmarshalVT","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.add1","runtime.heapBitsForAddr","runtime.heapBitsSetType","test/pkg/gen/google/v1.(*Location).UnmarshalVT","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.nextFreeFast","runtime.newobject","runtime.getMCache","runtime.mallocgc","runtime.roundupsize","test/pkg/gen/google/v1.(*Sample).UnmarshalVT","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.acquirem","runtime.growslice","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.pcdatavalue","runtime.pcvalue","runtime.step","runtime.memclrNoHeapPointers","github.com/go-kit/log.(*context).Log","github.com/go-kit/log.bindValues","github.com/go-kit/log.Caller.func1","runtime.Caller","runtime.(*Frames).Next","runtime.funcline1","runtime.pcvalue","runtime.readvarint","test/pkg/gen/google/v1.(*Profile).ReturnToVTPool","test/pkg/gen/google/v1.(*Profile).ResetVT","github.com/bufbuild/connect-go.(*errorTranslatingSender).Send","github.com/bufbuild/connect-go.(*connectUnaryHandlerSender).Send","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal","github.com/bufbuild/connect-go.(*compressionPool).Compress","github.com/bufbuild/connect-go.(*compressionPool).putCompressor","compress/gzip.(*Writer).Close","compress/gzip.(*Writer).Write","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.spanOf","compress/gzip.(*Writer).Reset","compress/gzip.(*Writer).init","compress/flate.(*Writer).Reset","compress/flate.(*compressor).reset","runtime.memclrNoHeapPointers","github.com/bufbuild/connect-go.(*compressionPool).getCompressor","compress/gzip.(*Writer).Reset","compress/gzip.(*Writer).init","compress/flate.(*Writer).Reset","compress/flate.(*compressor).reset","runtime.memclrNoHeapPointers","github.com/bufbuild/connect-go.receiveUnaryRequest[...]","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryHandlerReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc","bytes.(*Buffer).ReadFrom","github.com/weaveworks/common/middleware.(*reqBody).Read","net/http.(*body).Read","net/http.(*body).readLocked","net/http/internal.(*chunkedReader).Read","bufio.(*Reader).Read","net/http.(*connReader).Read","net.(*conn).Read","net.(*netFD).Read","syscall.Read","syscall.read","syscall.Syscall","net/http.(*ServeMux).ServeHTTP","net/http.HandlerFunc.ServeHTTP","net/http/pprof.Index","net/http/pprof.handler.ServeHTTP","runtime/pprof.(*Profile).WriteTo","runtime/pprof.writeAlloc","runtime/pprof.writeHeapInternal","runtime/pprof.writeHeapProto","runtime/pprof.(*profileBuilder).pbSample","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.token.length","compress/flate.(*deflateFast).encode","compress/flate.NewWriter","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime/pprof.writeHeapProto.func1","runtime/pprof.(*profileBuilder).pbLabel","runtime.mapaccess2_faststr","runtime/pprof.(*protobuf).int64Opt","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime/pprof.(*protobuf).startMessage","runtime/pprof.(*protobuf).uint64s","runtime.memmove","runtime/pprof.(*protobuf).int64s","runtime/pprof.(*profileBuilder).appendLocsForStack","runtime/pprof.(*profileBuilder).emitLocation","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.heapBitsSetType","runtime.heapBitsSetTypeGCProg","runtime.runGCProg","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointersChunked","runtime.memclrNoHeapPointers","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).indexTokens","runtime.growslice","runtime.mallocgc","runtime.acquirem","runtime.mapassign_faststr","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.pcdatavalue","runtime.pcvalue","runtime.step","runtime.mapaccess1_faststr","aeshashbody","runtime.mapassign_fast64","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.memclrHasPointers","runtime.bulkBarrierPreWrite","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.spanOf","runtime.memhash64","runtime/pprof.(*profileBuilder).pbLine","runtime/pprof.(*protobuf).int64Opt","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime.duffcopy","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime.duffzero","runtime/pprof.(*protobuf).int64Opt","runtime.CallersFrames","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.heapBitsForAddr","runtime/pprof.allFrames","runtime.duffcopy","runtime.(*Frames).Next","runtime.funcline1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcfile","runtime.findnull","indexbytebody","runtime.funcname","runtime.findnull","indexbytebody","runtime.findfunc","runtime.duffzero","runtime.(*Func).Entry","runtime.pcdatavalue1","runtime.pcvalue","runtime.step","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.mapaccess2_fast64","runtime.memhash64","runtime/pprof.runtime_expandFinalInlineFrame","runtime.findfunc","runtime.pcdatavalue1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime/pprof.(*profileBuilder).stringIndex","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.memmove","runtime.mapassign_faststr","runtime.growWork_faststr","runtime.evacuate_faststr","aeshashbody","runtime.advanceEvacuationMark","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.heapBitsSetType","runtime.mapaccess2_faststr","aeshashbody","runtime/pprof.(*protobuf).uint64Opt","runtime.funcdata","runtime/pprof.(*profileBuilder).build","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*deflateFast).encode","compress/flate.(*deflateFast).matchLen","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.(*huffmanBitWriter).writeBits","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","compress/flate.(*huffmanBitWriter).writeDynamicHeader","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.hash","compress/gzip.(*Writer).Close","compress/flate.(*compressor).close","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeBits","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","fmt.Fprintf","fmt.(*pp).doPrintf","fmt.(*pp).printArg","fmt.(*pp).fmtInteger","fmt.(*fmt).fmtInteger","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.token.offset","compress/flate.hash","compress/flate.(*deflateFast).encode","compress/flate.load64","runtime.FuncForPC","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime.findfunc","runtime.pcdatavalue1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcline1","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime/pprof.newProfileBuilder","runtime/pprof.(*profileBuilder).readMapping","os.ReadFile","runtime.growslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.duffcopy","runtime.(*Func).Name","runtime.funcname","runtime.findnull","indexbytebody","runtime/pprof.scaleHeapSample","math.archExp","runtime.(*MemProfileRecord).Stack","runtime.duffcopy","runtime/pprof.writeGoroutine","runtime/pprof.writeRuntimeProfile","runtime/pprof.runtime_goroutineProfileWithLabels","runtime.goroutineProfileWithLabels","runtime.forEachGRace","runtime.goroutineProfileWithLabels.func4","runtime.systemstack","runtime.goroutineProfileWithLabels.func4.1","runtime.saveg","runtime.gentraceback","runtime.pcdatavalue","runtime.funcInfo.entry","runtime.pcvalue","runtime.step","runtime.readvarint","runtime.funcspdelta","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.findfunc","runtime.goroutineProfileWithLabels.func1","runtime.isSystemGoroutine","runtime.funcname","runtime.findnull","runtime.goroutineProfileWithLabels.func2","runtime.goroutineProfileWithLabels.func1","runtime.isSystemGoroutine","runtime.startTheWorld","runtime.systemstack","runtime.startTheWorld.func1","runtime.startTheWorldWithSema","runtime.wakep","runtime.startm","runtime.notewakeup","runtime.futexwakeup","runtime.futex","runtime.systemstack","runtime.goroutineProfileWithLabels.func3","runtime.saveg","runtime.gentraceback","runtime/pprof.printCountProfile","runtime/pprof.printCountProfile.func1","fmt.Fprintf","fmt.(*pp).doPrintf","fmt.(*pp).printArg","fmt.(*pp).fmtInteger","fmt.(*fmt).fmtInteger","bytes.(*Buffer).Write","runtime.memmove","runtime.slicebytetostring","runtime.nextFreeFast","runtime.mapassign_faststr","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.nextFreeFast","aeshashbody","runtime/pprof.(*profileBuilder).appendLocsForStack","runtime/pprof.(*profileBuilder).stringIndex","runtime.overLoadFactor","runtime/pprof.(*profileBuilder).emitLocation","runtime/pprof.(*profileBuilder).pbLine","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.NewWriter","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.heapBits.bits","runtime.scanobject","runtime.greyobject","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime/pprof.allFrames","runtime.newobject","runtime.nextFreeFast","runtime.(*Frames).Next","runtime.funcline1","runtime.pcvalue","runtime/pprof.newProfileBuilder","runtime/pprof.(*profileBuilder).readMapping","runtime/pprof.parseProcSelfMaps","runtime/pprof.elfBuildID","os.OpenFile","syscall.Open","syscall.openat","syscall.Syscall6","runtime/pprof.parseProcSelfMaps.func1","bytes.Cut","runtime.slicebytetostring","runtime.nextFreeFast","runtime/pprof.(*profileBuilder).addMapping","runtime.growslice","os.Open","os.OpenFile","syscall.Open","syscall.openat","syscall.Syscall6","os.openFileNolog","os.newFile","runtime.SetFinalizer","runtime.systemstack","runtime.SetFinalizer.func2","runtime.addfinalizer","runtime.addspecial","os.ReadFile","runtime.growslice","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*pageAlloc).allocToCache","os.(*File).Stat","internal/poll.(*FD).Fstat","syscall.Fstat","syscall.Syscall","os.(*File).Read","syscall.Read","syscall.read","syscall.Syscall","runtime.newobject","sort.Sort","sort.quickSort","sort.doPivot","runtime/pprof.(*keysByCount).Less","cmpbody","sort.quickSort","sort.insertionSort","runtime/pprof.(*keysByCount).Less","runtime.mapaccess1_faststr","runtime/pprof.(*profileBuilder).pbSample","runtime/pprof.(*protobuf).uint64s","runtime.newobject","github.com/prometheus/client_golang/prometheus.(*GaugeVec).WithLabelValues","runtime.assertI2I","runtime.getitab","runtime.(*itabTableType).find","github.com/weaveworks/common/middleware.Instrument.getRouteName","github.com/weaveworks/common/middleware.getRouteName","github.com/weaveworks/common/middleware.MakeLabelValue","strings.Trim","github.com/gorilla/mux.(*Router).Match","github.com/gorilla/mux.(*Route).Match","github.com/gorilla/mux.(*routeRegexp).Match","regexp.(*Regexp).doExecute","regexp.(*Regexp).backtrack","regexp.(*Regexp).tryBacktrack","github.com/weaveworks/common/logging.gokit.Debugf","github.com/go-kit/log.(*context).Log","github.com/go-kit/log.bindValues","github.com/go-kit/log.Caller.func1","runtime.Caller","runtime.callers","github.com/uber/jaeger-client-go.(*Tracer).Extract","github.com/uber/jaeger-client-go.(*TextMapPropagator).Extract","runtime.assertE2I2","runtime.getitab","runtime.(*itabTableType).find","runtime.newobject","runtime.nextFreeFast","github.com/weaveworks/common/middleware.Tracer.Wrap.func1","github.com/weaveworks/common/middleware.getRouteName","github.com/gorilla/mux.(*Router).Match","github.com/gorilla/mux.(*Route).Match","github.com/gorilla/mux.(*routeRegexp).Match","regexp.(*Regexp).doExecute","net/http.(*response).finishRequest","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","net/http.(*chunkWriter).writeHeader","net/http.Header.writeSubset","net/http.Header.sortedKeyValues","sync.(*Pool).Get","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","net/http.(*conn).readRequest","runtime.mapiterinit","runtime.gcBgMarkWorker","runtime.systemstack","runtime.gcBgMarkWorker.func2","runtime.gcDrain","runtime.scanobject","runtime.(*gcBits).bytep","runtime.(*mspan).objIndex","runtime.pageIndexOf","runtime.greyobject","runtime.(*gcWork).put","runtime.getempty","runtime.putfull","runtime.(*lfstack).push","runtime.findObject","runtime.spanOf","runtime.(*mspan).markBitsForIndex","runtime.spanOf","runtime.markBits.isMarked","runtime.arenaIndex","runtime.heapBitsForAddr","runtime.(*gcWork).tryGet","runtime.trygetfull","runtime.spanOfUnchecked","runtime.heapBits.next","runtime.gcFlushBgCredit","runtime.heapBits.bits","runtime.(*gcWork).balance","runtime.handoff","runtime.getempty","runtime.(*gcWork).tryGetFast","runtime.gcMarkDone","runtime.gcMarkTermination","runtime.mProf_Flush","runtime.mProf_FlushLocked","runtime.(*bucket).mp","runtime.systemstack","runtime.gcMarkTermination.func4","runtime.forEachP","runtime.gcMarkTermination.func4.1","runtime.(*mcache).prepareForSweep","runtime.(*mcache).releaseAll","net/http.(*persistConn).readLoop","runtime.selectgo","runtime.send","runtime.goready","runtime.systemstack","runtime.goready.func1","runtime.ready","runtime.runqput","bufio.(*Reader).Peek","bufio.(*Reader).fill","net/http.(*persistConn).Read","net.(*conn).Read","net.(*netFD).Read","syscall.Read","syscall.read","syscall.Syscall","net/http.(*persistConn).readResponse","github.com/opentracing-contrib/go-stdlib/nethttp.(*Tracer).gotFirstResponseByte","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.bgsweep","runtime.sweepone","runtime.(*sweepLocker).tryAcquire","runtime.(*sweepLocked).sweep","runtime.(*gcBitsArena).tryAlloc","runtime.spanClass.sizeclass","runtime/internal/atomic.(*Uint32).CompareAndSwap","runtime.mcall","runtime.park_m","runtime.schedule","runtime.findrunnable","runtime.netpoll","runtime.epollwait","runtime.stopm","runtime.notesleep","runtime.futexsleep","runtime.futex","runtime.(*randomOrder).start","runtime.checkTimers","runtime.runtimer","runtime.dodeltimer0","runtime.gcstopm","runtime.lock2","runtime.procyield","runtime.(*lfstack).pop","runtime.gosched_m","runtime.lock","runtime.lock2","runtime.goschedImpl","runtime.schedule","runtime.execute","runtime.casgstatus","runtime.checkTimers","runtime.findrunnable","runtime.checkTimers","runtime.casgstatus","net/http.(*persistConn).writeLoop","net/http.(*Request).write","net/http.newTransferWriter","runtime.convI2I","runtime.getitab","runtime.(*itabTableType).find","runtime.chansend1","runtime.chansend","runtime.send","runtime.goready","runtime.systemstack","runtime.goready.func1","runtime.ready","runtime.wakep","runtime.startm","runtime.notewakeup","runtime.futexwakeup","runtime.futex","bufio.(*Writer).Flush","net/http.persistConnWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","runtime.exitsyscall","runtime.exitsyscallfast","runtime.exitsyscallfast_reacquired","test/pkg/distributor.(*Distributor).Push.func1","test/pkg/distributor.(*Distributor).sendProfiles","test/pkg/distributor.(*Distributor).sendProfilesErr","test/pkg/gen/ingester/v1/ingesterv1connect.(*ingesterServiceClient).Push","github.com/bufbuild/connect-go.(*Client[...]).CallUnary","github.com/bufbuild/connect-go.NewClient[...].func2","github.com/bufbuild/connect-go.NewClient[...].func1","github.com/bufbuild/connect-go.receiveUnaryResponse[...]","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc","github.com/bufbuild/connect-go.(*compressionPool).Decompress","github.com/bufbuild/connect-go.(*compressionPool).getDecompressor","compress/gzip.(*Reader).Reset","compress/gzip.(*Reader).readHeader","compress/flate.(*dictDecoder).init","runtime.makeslice","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.heapBits.initSpan","compress/flate.(*decompressor).Reset","runtime.newstack","runtime.copystack","runtime.gentraceback","compress/flate.NewReader","compress/flate.fixedHuffmanDecoderInit","runtime.newstack","runtime.copystack","runtime.gentraceback","runtime.funcspdelta","runtime.pcvalue","runtime.step","github.com/bufbuild/connect-go.(*errorTranslatingSender).Send","github.com/bufbuild/connect-go.(*connectClientSender).Send","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).write","github.com/bufbuild/connect-go.(*duplexHTTPCall).Write","io.(*pipe).write","runtime.chanrecv1","runtime.chanrecv","runtime.recv","runtime.gcWriteBarrierR8","runtime.gcWriteBarrier","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.findObject","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Close","github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Close","github.com/bufbuild/connect-go.(*duplexHTTPCall).CloseRead","github.com/opentracing-contrib/go-stdlib/nethttp.closeTracker.Close","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime/pprof.profileWriter","runtime/pprof.(*profileBuilder).addCPUData","runtime/pprof.(*profMap).lookup","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","net/http.(*connReader).backgroundRead","net.(*conn).Read","net.(*netFD).Read","internal/poll.(*FD).Read"]}]};var Ct=m(59670);class Wt extends Ct.v6{toDataQuery(e){return{refId:"TestDataDataSource-QueryVariable",stringInput:e.query,scenarioId:w.UV.VariablesQuery,csvWave:void 0}}}class Et extends ut.CK{constructor(e,a=(0,pt.J)()){super(e),this.templateSrv=a,this.variables=new Wt}query(e){const a=[],n=[];for(const i of e.targets)if(!i.hide)switch(this.resolveTemplateVariables(i,e.scopedVars),i.scenarioId){case"live":n.push(Tt(i,e));break;case"streaming_client":n.push(_e(i,e));break;case"grafana_api":n.push(xt(i,e));break;case"annotations":n.push(this.annotationDataTopicTest(i,e));break;case"variables-query":n.push(this.variablesQuery(i,e));break;case"node_graph":n.push(this.nodesQuery(i,e));break;case"flame_graph":n.push(this.flameGraphQuery());break;case"trace":n.push(this.trace(i,e));break;case"raw_frame":n.push(this.rawFrameQuery(i,e));break;case"server_error_500":const o=this.serverErrorQuery(i,e);o?n.push(o):a.push(i);break;case"manual_entry":{let s=`Time,Value
`;if(i.points)for(const c of i.points)s+=`${c[1]},${c[0]}
`;i.scenarioId=w.UV.CSVContent,i.csvContent=s}default:a.push(i)}if(a.length){const i={...e,targets:a};n.push(super.query(i))}return n.length===0?(0,M.of)({data:[]}):(0,st.T)(...n)}resolveTemplateVariables(e,a){e.labels&&(e.labels=this.templateSrv.replace(e.labels,a)),e.alias&&(e.alias=this.templateSrv.replace(e.alias,a)),e.scenarioId&&(e.scenarioId=this.templateSrv.replace(e.scenarioId,a)),e.stringInput&&(e.stringInput=this.templateSrv.replace(e.stringInput,a)),e.csvContent&&(e.csvContent=this.templateSrv.replace(e.csvContent,a)),e.rawFrameContent&&(e.rawFrameContent=this.templateSrv.replace(e.rawFrameContent,a))}annotationDataTopicTest(e,a){const n=this.buildFakeAnnotationEvents(a.range,50),i=new ie.i(n);return i.meta={dataTopic:mt.w5.Annotations},(0,M.of)({key:e.refId,data:[i]}).pipe((0,z.g)(100))}buildFakeAnnotationEvents(e,a){let n=e.from.valueOf();const i=e.to.valueOf(),o=[],s=(i-n)/a;for(let c=0;c<a;c++)o.push({time:n,text:'This is the text, <a href="https://grafana.com">Grafana.com</a>',tags:["text","server"]}),n+=s;return o}annotationQuery(e){return Promise.resolve(this.buildFakeAnnotationEvents(e.range,10))}getQueryDisplayText(e){const a=e.scenarioId??"Default scenario";return e.alias?a+" as "+e.alias:a}testDatasource(){return Promise.resolve({status:"success",message:"Data source is working"})}getScenarios(){return this.scenariosCache||(this.scenariosCache=this.getResource("scenarios")),this.scenariosCache}variablesQuery(e,a){const n=e.stringInput??"",i=this.templateSrv.replace(n,(0,gt._6)({query:n,wildcardChar:"*"})),s=ht(i).map(l=>({value:l.name,text:l.name})),c=new ie.i(s);return(0,M.of)({data:[c]}).pipe((0,z.g)(100))}nodesQuery(e,a){const n=e.nodes?.type||"random";let i;switch(n){case"random":i=Se(e.nodes?.count);break;case"response":i=wt();break;case"random edges":i=[yt(e.nodes?.count)];break;default:throw new Error(`Unknown node_graph sub type ${n}`)}return(0,M.of)({data:i}).pipe((0,z.g)(100))}flameGraphQuery(){return(0,M.of)({data:[kt]}).pipe((0,z.g)(100))}trace(e,a){const n=new K.v({meta:{preferredVisualisationType:"trace"},fields:[{name:"traceID"},{name:"spanID"},{name:"parentSpanID"},{name:"operationName"},{name:"serviceName"},{name:"serviceTags"},{name:"startTime"},{name:"duration"},{name:"logs"},{name:"references"},{name:"tags"}]}),i=a.targets[0].spanCount||10,o="75c665dfb68",s=Date.now()-1e3*60*30;for(let c=0;c<i;c++)n.add({traceID:o+"10000",spanID:o+(1e4+c),parentSpanID:c===0?"":o+1e4,operationName:`Operation ${c}`,serviceName:`Service ${c}`,startTime:s+c*100,duration:300});return(0,M.of)({data:[n]}).pipe((0,z.g)(100))}rawFrameQuery(e,a){try{const n=JSON.parse(e.rawFrameContent??"[]").map(i=>{const o=(0,q.g0)(i);return o.refId=e.refId,o});return(0,M.of)({data:n,state:Z.Gu.Done}).pipe((0,z.g)(100))}catch(n){return(0,M.of)({data:[],error:n instanceof Error?n:new Error("Unkown error")}).pipe((0,z.g)(100))}}serverErrorQuery(e,a){const{errorType:n}=e;if(n==="server_panic")return null;if((e.stringInput??"")===""){if(n==="frontend_exception")throw new Error("Scenario threw an exception in the frontend because the input was empty.");return(0,ot._)(()=>new Error("Scenario returned an error because the input was empty."))}return null}}function xt(t,e){const a=`/api/${t.stringInput}`;return(0,lt.D)((0,dt.i)().get(a).then(n=>{const i=new ie.i(n);return{state:Z.Gu.Done,data:[i]}}))}let Ft=1e3;function Tt(t,e){if(!t.channel)throw new Error("Missing channel config");return(0,ft.gj)().getDataStream({addr:{scope:ct.z.Plugin,namespace:"testdata",path:t.channel},key:`testStream.${Ft++}`})}class we{constructor(){}}we.template="<h2>Annotation scenario</h2>";const It=new Y.hf(Et).setConfigEditor(Q).setQueryEditor(at).setAnnotationQueryCtrl(we).addConfigPage({title:"Setup",icon:"list-ul",body:it,id:"setup"})}}]);

//# sourceMappingURL=testDataDSPlugin.0d4e39d4a098bf42bd02.js.map