{"version":3,"sources":["webpack:///./public/app/features/teams/TeamList.tsx","webpack:///./public/app/features/teams/state/selectors.ts","webpack:///./public/app/core/components/FilterInput/FilterInput.tsx","webpack:///./public/app/features/teams/state/actions.ts","webpack:///./public/app/core/components/connectWithCleanUp.tsx","webpack:///./public/app/features/teams/state/navModel.ts"],"names":["TeamList","_super","_this","apply","this","arguments","deleteTeam","team","props","id","onSearchQueryChange","value","setSearchQuery","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","componentDidMount","fetchTeams","loadTeams","_a","sent","renderTeam","editorsCanAdmin","signedInUser","permission","teamUrl","canDelete","_state_selectors__WEBPACK_IMPORTED_MODULE_8__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","className","href","src","avatarUrl","name","email","memberCount","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","size","disabled","onConfirm","renderEmptyList","app_core_components_EmptyListCTA_EmptyListCTA__WEBPACK_IMPORTED_MODULE_5__","title","buttonIcon","buttonLink","buttonTitle","proTip","proTipLink","proTipLinkTitle","proTipTarget","renderTeamList","teams","searchQuery","isCanAdminAndViewer","orgRole","app_types__WEBPACK_IMPORTED_MODULE_6__","Viewer","disabledClass","newTeamHref","Fragment","app_core_components_FilterInput_FilterInput__WEBPACK_IMPORTED_MODULE_10__","labelClassName","inputClassName","placeholder","onChange","style","width","map","renderList","teamsCount","render","hasFetched","navModel","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_3__","Contents","isLoading","react__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_state_actions__WEBPACK_IMPORTED_MODULE_7__","_state_reducers__WEBPACK_IMPORTED_MODULE_14__","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","_core_components_connectWithCleanUp__WEBPACK_IMPORTED_MODULE_13__","state","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_9__","navIndex","app_core_config__WEBPACK_IMPORTED_MODULE_11__","app_core_services_context_srv__WEBPACK_IMPORTED_MODULE_12__","user","__webpack_require__","d","getSearchQuery","getSearchMemberQuery","getTeamGroups","getTeamsCount","getTeam","getTeams","getTeamMembers","isSignedInUserTeamAdmin","isPermissionTeamAdmin","app_types__WEBPACK_IMPORTED_MODULE_0__","searchMemberQuery","groups","length","currentTeamId","parseInt","regex","RegExp","filter","test","members","member","login","config","userInMembers","find","m","userId","Member","isAdmin","isGrafanaAdmin","Admin","userIsTeamAdmin","FilterInput","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_grafana_data__WEBPACK_IMPORTED_MODULE_1__","ref","type","event","target","dispatch","_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__","get","perpage","page","response","_reducers__WEBPACK_IMPORTED_MODULE_4__","loadTeam","app_core_actions__WEBPACK_IMPORTED_MODULE_2__","_navModel__WEBPACK_IMPORTED_MODULE_3__","loadTeamMembers","getStore","addTeamMember","post","removeTeamMember","delete","updateTeam","put","loadTeamGroups","addTeamGroup","groupId","removeTeamGroup","encodeURIComponent","updateTeamMember","teamId","connectWithCleanUp","mapStateToProps","stateSelector","Component","ConnectedComponent","react_redux__WEBPACK_IMPORTED_MODULE_1__","ConnectedComponentWithCleanUp","react__WEBPACK_IMPORTED_MODULE_3__","_actions_cleanUp__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3___default","displayName","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_4___default","buildNavModel","img","subTitle","url","text","breadcrumbs","children","active","icon","app_core_config__WEBPACK_IMPORTED_MODULE_2__","licenseInfo","hasLicense","push","getTeamLoadingNav","pageName","node","main","app_types__WEBPACK_IMPORTED_MODULE_1__","_b","_c","next","done","child","indexOf"],"mappings":"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","file":"TeamList.4d0490a94b199a11f40c.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Page from 'app/core/components/Page/Page';\nimport { DeleteButton } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { OrgRole, StoreState, Team } from 'app/types';\nimport { deleteTeam, loadTeams } from './state/actions';\nimport { getSearchQuery, getTeams, getTeamsCount, isPermissionTeamAdmin } from './state/selectors';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { config } from 'app/core/config';\nimport { contextSrv, User } from 'app/core/services/context_srv';\nimport { connectWithCleanUp } from '../../core/components/connectWithCleanUp';\nimport { setSearchQuery } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  teams: Team[];\n  searchQuery: string;\n  teamsCount: number;\n  hasFetched: boolean;\n  loadTeams: typeof loadTeams;\n  deleteTeam: typeof deleteTeam;\n  setSearchQuery: typeof setSearchQuery;\n  editorsCanAdmin?: boolean;\n  signedInUser?: User;\n}\n\nexport class TeamList extends PureComponent<Props, any> {\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  async fetchTeams() {\n    await this.props.loadTeams();\n  }\n\n  deleteTeam = (team: Team) => {\n    this.props.deleteTeam(team.id);\n  };\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchQuery(value);\n  };\n\n  renderTeam(team: Team) {\n    const { editorsCanAdmin, signedInUser } = this.props;\n    const permission = team.permission;\n    const teamUrl = `org/teams/edit/${team.id}`;\n    const canDelete = isPermissionTeamAdmin({ permission, editorsCanAdmin, signedInUser });\n\n    return (\n      <tr key={team.id}>\n        <td className=\"width-4 text-center link-td\">\n          <a href={teamUrl}>\n            <img className=\"filter-table__avatar\" src={team.avatarUrl} />\n          </a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.name}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.email}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.memberCount}</a>\n        </td>\n        <td className=\"text-right\">\n          <DeleteButton size=\"sm\" disabled={!canDelete} onConfirm={() => this.deleteTeam(team)} />\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmptyList() {\n    return (\n      <EmptyListCTA\n        title=\"You haven't created any teams yet.\"\n        buttonIcon=\"gicon gicon-team\"\n        buttonLink=\"org/teams/new\"\n        buttonTitle=\" New team\"\n        proTip=\"Assign folder and dashboard permissions to teams instead of users to ease administration.\"\n        proTipLink=\"\"\n        proTipLinkTitle=\"\"\n        proTipTarget=\"_blank\"\n      />\n    );\n  }\n\n  renderTeamList() {\n    const { teams, searchQuery, editorsCanAdmin, signedInUser } = this.props;\n    const isCanAdminAndViewer = editorsCanAdmin && signedInUser.orgRole === OrgRole.Viewer;\n    const disabledClass = isCanAdminAndViewer ? ' disabled' : '';\n    const newTeamHref = isCanAdminAndViewer ? '#' : 'org/teams/new';\n\n    return (\n      <>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput\n              labelClassName=\"gf-form--has-input-icon gf-form--grow\"\n              inputClassName=\"gf-form-input\"\n              placeholder=\"Search teams\"\n              value={searchQuery}\n              onChange={this.onSearchQueryChange}\n            />\n          </div>\n\n          <div className=\"page-action-bar__spacer\" />\n\n          <a className={`btn btn-primary${disabledClass}`} href={newTeamHref}>\n            New team\n          </a>\n        </div>\n\n        <div className=\"admin-list-table\">\n          <table className=\"filter-table filter-table--hover form-inline\">\n            <thead>\n              <tr>\n                <th />\n                <th>Name</th>\n                <th>Email</th>\n                <th>Members</th>\n                <th style={{ width: '1%' }} />\n              </tr>\n            </thead>\n            <tbody>{teams.map(team => this.renderTeam(team))}</tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n\n  renderList() {\n    const { teamsCount } = this.props;\n\n    if (teamsCount > 0) {\n      return this.renderTeamList();\n    } else {\n      return this.renderEmptyList();\n    }\n  }\n\n  render() {\n    const { hasFetched, navModel } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>{hasFetched && this.renderList()}</Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n    teams: getTeams(state.teams),\n    searchQuery: getSearchQuery(state.teams),\n    teamsCount: getTeamsCount(state.teams),\n    hasFetched: state.teams.hasFetched,\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadTeams,\n  deleteTeam,\n  setSearchQuery,\n};\n\nexport default hot(module)(connectWithCleanUp(mapStateToProps, mapDispatchToProps, state => state.teams)(TeamList));\n","import { Team, TeamsState, TeamState, TeamMember, OrgRole, TeamPermissionLevel } from 'app/types';\nimport { User } from 'app/core/services/context_srv';\n\nexport const getSearchQuery = (state: TeamsState) => state.searchQuery;\nexport const getSearchMemberQuery = (state: TeamState) => state.searchMemberQuery;\nexport const getTeamGroups = (state: TeamState) => state.groups;\nexport const getTeamsCount = (state: TeamsState) => state.teams.length;\n\nexport const getTeam = (state: TeamState, currentTeamId: any): Team | null => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\n\nexport const getTeams = (state: TeamsState) => {\n  const regex = RegExp(state.searchQuery, 'i');\n\n  return state.teams.filter(team => {\n    return regex.test(team.name);\n  });\n};\n\nexport const getTeamMembers = (state: TeamState) => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n\n  return state.members.filter(member => {\n    return regex.test(member.login) || regex.test(member.email) || regex.test(member.name);\n  });\n};\n\nexport interface Config {\n  members: TeamMember[];\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isSignedInUserTeamAdmin = (config: Config): boolean => {\n  const { members, signedInUser, editorsCanAdmin } = config;\n  const userInMembers = members.find(m => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n\n  return isPermissionTeamAdmin({ permission, signedInUser, editorsCanAdmin });\n};\n\nexport interface PermissionConfig {\n  permission: TeamPermissionLevel;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isPermissionTeamAdmin = (config: PermissionConfig): boolean => {\n  const { permission, signedInUser, editorsCanAdmin } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};\n","import React, { forwardRef } from 'react';\nimport { escapeStringForRegex, unEscapeStringFromRegex } from '@grafana/data';\n\nexport interface Props {\n  value: string | undefined;\n  placeholder?: string;\n  labelClassName?: string;\n  inputClassName?: string;\n  onChange: (value: string) => void;\n}\n\nexport const FilterInput = forwardRef<HTMLInputElement, Props>((props, ref) => (\n  <label className={props.labelClassName}>\n    <input\n      ref={ref}\n      type=\"text\"\n      className={props.inputClassName}\n      value={unEscapeStringFromRegex(props.value)}\n      onChange={event => props.onChange(escapeStringForRegex(event.target.value))}\n      placeholder={props.placeholder ? props.placeholder : null}\n    />\n    <i className=\"gf-form-input-icon fa fa-search\" />\n  </label>\n));\n","import { getBackendSrv } from '@grafana/runtime';\n\nimport { TeamMember, ThunkResult } from 'app/types';\nimport { updateNavIndex } from 'app/core/actions';\nimport { buildNavModel } from './navModel';\nimport { teamGroupsLoaded, teamLoaded, teamMembersLoaded, teamsLoaded } from './reducers';\n\nexport function loadTeams(): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get('/api/teams/search', { perpage: 1000, page: 1 });\n    dispatch(teamsLoaded(response.teams));\n  };\n}\n\nexport function loadTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get(`/api/teams/${id}`);\n    dispatch(teamLoaded(response));\n    dispatch(updateNavIndex(buildNavModel(response)));\n  };\n}\n\nexport function loadTeamMembers(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/members`);\n    dispatch(teamMembersLoaded(response));\n  };\n}\n\nexport function addTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/members`, { userId: id });\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function removeTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/members/${id}`);\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function updateTeam(name: string, email: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().put(`/api/teams/${team.id}`, { name, email });\n    dispatch(loadTeam(team.id));\n  };\n}\n\nexport function loadTeamGroups(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/groups`);\n    dispatch(teamGroupsLoaded(response));\n  };\n}\n\nexport function addTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/groups`, { groupId: groupId });\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function removeTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/groups/${encodeURIComponent(groupId)}`);\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function deleteTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/teams/${id}`);\n    dispatch(loadTeams());\n  };\n}\n\nexport function updateTeamMember(member: TeamMember): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().put(`/api/teams/${member.teamId}/members/${member.userId}`, {\n      permission: member.permission,\n    });\n    dispatch(loadTeamMembers());\n  };\n}\n","import { connect, MapDispatchToPropsParam, MapStateToPropsParam, useDispatch } from 'react-redux';\nimport { cleanUpAction, StateSelector } from '../actions/cleanUp';\nimport React, { ComponentType, FunctionComponent, useEffect } from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nexport const connectWithCleanUp = <\n  TStateProps extends {} = {},\n  TDispatchProps = {},\n  TOwnProps = {},\n  State = {},\n  TSelector extends object = {},\n  Statics = {}\n>(\n  mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  stateSelector: StateSelector<TSelector>\n) => (Component: ComponentType<any>) => {\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n    // @ts-ignore\n  )(Component);\n\n  const ConnectedComponentWithCleanUp: FunctionComponent = props => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      return function cleanUp() {\n        dispatch(cleanUpAction({ stateSelector }));\n      };\n    }, []);\n    // @ts-ignore\n    return <ConnectedComponent {...props} />;\n  };\n\n  ConnectedComponentWithCleanUp.displayName = `ConnectWithCleanUp(${ConnectedComponent.displayName})`;\n  hoistNonReactStatics(ConnectedComponentWithCleanUp, Component);\n  type Hoisted = typeof ConnectedComponentWithCleanUp & Statics;\n\n  return ConnectedComponentWithCleanUp as Hoisted;\n};\n","import { Team, TeamPermissionLevel } from 'app/types';\nimport config from 'app/core/config';\nimport { NavModelItem, NavModel } from '@grafana/data';\n\nexport function buildNavModel(team: Team): NavModelItem {\n  const navModel = {\n    img: team.avatarUrl,\n    id: 'team-' + team.id,\n    subTitle: 'Manage members & settings',\n    url: '',\n    text: team.name,\n    breadcrumbs: [{ title: 'Teams', url: 'org/teams' }],\n    children: [\n      {\n        active: false,\n        icon: 'gicon gicon-team',\n        id: `team-members-${team.id}`,\n        text: 'Members',\n        url: `org/teams/edit/${team.id}/members`,\n      },\n      {\n        active: false,\n        icon: 'fa fa-fw fa-sliders',\n        id: `team-settings-${team.id}`,\n        text: 'Settings',\n        url: `org/teams/edit/${team.id}/settings`,\n      },\n    ],\n  };\n\n  if (config.licenseInfo.hasLicense) {\n    navModel.children.push({\n      active: false,\n      icon: 'fa fa-fw fa-refresh',\n      id: `team-groupsync-${team.id}`,\n      text: 'External group sync',\n      url: `org/teams/edit/${team.id}/groupsync`,\n    });\n  }\n\n  return navModel;\n}\n\nexport function getTeamLoadingNav(pageName: string): NavModel {\n  const main = buildNavModel({\n    avatarUrl: 'public/img/user_profile.png',\n    id: 1,\n    name: 'Loading',\n    email: 'loading',\n    memberCount: 0,\n    permission: TeamPermissionLevel.Member,\n  });\n\n  let node: NavModelItem;\n\n  // find active page\n  for (const child of main.children) {\n    if (child.id.indexOf(pageName) > 0) {\n      child.active = true;\n      node = child;\n      break;\n    }\n  }\n\n  return {\n    main: main,\n    node: node,\n  };\n}\n"],"sourceRoot":""}