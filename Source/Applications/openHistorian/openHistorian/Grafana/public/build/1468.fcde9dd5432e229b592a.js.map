{"version":3,"file":"1468.fcde9dd5432e229b592a.js","mappings":"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","sources":["webpack://grafana/../../opt/drone/yarncache/monaco-editor-npm-0.34.0-2a8aa5269e-10a28c1fe0.zip/node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/elixir/elixir.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  autoClosingPairs: [\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"comment\"] },\n    { open: '\"\"\"', close: '\"\"\"' },\n    { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"<<\", close: \">>\" }\n  ],\n  indentationRules: {\n    increaseIndentPattern: /^\\s*(after|else|catch|rescue|fn|[^#]*(do|<\\-|\\->|\\{|\\[|\\=))\\s*$/,\n    decreaseIndentPattern: /^\\s*((\\}|\\])\\s*$|(after|else|catch|rescue|end)\\b)/\n  }\n};\nvar language = {\n  defaultToken: \"source\",\n  tokenPostfix: \".elixir\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"<<\", close: \">>\", token: \"delimiter.angle.special\" }\n  ],\n  declarationKeywords: [\n    \"def\",\n    \"defp\",\n    \"defn\",\n    \"defnp\",\n    \"defguard\",\n    \"defguardp\",\n    \"defmacro\",\n    \"defmacrop\",\n    \"defdelegate\",\n    \"defcallback\",\n    \"defmacrocallback\",\n    \"defmodule\",\n    \"defprotocol\",\n    \"defexception\",\n    \"defimpl\",\n    \"defstruct\"\n  ],\n  operatorKeywords: [\"and\", \"in\", \"not\", \"or\", \"when\"],\n  namespaceKeywords: [\"alias\", \"import\", \"require\", \"use\"],\n  otherKeywords: [\n    \"after\",\n    \"case\",\n    \"catch\",\n    \"cond\",\n    \"do\",\n    \"else\",\n    \"end\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"quote\",\n    \"raise\",\n    \"receive\",\n    \"rescue\",\n    \"super\",\n    \"throw\",\n    \"try\",\n    \"unless\",\n    \"unquote_splicing\",\n    \"unquote\",\n    \"with\"\n  ],\n  constants: [\"true\", \"false\", \"nil\"],\n  nameBuiltin: [\"__MODULE__\", \"__DIR__\", \"__ENV__\", \"__CALLER__\", \"__STACKTRACE__\"],\n  operator: /-[->]?|!={0,2}|\\*{1,2}|\\/|\\\\\\\\|&{1,3}|\\.\\.?|\\^(?:\\^\\^)?|\\+\\+?|<(?:-|<<|=|>|\\|>|~>?)?|=~|={1,3}|>(?:=|>>)?|\\|~>|\\|>|\\|{1,3}|~>>?|~~~|::/,\n  variableName: /[a-z_][a-zA-Z0-9_]*[?!]?/,\n  atomName: /[a-zA-Z_][a-zA-Z0-9_@]*[?!]?|@specialAtomName|@operator/,\n  specialAtomName: /\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\}/,\n  aliasPart: /[A-Z][a-zA-Z0-9_]*/,\n  moduleName: /@aliasPart(?:\\.@aliasPart)*/,\n  sigilSymmetricDelimiter: /\"\"\"|'''|\"|'|\\/|\\|/,\n  sigilStartDelimiter: /@sigilSymmetricDelimiter|<|\\{|\\[|\\(/,\n  sigilEndDelimiter: /@sigilSymmetricDelimiter|>|\\}|\\]|\\)/,\n  sigilModifiers: /[a-zA-Z0-9]*/,\n  decimal: /\\d(?:_?\\d)*/,\n  hex: /[0-9a-fA-F](_?[0-9a-fA-F])*/,\n  octal: /[0-7](_?[0-7])*/,\n  binary: /[01](_?[01])*/,\n  escape: /\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}|\\\\./,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comments\" },\n      { include: \"@keywordsShorthand\" },\n      { include: \"@numbers\" },\n      { include: \"@identifiers\" },\n      { include: \"@strings\" },\n      { include: \"@atoms\" },\n      { include: \"@sigils\" },\n      { include: \"@attributes\" },\n      { include: \"@symbols\" }\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[/(#)(.*)/, [\"comment.punctuation\", \"comment\"]]],\n    keywordsShorthand: [\n      [/(@atomName)(:)/, [\"constant\", \"constant.punctuation\"]],\n      [\n        /\"(?=([^\"]|#\\{.*?\\}|\\\\\")*\":)/,\n        { token: \"constant.delimiter\", next: \"@doubleQuotedStringKeyword\" }\n      ],\n      [\n        /'(?=([^']|#\\{.*?\\}|\\\\')*':)/,\n        { token: \"constant.delimiter\", next: \"@singleQuotedStringKeyword\" }\n      ]\n    ],\n    doubleQuotedStringKeyword: [\n      [/\":/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringKeyword: [\n      [/':/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    numbers: [\n      [/0b@binary/, \"number.binary\"],\n      [/0o@octal/, \"number.octal\"],\n      [/0x@hex/, \"number.hex\"],\n      [/@decimal\\.@decimal([eE]-?@decimal)?/, \"number.float\"],\n      [/@decimal/, \"number\"]\n    ],\n    identifiers: [\n      [\n        /\\b(defp?|defnp?|defmacrop?|defguardp?|defdelegate)(\\s+)(@variableName)(?!\\s+@operator)/,\n        [\n          \"keyword.declaration\",\n          \"white\",\n          {\n            cases: {\n              unquote: \"keyword\",\n              \"@default\": \"function\"\n            }\n          }\n        ]\n      ],\n      [\n        /(@variableName)(?=\\s*\\.?\\s*\\()/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@default\": \"function.call\"\n          }\n        }\n      ],\n      [\n        /(@moduleName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"type.identifier\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(:)(@atomName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"constant.punctuation\", \"constant\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(\\|>)(\\s*)(@variableName)/,\n        [\n          \"operator\",\n          \"white\",\n          {\n            cases: {\n              \"@otherKeywords\": \"keyword\",\n              \"@default\": \"function.call\"\n            }\n          }\n        ]\n      ],\n      [\n        /(&)(\\s*)(@variableName)/,\n        [\"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /@variableName/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@operatorKeywords\": \"keyword.operator\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@constants\": \"constant.language\",\n            \"@nameBuiltin\": \"variable.language\",\n            \"_.*\": \"comment.unused\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/@moduleName/, \"type.identifier\"]\n    ],\n    strings: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@doubleQuotedHeredoc\" }],\n      [/'''/, { token: \"string.delimiter\", next: \"@singleQuotedHeredoc\" }],\n      [/\"/, { token: \"string.delimiter\", next: \"@doubleQuotedString\" }],\n      [/'/, { token: \"string.delimiter\", next: \"@singleQuotedString\" }]\n    ],\n    doubleQuotedHeredoc: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedHeredoc: [\n      [/'''/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    doubleQuotedString: [\n      [/\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedString: [\n      [/'/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    atoms: [\n      [/(:)(@atomName)/, [\"constant.punctuation\", \"constant\"]],\n      [/:\"/, { token: \"constant.delimiter\", next: \"@doubleQuotedStringAtom\" }],\n      [/:'/, { token: \"constant.delimiter\", next: \"@singleQuotedStringAtom\" }]\n    ],\n    doubleQuotedStringAtom: [\n      [/\"/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringAtom: [\n      [/'/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    sigils: [\n      [/~[a-z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.interpol\" }],\n      [/~[A-Z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.noInterpol\" }]\n    ],\n    sigil: [\n      [/~([a-zA-Z])\\{/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.{.}\" }],\n      [/~([a-zA-Z])\\[/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.[.]\" }],\n      [/~([a-zA-Z])\\(/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.(.)\" }],\n      [/~([a-zA-Z])\\</, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.<.>\" }],\n      [\n        /~([a-zA-Z])(@sigilSymmetricDelimiter)/,\n        { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.$2.$2\" }\n      ]\n    ],\n    \"sigilStart.interpol.s\": [\n      [\n        /~s@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.s\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.S\": [\n      [\n        /~S@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.S\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"string\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContent\" }\n    ],\n    \"sigilStart.interpol.r\": [\n      [\n        /~r@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.r\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.R\": [\n      [\n        /~R@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.R\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"regexp\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContent\" }\n    ],\n    \"sigilStart.interpol\": [\n      [\n        /~([a-zA-Z])@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol\": [\n      [\n        /~([a-zA-Z])@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"sigil\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContent\" }\n    ],\n    attributes: [\n      [\n        /\\@(module|type)?doc (~[sS])?\"\"\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedHeredocDocstring\"\n        }\n      ],\n      [\n        /\\@(module|type)?doc (~[sS])?\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedStringDocstring\"\n        }\n      ],\n      [/\\@(module|type)?doc false/, \"comment.block.documentation\"],\n      [/\\@(@variableName)/, \"variable\"]\n    ],\n    doubleQuotedHeredocDocstring: [\n      [/\"\"\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    doubleQuotedStringDocstring: [\n      [/\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    symbols: [\n      [/\\?(\\\\.|[^\\\\\\s])/, \"number.constant\"],\n      [/&\\d+/, \"operator\"],\n      [/<<<|>>>/, \"operator\"],\n      [/[()\\[\\]\\{\\}]|<<|>>/, \"@brackets\"],\n      [/\\.\\.\\./, \"identifier\"],\n      [/=>/, \"punctuation\"],\n      [/@operator/, \"operator\"],\n      [/[:;,.%]/, \"punctuation\"]\n    ],\n    stringContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringContent\" }\n    ],\n    stringContent: [[/./, \"string\"]],\n    stringConstantContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringConstantContent\" }\n    ],\n    stringConstantContent: [[/./, \"constant\"]],\n    regexpContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@regexpContent\" }\n    ],\n    regexpContent: [\n      [/(\\s)(#)(\\s.*)$/, [\"white\", \"comment.punctuation\", \"comment\"]],\n      [/./, \"regexp\"]\n    ],\n    sigilContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@sigilContent\" }\n    ],\n    sigilContent: [[/./, \"sigil\"]],\n    docstringContent: [[/./, \"comment.block.documentation\"]],\n    escapeChar: [[/@escape/, \"constant.character.escape\"]],\n    interpolation: [[/#{/, { token: \"delimiter.bracket.embed\", next: \"@interpolationContinue\" }]],\n    interpolationContinue: [\n      [/}/, { token: \"delimiter.bracket.embed\", next: \"@pop\" }],\n      { include: \"@root\" }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","language"],"sourceRoot":""}