{"version":3,"file":"NewDataSourcePage.2b1579bdca561bb71a38.js","mappings":"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","sources":["webpack://grafana/./public/app/features/plugins/components/PluginsErrorsInfo.tsx","webpack://grafana/./public/app/features/datasources/components/DataSourceTypeCard.tsx","webpack://grafana/./public/app/features/datasources/components/DataSourceTypeCardList.tsx","webpack://grafana/./public/app/features/datasources/components/DataSourceCategories.tsx","webpack://grafana/./public/app/features/datasources/components/NewDataSource.tsx","webpack://grafana/./public/app/features/datasources/pages/NewDataSourcePage.tsx","webpack://grafana/./public/app/features/datasources/state/contexts.ts","webpack://grafana/./public/app/features/datasources/state/hooks.ts","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { HorizontalGroup, InfoBox, List, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\n\nimport { useGetErrors, useFetchStatus } from '../admin/state/hooks';\n\nexport function PluginsErrorsInfo() {\n  const errors = useGetErrors();\n  const { isLoading } = useFetchStatus();\n  const styles = useStyles2(getStyles);\n\n  if (isLoading || errors.length === 0) {\n    return null;\n  }\n\n  return (\n    <InfoBox\n      aria-label={selectors.pages.PluginsList.signatureErrorNotice}\n      severity=\"warning\"\n      urlTitle=\"Read more about plugin signing\"\n      url=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n    >\n      <div>\n        <p>\n          Unsigned plugins were found during plugin initialization. Grafana Labs cannot guarantee the integrity of these\n          plugins. We recommend only using signed plugins.\n        </p>\n        The following plugins are disabled and not shown in the list below:\n        <List\n          items={errors}\n          className={styles.list}\n          renderItem={(error) => (\n            <div className={styles.wrapper}>\n              <HorizontalGroup spacing=\"sm\" justify=\"flex-start\" align=\"center\">\n                <strong>{error.pluginId}</strong>\n                <PluginSignatureBadge\n                  status={mapPluginErrorCodeToSignatureStatus(error.errorCode)}\n                  className={styles.badge}\n                />\n              </HorizontalGroup>\n            </div>\n          )}\n        />\n      </div>\n    </InfoBox>\n  );\n}\n\nfunction mapPluginErrorCodeToSignatureStatus(code: PluginErrorCode) {\n  switch (code) {\n    case PluginErrorCode.invalidSignature:\n      return PluginSignatureStatus.invalid;\n    case PluginErrorCode.missingSignature:\n      return PluginSignatureStatus.missing;\n    case PluginErrorCode.modifiedSignature:\n      return PluginSignatureStatus.modified;\n    default:\n      return PluginSignatureStatus.missing;\n  }\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    list: css({\n      listStyleType: 'circle',\n    }),\n    wrapper: css({\n      marginTop: theme.spacing(1),\n    }),\n    badge: css({\n      marginTop: 0,\n    }),\n  };\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { DataSourcePluginMeta, GrafanaTheme2 } from '@grafana/data';\nimport { selectors as e2eSelectors } from '@grafana/e2e-selectors';\nimport { Card, LinkButton, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\n\nexport type Props = {\n  dataSourcePlugin: DataSourcePluginMeta;\n  onClick: () => void;\n};\n\nexport function DataSourceTypeCard({ onClick, dataSourcePlugin }: Props) {\n  const isPhantom = dataSourcePlugin.module === 'phantom';\n  const isClickable = !isPhantom && !dataSourcePlugin.unlicensed;\n  const learnMoreLink = dataSourcePlugin.info?.links?.length > 0 ? dataSourcePlugin.info.links[0] : null;\n  const learnMoreLinkTarget = learnMoreLink?.target ?? '_blank';\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Card className={cx(styles.card, 'card-parent')} onClick={isClickable ? onClick : () => {}}>\n      {/* Name */}\n      <Card.Heading\n        className={styles.heading}\n        aria-label={e2eSelectors.pages.AddDataSource.dataSourcePluginsV2(dataSourcePlugin.name)}\n      >\n        {dataSourcePlugin.name}\n      </Card.Heading>\n\n      {/* Logo */}\n      <Card.Figure align=\"center\" className={styles.figure}>\n        <img className={styles.logo} src={dataSourcePlugin.info.logos.small} alt=\"\" />\n      </Card.Figure>\n\n      <Card.Description className={styles.description}>{dataSourcePlugin.info.description}</Card.Description>\n\n      {/* Signature */}\n      {!isPhantom && (\n        <Card.Meta className={styles.meta}>\n          <PluginSignatureBadge status={dataSourcePlugin.signature} />\n        </Card.Meta>\n      )}\n\n      {/* Learn more */}\n      <Card.Actions className={styles.actions}>\n        {learnMoreLink && (\n          <LinkButton\n            aria-label={`${dataSourcePlugin.name}, learn more.`}\n            href={`${learnMoreLink.url}?utm_source=grafana_add_ds`}\n            onClick={(e) => e.stopPropagation()}\n            rel=\"noopener\"\n            target={learnMoreLinkTarget}\n            variant=\"secondary\"\n          >\n            {learnMoreLink.name}\n          </LinkButton>\n        )}\n      </Card.Actions>\n    </Card>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    heading: css({\n      fontSize: theme.v1.typography.heading.h5,\n      fontWeight: 'inherit',\n    }),\n    figure: css({\n      width: 'inherit',\n      marginRight: '0px',\n      '> img': {\n        width: theme.spacing(7),\n      },\n    }),\n    meta: css({\n      marginTop: '6px',\n      position: 'relative',\n    }),\n    description: css({\n      margin: '0px',\n      fontSize: theme.typography.size.sm,\n    }),\n    actions: css({\n      position: 'relative',\n      alignSelf: 'center',\n      marginTop: '0px',\n      opacity: 0,\n\n      '.card-parent:hover &, .card-parent:focus-within &': {\n        opacity: 1,\n      },\n    }),\n    card: css({\n      gridTemplateAreas: `\n        \"Figure   Heading   Actions\"\n        \"Figure Description Actions\"\n        \"Figure    Meta     Actions\"\n        \"Figure     -       Actions\"`,\n    }),\n    logo: css({\n      marginRight: theme.v1.spacing.lg,\n      marginLeft: theme.v1.spacing.sm,\n      width: theme.spacing(7),\n      maxHeight: theme.spacing(7),\n    }),\n  };\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataSourcePluginMeta } from '@grafana/data';\nimport { List } from '@grafana/ui';\n\nimport { DataSourceTypeCard } from './DataSourceTypeCard';\n\nexport type Props = {\n  // The list of data-source plugins to display\n  dataSourcePlugins: DataSourcePluginMeta[];\n  // Called when a data-source plugin is clicked on in the list\n  onClickDataSourceType: (dataSource: DataSourcePluginMeta) => void;\n};\n\nexport function DataSourceTypeCardList({ dataSourcePlugins, onClickDataSourceType }: Props) {\n  if (!dataSourcePlugins || !dataSourcePlugins.length) {\n    return null;\n  }\n\n  return (\n    <List\n      items={dataSourcePlugins}\n      getItemKey={(item) => item.id.toString()}\n      renderItem={(item) => <DataSourceTypeCard dataSourcePlugin={item} onClick={() => onClickDataSourceType(item)} />}\n      className={css`\n        > li {\n          margin-bottom: 2px;\n        }\n      `}\n    />\n  );\n}\n","import React from 'react';\n\nimport { DataSourcePluginMeta } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { LinkButton } from '@grafana/ui';\nimport { DataSourcePluginCategory } from 'app/types';\n\nimport { ROUTES } from '../../connections/constants';\n\nimport { DataSourceTypeCardList } from './DataSourceTypeCardList';\n\nexport type Props = {\n  // The list of data-source plugin categories to display\n  categories: DataSourcePluginCategory[];\n\n  // Called when a data-source plugin is clicked on in the list\n  onClickDataSourceType: (dataSource: DataSourcePluginMeta) => void;\n};\n\nexport function DataSourceCategories({ categories, onClickDataSourceType }: Props) {\n  const moreDataSourcesLink = config.featureToggles.dataConnectionsConsole\n    ? `${ROUTES.ConnectData}?cat=data-source`\n    : '/plugins?filterBy=all&filterByType=datasource&utm_source=grafana_add_ds';\n\n  return (\n    <>\n      {/* Categories */}\n      {categories.map(({ id, title, plugins }) => (\n        <div className=\"add-data-source-category\" key={id}>\n          <div className=\"add-data-source-category__header\" id={id}>\n            {title}\n          </div>\n          <DataSourceTypeCardList dataSourcePlugins={plugins} onClickDataSourceType={onClickDataSourceType} />\n        </div>\n      ))}\n\n      {/* Find more */}\n      <div className=\"add-data-source-more\">\n        <LinkButton variant=\"secondary\" href={moreDataSourcesLink} target=\"_self\" rel=\"noopener\">\n          Find more data source plugins\n        </LinkButton>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { AnyAction } from 'redux';\n\nimport { DataSourcePluginMeta } from '@grafana/data';\nimport { LinkButton, FilterInput } from '@grafana/ui';\nimport PageLoader from 'app/core/components/PageLoader/PageLoader';\nimport { PluginsErrorsInfo } from 'app/features/plugins/components/PluginsErrorsInfo';\nimport { DataSourcePluginCategory, StoreState, useDispatch, useSelector } from 'app/types';\n\nimport { DataSourceCategories } from '../components/DataSourceCategories';\nimport { DataSourceTypeCardList } from '../components/DataSourceTypeCardList';\nimport {\n  useAddDatasource,\n  useLoadDataSourcePlugins,\n  getFilteredDataSourcePlugins,\n  setDataSourceTypeSearchQuery,\n  useDataSourcesRoutes,\n} from '../state';\n\nexport function NewDataSource() {\n  useLoadDataSourcePlugins();\n\n  const dispatch = useDispatch();\n  const filteredDataSources = useSelector((s: StoreState) => getFilteredDataSourcePlugins(s.dataSources));\n  const searchQuery = useSelector((s: StoreState) => s.dataSources.dataSourceTypeSearchQuery);\n  const isLoadingDatasourcePlugins = useSelector((s: StoreState) => s.dataSources.isLoadingDataSourcePlugins);\n  const dataSourceCategories = useSelector((s: StoreState) => s.dataSources.categories);\n  const onAddDataSource = useAddDatasource();\n  const onSetSearchQuery = (q: string) => dispatch(setDataSourceTypeSearchQuery(q));\n\n  return (\n    <NewDataSourceView\n      dataSources={filteredDataSources}\n      dataSourceCategories={dataSourceCategories}\n      searchQuery={searchQuery}\n      isLoading={isLoadingDatasourcePlugins}\n      onAddDataSource={onAddDataSource}\n      onSetSearchQuery={onSetSearchQuery}\n    />\n  );\n}\n\nexport type ViewProps = {\n  dataSources: DataSourcePluginMeta[];\n  dataSourceCategories: DataSourcePluginCategory[];\n  searchQuery: string;\n  isLoading: boolean;\n  onAddDataSource: (dataSource: DataSourcePluginMeta) => void;\n  onSetSearchQuery: (q: string) => AnyAction;\n};\n\nexport function NewDataSourceView({\n  dataSources,\n  dataSourceCategories,\n  searchQuery,\n  isLoading,\n  onAddDataSource,\n  onSetSearchQuery,\n}: ViewProps) {\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  if (isLoading) {\n    return <PageLoader />;\n  }\n\n  return (\n    <>\n      {/* Search */}\n      <div className=\"page-action-bar\">\n        <FilterInput value={searchQuery} onChange={onSetSearchQuery} placeholder=\"Filter by name or type\" />\n        <div className=\"page-action-bar__spacer\" />\n        <LinkButton href={dataSourcesRoutes.List} fill=\"outline\" variant=\"secondary\" icon=\"arrow-left\">\n          Cancel\n        </LinkButton>\n      </div>\n\n      {/* Show any plugin errors while not searching for anything specific */}\n      {!searchQuery && <PluginsErrorsInfo />}\n\n      {/* Search results */}\n      <div>\n        {searchQuery && (\n          <DataSourceTypeCardList dataSourcePlugins={dataSources} onClickDataSourceType={onAddDataSource} />\n        )}\n        {!searchQuery && (\n          <DataSourceCategories categories={dataSourceCategories} onClickDataSourceType={onAddDataSource} />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { NavModelItem } from '@grafana/data';\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { NewDataSource } from '../components/NewDataSource';\nimport { DATASOURCES_ROUTES } from '../constants';\n\nexport function NewDataSourcePage() {\n  const pageNav: NavModelItem = {\n    icon: 'database',\n    id: 'datasource-new',\n    text: 'Add data source',\n    url: DATASOURCES_ROUTES.New,\n    subTitle: 'Choose a data source type',\n  };\n\n  return (\n    <Page navId=\"datasources\" pageNav={pageNav}>\n      <Page.Contents>\n        <NewDataSource />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nexport default NewDataSourcePage;\n","import { createContext } from 'react';\n\nimport { DATASOURCES_ROUTES } from '../constants';\nimport { DataSourcesRoutes } from '../types';\n\n// The purpose of this context is to be able to override the data-sources routes (used for links for example) used under\n// the app/features/datasources modules, so we can reuse them more easily in different parts of the application (e.g. under Connections)\nexport const DataSourcesRoutesContext = createContext<DataSourcesRoutes>(DATASOURCES_ROUTES);\n","import { useContext, useEffect } from 'react';\n\nimport { DataSourcePluginMeta, DataSourceSettings, NavModelItem } from '@grafana/data';\nimport { cleanUpAction } from 'app/core/actions/cleanUp';\nimport appEvents from 'app/core/app_events';\nimport { contextSrv } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\n\nimport { DataSourceRights } from '../types';\nimport { constructDataSourceExploreUrl } from '../utils';\n\nimport {\n  initDataSourceSettings,\n  testDataSource,\n  loadDataSource,\n  loadDataSources,\n  loadDataSourcePlugins,\n  addDataSource,\n  updateDataSource,\n  deleteLoadedDataSource,\n} from './actions';\nimport { DataSourcesRoutesContext } from './contexts';\nimport { getDataSourceLoadingNav, buildNavModel, getDataSourceNav } from './navModel';\nimport { initialDataSourceSettingsState } from './reducers';\nimport { getDataSource, getDataSourceMeta } from './selectors';\n\nexport const useInitDataSourceSettings = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initDataSourceSettings(uid));\n\n    return function cleanUp() {\n      dispatch(\n        cleanUpAction({\n          cleanupAction: (state) => (state.dataSourceSettings = initialDataSourceSettingsState),\n        })\n      );\n    };\n  }, [uid, dispatch]);\n};\n\nexport const useTestDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return () => dispatch(testDataSource(uid, dataSourcesRoutes.Edit));\n};\n\nexport const useLoadDataSources = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.dataSources.isLoadingDataSources);\n  const dataSources = useSelector((state) => state.dataSources.dataSources);\n\n  useEffect(() => {\n    dispatch(loadDataSources());\n  }, [dispatch]);\n\n  return { isLoading, dataSources };\n};\n\nexport const useLoadDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSource(uid));\n  }, [dispatch, uid]);\n};\n\nexport const useLoadDataSourcePlugins = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSourcePlugins());\n  }, [dispatch]);\n};\n\nexport const useAddDatasource = () => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return (plugin: DataSourcePluginMeta) => {\n    dispatch(addDataSource(plugin, dataSourcesRoutes.Edit));\n  };\n};\n\nexport const useUpdateDatasource = () => {\n  const dispatch = useDispatch();\n\n  return async (dataSource: DataSourceSettings) => dispatch(updateDataSource(dataSource));\n};\n\nexport const useDeleteLoadedDataSource = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.dataSources.dataSource);\n\n  return () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: `Are you sure you want to delete the \"${name}\" data source?`,\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => dispatch(deleteLoadedDataSource()),\n      })\n    );\n  };\n};\n\nexport const useDataSource = (uid: string) => {\n  return useSelector((state) => getDataSource(state.dataSources, uid));\n};\n\nexport const useDataSourceExploreUrl = (uid: string) => {\n  const dataSource = useDataSource(uid);\n  return constructDataSourceExploreUrl(dataSource);\n};\n\nexport const useDataSourceMeta = (pluginType: string): DataSourcePluginMeta => {\n  return useSelector((state) => getDataSourceMeta(state.dataSources, pluginType));\n};\n\nexport const useDataSourceSettings = () => {\n  return useSelector((state) => state.dataSourceSettings);\n};\n\nexport const useDataSourceSettingsNav = (dataSourceId: string, pageId: string | null) => {\n  const dataSource = useDataSource(dataSourceId);\n  const { plugin, loadError, loading } = useDataSourceSettings();\n  const navIndex = useSelector((state) => state.navIndex);\n  const navIndexId = pageId ? `datasource-${pageId}-${dataSourceId}` : `datasource-settings-${dataSourceId}`;\n\n  if (loadError) {\n    const node: NavModelItem = {\n      text: loadError,\n      subTitle: 'Data Source Error',\n      icon: 'exclamation-triangle',\n    };\n\n    return {\n      node: node,\n      main: node,\n    };\n  }\n\n  if (loading || !plugin) {\n    return getNavModel(navIndex, navIndexId, getDataSourceLoadingNav('settings'));\n  }\n\n  return getNavModel(navIndex, navIndexId, getDataSourceNav(buildNavModel(dataSource, plugin), pageId || 'settings'));\n};\n\nexport const useDataSourceRights = (uid: string): DataSourceRights => {\n  const dataSource = useDataSource(uid);\n  const readOnly = dataSource.readOnly === true;\n  const hasWriteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesWrite, dataSource);\n  const hasDeleteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesDelete, dataSource);\n\n  return {\n    readOnly,\n    hasWriteRights,\n    hasDeleteRights,\n  };\n};\n\nexport const useDataSourcesRoutes = () => {\n  return useContext(DataSourcesRoutesContext);\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { PluginError, PluginErrorCode, unEscapeStringFromRegex } from '@grafana/data';\n\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\n\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const selectDisplayMode = createSelector(selectRoot, ({ settings }) => settings.displayMode);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nconst selectInstalled = (filterBy: string) =>\n  createSelector(selectAll, (plugins) =>\n    plugins.filter((plugin) => (filterBy === 'installed' ? plugin.isInstalled : !plugin.isCore))\n  );\n\nconst findByInstallAndType = (filterBy: string, filterByType: string) =>\n  createSelector(selectInstalled(filterBy), (plugins) =>\n    plugins.filter((plugin) => filterByType === 'all' || plugin.type === filterByType)\n  );\n\nconst findByKeyword = (searchBy: string) =>\n  createSelector(selectAll, (plugins) => {\n    if (searchBy === '') {\n      return [];\n    }\n\n    return plugins.filter((plugin) => {\n      const fields: String[] = [];\n      if (plugin.name) {\n        fields.push(plugin.name.toLowerCase());\n      }\n\n      if (plugin.orgName) {\n        fields.push(plugin.orgName.toLowerCase());\n      }\n\n      return fields.some((f) => f.includes(unEscapeStringFromRegex(searchBy).toLowerCase()));\n    });\n  });\n\nexport const find = (searchBy: string, filterBy: string, filterByType: string) =>\n  createSelector(\n    findByInstallAndType(filterBy, filterByType),\n    findByKeyword(searchBy),\n    (filteredPlugins, searchedPlugins) => {\n      return searchBy === '' ? filteredPlugins : searchedPlugins;\n    }\n  );\n\nexport const selectPluginErrors = createSelector(selectAll, (plugins) =>\n  plugins\n    ? plugins\n        .filter((p) => Boolean(p.error))\n        .map(\n          (p): PluginError => ({\n            pluginId: p.id,\n            errorCode: p!.error as PluginErrorCode,\n          })\n        )\n    : []\n);\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect } from 'react';\n\nimport { PluginError } from '@grafana/data';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { sortPlugins, Sorters } from '../helpers';\nimport { CatalogPlugin, PluginListDisplayMode } from '../types';\n\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall, fetchAllLocal, unsetInstall } from './actions';\nimport { setDisplayMode } from './reducer';\nimport {\n  find,\n  selectAll,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n  selectPluginErrors,\n} from './selectors';\n\ntype Filters = {\n  query?: string; // Note: this will be an escaped regex string as it comes from `FilterInput`\n  filterBy?: string;\n  filterByType?: string;\n  sortBy?: Sorters;\n};\n\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc,\n}: Filters) => {\n  useFetchAll();\n\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const { isLoading, error } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered,\n  };\n};\n\nexport const useGetAll = (): CatalogPlugin[] => {\n  useFetchAll();\n\n  return useSelector(selectAll);\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetSingleLocalWithoutDetails = (id: string): CatalogPlugin | undefined => {\n  useFetchAllLocal();\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetErrors = (): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors);\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUnsetInstall = () => {\n  const dispatch = useDispatch();\n\n  return () => dispatch(unsetInstall());\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAllLocal = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAllLocal.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAllLocal());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n"],"names":["PluginsErrorsInfo","errors","isLoading","styles","getStyles","InfoBox","selectors","List","error","PluginSignatureBadge","mapPluginErrorCodeToSignatureStatus","code","theme","DataSourceTypeCard","onClick","dataSourcePlugin","isPhantom","isClickable","learnMoreLink","learnMoreLinkTarget","Card","e","DataSourceTypeCardList","dataSourcePlugins","onClickDataSourceType","item","DataSourceCategories","categories","moreDataSourcesLink","config","id","title","plugins","NewDataSource","dispatch","filteredDataSources","s","searchQuery","isLoadingDatasourcePlugins","dataSourceCategories","onAddDataSource","onSetSearchQuery","q","NewDataSourceView","dataSources","dataSourcesRoutes","PageLoader","FilterInput","NewDataSourcePage","pageNav","DataSourcesRoutesContext","useInitDataSourceSettings","uid","state","useTestDataSource","useDataSourcesRoutes","useLoadDataSources","useLoadDataSource","useLoadDataSourcePlugins","useAddDatasource","plugin","useUpdateDatasource","dataSource","useDeleteLoadedDataSource","name","useDataSource","useDataSourceExploreUrl","useDataSourceMeta","pluginType","useDataSourceSettings","useDataSourceSettingsNav","dataSourceId","pageId","loadError","loading","navIndex","navIndexId","node","useDataSourceRights","readOnly","hasWriteRights","hasDeleteRights","selectRoot","selectItems","items","selectDisplayMode","settings","selectInstalled","filterBy","findByInstallAndType","filterByType","findByKeyword","searchBy","fields","f","find","filteredPlugins","searchedPlugins","selectPluginErrors","p","selectRequest","actionType","requests","selectIsRequestPending","request","selectRequestError","useGetAllWithFilters","query","sortBy","useFetchAll","filtered","useFetchStatus","sortedAndFiltered","useGetAll","useGetSingle","useFetchDetails","useGetSingleLocalWithoutDetails","useFetchAllLocal","useGetErrors","useInstall","version","isUpdating","useUnsetInstall","useUninstall","useIsRemotePluginsAvailable","useFetchDetailsStatus","useInstallStatus","isInstalling","useUninstallStatus","isUninstalling","isNotFetched","shouldFetch","useDisplayMode","v"],"sourceRoot":""}