{"version":3,"file":"7914.acf7876e55bbc9807bf4.js","mappings":"6MAcO,MAAMA,EAAW,CAAC,CAAE,SAAAC,EAAU,eAAAC,EAAiB,EAAK,IAA8C,CACvG,MAAMC,KAAc,MAAWC,CAAc,EAC7C,SAAO,OAAC,OAAI,aAAW,MAAGD,EAAY,cAAeD,GAAkBC,EAAY,cAAc,EAAI,SAAAF,CAAA,CAAS,CAChH,EAQaI,EAAc,CAAC,CAAE,SAAAJ,EAAU,SAAAK,EAAU,mBAAAC,CAAmB,IAAiD,CACpH,MAAMJ,KAAc,MAAWC,CAAc,EACvC,CAACI,EAAWC,CAAY,KAAI,YAAS,EAAK,EAC1CC,EAAWJ,GAAU,eAAiB,IAAS,iBAAiB,EAChEK,EAAaL,GAAU,YAAc,IAAS,WAC9CM,EAAqBN,GAAU,oBAAsB,IAAS,mBAAmB,EACjFO,EAAYP,GAAU,UACtBQ,EAAcR,GAAU,aAAe,IAAS,YAEtD,sBAAU,IAAMG,EAAa,EAAI,EAAG,CAAC,CAAC,KAGpC,QAAC,IAAS,gBAAT,CACC,aAAW,MAAGN,EAAY,UAAWK,GAAaL,EAAY,UAAWG,GAAU,eAAe,EAElG,oBAAC,OAAI,UAAWH,EAAY,UAC1B,oBAAC,OAAI,aAAW,MAAGA,EAAY,aAAcS,EAAoB,mBAAmB,EAClF,qBAAC,OAAI,UAAWT,EAAY,iBAC1B,oBAAC,IAAS,UAAT,CAAmB,UAAWA,EAAY,UAAW,KAAMU,CAAA,CAAW,KACvE,OAAC,OAAI,UAAWV,EAAY,aACzB,SAAAI,KACC,OAAC,MAAG,UAAWJ,EAAY,UAAW,gCAAoB,KAE1D,oBACE,oBAAC,MAAG,UAAWA,EAAY,UAAY,SAAAQ,CAAA,CAAW,EACjDD,MAAY,OAAC,MAAG,UAAWP,EAAY,SAAW,SAAAO,CAAA,CAAS,GAC9D,EAEJ,GACF,KACA,OAAC,OAAI,UAAWP,EAAY,cAAgB,SAAAF,CAAA,CAAS,GACvD,EACF,EACCK,GAAU,cAAa,oBAAE,KAAM,OAAC,KAAM,CAAC,YAAAQ,EAA0B,YAAaR,GAAU,YAAa,GACxG,CAEJ,EAEMS,KAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWVX,EAAkBY,IACtB,CACL,aAAW,OAAI,CACb,SAAU,EACV,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,SAAU,MACZ,CAAC,EACD,aAAW,OAAI,CACb,UAAW,OACX,mBAAoB,SACpB,iBAAkB,YAClB,KAAM,EACN,SAAU,OACV,WAAY,EACZ,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,QAClB,CAAC,EACD,aAAW,OAAI,CACZ,WAAa,CACZ,QAAS,CACX,EAEC,qBAAuB,CACtB,QAAS,CACX,CACF,CAAC,EACD,gBAAc,OAAI,CAChB,eAAgB,SAChB,MAAO,MACT,CAAC,EACD,aAAW,OAAI,CACb,MAAO,OACP,SAAU,GACV,aAAcA,EAAM,QAAQ,CAAC,EAE7B,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,GACZ,CACF,CAAC,EACD,oBAAkB,OAAI,CACpB,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,cAAe,SACf,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,gBAAc,OAAI,CAChB,UAAW,QACb,CAAC,EACD,aAAW,OAAI,CACb,SAAU,GAEV,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,SAAU,EACZ,CACF,CAAC,EACD,YAAU,OAAI,CACZ,SAAUA,EAAM,WAAW,KAAK,GAChC,MAAOA,EAAM,OAAO,KAAK,SAC3B,CAAC,EACD,gBAAc,OAAI,CAChB,SAAU,IACV,MAAO,oBACP,QAAS,OACT,WAAY,UACZ,cAAe,SACf,SAAU,WACV,eAAgB,aAChB,OAAQ,EACR,UAAW,IACX,aAAcA,EAAM,MAAM,OAAO,QACjC,QAASA,EAAM,QAAQ,EAAG,CAAC,EAC3B,QAAS,EACT,CAACA,EAAM,YAAY,aAAa,gBAAiB,QAAQ,CAAC,EAAG,CAC3D,WAAY,0BACd,EAEA,CAACA,EAAM,YAAY,GAAG,IAAI,CAAC,EAAG,CAC5B,UAAWA,EAAM,QAAQ,EAAE,EAC3B,eAAgB,QAClB,CACF,CAAC,EACD,iBAAe,OAAI,CACjB,QAAS,OACT,UAAW,SACX,WAAY,SACZ,eAAgB,QAClB,CAAC,EACD,iBAAe,OAAI,CACjB,QAASA,EAAM,QAAQ,EAAG,EAAG,EAAG,CAAC,EACjC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,SAAU,EACV,SAAU,IACV,MAAO,OACP,UAAW,sBACX,CAACA,EAAM,YAAY,aAAa,eAAe,CAAC,EAAG,CACjD,WAAY,YACd,CACF,CAAC,EACD,kBAAgB,OAAI,CAClB,CAACA,EAAM,YAAY,aAAa,eAAe,CAAC,EAAG,CACjD,UAAW,GAAGD,CAAc,gBAC9B,CACF,CAAC,CACH,E,8FClLK,MAAME,KAAgB,cAAoC,CAACC,EAAOC,IAAQ,CAC/E,KAAM,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAEtD,SACE,OAAC,KACE,GAAGH,EACJ,KAAME,EAAe,OAAS,WAC9B,cAAa,KAAU,MAAM,MAAM,SACnC,IAAAD,EACA,UACE,OAAC,KACC,KAAMC,EAAe,YAAc,MACnC,gBAAeF,EAAM,GACrB,KAAK,SACL,eAAcE,EACd,QAAS,IAAM,CACbC,EAAgB,CAACD,CAAY,CAC/B,EACA,QAASA,EAAe,gBAAkB,gBAC5C,EAEJ,CAEJ,CAAC,EAEDH,EAAc,YAAc,e,uMCJrB,MAAMK,EAAa,CAAC,CAAE,YAAAC,CAAY,IAAa,CACpD,MAAMC,KAAY,MAAmB,EAC/B,CACJ,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,EACpB,SAAAC,EACA,UAAAC,CACF,KAAI,MAAmB,CAAE,cAAe,CAAE,MAAOL,EAAY,MAAO,KAAMA,EAAY,IAAK,CAAE,CAAC,EAExFM,EAAW,MAAOC,GAAwB,CAC1CA,EAAS,OAAS,IACpB,OAAOA,EAAS,KAElB,OAAOA,EAAS,SAEC,QAAM,MAAc,EAClC,KAAK,yBAA0B,CAC9B,MAAOA,EAAS,MAChB,KAAMA,EAAS,KACf,SAAUA,EAAS,MACnB,QAASA,EAAS,QAClB,SAAUA,EAAS,SACnB,KAAMA,EAAS,IACjB,CAAC,EACA,MAAOC,GAAQ,CACd,MAAMC,EAAMD,EAAI,MAAM,SAAWA,EACjCP,EAAU,QAAQQ,CAAG,CACvB,CAAC,GAEU,OAAS,0BACpB,OAAO,SAAS,UAAO,MAAU,EAAE,UAAY,8BAA8B,EAE/E,OAAO,SAAS,UAAO,MAAU,EAAE,UAAY,GAAG,CACpD,EAEA,SACE,OAAC,KAAW,CACV,mBAAC,KAAQ,CACP,oBAAC,QAAK,SAAUP,EAAaI,CAAQ,EAAG,MAAO,CAAE,MAAO,MAAO,EAC7D,oBAAC,IAAK,CAAC,MAAM,YACX,mBAAC,IAAK,CAAC,GAAG,YAAa,GAAGF,EAAS,MAAM,EAAG,YAAY,YAAa,GACvE,KACA,OAAC,IAAK,CAAC,MAAM,QAAQ,QAAS,CAAC,CAACD,EAAO,MAAO,MAAOA,EAAO,OAAO,QACjE,mBAAC,KACC,GAAG,QACF,GAAGC,EAAS,QAAS,CACpB,SAAU,oBACV,QAAS,CACP,MAAO,KACP,QAAS,kBACX,CACF,CAAC,EACD,KAAK,QACL,YAAY,QACd,EACF,EACC,IAAC,MAAU,EAAE,kBACZ,OAAC,IAAK,CAAC,MAAM,YACX,mBAAC,IAAK,CAAC,GAAG,WAAY,GAAGA,EAAS,SAAS,EAAG,YAAY,WAAY,GACxE,KAED,MAAU,EAAE,uBACX,OAAC,IAAK,CAAC,MAAM,+CACX,mBAAC,IAAK,CAAC,GAAG,oBAAqB,GAAGA,EAAS,MAAM,EAAG,YAAY,MAAO,GACzE,KAEF,OAAC,IAAK,CAAC,MAAM,WAAW,QAAS,CAAC,CAACD,EAAO,SAAU,MAAOA,GAAQ,UAAU,QAC3E,mBAAC,KACC,GAAG,eACH,UAAS,GACT,aAAa,eACZ,GAAGC,EAAS,WAAY,CAAE,SAAU,sBAAuB,CAAC,EAC/D,EACF,KACA,OAAC,IAAK,CAAC,MAAM,mBAAmB,QAAS,CAAC,CAACD,EAAO,QAAS,MAAOA,GAAQ,SAAS,QACjF,mBAAC,KACC,GAAG,uBACH,aAAa,eACZ,GAAGC,EAAS,UAAW,CACtB,SAAU,iCACV,SAAWM,GAAMA,IAAML,EAAU,EAAE,UAAY,uBACjD,CAAC,EACH,EACF,KAEA,QAAC,IAAK,CACJ,oBAAC,KAAM,CAAC,KAAK,SAAS,kBAAM,KAC5B,OAAC,KAAU,CAAC,KAAK,OAAO,QAAM,MAAU,EAAE,UAAY,SAAU,yBAEhE,GACF,GACF,EACF,EACF,CAEJ,EAEA,EAAeN,C,4DC3HR,MAAMY,EACX,wIAEK,SAASC,GAAU,CACxB,MAAMC,EAAS,IAAO,aAAa,YACnC,MAAO,CAAC,EAAEA,GAAUA,EAAS,EAC/B,CAEO,MAAMC,EAAiB,IAAMF,EAAQ,GAAK,IAAO,eAAe,iB","sources":["webpack://grafana/./public/app/core/components/Login/LoginLayout.tsx","webpack://grafana/./public/app/core/components/PasswordField/PasswordField.tsx","webpack://grafana/./public/app/core/components/Signup/SignupPage.tsx","webpack://grafana/./public/app/features/admin/utils.ts"],"sourcesContent":["import { cx, css, keyframes } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { Branding } from '../Branding/Branding';\nimport { BrandingSettings } from '../Branding/types';\nimport { Footer } from '../Footer/Footer';\n\ninterface InnerBoxProps {\n  enterAnimation?: boolean;\n}\nexport const InnerBox = ({ children, enterAnimation = true }: React.PropsWithChildren<InnerBoxProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  return <div className={cx(loginStyles.loginInnerBox, enterAnimation && loginStyles.enterAnimation)}>{children}</div>;\n};\n\nexport interface LoginLayoutProps {\n  /** Custom branding settings that can be used e.g. for previewing the Login page changes */\n  branding?: BrandingSettings;\n  isChangingPassword?: boolean;\n}\n\nexport const LoginLayout = ({ children, branding, isChangingPassword }: React.PropsWithChildren<LoginLayoutProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  const [startAnim, setStartAnim] = useState(false);\n  const subTitle = branding?.loginSubtitle ?? Branding.GetLoginSubTitle();\n  const loginTitle = branding?.loginTitle ?? Branding.LoginTitle;\n  const loginBoxBackground = branding?.loginBoxBackground || Branding.LoginBoxBackground();\n  const loginLogo = branding?.loginLogo;\n  const hideEdition = branding?.hideEdition ?? Branding.HideEdition;\n\n  useEffect(() => setStartAnim(true), []);\n\n  return (\n    <Branding.LoginBackground\n      className={cx(loginStyles.container, startAnim && loginStyles.loginAnim, branding?.loginBackground)}\n    >\n      <div className={loginStyles.loginMain}>\n        <div className={cx(loginStyles.loginContent, loginBoxBackground, 'login-content-box')}>\n          <div className={loginStyles.loginLogoWrapper}>\n            <Branding.LoginLogo className={loginStyles.loginLogo} logo={loginLogo} />\n            <div className={loginStyles.titleWrapper}>\n              {isChangingPassword ? (\n                <h1 className={loginStyles.mainTitle}>Update your password</h1>\n              ) : (\n                <>\n                  <h1 className={loginStyles.mainTitle}>{loginTitle}</h1>\n                  {subTitle && <h3 className={loginStyles.subTitle}>{subTitle}</h3>}\n                </>\n              )}\n            </div>\n          </div>\n          <div className={loginStyles.loginOuterBox}>{children}</div>\n        </div>\n      </div>\n      {branding?.hideFooter ? <></> : <Footer hideEdition={hideEdition} customLinks={branding?.footerLinks} />}\n    </Branding.LoginBackground>\n  );\n};\n\nconst flyInAnimation = keyframes`\nfrom{\n  opacity: 0;\n  transform: translate(-60px, 0px);\n}\n\nto{\n  opacity: 1;\n  transform: translate(0px, 0px);\n}`;\n\nexport const getLoginStyles = (theme: GrafanaTheme2) => {\n  return {\n    loginMain: css({\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '100%',\n    }),\n    container: css({\n      minHeight: '100%',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      flex: 1,\n      minWidth: '100%',\n      marginLeft: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginAnim: css({\n      ['&:before']: {\n        opacity: 1,\n      },\n\n      ['.login-content-box']: {\n        opacity: 1,\n      },\n    }),\n    submitButton: css({\n      justifyContent: 'center',\n      width: '100%',\n    }),\n    loginLogo: css({\n      width: '100%',\n      maxWidth: 60,\n      marginBottom: theme.spacing(2),\n\n      [theme.breakpoints.up('sm')]: {\n        maxWidth: 100,\n      },\n    }),\n    loginLogoWrapper: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      padding: theme.spacing(3),\n    }),\n    titleWrapper: css({\n      textAlign: 'center',\n    }),\n    mainTitle: css({\n      fontSize: 22,\n\n      [theme.breakpoints.up('sm')]: {\n        fontSize: 32,\n      },\n    }),\n    subTitle: css({\n      fontSize: theme.typography.size.md,\n      color: theme.colors.text.secondary,\n    }),\n    loginContent: css({\n      maxWidth: 478,\n      width: `calc(100% - 2rem)`,\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      position: 'relative',\n      justifyContent: 'flex-start',\n      zIndex: 1,\n      minHeight: 320,\n      borderRadius: theme.shape.radius.default,\n      padding: theme.spacing(2, 0),\n      opacity: 0,\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        transition: 'opacity 0.5s ease-in-out',\n      },\n\n      [theme.breakpoints.up('sm')]: {\n        minHeight: theme.spacing(40),\n        justifyContent: 'center',\n      },\n    }),\n    loginOuterBox: css({\n      display: 'flex',\n      overflowY: 'hidden',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginInnerBox: css({\n      padding: theme.spacing(0, 2, 2, 2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexGrow: 1,\n      maxWidth: 415,\n      width: '100%',\n      transform: 'translate(0px, 0px)',\n      [theme.transitions.handleMotion('no-preference')]: {\n        transition: '0.25s ease',\n      },\n    }),\n    enterAnimation: css({\n      [theme.transitions.handleMotion('no-preference')]: {\n        animation: `${flyInAnimation} ease-out 0.2s`,\n      },\n    }),\n  };\n};\n","import { forwardRef, useState } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Input, IconButton } from '@grafana/ui';\nimport { Props as InputProps } from '@grafana/ui/src/components/Input/Input';\n\ninterface Props extends Omit<InputProps, 'type'> {}\n\nexport const PasswordField = forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Input\n      {...props}\n      type={showPassword ? 'text' : 'password'}\n      data-testid={selectors.pages.Login.password}\n      ref={ref}\n      suffix={\n        <IconButton\n          name={showPassword ? 'eye-slash' : 'eye'}\n          aria-controls={props.id}\n          role=\"switch\"\n          aria-checked={showPassword}\n          onClick={() => {\n            setShowPassword(!showPassword);\n          }}\n          tooltip={showPassword ? 'Hide password' : 'Show password'}\n        />\n      }\n    />\n  );\n});\n\nPasswordField.displayName = 'PasswordField';\n","import { useForm } from 'react-hook-form';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Field, Input, Button, LinkButton, Stack } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { w3cStandardEmailValidator } from 'app/features/admin/utils';\n\nimport { InnerBox, LoginLayout } from '../Login/LoginLayout';\nimport { PasswordField } from '../PasswordField/PasswordField';\n\ninterface SignupDTO {\n  name?: string;\n  email: string;\n  username: string;\n  orgName?: string;\n  password: string;\n  code: string;\n  confirm?: string;\n}\n\ninterface QueryParams {\n  email?: string;\n  code?: string;\n}\n\ninterface Props extends GrafanaRouteComponentProps<{}, QueryParams> {}\n\nexport const SignupPage = ({ queryParams }: Props) => {\n  const notifyApp = useAppNotification();\n  const {\n    handleSubmit,\n    formState: { errors },\n    register,\n    getValues,\n  } = useForm<SignupDTO>({ defaultValues: { email: queryParams.email, code: queryParams.code } });\n\n  const onSubmit = async (formData: SignupDTO) => {\n    if (formData.name === '') {\n      delete formData.name;\n    }\n    delete formData.confirm;\n\n    const response = await getBackendSrv()\n      .post('/api/user/signup/step2', {\n        email: formData.email,\n        code: formData.code,\n        username: formData.email,\n        orgName: formData.orgName,\n        password: formData.password,\n        name: formData.name,\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        notifyApp.warning(msg);\n      });\n\n    if (response.code === 'redirect-to-select-org') {\n      window.location.assign(getConfig().appSubUrl + '/profile/select-org?signup=1');\n    }\n    window.location.assign(getConfig().appSubUrl + '/');\n  };\n\n  return (\n    <LoginLayout>\n      <InnerBox>\n        <form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%' }}>\n          <Field label=\"Your name\">\n            <Input id=\"user-name\" {...register('name')} placeholder=\"(optional)\" />\n          </Field>\n          <Field label=\"Email\" invalid={!!errors.email} error={errors.email?.message}>\n            <Input\n              id=\"email\"\n              {...register('email', {\n                required: 'Email is required',\n                pattern: {\n                  value: w3cStandardEmailValidator,\n                  message: 'Email is invalid',\n                },\n              })}\n              type=\"email\"\n              placeholder=\"Email\"\n            />\n          </Field>\n          {!getConfig().autoAssignOrg && (\n            <Field label=\"Org. name\">\n              <Input id=\"org-name\" {...register('orgName')} placeholder=\"Org. name\" />\n            </Field>\n          )}\n          {getConfig().verifyEmailEnabled && (\n            <Field label=\"Email verification code (sent to your email)\">\n              <Input id=\"verification-code\" {...register('code')} placeholder=\"Code\" />\n            </Field>\n          )}\n          <Field label=\"Password\" invalid={!!errors.password} error={errors?.password?.message}>\n            <PasswordField\n              id=\"new-password\"\n              autoFocus\n              autoComplete=\"new-password\"\n              {...register('password', { required: 'Password is required' })}\n            />\n          </Field>\n          <Field label=\"Confirm password\" invalid={!!errors.confirm} error={errors?.confirm?.message}>\n            <PasswordField\n              id=\"confirm-new-password\"\n              autoComplete=\"new-password\"\n              {...register('confirm', {\n                required: 'Confirmed password is required',\n                validate: (v) => v === getValues().password || 'Passwords must match!',\n              })}\n            />\n          </Field>\n\n          <Stack>\n            <Button type=\"submit\">Submit</Button>\n            <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n              Back to login\n            </LinkButton>\n          </Stack>\n        </form>\n      </InnerBox>\n    </LoginLayout>\n  );\n};\n\nexport default SignupPage;\n","import { config } from '@grafana/runtime/src';\n\n// https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nexport const w3cStandardEmailValidator =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isTrial() {\n  const expiry = config.licenseInfo?.trialExpiry;\n  return !!(expiry && expiry > 0);\n}\n\nexport const highlightTrial = () => isTrial() && config.featureToggles.featureHighlights;\n"],"names":["InnerBox","children","enterAnimation","loginStyles","getLoginStyles","LoginLayout","branding","isChangingPassword","startAnim","setStartAnim","subTitle","loginTitle","loginBoxBackground","loginLogo","hideEdition","flyInAnimation","theme","PasswordField","props","ref","showPassword","setShowPassword","SignupPage","queryParams","notifyApp","handleSubmit","errors","register","getValues","onSubmit","formData","err","msg","v","w3cStandardEmailValidator","isTrial","expiry","highlightTrial"],"sourceRoot":""}