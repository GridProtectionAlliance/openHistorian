{"version":3,"sources":["webpack:///./public/app/plugins/datasource/prometheus/metric_find_query.ts","webpack:///./public/app/plugins/datasource/prometheus/result_transformer.ts","webpack:///./public/app/plugins/datasource/prometheus/language_provider.ts","webpack:///./public/app/plugins/datasource/prometheus/query_hints.ts","webpack:///./public/app/plugins/datasource/prometheus/datasource.ts","webpack:///./public/app/plugins/datasource/prometheus/components/PromQueryField.tsx","webpack:///./public/app/plugins/datasource/prometheus/components/PromLink.tsx","webpack:///./public/app/plugins/datasource/prometheus/components/PromQueryEditor.tsx","webpack:///./public/app/plugins/datasource/prometheus/components/PromCheatSheet.tsx","webpack:///./public/app/plugins/datasource/prometheus/components/PromExploreExtraField.tsx","webpack:///./public/app/plugins/datasource/prometheus/components/PromExploreQueryEditor.tsx","webpack:///./public/app/plugins/datasource/prometheus/configuration/PromSettings.tsx","webpack:///./public/app/plugins/datasource/prometheus/module.ts","webpack:///./public/app/plugins/datasource/prometheus/configuration/ConfigEditor.tsx","webpack:///./node_modules/yallist/iterator.js","webpack:///./node_modules/lru-cache/index.js","webpack:///./node_modules/yallist/yallist.js","webpack:///./public/app/plugins/datasource/prometheus/language_utils.ts","webpack:///./public/app/plugins/datasource/prometheus/add_label_to_query.ts","webpack:///./public/app/plugins/datasource/prometheus/promql.ts","webpack:///./public/app/core/utils/CancelablePromise.ts"],"names":["PrometheusMetricFindQuery","datasource","query","this","range","Object","TimeSrv","timeRange","prototype","process","match","labelNamesQuery","labelValuesQuery","metricNamesQuery","metricNameQuery","queryResultQuery","metricNameAndLabelsQuery","metadataRequest","then","result","lodash_default","a","map","data","value","text","label","metric","url","start","getPrometheusTime","from","end","to","encodeURIComponent","_labels","filter","uniq","expandable","metricFilterPattern","chain","metricName","RegExp","test","matchedMetricName","instantQuery","expr","performInstantQuery","metricData","__name__","v","k","join","self","getOriginalMetricName","result_transformer_ResultTransformer","ResultTransformer","templateSrv","transform","response","options","prometheusResult","format","transformMetricDataToTable","responseListLength","refId","valueWithRefId","seriesList","prometheusResult_1","tslib_es6","prometheusResult_1_1","next","done","push","transformMetricData","sort","sortSeriesByLabel","transformToHistogramOverTime","prometheusResult_2","prometheusResult_2_1","resultType","transformInstantMetricData","metricLabel","dps","createMetricLabel","stepMs","parseInt","step","baseTimestamp","undefined","values","Error","_b","_c","dpValue","parseFloat","isNaN","timestamp","t","endTimestamp","datapoints","target","tags","md","resultCount","i","j","table","table_model","metricLabels","length","each","series","hasOwnProperty","sortedLabels","keys","columns","type","src","time","labelIndex","filterable","valueText","reordered","rows","labelData","isUndefined","isEmpty","legendFormat","renderTemplate","replace","aliasPattern","aliasData","g1","toPairs","topSeries","bottomSeries","bottomPoint","s1","s2","le1","le2","parseHistogramLabel","err","console","log","le","Infinity","Number","DEFAULT_KEYS","EMPTY_SELECTOR","HISTORY_ITEM_COUNT","HISTORY_COUNT_CUTOFF","DEFAULT_LOOKUP_METRICS_THRESHOLD","wrapLabel","setFunctionKind","suggestion","kind","PREFIX_DELIMITER_REGEX","_super","PromQlLanguageProvider","initialValues","_this","call","labelsCache","lru_cache_default","request","defaultValue","Promise","res","_a","sent","json","error","error_1","metrics","lookupsDisabled","lookupMetricsThreshold","metricsMetadata","processHistogramMetrics","language_utils","histogramMetrics","slice","provideCompletionItems","context","prefix","labelKey","wrapperClasses","history","empty","document","selectedLines","getTextsAtRange","selection","currentLine","size","first","getText","nextCharacter","anchor","offset","tokenRecognized","prefixUnrecognized","noSuffix","safePrefix","operatorsPattern","isNextOperand","includes","getRangeCompletionItems","getLabelCompletionItems","getAggregationCompletionItems","getEmptyCompletionItems","getBeginningCompletionItems","getTermCompletionItems","suggestions","historyItems","h","take","item","cutoffTs","Date","now","historyForItem","ts","count","recent","hint","fromNow","documentation","addHistoryMetadata","prefixMatch","skipSort","items","promql","m","metadata","help","toUpperCase","addMetricsMetadata","queryText","getBlocks","reduce","block","blockText","anchorBlock","key","queryOffset","openParensAggregationIndex","lastIndexOf","openParensSelectorIndex","closeParensSelectorIndex","indexOf","closeParensAggregationIndex","selectorString","selector","getLabelValues","labelValues","line","cursorOffset","suffix","substr","isValueStart","isValueEnd","isPreValue","hasValuePrefix","parsedSelector","containsMetric","existingKeys","labelKeys","possibleKeys","difference","newItems","newSuggestion","warn","fetchLabelValues","fetchSeriesLabels","name","withName","tRange","getTimeRange","cacheKey","roundToMinutes","get","set","fetchDefaultLabels","once","all","acc","assign","cleanText","s","split","pop","trimLeft","defineProperty","error_2","seconds","Math","floor","SUM_HINT_THRESHOLD_COUNT","ANNOTATION_QUERY_STEP_DEFAULT","datasource_PrometheusDatasource","PrometheusDatasource","instanceSettings","init","loadRules","processResult","transformerOptions","resultTransformer","prepareTargets","queries","activeTargets","targets","hide","requestId","panelId","app","Explore","showingTable","instantTarget","cloneDeep_default","instant","maxDataPoints","createQuery","showingGraph","handleErrors","message","statusText","explore","status","createAnnotationQueryOptions","annotation","interval","editorSrc","basicAuth","withCredentials","jsonData","timeInterval","queryTimeout","httpMethod","directUrl","template_srv","ruleMappings","languageProvider","language_provider","customQueryParameters","URLSearchParams","getQueryDisplayText","_addTracingHeaders","httpOptions","headers","dashboardId","_request","defaults_default","method","entries","transformRequest","jquery_js_exposed_default","param","Authorization","backend_srv","datasourceRequest","silent","interpolateQueryExpr","variable","multi","includeAll","prometheusSpecialRegexEscape","val","prometheusRegularEscape","targetContainsTemplate","variableExists","exploreQuery","panelsQuery","of","state","Done","runningQueriesCount","subQueries","index","performTimeSeriesQuery","pipe","tap","operators_filter","cancelled","Loading","merge","apply","observables","forkJoin","results","current","hinting","ceil","kbn","interval_to_seconds","minInterval","scopedVars","intervalFactor","adjustedInterval","adjustInterval","getRangeScopedVars","__interval","__interval_ms","getAdhocFilters","operator","add_label_to_query","adjusted","utcOffsetSec","alignedEnd","alignedStart","alignRange","utcOffset","safeInterval","max","_d","catch","performSuggestQuery","cache","metricsNameCache","expire","metricFindQuery","resolve","interval_to_ms","interpolated","metric_find_query","msRange","diff","sRange","round","regularRange","secondsToHms","__range_ms","__range_s","__range","annotationQuery","_e","_f","tagKeys","_g","titleFormat","_h","textFormat","queryOptions","queryModel","_j","eventList","splitKeys","forEach","dupCheck","useValueForTime","event","title","timestampValue","getTagKeys","getTagValues","testDatasource","getTime","interpolateVariablesInQueries","expandedQueries","getQueryHints","hints","trim","fix","action","nameMatch","counterNameMetric","metricsMetadata_1","certain_1","find","toLowerCase","metricRegex","simpleMetric","mapping_1","mappingForQuery","ruleName","search","mapping","preventSubmit","body","groups","group","rules","rule","extractRuleMappingFromGroups","e_5","modifyQuery","expression","date","roundUp","parse","valueOf","HISTOGRAM_GROUP","RECORDING_RULES_GROUP","willApplySuggestion","typeaheadContext","typeaheadText","nextChar","grafana_ui_src","getNextCharacter","components_PromQueryField","PromQueryField","props","refreshHint","setState","refreshMetrics","cancelablePromise","languageProviderInitializationPromise","promise","remaining","task","onUpdateLanguage","isCanceled","onChangeMetrics","selectedOptions","children","onChangeQuery","override","onChange","onRunQuery","onClickHintFix","metricsByPrefix","ruleRegex","ruleNames","rulesOption","metricsOptions","groupBy","metricsForPrefix","option","PromQueryField_addMetricsMetadata","sortBy","groupMetricsByPrefix","histogramOptions","hm","isLeaf","syntaxLoaded","onTypeahead","typeahead","plugins","onlyIn","node","getSyntax","componentDidMount","prism_default","languages","syntax","CancelablePromise","componentWillUnmount","cancel","componentDidUpdate","prevProps","render","ExtraFieldElement","chooserText","buttonDisabled","showError","react_default","createElement","Fragment","className","disabled","additionalPlugins","onWillApplySuggestion","onBlur","placeholder","portalOrigin","onClick","PureComponent","PromLink","arguments","href","panelData","getExternalLink","datasourceName","datasource_srv","rangeDiff","endTime","utc","g0.expr","g0.range_input","g0.end_input","g0.step_input","g0.tab","args","rel","react","FORMAT_OPTIONS","INTERVAL_FACTOR_OPTIONS","PromQueryEditor_PromQueryEditor","PromQueryEditor","onFieldChange","onFormatChange","formatOption","onInstantChange","e","checked","onIntervalChange","currentTarget","onIntervalFactorChange","intervalFactorOption","onLegendChange","Boolean","width","tooltip","isSearchable","components_PromLink","CHEAT_SHEET_ITEMS","PromExploreExtraField","onChangeFunc","onKeyDownFunc","hasTooltip","tooltipContent","onKeyDown","components_PromExploreQueryEditor","onChangeQueryStep","PromSettings","labelWidth","inputEl","spellCheck","onChangeHandler","validationEvents","promSettingsValidationEvents","o","PromSettings_a","getValueFromEventItem","eventItem","__webpack_require__","d","__webpack_exports__","module_plugin","module_PrometheusAnnotationsQueryCtrl","PrometheusAnnotationsQueryCtrl","stepDefaultValuePlaceholder","templateUrl","setQueryEditor","setConfigEditor","onOptionsChange","defaultUrl","dataSourceConfig","showAccessOptions","setExploreMetricsQueryField","setAnnotationQueryCtrl","setExploreStartPage","onClickExample","module","exports","Yallist","Symbol","iterator","regeneratorRuntime","mark","_callee","walker","wrap","_context","prev","head","stop","require","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","_classCallCheck","TypeError","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","fn","thisp","tail","forEachStep","toArray","hit","Map","_this2","isStale","len","has","del","Entry","unshift","arr","l","expiresAt","_this3","mL","allowStale","mA","lC","_this4","doUse","unshiftNode","removeNode","list","insert","inserted","Node","create","pushNode","shift","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","Array","toArrayReverse","ret","sliceReverse","splice","deleteCount","reverse","p","er","processHistogramLabels","labels","regexp","processLabels","rest","tslib__WEBPACK_IMPORTED_MODULE_0__","selectorRegexp","labelRegexp","parseSelector","prefixOpen","prefixClose","suffixClose","suffixOpenIndex","suffixOpen","labelOffset","valueStart","valueEnd","metricMatch","cleanSelector","expandRecordingRules","rulesRegex","pre","post","addLabelToSelector","keepSelectorFilters","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","keywords","builtInWords","metricNameRegexp","labelValue","labelOperator","parsedLabels","exec","operatorForLabelKey","uniqWith","isEqual","compact","previousWord","word","position","openChar","closeChar","nextSelectorStart","nextSelectorEnd","insideSelector","previousWordIsKeyWord","isColonBounded","endsWith","parts","lastIndex","selectorWithLabel","RATE_RANGES","sortText","FUNCTIONS","insertText","detail","tokenizer","comment","pattern","context-aggregation","lookbehind","inside","label-key","alias","punctuation","context-labels","greedy","label-value","function","f","context-range","range-duration","number","makePromiseCancelable","hasCanceled_","reject"],"mappings":"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","file":"prometheusPlugin.4d0490a94b199a11f40c.js","sourcesContent":["import _ from 'lodash';\nimport { TimeRange } from '@grafana/data';\nimport { PrometheusDatasource, PromDataQueryResponse } from './datasource';\nimport { PromQueryRequest } from './types';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport default class PrometheusMetricFindQuery {\n  range: TimeRange;\n\n  constructor(private datasource: PrometheusDatasource, private query: string) {\n    this.datasource = datasource;\n    this.query = query;\n    this.range = getTimeSrv().timeRange();\n  }\n\n  process() {\n    const labelNamesRegex = /^label_names\\(\\)\\s*$/;\n    const labelValuesRegex = /^label_values\\((?:(.+),\\s*)?([a-zA-Z_][a-zA-Z0-9_]*)\\)\\s*$/;\n    const metricNamesRegex = /^metrics\\((.+)\\)\\s*$/;\n    const queryResultRegex = /^query_result\\((.+)\\)\\s*$/;\n    const labelNamesQuery = this.query.match(labelNamesRegex);\n    if (labelNamesQuery) {\n      return this.labelNamesQuery();\n    }\n\n    const labelValuesQuery = this.query.match(labelValuesRegex);\n    if (labelValuesQuery) {\n      if (labelValuesQuery[1]) {\n        return this.labelValuesQuery(labelValuesQuery[2], labelValuesQuery[1]);\n      } else {\n        return this.labelValuesQuery(labelValuesQuery[2], null);\n      }\n    }\n\n    const metricNamesQuery = this.query.match(metricNamesRegex);\n    if (metricNamesQuery) {\n      return this.metricNameQuery(metricNamesQuery[1]);\n    }\n\n    const queryResultQuery = this.query.match(queryResultRegex);\n    if (queryResultQuery) {\n      return this.queryResultQuery(queryResultQuery[1]);\n    }\n\n    // if query contains full metric name, return metric name and label list\n    return this.metricNameAndLabelsQuery(this.query);\n  }\n\n  labelNamesQuery() {\n    const url = '/api/v1/labels';\n    return this.datasource.metadataRequest(url).then((result: any) => {\n      return _.map(result.data.data, value => {\n        return { text: value };\n      });\n    });\n  }\n\n  labelValuesQuery(label: string, metric?: string) {\n    let url: string;\n\n    if (!metric) {\n      // return label values globally\n      url = '/api/v1/label/' + label + '/values';\n\n      return this.datasource.metadataRequest(url).then((result: any) => {\n        return _.map(result.data.data, value => {\n          return { text: value };\n        });\n      });\n    } else {\n      const start = this.datasource.getPrometheusTime(this.range.from, false);\n      const end = this.datasource.getPrometheusTime(this.range.to, true);\n      url = '/api/v1/series?match[]=' + encodeURIComponent(metric) + '&start=' + start + '&end=' + end;\n\n      return this.datasource.metadataRequest(url).then((result: any) => {\n        const _labels = _.map(result.data.data, metric => {\n          return metric[label] || '';\n        }).filter(label => {\n          return label !== '';\n        });\n\n        return _.uniq(_labels).map(metric => {\n          return {\n            text: metric,\n            expandable: true,\n          };\n        });\n      });\n    }\n  }\n\n  metricNameQuery(metricFilterPattern: string) {\n    const url = '/api/v1/label/__name__/values';\n\n    return this.datasource.metadataRequest(url).then((result: any) => {\n      return _.chain(result.data.data)\n        .filter(metricName => {\n          const r = new RegExp(metricFilterPattern);\n          return r.test(metricName);\n        })\n        .map(matchedMetricName => {\n          return {\n            text: matchedMetricName,\n            expandable: true,\n          };\n        })\n        .value();\n    });\n  }\n\n  queryResultQuery(query: string) {\n    const end = this.datasource.getPrometheusTime(this.range.to, true);\n    const instantQuery: PromQueryRequest = { expr: query } as PromQueryRequest;\n    return this.datasource.performInstantQuery(instantQuery, end).then((result: PromDataQueryResponse) => {\n      return _.map(result.data.data.result, metricData => {\n        let text = metricData.metric.__name__ || '';\n        delete metricData.metric.__name__;\n        text +=\n          '{' +\n          _.map(metricData.metric, (v, k) => {\n            return k + '=\"' + v + '\"';\n          }).join(',') +\n          '}';\n        text += ' ' + metricData.value[1] + ' ' + metricData.value[0] * 1000;\n\n        return {\n          text: text,\n          expandable: true,\n        };\n      });\n    });\n  }\n\n  metricNameAndLabelsQuery(query: string) {\n    const start = this.datasource.getPrometheusTime(this.range.from, false);\n    const end = this.datasource.getPrometheusTime(this.range.to, true);\n    const url = '/api/v1/series?match[]=' + encodeURIComponent(query) + '&start=' + start + '&end=' + end;\n\n    const self = this;\n    return this.datasource.metadataRequest(url).then((result: PromDataQueryResponse) => {\n      return _.map(result.data.data, (metric: { [key: string]: string }) => {\n        return {\n          text: self.datasource.getOriginalMetricName(metric),\n          expandable: true,\n        };\n      });\n    });\n  }\n}\n","import _ from 'lodash';\nimport TableModel from 'app/core/table_model';\nimport { TimeSeries, FieldType } from '@grafana/data';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nexport class ResultTransformer {\n  constructor(private templateSrv: TemplateSrv) {}\n\n  transform(response: any, options: any): Array<TableModel | TimeSeries> {\n    const prometheusResult = response.data.data.result;\n\n    if (options.format === 'table') {\n      return [\n        this.transformMetricDataToTable(\n          prometheusResult,\n          options.responseListLength,\n          options.refId,\n          options.valueWithRefId\n        ),\n      ];\n    } else if (prometheusResult && options.format === 'heatmap') {\n      let seriesList = [];\n      for (const metricData of prometheusResult) {\n        seriesList.push(this.transformMetricData(metricData, options, options.start, options.end));\n      }\n      seriesList.sort(sortSeriesByLabel);\n      seriesList = this.transformToHistogramOverTime(seriesList);\n      return seriesList;\n    } else if (prometheusResult) {\n      const seriesList = [];\n      for (const metricData of prometheusResult) {\n        if (response.data.data.resultType === 'matrix') {\n          seriesList.push(this.transformMetricData(metricData, options, options.start, options.end));\n        } else if (response.data.data.resultType === 'vector') {\n          seriesList.push(this.transformInstantMetricData(metricData, options));\n        }\n      }\n      return seriesList;\n    }\n    return [];\n  }\n\n  transformMetricData(metricData: any, options: any, start: number, end: number) {\n    const dps = [];\n    let metricLabel = null;\n\n    metricLabel = this.createMetricLabel(metricData.metric, options);\n\n    const stepMs = parseInt(options.step, 10) * 1000;\n    let baseTimestamp = start * 1000;\n\n    if (metricData.values === undefined) {\n      throw new Error('Prometheus heatmap error: data should be a time series');\n    }\n\n    for (const value of metricData.values) {\n      let dpValue = parseFloat(value[1]);\n      if (_.isNaN(dpValue)) {\n        dpValue = null;\n      }\n\n      const timestamp = parseFloat(value[0]) * 1000;\n      for (let t = baseTimestamp; t < timestamp; t += stepMs) {\n        dps.push([null, t]);\n      }\n      baseTimestamp = timestamp + stepMs;\n      dps.push([dpValue, timestamp]);\n    }\n\n    const endTimestamp = end * 1000;\n    for (let t = baseTimestamp; t <= endTimestamp; t += stepMs) {\n      dps.push([null, t]);\n    }\n\n    return {\n      datapoints: dps,\n      query: options.query,\n      refId: options.refId,\n      target: metricLabel,\n      tags: metricData.metric,\n    };\n  }\n\n  transformMetricDataToTable(md: any, resultCount: number, refId: string, valueWithRefId?: boolean): TableModel {\n    const table = new TableModel();\n    table.refId = refId;\n\n    let i: number, j: number;\n    const metricLabels: { [key: string]: number } = {};\n\n    if (!md || md.length === 0) {\n      return table;\n    }\n\n    // Collect all labels across all metrics\n    _.each(md, series => {\n      for (const label in series.metric) {\n        if (!metricLabels.hasOwnProperty(label)) {\n          metricLabels[label] = 1;\n        }\n      }\n    });\n\n    // Sort metric labels, create columns for them and record their index\n    const sortedLabels = _.keys(metricLabels).sort();\n    table.columns.push({ text: 'Time', type: FieldType.time });\n    _.each(sortedLabels, (label, labelIndex) => {\n      metricLabels[label] = labelIndex + 1;\n      table.columns.push({ text: label, filterable: true });\n    });\n    const valueText = resultCount > 1 || valueWithRefId ? `Value #${refId}` : 'Value';\n    table.columns.push({ text: valueText });\n\n    // Populate rows, set value to empty string when label not present.\n    _.each(md, series => {\n      if (series.value) {\n        series.values = [series.value];\n      }\n      if (series.values) {\n        for (i = 0; i < series.values.length; i++) {\n          const values = series.values[i];\n          const reordered: any = [values[0] * 1000];\n          if (series.metric) {\n            for (j = 0; j < sortedLabels.length; j++) {\n              const label = sortedLabels[j];\n              if (series.metric.hasOwnProperty(label)) {\n                reordered.push(series.metric[label]);\n              } else {\n                reordered.push('');\n              }\n            }\n          }\n          reordered.push(parseFloat(values[1]));\n          table.rows.push(reordered);\n        }\n      }\n    });\n\n    return table;\n  }\n\n  transformInstantMetricData(md: any, options: any) {\n    const dps = [];\n    let metricLabel = null;\n    metricLabel = this.createMetricLabel(md.metric, options);\n    dps.push([parseFloat(md.value[1]), md.value[0] * 1000]);\n    return { target: metricLabel, datapoints: dps, tags: md.metric, refId: options.refId };\n  }\n\n  createMetricLabel(labelData: { [key: string]: string }, options: any) {\n    let label = '';\n    if (_.isUndefined(options) || _.isEmpty(options.legendFormat)) {\n      label = this.getOriginalMetricName(labelData);\n    } else {\n      label = this.renderTemplate(this.templateSrv.replace(options.legendFormat), labelData);\n    }\n    if (!label || label === '{}') {\n      label = options.query;\n    }\n    return label;\n  }\n\n  renderTemplate(aliasPattern: string, aliasData: { [key: string]: string }) {\n    const aliasRegex = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return aliasPattern.replace(aliasRegex, (match, g1) => {\n      if (aliasData[g1]) {\n        return aliasData[g1];\n      }\n      return g1;\n    });\n  }\n\n  getOriginalMetricName(labelData: { [key: string]: string }) {\n    const metricName = labelData.__name__ || '';\n    delete labelData.__name__;\n    const labelPart = _.map(_.toPairs(labelData), label => {\n      return label[0] + '=\"' + label[1] + '\"';\n    }).join(',');\n    return metricName + '{' + labelPart + '}';\n  }\n\n  transformToHistogramOverTime(seriesList: TimeSeries[]) {\n    /*      t1 = timestamp1, t2 = timestamp2 etc.\n            t1  t2  t3          t1  t2  t3\n    le10    10  10  0     =>    10  10  0\n    le20    20  10  30    =>    10  0   30\n    le30    30  10  35    =>    10  0   5\n    */\n    for (let i = seriesList.length - 1; i > 0; i--) {\n      const topSeries = seriesList[i].datapoints;\n      const bottomSeries = seriesList[i - 1].datapoints;\n      if (!topSeries || !bottomSeries) {\n        throw new Error('Prometheus heatmap transform error: data should be a time series');\n      }\n\n      for (let j = 0; j < topSeries.length; j++) {\n        const bottomPoint = bottomSeries[j] || [0];\n        topSeries[j][0] -= bottomPoint[0];\n      }\n    }\n\n    return seriesList;\n  }\n}\n\nfunction sortSeriesByLabel(s1: TimeSeries, s2: TimeSeries): number {\n  let le1, le2;\n\n  try {\n    // fail if not integer. might happen with bad queries\n    le1 = parseHistogramLabel(s1.target);\n    le2 = parseHistogramLabel(s2.target);\n  } catch (err) {\n    console.log(err);\n    return 0;\n  }\n\n  if (le1 > le2) {\n    return 1;\n  }\n\n  if (le1 < le2) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction parseHistogramLabel(le: string): number {\n  if (le === '+Inf') {\n    return +Infinity;\n  }\n  return Number(le);\n}\n","import _ from 'lodash';\nimport LRU from 'lru-cache';\nimport { Value } from 'slate';\n\nimport { dateTime, LanguageProvider, HistoryItem } from '@grafana/data';\nimport { CompletionItem, TypeaheadInput, TypeaheadOutput, CompletionItemGroup } from '@grafana/ui';\n\nimport { parseSelector, processLabels, processHistogramLabels } from './language_utils';\nimport PromqlSyntax, { FUNCTIONS, RATE_RANGES } from './promql';\n\nimport { PrometheusDatasource } from './datasource';\nimport { PromQuery, PromMetricsMetadata } from './types';\n\nconst DEFAULT_KEYS = ['job', 'instance'];\nconst EMPTY_SELECTOR = '{}';\nconst HISTORY_ITEM_COUNT = 5;\nconst HISTORY_COUNT_CUTOFF = 1000 * 60 * 60 * 24; // 24h\nexport const DEFAULT_LOOKUP_METRICS_THRESHOLD = 10000; // number of metrics defining an installation that's too big\n\nconst wrapLabel = (label: string): CompletionItem => ({ label });\n\nconst setFunctionKind = (suggestion: CompletionItem): CompletionItem => {\n  suggestion.kind = 'function';\n  return suggestion;\n};\n\nexport function addHistoryMetadata(item: CompletionItem, history: any[]): CompletionItem {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter(h => h.ts > cutoffTs && h.query === item.label);\n  const count = historyForItem.length;\n  const recent = historyForItem[0];\n  let hint = `Queried ${count} times in the last 24h.`;\n\n  if (recent) {\n    const lastQueried = dateTime(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n\n  return {\n    ...item,\n    documentation: hint,\n  };\n}\n\nfunction addMetricsMetadata(metric: string, metadata?: PromMetricsMetadata): CompletionItem {\n  const item: CompletionItem = { label: metric };\n  if (metadata && metadata[metric]) {\n    const { type, help } = metadata[metric][0];\n    item.documentation = `${type.toUpperCase()}: ${help}`;\n  }\n  return item;\n}\n\nconst PREFIX_DELIMITER_REGEX = /(=\"|!=\"|=~\"|!~\"|\\{|\\[|\\(|\\+|-|\\/|\\*|%|\\^|\\band\\b|\\bor\\b|\\bunless\\b|==|>=|!=|<=|>|<|=|~|,)/;\n\nexport default class PromQlLanguageProvider extends LanguageProvider {\n  histogramMetrics?: string[];\n  timeRange?: { start: number; end: number };\n  metrics?: string[];\n  metricsMetadata?: PromMetricsMetadata;\n  startTask: Promise<any>;\n  datasource: PrometheusDatasource;\n  lookupMetricsThreshold: number;\n  lookupsDisabled: boolean; // Dynamically set to true for big/slow instances\n\n  /**\n   *  Cache for labels of series. This is bit simplistic in the sense that it just counts responses each as a 1 and does\n   *  not account for different size of a response. If that is needed a `length` function can be added in the options.\n   *  10 as a max size is totally arbitrary right now.\n   */\n  private labelsCache = new LRU<string, Record<string, string[]>>(10);\n\n  constructor(datasource: PrometheusDatasource, initialValues?: Partial<PromQlLanguageProvider>) {\n    super();\n\n    this.datasource = datasource;\n    this.histogramMetrics = [];\n    this.timeRange = { start: 0, end: 0 };\n    this.metrics = [];\n    // Disable lookups until we know the instance is small enough\n    this.lookupMetricsThreshold = DEFAULT_LOOKUP_METRICS_THRESHOLD;\n    this.lookupsDisabled = true;\n\n    Object.assign(this, initialValues);\n  }\n\n  // Strip syntax chars so that typeahead suggestions can work on clean inputs\n  cleanText(s: string) {\n    const parts = s.split(PREFIX_DELIMITER_REGEX);\n    const last = parts.pop();\n    return last\n      .trimLeft()\n      .replace(/\"$/, '')\n      .replace(/^\"/, '');\n  }\n\n  get syntax() {\n    return PromqlSyntax;\n  }\n\n  request = async (url: string, defaultValue: any): Promise<any> => {\n    try {\n      const res = await this.datasource.metadataRequest(url);\n      const body = await (res.data || res.json());\n\n      return body.data;\n    } catch (error) {\n      console.error(error);\n    }\n\n    return defaultValue;\n  };\n\n  start = async (): Promise<any[]> => {\n    this.metrics = await this.request('/api/v1/label/__name__/values', []);\n    this.lookupsDisabled = this.metrics.length > this.lookupMetricsThreshold;\n    this.metricsMetadata = await this.request('/api/v1/metadata', {});\n    this.processHistogramMetrics(this.metrics);\n    return [];\n  };\n\n  processHistogramMetrics = (data: string[]) => {\n    const { values } = processHistogramLabels(data);\n\n    if (values && values['__name__']) {\n      this.histogramMetrics = values['__name__'].slice().sort();\n    }\n  };\n\n  provideCompletionItems = async (\n    { prefix, text, value, labelKey, wrapperClasses }: TypeaheadInput,\n    context: { history: Array<HistoryItem<PromQuery>> } = { history: [] }\n  ): Promise<TypeaheadOutput> => {\n    // Local text properties\n    const empty = value.document.text.length === 0;\n    const selectedLines = value.document.getTextsAtRange(value.selection);\n    const currentLine = selectedLines.size === 1 ? selectedLines.first().getText() : null;\n\n    const nextCharacter = currentLine ? currentLine[value.selection.anchor.offset] : null;\n\n    // Syntax spans have 3 classes by default. More indicate a recognized token\n    const tokenRecognized = wrapperClasses.length > 3;\n    // Non-empty prefix, but not inside known token\n    const prefixUnrecognized = prefix && !tokenRecognized;\n\n    // Prevent suggestions in `function(|suffix)`\n    const noSuffix = !nextCharacter || nextCharacter === ')';\n\n    // Prefix is safe if it does not immediately follow a complete expression and has no text after it\n    const safePrefix = prefix && !text.match(/^[\\]})\\s]+$/) && noSuffix;\n\n    // About to type next operand if preceded by binary operator\n    const operatorsPattern = /[+\\-*/^%]/;\n    const isNextOperand = text.match(operatorsPattern);\n\n    // Determine candidates by CSS context\n    if (wrapperClasses.includes('context-range')) {\n      // Suggestions for metric[|]\n      return this.getRangeCompletionItems();\n    } else if (wrapperClasses.includes('context-labels')) {\n      // Suggestions for metric{|} and metric{foo=|}, as well as metric-independent label queries like {|}\n      return this.getLabelCompletionItems({ prefix, text, value, labelKey, wrapperClasses });\n    } else if (wrapperClasses.includes('context-aggregation')) {\n      // Suggestions for sum(metric) by (|)\n      return this.getAggregationCompletionItems(value);\n    } else if (empty) {\n      // Suggestions for empty query field\n      return this.getEmptyCompletionItems(context);\n    } else if (prefixUnrecognized && noSuffix && !isNextOperand) {\n      // Show term suggestions in a couple of scenarios\n      return this.getBeginningCompletionItems(context);\n    } else if (prefixUnrecognized && safePrefix) {\n      // Show term suggestions in a couple of scenarios\n      return this.getTermCompletionItems();\n    }\n\n    return {\n      suggestions: [],\n    };\n  };\n\n  getBeginningCompletionItems = (context: { history: Array<HistoryItem<PromQuery>> }): TypeaheadOutput => {\n    return {\n      suggestions: [...this.getEmptyCompletionItems(context).suggestions, ...this.getTermCompletionItems().suggestions],\n    };\n  };\n\n  getEmptyCompletionItems = (context: { history: Array<HistoryItem<PromQuery>> }): TypeaheadOutput => {\n    const { history } = context;\n    const suggestions = [];\n\n    if (history && history.length) {\n      const historyItems = _.chain(history)\n        .map(h => h.query.expr)\n        .filter()\n        .uniq()\n        .take(HISTORY_ITEM_COUNT)\n        .map(wrapLabel)\n        .map(item => addHistoryMetadata(item, history))\n        .value();\n\n      suggestions.push({\n        prefixMatch: true,\n        skipSort: true,\n        label: 'History',\n        items: historyItems,\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getTermCompletionItems = (): TypeaheadOutput => {\n    const { metrics, metricsMetadata } = this;\n    const suggestions = [];\n\n    suggestions.push({\n      prefixMatch: true,\n      label: 'Functions',\n      items: FUNCTIONS.map(setFunctionKind),\n    });\n\n    if (metrics && metrics.length) {\n      suggestions.push({\n        label: 'Metrics',\n        items: metrics.map(m => addMetricsMetadata(m, metricsMetadata)),\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getRangeCompletionItems(): TypeaheadOutput {\n    return {\n      context: 'context-range',\n      suggestions: [\n        {\n          label: 'Range vector',\n          items: [...RATE_RANGES],\n        },\n      ],\n    };\n  }\n\n  getAggregationCompletionItems = async (value: Value): Promise<TypeaheadOutput> => {\n    const suggestions: CompletionItemGroup[] = [];\n\n    // Stitch all query lines together to support multi-line queries\n    let queryOffset;\n    const queryText = value.document.getBlocks().reduce((text: string, block) => {\n      const blockText = block.getText();\n      if (value.anchorBlock.key === block.key) {\n        // Newline characters are not accounted for but this is irrelevant\n        // for the purpose of extracting the selector string\n        queryOffset = value.selection.anchor.offset + text.length;\n      }\n\n      return text + blockText;\n    }, '');\n\n    // Try search for selector part on the left-hand side, such as `sum (m) by (l)`\n    const openParensAggregationIndex = queryText.lastIndexOf('(', queryOffset);\n    let openParensSelectorIndex = queryText.lastIndexOf('(', openParensAggregationIndex - 1);\n    let closeParensSelectorIndex = queryText.indexOf(')', openParensSelectorIndex);\n\n    // Try search for selector part of an alternate aggregation clause, such as `sum by (l) (m)`\n    if (openParensSelectorIndex === -1) {\n      const closeParensAggregationIndex = queryText.indexOf(')', queryOffset);\n      closeParensSelectorIndex = queryText.indexOf(')', closeParensAggregationIndex + 1);\n      openParensSelectorIndex = queryText.lastIndexOf('(', closeParensSelectorIndex);\n    }\n\n    const result = {\n      suggestions,\n      context: 'context-aggregation',\n    };\n\n    // Suggestions are useless for alternative aggregation clauses without a selector in context\n    if (openParensSelectorIndex === -1) {\n      return result;\n    }\n\n    // Range vector syntax not accounted for by subsequent parse so discard it if present\n    const selectorString = queryText\n      .slice(openParensSelectorIndex + 1, closeParensSelectorIndex)\n      .replace(/\\[[^\\]]+\\]$/, '');\n\n    const selector = parseSelector(selectorString, selectorString.length - 2).selector;\n\n    const labelValues = await this.getLabelValues(selector);\n    if (labelValues) {\n      suggestions.push({ label: 'Labels', items: Object.keys(labelValues).map(wrapLabel) });\n    }\n    return result;\n  };\n\n  getLabelCompletionItems = async ({\n    text,\n    wrapperClasses,\n    labelKey,\n    value,\n  }: TypeaheadInput): Promise<TypeaheadOutput> => {\n    const suggestions: CompletionItemGroup[] = [];\n    const line = value.anchorBlock.getText();\n    const cursorOffset = value.selection.anchor.offset;\n    const suffix = line.substr(cursorOffset);\n    const prefix = line.substr(0, cursorOffset);\n    const isValueStart = text.match(/^(=|=~|!=|!~)/);\n    const isValueEnd = suffix.match(/^\"?[,}]/);\n    // detect cursor in front of value, e.g., {key=|\"}\n    const isPreValue = prefix.match(/(=|=~|!=|!~)$/) && suffix.match(/^\"/);\n\n    // Don't suggestq anything at the beginning or inside a value\n    const isValueEmpty = isValueStart && isValueEnd;\n    const hasValuePrefix = isValueEnd && !isValueStart;\n    if ((!isValueEmpty && !hasValuePrefix) || isPreValue) {\n      return { suggestions };\n    }\n\n    // Get normalized selector\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = parseSelector(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n\n    const containsMetric = selector.includes('__name__=');\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n\n    let labelValues;\n    // Query labels for selector\n    if (selector) {\n      labelValues = await this.getLabelValues(selector, !containsMetric);\n    }\n\n    if (!labelValues) {\n      console.warn(`Server did not return any values for selector = ${selector}`);\n      return { suggestions };\n    }\n\n    let context: string;\n    if ((text && isValueStart) || wrapperClasses.includes('attr-value')) {\n      // Label values\n      if (labelKey && labelValues[labelKey]) {\n        context = 'context-label-values';\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"`,\n          items: labelValues[labelKey].map(wrapLabel),\n        });\n      }\n    } else {\n      // Label keys\n      const labelKeys = labelValues ? Object.keys(labelValues) : containsMetric ? null : DEFAULT_KEYS;\n\n      if (labelKeys) {\n        const possibleKeys = _.difference(labelKeys, existingKeys);\n        if (possibleKeys.length) {\n          context = 'context-labels';\n          const newItems = possibleKeys.map(key => ({ label: key }));\n          const newSuggestion: CompletionItemGroup = { label: `Labels`, items: newItems };\n          suggestions.push(newSuggestion);\n        }\n      }\n    }\n\n    return { context, suggestions };\n  };\n\n  async getLabelValues(selector: string, withName?: boolean) {\n    if (this.lookupsDisabled) {\n      return undefined;\n    }\n    try {\n      if (selector === EMPTY_SELECTOR) {\n        return await this.fetchDefaultLabels();\n      } else {\n        return await this.fetchSeriesLabels(selector, withName);\n      }\n    } catch (error) {\n      // TODO: better error handling\n      console.error(error);\n      return undefined;\n    }\n  }\n\n  fetchLabelValues = async (key: string): Promise<Record<string, string[]>> => {\n    const data = await this.request(`/api/v1/label/${key}/values`, []);\n    return { [key]: data };\n  };\n\n  roundToMinutes(seconds: number): number {\n    return Math.floor(seconds / 60);\n  }\n\n  /**\n   * Fetch labels for a series. This is cached by it's args but also by the global timeRange currently selected as\n   * they can change over requested time.\n   * @param name\n   * @param withName\n   */\n  fetchSeriesLabels = async (name: string, withName?: boolean): Promise<Record<string, string[]>> => {\n    const tRange = this.datasource.getTimeRange();\n    const url = `/api/v1/series?match[]=${name}&start=${tRange['start']}&end=${tRange['end']}`;\n    // Cache key is a bit different here. We add the `withName` param and also round up to a minute the intervals.\n    // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n    // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n    // when user does not the newest values for a minute if already cached.\n    const cacheKey = `/api/v1/series?match[]=${name}&start=${this.roundToMinutes(\n      tRange['start']\n    )}&end=${this.roundToMinutes(tRange['end'])}&withName=${!!withName}`;\n    let value = this.labelsCache.get(cacheKey);\n    if (!value) {\n      const data = await this.request(url, []);\n      const { values } = processLabels(data, withName);\n      value = values;\n      this.labelsCache.set(cacheKey, value);\n    }\n    return value;\n  };\n\n  /**\n   * Fetch this only one as we assume this won't change over time. This is cached differently from fetchSeriesLabels\n   * because we can cache more aggressively here and also we do not want to invalidate this cache the same way as in\n   * fetchSeriesLabels.\n   */\n  fetchDefaultLabels = _.once(async () => {\n    const values = await Promise.all(DEFAULT_KEYS.map(key => this.fetchLabelValues(key)));\n    return values.reduce((acc, value) => ({ ...acc, ...value }), {});\n  });\n}\n","import _ from 'lodash';\nimport { QueryHint, QueryFix } from '@grafana/data';\nimport { PrometheusDatasource } from './datasource';\n\n/**\n * Number of time series results needed before starting to suggest sum aggregation hints\n */\nexport const SUM_HINT_THRESHOLD_COUNT = 20;\n\nexport function getQueryHints(query: string, series?: any[], datasource?: PrometheusDatasource): QueryHint[] | null {\n  const hints = [];\n\n  // ..._bucket metric needs a histogram_quantile()\n  const histogramMetric = query.trim().match(/^\\w+_bucket$/);\n  if (histogramMetric) {\n    const label = 'Time series has buckets, you probably wanted a histogram.';\n    hints.push({\n      type: 'HISTOGRAM_QUANTILE',\n      label,\n      fix: {\n        label: 'Fix by adding histogram_quantile().',\n        action: {\n          type: 'ADD_HISTOGRAM_QUANTILE',\n          query,\n        },\n      } as QueryFix,\n    });\n  }\n\n  // Check for need of rate()\n  if (query.indexOf('rate(') === -1) {\n    // Use metric metadata for exact types\n    const nameMatch = query.match(/\\b(\\w+_(total|sum|count))\\b/);\n    let counterNameMetric = nameMatch ? nameMatch[1] : '';\n    const metricsMetadata = datasource?.languageProvider?.metricsMetadata;\n    let certain = false;\n    if (_.size(metricsMetadata) > 0) {\n      counterNameMetric = Object.keys(metricsMetadata).find(metricName => {\n        // Only considering first type information, could be non-deterministic\n        const metadata = metricsMetadata[metricName][0];\n        if (metadata.type.toLowerCase() === 'counter') {\n          const metricRegex = new RegExp(`\\\\b${metricName}\\\\b`);\n          if (query.match(metricRegex)) {\n            certain = true;\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n    if (counterNameMetric) {\n      const simpleMetric = query.trim().match(/^\\w+$/);\n      const verb = certain ? 'is' : 'looks like';\n      let label = `Metric ${counterNameMetric} ${verb} a counter.`;\n      let fix: QueryFix;\n      if (simpleMetric) {\n        fix = {\n          label: 'Fix by adding rate().',\n          action: {\n            type: 'ADD_RATE',\n            query,\n          },\n        } as QueryFix;\n      } else {\n        label = `${label} Try applying a rate() function.`;\n      }\n      hints.push({\n        type: 'APPLY_RATE',\n        label,\n        fix,\n      });\n    }\n  }\n\n  // Check for recording rules expansion\n  if (datasource && datasource.ruleMappings) {\n    const mapping = datasource.ruleMappings;\n    const mappingForQuery = Object.keys(mapping).reduce((acc, ruleName) => {\n      if (query.search(ruleName) > -1) {\n        return {\n          ...acc,\n          [ruleName]: mapping[ruleName],\n        };\n      }\n      return acc;\n    }, {});\n    if (_.size(mappingForQuery) > 0) {\n      const label = 'Query contains recording rules.';\n      hints.push({\n        type: 'EXPAND_RULES',\n        label,\n        fix: ({\n          label: 'Expand rules',\n          action: {\n            type: 'EXPAND_RULES',\n            query,\n            mapping: mappingForQuery,\n          },\n        } as any) as QueryFix,\n      });\n    }\n  }\n\n  if (series && series.length >= SUM_HINT_THRESHOLD_COUNT) {\n    const simpleMetric = query.trim().match(/^\\w+$/);\n    if (simpleMetric) {\n      hints.push({\n        type: 'ADD_SUM',\n        label: 'Many time series results returned.',\n        fix: {\n          label: 'Consider aggregating with sum().',\n          action: {\n            type: 'ADD_SUM',\n            query: query,\n            preventSubmit: true,\n          },\n        } as QueryFix,\n      });\n    }\n  }\n\n  return hints.length > 0 ? hints : null;\n}\n","// Libraries\nimport cloneDeep from 'lodash/cloneDeep';\nimport defaults from 'lodash/defaults';\nimport $ from 'jquery';\n// Services & Utils\nimport kbn from 'app/core/utils/kbn';\nimport {\n  AnnotationEvent,\n  CoreApp,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataQueryResponseData,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  dateMath,\n  DateTime,\n  LoadingState,\n  ScopedVars,\n  TimeRange,\n  TimeSeries,\n} from '@grafana/data';\nimport { forkJoin, from, merge, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\n\nimport PrometheusMetricFindQuery from './metric_find_query';\nimport { ResultTransformer } from './result_transformer';\nimport PrometheusLanguageProvider from './language_provider';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport addLabelToQuery from './add_label_to_query';\nimport { getQueryHints } from './query_hints';\nimport { expandRecordingRules } from './language_utils';\n// Types\nimport { PromOptions, PromQuery, PromQueryRequest } from './types';\nimport { safeStringifyValue } from 'app/core/utils/explore';\nimport templateSrv from 'app/features/templating/template_srv';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport TableModel from 'app/core/table_model';\n\nexport const ANNOTATION_QUERY_STEP_DEFAULT = '60s';\n\ninterface RequestOptions {\n  method?: string;\n  url?: string;\n  headers?: Record<string, string>;\n  transformRequest?: (data: any) => string;\n  data?: any;\n  withCredentials?: boolean;\n  silent?: boolean;\n  requestId?: string;\n}\n\nexport interface PromDataQueryResponse {\n  data: {\n    status: string;\n    data: {\n      resultType: string;\n      results?: DataQueryResponseData[];\n      result?: DataQueryResponseData[];\n    };\n  };\n  cancelled?: boolean;\n}\n\nexport interface PromLabelQueryResponse {\n  data: {\n    status: string;\n    data: string[];\n  };\n  cancelled?: boolean;\n}\n\nexport class PrometheusDatasource extends DataSourceApi<PromQuery, PromOptions> {\n  type: string;\n  editorSrc: string;\n  ruleMappings: { [index: string]: string };\n  url: string;\n  directUrl: string;\n  basicAuth: any;\n  withCredentials: any;\n  metricsNameCache: any;\n  interval: string;\n  queryTimeout: string;\n  httpMethod: string;\n  languageProvider: PrometheusLanguageProvider;\n  resultTransformer: ResultTransformer;\n  customQueryParameters: any;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<PromOptions>) {\n    super(instanceSettings);\n\n    this.type = 'prometheus';\n    this.editorSrc = 'app/features/prometheus/partials/query.editor.html';\n    this.url = instanceSettings.url;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.interval = instanceSettings.jsonData.timeInterval || '15s';\n    this.queryTimeout = instanceSettings.jsonData.queryTimeout;\n    this.httpMethod = instanceSettings.jsonData.httpMethod || 'GET';\n    this.directUrl = instanceSettings.jsonData.directUrl;\n    this.resultTransformer = new ResultTransformer(templateSrv);\n    this.ruleMappings = {};\n    this.languageProvider = new PrometheusLanguageProvider(this);\n    this.customQueryParameters = new URLSearchParams(instanceSettings.jsonData.customQueryParameters);\n  }\n\n  init = () => {\n    this.loadRules();\n  };\n\n  getQueryDisplayText(query: PromQuery) {\n    return query.expr;\n  }\n\n  _addTracingHeaders(httpOptions: PromQueryRequest, options: DataQueryRequest<PromQuery>) {\n    httpOptions.headers = {};\n    const proxyMode = !this.url.match(/^http/);\n    if (proxyMode) {\n      httpOptions.headers['X-Dashboard-Id'] = options.dashboardId;\n      httpOptions.headers['X-Panel-Id'] = options.panelId;\n    }\n  }\n\n  _request(url: string, data: Record<string, string> = {}, options?: RequestOptions) {\n    options = defaults(options || {}, {\n      url: this.url + url,\n      method: this.httpMethod,\n      headers: {},\n    });\n\n    if (options.method === 'GET') {\n      if (data && Object.keys(data).length) {\n        options.url =\n          options.url +\n          '?' +\n          Object.entries(data)\n            .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n            .join('&');\n      }\n    } else {\n      options.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      options.transformRequest = (data: any) => $.param(data);\n      options.data = data;\n    }\n\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n\n    if (this.basicAuth) {\n      options.headers.Authorization = this.basicAuth;\n    }\n\n    return getBackendSrv().datasourceRequest(options as Required<RequestOptions>);\n  }\n\n  // Use this for tab completion features, wont publish response to other components\n  metadataRequest(url: string) {\n    return this._request(url, null, { method: 'GET', silent: true });\n  }\n\n  interpolateQueryExpr(value: string | string[] = [], variable: any) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return prometheusRegularEscape(value);\n    }\n\n    if (typeof value === 'string') {\n      return prometheusSpecialRegexEscape(value);\n    }\n\n    const escapedValues = value.map(val => prometheusSpecialRegexEscape(val));\n    return escapedValues.join('|');\n  }\n\n  targetContainsTemplate(target: PromQuery) {\n    return templateSrv.variableExists(target.expr);\n  }\n\n  processResult = (response: any, query: PromQueryRequest, target: PromQuery, responseListLength: number) => {\n    // Keeping original start/end for transformers\n    const transformerOptions = {\n      format: target.format,\n      step: query.step,\n      legendFormat: target.legendFormat,\n      start: query.start,\n      end: query.end,\n      query: query.expr,\n      responseListLength,\n      refId: target.refId,\n      valueWithRefId: target.valueWithRefId,\n    };\n    const series = this.resultTransformer.transform(response, transformerOptions);\n\n    return series;\n  };\n\n  prepareTargets = (options: DataQueryRequest<PromQuery>, start: number, end: number) => {\n    const queries: PromQueryRequest[] = [];\n    const activeTargets: PromQuery[] = [];\n\n    for (const target of options.targets) {\n      if (!target.expr || target.hide) {\n        continue;\n      }\n\n      target.requestId = options.panelId + target.refId;\n\n      if (options.app !== CoreApp.Explore) {\n        activeTargets.push(target);\n        queries.push(this.createQuery(target, options, start, end));\n        continue;\n      }\n\n      if (target.showingTable) {\n        // create instant target only if Table is showed in Explore\n        const instantTarget: any = cloneDeep(target);\n        instantTarget.format = 'table';\n        instantTarget.instant = true;\n        instantTarget.valueWithRefId = true;\n        delete instantTarget.maxDataPoints;\n        instantTarget.requestId += '_instant';\n\n        activeTargets.push(instantTarget);\n        queries.push(this.createQuery(instantTarget, options, start, end));\n      }\n\n      if (target.showingGraph) {\n        // create time series target only if Graph is showed in Explore\n        target.format = 'time_series';\n        target.instant = false;\n\n        activeTargets.push(target);\n        queries.push(this.createQuery(target, options, start, end));\n      }\n    }\n\n    return {\n      queries,\n      activeTargets,\n    };\n  };\n\n  query(options: DataQueryRequest<PromQuery>): Observable<DataQueryResponse> {\n    const start = this.getPrometheusTime(options.range.from, false);\n    const end = this.getPrometheusTime(options.range.to, true);\n    const { queries, activeTargets } = this.prepareTargets(options, start, end);\n\n    // No valid targets, return the empty result to save a round trip.\n    if (!queries || !queries.length) {\n      return of({\n        data: [],\n        state: LoadingState.Done,\n      });\n    }\n\n    if (options.app === CoreApp.Explore) {\n      return this.exploreQuery(queries, activeTargets, end);\n    }\n\n    return this.panelsQuery(queries, activeTargets, end, options.requestId);\n  }\n\n  private exploreQuery(queries: PromQueryRequest[], activeTargets: PromQuery[], end: number) {\n    let runningQueriesCount = queries.length;\n    const subQueries = queries.map((query, index) => {\n      const target = activeTargets[index];\n      let observable: Observable<any> = null;\n\n      if (query.instant) {\n        observable = from(this.performInstantQuery(query, end));\n      } else {\n        observable = from(this.performTimeSeriesQuery(query, query.start, query.end));\n      }\n\n      return observable.pipe(\n        // Decrease the counter here. We assume that each request returns only single value and then completes\n        // (should hold until there is some streaming requests involved).\n        tap(() => runningQueriesCount--),\n        filter((response: any) => (response.cancelled ? false : true)),\n        map((response: any) => {\n          const data = this.processResult(response, query, target, queries.length);\n          return {\n            data,\n            key: query.requestId,\n            state: runningQueriesCount === 0 ? LoadingState.Done : LoadingState.Loading,\n          } as DataQueryResponse;\n        })\n      );\n    });\n\n    return merge(...subQueries);\n  }\n\n  private panelsQuery(queries: PromQueryRequest[], activeTargets: PromQuery[], end: number, requestId: string) {\n    const observables: Array<Observable<Array<TableModel | TimeSeries>>> = queries.map((query, index) => {\n      const target = activeTargets[index];\n      let observable: Observable<any> = null;\n\n      if (query.instant) {\n        observable = from(this.performInstantQuery(query, end));\n      } else {\n        observable = from(this.performTimeSeriesQuery(query, query.start, query.end));\n      }\n\n      return observable.pipe(\n        filter((response: any) => (response.cancelled ? false : true)),\n        map((response: any) => {\n          const data = this.processResult(response, query, target, queries.length);\n          return data;\n        })\n      );\n    });\n\n    return forkJoin(observables).pipe(\n      map((results: Array<Array<TableModel | TimeSeries>>) => {\n        const data = results.reduce((result, current) => {\n          return [...result, ...current];\n        }, []);\n        return {\n          data,\n          key: requestId,\n          state: LoadingState.Done,\n        };\n      })\n    );\n  }\n\n  createQuery(target: PromQuery, options: DataQueryRequest<PromQuery>, start: number, end: number) {\n    const query: PromQueryRequest = {\n      hinting: target.hinting,\n      instant: target.instant,\n      step: 0,\n      expr: '',\n      requestId: target.requestId,\n      refId: target.refId,\n      start: 0,\n      end: 0,\n    };\n    const range = Math.ceil(end - start);\n\n    // options.interval is the dynamically calculated interval\n    let interval = kbn.interval_to_seconds(options.interval);\n    // Minimum interval (\"Min step\"), if specified for the query or datasource. or same as interval otherwise\n    const minInterval = kbn.interval_to_seconds(\n      templateSrv.replace(target.interval, options.scopedVars) || options.interval\n    );\n    const intervalFactor = target.intervalFactor || 1;\n    // Adjust the interval to take into account any specified minimum and interval factor plus Prometheus limits\n    const adjustedInterval = this.adjustInterval(interval, minInterval, range, intervalFactor);\n    let scopedVars = { ...options.scopedVars, ...this.getRangeScopedVars(options.range) };\n    // If the interval was adjusted, make a shallow copy of scopedVars with updated interval vars\n    if (interval !== adjustedInterval) {\n      interval = adjustedInterval;\n      scopedVars = Object.assign({}, options.scopedVars, {\n        __interval: { text: interval + 's', value: interval + 's' },\n        __interval_ms: { text: interval * 1000, value: interval * 1000 },\n        ...this.getRangeScopedVars(options.range),\n      });\n    }\n    query.step = interval;\n\n    let expr = target.expr;\n\n    // Apply adhoc filters\n    const adhocFilters = templateSrv.getAdhocFilters(this.name);\n    expr = adhocFilters.reduce((acc: string, filter: { key?: any; operator?: any; value?: any }) => {\n      const { key, operator } = filter;\n      let { value } = filter;\n      if (operator === '=~' || operator === '!~') {\n        value = prometheusRegularEscape(value);\n      }\n      return addLabelToQuery(acc, key, value, operator);\n    }, expr);\n\n    // Only replace vars in expression after having (possibly) updated interval vars\n    query.expr = templateSrv.replace(expr, scopedVars, this.interpolateQueryExpr);\n\n    // Align query interval with step to allow query caching and to ensure\n    // that about-same-time query results look the same.\n    const adjusted = alignRange(\n      start,\n      end,\n      query.step,\n      getTimeSrv()\n        .timeRange()\n        .to.utcOffset() * 60\n    );\n    query.start = adjusted.start;\n    query.end = adjusted.end;\n    this._addTracingHeaders(query, options);\n\n    return query;\n  }\n\n  adjustInterval(interval: number, minInterval: number, range: number, intervalFactor: number) {\n    // Prometheus will drop queries that might return more than 11000 data points.\n    // Calculate a safe interval as an additional minimum to take into account.\n    const safeInterval = Math.ceil(range / 11000);\n    return Math.max(interval * intervalFactor, minInterval, safeInterval, 1);\n  }\n\n  performTimeSeriesQuery(query: PromQueryRequest, start: number, end: number) {\n    if (start > end) {\n      throw { message: 'Invalid time range' };\n    }\n\n    const url = '/api/v1/query_range';\n    const data: any = {\n      query: query.expr,\n      start,\n      end,\n      step: query.step,\n    };\n\n    if (this.queryTimeout) {\n      data['timeout'] = this.queryTimeout;\n    }\n\n    for (const [key, value] of this.customQueryParameters) {\n      if (data[key] == null) {\n        data[key] = value;\n      }\n    }\n\n    return this._request(url, data, { requestId: query.requestId, headers: query.headers }).catch((err: any) => {\n      if (err.cancelled) {\n        return err;\n      }\n\n      throw this.handleErrors(err, query);\n    });\n  }\n\n  performInstantQuery(query: PromQueryRequest, time: number) {\n    const url = '/api/v1/query';\n    const data: any = {\n      query: query.expr,\n      time,\n    };\n\n    if (this.queryTimeout) {\n      data['timeout'] = this.queryTimeout;\n    }\n\n    for (const [key, value] of this.customQueryParameters) {\n      if (data[key] == null) {\n        data[key] = value;\n      }\n    }\n\n    return this._request(url, data, { requestId: query.requestId, headers: query.headers }).catch((err: any) => {\n      if (err.cancelled) {\n        return err;\n      }\n\n      throw this.handleErrors(err, query);\n    });\n  }\n\n  handleErrors = (err: any, target: PromQuery) => {\n    const error: DataQueryError = {\n      message: (err && err.statusText) || 'Unknown error during query transaction. Please check JS console logs.',\n      refId: target.refId,\n    };\n\n    if (err.data) {\n      if (typeof err.data === 'string') {\n        error.message = err.data;\n      } else if (err.data.error) {\n        error.message = safeStringifyValue(err.data.error);\n      }\n    } else if (err.message) {\n      error.message = err.message;\n    } else if (typeof err === 'string') {\n      error.message = err;\n    }\n\n    error.status = err.status;\n    error.statusText = err.statusText;\n\n    return error;\n  };\n\n  async performSuggestQuery(query: string, cache = false) {\n    if (cache && this.metricsNameCache?.expire > Date.now()) {\n      return this.metricsNameCache.data.filter((metricName: any) => metricName.indexOf(query) !== 1);\n    }\n\n    const response: PromLabelQueryResponse = await this.metadataRequest('/api/v1/label/__name__/values');\n    this.metricsNameCache = {\n      data: response.data.data,\n      expire: Date.now() + 60 * 1000,\n    };\n\n    return response.data.data.filter(metricName => metricName.indexOf(query) !== 1);\n  }\n\n  metricFindQuery(query: string) {\n    if (!query) {\n      return Promise.resolve([]);\n    }\n\n    const scopedVars = {\n      __interval: { text: this.interval, value: this.interval },\n      __interval_ms: { text: kbn.interval_to_ms(this.interval), value: kbn.interval_to_ms(this.interval) },\n      ...this.getRangeScopedVars(getTimeSrv().timeRange()),\n    };\n    const interpolated = templateSrv.replace(query, scopedVars, this.interpolateQueryExpr);\n    const metricFindQuery = new PrometheusMetricFindQuery(this, interpolated);\n    return metricFindQuery.process();\n  }\n\n  getRangeScopedVars(range: TimeRange = getTimeSrv().timeRange()) {\n    const msRange = range.to.diff(range.from);\n    const sRange = Math.round(msRange / 1000);\n    const regularRange = kbn.secondsToHms(msRange / 1000);\n    return {\n      __range_ms: { text: msRange, value: msRange },\n      __range_s: { text: sRange, value: sRange },\n      __range: { text: regularRange, value: regularRange },\n    };\n  }\n\n  createAnnotationQueryOptions = (options: any): DataQueryRequest<PromQuery> => {\n    const annotation = options.annotation;\n    const interval =\n      annotation && annotation.step && typeof annotation.step === 'string'\n        ? annotation.step\n        : ANNOTATION_QUERY_STEP_DEFAULT;\n    return {\n      ...options,\n      interval,\n    };\n  };\n\n  async annotationQuery(options: any) {\n    const annotation = options.annotation;\n    const { expr = '', tagKeys = '', titleFormat = '', textFormat = '' } = annotation;\n\n    if (!expr) {\n      return Promise.resolve([]);\n    }\n\n    const start = this.getPrometheusTime(options.range.from, false);\n    const end = this.getPrometheusTime(options.range.to, true);\n    const queryOptions = this.createAnnotationQueryOptions(options);\n\n    // Unsetting min interval for accurate event resolution\n    const minStep = '1s';\n    const queryModel = {\n      expr,\n      interval: minStep,\n      refId: 'X',\n      requestId: `prom-query-${annotation.name}`,\n    };\n\n    const query = this.createQuery(queryModel, queryOptions, start, end);\n\n    const self = this;\n    const response: PromDataQueryResponse = await this.performTimeSeriesQuery(query, query.start, query.end);\n    const eventList: AnnotationEvent[] = [];\n    const splitKeys = tagKeys.split(',');\n\n    if (response.cancelled) {\n      return [];\n    }\n\n    response?.data?.data?.result?.forEach(series => {\n      const tags = Object.entries(series.metric)\n        .filter(([k]) => splitKeys.includes(k))\n        .map(([_k, v]: [string, string]) => v);\n\n      const dupCheck: Record<number, boolean> = {};\n      for (const value of series.values) {\n        const valueIsTrue = value[1] === '1'; // e.g. ALERTS\n        if (valueIsTrue || annotation.useValueForTime) {\n          const event: AnnotationEvent = {\n            annotation,\n            title: self.resultTransformer.renderTemplate(titleFormat, series.metric),\n            tags,\n            text: self.resultTransformer.renderTemplate(textFormat, series.metric),\n          };\n\n          if (annotation.useValueForTime) {\n            const timestampValue = Math.floor(parseFloat(value[1]));\n            if (dupCheck[timestampValue]) {\n              continue;\n            }\n            dupCheck[timestampValue] = true;\n            event.time = timestampValue;\n          } else {\n            event.time = Math.floor(parseFloat(value[0])) * 1000;\n          }\n\n          eventList.push(event);\n        }\n      }\n    });\n\n    return eventList;\n  }\n\n  async getTagKeys() {\n    const result = await this.metadataRequest('/api/v1/labels');\n    return result?.data?.data?.map((value: any) => ({ text: value })) ?? [];\n  }\n\n  async getTagValues(options: any = {}) {\n    const result = await this.metadataRequest(`/api/v1/label/${options.key}/values`);\n    return result?.data?.data?.map((value: any) => ({ text: value })) ?? [];\n  }\n\n  async testDatasource() {\n    const now = new Date().getTime();\n    const query = { expr: '1+1' } as PromQueryRequest;\n    const response = await this.performInstantQuery(query, now / 1000);\n    return response.data.status === 'success'\n      ? { status: 'success', message: 'Data source is working' }\n      : { status: 'error', message: response.error };\n  }\n\n  interpolateVariablesInQueries(queries: PromQuery[], scopedVars: ScopedVars): PromQuery[] {\n    let expandedQueries = queries;\n    if (queries && queries.length) {\n      expandedQueries = queries.map(query => {\n        const expandedQuery = {\n          ...query,\n          datasource: this.name,\n          expr: templateSrv.replace(query.expr, scopedVars, this.interpolateQueryExpr),\n        };\n        return expandedQuery;\n      });\n    }\n    return expandedQueries;\n  }\n\n  getQueryHints(query: PromQuery, result: any[]) {\n    return getQueryHints(query.expr ?? '', result, this);\n  }\n\n  async loadRules() {\n    try {\n      const res = await this.metadataRequest('/api/v1/rules');\n      const body = res.data || res.json();\n\n      const groups = body?.data?.groups;\n      if (groups) {\n        this.ruleMappings = extractRuleMappingFromGroups(groups);\n      }\n    } catch (e) {\n      console.log('Rules API is experimental. Ignore next error.');\n      console.error(e);\n    }\n  }\n\n  modifyQuery(query: PromQuery, action: any): PromQuery {\n    let expression = query.expr ?? '';\n    switch (action.type) {\n      case 'ADD_FILTER': {\n        expression = addLabelToQuery(expression, action.key, action.value);\n        break;\n      }\n      case 'ADD_HISTOGRAM_QUANTILE': {\n        expression = `histogram_quantile(0.95, sum(rate(${expression}[5m])) by (le))`;\n        break;\n      }\n      case 'ADD_RATE': {\n        expression = `rate(${expression}[5m])`;\n        break;\n      }\n      case 'ADD_SUM': {\n        expression = `sum(${expression.trim()}) by ($1)`;\n        break;\n      }\n      case 'EXPAND_RULES': {\n        if (action.mapping) {\n          expression = expandRecordingRules(expression, action.mapping);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n    return { ...query, expr: expression };\n  }\n\n  getPrometheusTime(date: string | DateTime, roundUp: boolean) {\n    if (typeof date === 'string') {\n      date = dateMath.parse(date, roundUp);\n    }\n\n    return Math.ceil(date.valueOf() / 1000);\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = getTimeSrv().timeRange();\n    return {\n      start: this.getPrometheusTime(range.from, false),\n      end: this.getPrometheusTime(range.to, true),\n    };\n  }\n\n  getOriginalMetricName(labelData: { [key: string]: string }) {\n    return this.resultTransformer.getOriginalMetricName(labelData);\n  }\n}\n\n/**\n * Align query range to step.\n * Rounds start and end down to a multiple of step.\n * @param start Timestamp marking the beginning of the range.\n * @param end Timestamp marking the end of the range.\n * @param step Interval to align start and end with.\n * @param utcOffsetSec Number of seconds current timezone is offset from UTC\n */\nexport function alignRange(\n  start: number,\n  end: number,\n  step: number,\n  utcOffsetSec: number\n): { end: number; start: number } {\n  const alignedEnd = Math.floor((end + utcOffsetSec) / step) * step - utcOffsetSec;\n  const alignedStart = Math.floor((start + utcOffsetSec) / step) * step - utcOffsetSec;\n  return {\n    end: alignedEnd,\n    start: alignedStart,\n  };\n}\n\nexport function extractRuleMappingFromGroups(groups: any[]) {\n  return groups.reduce(\n    (mapping, group) =>\n      group.rules\n        .filter((rule: any) => rule.type === 'recording')\n        .reduce(\n          (acc: { [key: string]: string }, rule: any) => ({\n            ...acc,\n            [rule.name]: rule.query,\n          }),\n          mapping\n        ),\n    {}\n  );\n}\n\nexport function prometheusRegularEscape(value: any) {\n  return typeof value === 'string' ? value.replace(/'/g, \"\\\\\\\\'\") : value;\n}\n\nexport function prometheusSpecialRegexEscape(value: any) {\n  return typeof value === 'string'\n    ? prometheusRegularEscape(value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]+?.()|]/g, '\\\\\\\\$&'))\n    : value;\n}\n","import _ from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport { Plugin } from 'slate';\nimport {\n  ButtonCascader,\n  CascaderOption,\n  SlatePrism,\n  TypeaheadInput,\n  TypeaheadOutput,\n  QueryField,\n  BracesPlugin,\n} from '@grafana/ui';\n\nimport Prism from 'prismjs';\n\n// dom also includes Element polyfills\nimport { PromQuery, PromOptions, PromMetricsMetadata } from '../types';\nimport { CancelablePromise, makePromiseCancelable } from 'app/core/utils/CancelablePromise';\nimport { ExploreQueryFieldProps, QueryHint, isDataFrame, toLegacyResponseData, HistoryItem } from '@grafana/data';\nimport { DOMUtil, SuggestionsState } from '@grafana/ui';\nimport { PrometheusDatasource } from '../datasource';\nimport PromQlLanguageProvider from '../language_provider';\n\nconst HISTOGRAM_GROUP = '__histograms__';\nconst PRISM_SYNTAX = 'promql';\nexport const RECORDING_RULES_GROUP = '__recording_rules__';\n\nfunction getChooserText(hasSyntax: boolean, metrics: string[]) {\n  if (!hasSyntax) {\n    return 'Loading metrics...';\n  }\n  if (metrics && metrics.length === 0) {\n    return '(No metrics found)';\n  }\n  return 'Metrics';\n}\n\nfunction addMetricsMetadata(metric: string, metadata?: PromMetricsMetadata): CascaderOption {\n  const option: CascaderOption = { label: metric, value: metric };\n  if (metadata && metadata[metric]) {\n    const { type = '', help } = metadata[metric][0];\n    option.title = [metric, type.toUpperCase(), help].join('\\n');\n  }\n  return option;\n}\n\nexport function groupMetricsByPrefix(metrics: string[], metadata?: PromMetricsMetadata): CascaderOption[] {\n  // Filter out recording rules and insert as first option\n  const ruleRegex = /:\\w+:/;\n  const ruleNames = metrics.filter(metric => ruleRegex.test(metric));\n  const rulesOption = {\n    label: 'Recording rules',\n    value: RECORDING_RULES_GROUP,\n    children: ruleNames\n      .slice()\n      .sort()\n      .map(name => ({ label: name, value: name })),\n  };\n\n  const options = ruleNames.length > 0 ? [rulesOption] : [];\n\n  const delimiter = '_';\n  const metricsOptions = _.chain(metrics)\n    .filter((metric: string) => !ruleRegex.test(metric))\n    .groupBy((metric: string) => metric.split(delimiter)[0])\n    .map(\n      (metricsForPrefix: string[], prefix: string): CascaderOption => {\n        const prefixIsMetric = metricsForPrefix.length === 1 && metricsForPrefix[0] === prefix;\n        const children = prefixIsMetric ? [] : metricsForPrefix.sort().map(m => addMetricsMetadata(m, metadata));\n        return {\n          children,\n          label: prefix,\n          value: prefix,\n        };\n      }\n    )\n    .sortBy('label')\n    .value();\n\n  return [...options, ...metricsOptions];\n}\n\nexport function willApplySuggestion(suggestion: string, { typeaheadContext, typeaheadText }: SuggestionsState): string {\n  // Modify suggestion based on context\n  switch (typeaheadContext) {\n    case 'context-labels': {\n      const nextChar = DOMUtil.getNextCharacter();\n      if (!nextChar || nextChar === '}' || nextChar === ',') {\n        suggestion += '=';\n      }\n      break;\n    }\n\n    case 'context-label-values': {\n      // Always add quotes and remove existing ones instead\n      if (!typeaheadText.match(/^(!?=~?\"|\")/)) {\n        suggestion = `\"${suggestion}`;\n      }\n      if (DOMUtil.getNextCharacter() !== '\"') {\n        suggestion = `${suggestion}\"`;\n      }\n      break;\n    }\n\n    default:\n  }\n  return suggestion;\n}\n\ninterface PromQueryFieldProps extends ExploreQueryFieldProps<PrometheusDatasource, PromQuery, PromOptions> {\n  history: Array<HistoryItem<PromQuery>>;\n  ExtraFieldElement?: ReactNode;\n}\n\ninterface PromQueryFieldState {\n  metricsOptions: any[];\n  syntaxLoaded: boolean;\n  hint: QueryHint | null;\n}\n\nclass PromQueryField extends React.PureComponent<PromQueryFieldProps, PromQueryFieldState> {\n  plugins: Plugin[];\n  languageProvider: PromQlLanguageProvider;\n  languageProviderInitializationPromise: CancelablePromise<any>;\n\n  constructor(props: PromQueryFieldProps, context: React.Context<any>) {\n    super(props, context);\n\n    if (props.datasource.languageProvider) {\n      this.languageProvider = props.datasource.languageProvider;\n    }\n\n    this.plugins = [\n      BracesPlugin(),\n      SlatePrism({\n        onlyIn: (node: any) => node.type === 'code_block',\n        getSyntax: (node: any) => 'promql',\n      }),\n    ];\n\n    this.state = {\n      metricsOptions: [],\n      syntaxLoaded: false,\n      hint: null,\n    };\n  }\n\n  componentDidMount() {\n    if (this.languageProvider) {\n      Prism.languages[PRISM_SYNTAX] = this.languageProvider.syntax;\n      this.refreshMetrics(makePromiseCancelable(this.languageProvider.start()));\n    }\n    this.refreshHint();\n  }\n\n  componentWillUnmount() {\n    if (this.languageProviderInitializationPromise) {\n      this.languageProviderInitializationPromise.cancel();\n    }\n  }\n\n  componentDidUpdate(prevProps: PromQueryFieldProps) {\n    const { data } = this.props;\n\n    if (data && prevProps.data && prevProps.data.series !== data.series) {\n      this.refreshHint();\n    }\n  }\n\n  refreshHint = () => {\n    const { datasource, query, data } = this.props;\n\n    if (!data || data.series.length === 0) {\n      this.setState({ hint: null });\n      return;\n    }\n\n    const result = isDataFrame(data.series[0]) ? data.series.map(toLegacyResponseData) : data.series;\n    const hints = datasource.getQueryHints(query, result);\n    const hint = hints && hints.length > 0 ? hints[0] : null;\n    this.setState({ hint });\n  };\n\n  refreshMetrics = (cancelablePromise: CancelablePromise<any>) => {\n    this.languageProviderInitializationPromise = cancelablePromise;\n    this.languageProviderInitializationPromise.promise\n      .then(remaining => {\n        remaining.map((task: Promise<any>) => task.then(this.onUpdateLanguage).catch(() => {}));\n      })\n      .then(() => this.onUpdateLanguage())\n      .catch(({ isCanceled }) => {\n        if (isCanceled) {\n          console.warn('PromQueryField has unmounted, language provider intialization was canceled');\n        }\n      });\n  };\n\n  onChangeMetrics = (values: string[], selectedOptions: CascaderOption[]) => {\n    let query;\n    if (selectedOptions.length === 1) {\n      if (selectedOptions[0].children.length === 0) {\n        query = selectedOptions[0].value;\n      } else {\n        // Ignore click on group\n        return;\n      }\n    } else {\n      const prefix = selectedOptions[0].value;\n      const metric = selectedOptions[1].value;\n      if (prefix === HISTOGRAM_GROUP) {\n        query = `histogram_quantile(0.95, sum(rate(${metric}[5m])) by (le))`;\n      } else {\n        query = metric;\n      }\n    }\n    this.onChangeQuery(query, true);\n  };\n\n  onChangeQuery = (value: string, override?: boolean) => {\n    // Send text change to parent\n    const { query, onChange, onRunQuery } = this.props;\n    if (onChange) {\n      const nextQuery: PromQuery = { ...query, expr: value };\n      onChange(nextQuery);\n\n      if (override && onRunQuery) {\n        onRunQuery();\n      }\n    }\n  };\n\n  onClickHintFix = () => {\n    const { datasource, query, onChange, onRunQuery } = this.props;\n    const { hint } = this.state;\n\n    onChange(datasource.modifyQuery(query, hint.fix.action));\n    onRunQuery();\n  };\n\n  onUpdateLanguage = () => {\n    const {\n      histogramMetrics,\n      metrics,\n      metricsMetadata,\n      lookupsDisabled,\n      lookupMetricsThreshold,\n    } = this.languageProvider;\n    if (!metrics) {\n      return;\n    }\n\n    // Build metrics tree\n    const metricsByPrefix = groupMetricsByPrefix(metrics, metricsMetadata);\n    const histogramOptions = histogramMetrics.map((hm: any) => ({ label: hm, value: hm }));\n    const metricsOptions =\n      histogramMetrics.length > 0\n        ? [\n            { label: 'Histograms', value: HISTOGRAM_GROUP, children: histogramOptions, isLeaf: false },\n            ...metricsByPrefix,\n          ]\n        : metricsByPrefix;\n\n    // Hint for big disabled lookups\n    let hint: QueryHint;\n    if (lookupsDisabled) {\n      hint = {\n        label: `Dynamic label lookup is disabled for datasources with more than ${lookupMetricsThreshold} metrics.`,\n        type: 'INFO',\n      };\n    }\n\n    this.setState({ hint, metricsOptions, syntaxLoaded: true });\n  };\n\n  onTypeahead = async (typeahead: TypeaheadInput): Promise<TypeaheadOutput> => {\n    if (!this.languageProvider) {\n      return { suggestions: [] };\n    }\n\n    const { history } = this.props;\n    const { prefix, text, value, wrapperClasses, labelKey } = typeahead;\n\n    const result = await this.languageProvider.provideCompletionItems(\n      { text, value, prefix, wrapperClasses, labelKey },\n      { history }\n    );\n\n    // console.log('handleTypeahead', wrapperClasses, text, prefix, labelKey, result.context);\n\n    return result;\n  };\n\n  render() {\n    const { data, query, ExtraFieldElement } = this.props;\n    const { metricsOptions, syntaxLoaded, hint } = this.state;\n    const cleanText = this.languageProvider ? this.languageProvider.cleanText : undefined;\n    const chooserText = getChooserText(syntaxLoaded, metricsOptions);\n    const buttonDisabled = !(syntaxLoaded && metricsOptions && metricsOptions.length > 0);\n    const showError = data && data.error && data.error.refId === query.refId;\n\n    return (\n      <>\n        <div className=\"gf-form-inline gf-form-inline--nowrap flex-grow-1\">\n          <div className=\"gf-form flex-shrink-0\">\n            <ButtonCascader options={metricsOptions} disabled={buttonDisabled} onChange={this.onChangeMetrics}>\n              {chooserText}\n            </ButtonCascader>\n          </div>\n          <div className=\"gf-form gf-form--grow flex-shrink-1\">\n            <QueryField\n              additionalPlugins={this.plugins}\n              cleanText={cleanText}\n              query={query.expr}\n              onTypeahead={this.onTypeahead}\n              onWillApplySuggestion={willApplySuggestion}\n              onBlur={this.props.onBlur}\n              onChange={this.onChangeQuery}\n              onRunQuery={this.props.onRunQuery}\n              placeholder=\"Enter a PromQL query\"\n              portalOrigin=\"prometheus\"\n              syntaxLoaded={syntaxLoaded}\n            />\n          </div>\n          {ExtraFieldElement}\n        </div>\n        {showError ? (\n          <div className=\"query-row-break\">\n            <div className=\"prom-query-field-info text-error\">{data.error.message}</div>\n          </div>\n        ) : null}\n        {hint ? (\n          <div className=\"query-row-break\">\n            <div className=\"prom-query-field-info text-warning\">\n              {hint.label}{' '}\n              {hint.fix ? (\n                <a className=\"text-link muted\" onClick={this.onClickHintFix}>\n                  {hint.fix.label}\n                </a>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default PromQueryField;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\n\nimport { PrometheusDatasource } from '../datasource';\nimport { PromQuery } from '../types';\nimport { DataQueryRequest, PanelData } from '@grafana/data';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\n\ninterface Props {\n  datasource: PrometheusDatasource;\n  query: PromQuery;\n  panelData: PanelData;\n}\n\ninterface State {\n  href: string;\n}\n\nexport default class PromLink extends Component<Props, State> {\n  state: State = { href: null };\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.panelData !== this.props.panelData && this.props.panelData.request) {\n      const href = await this.getExternalLink();\n      this.setState({ href });\n    }\n  }\n\n  async getExternalLink(): Promise<string> {\n    const { query, panelData } = this.props;\n    const target = panelData.request.targets.length > 0 ? panelData.request.targets[0] : ({ datasource: null } as any);\n    const datasourceName = target.datasource;\n    const datasource: PrometheusDatasource = datasourceName\n      ? (((await getDatasourceSrv().get(datasourceName)) as any) as PrometheusDatasource)\n      : (this.props.datasource as PrometheusDatasource);\n\n    const range = panelData.request.range;\n    const start = datasource.getPrometheusTime(range.from, false);\n    const end = datasource.getPrometheusTime(range.to, true);\n    const rangeDiff = Math.ceil(end - start);\n    const endTime = range.to.utc().format('YYYY-MM-DD HH:mm');\n\n    const options = {\n      interval: panelData.request.interval,\n    } as DataQueryRequest<PromQuery>;\n    const queryOptions = datasource.createQuery(query, options, start, end);\n    const expr = {\n      'g0.expr': queryOptions.expr,\n      'g0.range_input': rangeDiff + 's',\n      'g0.end_input': endTime,\n      'g0.step_input': queryOptions.step,\n      'g0.tab': 0,\n    };\n\n    const args = _.map(expr, (v: string, k: string) => {\n      return k + '=' + encodeURIComponent(v);\n    }).join('&');\n    return `${datasource.directUrl}/graph?${args}`;\n  }\n\n  render() {\n    const { href } = this.state;\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener\">\n        <i className=\"fa fa-share-square-o\" /> Prometheus\n      </a>\n    );\n  }\n}\n","import _ from 'lodash';\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { FormLabel, Select, Switch } from '@grafana/ui';\nimport { SelectableValue, QueryEditorProps } from '@grafana/data';\n\nimport { PrometheusDatasource } from '../datasource';\nimport { PromQuery, PromOptions } from '../types';\n\nimport PromQueryField from './PromQueryField';\nimport PromLink from './PromLink';\nexport type Props = QueryEditorProps<PrometheusDatasource, PromQuery, PromOptions>;\n\nconst FORMAT_OPTIONS: Array<SelectableValue<string>> = [\n  { label: 'Time series', value: 'time_series' },\n  { label: 'Table', value: 'table' },\n  { label: 'Heatmap', value: 'heatmap' },\n];\n\nconst INTERVAL_FACTOR_OPTIONS: Array<SelectableValue<number>> = _.map([1, 2, 3, 4, 5, 10], (value: number) => ({\n  value,\n  label: '1/' + value,\n}));\n\ninterface State {\n  legendFormat: string;\n  formatOption: SelectableValue<string>;\n  interval: string;\n  intervalFactorOption: SelectableValue<number>;\n  instant: boolean;\n}\n\nexport class PromQueryEditor extends PureComponent<Props, State> {\n  // Query target to be modified and used for queries\n  query: PromQuery;\n\n  constructor(props: Props) {\n    super(props);\n    const { query } = props;\n    this.query = query;\n    // Query target properties that are fully controlled inputs\n    this.state = {\n      // Fully controlled text inputs\n      interval: query.interval,\n      legendFormat: query.legendFormat,\n      // Select options\n      formatOption: FORMAT_OPTIONS.find(option => option.value === query.format) || FORMAT_OPTIONS[0],\n      intervalFactorOption:\n        INTERVAL_FACTOR_OPTIONS.find(option => option.value === query.intervalFactor) || INTERVAL_FACTOR_OPTIONS[0],\n      // Switch options\n      instant: Boolean(query.instant),\n    };\n  }\n\n  onFieldChange = (query: PromQuery, override?: any) => {\n    this.query.expr = query.expr;\n  };\n\n  onFormatChange = (option: SelectableValue<string>) => {\n    this.query.format = option.value;\n    this.setState({ formatOption: option }, this.onRunQuery);\n  };\n\n  onInstantChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const instant = e.target.checked;\n    this.query.instant = instant;\n    this.setState({ instant }, this.onRunQuery);\n  };\n\n  onIntervalChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const interval = e.currentTarget.value;\n    this.query.interval = interval;\n    this.setState({ interval });\n  };\n\n  onIntervalFactorChange = (option: SelectableValue<number>) => {\n    this.query.intervalFactor = option.value;\n    this.setState({ intervalFactorOption: option }, this.onRunQuery);\n  };\n\n  onLegendChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const legendFormat = e.currentTarget.value;\n    this.query.legendFormat = legendFormat;\n    this.setState({ legendFormat });\n  };\n\n  onRunQuery = () => {\n    const { query } = this;\n    this.props.onChange(query);\n    this.props.onRunQuery();\n  };\n\n  render() {\n    const { datasource, query, data } = this.props;\n    const { formatOption, instant, interval, intervalFactorOption, legendFormat } = this.state;\n\n    return (\n      <div>\n        <PromQueryField\n          datasource={datasource}\n          query={query}\n          onRunQuery={this.onRunQuery}\n          onChange={this.onFieldChange}\n          history={[]}\n          data={data}\n        />\n\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <FormLabel\n              width={7}\n              tooltip=\"Controls the name of the time series, using name or pattern. For example\n        {{hostname}} will be replaced with label value for the label hostname.\"\n            >\n              Legend\n            </FormLabel>\n            <input\n              type=\"text\"\n              className=\"gf-form-input\"\n              placeholder=\"legend format\"\n              value={legendFormat}\n              onChange={this.onLegendChange}\n              onBlur={this.onRunQuery}\n            />\n          </div>\n\n          <div className=\"gf-form\">\n            <FormLabel\n              width={7}\n              tooltip={\n                <>\n                  An additional lower limit for the step parameter of the Prometheus query and for the{' '}\n                  <code>$__interval</code> variable. The limit is absolute and not modified by the \"Resolution\" setting.\n                </>\n              }\n            >\n              Min step\n            </FormLabel>\n            <input\n              type=\"text\"\n              className=\"gf-form-input width-8\"\n              placeholder={interval}\n              onChange={this.onIntervalChange}\n              onBlur={this.onRunQuery}\n              value={interval}\n            />\n          </div>\n\n          <div className=\"gf-form\">\n            <div className=\"gf-form-label\">Resolution</div>\n            <Select\n              isSearchable={false}\n              options={INTERVAL_FACTOR_OPTIONS}\n              onChange={this.onIntervalFactorChange}\n              value={intervalFactorOption}\n            />\n          </div>\n\n          <div className=\"gf-form\">\n            <div className=\"gf-form-label\">Format</div>\n            <Select isSearchable={false} options={FORMAT_OPTIONS} onChange={this.onFormatChange} value={formatOption} />\n            <Switch label=\"Instant\" checked={instant} onChange={this.onInstantChange} />\n\n            <FormLabel width={10} tooltip=\"Link to Graph in Prometheus\">\n              <PromLink\n                datasource={datasource}\n                query={this.query} // Use modified query\n                panelData={data}\n              />\n            </FormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { ExploreStartPageProps, DataQuery } from '@grafana/data';\n\nconst CHEAT_SHEET_ITEMS = [\n  {\n    title: 'Request Rate',\n    expression: 'rate(http_request_total[5m])',\n    label:\n      'Given an HTTP request counter, this query calculates the per-second average request rate over the last 5 minutes.',\n  },\n  {\n    title: '95th Percentile of Request Latencies',\n    expression: 'histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le))',\n    label: 'Calculates the 95th percentile of HTTP request rate over 5 minute windows.',\n  },\n  {\n    title: 'Alerts Firing',\n    expression: 'sort_desc(sum(sum_over_time(ALERTS{alertstate=\"firing\"}[24h])) by (alertname))',\n    label: 'Sums up the alerts that have been firing over the last 24 hours.',\n  },\n  {\n    title: 'Step',\n    label:\n      'Defines the graph resolution using a duration format (15s, 1m, 3h, ...). Small steps create high-resolution graphs but can be slow over larger time ranges. Using a longer step lowers the resolution and smooths the graph by producing fewer datapoints. If no step is given the resolution is calculated automatically.',\n  },\n];\n\nexport default (props: ExploreStartPageProps) => (\n  <div>\n    <h2>PromQL Cheat Sheet</h2>\n    {CHEAT_SHEET_ITEMS.map((item, index) => (\n      <div className=\"cheat-sheet-item\" key={index}>\n        <div className=\"cheat-sheet-item__title\">{item.title}</div>\n        {item.expression ? (\n          <div\n            className=\"cheat-sheet-item__example\"\n            onClick={e => props.onClickExample({ refId: 'A', expr: item.expression } as DataQuery)}\n          >\n            <code>{item.expression}</code>\n          </div>\n        ) : null}\n        <div className=\"cheat-sheet-item__label\">{item.label}</div>\n      </div>\n    ))}\n  </div>\n);\n","// Libraries\nimport React, { memo } from 'react';\n\n// Types\nimport { FormLabel } from '@grafana/ui';\n\nexport interface PromExploreExtraFieldProps {\n  label: string;\n  onChangeFunc: (e: React.SyntheticEvent<HTMLInputElement>) => void;\n  onKeyDownFunc: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  value: string;\n  hasTooltip?: boolean;\n  tooltipContent?: string;\n}\n\nexport function PromExploreExtraField(props: PromExploreExtraFieldProps) {\n  const { label, onChangeFunc, onKeyDownFunc, value, hasTooltip, tooltipContent } = props;\n\n  return (\n    <div className=\"gf-form-inline explore-input--ml\">\n      <div className=\"gf-form\">\n        <FormLabel width={5} tooltip={hasTooltip ? tooltipContent : null}>\n          {label}\n        </FormLabel>\n        <input\n          type={'text'}\n          className=\"gf-form-input width-4\"\n          placeholder={'auto'}\n          onChange={onChangeFunc}\n          onKeyDown={onKeyDownFunc}\n          value={value}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(PromExploreExtraField);\n","import React, { memo } from 'react';\n\n// Types\nimport { ExploreQueryFieldProps } from '@grafana/data';\n\nimport { PrometheusDatasource } from '../datasource';\nimport { PromQuery, PromOptions } from '../types';\n\nimport PromQueryField from './PromQueryField';\nimport { PromExploreExtraField } from './PromExploreExtraField';\n\nexport type Props = ExploreQueryFieldProps<PrometheusDatasource, PromQuery, PromOptions>;\n\nexport function PromExploreQueryEditor(props: Props) {\n  const { query, data, datasource, history, onChange, onRunQuery } = props;\n\n  function onChangeQueryStep(value: string) {\n    const { query, onChange } = props;\n    const nextQuery = { ...query, interval: value };\n    onChange(nextQuery);\n  }\n\n  function onStepChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    if (e.currentTarget.value !== query.interval) {\n      onChangeQueryStep(e.currentTarget.value);\n    }\n  }\n\n  function onReturnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === 'Enter') {\n      onRunQuery();\n    }\n  }\n\n  return (\n    <PromQueryField\n      datasource={datasource}\n      query={query}\n      onRunQuery={onRunQuery}\n      onChange={onChange}\n      history={history}\n      data={data}\n      ExtraFieldElement={\n        <PromExploreExtraField\n          label={'Step'}\n          onChangeFunc={onStepChange}\n          onKeyDownFunc={onReturnKeyDown}\n          value={query.interval || ''}\n          hasTooltip={true}\n          tooltipContent={'Needs to be a valid time unit string, for example 5s, 1m, 3h, 1d, 1y'}\n        />\n      }\n    />\n  );\n}\n\nexport default memo(PromExploreQueryEditor);\n","import React, { SyntheticEvent } from 'react';\nimport { EventsWithValidation, FormField, FormLabel, Input, regexValidation, Select } from '@grafana/ui';\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { PromOptions } from '../types';\n\nconst httpOptions = [\n  { value: 'GET', label: 'GET' },\n  { value: 'POST', label: 'POST' },\n];\n\ntype Props = {\n  value: DataSourceSettings<PromOptions>;\n  onChange: (value: DataSourceSettings<PromOptions>) => void;\n};\n\nexport const PromSettings = (props: Props) => {\n  const { value, onChange } = props;\n\n  return (\n    <>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <FormField\n              label=\"Scrape interval\"\n              labelWidth={13}\n              placeholder=\"15s\"\n              inputEl={\n                <Input\n                  className=\"width-6\"\n                  value={value.jsonData.timeInterval}\n                  spellCheck={false}\n                  onChange={onChangeHandler('timeInterval', value, onChange)}\n                  validationEvents={promSettingsValidationEvents}\n                />\n              }\n              tooltip=\"Set this to the typical scrape and evaluation interval configured in Prometheus. Defaults to 15s.\"\n            />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <FormField\n              label=\"Query timeout\"\n              labelWidth={13}\n              inputEl={\n                <Input\n                  className=\"width-6\"\n                  value={value.jsonData.queryTimeout}\n                  onChange={onChangeHandler('queryTimeout', value, onChange)}\n                  spellCheck={false}\n                  placeholder=\"60s\"\n                  validationEvents={promSettingsValidationEvents}\n                />\n              }\n              tooltip=\"Set the Prometheus query timeout.\"\n            />\n          </div>\n        </div>\n        <div className=\"gf-form\">\n          <FormLabel\n            width={13}\n            tooltip=\"Specify the HTTP Method to query Prometheus. (POST is only available in Prometheus >= v2.1.0)\"\n          >\n            HTTP Method\n          </FormLabel>\n          <Select\n            options={httpOptions}\n            value={httpOptions.find(o => o.value === value.jsonData.httpMethod)}\n            onChange={onChangeHandler('httpMethod', value, onChange)}\n            width={7}\n          />\n        </div>\n      </div>\n      <h3 className=\"page-heading\">Misc</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form max-width-30\">\n            <FormField\n              label=\"Custom query parameters\"\n              labelWidth={14}\n              tooltip=\"Add Custom parameters to Prometheus or Thanos queries.\"\n              inputEl={\n                <Input\n                  className=\"width-25\"\n                  value={value.jsonData.customQueryParameters}\n                  onChange={onChangeHandler('customQueryParameters', value, onChange)}\n                  spellCheck={false}\n                  placeholder=\"Example: max_source_resolution=5m&timeout=10\"\n                />\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const promSettingsValidationEvents = {\n  [EventsWithValidation.onBlur]: [\n    regexValidation(\n      /^$|^\\d+(ms|[Mwdhmsy])$/,\n      'Value is not valid, you can use number with time unit specifier: y, M, w, d, h, m, s'\n    ),\n  ],\n};\n\nexport const getValueFromEventItem = (eventItem: SyntheticEvent<HTMLInputElement> | SelectableValue<string>) => {\n  if (!eventItem) {\n    return '';\n  }\n\n  if (eventItem.hasOwnProperty('currentTarget')) {\n    return eventItem.currentTarget.value;\n  }\n\n  return (eventItem as SelectableValue<string>).value;\n};\n\nconst onChangeHandler = (key: keyof PromOptions, value: Props['value'], onChange: Props['onChange']) => (\n  eventItem: SyntheticEvent<HTMLInputElement> | SelectableValue<string>\n) => {\n  onChange({\n    ...value,\n    jsonData: {\n      ...value.jsonData,\n      [key]: getValueFromEventItem(eventItem),\n    },\n  });\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { ANNOTATION_QUERY_STEP_DEFAULT, PrometheusDatasource } from './datasource';\n\nimport { PromQueryEditor } from './components/PromQueryEditor';\nimport PromCheatSheet from './components/PromCheatSheet';\nimport PromExploreQueryEditor from './components/PromExploreQueryEditor';\n\nimport { ConfigEditor } from './configuration/ConfigEditor';\n\nclass PrometheusAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n  stepDefaultValuePlaceholder = ANNOTATION_QUERY_STEP_DEFAULT;\n}\n\nexport const plugin = new DataSourcePlugin(PrometheusDatasource)\n  .setQueryEditor(PromQueryEditor)\n  .setConfigEditor(ConfigEditor)\n  .setExploreMetricsQueryField(PromExploreQueryEditor)\n  .setAnnotationQueryCtrl(PrometheusAnnotationsQueryCtrl)\n  .setExploreStartPage(PromCheatSheet);\n","import React from 'react';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { PromSettings } from './PromSettings';\nimport { PromOptions } from '../types';\n\nexport type Props = DataSourcePluginOptionsEditorProps<PromOptions>;\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:9090\"\n        dataSourceConfig={options}\n        showAccessOptions={true}\n        onChange={onOptionsChange}\n      />\n\n      <PromSettings value={options} onChange={onOptionsChange} />\n    </>\n  );\n};\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount /*, ...nodes */) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 2; i < arguments.length; i++) {\n    walker = insert(this, walker, arguments[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","export const RATE_RANGES = ['1m', '5m', '10m', '30m', '1h'];\n\nexport const processHistogramLabels = (labels: string[]) => {\n  const result = [];\n  const regexp = new RegExp('_bucket($|:)');\n  for (let index = 0; index < labels.length; index++) {\n    const label = labels[index];\n    const isHistogramValue = regexp.test(label);\n    if (isHistogramValue) {\n      if (result.indexOf(label) === -1) {\n        result.push(label);\n      }\n    }\n  }\n\n  return { values: { __name__: result } };\n};\n\nexport function processLabels(labels: Array<{ [key: string]: string }>, withName = false) {\n  const values: { [key: string]: string[] } = {};\n  labels.forEach(l => {\n    const { __name__, ...rest } = l;\n    if (withName) {\n      values['__name__'] = values['__name__'] || [];\n      if (!values['__name__'].includes(__name__)) {\n        values['__name__'].push(__name__);\n      }\n    }\n\n    Object.keys(rest).forEach(key => {\n      if (!values[key]) {\n        values[key] = [];\n      }\n      if (!values[key].includes(rest[key])) {\n        values[key].push(rest[key]);\n      }\n    });\n  });\n  return { values, keys: Object.keys(values) };\n}\n\n// const cleanSelectorRegexp = /\\{(\\w+=\"[^\"\\n]*?\")(,\\w+=\"[^\"\\n]*?\")*\\}/;\nexport const selectorRegexp = /\\{[^}]*?\\}/;\nexport const labelRegexp = /\\b(\\w+)(!?=~?)(\"[^\"\\n]*?\")/g;\nexport function parseSelector(query: string, cursorOffset = 1): { labelKeys: any[]; selector: string } {\n  if (!query.match(selectorRegexp)) {\n    // Special matcher for metrics\n    if (query.match(/^[A-Za-z:][\\w:]*$/)) {\n      return {\n        selector: `{__name__=\"${query}\"}`,\n        labelKeys: ['__name__'],\n      };\n    }\n    throw new Error('Query must contain a selector: ' + query);\n  }\n\n  // Check if inside a selector\n  const prefix = query.slice(0, cursorOffset);\n  const prefixOpen = prefix.lastIndexOf('{');\n  const prefixClose = prefix.lastIndexOf('}');\n  if (prefixOpen === -1) {\n    throw new Error('Not inside selector, missing open brace: ' + prefix);\n  }\n  if (prefixClose > -1 && prefixClose > prefixOpen) {\n    throw new Error('Not inside selector, previous selector already closed: ' + prefix);\n  }\n  const suffix = query.slice(cursorOffset);\n  const suffixCloseIndex = suffix.indexOf('}');\n  const suffixClose = suffixCloseIndex + cursorOffset;\n  const suffixOpenIndex = suffix.indexOf('{');\n  const suffixOpen = suffixOpenIndex + cursorOffset;\n  if (suffixClose === -1) {\n    throw new Error('Not inside selector, missing closing brace in suffix: ' + suffix);\n  }\n  if (suffixOpenIndex > -1 && suffixOpen < suffixClose) {\n    throw new Error('Not inside selector, next selector opens before this one closed: ' + suffix);\n  }\n\n  // Extract clean labels to form clean selector, incomplete labels are dropped\n  const selector = query.slice(prefixOpen, suffixClose);\n  const labels: { [key: string]: { value: string; operator: string } } = {};\n  selector.replace(labelRegexp, (label, key, operator, value) => {\n    const labelOffset = query.indexOf(label);\n    const valueStart = labelOffset + key.length + operator.length + 1;\n    const valueEnd = labelOffset + key.length + operator.length + value.length - 1;\n    // Skip label if cursor is in value\n    if (cursorOffset < valueStart || cursorOffset > valueEnd) {\n      labels[key] = { value, operator };\n    }\n    return '';\n  });\n\n  // Add metric if there is one before the selector\n  const metricPrefix = query.slice(0, prefixOpen);\n  const metricMatch = metricPrefix.match(/[A-Za-z:][\\w:]*$/);\n  if (metricMatch) {\n    labels['__name__'] = { value: `\"${metricMatch[0]}\"`, operator: '=' };\n  }\n\n  // Build sorted selector\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map(key => `${key}${labels[key].operator}${labels[key].value}`).join(',');\n\n  const selectorString = ['{', cleanSelector, '}'].join('');\n\n  return { labelKeys, selector: selectorString };\n}\n\nexport function expandRecordingRules(query: string, mapping: { [name: string]: string }): string {\n  const ruleNames = Object.keys(mapping);\n  const rulesRegex = new RegExp(`(\\\\s|^)(${ruleNames.join('|')})(\\\\s|$|\\\\(|\\\\[|\\\\{)`, 'ig');\n  return query.replace(rulesRegex, (match, pre, name, post) => `${pre}${mapping[name]}${post}`);\n}\n","import _ from 'lodash';\n\nconst keywords = 'by|without|on|ignoring|group_left|group_right|bool|or|and|unless';\n\n// Duplicate from mode-prometheus.js, which can't be used in tests due to global ace not being loaded.\nconst builtInWords = [\n  keywords,\n  'count|count_values|min|max|avg|sum|stddev|stdvar|bottomk|topk|quantile',\n  'true|false|null|__name__|job',\n  'abs|absent|ceil|changes|clamp_max|clamp_min|count_scalar|day_of_month|day_of_week|days_in_month|delta|deriv',\n  'drop_common_labels|exp|floor|histogram_quantile|holt_winters|hour|idelta|increase|irate|label_replace|ln|log2',\n  'log10|minute|month|predict_linear|rate|resets|round|scalar|sort|sort_desc|sqrt|time|vector|year|avg_over_time',\n  'min_over_time|max_over_time|sum_over_time|count_over_time|quantile_over_time|stddev_over_time|stdvar_over_time',\n]\n  .join('|')\n  .split('|');\n\nconst metricNameRegexp = /([A-Za-z:][\\w:]*)\\b(?![\\(\\]{=!\",])/g;\nconst selectorRegexp = /{([^{]*)}/g;\n\n// addLabelToQuery('foo', 'bar', 'baz') => 'foo{bar=\"baz\"}'\nexport function addLabelToQuery(query: string, key: string, value: string, operator?: string): string {\n  if (!key || !value) {\n    throw new Error('Need label to add to query.');\n  }\n\n  // Add empty selectors to bare metric names\n  let previousWord: string;\n  query = query.replace(metricNameRegexp, (match, word, offset) => {\n    const insideSelector = isPositionInsideChars(query, offset, '{', '}');\n    // Handle \"sum by (key) (metric)\"\n    const previousWordIsKeyWord = previousWord && keywords.split('|').indexOf(previousWord) > -1;\n\n    // check for colon as as \"word boundary\" symbol\n    const isColonBounded = word.endsWith(':');\n\n    previousWord = word;\n    if (!insideSelector && !isColonBounded && !previousWordIsKeyWord && builtInWords.indexOf(word) === -1) {\n      return `${word}{}`;\n    }\n    return word;\n  });\n\n  // Adding label to existing selectors\n  let match = selectorRegexp.exec(query);\n  const parts = [];\n  let lastIndex = 0;\n  let suffix = '';\n\n  while (match) {\n    const prefix = query.slice(lastIndex, match.index);\n    const selector = match[1];\n    const selectorWithLabel = addLabelToSelector(selector, key, value, operator);\n    lastIndex = match.index + match[1].length + 2;\n    suffix = query.slice(match.index + match[0].length);\n    parts.push(prefix, selectorWithLabel);\n    match = selectorRegexp.exec(query);\n  }\n\n  parts.push(suffix);\n  return parts.join('');\n}\n\nconst labelRegexp = /(\\w+)\\s*(=|!=|=~|!~)\\s*(\"[^\"]*\")/g;\n\nexport function addLabelToSelector(selector: string, labelKey: string, labelValue: string, labelOperator?: string) {\n  const parsedLabels = [];\n\n  // Split selector into labels\n  if (selector) {\n    let match = labelRegexp.exec(selector);\n    while (match) {\n      parsedLabels.push({ key: match[1], operator: match[2], value: match[3] });\n      match = labelRegexp.exec(selector);\n    }\n  }\n\n  // Add new label\n  const operatorForLabelKey = labelOperator || '=';\n  parsedLabels.push({ key: labelKey, operator: operatorForLabelKey, value: `\"${labelValue}\"` });\n\n  // Sort labels by key and put them together\n  const formatted = _.chain(parsedLabels)\n    .uniqWith(_.isEqual)\n    .compact()\n    .sortBy('key')\n    .map(({ key, operator, value }) => `${key}${operator}${value}`)\n    .value()\n    .join(',');\n\n  return `{${formatted}}`;\n}\n\nexport function keepSelectorFilters(selector: string) {\n  // Remove all label-key between {} and return filters. If first character is space, remove it.\n  const filters = selector.replace(/\\{(.*?)\\}/g, '').replace(/^ /, '');\n  return filters;\n}\n\nfunction isPositionInsideChars(text: string, position: number, openChar: string, closeChar: string) {\n  const nextSelectorStart = text.slice(position).indexOf(openChar);\n  const nextSelectorEnd = text.slice(position).indexOf(closeChar);\n  return nextSelectorEnd > -1 && (nextSelectorStart === -1 || nextSelectorStart > nextSelectorEnd);\n}\n\nexport default addLabelToQuery;\n","import { CompletionItem } from '@grafana/ui';\n\nexport const RATE_RANGES: CompletionItem[] = [\n  { label: '$__interval', sortText: '$__interval' },\n  { label: '1m', sortText: '00:01:00' },\n  { label: '5m', sortText: '00:05:00' },\n  { label: '10m', sortText: '00:10:00' },\n  { label: '30m', sortText: '00:30:00' },\n  { label: '1h', sortText: '01:00:00' },\n  { label: '1d', sortText: '24:00:00' },\n];\n\nexport const OPERATORS = ['by', 'group_left', 'group_right', 'ignoring', 'on', 'offset', 'without'];\n\nconst AGGREGATION_OPERATORS: CompletionItem[] = [\n  {\n    label: 'sum',\n    insertText: 'sum',\n    documentation: 'Calculate sum over dimensions',\n  },\n  {\n    label: 'min',\n    insertText: 'min',\n    documentation: 'Select minimum over dimensions',\n  },\n  {\n    label: 'max',\n    insertText: 'max',\n    documentation: 'Select maximum over dimensions',\n  },\n  {\n    label: 'avg',\n    insertText: 'avg',\n    documentation: 'Calculate the average over dimensions',\n  },\n  {\n    label: 'stddev',\n    insertText: 'stddev',\n    documentation: 'Calculate population standard deviation over dimensions',\n  },\n  {\n    label: 'stdvar',\n    insertText: 'stdvar',\n    documentation: 'Calculate population standard variance over dimensions',\n  },\n  {\n    label: 'count',\n    insertText: 'count',\n    documentation: 'Count number of elements in the vector',\n  },\n  {\n    label: 'count_values',\n    insertText: 'count_values',\n    documentation: 'Count number of elements with the same value',\n  },\n  {\n    label: 'bottomk',\n    insertText: 'bottomk',\n    documentation: 'Smallest k elements by sample value',\n  },\n  {\n    label: 'topk',\n    insertText: 'topk',\n    documentation: 'Largest k elements by sample value',\n  },\n  {\n    label: 'quantile',\n    insertText: 'quantile',\n    documentation: 'Calculate φ-quantile (0 ≤ φ ≤ 1) over dimensions',\n  },\n];\n\nexport const FUNCTIONS = [\n  ...AGGREGATION_OPERATORS,\n  {\n    insertText: 'abs',\n    label: 'abs',\n    detail: 'abs(v instant-vector)',\n    documentation: 'Returns the input vector with all sample values converted to their absolute value.',\n  },\n  {\n    insertText: 'absent',\n    label: 'absent',\n    detail: 'absent(v instant-vector)',\n    documentation:\n      'Returns an empty vector if the vector passed to it has any elements and a 1-element vector with the value 1 if the vector passed to it has no elements. This is useful for alerting on when no time series exist for a given metric name and label combination.',\n  },\n  {\n    insertText: 'ceil',\n    label: 'ceil',\n    detail: 'ceil(v instant-vector)',\n    documentation: 'Rounds the sample values of all elements in `v` up to the nearest integer.',\n  },\n  {\n    insertText: 'changes',\n    label: 'changes',\n    detail: 'changes(v range-vector)',\n    documentation:\n      'For each input time series, `changes(v range-vector)` returns the number of times its value has changed within the provided time range as an instant vector.',\n  },\n  {\n    insertText: 'clamp_max',\n    label: 'clamp_max',\n    detail: 'clamp_max(v instant-vector, max scalar)',\n    documentation: 'Clamps the sample values of all elements in `v` to have an upper limit of `max`.',\n  },\n  {\n    insertText: 'clamp_min',\n    label: 'clamp_min',\n    detail: 'clamp_min(v instant-vector, min scalar)',\n    documentation: 'Clamps the sample values of all elements in `v` to have a lower limit of `min`.',\n  },\n  {\n    insertText: 'count_scalar',\n    label: 'count_scalar',\n    detail: 'count_scalar(v instant-vector)',\n    documentation:\n      'Returns the number of elements in a time series vector as a scalar. This is in contrast to the `count()` aggregation operator, which always returns a vector (an empty one if the input vector is empty) and allows grouping by labels via a `by` clause.',\n  },\n  {\n    insertText: 'day_of_month',\n    label: 'day_of_month',\n    detail: 'day_of_month(v=vector(time()) instant-vector)',\n    documentation: 'Returns the day of the month for each of the given times in UTC. Returned values are from 1 to 31.',\n  },\n  {\n    insertText: 'day_of_week',\n    label: 'day_of_week',\n    detail: 'day_of_week(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the day of the week for each of the given times in UTC. Returned values are from 0 to 6, where 0 means Sunday etc.',\n  },\n  {\n    insertText: 'days_in_month',\n    label: 'days_in_month',\n    detail: 'days_in_month(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns number of days in the month for each of the given times in UTC. Returned values are from 28 to 31.',\n  },\n  {\n    insertText: 'delta',\n    label: 'delta',\n    detail: 'delta(v range-vector)',\n    documentation:\n      'Calculates the difference between the first and last value of each time series element in a range vector `v`, returning an instant vector with the given deltas and equivalent labels. The delta is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if the sample values are all integers.',\n  },\n  {\n    insertText: 'deriv',\n    label: 'deriv',\n    detail: 'deriv(v range-vector)',\n    documentation:\n      'Calculates the per-second derivative of the time series in a range vector `v`, using simple linear regression.',\n  },\n  {\n    insertText: 'drop_common_labels',\n    label: 'drop_common_labels',\n    detail: 'drop_common_labels(instant-vector)',\n    documentation: 'Drops all labels that have the same name and value across all series in the input vector.',\n  },\n  {\n    insertText: 'exp',\n    label: 'exp',\n    detail: 'exp(v instant-vector)',\n    documentation:\n      'Calculates the exponential function for all elements in `v`.\\nSpecial cases are:\\n* `Exp(+Inf) = +Inf` \\n* `Exp(NaN) = NaN`',\n  },\n  {\n    insertText: 'floor',\n    label: 'floor',\n    detail: 'floor(v instant-vector)',\n    documentation: 'Rounds the sample values of all elements in `v` down to the nearest integer.',\n  },\n  {\n    insertText: 'histogram_quantile',\n    label: 'histogram_quantile',\n    detail: 'histogram_quantile(φ float, b instant-vector)',\n    documentation:\n      'Calculates the φ-quantile (0 ≤ φ ≤ 1) from the buckets `b` of a histogram. The samples in `b` are the counts of observations in each bucket. Each sample must have a label `le` where the label value denotes the inclusive upper bound of the bucket. (Samples without such a label are silently ignored.) The histogram metric type automatically provides time series with the `_bucket` suffix and the appropriate labels.',\n  },\n  {\n    insertText: 'holt_winters',\n    label: 'holt_winters',\n    detail: 'holt_winters(v range-vector, sf scalar, tf scalar)',\n    documentation:\n      'Produces a smoothed value for time series based on the range in `v`. The lower the smoothing factor `sf`, the more importance is given to old data. The higher the trend factor `tf`, the more trends in the data is considered. Both `sf` and `tf` must be between 0 and 1.',\n  },\n  {\n    insertText: 'hour',\n    label: 'hour',\n    detail: 'hour(v=vector(time()) instant-vector)',\n    documentation: 'Returns the hour of the day for each of the given times in UTC. Returned values are from 0 to 23.',\n  },\n  {\n    insertText: 'idelta',\n    label: 'idelta',\n    detail: 'idelta(v range-vector)',\n    documentation:\n      'Calculates the difference between the last two samples in the range vector `v`, returning an instant vector with the given deltas and equivalent labels.',\n  },\n  {\n    insertText: 'increase',\n    label: 'increase',\n    detail: 'increase(v range-vector)',\n    documentation:\n      'Calculates the increase in the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. The increase is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if a counter increases only by integer increments.',\n  },\n  {\n    insertText: 'irate',\n    label: 'irate',\n    detail: 'irate(v range-vector)',\n    documentation:\n      'Calculates the per-second instant rate of increase of the time series in the range vector. This is based on the last two data points. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for.',\n  },\n  {\n    insertText: 'label_replace',\n    label: 'label_replace',\n    detail: 'label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)',\n    documentation:\n      \"For each timeseries in `v`, `label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string)`  matches the regular expression `regex` against the label `src_label`.  If it matches, then the timeseries is returned with the label `dst_label` replaced by the expansion of `replacement`. `$1` is replaced with the first matching subgroup, `$2` with the second etc. If the regular expression doesn't match then the timeseries is returned unchanged.\",\n  },\n  {\n    insertText: 'ln',\n    label: 'ln',\n    detail: 'ln(v instant-vector)',\n    documentation:\n      'calculates the natural logarithm for all elements in `v`.\\nSpecial cases are:\\n * `ln(+Inf) = +Inf`\\n * `ln(0) = -Inf`\\n * `ln(x < 0) = NaN`\\n * `ln(NaN) = NaN`',\n  },\n  {\n    insertText: 'log2',\n    label: 'log2',\n    detail: 'log2(v instant-vector)',\n    documentation:\n      'Calculates the binary logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.',\n  },\n  {\n    insertText: 'log10',\n    label: 'log10',\n    detail: 'log10(v instant-vector)',\n    documentation:\n      'Calculates the decimal logarithm for all elements in `v`. The special cases are equivalent to those in `ln`.',\n  },\n  {\n    insertText: 'minute',\n    label: 'minute',\n    detail: 'minute(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the minute of the hour for each of the given times in UTC. Returned values are from 0 to 59.',\n  },\n  {\n    insertText: 'month',\n    label: 'month',\n    detail: 'month(v=vector(time()) instant-vector)',\n    documentation:\n      'Returns the month of the year for each of the given times in UTC. Returned values are from 1 to 12, where 1 means January etc.',\n  },\n  {\n    insertText: 'predict_linear',\n    label: 'predict_linear',\n    detail: 'predict_linear(v range-vector, t scalar)',\n    documentation:\n      'Predicts the value of time series `t` seconds from now, based on the range vector `v`, using simple linear regression.',\n  },\n  {\n    insertText: 'rate',\n    label: 'rate',\n    detail: 'rate(v range-vector)',\n    documentation:\n      \"Calculates the per-second average rate of increase of the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. Also, the calculation extrapolates to the ends of the time range, allowing for missed scrapes or imperfect alignment of scrape cycles with the range's time period.\",\n  },\n  {\n    insertText: 'resets',\n    label: 'resets',\n    detail: 'resets(v range-vector)',\n    documentation:\n      'For each input time series, `resets(v range-vector)` returns the number of counter resets within the provided time range as an instant vector. Any decrease in the value between two consecutive samples is interpreted as a counter reset.',\n  },\n  {\n    insertText: 'round',\n    label: 'round',\n    detail: 'round(v instant-vector, to_nearest=1 scalar)',\n    documentation:\n      'Rounds the sample values of all elements in `v` to the nearest integer. Ties are resolved by rounding up. The optional `to_nearest` argument allows specifying the nearest multiple to which the sample values should be rounded. This multiple may also be a fraction.',\n  },\n  {\n    insertText: 'scalar',\n    label: 'scalar',\n    detail: 'scalar(v instant-vector)',\n    documentation:\n      'Given a single-element input vector, `scalar(v instant-vector)` returns the sample value of that single element as a scalar. If the input vector does not have exactly one element, `scalar` will return `NaN`.',\n  },\n  {\n    insertText: 'sort',\n    label: 'sort',\n    detail: 'sort(v instant-vector)',\n    documentation: 'Returns vector elements sorted by their sample values, in ascending order.',\n  },\n  {\n    insertText: 'sort_desc',\n    label: 'sort_desc',\n    detail: 'sort_desc(v instant-vector)',\n    documentation: 'Returns vector elements sorted by their sample values, in descending order.',\n  },\n  {\n    insertText: 'sqrt',\n    label: 'sqrt',\n    detail: 'sqrt(v instant-vector)',\n    documentation: 'Calculates the square root of all elements in `v`.',\n  },\n  {\n    insertText: 'time',\n    label: 'time',\n    detail: 'time()',\n    documentation:\n      'Returns the number of seconds since January 1, 1970 UTC. Note that this does not actually return the current time, but the time at which the expression is to be evaluated.',\n  },\n  {\n    insertText: 'vector',\n    label: 'vector',\n    detail: 'vector(s scalar)',\n    documentation: 'Returns the scalar `s` as a vector with no labels.',\n  },\n  {\n    insertText: 'year',\n    label: 'year',\n    detail: 'year(v=vector(time()) instant-vector)',\n    documentation: 'Returns the year for each of the given times in UTC.',\n  },\n  {\n    insertText: 'avg_over_time',\n    label: 'avg_over_time',\n    detail: 'avg_over_time(range-vector)',\n    documentation: 'The average value of all points in the specified interval.',\n  },\n  {\n    insertText: 'min_over_time',\n    label: 'min_over_time',\n    detail: 'min_over_time(range-vector)',\n    documentation: 'The minimum value of all points in the specified interval.',\n  },\n  {\n    insertText: 'max_over_time',\n    label: 'max_over_time',\n    detail: 'max_over_time(range-vector)',\n    documentation: 'The maximum value of all points in the specified interval.',\n  },\n  {\n    insertText: 'sum_over_time',\n    label: 'sum_over_time',\n    detail: 'sum_over_time(range-vector)',\n    documentation: 'The sum of all values in the specified interval.',\n  },\n  {\n    insertText: 'count_over_time',\n    label: 'count_over_time',\n    detail: 'count_over_time(range-vector)',\n    documentation: 'The count of all values in the specified interval.',\n  },\n  {\n    insertText: 'quantile_over_time',\n    label: 'quantile_over_time',\n    detail: 'quantile_over_time(scalar, range-vector)',\n    documentation: 'The φ-quantile (0 ≤ φ ≤ 1) of the values in the specified interval.',\n  },\n  {\n    insertText: 'stddev_over_time',\n    label: 'stddev_over_time',\n    detail: 'stddev_over_time(range-vector)',\n    documentation: 'The population standard deviation of the values in the specified interval.',\n  },\n  {\n    insertText: 'stdvar_over_time',\n    label: 'stdvar_over_time',\n    detail: 'stdvar_over_time(range-vector)',\n    documentation: 'The population standard variance of the values in the specified interval.',\n  },\n];\n\nconst tokenizer = {\n  comment: {\n    pattern: /#.*/,\n  },\n  'context-aggregation': {\n    pattern: /((by|without)\\s*)\\([^)]*\\)/, // by ()\n    lookbehind: true,\n    inside: {\n      'label-key': {\n        pattern: /[^(),\\s][^,)]*[^),\\s]*/,\n        alias: 'attr-name',\n      },\n      punctuation: /[()]/,\n    },\n  },\n  'context-labels': {\n    pattern: /\\{[^}]*(?=})/,\n    greedy: true,\n    inside: {\n      comment: {\n        pattern: /#.*/,\n      },\n      'label-key': {\n        pattern: /[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n        alias: 'attr-name',\n        greedy: true,\n      },\n      'label-value': {\n        pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'attr-value',\n      },\n      punctuation: /[{]/,\n    },\n  },\n  function: new RegExp(`\\\\b(?:${FUNCTIONS.map(f => f.label).join('|')})(?=\\\\s*\\\\()`, 'i'),\n  'context-range': [\n    {\n      pattern: /\\[[^\\]]*(?=])/, // [1m]\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n    {\n      pattern: /(offset\\s+)\\w+/, // offset 1m\n      lookbehind: true,\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n  ],\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  operator: new RegExp(`/[-+*/=%^~]|&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\\\b(?:${OPERATORS.join('|')})\\\\b`, 'i'),\n  punctuation: /[{};()`,.]/,\n};\n\nexport default tokenizer;\n","// https://github.com/facebook/react/issues/5465\n\nexport interface CancelablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\nexport const makePromiseCancelable = <T>(promise: Promise<T>): CancelablePromise<T> => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise<T>((resolve, reject) => {\n    promise.then(val => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val)));\n    promise.catch(error => (hasCanceled_ ? reject({ isCanceled: true }) : reject(error)));\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n"],"sourceRoot":""}