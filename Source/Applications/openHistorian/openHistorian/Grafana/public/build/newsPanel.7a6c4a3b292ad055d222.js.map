{"version":3,"file":"newsPanel.7a6c4a3b292ad055d222.js","mappings":"gPAaO,SAASA,EAAUC,EAAuB,CAC/C,KAAM,CACJ,MAAAC,EACA,QAAS,CAAE,QAAAC,EAAU,IAAkB,UAAAC,CAAU,CACnD,EAAIH,EAEE,CAAE,MAAAI,EAAO,QAAAC,CAAQ,KAAIC,EAAA,GAAYJ,CAAO,EAc9C,SAZA,aAAU,IAAM,CACd,MAAMK,EAAMP,EAAM,SAAS,UAAU,IAAcK,CAAO,EAE1D,MAAO,IAAM,CACXE,EAAI,YAAY,CAClB,CACF,EAAG,CAACF,EAASL,EAAM,QAAQ,CAAC,KAE5B,aAAU,IAAM,CACdK,EAAQ,CACV,EAAG,CAACA,CAAO,CAAC,EAERD,EAAM,SAEN,QAACI,EAAA,EAAK,CAAC,MAAM,yBAAyB,4GAC4D,OAChG,QAAC,KACC,MAAO,CAAE,eAAgB,WAAY,EACrC,KAAK,qFACN,0CAC2B,OAACC,EAAA,EAAI,CAAC,KAAK,mBAAoB,IAC3D,GACF,EAGAL,EAAM,WACD,OAAC,OAAI,sBAAU,EAGnBA,EAAM,SAKT,OAACM,EAAA,EAAe,CAAC,cAAc,OAAO,cAAc,OACjD,SAAAN,EAAM,MAAM,IAAI,CAACO,EAAGC,OACZ,OAACC,EAAA,EAAI,CAAa,MAAAD,EAAc,MAAAX,EAAc,UAAAE,EAAsB,KAAMC,EAAM,OAArEQ,CAA4E,CAC/F,EACH,EARO,IAUX,CC3CO,MAAME,EAAmC,CAC9C,UAAW,EACb,ECda,EAAS,IAAIC,EAAA,EAAqBhB,CAAS,EAAE,gBAAiBiB,GAAY,CACrFA,EACG,aAAa,CACZ,KAAM,UACN,KAAM,MACN,YAAa,8BACb,SAAU,CACR,YAAa,GACf,EACA,aAAcF,EAAe,OAC/B,CAAC,EACA,iBAAiB,CAChB,KAAM,YACN,KAAM,aACN,YAAa,gFACb,aAAcA,EAAe,SAC/B,CAAC,CACL,CAAC,C","sources":["webpack://grafana/./public/app/plugins/panel/news/NewsPanel.tsx","webpack://grafana/./public/app/plugins/panel/news/panelcfg.gen.ts","webpack://grafana/./public/app/plugins/panel/news/module.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\nimport { PanelProps } from '@grafana/data';\nimport { RefreshEvent } from '@grafana/runtime';\nimport { Alert, CustomScrollbar, Icon } from '@grafana/ui';\n\nimport { News } from './component/News';\nimport { DEFAULT_FEED_URL } from './constants';\nimport { Options } from './panelcfg.gen';\nimport { useNewsFeed } from './useNewsFeed';\n\ninterface NewsPanelProps extends PanelProps<Options> {}\n\nexport function NewsPanel(props: NewsPanelProps) {\n  const {\n    width,\n    options: { feedUrl = DEFAULT_FEED_URL, showImage },\n  } = props;\n\n  const { state, getNews } = useNewsFeed(feedUrl);\n\n  useEffect(() => {\n    const sub = props.eventBus.subscribe(RefreshEvent, getNews);\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [getNews, props.eventBus]);\n\n  useEffect(() => {\n    getNews();\n  }, [getNews]);\n\n  if (state.error) {\n    return (\n      <Alert title=\"Error loading RSS feed\">\n        Make sure that the feed URL is correct and that CORS is configured correctly on the server. See{' '}\n        <a\n          style={{ textDecoration: 'underline' }}\n          href=\"https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/news/\"\n        >\n          News panel documentation. <Icon name=\"external-link-alt\" />\n        </a>\n      </Alert>\n    );\n  }\n  if (state.loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!state.value) {\n    return null;\n  }\n\n  return (\n    <CustomScrollbar autoHeightMin=\"100%\" autoHeightMax=\"100%\">\n      {state.value.map((_, index) => {\n        return <News key={index} index={index} width={width} showImage={showImage} data={state.value} />;\n      })}\n    </CustomScrollbar>\n  );\n}\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nexport interface Options {\n  /**\n   * empty/missing will default to grafana blog\n   */\n  feedUrl?: string;\n  showImage?: boolean;\n}\n\nexport const defaultOptions: Partial<Options> = {\n  showImage: true,\n};\n","import { PanelPlugin } from '@grafana/data';\n\nimport { NewsPanel } from './NewsPanel';\nimport { DEFAULT_FEED_URL } from './constants';\nimport { Options, defaultOptions } from './panelcfg.gen';\n\nexport const plugin = new PanelPlugin<Options>(NewsPanel).setPanelOptions((builder) => {\n  builder\n    .addTextInput({\n      path: 'feedUrl',\n      name: 'URL',\n      description: 'Supports RSS and Atom feeds',\n      settings: {\n        placeholder: DEFAULT_FEED_URL,\n      },\n      defaultValue: defaultOptions.feedUrl,\n    })\n    .addBooleanSwitch({\n      path: 'showImage',\n      name: 'Show image',\n      description: 'Controls if the news item social (og:image) image is shown above text content',\n      defaultValue: defaultOptions.showImage,\n    });\n});\n"],"names":["NewsPanel","props","width","feedUrl","showImage","state","getNews","useNewsFeed","sub","Alert","Icon","CustomScrollbar","_","index","News","defaultOptions","PanelPlugin","builder"],"sourceRoot":""}