{"version":3,"file":"SendResetMailPage.3d4298737e5d78db7ac7.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/ForgottenPassword/ForgottenPassword.tsx","webpack://grafana/./public/app/core/components/ForgottenPassword/SendResetMailPage.tsx","webpack://grafana/./public/app/core/components/Login/LoginLayout.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Field, Input, Button, Legend, Container, useStyles2, LinkButton, Stack } from '@grafana/ui';\nimport config from 'app/core/config';\n\ninterface EmailDTO {\n  userOrEmail: string;\n}\n\nconst paragraphStyles = (theme: GrafanaTheme2) =>\n  css({\n    color: theme.colors.text.secondary,\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginTop: theme.spacing(1),\n    display: 'block',\n  });\n\nexport const ForgottenPassword = () => {\n  const [emailSent, setEmailSent] = useState(false);\n  const styles = useStyles2(paragraphStyles);\n  const loginHref = `${config.appSubUrl}/login`;\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<EmailDTO>();\n\n  const sendEmail = async (formModel: EmailDTO) => {\n    const res = await getBackendSrv().post('/api/user/password/send-reset-email', formModel);\n    if (res) {\n      setEmailSent(true);\n    }\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a reset link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={loginHref}>\n          Back to login\n        </LinkButton>\n      </div>\n    );\n  }\n  return (\n    <form onSubmit={handleSubmit(sendEmail)}>\n      <Legend>Reset password</Legend>\n      <Field\n        label=\"User\"\n        description=\"Enter your information to get a reset link sent to you\"\n        invalid={!!errors.userOrEmail}\n        error={errors?.userOrEmail?.message}\n      >\n        <Input\n          id=\"user-input\"\n          placeholder=\"Email or username\"\n          {...register('userOrEmail', { required: 'Email or username is required' })}\n        />\n      </Field>\n      <Stack>\n        <Button type=\"submit\">Send reset email</Button>\n        <LinkButton fill=\"text\" href={loginHref}>\n          Back to login\n        </LinkButton>\n      </Stack>\n\n      <p className={styles}>Did you forget your username or email? Contact your Grafana administrator.</p>\n    </form>\n  );\n};\n","import { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { ForgottenPassword } from './ForgottenPassword';\n\nexport const SendResetMailPage = () => (\n  <LoginLayout>\n    <InnerBox>\n      <ForgottenPassword />\n    </InnerBox>\n  </LoginLayout>\n);\n\nexport default SendResetMailPage;\n","import { cx, css, keyframes } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { Branding } from '../Branding/Branding';\nimport { BrandingSettings } from '../Branding/types';\nimport { Footer } from '../Footer/Footer';\n\ninterface InnerBoxProps {\n  enterAnimation?: boolean;\n}\nexport const InnerBox = ({ children, enterAnimation = true }: React.PropsWithChildren<InnerBoxProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  return <div className={cx(loginStyles.loginInnerBox, enterAnimation && loginStyles.enterAnimation)}>{children}</div>;\n};\n\nexport interface LoginLayoutProps {\n  /** Custom branding settings that can be used e.g. for previewing the Login page changes */\n  branding?: BrandingSettings;\n  isChangingPassword?: boolean;\n}\n\nexport const LoginLayout = ({ children, branding, isChangingPassword }: React.PropsWithChildren<LoginLayoutProps>) => {\n  const loginStyles = useStyles2(getLoginStyles);\n  const [startAnim, setStartAnim] = useState(false);\n  const subTitle = branding?.loginSubtitle ?? Branding.GetLoginSubTitle();\n  const loginTitle = branding?.loginTitle ?? Branding.LoginTitle;\n  const loginBoxBackground = branding?.loginBoxBackground || Branding.LoginBoxBackground();\n  const loginLogo = branding?.loginLogo;\n  const hideEdition = branding?.hideEdition ?? Branding.HideEdition;\n\n  useEffect(() => setStartAnim(true), []);\n\n  return (\n    <Branding.LoginBackground\n      className={cx(loginStyles.container, startAnim && loginStyles.loginAnim, branding?.loginBackground)}\n    >\n      <div className={loginStyles.loginMain}>\n        <div className={cx(loginStyles.loginContent, loginBoxBackground, 'login-content-box')}>\n          <div className={loginStyles.loginLogoWrapper}>\n            <Branding.LoginLogo className={loginStyles.loginLogo} logo={loginLogo} />\n            <div className={loginStyles.titleWrapper}>\n              {isChangingPassword ? (\n                <h1 className={loginStyles.mainTitle}>Update your password</h1>\n              ) : (\n                <>\n                  <h1 className={loginStyles.mainTitle}>{loginTitle}</h1>\n                  {subTitle && <h3 className={loginStyles.subTitle}>{subTitle}</h3>}\n                </>\n              )}\n            </div>\n          </div>\n          <div className={loginStyles.loginOuterBox}>{children}</div>\n        </div>\n      </div>\n      {branding?.hideFooter ? <></> : <Footer hideEdition={hideEdition} customLinks={branding?.footerLinks} />}\n    </Branding.LoginBackground>\n  );\n};\n\nconst flyInAnimation = keyframes`\nfrom{\n  opacity: 0;\n  transform: translate(-60px, 0px);\n}\n\nto{\n  opacity: 1;\n  transform: translate(0px, 0px);\n}`;\n\nexport const getLoginStyles = (theme: GrafanaTheme2) => {\n  return {\n    loginMain: css({\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '100%',\n    }),\n    container: css({\n      minHeight: '100%',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      flex: 1,\n      minWidth: '100%',\n      marginLeft: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginAnim: css({\n      ['&:before']: {\n        opacity: 1,\n      },\n\n      ['.login-content-box']: {\n        opacity: 1,\n      },\n    }),\n    submitButton: css({\n      justifyContent: 'center',\n      width: '100%',\n    }),\n    loginLogo: css({\n      width: '100%',\n      maxWidth: 60,\n      marginBottom: theme.spacing(2),\n\n      [theme.breakpoints.up('sm')]: {\n        maxWidth: 100,\n      },\n    }),\n    loginLogoWrapper: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      padding: theme.spacing(3),\n    }),\n    titleWrapper: css({\n      textAlign: 'center',\n    }),\n    mainTitle: css({\n      fontSize: 22,\n\n      [theme.breakpoints.up('sm')]: {\n        fontSize: 32,\n      },\n    }),\n    subTitle: css({\n      fontSize: theme.typography.size.md,\n      color: theme.colors.text.secondary,\n    }),\n    loginContent: css({\n      maxWidth: 478,\n      width: `calc(100% - 2rem)`,\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      position: 'relative',\n      justifyContent: 'flex-start',\n      zIndex: 1,\n      minHeight: 320,\n      borderRadius: theme.shape.radius.default,\n      padding: theme.spacing(2, 0),\n      opacity: 0,\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        transition: 'opacity 0.5s ease-in-out',\n      },\n\n      [theme.breakpoints.up('sm')]: {\n        minHeight: theme.spacing(40),\n        justifyContent: 'center',\n      },\n    }),\n    loginOuterBox: css({\n      display: 'flex',\n      overflowY: 'hidden',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    loginInnerBox: css({\n      padding: theme.spacing(0, 2, 2, 2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexGrow: 1,\n      maxWidth: 415,\n      width: '100%',\n      transform: 'translate(0px, 0px)',\n      [theme.transitions.handleMotion('no-preference')]: {\n        transition: '0.25s ease',\n      },\n    }),\n    enterAnimation: css({\n      [theme.transitions.handleMotion('no-preference')]: {\n        animation: `${flyInAnimation} ease-out 0.2s`,\n      },\n    }),\n  };\n};\n"],"names":["paragraphStyles","theme","ForgottenPassword","emailSent","setEmailSent","styles","loginHref","config","handleSubmit","register","errors","sendEmail","formModel","Legend","Field","Input","Stack","Button","SendResetMailPage","LoginLayout","InnerBox","children","enterAnimation","loginStyles","getLoginStyles","branding","isChangingPassword","startAnim","setStartAnim","subTitle","loginTitle","loginBoxBackground","loginLogo","hideEdition","flyInAnimation"],"sourceRoot":""}