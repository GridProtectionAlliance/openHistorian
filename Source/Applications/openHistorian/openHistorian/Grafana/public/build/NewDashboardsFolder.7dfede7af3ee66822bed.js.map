{"version":3,"file":"NewDashboardsFolder.7dfede7af3ee66822bed.js","mappings":"uWASA,MAAMA,EAAqB,CACzBC,gBAAeA,EAAAA,IAGXC,GAAYC,EAAAA,EAAAA,SAAQ,KAAMH,GAQ1BI,EAA8B,CAAEC,WAAY,IAI3C,MAAMC,UAA4BC,EAAAA,cAAqB,qDAChDC,IACVC,KAAKC,MAAMT,gBAAgBO,EAASH,eAFsB,6BAKtCA,GACbM,EAAAA,EAAAA,sBACkBN,GACtBO,MAAK,KACG,IAERC,OAAOC,GACCA,EAAEC,YAIfC,SACE,OACE,SAAC,IAAD,CAAMC,MAAM,wBAAZ,UACE,UAAC,aAAD,kBACE,mDACA,SAAC,EAAAC,KAAD,CAAMC,cAAef,EAAkBgB,SAAUX,KAAKW,SAAtD,SACG,QAAC,SAAEC,EAAF,OAAYC,GAAb,SACC,iCACE,SAAC,EAAAC,MAAD,CACEC,MAAM,cACNC,UAAWH,EAAOjB,WAClBqB,MAAOJ,EAAOjB,YAAciB,EAAOjB,WAAWU,QAHhD,UAKE,SAAC,EAAAY,MAAD,eACEC,GAAG,qBACCP,EAAS,aAAc,CACzBQ,SAAU,2BACVC,SAAUC,MAAAA,SAAmBtB,KAAKuB,mBAAmBC,SAV7D,OAcE,SAAC,EAAAC,OAAD,CAAQC,KAAK,SAAb,iCAUhB,QAAejC,EAAUI","sources":["webpack://grafana/./public/app/features/folders/components/NewDashboardsFolder.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { Button, Input, Form, Field } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { validationSrv } from '../../manage-dashboards/services/ValidationSrv';\nimport { createNewFolder } from '../state/actions';\n\nconst mapDispatchToProps = {\n  createNewFolder,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\ninterface OwnProps {}\n\ninterface FormModel {\n  folderName: string;\n}\n\nconst initialFormModel: FormModel = { folderName: '' };\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport class NewDashboardsFolder extends PureComponent<Props> {\n  onSubmit = (formData: FormModel) => {\n    this.props.createNewFolder(formData.folderName);\n  };\n\n  validateFolderName = (folderName: string) => {\n    return validationSrv\n      .validateNewFolderName(folderName)\n      .then(() => {\n        return true;\n      })\n      .catch((e) => {\n        return e.message;\n      });\n  };\n\n  render() {\n    return (\n      <Page navId=\"dashboards/folder/new\">\n        <Page.Contents>\n          <h3>New dashboard folder</h3>\n          <Form defaultValues={initialFormModel} onSubmit={this.onSubmit}>\n            {({ register, errors }) => (\n              <>\n                <Field\n                  label=\"Folder name\"\n                  invalid={!!errors.folderName}\n                  error={errors.folderName && errors.folderName.message}\n                >\n                  <Input\n                    id=\"folder-name-input\"\n                    {...register('folderName', {\n                      required: 'Folder name is required.',\n                      validate: async (v) => await this.validateFolderName(v),\n                    })}\n                  />\n                </Field>\n                <Button type=\"submit\">Create</Button>\n              </>\n            )}\n          </Form>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nexport default connector(NewDashboardsFolder);\n"],"names":["mapDispatchToProps","createNewFolder","connector","connect","initialFormModel","folderName","NewDashboardsFolder","PureComponent","formData","this","props","validationSrv","then","catch","e","message","render","navId","Form","defaultValues","onSubmit","register","errors","Field","label","invalid","error","Input","id","required","validate","async","validateFolderName","v","Button","type"],"sourceRoot":""}