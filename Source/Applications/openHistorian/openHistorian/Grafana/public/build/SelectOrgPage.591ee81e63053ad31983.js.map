{"version":3,"sources":["webpack:///./public/app/features/org/SelectOrgPage.tsx"],"names":["navModel","main","icon","subTitle","text","node","getUserOrgs","getBackendSrv","get","setUserOrg","org","post","orgId","then","window","location","href","config","appSubUrl","SelectOrgPage","useState","orgs","setOrgs","useAsync","Contents","wrap","map","key","onClick","name"],"mappings":"4gCAOA,IAAMA,EAAW,CACfC,KAAM,CACJC,KAAM,UACNC,SAAU,cACVC,KAAM,8BAERC,KAAM,CACJD,KAAM,+BAIJE,EAAW,4CAAG,6GACLC,0BAAgBC,IAAI,kBADf,mFAAH,qDAGXC,EAAU,4CAAG,WAAOC,GAAP,gGACJH,0BACVI,KAAK,mBAAqBD,EAAIE,OAC9BC,MAAK,WACJC,OAAOC,SAASC,KAAOC,SAAOC,UAAY,OAJ7B,mFAAH,sDAQHC,EAAoB,WAAM,QACbC,qBADa,GAC9BC,EAD8B,KACxBC,EADwB,KAMrC,OAHAC,YAAQ,2BAAC,yGACPD,EADO,SACOhB,IADP,6EAEN,IAED,kBAAC,IAAD,CAAMN,SAAUA,GACd,kBAAC,IAAKwB,SAAN,KACE,6BACE,yMAIA,kBAAC,kBAAD,CAAiBC,MAAI,GAClBJ,GACCA,EAAKK,KAAI,SAAAhB,GAAG,OACV,kBAAC,SAAD,CAAQiB,IAAKjB,EAAIE,MAAOV,KAAK,SAAS0B,QAAS,kBAAMnB,EAAWC,KAC7DA,EAAImB,cAURV","file":"SelectOrgPage.591ee81e63053ad31983.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { getBackendSrv, config } from '@grafana/runtime';\nimport { UserOrg } from 'app/types';\nimport { useAsync } from 'react-use';\nimport { Button, HorizontalGroup } from '@grafana/ui';\n\nconst navModel = {\n  main: {\n    icon: 'grafana',\n    subTitle: 'Preferences',\n    text: 'Select active organization',\n  },\n  node: {\n    text: 'Select active organization',\n  },\n};\n\nconst getUserOrgs = async () => {\n  return await getBackendSrv().get('/api/user/orgs');\n};\nconst setUserOrg = async (org: UserOrg) => {\n  return await getBackendSrv()\n    .post('/api/user/using/' + org.orgId)\n    .then(() => {\n      window.location.href = config.appSubUrl + '/';\n    });\n};\n\nexport const SelectOrgPage: FC = () => {\n  const [orgs, setOrgs] = useState<UserOrg[]>();\n\n  useAsync(async () => {\n    setOrgs(await getUserOrgs());\n  }, []);\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <div>\n          <p>\n            You have been added to another Organization due to an open invitation! Please select which organization you\n            want to use right now (you can change this later at any time).\n          </p>\n          <HorizontalGroup wrap>\n            {orgs &&\n              orgs.map(org => (\n                <Button key={org.orgId} icon=\"signin\" onClick={() => setUserOrg(org)}>\n                  {org.name}\n                </Button>\n              ))}\n          </HorizontalGroup>\n        </div>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default SelectOrgPage;\n"],"sourceRoot":""}