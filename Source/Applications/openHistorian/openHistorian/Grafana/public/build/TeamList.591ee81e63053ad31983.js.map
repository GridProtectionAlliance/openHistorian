{"version":3,"sources":["webpack:///./public/app/features/teams/TeamList.tsx","webpack:///./public/app/features/teams/state/selectors.ts","webpack:///./public/app/features/teams/state/actions.ts","webpack:///./public/app/core/components/connectWithCleanUp.tsx","webpack:///./public/app/features/teams/state/navModel.ts"],"names":["TeamList","deleteTeam","team","props","id","onSearchQueryChange","value","setSearchQuery","this","fetchTeams","loadTeams","editorsCanAdmin","signedInUser","permission","teamUrl","canDelete","isPermissionTeamAdmin","key","className","href","src","avatarUrl","name","email","memberCount","size","disabled","onConfirm","title","buttonIcon","buttonLink","buttonTitle","proTip","proTipLink","proTipLinkTitle","proTipTarget","teams","searchQuery","isCanAdminAndViewer","orgRole","OrgRole","Viewer","disabledClass","newTeamHref","labelClassName","inputClassName","placeholder","onChange","style","width","map","renderTeam","teamsCount","hasFetched","renderTeamList","renderEmptyList","navModel","Contents","isLoading","renderList","PureComponent","mapDispatchToProps","hot","module","connectWithCleanUp","state","getNavModel","navIndex","getTeams","getSearchQuery","getTeamsCount","config","contextSrv","user","getSearchMemberQuery","searchMemberQuery","getTeamGroups","groups","length","getTeam","currentTeamId","parseInt","regex","RegExp","filter","test","getTeamMembers","members","member","login","isSignedInUserTeamAdmin","userInMembers","find","m","userId","TeamPermissionLevel","Member","isAdmin","isGrafanaAdmin","Admin","userIsTeamAdmin","dispatch","getBackendSrv","get","perpage","page","response","teamsLoaded","loadTeam","teamLoaded","updateNavIndex","buildNavModel","loadTeamMembers","getStore","teamMembersLoaded","addTeamMember","post","removeTeamMember","delete","updateTeam","put","loadTeamGroups","teamGroupsLoaded","addTeamGroup","groupId","removeTeamGroup","encodeURIComponent","updateTeamMember","teamId","mapStateToProps","stateSelector","Component","ConnectedComponent","connect","ConnectedComponentWithCleanUp","useDispatch","useEffect","cleanUpAction","displayName","hoistNonReactStatics","img","subTitle","url","text","breadcrumbs","children","active","icon","licenseInfo","hasLicense","push","getTeamLoadingNav","pageName","node","main","child","indexOf"],"mappings":"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","file":"TeamList.591ee81e63053ad31983.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Page from 'app/core/components/Page/Page';\nimport { DeleteButton, LinkButton } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { OrgRole, StoreState, Team } from 'app/types';\nimport { deleteTeam, loadTeams } from './state/actions';\nimport { getSearchQuery, getTeams, getTeamsCount, isPermissionTeamAdmin } from './state/selectors';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { config } from 'app/core/config';\nimport { contextSrv, User } from 'app/core/services/context_srv';\nimport { connectWithCleanUp } from '../../core/components/connectWithCleanUp';\nimport { setSearchQuery } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  teams: Team[];\n  searchQuery: string;\n  teamsCount: number;\n  hasFetched: boolean;\n  loadTeams: typeof loadTeams;\n  deleteTeam: typeof deleteTeam;\n  setSearchQuery: typeof setSearchQuery;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport class TeamList extends PureComponent<Props, any> {\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  async fetchTeams() {\n    await this.props.loadTeams();\n  }\n\n  deleteTeam = (team: Team) => {\n    this.props.deleteTeam(team.id);\n  };\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchQuery(value);\n  };\n\n  renderTeam(team: Team) {\n    const { editorsCanAdmin, signedInUser } = this.props;\n    const permission = team.permission;\n    const teamUrl = `org/teams/edit/${team.id}`;\n    const canDelete = isPermissionTeamAdmin({ permission, editorsCanAdmin, signedInUser });\n\n    return (\n      <tr key={team.id}>\n        <td className=\"width-4 text-center link-td\">\n          <a href={teamUrl}>\n            <img className=\"filter-table__avatar\" src={team.avatarUrl} />\n          </a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.name}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.email}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.memberCount}</a>\n        </td>\n        <td className=\"text-right\">\n          <DeleteButton size=\"sm\" disabled={!canDelete} onConfirm={() => this.deleteTeam(team)} />\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmptyList() {\n    return (\n      <EmptyListCTA\n        title=\"You haven't created any teams yet.\"\n        buttonIcon=\"users-alt\"\n        buttonLink=\"org/teams/new\"\n        buttonTitle=\" New team\"\n        proTip=\"Assign folder and dashboard permissions to teams instead of users to ease administration.\"\n        proTipLink=\"\"\n        proTipLinkTitle=\"\"\n        proTipTarget=\"_blank\"\n      />\n    );\n  }\n\n  renderTeamList() {\n    const { teams, searchQuery, editorsCanAdmin, signedInUser } = this.props;\n    const isCanAdminAndViewer = editorsCanAdmin && signedInUser.orgRole === OrgRole.Viewer;\n    const disabledClass = isCanAdminAndViewer ? ' disabled' : '';\n    const newTeamHref = isCanAdminAndViewer ? '#' : 'org/teams/new';\n\n    return (\n      <>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput\n              labelClassName=\"gf-form--has-input-icon gf-form--grow\"\n              inputClassName=\"gf-form-input\"\n              placeholder=\"Search teams\"\n              value={searchQuery}\n              onChange={this.onSearchQueryChange}\n            />\n          </div>\n\n          <div className=\"page-action-bar__spacer\" />\n\n          <LinkButton className={disabledClass} href={newTeamHref}>\n            New Team\n          </LinkButton>\n        </div>\n\n        <div className=\"admin-list-table\">\n          <table className=\"filter-table filter-table--hover form-inline\">\n            <thead>\n              <tr>\n                <th />\n                <th>Name</th>\n                <th>Email</th>\n                <th>Members</th>\n                <th style={{ width: '1%' }} />\n              </tr>\n            </thead>\n            <tbody>{teams.map(team => this.renderTeam(team))}</tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n\n  renderList() {\n    const { teamsCount, hasFetched } = this.props;\n\n    if (!hasFetched) {\n      return null;\n    }\n\n    if (teamsCount > 0) {\n      return this.renderTeamList();\n    } else {\n      return this.renderEmptyList();\n    }\n  }\n\n  render() {\n    const { hasFetched, navModel } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>{this.renderList()}</Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n    teams: getTeams(state.teams),\n    searchQuery: getSearchQuery(state.teams),\n    teamsCount: getTeamsCount(state.teams),\n    hasFetched: state.teams.hasFetched,\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadTeams,\n  deleteTeam,\n  setSearchQuery,\n};\n\nexport default hot(module)(connectWithCleanUp(mapStateToProps, mapDispatchToProps, state => state.teams)(TeamList));\n","import { Team, TeamsState, TeamState, TeamMember, OrgRole, TeamPermissionLevel } from 'app/types';\nimport { User } from 'app/core/services/context_srv';\n\nexport const getSearchQuery = (state: TeamsState) => state.searchQuery;\nexport const getSearchMemberQuery = (state: TeamState) => state.searchMemberQuery;\nexport const getTeamGroups = (state: TeamState) => state.groups;\nexport const getTeamsCount = (state: TeamsState) => state.teams.length;\n\nexport const getTeam = (state: TeamState, currentTeamId: any): Team | null => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\n\nexport const getTeams = (state: TeamsState) => {\n  const regex = RegExp(state.searchQuery, 'i');\n\n  return state.teams.filter(team => {\n    return regex.test(team.name);\n  });\n};\n\nexport const getTeamMembers = (state: TeamState) => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n\n  return state.members.filter(member => {\n    return regex.test(member.login) || regex.test(member.email) || regex.test(member.name);\n  });\n};\n\nexport interface Config {\n  members: TeamMember[];\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isSignedInUserTeamAdmin = (config: Config): boolean => {\n  const { members, signedInUser, editorsCanAdmin } = config;\n  const userInMembers = members.find(m => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n\n  return isPermissionTeamAdmin({ permission, signedInUser, editorsCanAdmin });\n};\n\nexport interface PermissionConfig {\n  permission: TeamPermissionLevel;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isPermissionTeamAdmin = (config: PermissionConfig): boolean => {\n  const { permission, signedInUser, editorsCanAdmin } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};\n","import { getBackendSrv } from '@grafana/runtime';\n\nimport { TeamMember, ThunkResult } from 'app/types';\nimport { updateNavIndex } from 'app/core/actions';\nimport { buildNavModel } from './navModel';\nimport { teamGroupsLoaded, teamLoaded, teamMembersLoaded, teamsLoaded } from './reducers';\n\nexport function loadTeams(): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get('/api/teams/search', { perpage: 1000, page: 1 });\n    dispatch(teamsLoaded(response.teams));\n  };\n}\n\nexport function loadTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get(`/api/teams/${id}`);\n    dispatch(teamLoaded(response));\n    dispatch(updateNavIndex(buildNavModel(response)));\n  };\n}\n\nexport function loadTeamMembers(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/members`);\n    dispatch(teamMembersLoaded(response));\n  };\n}\n\nexport function addTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/members`, { userId: id });\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function removeTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/members/${id}`);\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function updateTeam(name: string, email: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().put(`/api/teams/${team.id}`, { name, email });\n    dispatch(loadTeam(team.id));\n  };\n}\n\nexport function loadTeamGroups(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/groups`);\n    dispatch(teamGroupsLoaded(response));\n  };\n}\n\nexport function addTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/groups`, { groupId: groupId });\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function removeTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/groups/${encodeURIComponent(groupId)}`);\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function deleteTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/teams/${id}`);\n    dispatch(loadTeams());\n  };\n}\n\nexport function updateTeamMember(member: TeamMember): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().put(`/api/teams/${member.teamId}/members/${member.userId}`, {\n      permission: member.permission,\n    });\n    dispatch(loadTeamMembers());\n  };\n}\n","import { connect, MapDispatchToPropsParam, MapStateToPropsParam, useDispatch } from 'react-redux';\nimport { cleanUpAction, StateSelector } from '../actions/cleanUp';\nimport React, { ComponentType, FunctionComponent, useEffect } from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nexport const connectWithCleanUp = <\n  TStateProps extends {} = {},\n  TDispatchProps = {},\n  TOwnProps = {},\n  State = {},\n  TSelector extends object = {},\n  Statics = {}\n>(\n  mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  stateSelector: StateSelector<TSelector>\n) => (Component: ComponentType<any>) => {\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n    // @ts-ignore\n  )(Component);\n\n  const ConnectedComponentWithCleanUp: FunctionComponent = props => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      return function cleanUp() {\n        dispatch(cleanUpAction({ stateSelector }));\n      };\n    }, []);\n    // @ts-ignore\n    return <ConnectedComponent {...props} />;\n  };\n\n  ConnectedComponentWithCleanUp.displayName = `ConnectWithCleanUp(${ConnectedComponent.displayName})`;\n  hoistNonReactStatics(ConnectedComponentWithCleanUp, Component);\n  type Hoisted = typeof ConnectedComponentWithCleanUp & Statics;\n\n  return ConnectedComponentWithCleanUp as Hoisted;\n};\n","import { Team, TeamPermissionLevel } from 'app/types';\nimport config from 'app/core/config';\nimport { NavModelItem, NavModel } from '@grafana/data';\n\nexport function buildNavModel(team: Team): NavModelItem {\n  const navModel = {\n    img: team.avatarUrl,\n    id: 'team-' + team.id,\n    subTitle: 'Manage members & settings',\n    url: '',\n    text: team.name,\n    breadcrumbs: [{ title: 'Teams', url: 'org/teams' }],\n    children: [\n      {\n        active: false,\n        icon: 'users-alt',\n        id: `team-members-${team.id}`,\n        text: 'Members',\n        url: `org/teams/edit/${team.id}/members`,\n      },\n      {\n        active: false,\n        icon: 'sliders-v-alt',\n        id: `team-settings-${team.id}`,\n        text: 'Settings',\n        url: `org/teams/edit/${team.id}/settings`,\n      },\n    ],\n  };\n\n  if (config.licenseInfo.hasLicense) {\n    navModel.children.push({\n      active: false,\n      icon: 'sync',\n      id: `team-groupsync-${team.id}`,\n      text: 'External group sync',\n      url: `org/teams/edit/${team.id}/groupsync`,\n    });\n  }\n\n  return navModel;\n}\n\nexport function getTeamLoadingNav(pageName: string): NavModel {\n  const main = buildNavModel({\n    avatarUrl: 'public/img/user_profile.png',\n    id: 1,\n    name: 'Loading',\n    email: 'loading',\n    memberCount: 0,\n    permission: TeamPermissionLevel.Member,\n  });\n\n  let node: NavModelItem;\n\n  // find active page\n  for (const child of main.children!) {\n    if (child.id!.indexOf(pageName) > 0) {\n      child.active = true;\n      node = child;\n      break;\n    }\n  }\n\n  return {\n    main: main,\n    node: node!,\n  };\n}\n"],"sourceRoot":""}