{"version":3,"file":"5498.533676849aa9b1b982b5.js","mappings":"6IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,IACf,EACA,SAAU,CACR,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACX,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAE,CACxD,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,CAC1B,CACF,EACIC,EAAW,CACb,SAAU,CACR,YACA,OACA,KACA,YACA,WACA,OACA,UACA,UACA,aACA,KACA,OACA,OACA,SACA,QACA,QACA,MACA,KACA,QACA,SACA,OACA,SACA,QACA,UACA,aACA,MACA,MACA,KACA,OACA,OACA,aACA,SACA,YACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,SACA,QACA,YACA,UACA,UACF,EACA,aAAc,CACZ,OACA,MACA,SACA,SACA,OACA,SACA,QACA,SACA,QACA,OACF,EACA,gBAAiB,CACf,WACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,UACA,QACA,QACA,WACA,UACA,UACA,WACA,KACA,SACA,OACA,QACA,WACA,SACA,UACA,QACA,QACA,UACA,OACA,WACA,MACA,YACA,OACA,OACA,OACA,SACA,WACA,MACA,WACA,SACA,UACA,YACA,SACA,WACA,MACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,SACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,YACA,SACA,SACA,UACA,OACA,UACF,EACA,UAAW,CAAC,OAAQ,QAAS,SAAU,SAAU,SAAU,SAAU,MAAO,MAAM,EAClF,QAAS,CACP,IACA,IACA,IACA,IACA,KACA,IACA,IACA,OACA,OACA,QACA,SACA,IACA,QACA,KACA,KACA,KACA,KACA,SACA,MACA,UACA,UACA,IACA,SACA,UACA,SACA,SACA,aACA,aACF,EACA,UAAW,CACT,OACA,KACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,KACA,KACA,MACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,MACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,KACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,IACA,KACA,KACF,EACA,iBAAkB,CAAC,YAAa,MAAM,EACtC,QAAS,2BACT,QAAS,WACT,UAAW,CACT,KAAM,CACJ,CACE,mBACA,CACE,MAAO,CACL,oBAAqB,CACnB,MAAO,aACP,KAAM,YACR,EACA,gBAAiB,OACjB,YAAa,UACb,aAAc,WACd,WAAY,UACZ,mBAAoB,UACpB,WAAY,YACd,CACF,CACF,EACA,CAAE,QAAS,aAAc,EACzB,CAAC,aAAc,WAAW,EAC1B,CAAC,WAAY,CAAE,MAAO,CAAE,aAAc,WAAY,WAAY,EAAG,CAAE,CAAC,EACpE,CAAC,2BAA4B,cAAc,EAC3C,CAAC,MAAO,QAAQ,EAChB,CAAC,QAAS,WAAW,EACrB,CAAC,IAAK,CAAE,MAAO,eAAgB,QAAS,QAAS,KAAM,SAAU,CAAC,CACpE,EACA,OAAQ,CACN,CAAC,UAAW,QAAQ,EACpB,CAAC,WAAY,eAAe,EAC5B,CAAC,IAAK,CAAE,MAAO,eAAgB,QAAS,SAAU,KAAM,MAAO,CAAC,CAClE,EACA,UAAW,CACT,CAAE,QAAS,aAAc,EACzB,CAAC,cAAe,WAAW,EAC3B,CAAC,QAAS,WAAW,EACrB,CAAC,GAAI,GAAI,MAAM,CACjB,EACA,WAAY,CACV,CAAC,aAAc,OAAO,EACtB,CAAC,WAAY,SAAS,CACxB,CACF,CACF,C","sources":["webpack://grafana/../../opt/drone/yarncache/monaco-editor-npm-0.34.0-2a8aa5269e-10a28c1fe0.zip/node_modules/monaco-editor/esm/vs/basic-languages/qsharp/qsharp.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.0(9d278685b078158491964f8fd7ac9628fffa0f30)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/qsharp/qsharp.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ]\n};\nvar language = {\n  keywords: [\n    \"namespace\",\n    \"open\",\n    \"as\",\n    \"operation\",\n    \"function\",\n    \"body\",\n    \"adjoint\",\n    \"newtype\",\n    \"controlled\",\n    \"if\",\n    \"elif\",\n    \"else\",\n    \"repeat\",\n    \"until\",\n    \"fixup\",\n    \"for\",\n    \"in\",\n    \"while\",\n    \"return\",\n    \"fail\",\n    \"within\",\n    \"apply\",\n    \"Adjoint\",\n    \"Controlled\",\n    \"Adj\",\n    \"Ctl\",\n    \"is\",\n    \"self\",\n    \"auto\",\n    \"distribute\",\n    \"invert\",\n    \"intrinsic\",\n    \"let\",\n    \"set\",\n    \"w/\",\n    \"new\",\n    \"not\",\n    \"and\",\n    \"or\",\n    \"use\",\n    \"borrow\",\n    \"using\",\n    \"borrowing\",\n    \"mutable\",\n    \"internal\"\n  ],\n  typeKeywords: [\n    \"Unit\",\n    \"Int\",\n    \"BigInt\",\n    \"Double\",\n    \"Bool\",\n    \"String\",\n    \"Qubit\",\n    \"Result\",\n    \"Pauli\",\n    \"Range\"\n  ],\n  invalidKeywords: [\n    \"abstract\",\n    \"base\",\n    \"bool\",\n    \"break\",\n    \"byte\",\n    \"case\",\n    \"catch\",\n    \"char\",\n    \"checked\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"decimal\",\n    \"default\",\n    \"delegate\",\n    \"do\",\n    \"double\",\n    \"enum\",\n    \"event\",\n    \"explicit\",\n    \"extern\",\n    \"finally\",\n    \"fixed\",\n    \"float\",\n    \"foreach\",\n    \"goto\",\n    \"implicit\",\n    \"int\",\n    \"interface\",\n    \"lock\",\n    \"long\",\n    \"null\",\n    \"object\",\n    \"operator\",\n    \"out\",\n    \"override\",\n    \"params\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"ref\",\n    \"sbyte\",\n    \"sealed\",\n    \"short\",\n    \"sizeof\",\n    \"stackalloc\",\n    \"static\",\n    \"string\",\n    \"struct\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"try\",\n    \"typeof\",\n    \"unit\",\n    \"ulong\",\n    \"unchecked\",\n    \"unsafe\",\n    \"ushort\",\n    \"virtual\",\n    \"void\",\n    \"volatile\"\n  ],\n  constants: [\"true\", \"false\", \"PauliI\", \"PauliX\", \"PauliY\", \"PauliZ\", \"One\", \"Zero\"],\n  builtin: [\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"H\",\n    \"HY\",\n    \"S\",\n    \"T\",\n    \"SWAP\",\n    \"CNOT\",\n    \"CCNOT\",\n    \"MultiX\",\n    \"R\",\n    \"RFrac\",\n    \"Rx\",\n    \"Ry\",\n    \"Rz\",\n    \"R1\",\n    \"R1Frac\",\n    \"Exp\",\n    \"ExpFrac\",\n    \"Measure\",\n    \"M\",\n    \"MultiM\",\n    \"Message\",\n    \"Length\",\n    \"Assert\",\n    \"AssertProb\",\n    \"AssertEqual\"\n  ],\n  operators: [\n    \"and=\",\n    \"<-\",\n    \"->\",\n    \"*\",\n    \"*=\",\n    \"@\",\n    \"!\",\n    \"^\",\n    \"^=\",\n    \":\",\n    \"::\",\n    \"..\",\n    \"==\",\n    \"...\",\n    \"=\",\n    \"=>\",\n    \">\",\n    \">=\",\n    \"<\",\n    \"<=\",\n    \"-\",\n    \"-=\",\n    \"!=\",\n    \"or=\",\n    \"%\",\n    \"%=\",\n    \"|\",\n    \"+\",\n    \"+=\",\n    \"?\",\n    \"/\",\n    \"/=\",\n    \"&&&\",\n    \"&&&=\",\n    \"^^^\",\n    \"^^^=\",\n    \">>>\",\n    \">>>=\",\n    \"<<<\",\n    \"<<<=\",\n    \"|||\",\n    \"|||=\",\n    \"~~~\",\n    \"_\",\n    \"w/\",\n    \"w/=\"\n  ],\n  namespaceFollows: [\"namespace\", \"open\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%@._]+/,\n  escapes: /\\\\[\\s\\S]/,\n  tokenizer: {\n    root: [\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            \"@namespaceFollows\": {\n              token: \"keyword.$0\",\n              next: \"@namespace\"\n            },\n            \"@typeKeywords\": \"type\",\n            \"@keywords\": \"keyword\",\n            \"@constants\": \"constant\",\n            \"@builtin\": \"keyword\",\n            \"@invalidKeywords\": \"invalid\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    namespace: [\n      { include: \"@whitespace\" },\n      [/[A-Za-z]\\w*/, \"namespace\"],\n      [/[\\.=]/, \"delimiter\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/(\\/\\/).*/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","language"],"sourceRoot":""}