{"version":3,"sources":["webpack:///./public/app/features/users/UsersTable.tsx","webpack:///./public/app/features/users/InviteeRow.tsx","webpack:///./public/app/features/users/InviteesTable.tsx","webpack:///./public/app/features/users/UsersListPage.tsx","webpack:///./public/app/features/users/state/selectors.ts","webpack:///./public/app/features/users/UsersActionBar.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","users","onRoleChange","onRemoveUser","a","createElement","className","style","width","map","user","index","key","userId","src","avatarUrl","login","email","lastSeenAtAge","value","role","onChange","event","target","option","onClick","InviteeRow_InviteeRow","_super","InviteeRow","_this","apply","this","arguments","copyUrlRef","Object","react","copyToClipboard","node","current","select","document","execCommand","tslib_es6","prototype","render","_a","invitee","revokeInvite","react_default","name","readOnly","url","position","bottom","right","opacity","zIndex","ref","code","mapDispatchToProps","actions","users_InviteeRow","es","InviteesTable_InviteesTable","InviteesTable","invitees","id","UsersListPage","call","updatedUser","tslib__WEBPACK_IMPORTED_MODULE_0__","updateUser","app_core_app_events__WEBPACK_IMPORTED_MODULE_9__","emit","title","text","yesText","icon","onConfirm","removeUser","onShowInvites","setState","prevState","showInvites","externalUserMngInfo","externalUserMngInfoHtml","_grafana_data__WEBPACK_IMPORTED_MODULE_4__","state","componentDidMount","fetchUsers","fetchInvitees","loadUsers","sent","loadInvitees","renderTable","react__WEBPACK_IMPORTED_MODULE_1___default","_InviteesTable__WEBPACK_IMPORTED_MODULE_8__","_UsersTable__WEBPACK_IMPORTED_MODULE_7__","navModel","hasFetched","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_5__","Contents","isLoading","Fragment","_UsersActionBar__WEBPACK_IMPORTED_MODULE_6__","dangerouslySetInnerHTML","__html","react__WEBPACK_IMPORTED_MODULE_1__","_state_actions__WEBPACK_IMPORTED_MODULE_10__","setUsersSearchQuery","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_11__","navIndex","_state_selectors__WEBPACK_IMPORTED_MODULE_12__","searchQuery","d","getUsers","getInvitees","getInviteesCount","getUsersSearchQuery","regex","RegExp","filter","test","length","UsersActionBar","canInvite","externalUserMngLinkName","externalUserMngLinkUrl","pendingInvitesCount","pendingInvitesButtonStyle","classnames__WEBPACK_IMPORTED_MODULE_3___default","btn","toggle-btn","active","usersButtonStyle","app_core_components_FilterInput_FilterInput__WEBPACK_IMPORTED_MODULE_6__","labelClassName","inputClassName","placeholder","marginLeft","href","rel","_state_actions__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_state_selectors__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"UsersListPage.3932bda029d2299a9d96.js","sourcesContent":["import React, { FC } from 'react';\nimport { OrgUser } from 'app/types';\n\nexport interface Props {\n  users: OrgUser[];\n  onRoleChange: (role: string, user: OrgUser) => void;\n  onRemoveUser: (user: OrgUser) => void;\n}\n\nconst UsersTable: FC<Props> = props => {\n  const { users, onRoleChange, onRemoveUser } = props;\n\n  return (\n    <table className=\"filter-table form-inline\">\n      <thead>\n        <tr>\n          <th />\n          <th>Login</th>\n          <th>Email</th>\n          <th>Seen</th>\n          <th>Role</th>\n          <th style={{ width: '34px' }} />\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user, index) => {\n          return (\n            <tr key={`${user.userId}-${index}`}>\n              <td className=\"width-4 text-center\">\n                <img className=\"filter-table__avatar\" src={user.avatarUrl} />\n              </td>\n              <td>{user.login}</td>\n              <td>\n                <span className=\"ellipsis\">{user.email}</span>\n              </td>\n              <td>{user.lastSeenAtAge}</td>\n              <td>\n                <div className=\"gf-form-select-wrapper width-12\">\n                  <select\n                    value={user.role}\n                    className=\"gf-form-input\"\n                    onChange={event => onRoleChange(event.target.value, user)}\n                  >\n                    {['Viewer', 'Editor', 'Admin'].map((option, index) => {\n                      return (\n                        <option value={option} key={`${option}-${index}`}>\n                          {option}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </td>\n              <td>\n                <div onClick={() => onRemoveUser(user)} className=\"btn btn-danger btn-small\">\n                  <i className=\"fa fa-remove\" />\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UsersTable;\n","import React, { createRef, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Invitee } from 'app/types';\nimport { revokeInvite } from './state/actions';\n\nexport interface Props {\n  invitee: Invitee;\n  revokeInvite: typeof revokeInvite;\n}\n\nclass InviteeRow extends PureComponent<Props> {\n  private copyUrlRef = createRef<HTMLTextAreaElement>();\n\n  copyToClipboard = () => {\n    const node = this.copyUrlRef.current;\n\n    if (node) {\n      node.select();\n      document.execCommand('copy');\n    }\n  };\n\n  render() {\n    const { invitee, revokeInvite } = this.props;\n    return (\n      <tr>\n        <td>{invitee.email}</td>\n        <td>{invitee.name}</td>\n        <td className=\"text-right\">\n          <button className=\"btn btn-inverse btn-small\" onClick={this.copyToClipboard}>\n            <textarea\n              readOnly={true}\n              value={invitee.url}\n              style={{ position: 'absolute', bottom: 0, right: 0, opacity: 0, zIndex: -10 }}\n              ref={this.copyUrlRef}\n            />\n            Copy Invite\n          </button>\n          &nbsp;\n        </td>\n        <td>\n          <button className=\"btn btn-danger btn-small\" onClick={() => revokeInvite(invitee.code)}>\n            <i className=\"fa fa-remove\" />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  revokeInvite,\n};\n\nexport default connect(\n  () => {\n    return {};\n  },\n  mapDispatchToProps\n)(InviteeRow);\n","import React, { PureComponent } from 'react';\nimport { Invitee } from 'app/types';\nimport InviteeRow from './InviteeRow';\n\nexport interface Props {\n  invitees: Invitee[];\n}\n\nexport default class InviteesTable extends PureComponent<Props> {\n  render() {\n    const { invitees } = this.props;\n\n    return (\n      <table className=\"filter-table form-inline\">\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Name</th>\n            <th />\n            <th style={{ width: '34px' }} />\n          </tr>\n        </thead>\n        <tbody>\n          {invitees.map((invitee, index) => {\n            return <InviteeRow key={`${invitee.id}-${index}`} invitee={invitee} />;\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { renderMarkdown } from '@grafana/data';\nimport Page from 'app/core/components/Page/Page';\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport InviteesTable from './InviteesTable';\nimport { Invitee, OrgUser } from 'app/types';\nimport appEvents from 'app/core/app_events';\nimport { loadUsers, loadInvitees, setUsersSearchQuery, updateUser, removeUser } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getInvitees, getUsers, getUsersSearchQuery } from './state/selectors';\nimport { NavModel } from '@grafana/data';\n\nexport interface Props {\n  navModel: NavModel;\n  invitees: Invitee[];\n  users: OrgUser[];\n  searchQuery: string;\n  externalUserMngInfo: string;\n  hasFetched: boolean;\n  loadUsers: typeof loadUsers;\n  loadInvitees: typeof loadInvitees;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  updateUser: typeof updateUser;\n  removeUser: typeof removeUser;\n}\n\nexport interface State {\n  showInvites: boolean;\n}\n\nexport class UsersListPage extends PureComponent<Props, State> {\n  externalUserMngInfoHtml: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.loadInvitees();\n  }\n\n  onRoleChange = (role: string, user: OrgUser) => {\n    const updatedUser = { ...user, role: role };\n\n    this.props.updateUser(updatedUser);\n  };\n\n  onRemoveUser = (user: OrgUser) => {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete user ' + user.login + '?',\n      yesText: 'Delete',\n      icon: 'fa-warning',\n      onConfirm: () => {\n        this.props.removeUser(user.userId);\n      },\n    });\n  };\n\n  onShowInvites = () => {\n    this.setState(prevState => ({\n      showInvites: !prevState.showInvites,\n    }));\n  };\n\n  renderTable() {\n    const { invitees, users } = this.props;\n\n    if (this.state.showInvites) {\n      return <InviteesTable invitees={invitees} />;\n    } else {\n      return (\n        <UsersTable\n          users={users}\n          onRoleChange={(role, user) => this.onRoleChange(role, user)}\n          onRemoveUser={user => this.onRemoveUser(user)}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { navModel, hasFetched } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>\n          <>\n            <UsersActionBar onShowInvites={this.onShowInvites} showInvites={this.state.showInvites} />\n            {externalUserMngInfoHtml && (\n              <div className=\"grafana-info-box\" dangerouslySetInnerHTML={{ __html: externalUserMngInfoHtml }} />\n            )}\n            {hasFetched && this.renderTable()}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    invitees: getInvitees(state.users),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadInvitees,\n  setUsersSearchQuery,\n  updateUser,\n  removeUser,\n};\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UsersListPage)\n);\n","import { UsersState } from 'app/types';\n\nexport const getUsers = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.users.filter(user => {\n    return regex.test(user.login) || regex.test(user.email);\n  });\n};\n\nexport const getInvitees = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.invitees.filter(invitee => {\n    return regex.test(invitee.name) || regex.test(invitee.email);\n  });\n};\n\nexport const getInviteesCount = (state: UsersState) => state.invitees.length;\nexport const getUsersSearchQuery = (state: UsersState) => state.searchQuery;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { setUsersSearchQuery } from './state/actions';\nimport { getInviteesCount, getUsersSearchQuery } from './state/selectors';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\n\nexport interface Props {\n  searchQuery: string;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  onShowInvites: () => void;\n  pendingInvitesCount: number;\n  canInvite: boolean;\n  showInvites: boolean;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n}\n\nexport class UsersActionBar extends PureComponent<Props> {\n  render() {\n    const {\n      canInvite,\n      externalUserMngLinkName,\n      externalUserMngLinkUrl,\n      searchQuery,\n      pendingInvitesCount,\n      setUsersSearchQuery,\n      onShowInvites,\n      showInvites,\n    } = this.props;\n\n    const pendingInvitesButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: showInvites,\n    });\n\n    const usersButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: !showInvites,\n    });\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput\n            labelClassName=\"gf-form--has-input-icon\"\n            inputClassName=\"gf-form-input width-20\"\n            value={searchQuery}\n            onChange={setUsersSearchQuery}\n            placeholder=\"Filter by name or type\"\n          />\n          {pendingInvitesCount > 0 && (\n            <div style={{ marginLeft: '1rem' }}>\n              <button className={usersButtonStyle} key=\"users\" onClick={onShowInvites}>\n                Users\n              </button>\n              <button className={pendingInvitesButtonStyle} onClick={onShowInvites} key=\"pending-invites\">\n                Pending Invites ({pendingInvitesCount})\n              </button>\n            </div>\n          )}\n          <div className=\"page-action-bar__spacer\" />\n          {canInvite && (\n            <a className=\"btn btn-primary\" href=\"org/users/invite\">\n              <span>Invite</span>\n            </a>\n          )}\n          {externalUserMngLinkUrl && (\n            <a className=\"btn btn-primary\" href={externalUserMngLinkUrl} target=\"_blank\" rel=\"noopener\">\n              <i className=\"fa fa-external-link-square\" /> {externalUserMngLinkName}\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchQuery: getUsersSearchQuery(state.users),\n    pendingInvitesCount: getInviteesCount(state.users),\n    externalUserMngLinkName: state.users.externalUserMngLinkName,\n    externalUserMngLinkUrl: state.users.externalUserMngLinkUrl,\n    canInvite: state.users.canInvite,\n  };\n}\n\nconst mapDispatchToProps = {\n  setUsersSearchQuery,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersActionBar);\n"],"sourceRoot":""}