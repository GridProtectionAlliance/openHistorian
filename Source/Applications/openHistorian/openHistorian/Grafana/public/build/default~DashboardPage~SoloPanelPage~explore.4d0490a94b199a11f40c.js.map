{"version":3,"sources":["webpack:///./public/app/features/profile/state/selectors.ts","webpack:///./public/app/features/explore/state/selectors.ts","webpack:///./public/app/core/components/Animations/FadeIn.tsx","webpack:///./public/app/features/explore/state/actions.ts","webpack:///./public/app/core/components/Select/DataSourcePicker.tsx","webpack:///./node_modules/react-virtualized-auto-sizer/dist/index.esm.js"],"names":["__webpack_require__","d","__webpack_exports__","getTimeZone","state","timeZone","deduplicatedRowsSelector","getExploreDatasources","reselect__WEBPACK_IMPORTED_MODULE_0__","app_core_logs_model__WEBPACK_IMPORTED_MODULE_1__","_plugins_datasource_srv__WEBPACK_IMPORTED_MODULE_2__","Object","logsResult","rows","hiddenLogLevels","dedupStrategy","length","filteredRows","Set","getExternal","map","ds","value","name","meta","FadeIn","props","defaultStyle","transition","duration","opacity","transitionStyles","exited","display","entering","entered","exiting","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_transition_group_Transition__WEBPACK_IMPORTED_MODULE_2___default","in","timeout","unmountOnExit","onExited","style","tslib__WEBPACK_IMPORTED_MODULE_0__","children","updateExploreUIState","exploreId","uiStateFragment","dispatch","_actionTypes__WEBPACK_IMPORTED_MODULE_10__","stateSave","addQueryRow","index","getState","queries","explore","query","app_core_utils_explore__WEBPACK_IMPORTED_MODULE_8__","changeDatasource","datasource","_this","this","newDataSourceInstance","app_features_plugins_datasource_srv__WEBPACK_IMPORTED_MODULE_7__","get","_f","sent","currentDataSourceInstance","datasourceInstance","orgId","user","_a","getVersion","datasourceVersion","prometheusToLoki","_c","_b","_e","_d","version","mode","app_types_explore__WEBPACK_IMPORTED_MODULE_9__","Logs","undefined","importQueries","isLive","changeRefreshInterval","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","offOption","loadDatasource","runQueries","changeMode","changeQuery","override","refId","key","changeSize","height","width","updateTimeRange","options","syncedTimes","updateTime","left","right","refreshInterval","clearQueries","initializeExplore","datasourceName","range","containerWidth","eventBridge","ui","originPanelId","_selectors__WEBPACK_IMPORTED_MODULE_16__","loadExploreDatasourcesAndSetDatasource","sourceDataSource","targetDataSource","importedQueries","id","nextQueries","instance","requestedDatasourceName","init","err","console","log","historyKey","history","app_core_store__WEBPACK_IMPORTED_MODULE_6__","getObject","set","loadDatasourceReady","modifyQueries","modification","modifier","preventSubmit","exploreItemState","live","scanning","queryResponse","querySubscription","showingGraph","showingTable","minInterval","interval","queryOptions","maxDataPoints","liveStreaming","datasourceId","transaction","firstResponse","newQuerySub","_dashboard_state_runRequest__WEBPACK_IMPORTED_MODULE_15__","request","pipe","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","data","subscribe","error","nextHistory","response","_grafana_data__WEBPACK_IMPORTED_MODULE_5__","Done","series","range_1","app_core_utils_timePicker__WEBPACK_IMPORTED_MODULE_12__","absoluteRange","toRawTimeRange","from","raw","valueOf","toString","to","split","replace","urlReplaced","urlStates","leftUrlState","showingLogs","rightUrlState","_core_actions__WEBPACK_IMPORTED_MODULE_13__","config","absRange","actionRange","rawRange","itemState","app_features_profile_state_selectors__WEBPACK_IMPORTED_MODULE_11__","_dashboard_services_TimeSrv__WEBPACK_IMPORTED_MODULE_14__","time","refresh","getTimezone","timeRangeUpdated","scanStart","setQueries","rawQueries","splitClose","itemId","splitOpen","leftState","queryState","location","urlState","slice","syncTimes","rightState","isTimeSynced","togglePanelActionCreator","actionCreator","isPanelVisible","uiFragmentStateUpdate","shouldRunQueries","type","toggleGraph","toggleTable","changeDedupStrategy","refreshExplore","initialized","update","urlRange","refreshQueries","push","initialQueries","navigateToExplore","panel","dependencies","getDataSourceSrv","getTimeSrv","getExploreUrl","openInNewWindow","datasourceSrv","panelTargets","targets","panelDatasource","timeSrv","path","DataSourcePicker","_super","call","onChange","item","datasources","find","prototype","render","current","autoFocus","hideTextValue","onBlur","openMenuOnFocus","showLoading","label","imgUrl","info","logos","small","substr","loading","hideText","className","_grafana_ui__WEBPACK_IMPORTED_MODULE_2__","isMulti","isClearable","backspaceRemovesValue","maxMenuHeight","placeholder","noOptionsMessage","defaultProps","react__WEBPACK_IMPORTED_MODULE_1__","global","react__WEBPACK_IMPORTED_MODULE_0__","createDetectElementResize","nonce","_window","window","self","cancel","raf","attachEvent","document","requestFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetWidth","offsetHeight","scrollListener","e","target","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","startEvents","elm","animationName","i","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","classCallCheck","Constructor","TypeError","createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","possibleConstructorReturn","ReferenceError","AutoSizer","_React$PureComponent","_ref","_temp","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","defaultHeight","defaultWidth","_onResize","_this$props","disableHeight","disableWidth","onResize","_parentNode","_height","_width","_style","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","setState","_setRef","autoSizer","_autoSizer","subClass","superClass","create","constructor","setPrototypeOf","inherits","parentNode","defaultView","HTMLElement","_detectElementResize","_props","_state","outerStyle","overflow","childParams","bailoutOnChildren","ref"],"mappings":"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","file":"default~DashboardPage~SoloPanelPage~explore.4d0490a94b199a11f40c.js","sourcesContent":["import { UserState } from 'app/types';\n\nexport const getTimeZone = (state: UserState) => state.timeZone;\n","import { createSelector } from 'reselect';\nimport { ExploreItemState } from 'app/types';\nimport { filterLogLevels, dedupLogRows } from 'app/core/logs_model';\nimport { getDatasourceSrv } from '../../plugins/datasource_srv';\nimport { DataSourceSelectItem } from '@grafana/data';\n\nconst logsRowsSelector = (state: ExploreItemState) => state.logsResult && state.logsResult.rows;\nconst hiddenLogLevelsSelector = (state: ExploreItemState) => state.hiddenLogLevels;\nconst dedupStrategySelector = (state: ExploreItemState) => state.dedupStrategy;\nexport const deduplicatedRowsSelector = createSelector(\n  logsRowsSelector,\n  hiddenLogLevelsSelector,\n  dedupStrategySelector,\n  function dedupRows(rows, hiddenLogLevels, dedupStrategy) {\n    if (!(rows && rows.length)) {\n      return rows;\n    }\n    const filteredRows = filterLogLevels(rows, new Set(hiddenLogLevels));\n    return dedupLogRows(filteredRows, dedupStrategy);\n  }\n);\n\nexport const getExploreDatasources = (): DataSourceSelectItem[] => {\n  return getDatasourceSrv()\n    .getExternal()\n    .map(\n      (ds: any) =>\n        ({\n          value: ds.name,\n          name: ds.name,\n          meta: ds.meta,\n        } as DataSourceSelectItem)\n    );\n};\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler;\n}\n\nexport const FadeIn: FC<Props> = props => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {state => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","// Libraries\nimport { map, throttleTime } from 'rxjs/operators';\nimport { identity } from 'rxjs';\nimport { ActionCreatorWithPayload, PayloadAction } from '@reduxjs/toolkit';\nimport { DataSourceSrv } from '@grafana/runtime';\nimport { RefreshPicker } from '@grafana/ui';\nimport {\n  AbsoluteTimeRange,\n  DataQuery,\n  DataSourceApi,\n  dateTimeForTimeZone,\n  isDateTime,\n  LoadingState,\n  LogsDedupStrategy,\n  PanelData,\n  QueryFixAction,\n  RawTimeRange,\n  TimeRange,\n} from '@grafana/data';\n// Services & Utils\nimport store from 'app/core/store';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { Emitter } from 'app/core/core';\nimport {\n  buildQueryTransaction,\n  clearQueryKeys,\n  ensureQueries,\n  generateEmptyQuery,\n  generateNewKeyAndAddRefIdIfMissing,\n  GetExploreUrlArguments,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  hasNonEmptyQuery,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n  serializeStateToUrlParam,\n  stopQueryState,\n  updateHistory,\n} from 'app/core/utils/explore';\n// Types\nimport { ExploreItemState, ExploreUrlState, ThunkResult } from 'app/types';\n\nimport { ExploreId, ExploreMode, ExploreUIState, QueryOptions } from 'app/types/explore';\nimport {\n  addQueryRowAction,\n  changeModeAction,\n  changeQueryAction,\n  changeRangeAction,\n  changeRefreshIntervalAction,\n  ChangeRefreshIntervalPayload,\n  changeSizeAction,\n  ChangeSizePayload,\n  clearQueriesAction,\n  historyUpdatedAction,\n  initializeExploreAction,\n  loadDatasourceMissingAction,\n  loadDatasourcePendingAction,\n  loadDatasourceReadyAction,\n  LoadDatasourceReadyPayload,\n  modifyQueriesAction,\n  queriesImportedAction,\n  queryStoreSubscriptionAction,\n  queryStreamUpdatedAction,\n  scanStartAction,\n  scanStopAction,\n  setQueriesAction,\n  setUrlReplacedAction,\n  splitCloseAction,\n  splitOpenAction,\n  syncTimesAction,\n  toggleGraphAction,\n  ToggleGraphPayload,\n  toggleTableAction,\n  ToggleTablePayload,\n  updateDatasourceInstanceAction,\n  updateUIStateAction,\n} from './actionTypes';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { getShiftedTimeRange } from 'app/core/utils/timePicker';\nimport { updateLocation } from '../../../core/actions';\nimport { getTimeSrv, TimeSrv } from '../../dashboard/services/TimeSrv';\nimport { preProcessPanelData, runRequest } from '../../dashboard/state/runRequest';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { getExploreDatasources } from './selectors';\n\n/**\n * Updates UI state and save it to the URL\n */\nconst updateExploreUIState = (exploreId: ExploreId, uiStateFragment: Partial<ExploreUIState>): ThunkResult<void> => {\n  return dispatch => {\n    dispatch(updateUIStateAction({ exploreId, ...uiStateFragment }));\n    dispatch(stateSave());\n  };\n};\n\n/**\n * Adds a query row after the row with the given index.\n */\nexport function addQueryRow(exploreId: ExploreId, index: number): ThunkResult<void> {\n  return (dispatch, getState) => {\n    const queries = getState().explore[exploreId].queries;\n    const query = generateEmptyQuery(queries, index);\n\n    dispatch(addQueryRowAction({ exploreId, index, query }));\n  };\n}\n\n/**\n * Loads a new datasource identified by the given name.\n */\nexport function changeDatasource(exploreId: ExploreId, datasource: string): ThunkResult<void> {\n  return async (dispatch, getState) => {\n    let newDataSourceInstance: DataSourceApi = null;\n\n    if (!datasource) {\n      newDataSourceInstance = await getDatasourceSrv().get();\n    } else {\n      newDataSourceInstance = await getDatasourceSrv().get(datasource);\n    }\n\n    const currentDataSourceInstance = getState().explore[exploreId].datasourceInstance;\n    const queries = getState().explore[exploreId].queries;\n    const orgId = getState().user.orgId;\n    const datasourceVersion = newDataSourceInstance.getVersion && (await newDataSourceInstance.getVersion());\n\n    // HACK: Switch to logs mode if coming from Prometheus to Loki\n    const prometheusToLoki =\n      currentDataSourceInstance?.meta?.name === 'Prometheus' && newDataSourceInstance?.meta?.name === 'Loki';\n\n    dispatch(\n      updateDatasourceInstanceAction({\n        exploreId,\n        datasourceInstance: newDataSourceInstance,\n        version: datasourceVersion,\n        mode: prometheusToLoki ? ExploreMode.Logs : undefined,\n      })\n    );\n\n    await dispatch(importQueries(exploreId, queries, currentDataSourceInstance, newDataSourceInstance));\n\n    if (getState().explore[exploreId].isLive) {\n      dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    }\n\n    await dispatch(loadDatasource(exploreId, newDataSourceInstance, orgId));\n    dispatch(runQueries(exploreId));\n  };\n}\n\n/**\n * Change the display mode in Explore.\n */\nexport function changeMode(exploreId: ExploreId, mode: ExploreMode): ThunkResult<void> {\n  return dispatch => {\n    dispatch(changeModeAction({ exploreId, mode }));\n  };\n}\n\n/**\n * Query change handler for the query row with the given index.\n * If `override` is reset the query modifications and run the queries. Use this to set queries via a link.\n */\nexport function changeQuery(\n  exploreId: ExploreId,\n  query: DataQuery,\n  index: number,\n  override = false\n): ThunkResult<void> {\n  return (dispatch, getState) => {\n    // Null query means reset\n    if (query === null) {\n      const queries = getState().explore[exploreId].queries;\n      const { refId, key } = queries[index];\n      query = generateNewKeyAndAddRefIdIfMissing({ refId, key }, queries, index);\n    }\n\n    dispatch(changeQueryAction({ exploreId, query, index, override }));\n    if (override) {\n      dispatch(runQueries(exploreId));\n    }\n  };\n}\n\n/**\n * Keep track of the Explore container size, in particular the width.\n * The width will be used to calculate graph intervals (number of datapoints).\n */\nexport function changeSize(\n  exploreId: ExploreId,\n  { height, width }: { height: number; width: number }\n): PayloadAction<ChangeSizePayload> {\n  return changeSizeAction({ exploreId, height, width });\n}\n\nexport const updateTimeRange = (options: {\n  exploreId: ExploreId;\n  rawRange?: RawTimeRange;\n  absoluteRange?: AbsoluteTimeRange;\n}): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    const { syncedTimes } = getState().explore;\n    if (syncedTimes) {\n      dispatch(updateTime({ ...options, exploreId: ExploreId.left }));\n      dispatch(runQueries(ExploreId.left));\n      dispatch(updateTime({ ...options, exploreId: ExploreId.right }));\n      dispatch(runQueries(ExploreId.right));\n    } else {\n      dispatch(updateTime({ ...options }));\n      dispatch(runQueries(options.exploreId));\n    }\n  };\n};\n/**\n * Change the refresh interval of Explore. Called from the Refresh picker.\n */\nexport function changeRefreshInterval(\n  exploreId: ExploreId,\n  refreshInterval: string\n): PayloadAction<ChangeRefreshIntervalPayload> {\n  return changeRefreshIntervalAction({ exploreId, refreshInterval });\n}\n\n/**\n * Clear all queries and results.\n */\nexport function clearQueries(exploreId: ExploreId): ThunkResult<void> {\n  return dispatch => {\n    dispatch(scanStopAction({ exploreId }));\n    dispatch(clearQueriesAction({ exploreId }));\n    dispatch(stateSave());\n  };\n}\n\n/**\n * Loads all explore data sources and sets the chosen datasource.\n * If there are no datasources a missing datasource action is dispatched.\n */\nexport function loadExploreDatasourcesAndSetDatasource(\n  exploreId: ExploreId,\n  datasourceName: string\n): ThunkResult<void> {\n  return dispatch => {\n    const exploreDatasources = getExploreDatasources();\n\n    if (exploreDatasources.length >= 1) {\n      dispatch(changeDatasource(exploreId, datasourceName));\n    } else {\n      dispatch(loadDatasourceMissingAction({ exploreId }));\n    }\n  };\n}\n\n/**\n * Initialize Explore state with state from the URL and the React component.\n * Call this only on components for with the Explore state has not been initialized.\n */\nexport function initializeExplore(\n  exploreId: ExploreId,\n  datasourceName: string,\n  queries: DataQuery[],\n  range: TimeRange,\n  mode: ExploreMode,\n  containerWidth: number,\n  eventBridge: Emitter,\n  ui: ExploreUIState,\n  originPanelId: number\n): ThunkResult<void> {\n  return async (dispatch, getState) => {\n    dispatch(loadExploreDatasourcesAndSetDatasource(exploreId, datasourceName));\n    dispatch(\n      initializeExploreAction({\n        exploreId,\n        containerWidth,\n        eventBridge,\n        queries,\n        range,\n        mode,\n        ui,\n        originPanelId,\n      })\n    );\n    dispatch(updateTime({ exploreId }));\n  };\n}\n\n/**\n * Datasource loading was successfully completed.\n */\nexport const loadDatasourceReady = (\n  exploreId: ExploreId,\n  instance: DataSourceApi,\n  orgId: number\n): PayloadAction<LoadDatasourceReadyPayload> => {\n  const historyKey = `grafana.explore.history.${instance.meta.id}`;\n  const history = store.getObject(historyKey, []);\n  // Save last-used datasource\n\n  store.set(lastUsedDatasourceKeyForOrgId(orgId), instance.name);\n\n  return loadDatasourceReadyAction({\n    exploreId,\n    history,\n  });\n};\n\n/**\n * Import queries from previous datasource if possible eg Loki and Prometheus have similar query language so the\n * labels part can be reused to get similar data.\n * @param exploreId\n * @param queries\n * @param sourceDataSource\n * @param targetDataSource\n */\nexport const importQueries = (\n  exploreId: ExploreId,\n  queries: DataQuery[],\n  sourceDataSource: DataSourceApi,\n  targetDataSource: DataSourceApi\n): ThunkResult<void> => {\n  return async dispatch => {\n    if (!sourceDataSource) {\n      // explore not initialized\n      dispatch(queriesImportedAction({ exploreId, queries }));\n      return;\n    }\n\n    let importedQueries = queries;\n    // Check if queries can be imported from previously selected datasource\n    if (sourceDataSource.meta.id === targetDataSource.meta.id) {\n      // Keep same queries if same type of datasource\n      importedQueries = [...queries];\n    } else if (targetDataSource.importQueries) {\n      // Datasource-specific importers\n      importedQueries = await targetDataSource.importQueries(queries, sourceDataSource.meta);\n    } else {\n      // Default is blank queries\n      importedQueries = ensureQueries();\n    }\n\n    const nextQueries = ensureQueries(importedQueries);\n\n    dispatch(queriesImportedAction({ exploreId, queries: nextQueries }));\n  };\n};\n\n/**\n * Main action to asynchronously load a datasource. Dispatches lots of smaller actions for feedback.\n */\nexport const loadDatasource = (exploreId: ExploreId, instance: DataSourceApi, orgId: number): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const datasourceName = instance.name;\n\n    // Keep ID to track selection\n    dispatch(loadDatasourcePendingAction({ exploreId, requestedDatasourceName: datasourceName }));\n\n    if (instance.init) {\n      try {\n        instance.init();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    if (datasourceName !== getState().explore[exploreId].requestedDatasourceName) {\n      // User already changed datasource, discard results\n      return;\n    }\n\n    dispatch(loadDatasourceReady(exploreId, instance, orgId));\n  };\n};\n\n/**\n * Action to modify a query given a datasource-specific modifier action.\n * @param exploreId Explore area\n * @param modification Action object with a type, e.g., ADD_FILTER\n * @param index Optional query row index. If omitted, the modification is applied to all query rows.\n * @param modifier Function that executes the modification, typically `datasourceInstance.modifyQueries`.\n */\nexport function modifyQueries(\n  exploreId: ExploreId,\n  modification: QueryFixAction,\n  modifier: any,\n  index?: number\n): ThunkResult<void> {\n  return dispatch => {\n    dispatch(modifyQueriesAction({ exploreId, modification, index, modifier }));\n    if (!modification.preventSubmit) {\n      dispatch(runQueries(exploreId));\n    }\n  };\n}\n\n/**\n * Main action to run queries and dispatches sub-actions based on which result viewers are active\n */\nexport const runQueries = (exploreId: ExploreId): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    dispatch(updateTime({ exploreId }));\n\n    const exploreItemState = getState().explore[exploreId];\n    const {\n      datasourceInstance,\n      queries,\n      containerWidth,\n      isLive: live,\n      range,\n      scanning,\n      queryResponse,\n      querySubscription,\n      history,\n      mode,\n      showingGraph,\n      showingTable,\n    } = exploreItemState;\n\n    if (!hasNonEmptyQuery(queries)) {\n      dispatch(clearQueriesAction({ exploreId }));\n      dispatch(stateSave()); // Remember to save to state and update location\n      return;\n    }\n\n    // Some datasource's query builders allow per-query interval limits,\n    // but we're using the datasource interval limit for now\n    const minInterval = datasourceInstance.interval;\n\n    stopQueryState(querySubscription);\n\n    const queryOptions: QueryOptions = {\n      minInterval,\n      // maxDataPoints is used in:\n      // Loki - used for logs streaming for buffer size, with undefined it falls back to datasource config if it supports that.\n      // Elastic - limits the number of datapoints for the counts query and for logs it has hardcoded limit.\n      // Influx - used to correctly display logs in graph\n      maxDataPoints: mode === ExploreMode.Logs && datasourceInstance.name === 'Loki' ? undefined : containerWidth,\n      liveStreaming: live,\n      showingGraph,\n      showingTable,\n      mode,\n    };\n\n    const datasourceId = datasourceInstance.meta.id;\n    const transaction = buildQueryTransaction(queries, queryOptions, range, scanning);\n\n    let firstResponse = true;\n\n    const newQuerySub = runRequest(datasourceInstance, transaction.request)\n      .pipe(\n        // Simple throttle for live tailing, in case of > 1000 rows per interval we spend about 200ms on processing and\n        // rendering. In case this is optimized this can be tweaked, but also it should be only as fast as user\n        // actually can see what is happening.\n        live ? throttleTime(500) : identity,\n        map((data: PanelData) => preProcessPanelData(data, queryResponse))\n      )\n      .subscribe((data: PanelData) => {\n        if (!data.error && firstResponse) {\n          // Side-effect: Saving history in localstorage\n          const nextHistory = updateHistory(history, datasourceId, queries);\n          dispatch(historyUpdatedAction({ exploreId, history: nextHistory }));\n\n          // We save queries to the URL here so that only successfully run queries change the URL.\n          dispatch(stateSave());\n        }\n\n        firstResponse = false;\n\n        dispatch(queryStreamUpdatedAction({ exploreId, response: data }));\n\n        // Keep scanning for results if this was the last scanning transaction\n        if (getState().explore[exploreId].scanning) {\n          if (data.state === LoadingState.Done && data.series.length === 0) {\n            const range = getShiftedTimeRange(-1, getState().explore[exploreId].range);\n            dispatch(updateTime({ exploreId, absoluteRange: range }));\n            dispatch(runQueries(exploreId));\n          } else {\n            // We can stop scanning if we have a result\n            dispatch(scanStopAction({ exploreId }));\n          }\n        }\n      });\n\n    dispatch(queryStoreSubscriptionAction({ exploreId, querySubscription: newQuerySub }));\n  };\n};\n\nconst toRawTimeRange = (range: TimeRange): RawTimeRange => {\n  let from = range.raw.from;\n  if (isDateTime(from)) {\n    from = from.valueOf().toString(10);\n  }\n\n  let to = range.raw.to;\n  if (isDateTime(to)) {\n    to = to.valueOf().toString(10);\n  }\n\n  return {\n    from,\n    to,\n  };\n};\n\n/**\n * Save local redux state back to the URL. Should be called when there is some change that should affect the URL.\n * Not all of the redux state is reflected in URL though.\n */\nexport const stateSave = (): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    const { left, right, split } = getState().explore;\n    const orgId = getState().user.orgId.toString();\n    const replace = left && left.urlReplaced === false;\n    const urlStates: { [index: string]: string } = { orgId };\n    const leftUrlState: ExploreUrlState = {\n      datasource: left.datasourceInstance.name,\n      queries: left.queries.map(clearQueryKeys),\n      range: toRawTimeRange(left.range),\n      mode: left.mode,\n      ui: {\n        showingGraph: left.showingGraph,\n        showingLogs: true,\n        showingTable: left.showingTable,\n        dedupStrategy: left.dedupStrategy,\n      },\n    };\n    urlStates.left = serializeStateToUrlParam(leftUrlState, true);\n    if (split) {\n      const rightUrlState: ExploreUrlState = {\n        datasource: right.datasourceInstance.name,\n        queries: right.queries.map(clearQueryKeys),\n        range: toRawTimeRange(right.range),\n        mode: right.mode,\n        ui: {\n          showingGraph: right.showingGraph,\n          showingLogs: true,\n          showingTable: right.showingTable,\n          dedupStrategy: right.dedupStrategy,\n        },\n      };\n\n      urlStates.right = serializeStateToUrlParam(rightUrlState, true);\n    }\n\n    dispatch(updateLocation({ query: urlStates, replace }));\n    if (replace) {\n      dispatch(setUrlReplacedAction({ exploreId: ExploreId.left }));\n    }\n  };\n};\n\nexport const updateTime = (config: {\n  exploreId: ExploreId;\n  rawRange?: RawTimeRange;\n  absoluteRange?: AbsoluteTimeRange;\n}): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    const { exploreId, absoluteRange: absRange, rawRange: actionRange } = config;\n    const itemState = getState().explore[exploreId];\n    const timeZone = getTimeZone(getState().user);\n    const { range: rangeInState } = itemState;\n    let rawRange: RawTimeRange = rangeInState.raw;\n\n    if (absRange) {\n      rawRange = {\n        from: dateTimeForTimeZone(timeZone, absRange.from),\n        to: dateTimeForTimeZone(timeZone, absRange.to),\n      };\n    }\n\n    if (actionRange) {\n      rawRange = actionRange;\n    }\n\n    const range = getTimeRange(timeZone, rawRange);\n    const absoluteRange: AbsoluteTimeRange = { from: range.from.valueOf(), to: range.to.valueOf() };\n\n    getTimeSrv().init({\n      time: range.raw,\n      refresh: false,\n      getTimezone: () => timeZone,\n      timeRangeUpdated: (): any => undefined,\n    });\n\n    dispatch(changeRangeAction({ exploreId, range, absoluteRange }));\n  };\n};\n\n/**\n * Start a scan for more results using the given scanner.\n * @param exploreId Explore area\n * @param scanner Function that a) returns a new time range and b) triggers a query run for the new range\n */\nexport function scanStart(exploreId: ExploreId): ThunkResult<void> {\n  return (dispatch, getState) => {\n    // Register the scanner\n    dispatch(scanStartAction({ exploreId }));\n    // Scanning must trigger query run, and return the new range\n    const range = getShiftedTimeRange(-1, getState().explore[exploreId].range);\n    // Set the new range to be displayed\n    dispatch(updateTime({ exploreId, absoluteRange: range }));\n    dispatch(runQueries(exploreId));\n  };\n}\n\n/**\n * Reset queries to the given queries. Any modifications will be discarded.\n * Use this action for clicks on query examples. Triggers a query run.\n */\nexport function setQueries(exploreId: ExploreId, rawQueries: DataQuery[]): ThunkResult<void> {\n  return (dispatch, getState) => {\n    // Inject react keys into query objects\n    const queries = getState().explore[exploreId].queries;\n    const nextQueries = rawQueries.map((query, index) => generateNewKeyAndAddRefIdIfMissing(query, queries, index));\n    dispatch(setQueriesAction({ exploreId, queries: nextQueries }));\n    dispatch(runQueries(exploreId));\n  };\n}\n\n/**\n * Close the split view and save URL state.\n */\nexport function splitClose(itemId: ExploreId): ThunkResult<void> {\n  return dispatch => {\n    dispatch(splitCloseAction({ itemId }));\n    dispatch(stateSave());\n  };\n}\n\n/**\n * Open the split view and copy the left state to be the right state.\n * The right state is automatically initialized.\n * The copy keeps all query modifications but wipes the query results.\n */\nexport function splitOpen(): ThunkResult<void> {\n  return (dispatch, getState) => {\n    // Clone left state to become the right state\n    const leftState = getState().explore[ExploreId.left];\n    const queryState = getState().location.query[ExploreId.left] as string;\n    const urlState = parseUrlState(queryState);\n    const itemState: ExploreItemState = {\n      ...leftState,\n      queries: leftState.queries.slice(),\n      urlState,\n    };\n    dispatch(splitOpenAction({ itemState }));\n    dispatch(stateSave());\n  };\n}\n\n/**\n * Syncs time interval, if they are not synced on both panels in a split mode.\n * Unsyncs time interval, if they are synced on both panels in a split mode.\n */\nexport function syncTimes(exploreId: ExploreId): ThunkResult<void> {\n  return (dispatch, getState) => {\n    if (exploreId === ExploreId.left) {\n      const leftState = getState().explore.left;\n      dispatch(updateTimeRange({ exploreId: ExploreId.right, rawRange: leftState.range.raw }));\n    } else {\n      const rightState = getState().explore.right;\n      dispatch(updateTimeRange({ exploreId: ExploreId.left, rawRange: rightState.range.raw }));\n    }\n    const isTimeSynced = getState().explore.syncedTimes;\n    dispatch(syncTimesAction({ syncedTimes: !isTimeSynced }));\n    dispatch(stateSave());\n  };\n}\n\n/**\n * Creates action to collapse graph/logs/table panel. When panel is collapsed,\n * queries won't be run\n */\nconst togglePanelActionCreator = (\n  actionCreator: ActionCreatorWithPayload<ToggleGraphPayload> | ActionCreatorWithPayload<ToggleTablePayload>\n) => (exploreId: ExploreId, isPanelVisible: boolean): ThunkResult<void> => {\n  return dispatch => {\n    let uiFragmentStateUpdate: Partial<ExploreUIState>;\n    const shouldRunQueries = !isPanelVisible;\n\n    switch (actionCreator.type) {\n      case toggleGraphAction.type:\n        uiFragmentStateUpdate = { showingGraph: !isPanelVisible };\n        break;\n      case toggleTableAction.type:\n        uiFragmentStateUpdate = { showingTable: !isPanelVisible };\n        break;\n    }\n\n    dispatch(actionCreator({ exploreId }));\n    dispatch(updateExploreUIState(exploreId, uiFragmentStateUpdate));\n\n    if (shouldRunQueries) {\n      dispatch(runQueries(exploreId));\n    }\n  };\n};\n\n/**\n * Expand/collapse the graph result viewer. When collapsed, graph queries won't be run.\n */\nexport const toggleGraph = togglePanelActionCreator(toggleGraphAction);\n\n/**\n * Expand/collapse the table result viewer. When collapsed, table queries won't be run.\n */\nexport const toggleTable = togglePanelActionCreator(toggleTableAction);\n\n/**\n * Change logs deduplication strategy and update URL.\n */\nexport const changeDedupStrategy = (exploreId: ExploreId, dedupStrategy: LogsDedupStrategy): ThunkResult<void> => {\n  return dispatch => {\n    dispatch(updateExploreUIState(exploreId, { dedupStrategy }));\n  };\n};\n\n/**\n * Reacts to changes in URL state that we need to sync back to our redux state. Checks the internal update variable\n * to see which parts change and need to be synced.\n * @param exploreId\n */\nexport function refreshExplore(exploreId: ExploreId): ThunkResult<void> {\n  return (dispatch, getState) => {\n    const itemState = getState().explore[exploreId];\n    if (!itemState.initialized) {\n      return;\n    }\n\n    const { urlState, update, containerWidth, eventBridge } = itemState;\n    const { datasource, queries, range: urlRange, mode, ui, originPanelId } = urlState;\n    const refreshQueries: DataQuery[] = [];\n    for (let index = 0; index < queries.length; index++) {\n      const query = queries[index];\n      refreshQueries.push(generateNewKeyAndAddRefIdIfMissing(query, refreshQueries, index));\n    }\n    const timeZone = getTimeZone(getState().user);\n    const range = getTimeRangeFromUrl(urlRange, timeZone);\n\n    // need to refresh datasource\n    if (update.datasource) {\n      const initialQueries = ensureQueries(queries);\n      dispatch(\n        initializeExplore(\n          exploreId,\n          datasource,\n          initialQueries,\n          range,\n          mode,\n          containerWidth,\n          eventBridge,\n          ui,\n          originPanelId\n        )\n      );\n      return;\n    }\n\n    if (update.range) {\n      dispatch(updateTime({ exploreId, rawRange: range.raw }));\n    }\n\n    // need to refresh ui state\n    if (update.ui) {\n      dispatch(updateUIStateAction({ ...ui, exploreId }));\n    }\n\n    // need to refresh queries\n    if (update.queries) {\n      dispatch(setQueriesAction({ exploreId, queries: refreshQueries }));\n    }\n\n    // need to refresh mode\n    if (update.mode) {\n      dispatch(changeModeAction({ exploreId, mode }));\n    }\n\n    // always run queries when refresh is needed\n    if (update.queries || update.ui || update.range) {\n      dispatch(runQueries(exploreId));\n    }\n  };\n}\n\nexport interface NavigateToExploreDependencies {\n  getDataSourceSrv: () => DataSourceSrv;\n  getTimeSrv: () => TimeSrv;\n  getExploreUrl: (args: GetExploreUrlArguments) => Promise<string>;\n  openInNewWindow?: (url: string) => void;\n}\n\nexport const navigateToExplore = (\n  panel: PanelModel,\n  dependencies: NavigateToExploreDependencies\n): ThunkResult<void> => {\n  return async dispatch => {\n    const { getDataSourceSrv, getTimeSrv, getExploreUrl, openInNewWindow } = dependencies;\n    const datasourceSrv = getDataSourceSrv();\n    const datasource = await datasourceSrv.get(panel.datasource);\n    const path = await getExploreUrl({\n      panel,\n      panelTargets: panel.targets,\n      panelDatasource: datasource,\n      datasourceSrv,\n      timeSrv: getTimeSrv(),\n    });\n\n    if (openInNewWindow) {\n      openInNewWindow(path);\n      return;\n    }\n\n    const query = {}; // strips any angular query param\n    dispatch(updateLocation({ path, query }));\n  };\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Select } from '@grafana/ui';\nimport { SelectableValue, DataSourceSelectItem } from '@grafana/data';\n\nexport interface Props {\n  onChange: (ds: DataSourceSelectItem) => void;\n  datasources: DataSourceSelectItem[];\n  current: DataSourceSelectItem;\n  hideTextValue?: boolean;\n  onBlur?: () => void;\n  autoFocus?: boolean;\n  openMenuOnFocus?: boolean;\n  showLoading?: boolean;\n}\n\nexport class DataSourcePicker extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    autoFocus: false,\n    openMenuOnFocus: false,\n  };\n\n  searchInput: HTMLElement;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onChange = (item: SelectableValue<string>) => {\n    const ds = this.props.datasources.find(ds => ds.name === item.value);\n    this.props.onChange(ds);\n  };\n\n  render() {\n    const { datasources, current, autoFocus, hideTextValue, onBlur, openMenuOnFocus, showLoading } = this.props;\n\n    const options = datasources.map(ds => ({\n      value: ds.name,\n      label: ds.name,\n      imgUrl: ds.meta.info.logos.small,\n    }));\n\n    const value = current && {\n      label: current.name.substr(0, 37),\n      value: current.name,\n      imgUrl: current.meta.info.logos.small,\n      loading: showLoading,\n      hideText: hideTextValue,\n    };\n\n    return (\n      <div className=\"gf-form-inline\">\n        <Select\n          className=\"ds-picker\"\n          isMulti={false}\n          isClearable={false}\n          backspaceRemovesValue={false}\n          onChange={this.onChange}\n          options={options}\n          autoFocus={autoFocus}\n          onBlur={onBlur}\n          openMenuOnFocus={openMenuOnFocus}\n          maxMenuHeight={500}\n          placeholder=\"Select datasource\"\n          noOptionsMessage={() => 'No datasources found'}\n          value={value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataSourcePicker;\n","import { createElement, PureComponent } from 'react';\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\nfunction createDetectElementResize(nonce) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n  if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = _window.getComputedStyle(element);\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar AutoSizer = function (_React$PureComponent) {\n  inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || Object.getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      // Avoid rendering children before the initial measurements have been collected.\n      // At best this would just be wasting cycles.\n      var bailoutOnChildren = false;\n\n      if (!disableHeight) {\n        if (height === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        if (width === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      return createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style) },\n        !bailoutOnChildren && children(childParams)\n      );\n    }\n  }]);\n  return AutoSizer;\n}(PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\n\nexport default AutoSizer;\n"],"sourceRoot":""}