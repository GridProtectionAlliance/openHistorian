{"version":3,"file":"3189.b5ee2183b11bc169cf9f.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/PanelTypeFilter/PanelTypeFilter.tsx","webpack://grafana/./public/app/features/library-panels/components/DeleteLibraryPanelModal/reducer.ts","webpack://grafana/./public/app/features/library-panels/components/DeleteLibraryPanelModal/actions.ts","webpack://grafana/./public/app/features/library-panels/components/DeleteLibraryPanelModal/DeleteLibraryPanelModal.tsx","webpack://grafana/./public/app/features/library-panels/components/LibraryPanelCard/LibraryPanelCard.tsx","webpack://grafana/./public/app/core/components/FolderFilter/FolderFilter.tsx","webpack://grafana/./public/app/features/library-panels/components/LibraryPanelsSearch/LibraryPanelsSearch.tsx","webpack://grafana/./public/app/features/library-panels/components/LibraryPanelsView/LibraryPanelsView.tsx","webpack://grafana/./public/app/features/library-panels/components/LibraryPanelsView/actions.ts","webpack://grafana/./public/app/features/library-panels/components/LibraryPanelsView/reducer.ts","webpack://grafana/./public/app/features/library-panels/styles.ts","webpack://grafana/./public/app/features/panel/components/VizTypePicker/PanelTypeCard.tsx","webpack://grafana/./public/app/features/panel/state/util.ts","webpack://grafana/./public/app/features/plugins/components/PluginStateInfo.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, PanelPluginMeta, SelectableValue } from '@grafana/data';\nimport { Icon, Button, MultiSelect, useStyles2 } from '@grafana/ui';\nimport { getAllPanelPluginMeta } from 'app/features/panel/state/util';\n\nexport interface Props {\n  onChange: (plugins: PanelPluginMeta[]) => void;\n  maxMenuHeight?: number;\n}\n\nexport const PanelTypeFilter = ({ onChange: propsOnChange, maxMenuHeight }: Props): JSX.Element => {\n  const plugins = useMemo<PanelPluginMeta[]>(() => getAllPanelPluginMeta(), []);\n  const options = useMemo(\n    () =>\n      plugins\n        .map((p) => ({ label: p.name, imgUrl: p.info.logos.small, value: p }))\n        .sort((a, b) => a.label?.localeCompare(b.label)),\n    [plugins]\n  );\n  const [value, setValue] = useState<Array<SelectableValue<PanelPluginMeta>>>([]);\n  const onChange = useCallback(\n    (plugins: Array<SelectableValue<PanelPluginMeta>>) => {\n      const changedPlugins = plugins.filter((p) => p.value).map((p) => p.value!);\n      propsOnChange(changedPlugins);\n      setValue(plugins);\n    },\n    [propsOnChange]\n  );\n  const styles = useStyles2(getStyles);\n\n  const selectOptions = {\n    defaultOptions: true,\n    getOptionLabel: (i: any) => i.label,\n    getOptionValue: (i: any) => i.value,\n    noOptionsMessage: 'No Panel types found',\n    placeholder: 'Filter by type',\n    maxMenuHeight,\n    options,\n    value,\n    onChange,\n  };\n\n  return (\n    <div className={styles.container}>\n      {value.length > 0 && (\n        <Button\n          size=\"xs\"\n          icon=\"trash-alt\"\n          fill=\"text\"\n          className={styles.clear}\n          onClick={() => onChange([])}\n          aria-label=\"Clear types\"\n        >\n          Clear types\n        </Button>\n      )}\n      <MultiSelect {...selectOptions} prefix={<Icon name=\"filter\" />} aria-label=\"Panel Type filter\" />\n    </div>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      label: container;\n      position: relative;\n      min-width: 180px;\n      flex-grow: 1;\n    `,\n    clear: css`\n      label: clear;\n      font-size: ${theme.spacing(1.5)};\n      position: absolute;\n      top: -${theme.spacing(4.5)};\n      right: 0;\n    `,\n  };\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\n\nimport { LoadingState } from '@grafana/data';\nimport { DashboardSearchItem } from 'app/features/search/types';\n\nexport interface DeleteLibraryPanelModalState {\n  loadingState: LoadingState;\n  dashboardTitles: string[];\n}\n\nexport const initialDeleteLibraryPanelModalState: DeleteLibraryPanelModalState = {\n  loadingState: LoadingState.Loading,\n  dashboardTitles: [],\n};\n\nexport const searchCompleted = createAction<{ dashboards: DashboardSearchItem[] }>(\n  'libraryPanels/delete/searchCompleted'\n);\n\nexport const deleteLibraryPanelModalReducer = (\n  state: DeleteLibraryPanelModalState = initialDeleteLibraryPanelModalState,\n  action: AnyAction\n): DeleteLibraryPanelModalState => {\n  if (searchCompleted.match(action)) {\n    return {\n      ...state,\n      dashboardTitles: action.payload.dashboards.map((d) => d.title),\n      loadingState: LoadingState.Done,\n    };\n  }\n\n  return state;\n};\n","import { getConnectedDashboards as apiGetConnectedDashboards } from '../../state/api';\nimport { DispatchResult, LibraryElementDTO } from '../../types';\n\nimport { searchCompleted } from './reducer';\n\nexport function getConnectedDashboards(libraryPanel: LibraryElementDTO): DispatchResult {\n  return async function (dispatch) {\n    const dashboards = await apiGetConnectedDashboards(libraryPanel.uid);\n    dispatch(searchCompleted({ dashboards }));\n  };\n}\n","import React, { FC, useEffect, useMemo, useReducer } from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { Button, Modal, useStyles2 } from '@grafana/ui';\n\nimport { getModalStyles } from '../../styles';\nimport { LibraryElementDTO } from '../../types';\nimport { asyncDispatcher } from '../LibraryPanelsView/actions';\n\nimport { getConnectedDashboards } from './actions';\nimport { deleteLibraryPanelModalReducer, initialDeleteLibraryPanelModalState } from './reducer';\n\ninterface Props {\n  libraryPanel: LibraryElementDTO;\n  onConfirm: () => void;\n  onDismiss: () => void;\n}\n\nexport const DeleteLibraryPanelModal: FC<Props> = ({ libraryPanel, onDismiss, onConfirm }) => {\n  const styles = useStyles2(getModalStyles);\n  const [{ dashboardTitles, loadingState }, dispatch] = useReducer(\n    deleteLibraryPanelModalReducer,\n    initialDeleteLibraryPanelModalState\n  );\n  const asyncDispatch = useMemo(() => asyncDispatcher(dispatch), [dispatch]);\n  useEffect(() => {\n    asyncDispatch(getConnectedDashboards(libraryPanel));\n  }, [asyncDispatch, libraryPanel]);\n  const connected = Boolean(dashboardTitles.length);\n  const done = loadingState === LoadingState.Done;\n\n  return (\n    <Modal className={styles.modal} title=\"Delete library panel\" icon=\"trash-alt\" onDismiss={onDismiss} isOpen={true}>\n      {!done ? <LoadingIndicator /> : null}\n      {done ? (\n        <div>\n          {connected ? <HasConnectedDashboards dashboardTitles={dashboardTitles} /> : null}\n          {!connected ? <Confirm /> : null}\n\n          <Modal.ButtonRow>\n            <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n              Cancel\n            </Button>\n            <Button variant=\"destructive\" onClick={onConfirm} disabled={connected}>\n              Delete\n            </Button>\n          </Modal.ButtonRow>\n        </div>\n      ) : null}\n    </Modal>\n  );\n};\n\nconst LoadingIndicator = () => <span>Loading library panel...</span>;\n\nconst Confirm = () => {\n  const styles = useStyles2(getModalStyles);\n\n  return <div className={styles.modalText}>Do you want to delete this panel?</div>;\n};\n\nconst HasConnectedDashboards: FC<{ dashboardTitles: string[] }> = ({ dashboardTitles }) => {\n  const styles = useStyles2(getModalStyles);\n  const suffix = dashboardTitles.length === 1 ? 'dashboard.' : 'dashboards.';\n  const message = `${dashboardTitles.length} ${suffix}`;\n  if (dashboardTitles.length === 0) {\n    return null;\n  }\n\n  return (\n    <div>\n      <p className={styles.textInfo}>\n        {'This library panel can not be deleted because it is connected to '}\n        <strong>{message}</strong>\n        {' Remove the library panel from the dashboards listed below and retry.'}\n      </p>\n      <table className={styles.myTable}>\n        <thead>\n          <tr>\n            <th>Dashboard name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dashboardTitles.map((title, i) => (\n            <tr key={`dash-title-${i}`}>\n              <td>{title}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { ReactElement, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Icon, Link, useStyles2 } from '@grafana/ui';\nimport { getPanelPluginNotFound } from 'app/features/panel/components/PanelPluginError';\nimport { PanelTypeCard } from 'app/features/panel/components/VizTypePicker/PanelTypeCard';\n\nimport { LibraryElementDTO } from '../../types';\nimport { DeleteLibraryPanelModal } from '../DeleteLibraryPanelModal/DeleteLibraryPanelModal';\n\nexport interface LibraryPanelCardProps {\n  libraryPanel: LibraryElementDTO;\n  onClick: (panel: LibraryElementDTO) => void;\n  onDelete?: (panel: LibraryElementDTO) => void;\n  showSecondaryActions?: boolean;\n}\n\ntype Props = LibraryPanelCardProps & { children?: JSX.Element | JSX.Element[] };\n\nexport const LibraryPanelCard = ({ libraryPanel, onClick, onDelete, showSecondaryActions }: Props) => {\n  const [showDeletionModal, setShowDeletionModal] = useState(false);\n\n  const onDeletePanel = () => {\n    onDelete?.(libraryPanel);\n    setShowDeletionModal(false);\n  };\n\n  const panelPlugin = config.panels[libraryPanel.model.type] ?? getPanelPluginNotFound(libraryPanel.model.type).meta;\n\n  return (\n    <>\n      <PanelTypeCard\n        isCurrent={false}\n        title={libraryPanel.name}\n        description={libraryPanel.description}\n        plugin={panelPlugin}\n        onClick={() => onClick?.(libraryPanel)}\n        onDelete={showSecondaryActions ? () => setShowDeletionModal(true) : undefined}\n      >\n        <FolderLink libraryPanel={libraryPanel} />\n      </PanelTypeCard>\n      {showDeletionModal && (\n        <DeleteLibraryPanelModal\n          libraryPanel={libraryPanel}\n          onConfirm={onDeletePanel}\n          onDismiss={() => setShowDeletionModal(false)}\n        />\n      )}\n    </>\n  );\n};\n\ninterface FolderLinkProps {\n  libraryPanel: LibraryElementDTO;\n}\n\nfunction FolderLink({ libraryPanel }: FolderLinkProps): ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  if (!libraryPanel.meta?.folderUid && !libraryPanel.meta?.folderName) {\n    return null;\n  }\n\n  if (!libraryPanel.meta.folderUid) {\n    return (\n      <span className={styles.metaContainer}>\n        <Icon name={'folder'} size=\"sm\" />\n        <span>{libraryPanel.meta.folderName}</span>\n      </span>\n    );\n  }\n\n  return (\n    <span className={styles.metaContainer}>\n      <Link href={`/dashboards/f/${libraryPanel.meta.folderUid}`}>\n        <Icon name={'folder-upload'} size=\"sm\" />\n        <span>{libraryPanel.meta.folderName}</span>\n      </Link>\n    </span>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    metaContainer: css`\n      display: flex;\n      align-items: center;\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      padding-top: ${theme.spacing(0.5)};\n\n      svg {\n        margin-right: ${theme.spacing(0.5)};\n        margin-bottom: 3px;\n      }\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport debounce from 'debounce-promise';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { AsyncMultiSelect, Icon, Button, useStyles2 } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSearchItemType } from 'app/features/search/types';\nimport { FolderInfo, PermissionLevelString } from 'app/types';\n\nexport interface FolderFilterProps {\n  onChange: (folder: FolderInfo[]) => void;\n  maxMenuHeight?: number;\n}\n\nexport function FolderFilter({ onChange, maxMenuHeight }: FolderFilterProps): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const [loading, setLoading] = useState(false);\n  const getOptions = useCallback((searchString: string) => getFoldersAsOptions(searchString, setLoading), []);\n  const debouncedLoadOptions = useMemo(() => debounce(getOptions, 300), [getOptions]);\n\n  const [value, setValue] = useState<Array<SelectableValue<FolderInfo>>>([]);\n  const onSelectOptionChange = useCallback(\n    (folders: Array<SelectableValue<FolderInfo>>) => {\n      const changedFolderIds = folders.filter((f) => Boolean(f.value)).map((f) => f.value!);\n      onChange(changedFolderIds);\n      setValue(folders);\n    },\n    [onChange]\n  );\n\n  return (\n    <div className={styles.container}>\n      {value.length > 0 && (\n        <Button\n          size=\"xs\"\n          icon=\"trash-alt\"\n          fill=\"text\"\n          className={styles.clear}\n          onClick={() => onChange([])}\n          aria-label=\"Clear folders\"\n        >\n          Clear folders\n        </Button>\n      )}\n      <AsyncMultiSelect\n        value={value}\n        onChange={onSelectOptionChange}\n        isLoading={loading}\n        loadOptions={debouncedLoadOptions}\n        maxMenuHeight={maxMenuHeight}\n        placeholder=\"Filter by folder\"\n        noOptionsMessage=\"No folders found\"\n        prefix={<Icon name=\"filter\" />}\n        aria-label=\"Folder filter\"\n        defaultOptions\n      />\n    </div>\n  );\n}\n\nasync function getFoldersAsOptions(\n  searchString: string,\n  setLoading: (loading: boolean) => void\n): Promise<Array<SelectableValue<FolderInfo>>> {\n  setLoading(true);\n\n  const params = {\n    query: searchString,\n    type: DashboardSearchItemType.DashFolder,\n    permission: PermissionLevelString.View,\n  };\n\n  // FIXME: stop using id from search and use UID instead\n  const searchHits = await getBackendSrv().search(params);\n  const options = searchHits.map((d) => ({ label: d.title, value: { uid: d.uid, title: d.title } }));\n  if (!searchString || 'general'.includes(searchString.toLowerCase())) {\n    options.unshift({ label: 'General', value: { uid: 'general', title: 'General' } });\n  }\n\n  setLoading(false);\n\n  return options;\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      label: container;\n      position: relative;\n      min-width: 180px;\n      flex-grow: 1;\n    `,\n    clear: css`\n      label: clear;\n      font-size: ${theme.spacing(1.5)};\n      position: absolute;\n      top: -${theme.spacing(4.5)};\n      right: 0;\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { useDebounce } from 'react-use';\n\nimport { GrafanaTheme2, PanelPluginMeta, SelectableValue } from '@grafana/data';\nimport { useStyles2, VerticalGroup, FilterInput } from '@grafana/ui';\nimport { FolderInfo } from 'app/types';\n\nimport { FolderFilter } from '../../../../core/components/FolderFilter/FolderFilter';\nimport { PanelTypeFilter } from '../../../../core/components/PanelTypeFilter/PanelTypeFilter';\nimport { SortPicker } from '../../../../core/components/Select/SortPicker';\nimport { DEFAULT_PER_PAGE_PAGINATION } from '../../../../core/constants';\nimport { LibraryElementDTO } from '../../types';\nimport { LibraryPanelsView } from '../LibraryPanelsView/LibraryPanelsView';\n\nexport enum LibraryPanelsSearchVariant {\n  Tight = 'tight',\n  Spacious = 'spacious',\n}\n\nexport interface LibraryPanelsSearchProps {\n  onClick: (panel: LibraryElementDTO) => void;\n  variant?: LibraryPanelsSearchVariant;\n  showSort?: boolean;\n  showPanelFilter?: boolean;\n  showFolderFilter?: boolean;\n  showSecondaryActions?: boolean;\n  currentPanelId?: string;\n  currentFolderUID?: string;\n  perPage?: number;\n}\n\nexport const LibraryPanelsSearch = ({\n  onClick,\n  variant = LibraryPanelsSearchVariant.Spacious,\n  currentPanelId,\n  currentFolderUID,\n  perPage = DEFAULT_PER_PAGE_PAGINATION,\n  showPanelFilter = false,\n  showFolderFilter = false,\n  showSort = false,\n  showSecondaryActions = false,\n}: LibraryPanelsSearchProps): JSX.Element => {\n  const styles = useStyles2(useCallback((theme) => getStyles(theme, variant), [variant]));\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState('');\n  useDebounce(() => setDebouncedSearchQuery(searchQuery), 200, [searchQuery]);\n\n  const [sortDirection, setSortDirection] = useState<SelectableValue<string>>({});\n  const [folderFilter, setFolderFilter] = useState<string[]>(currentFolderUID ? [currentFolderUID] : []);\n  const [panelFilter, setPanelFilter] = useState<string[]>([]);\n\n  const sortOrFiltersVisible = showSort || showPanelFilter || showFolderFilter;\n  const verticalGroupSpacing = variant === LibraryPanelsSearchVariant.Tight ? 'lg' : 'xs';\n\n  return (\n    <div className={styles.container}>\n      <VerticalGroup spacing={verticalGroupSpacing}>\n        <div className={styles.gridContainer}>\n          <div className={styles.filterInputWrapper}>\n            <FilterInput\n              value={searchQuery}\n              onChange={setSearchQuery}\n              placeholder=\"Search by name or description\"\n              width={0}\n              escapeRegex={false}\n            />\n          </div>\n          {sortOrFiltersVisible && (\n            <SearchControls\n              showSort={showSort}\n              showPanelFilter={showPanelFilter}\n              showFolderFilter={showFolderFilter}\n              onSortChange={setSortDirection}\n              onFolderFilterChange={setFolderFilter}\n              onPanelFilterChange={setPanelFilter}\n              sortDirection={sortDirection.value}\n              variant={variant}\n            />\n          )}\n        </div>\n\n        <div className={styles.libraryPanelsView}>\n          <LibraryPanelsView\n            onClickCard={onClick}\n            searchString={debouncedSearchQuery}\n            sortDirection={sortDirection.value}\n            panelFilter={panelFilter}\n            folderFilter={folderFilter}\n            currentPanelId={currentPanelId}\n            showSecondaryActions={showSecondaryActions}\n            perPage={perPage}\n          />\n        </div>\n      </VerticalGroup>\n    </div>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2, variant: LibraryPanelsSearchVariant) {\n  const tightLayout = css`\n    flex-direction: row;\n    row-gap: ${theme.spacing(1)};\n  `;\n  return {\n    filterInputWrapper: css`\n      flex-grow: ${variant === LibraryPanelsSearchVariant.Tight ? 1 : 'initial'};\n    `,\n    container: css`\n      width: 100%;\n      overflow-y: auto;\n      padding: ${theme.spacing(1)};\n    `,\n    libraryPanelsView: css`\n      width: 100%;\n    `,\n    gridContainer: css`\n      ${variant === LibraryPanelsSearchVariant.Tight ? tightLayout : ''};\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      column-gap: ${theme.spacing(1)};\n      row-gap: ${theme.spacing(1)};\n      padding-bottom: ${theme.spacing(2)};\n    `,\n  };\n}\n\ninterface SearchControlsProps {\n  showSort: boolean;\n  showPanelFilter: boolean;\n  showFolderFilter: boolean;\n  sortDirection?: string;\n  onSortChange: (sortValue: SelectableValue) => void;\n  onFolderFilterChange: (folder: string[]) => void;\n  onPanelFilterChange: (plugins: string[]) => void;\n  variant?: LibraryPanelsSearchVariant;\n}\n\nconst SearchControls = React.memo(\n  ({\n    variant = LibraryPanelsSearchVariant.Spacious,\n    showSort,\n    showPanelFilter,\n    showFolderFilter,\n    sortDirection,\n    onSortChange,\n    onFolderFilterChange,\n    onPanelFilterChange,\n  }: SearchControlsProps) => {\n    const styles = useStyles2(useCallback((theme) => getRowStyles(theme, variant), [variant]));\n    const panelFilterChanged = useCallback(\n      (plugins: PanelPluginMeta[]) => onPanelFilterChange(plugins.map((p) => p.id)),\n      [onPanelFilterChange]\n    );\n    const folderFilterChanged = useCallback(\n      (folders: FolderInfo[]) => onFolderFilterChange(folders.map((f) => f.uid ?? '')),\n      [onFolderFilterChange]\n    );\n\n    return (\n      <div className={styles.container}>\n        {showSort && <SortPicker value={sortDirection} onChange={onSortChange} filter={['alpha-asc', 'alpha-desc']} />}\n        {(showFolderFilter || showPanelFilter) && (\n          <div className={styles.filterContainer}>\n            {showFolderFilter && <FolderFilter onChange={folderFilterChanged} />}\n            {showPanelFilter && <PanelTypeFilter onChange={panelFilterChanged} />}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\nSearchControls.displayName = 'SearchControls';\n\nfunction getRowStyles(theme: GrafanaTheme2, variant = LibraryPanelsSearchVariant.Spacious) {\n  const searchRowContainer = css`\n    display: flex;\n    gap: ${theme.spacing(1)};\n    flex-grow: 1;\n    flex-direction: row;\n    justify-content: end;\n  `;\n  const searchRowContainerTight = css`\n    ${searchRowContainer};\n    flex-grow: initial;\n    flex-direction: column;\n    justify-content: normal;\n  `;\n  const filterContainer = css`\n    display: flex;\n    flex-direction: row;\n    margin-left: auto;\n    gap: 4px;\n  `;\n  const filterContainerTight = css`\n    ${filterContainer};\n    flex-direction: column;\n    margin-left: initial;\n  `;\n\n  switch (variant) {\n    case LibraryPanelsSearchVariant.Spacious:\n      return {\n        container: searchRowContainer,\n        filterContainer: filterContainer,\n      };\n    case LibraryPanelsSearchVariant.Tight:\n      return {\n        container: searchRowContainerTight,\n        filterContainer: filterContainerTight,\n      };\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useMemo, useReducer } from 'react';\nimport { useDebounce } from 'react-use';\n\nimport { GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { Pagination, useStyles2 } from '@grafana/ui';\n\nimport { LibraryElementDTO } from '../../types';\nimport { LibraryPanelCard } from '../LibraryPanelCard/LibraryPanelCard';\n\nimport { asyncDispatcher, deleteLibraryPanel, searchForLibraryPanels } from './actions';\nimport { changePage, initialLibraryPanelsViewState, libraryPanelsViewReducer } from './reducer';\n\ninterface LibraryPanelViewProps {\n  className?: string;\n  onClickCard: (panel: LibraryElementDTO) => void;\n  showSecondaryActions?: boolean;\n  currentPanelId?: string;\n  searchString: string;\n  sortDirection?: string;\n  panelFilter?: string[];\n  folderFilter?: string[];\n  perPage?: number;\n}\n\nexport const LibraryPanelsView = ({\n  className,\n  onClickCard,\n  searchString,\n  sortDirection,\n  panelFilter,\n  folderFilter,\n  showSecondaryActions,\n  currentPanelId: currentPanel,\n  perPage: propsPerPage = 40,\n}: LibraryPanelViewProps) => {\n  const styles = useStyles2(getPanelViewStyles);\n  const [{ libraryPanels, page, perPage, numberOfPages, loadingState, currentPanelId }, dispatch] = useReducer(\n    libraryPanelsViewReducer,\n    {\n      ...initialLibraryPanelsViewState,\n      currentPanelId: currentPanel,\n      perPage: propsPerPage,\n    }\n  );\n  const asyncDispatch = useMemo(() => asyncDispatcher(dispatch), [dispatch]);\n  useDebounce(\n    () =>\n      asyncDispatch(\n        searchForLibraryPanels({\n          searchString,\n          sortDirection,\n          panelFilter,\n          folderFilterUIDs: folderFilter,\n          page,\n          perPage,\n          currentPanelId,\n        })\n      ),\n    300,\n    [searchString, sortDirection, panelFilter, folderFilter, page, asyncDispatch]\n  );\n  const onDelete = ({ uid }: LibraryElementDTO) =>\n    asyncDispatch(deleteLibraryPanel(uid, { searchString, page, perPage }));\n  const onPageChange = (page: number) => asyncDispatch(changePage({ page }));\n\n  return (\n    <div className={cx(styles.container, className)}>\n      <div className={styles.libraryPanelList}>\n        {loadingState === LoadingState.Loading ? (\n          <p>Loading library panels...</p>\n        ) : libraryPanels.length < 1 ? (\n          <p className={styles.noPanelsFound}>No library panels found.</p>\n        ) : (\n          libraryPanels?.map((item, i) => (\n            <LibraryPanelCard\n              key={`library-panel=${i}`}\n              libraryPanel={item}\n              onDelete={onDelete}\n              onClick={onClickCard}\n              showSecondaryActions={showSecondaryActions}\n            />\n          ))\n        )}\n      </div>\n      {libraryPanels.length ? (\n        <div className={styles.pagination}>\n          <Pagination\n            currentPage={page}\n            numberOfPages={numberOfPages}\n            onNavigate={onPageChange}\n            hideWhenSinglePage={true}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst getPanelViewStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      flex-wrap: nowrap;\n    `,\n    libraryPanelList: css`\n      max-width: 100%;\n      display: grid;\n      grid-gap: ${theme.spacing(1)};\n    `,\n    searchHeader: css`\n      display: flex;\n    `,\n    newPanelButton: css`\n      margin-top: 10px;\n      align-self: flex-start;\n    `,\n    pagination: css`\n      align-self: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n    noPanelsFound: css`\n      label: noPanelsFound;\n      min-height: 200px;\n    `,\n  };\n};\n","import { AnyAction } from '@reduxjs/toolkit';\nimport { Dispatch } from 'react';\nimport { from, merge, of, Subscription, timer } from 'rxjs';\nimport { catchError, finalize, mapTo, mergeMap, share, takeUntil } from 'rxjs/operators';\n\nimport { deleteLibraryPanel as apiDeleteLibraryPanel, getLibraryPanels } from '../../state/api';\n\nimport { initialLibraryPanelsViewState, initSearch, searchCompleted } from './reducer';\n\ntype DispatchResult = (dispatch: Dispatch<AnyAction>) => void;\ninterface SearchArgs {\n  perPage: number;\n  page: number;\n  searchString: string;\n  sortDirection?: string;\n  panelFilter?: string[];\n  folderFilterUIDs?: string[];\n  currentPanelId?: string;\n}\n\nexport function searchForLibraryPanels(args: SearchArgs): DispatchResult {\n  return function (dispatch) {\n    const subscription = new Subscription();\n    const dataObservable = from(\n      getLibraryPanels({\n        searchString: args.searchString,\n        perPage: args.perPage,\n        page: args.page,\n        excludeUid: args.currentPanelId,\n        sortDirection: args.sortDirection,\n        typeFilter: args.panelFilter,\n        folderFilterUIDs: args.folderFilterUIDs,\n      })\n    ).pipe(\n      mergeMap(({ perPage, elements: libraryPanels, page, totalCount }) =>\n        of(searchCompleted({ libraryPanels, page, perPage, totalCount }))\n      ),\n      catchError((err) => {\n        console.error(err);\n        return of(searchCompleted({ ...initialLibraryPanelsViewState, page: args.page, perPage: args.perPage }));\n      }),\n      finalize(() => subscription.unsubscribe()), // make sure we unsubscribe\n      share()\n    );\n\n    subscription.add(\n      // If 50ms without a response dispatch a loading state\n      // mapTo will translate the timer event into a loading state\n      // takeUntil will cancel the timer emit when first response is received on the dataObservable\n      merge(timer(50).pipe(mapTo(initSearch()), takeUntil(dataObservable)), dataObservable).subscribe(dispatch)\n    );\n  };\n}\n\nexport function deleteLibraryPanel(uid: string, args: SearchArgs): DispatchResult {\n  return async function (dispatch) {\n    try {\n      await apiDeleteLibraryPanel(uid);\n      searchForLibraryPanels(args)(dispatch);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n}\n\nexport function asyncDispatcher(dispatch: Dispatch<AnyAction>) {\n  return function (action: any) {\n    if (action instanceof Function) {\n      return action(dispatch);\n    }\n    return dispatch(action);\n  };\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\n\nimport { LoadingState } from '@grafana/data';\n\nimport { LibraryElementDTO } from '../../types';\n\nexport interface LibraryPanelsViewState {\n  loadingState: LoadingState;\n  libraryPanels: LibraryElementDTO[];\n  totalCount: number;\n  perPage: number;\n  page: number;\n  numberOfPages: number;\n  currentPanelId?: string;\n}\n\nexport const initialLibraryPanelsViewState: LibraryPanelsViewState = {\n  loadingState: LoadingState.Loading,\n  libraryPanels: [],\n  totalCount: 0,\n  perPage: 40,\n  page: 1,\n  numberOfPages: 0,\n  currentPanelId: undefined,\n};\n\nexport const initSearch = createAction('libraryPanels/view/initSearch');\nexport const searchCompleted = createAction<\n  Omit<LibraryPanelsViewState, 'currentPanelId' | 'searchString' | 'loadingState' | 'numberOfPages'>\n>('libraryPanels/view/searchCompleted');\n\nexport const changePage = createAction<Pick<LibraryPanelsViewState, 'page'>>('libraryPanels/view/changePage');\n\nexport const libraryPanelsViewReducer = (state: LibraryPanelsViewState, action: AnyAction) => {\n  if (initSearch.match(action)) {\n    return { ...state, loadingState: LoadingState.Loading };\n  }\n\n  if (searchCompleted.match(action)) {\n    const { libraryPanels, page, perPage, totalCount } = action.payload;\n    const numberOfPages = Math.ceil(totalCount / perPage);\n    return {\n      ...state,\n      libraryPanels,\n      perPage,\n      totalCount,\n      loadingState: LoadingState.Done,\n      numberOfPages,\n      page: page > numberOfPages ? page - 1 : page,\n    };\n  }\n\n  if (changePage.match(action)) {\n    return { ...state, page: action.payload.page };\n  }\n\n  return state;\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getModalStyles(theme: GrafanaTheme2) {\n  return {\n    myTable: css`\n      max-height: 204px;\n      overflow-y: auto;\n      margin-top: 11px;\n      margin-bottom: 28px;\n      border-radius: ${theme.shape.borderRadius(1)};\n      border: 1px solid ${theme.colors.action.hover};\n      background: ${theme.colors.background.primary};\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.h6.fontSize};\n      width: 100%;\n\n      thead {\n        color: #538ade;\n        font-size: ${theme.typography.bodySmall.fontSize};\n      }\n\n      th,\n      td {\n        padding: 6px 13px;\n        height: ${theme.spacing(4)};\n      }\n\n      tbody > tr:nth-child(odd) {\n        background: ${theme.colors.background.secondary};\n      }\n    `,\n    noteTextbox: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n    textInfo: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    dashboardSearch: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n    modal: css`\n      width: 500px;\n    `,\n    modalText: css`\n      font-size: ${theme.typography.h4.fontSize};\n      color: ${theme.colors.text.primary};\n      margin-bottom: ${theme.spacing(4)};\n      padding-top: ${theme.spacing(2)};\n    `,\n  };\n}\n","import { css, cx } from '@emotion/css';\nimport React, { MouseEventHandler } from 'react';\n\nimport { GrafanaTheme2, isUnsignedPluginSignature, PanelPluginMeta, PluginState } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { IconButton, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { PluginStateInfo } from 'app/features/plugins/components/PluginStateInfo';\n\ninterface Props {\n  isCurrent: boolean;\n  plugin: PanelPluginMeta;\n  title: string;\n  onClick: MouseEventHandler<HTMLDivElement>;\n  onDelete?: () => void;\n  disabled?: boolean;\n  showBadge?: boolean;\n  description?: string;\n}\n\nexport const PanelTypeCard = ({\n  isCurrent,\n  title,\n  plugin,\n  onClick,\n  onDelete,\n  disabled,\n  showBadge,\n  description,\n  children,\n}: React.PropsWithChildren<Props>) => {\n  const styles = useStyles2(getStyles);\n  const isDisabled = disabled || plugin.state === PluginState.deprecated;\n  const cssClass = cx({\n    [styles.item]: true,\n    [styles.itemDisabled]: isDisabled,\n    [styles.current]: isCurrent,\n  });\n\n  return (\n    <div\n      className={cssClass}\n      aria-label={selectors.components.PluginVisualization.item(plugin.name)}\n      onClick={isDisabled ? undefined : onClick}\n      title={isCurrent ? 'Click again to close this section' : plugin.name}\n    >\n      <img className={cx(styles.img, { [styles.disabled]: isDisabled })} src={plugin.info.logos.small} alt=\"\" />\n\n      <div className={cx(styles.itemContent, { [styles.disabled]: isDisabled })}>\n        <div className={styles.name}>{title}</div>\n        {description ? <span className={styles.description}>{description}</span> : null}\n        {children}\n      </div>\n      {showBadge && (\n        <div className={cx(styles.badge, { [styles.disabled]: isDisabled })}>\n          <PanelPluginBadge plugin={plugin} />\n        </div>\n      )}\n      {onDelete && (\n        <IconButton\n          name=\"trash-alt\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onDelete();\n          }}\n          className={styles.deleteButton}\n          aria-label=\"Delete button on panel type card\"\n        />\n      )}\n    </div>\n  );\n};\n\nPanelTypeCard.displayName = 'PanelTypeCard';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    item: css`\n      position: relative;\n      display: flex;\n      flex-shrink: 0;\n      cursor: pointer;\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      box-shadow: ${theme.shadows.z1};\n      border: 1px solid ${theme.colors.background.secondary};\n      align-items: center;\n      padding: 8px;\n      width: 100%;\n      position: relative;\n      overflow: hidden;\n      transition: ${theme.transitions.create(['background'], {\n        duration: theme.transitions.duration.short,\n      })};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary, 0.03)};\n      }\n    `,\n    itemContent: css`\n      overflow: hidden;\n      position: relative;\n      padding: ${theme.spacing(0, 1)};\n    `,\n    itemDisabled: css`\n      cursor: default;\n\n      &,\n      &:hover {\n        background: ${theme.colors.action.disabledBackground};\n      }\n    `,\n    current: css`\n      label: currentVisualizationItem;\n      border: 1px solid ${theme.colors.primary.border};\n      background: ${theme.colors.action.selected};\n    `,\n    disabled: css`\n      opacity: ${theme.colors.action.disabledOpacity};\n      filter: grayscale(1);\n      cursor: default;\n      pointer-events: none;\n    `,\n    name: css`\n      text-overflow: ellipsis;\n      overflow: hidden;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: 100%;\n    `,\n    description: css`\n      display: block;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightLight};\n      width: 100%;\n      max-height: 4.5em;\n    `,\n    img: css`\n      max-height: 38px;\n      width: 38px;\n      display: flex;\n      align-items: center;\n    `,\n    badge: css`\n      background: ${theme.colors.background.primary};\n    `,\n    deleteButton: css`\n      cursor: pointer;\n      margin-left: auto;\n    `,\n  };\n};\n\ninterface PanelPluginBadgeProps {\n  plugin: PanelPluginMeta;\n}\n\nconst PanelPluginBadge = ({ plugin }: PanelPluginBadgeProps) => {\n  if (isUnsignedPluginSignature(plugin.signature)) {\n    return <PluginSignatureBadge status={plugin.signature} />;\n  }\n\n  return <PluginStateInfo state={plugin.state} />;\n};\n\nPanelPluginBadge.displayName = 'PanelPluginBadge';\n","import { PanelPluginMeta, PluginState, unEscapeStringFromRegex } from '@grafana/data';\nimport { config } from 'app/core/config';\n\nexport function getAllPanelPluginMeta(): PanelPluginMeta[] {\n  const allPanels = config.panels;\n\n  return Object.keys(allPanels)\n    .filter((key) => allPanels[key]['hideFromList'] === false)\n    .map((key) => allPanels[key])\n    .sort((a: PanelPluginMeta, b: PanelPluginMeta) => a.sort - b.sort);\n}\n\nexport function filterPluginList(\n  pluginsList: PanelPluginMeta[],\n  searchQuery: string, // Note: this will be an escaped regex string as it comes from `FilterInput`\n  current: PanelPluginMeta\n): PanelPluginMeta[] {\n  if (!searchQuery.length) {\n    return pluginsList.filter((p) => {\n      if (p.state === PluginState.deprecated) {\n        return current.id === p.id;\n      }\n      return true;\n    });\n  }\n\n  const query = unEscapeStringFromRegex(searchQuery).toLowerCase();\n  const first: PanelPluginMeta[] = [];\n  const match: PanelPluginMeta[] = [];\n  const isGraphQuery = 'graph'.startsWith(query);\n\n  for (const item of pluginsList) {\n    if (item.state === PluginState.deprecated && current.id !== item.id) {\n      continue;\n    }\n\n    const name = item.name.toLowerCase();\n    const idx = name.indexOf(query);\n\n    if (idx === 0) {\n      first.push(item);\n    } else if (idx > 0) {\n      match.push(item);\n    } else if (isGraphQuery && item.id === 'timeseries') {\n      first.push(item);\n    }\n  }\n\n  return first.concat(match);\n}\n","import React from 'react';\n\nimport { PluginState } from '@grafana/data';\nimport { Badge, BadgeProps } from '@grafana/ui';\n\ninterface Props {\n  state?: PluginState;\n}\n\nexport const PluginStateInfo = (props: Props) => {\n  const display = getFeatureStateInfo(props.state);\n\n  if (!display) {\n    return null;\n  }\n\n  return <Badge color={display.color} title={display.tooltip} text={display.text} icon={display.icon} />;\n};\n\nfunction getFeatureStateInfo(state?: PluginState): BadgeProps | null {\n  switch (state) {\n    case PluginState.deprecated:\n      return {\n        text: 'Deprecated',\n        color: 'red',\n        tooltip: `This feature is deprecated and will be removed in a future release`,\n      };\n    case PluginState.alpha:\n      return {\n        text: 'Alpha',\n        color: 'blue',\n        tooltip: `This feature is experimental and future updates might not be backward compatible`,\n      };\n    case PluginState.beta:\n      return {\n        text: 'Beta',\n        color: 'blue',\n        tooltip: `This feature is close to complete but not fully tested`,\n      };\n    default:\n      return null;\n  }\n}\n"],"names":["PanelTypeFilter","propsOnChange","maxMenuHeight","plugins","options","p","a","b","value","setValue","onChange","changedPlugins","styles","getStyles","selectOptions","i","theme","initialDeleteLibraryPanelModalState","searchCompleted","deleteLibraryPanelModalReducer","state","action","d","getConnectedDashboards","libraryPanel","dispatch","dashboards","api","DeleteLibraryPanelModal","onDismiss","onConfirm","dashboardTitles","loadingState","asyncDispatch","connected","done","Modal","LoadingIndicator","HasConnectedDashboards","Confirm","Button","suffix","message","title","LibraryPanelCard","onClick","onDelete","showSecondaryActions","showDeletionModal","setShowDeletionModal","onDeletePanel","panelPlugin","config","PanelTypeCard","FolderLink","Link","Icon","FolderFilter","loading","setLoading","getOptions","searchString","getFoldersAsOptions","debouncedLoadOptions","onSelectOptionChange","folders","changedFolderIds","f","params","LibraryPanelsSearchVariant","LibraryPanelsSearch","variant","currentPanelId","currentFolderUID","perPage","showPanelFilter","showFolderFilter","showSort","searchQuery","setSearchQuery","debouncedSearchQuery","setDebouncedSearchQuery","useDebounce","sortDirection","setSortDirection","folderFilter","setFolderFilter","panelFilter","setPanelFilter","sortOrFiltersVisible","verticalGroupSpacing","FilterInput","SearchControls","LibraryPanelsView","tightLayout","onSortChange","onFolderFilterChange","onPanelFilterChange","getRowStyles","panelFilterChanged","folderFilterChanged","SortPicker","searchRowContainer","searchRowContainerTight","filterContainer","filterContainerTight","className","onClickCard","currentPanel","propsPerPage","getPanelViewStyles","libraryPanels","page","numberOfPages","uid","onPageChange","item","searchForLibraryPanels","args","subscription","dataObservable","totalCount","err","deleteLibraryPanel","e","asyncDispatcher","initialLibraryPanelsViewState","initSearch","changePage","libraryPanelsViewReducer","getModalStyles","isCurrent","plugin","disabled","showBadge","description","children","isDisabled","cssClass","PanelPluginBadge","getAllPanelPluginMeta","allPanels","key","filterPluginList","pluginsList","current","query","first","match","isGraphQuery","idx","PluginStateInfo","props","display","getFeatureStateInfo"],"sourceRoot":""}