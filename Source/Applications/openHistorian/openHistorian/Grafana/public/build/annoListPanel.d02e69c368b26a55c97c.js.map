{"version":3,"file":"annoListPanel.d02e69c368b26a55c97c.js","mappings":"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","sources":["webpack://grafana/./public/app/plugins/panel/annolist/AnnotationListItem.tsx","webpack://grafana/./public/app/plugins/panel/annolist/AnnoListPanel.tsx","webpack://grafana/./public/app/plugins/panel/annolist/panelcfg.gen.ts","webpack://grafana/./public/app/plugins/panel/annolist/module.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { MouseEvent } from 'react';\n\nimport { AnnotationEvent, DateTimeInput, GrafanaTheme2, PanelProps } from '@grafana/data';\nimport { Card, TagList, Tooltip, RenderUserContentAsHTML, useStyles2 } from '@grafana/ui';\n\nimport { Options } from './panelcfg.gen';\n\ninterface Props extends Pick<PanelProps<Options>, 'options'> {\n  annotation: AnnotationEvent;\n  formatDate: (date: DateTimeInput, format?: string) => string;\n  onClick: (annotation: AnnotationEvent) => void;\n  onAvatarClick: (annotation: AnnotationEvent) => void;\n  onTagClick: (tag: string, remove?: boolean) => void;\n}\n\nexport const AnnotationListItem = ({ options, annotation, formatDate, onClick, onAvatarClick, onTagClick }: Props) => {\n  const styles = useStyles2(getStyles);\n  const { showUser, showTags, showTime } = options;\n  const { text = '', login, email, avatarUrl, tags, time, timeEnd } = annotation;\n  const onItemClick = () => {\n    onClick(annotation);\n  };\n  const onLoginClick = () => {\n    onAvatarClick(annotation);\n  };\n  const showAvatar = login && showUser;\n  const showTimeStamp = time && showTime;\n  const showTimeStampEnd = timeEnd && timeEnd !== time && showTime;\n\n  return (\n    <Card className={styles.card} onClick={onItemClick}>\n      <Card.Heading>\n        <RenderUserContentAsHTML\n          className={styles.heading}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          content={text}\n        />\n      </Card.Heading>\n      {showTimeStamp && (\n        <Card.Description className={styles.timestamp}>\n          <TimeStamp formatDate={formatDate} time={time!} />\n          {showTimeStampEnd && (\n            <>\n              <span className={styles.time}>-</span>\n              <TimeStamp formatDate={formatDate} time={timeEnd!} />{' '}\n            </>\n          )}\n        </Card.Description>\n      )}\n      {showAvatar && (\n        <Card.Meta className={styles.meta}>\n          <Avatar email={email} login={login!} avatarUrl={avatarUrl} onClick={onLoginClick} />\n        </Card.Meta>\n      )}\n      {showTags && tags && (\n        <Card.Tags>\n          <TagList tags={tags} onClick={(tag) => onTagClick(tag, false)} />\n        </Card.Tags>\n      )}\n    </Card>\n  );\n};\n\ninterface AvatarProps {\n  login: string;\n  onClick: () => void;\n  avatarUrl?: string;\n  email?: string;\n}\n\nconst Avatar = ({ onClick, avatarUrl, login, email }: AvatarProps) => {\n  const styles = useStyles2(getStyles);\n  const onAvatarClick = (e: MouseEvent) => {\n    e.stopPropagation();\n    onClick();\n  };\n  const tooltipContent = (\n    <span>\n      Created by:\n      <br /> {email}\n    </span>\n  );\n\n  return (\n    <Tooltip content={tooltipContent} theme=\"info\" placement=\"top\">\n      <button onClick={onAvatarClick} className={styles.avatar}>\n        <img src={avatarUrl} alt=\"avatar icon\" />\n      </button>\n    </Tooltip>\n  );\n};\n\ninterface TimeStampProps {\n  time: number;\n  formatDate: (date: DateTimeInput, format?: string) => string;\n}\n\nconst TimeStamp = ({ time, formatDate }: TimeStampProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <span className={styles.time}>\n      <span>{formatDate(time)}</span>\n    </span>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    card: css({\n      gridTemplateAreas: `\"Heading Description Meta Tags\"`,\n      gridTemplateColumns: 'auto 1fr auto auto',\n      padding: theme.spacing(1),\n      margin: theme.spacing(0.5),\n      width: 'inherit',\n    }),\n    heading: css({\n      a: {\n        zIndex: 1,\n        position: 'relative',\n        color: theme.colors.text.link,\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n    }),\n    meta: css({\n      margin: 0,\n      position: 'relative',\n      justifyContent: 'end',\n    }),\n    timestamp: css({\n      margin: 0,\n      alignSelf: 'center',\n    }),\n    time: css({\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      fontSize: theme.typography.bodySmall.fontSize,\n      color: theme.colors.text.secondary,\n    }),\n    avatar: css({\n      border: 'none',\n      background: 'inherit',\n      margin: 0,\n      padding: theme.spacing(0.5),\n      img: {\n        borderRadius: theme.shape.radius.circle,\n        width: theme.spacing(2),\n        height: theme.spacing(2),\n      },\n    }),\n  };\n}\n","import { css } from '@emotion/css';\nimport { createRef, PureComponent } from 'react';\nimport { Subscription } from 'rxjs';\n\nimport {\n  AnnotationChangeEvent,\n  AnnotationEvent,\n  AppEvents,\n  dateTime,\n  DurationUnit,\n  GrafanaTheme2,\n  locationUtil,\n  PanelProps,\n} from '@grafana/data';\nimport { config, getBackendSrv, locationService } from '@grafana/runtime';\nimport { Button, CustomScrollbar, stylesFactory, TagList } from '@grafana/ui';\nimport { AbstractList } from '@grafana/ui/src/components/List/AbstractList';\nimport appEvents from 'app/core/app_events';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nimport { AnnotationListItem } from './AnnotationListItem';\nimport { Options } from './panelcfg.gen';\n\ninterface UserInfo {\n  id?: number;\n  login?: string;\n  email?: string;\n}\n\nexport interface Props extends PanelProps<Options> {}\ninterface State {\n  annotations: AnnotationEvent[];\n  timeInfo: string;\n  loaded: boolean;\n  queryUser?: UserInfo;\n  queryTags: string[];\n}\nexport class AnnoListPanel extends PureComponent<Props, State> {\n  style = getStyles(config.theme2);\n  subs = new Subscription();\n  tagListRef = createRef<HTMLUListElement>();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      annotations: [],\n      timeInfo: '',\n      loaded: false,\n      queryTags: [],\n    };\n  }\n\n  componentDidMount() {\n    this.doSearch();\n\n    // When an annotation on this dashboard changes, re-run the query\n    this.subs.add(\n      this.props.eventBus.getStream(AnnotationChangeEvent).subscribe({\n        next: () => {\n          this.doSearch();\n        },\n      })\n    );\n  }\n\n  componentWillUnmount() {\n    this.subs.unsubscribe();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { options, timeRange } = this.props;\n    const needsQuery =\n      options !== prevProps.options ||\n      this.state.queryTags !== prevState.queryTags ||\n      this.state.queryUser !== prevState.queryUser ||\n      prevProps.renderCounter !== this.props.renderCounter ||\n      (options.onlyInTimeRange && timeRange !== prevProps.timeRange);\n\n    if (needsQuery) {\n      this.doSearch();\n    }\n  }\n\n  async doSearch() {\n    // http://docs.grafana.org/http_api/annotations/\n    // https://github.com/grafana/grafana/blob/main/public/app/core/services/backend_srv.ts\n    // https://github.com/grafana/grafana/blob/main/public/app/features/annotations/annotations_srv.ts\n\n    const { options } = this.props;\n    const { queryUser, queryTags } = this.state;\n\n    const params: {\n      tags: typeof options.tags;\n      limit: typeof options.limit;\n      type: string;\n    } & Record<string, unknown> = {\n      tags: options.tags,\n      limit: options.limit,\n      type: 'annotation', // Skip the Annotations that are really alerts.  (Use the alerts panel!)\n    };\n\n    if (options.onlyFromThisDashboard) {\n      params.dashboardUID = getDashboardSrv().getCurrent()?.uid;\n    }\n\n    let timeInfo = '';\n    if (options.onlyInTimeRange) {\n      const { timeRange } = this.props;\n      params.from = timeRange.from.valueOf();\n      params.to = timeRange.to.valueOf();\n    } else {\n      timeInfo = 'All Time';\n    }\n\n    if (queryUser) {\n      params.userId = queryUser.id;\n    }\n\n    if (options.tags && options.tags.length) {\n      params.tags = options.tags.map((tag) => this.props.replaceVariables(tag));\n    }\n\n    if (queryTags.length) {\n      params.tags = params.tags ? [...params.tags, ...queryTags] : queryTags;\n    }\n\n    const annotations = await getBackendSrv().get('/api/annotations', params, `anno-list-panel-${this.props.id}`);\n\n    this.setState({\n      annotations,\n      timeInfo,\n      loaded: true,\n    });\n  }\n\n  onAnnoClick = async (anno: AnnotationEvent) => {\n    if (!anno.time) {\n      return;\n    }\n\n    const { options } = this.props;\n    const dashboardSrv = getDashboardSrv();\n    const current = dashboardSrv.getCurrent();\n\n    const params = {\n      from: this._timeOffset(anno.time, options.navigateBefore, true),\n      to: this._timeOffset(anno.timeEnd ?? anno.time, options.navigateAfter, false),\n      viewPanel: options.navigateToPanel && anno.panelId ? anno.panelId : undefined,\n    };\n\n    if (!anno.dashboardUID || current?.uid === anno.dashboardUID) {\n      locationService.partial(params);\n      return;\n    }\n\n    const result = await getBackendSrv().get('/api/search', { dashboardUIDs: anno.dashboardUID });\n    if (result && result.length && result[0].uid === anno.dashboardUID) {\n      const dash = result[0];\n      const url = new URL(dash.url, window.location.origin);\n      url.searchParams.set('from', String(params.from));\n      url.searchParams.set('to', String(params.to));\n      locationService.push(locationUtil.stripBaseFromUrl(url.toString()));\n      return;\n    }\n    appEvents.emit(AppEvents.alertWarning, ['Unknown Dashboard: ' + anno.dashboardUID]);\n  };\n\n  _timeOffset(time: number, offset: string, subtract = false): number {\n    let incr = 5;\n    let unit = 'm';\n    const parts = /^(\\d+)(\\w)/.exec(offset);\n    if (parts && parts.length === 3) {\n      incr = parseInt(parts[1], 10);\n      unit = parts[2];\n    }\n\n    const t = dateTime(time);\n    if (subtract) {\n      incr *= -1;\n    }\n    return t.add(incr, unit as DurationUnit).valueOf();\n  }\n\n  onTagClick = (tag: string, remove?: boolean) => {\n    if (!remove && this.state.queryTags.includes(tag)) {\n      return;\n    }\n\n    const queryTags = remove ? this.state.queryTags.filter((item) => item !== tag) : [...this.state.queryTags, tag];\n\n    // Logic to ensure keyboard focus isn't lost when the currently\n    // focused tag is removed\n    let nextTag: HTMLElement | undefined = undefined;\n    if (remove) {\n      const focusedTag = document.activeElement;\n      const dataTagId = focusedTag?.getAttribute('data-tag-id');\n      if (this.tagListRef.current?.contains(focusedTag) && dataTagId) {\n        const parsedTagId = Number.parseInt(dataTagId, 10);\n        const possibleNextTag =\n          this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId + 1}\"]`) ??\n          this.tagListRef.current.querySelector(`[data-tag-id=\"${parsedTagId - 1}\"]`);\n        if (possibleNextTag instanceof HTMLElement) {\n          nextTag = possibleNextTag;\n        }\n      }\n    }\n\n    this.setState({ queryTags }, () => nextTag?.focus());\n  };\n\n  onUserClick = (anno: AnnotationEvent) => {\n    this.setState({\n      queryUser: {\n        id: anno.userId,\n        login: anno.login,\n        email: anno.email,\n      },\n    });\n  };\n\n  onClearUser = () => {\n    this.setState({\n      queryUser: undefined,\n    });\n  };\n\n  renderItem = (anno: AnnotationEvent, index: number): JSX.Element => {\n    const { options } = this.props;\n    const dashboard = getDashboardSrv().getCurrent();\n    if (!dashboard) {\n      return <></>;\n    }\n\n    return (\n      <AnnotationListItem\n        annotation={anno}\n        formatDate={dashboard.formatDate}\n        onClick={this.onAnnoClick}\n        onAvatarClick={this.onUserClick}\n        onTagClick={this.onTagClick}\n        options={options}\n      />\n    );\n  };\n\n  render() {\n    const { loaded, annotations, queryUser, queryTags } = this.state;\n    if (!loaded) {\n      return <div>loading...</div>;\n    }\n\n    // Previously we showed inidication that it covered all time\n    // { timeInfo && (\n    //   <span className=\"panel-time-info\">\n    //     <Icon name=\"clock-nine\" /> {timeInfo}\n    //   </span>\n    // )}\n\n    const hasFilter = queryUser || queryTags.length > 0;\n    return (\n      <CustomScrollbar autoHeightMin=\"100%\">\n        {hasFilter && (\n          <div className={this.style.filter}>\n            <b>Filter:</b>\n            {queryUser && (\n              <Button\n                size=\"sm\"\n                variant=\"secondary\"\n                fill=\"text\"\n                onClick={this.onClearUser}\n                aria-label={`Remove filter: ${queryUser.email}`}\n              >\n                {queryUser.email}\n              </Button>\n            )}\n            {queryTags.length > 0 && (\n              <TagList\n                icon=\"times\"\n                tags={queryTags}\n                onClick={(tag) => this.onTagClick(tag, true)}\n                getAriaLabel={(name) => `Remove ${name} tag`}\n                className={this.style.tagList}\n                ref={this.tagListRef}\n              />\n            )}\n          </div>\n        )}\n\n        {annotations.length < 1 && <div className={this.style.noneFound}>No Annotations Found</div>}\n\n        <AbstractList items={annotations} renderItem={this.renderItem} getItemKey={(item) => `${item.id}`} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  noneFound: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: 'calc(100% - 30px)',\n  }),\n  filter: css({\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n    padding: theme.spacing(0.5),\n  }),\n  tagList: css({\n    justifyContent: 'flex-start',\n    'li > button': {\n      paddingLeft: '3px',\n    },\n  }),\n}));\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nexport interface Options {\n  limit: number;\n  navigateAfter: string;\n  navigateBefore: string;\n  navigateToPanel: boolean;\n  onlyFromThisDashboard: boolean;\n  onlyInTimeRange: boolean;\n  showTags: boolean;\n  showTime: boolean;\n  showUser: boolean;\n  tags: Array<string>;\n}\n\nexport const defaultOptions: Partial<Options> = {\n  limit: 10,\n  navigateAfter: '10m',\n  navigateBefore: '10m',\n  navigateToPanel: true,\n  onlyFromThisDashboard: false,\n  onlyInTimeRange: false,\n  showTags: true,\n  showTime: true,\n  showUser: true,\n  tags: [],\n};\n","import { PanelModel, PanelPlugin } from '@grafana/data';\nimport { TagsInput } from '@grafana/ui';\n\nimport { AnnoListPanel } from './AnnoListPanel';\nimport { defaultOptions, Options } from './panelcfg.gen';\n\nexport const plugin = new PanelPlugin<Options>(AnnoListPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addRadio({\n        category: ['Annotation query'],\n        path: 'onlyFromThisDashboard',\n        name: 'Query filter',\n        defaultValue: defaultOptions.onlyFromThisDashboard,\n        settings: {\n          options: [\n            { value: false, label: 'All dashboards' },\n            { value: true, label: 'This dashboard' },\n          ],\n        },\n      })\n      .addRadio({\n        category: ['Annotation query'],\n        path: 'onlyInTimeRange',\n        name: 'Time range',\n        defaultValue: defaultOptions.onlyInTimeRange,\n        settings: {\n          options: [\n            { value: false, label: 'None' },\n            { value: true, label: 'This dashboard' },\n          ],\n        },\n      })\n      .addCustomEditor({\n        category: ['Annotation query'],\n        id: 'tags',\n        path: 'tags',\n        name: 'Tags',\n        description: 'Match annotation tags',\n        editor(props) {\n          return <TagsInput tags={props.value} onChange={props.onChange} />;\n        },\n      })\n      .addNumberInput({\n        category: ['Annotation query'],\n        path: 'limit',\n        name: 'Limit',\n        defaultValue: defaultOptions.limit,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showUser',\n        name: 'Show user',\n        defaultValue: defaultOptions.showUser,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showTime',\n        name: 'Show time',\n        defaultValue: defaultOptions.showTime,\n      })\n      .addBooleanSwitch({\n        category: ['Display'],\n        path: 'showTags',\n        name: 'Show tags',\n        defaultValue: defaultOptions.showTags,\n      })\n      .addRadio({\n        category: ['Link behavior'],\n        path: 'navigateToPanel',\n        name: 'Link target',\n        defaultValue: defaultOptions.navigateToPanel,\n        settings: {\n          options: [\n            { value: true, label: 'Panel' },\n            { value: false, label: 'Dashboard' },\n          ],\n        },\n      })\n      .addTextInput({\n        category: ['Link behavior'],\n        path: 'navigateBefore',\n        name: 'Time before',\n        defaultValue: defaultOptions.navigateBefore,\n        description: '',\n      })\n      .addTextInput({\n        category: ['Link behavior'],\n        path: 'navigateAfter',\n        name: 'Time after',\n        defaultValue: defaultOptions.navigateAfter,\n        description: '',\n      });\n  })\n  // TODO, we should support this directly in the plugin infrastructure\n  .setPanelChangeHandler((panel: PanelModel<Options>, prevPluginId, prevOptions) => {\n    if (prevPluginId === 'ryantxu-annolist-panel') {\n      return prevOptions;\n    }\n\n    return panel.options;\n  });\n"],"names":["AnnotationListItem","options","annotation","formatDate","onClick","onAvatarClick","onTagClick","styles","getStyles","showUser","showTags","showTime","text","login","email","avatarUrl","tags","time","timeEnd","onItemClick","onLoginClick","showAvatar","showTimeStamp","showTimeStampEnd","Card","RenderUserContentAsHTML","e","TimeStamp","Avatar","TagList","tag","tooltipContent","Tooltip","theme","AnnoListPanel","props","config","Subscription","anno","current","params","result","dash","url","remove","queryTags","item","nextTag","focusedTag","dataTagId","parsedTagId","possibleNextTag","index","dashboard","prevProps","prevState","timeRange","queryUser","timeInfo","annotations","offset","subtract","incr","unit","parts","t","loaded","hasFilter","CustomScrollbar","Button","name","AbstractList","stylesFactory","defaultOptions","PanelPlugin","builder","TagsInput","panel","prevPluginId","prevOptions"],"sourceRoot":""}