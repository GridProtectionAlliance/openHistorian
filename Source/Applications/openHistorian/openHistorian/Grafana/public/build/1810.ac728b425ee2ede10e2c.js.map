{"version":3,"file":"1810.ac728b425ee2ede10e2c.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/components/rules/Filter/RulesFilter.v2.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport {\n  Badge,\n  Button,\n  Grid,\n  IconButton,\n  Input,\n  InteractiveTable,\n  Label,\n  RadioButtonGroup,\n  Select,\n  Stack,\n  Tab,\n  TabsBar,\n  useStyles2,\n} from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nimport { PopupCard } from '../../HoverCard';\nimport MoreButton from '../../MoreButton';\n\ntype RulesFilterProps = {\n  onClear?: () => void;\n};\n\ntype ActiveTab = 'custom' | 'saved';\n\nexport default function RulesFilter({ onClear = () => {} }: RulesFilterProps) {\n  const styles = useStyles2(getStyles);\n  const [activeTab, setActiveTab] = useState<ActiveTab>('custom');\n\n  const filterOptions = useMemo(() => {\n    return (\n      <PopupCard\n        showOn=\"click\"\n        placement=\"bottom-start\"\n        content={\n          <div className={styles.content}>\n            {activeTab === 'custom' && <FilterOptions />}\n            {activeTab === 'saved' && <SavedSearches />}\n          </div>\n        }\n        header={\n          <TabsBar hideBorder className={styles.fixTabsMargin}>\n            <Tab\n              active={activeTab === 'custom'}\n              icon=\"filter\"\n              label={'Custom filter'}\n              onChangeTab={() => setActiveTab('custom')}\n            />\n            <Tab\n              active={activeTab === 'saved'}\n              icon=\"bookmark\"\n              label={'Saved searches'}\n              onChangeTab={() => setActiveTab('saved')}\n            />\n          </TabsBar>\n        }\n      >\n        <IconButton name=\"filter\" aria-label=\"Show filters\" />\n      </PopupCard>\n    );\n  }, [activeTab, styles.content, styles.fixTabsMargin]);\n\n  return (\n    <Stack direction=\"column\" gap={0}>\n      <Label>\n        <Trans i18nKey=\"common.search\">Search</Trans>\n      </Label>\n      <Stack direction=\"row\">\n        <Input prefix={filterOptions} />\n      </Stack>\n    </Stack>\n  );\n}\n\nconst FilterOptions = () => {\n  return (\n    <Stack direction=\"column\" alignItems=\"end\" gap={2}>\n      <Grid columns={2} gap={2} alignItems=\"center\">\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.namespace\">Folder / Namespace</Trans>\n        </Label>\n        <Select options={[]} onChange={() => {}}></Select>\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.rule-name\">Alerting rule name</Trans>\n        </Label>\n        <Input />\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.evaluation-group\">Evaluation group</Trans>\n        </Label>\n        <Input />\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.labels\">Labels</Trans>\n        </Label>\n        <Input />\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.data-source\">Data source</Trans>\n        </Label>\n        <Select options={[]} onChange={() => {}}></Select>\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.state\">State</Trans>\n        </Label>\n        <RadioButtonGroup\n          value={'*'}\n          options={[\n            { label: 'All', value: '*' },\n            { label: 'Normal', value: 'normal' },\n            { label: 'Pending', value: 'pending' },\n            { label: 'Firing', value: 'firing' },\n          ]}\n        />\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.rule-type\">Type</Trans>\n        </Label>\n        <RadioButtonGroup\n          value={'*'}\n          options={[\n            { label: 'All', value: '*' },\n            { label: 'Alert rule', value: 'alerting' },\n            { label: 'Recording rule', value: 'recording' },\n          ]}\n        />\n        <Label>\n          <Trans i18nKey=\"alerting.search.property.rule-health\">Health</Trans>\n        </Label>\n        <RadioButtonGroup\n          value={'*'}\n          options={[\n            { label: 'All', value: '*' },\n            { label: 'OK', value: 'ok' },\n            { label: 'No data', value: 'no_data' },\n            { label: 'Error', value: 'error' },\n          ]}\n        />\n      </Grid>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Button variant=\"secondary\">\n          <Trans i18nKey=\"common.clear\">Clear</Trans>\n        </Button>\n        <Button>\n          <Trans i18nKey=\"common.apply\">Apply</Trans>\n        </Button>\n      </Stack>\n    </Stack>\n  );\n};\n\ntype TableColumns = {\n  name: string;\n  default?: boolean;\n};\n\nconst SavedSearches = () => {\n  const applySearch = useCallback((name: string) => {}, []);\n\n  return (\n    <>\n      <Stack direction=\"column\" gap={2} alignItems=\"flex-end\">\n        <Button variant=\"secondary\" size=\"sm\">\n          <Trans i18nKey=\"alerting.search.save-query\">Save current search</Trans>\n        </Button>\n        <InteractiveTable<TableColumns>\n          columns={[\n            {\n              id: 'name',\n              header: 'Saved search name',\n              cell: ({ row }) => (\n                <Stack alignItems=\"center\">\n                  {row.original.name}\n                  {row.original.default ? <Badge text=\"Default\" color=\"blue\" /> : null}\n                </Stack>\n              ),\n            },\n            {\n              id: 'actions',\n              cell: ({ row }) => (\n                <Stack direction=\"row\" alignItems=\"center\">\n                  <Button variant=\"secondary\" fill=\"outline\" size=\"sm\" onClick={() => applySearch(row.original.name)}>\n                    <Trans i18nKey=\"common.apply\">Apply</Trans>\n                  </Button>\n                  <MoreButton size=\"sm\" fill=\"outline\" />\n                </Stack>\n              ),\n            },\n          ]}\n          data={[\n            {\n              name: 'My saved search',\n              default: true,\n            },\n            {\n              name: 'Another saved search',\n            },\n            {\n              name: 'This one has a really long name and some emojis too ðŸ¥’',\n            },\n          ]}\n          getRowId={(row) => row.name}\n        />\n        <Button variant=\"secondary\">\n          <Trans i18nKey=\"common.close\">Close</Trans>\n        </Button>\n      </Stack>\n    </>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    content: css({\n      padding: theme.spacing(1),\n      maxWidth: 500,\n    }),\n    fixTabsMargin: css({\n      marginTop: theme.spacing(-1),\n    }),\n  };\n}\n"],"names":["RulesFilter","onClear","styles","getStyles","activeTab","setActiveTab","filterOptions","FilterOptions","SavedSearches","applySearch","name","row","theme"],"sourceRoot":""}