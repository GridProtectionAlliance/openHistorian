{"version":3,"file":"gettingStartedPanel.830005e471ef0dce7e2a.js","mappings":"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","sources":["webpack://grafana/./public/app/plugins/panel/gettingstarted/components/sharedStyles.ts","webpack://grafana/./public/app/plugins/panel/gettingstarted/components/DocsCard.tsx","webpack://grafana/./public/app/plugins/panel/gettingstarted/components/TutorialCard.tsx","webpack://grafana/./public/app/plugins/panel/gettingstarted/components/Step.tsx","webpack://grafana/./public/app/plugins/panel/gettingstarted/steps.ts","webpack://grafana/./public/app/plugins/panel/gettingstarted/GettingStarted.tsx","webpack://grafana/./public/app/plugins/panel/gettingstarted/module.ts"],"sourcesContent":["import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const cardStyle = (theme: GrafanaTheme2, complete: boolean) => {\n  const completeGradient = 'linear-gradient(to right, #5182CC 0%, #245BAF 100%)';\n  const darkThemeGradients = complete ? completeGradient : 'linear-gradient(to right, #f05a28 0%, #fbca0a 100%)';\n  const lightThemeGradients = complete ? completeGradient : 'linear-gradient(to right, #FBCA0A 0%, #F05A28 100%)';\n\n  const borderGradient = theme.isDark ? darkThemeGradients : lightThemeGradients;\n\n  return `\n      background-color: ${theme.colors.background.secondary};\n      margin-right: ${theme.spacing(4)};\n      border: 1px solid ${theme.colors.border.weak};\n      border-bottom-left-radius: ${theme.shape.borderRadius(2)};\n      border-bottom-right-radius: ${theme.shape.borderRadius(2)};\n      position: relative;\n      max-height: 230px;\n\n      ${theme.breakpoints.down('xxl')} {\n        margin-right: ${theme.spacing(2)};\n      }\n      &::before {\n        display: block;\n        content: ' ';\n        position: absolute;\n        left: 0;\n        right: 0;\n        height: 2px;\n        top: 0;\n        background-image: ${borderGradient};\n      }\n`;\n};\n\nexport const cardContent = css`\n  padding: 16px;\n`;\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { Card } from '../types';\n\nimport { cardContent, cardStyle } from './sharedStyles';\n\ninterface Props {\n  card: Card;\n}\n\nexport const DocsCard = ({ card }: Props) => {\n  const styles = useStyles2(getStyles, card.done);\n\n  return (\n    <div className={styles.card}>\n      <div className={cardContent}>\n        <a\n          href={`${card.href}?utm_source=grafana_gettingstarted`}\n          className={styles.url}\n          onClick={() => reportInteraction('grafana_getting_started_docs', { title: card.title, link: card.href })}\n        >\n          <div className={styles.heading}>{card.done ? 'complete' : card.heading}</div>\n          <h4 className={styles.title}>{card.title}</h4>\n        </a>\n      </div>\n      <a\n        href={`${card.learnHref}?utm_source=grafana_gettingstarted`}\n        className={styles.learnUrl}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        onClick={() => reportInteraction('grafana_getting_started_docs', { title: card.title, link: card.learnHref })}\n      >\n        Learn how in the docs <Icon name=\"external-link-alt\" />\n      </a>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2, complete: boolean) => {\n  return {\n    card: css`\n      ${cardStyle(theme, complete)}\n\n      min-width: 230px;\n\n      ${theme.breakpoints.down('md')} {\n        min-width: 192px;\n      }\n    `,\n    heading: css`\n      text-transform: uppercase;\n      color: ${complete ? theme.v1.palette.blue95 : '#FFB357'};\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    title: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    url: css`\n      display: inline-block;\n    `,\n    learnUrl: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n      position: absolute;\n      bottom: 0;\n      padding: 8px 16px;\n      width: 100%;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { MouseEvent } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { TutorialCardType } from '../types';\n\nimport { cardContent, cardStyle } from './sharedStyles';\n\ninterface Props {\n  card: TutorialCardType;\n}\n\nexport const TutorialCard = ({ card }: Props) => {\n  const styles = useStyles2(getStyles, card.done);\n\n  return (\n    <a\n      className={styles.card}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`${card.href}?utm_source=grafana_gettingstarted`}\n      onClick={(event: MouseEvent<HTMLAnchorElement>) => handleTutorialClick(event, card)}\n    >\n      <div className={cardContent}>\n        <div className={styles.type}>{card.type}</div>\n        <div className={styles.heading}>{card.done ? 'complete' : card.heading}</div>\n        <h4 className={styles.cardTitle}>{card.title}</h4>\n        <div className={styles.info}>{card.info}</div>\n      </div>\n    </a>\n  );\n};\n\nconst handleTutorialClick = (event: MouseEvent<HTMLAnchorElement>, card: TutorialCardType) => {\n  const isSet = store.get(card.key);\n  if (!isSet) {\n    store.set(card.key, true);\n  }\n  reportInteraction('grafana_getting_started_tutorial', { title: card.title });\n};\n\nconst getStyles = (theme: GrafanaTheme2, complete: boolean) => {\n  return {\n    card: css`\n      ${cardStyle(theme, complete)}\n      width: 460px;\n      min-width: 460px;\n\n      ${theme.breakpoints.down('xl')} {\n        min-width: 368px;\n      }\n\n      ${theme.breakpoints.down('lg')} {\n        min-width: 272px;\n      }\n    `,\n    type: css`\n      color: ${theme.colors.primary.text};\n      text-transform: uppercase;\n    `,\n    heading: css`\n      text-transform: uppercase;\n      color: ${theme.colors.primary.text};\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    cardTitle: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    info: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    status: css`\n      display: flex;\n      justify-content: flex-end;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { SetupStep } from '../types';\n\nimport { DocsCard } from './DocsCard';\nimport { TutorialCard } from './TutorialCard';\n\ninterface Props {\n  step: SetupStep;\n}\n\nexport const Step = ({ step }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.setup}>\n      <div className={styles.info}>\n        <h2 className={styles.title}>{step.title}</h2>\n        <p>{step.info}</p>\n      </div>\n      <div className={styles.cards}>\n        {step.cards.map((card, index) => {\n          const key = `${card.title}-${index}`;\n          if (card.type === 'tutorial') {\n            return <TutorialCard key={key} card={card} />;\n          }\n          return <DocsCard key={key} card={card} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    setup: css({\n      display: 'flex',\n      width: '95%',\n    }),\n    info: css({\n      width: '172px',\n      marginRight: '5%',\n\n      [theme.breakpoints.down('xxl')]: {\n        marginRight: theme.spacing(4),\n      },\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    }),\n    title: css({\n      color: theme.v1.palette.blue95,\n    }),\n    cards: css({\n      overflowX: 'auto',\n      overflowY: 'hidden',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'flex-start',\n    }),\n  };\n};\n","import { getBackendSrv } from 'app/core/services/backend_srv';\nimport store from 'app/core/store';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\n\nimport { SetupStep } from './types';\n\nconst step1TutorialTitle = 'Grafana fundamentals';\nconst step2TutorialTitle = 'Create users and teams';\nconst keyPrefix = 'getting.started.';\nconst step1Key = `${keyPrefix}${step1TutorialTitle.replace(' ', '-').trim().toLowerCase()}`;\nconst step2Key = `${keyPrefix}${step2TutorialTitle.replace(' ', '-').trim().toLowerCase()}`;\n\nexport const getSteps = (): SetupStep[] => [\n  {\n    heading: 'Welcome to Grafana',\n    subheading: 'The steps below will guide you to quickly finish setting up your Grafana installation.',\n    title: 'Basic',\n    info: 'The steps below will guide you to quickly finish setting up your Grafana installation.',\n    done: false,\n    cards: [\n      {\n        type: 'tutorial',\n        heading: 'Data source and dashboards',\n        title: step1TutorialTitle,\n        info: 'Set up and understand Grafana if you have no prior experience. This tutorial guides you through the entire process and covers the “Data source” and “Dashboards” steps to the right.',\n        href: 'https://grafana.com/tutorials/grafana-fundamentals',\n        icon: 'grafana',\n        check: () => Promise.resolve(store.get(step1Key)),\n        key: step1Key,\n        done: false,\n      },\n      {\n        type: 'docs',\n        title: 'Add your first data source',\n        heading: 'data sources',\n        icon: 'database',\n        learnHref: 'https://grafana.com/docs/grafana/latest/features/datasources/add-a-data-source',\n        href: 'datasources/new',\n        check: () => {\n          return new Promise((resolve) => {\n            resolve(\n              getDatasourceSrv()\n                .getMetricSources()\n                .filter((item) => {\n                  return item.meta.builtIn !== true;\n                }).length > 0\n            );\n          });\n        },\n        done: false,\n      },\n      {\n        type: 'docs',\n        heading: 'dashboards',\n        title: 'Create your first dashboard',\n        icon: 'apps',\n        href: 'dashboard/new',\n        learnHref: 'https://grafana.com/docs/grafana/latest/guides/getting_started/#create-a-dashboard',\n        check: async () => {\n          const result = await getBackendSrv().search({ limit: 1 });\n          return result.length > 0;\n        },\n        done: false,\n      },\n    ],\n  },\n  {\n    heading: 'Setup complete!',\n    subheading:\n      'All necessary steps to use Grafana are done. Now tackle advanced steps or make the best use of this home dashboard – it is, after all, a fully customizable dashboard – and remove this panel.',\n    title: 'Advanced',\n    info: ' Manage your users and teams and add plugins. These steps are optional',\n    done: false,\n    cards: [\n      {\n        type: 'tutorial',\n        heading: 'Users',\n        title: 'Create users and teams',\n        info: 'Learn to organize your users in teams and manage resource access and roles.',\n        href: 'https://grafana.com/tutorials/create-users-and-teams',\n        icon: 'users-alt',\n        key: step2Key,\n        check: () => Promise.resolve(store.get(step2Key)),\n        done: false,\n      },\n      {\n        type: 'docs',\n        heading: 'plugins',\n        title: 'Find and install plugins',\n        learnHref: 'https://grafana.com/docs/grafana/latest/plugins/installation',\n        href: 'plugins',\n        icon: 'plug',\n        check: async () => {\n          const plugins = await getBackendSrv().get('/api/plugins', { embedded: 0, core: 0 });\n          return Promise.resolve(plugins.length > 0);\n        },\n        done: false,\n      },\n    ],\n  },\n];\n","// Libraries\nimport { css, cx } from '@emotion/css';\nimport { PureComponent } from 'react';\n\nimport { PanelProps } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Button, Spinner, stylesFactory } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { backendSrv } from 'app/core/services/backend_srv';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nimport { Step } from './components/Step';\nimport { getSteps } from './steps';\nimport { SetupStep } from './types';\n\ninterface State {\n  checksDone: boolean;\n  currentStep: number;\n  steps: SetupStep[];\n}\n\nexport class GettingStarted extends PureComponent<PanelProps, State> {\n  state = {\n    checksDone: false,\n    currentStep: 0,\n    steps: getSteps(),\n  };\n\n  async componentDidMount() {\n    const { steps } = this.state;\n\n    const checkedStepsPromises: Array<Promise<SetupStep>> = steps.map(async (step: SetupStep) => {\n      const checkedCardsPromises = step.cards.map(async (card) => {\n        return card.check().then((passed) => {\n          return { ...card, done: passed };\n        });\n      });\n      const checkedCards = await Promise.all(checkedCardsPromises);\n      return {\n        ...step,\n        done: checkedCards.every((c) => c.done),\n        cards: checkedCards,\n      };\n    });\n\n    const checkedSteps = await Promise.all(checkedStepsPromises);\n\n    this.setState({\n      currentStep: !checkedSteps[0].done ? 0 : 1,\n      steps: checkedSteps,\n      checksDone: true,\n    });\n  }\n\n  onForwardClick = () => {\n    reportInteraction('grafana_getting_started_button_to_advanced_tutorials');\n    this.setState((prevState) => ({\n      currentStep: prevState.currentStep + 1,\n    }));\n  };\n\n  onPreviousClick = () => {\n    reportInteraction('grafana_getting_started_button_to_basic_tutorials');\n    this.setState((prevState) => ({\n      currentStep: prevState.currentStep - 1,\n    }));\n  };\n\n  dismiss = () => {\n    const { id } = this.props;\n    const dashboard = getDashboardSrv().getCurrent();\n    const panel = dashboard?.getPanelById(id);\n\n    reportInteraction('grafana_getting_started_remove_panel');\n\n    dashboard?.removePanel(panel!);\n\n    backendSrv.put('/api/user/helpflags/1', undefined, { showSuccessAlert: false }).then((res) => {\n      contextSrv.user.helpFlags1 = res.helpFlags1;\n    });\n  };\n\n  render() {\n    const { checksDone, currentStep, steps } = this.state;\n    const styles = getStyles();\n    const step = steps[currentStep];\n\n    return (\n      <div className={styles.container}>\n        {!checksDone ? (\n          <div className={styles.loading}>\n            <div className={styles.loadingText}>Checking completed setup steps</div>\n            <Spinner size=\"xl\" inline />\n          </div>\n        ) : (\n          <>\n            <Button variant=\"secondary\" fill=\"text\" className={styles.dismiss} onClick={this.dismiss}>\n              Remove this panel\n            </Button>\n            {currentStep === steps.length - 1 && (\n              <Button\n                className={cx(styles.backForwardButtons, styles.previous)}\n                onClick={this.onPreviousClick}\n                aria-label=\"To basic tutorials\"\n                icon=\"angle-left\"\n                variant=\"secondary\"\n              />\n            )}\n            <div className={styles.content}>\n              <Step step={step} />\n            </div>\n            {currentStep < steps.length - 1 && (\n              <Button\n                className={cx(styles.backForwardButtons, styles.forward)}\n                onClick={this.onForwardClick}\n                aria-label=\"To advanced tutorials\"\n                icon=\"angle-right\"\n                variant=\"secondary\"\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst getStyles = stylesFactory(() => {\n  const theme = config.theme2;\n  return {\n    container: css({\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      backgroundSize: 'cover',\n      padding: `${theme.spacing(4)} ${theme.spacing(2)} 0`,\n    }),\n    content: css({\n      label: 'content',\n      display: 'flex',\n      justifyContent: 'center',\n\n      [theme.breakpoints.down('xxl')]: {\n        marginLeft: theme.spacing(3),\n        justifyContent: 'flex-start',\n      },\n    }),\n    header: css({\n      label: 'header',\n      marginBottom: theme.spacing(3),\n      display: 'flex',\n      flexDirection: 'column',\n\n      [theme.breakpoints.down('lg')]: {\n        flexDirection: 'row',\n      },\n    }),\n    headerLogo: css({\n      height: '58px',\n      paddingRight: theme.spacing(2),\n      display: 'none',\n\n      [theme.breakpoints.up('md')]: {\n        display: 'block',\n      },\n    }),\n    heading: css({\n      label: 'heading',\n      marginRight: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      flexGrow: 1,\n      display: 'flex',\n\n      [theme.breakpoints.up('md')]: {\n        marginBottom: 0,\n      },\n    }),\n    backForwardButtons: css({\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateY(-50%)',\n    }),\n    previous: css({\n      left: '10px',\n      [theme.breakpoints.down('md')]: {\n        left: 0,\n      },\n    }),\n    forward: css({\n      right: '10px',\n      [theme.breakpoints.down('md')]: {\n        right: 0,\n      },\n    }),\n    dismiss: css({\n      alignSelf: 'flex-end',\n      textDecoration: 'underline',\n      marginBottom: theme.spacing(1),\n    }),\n    loading: css({\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n    }),\n    loadingText: css({\n      marginRight: theme.spacing(1),\n    }),\n  };\n});\n","import { PanelPlugin } from '@grafana/data';\n\nimport { GettingStarted } from './GettingStarted';\n\n// Simplest possible panel plugin\nexport const plugin = new PanelPlugin(GettingStarted).setNoPadding();\n"],"names":["cardStyle","theme","complete","completeGradient","darkThemeGradients","lightThemeGradients","borderGradient","cardContent","DocsCard","card","styles","getStyles","Icon","TutorialCard","event","handleTutorialClick","store","Step","step","index","key","step1TutorialTitle","step2TutorialTitle","keyPrefix","step1Key","step2Key","getSteps","resolve","item","plugins","GettingStarted","prevState","id","dashboard","panel","res","steps","checkedStepsPromises","checkedCardsPromises","passed","checkedCards","c","checkedSteps","checksDone","currentStep","Button","Spinner","stylesFactory","config","PanelPlugin"],"sourceRoot":""}