{"version":3,"file":"UserListAdminPage.4b394a853da852298a22.js","mappings":"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","sources":["webpack://grafana/./public/app/features/admin/UserListAdminPage.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { ComponentType, useEffect, useMemo, memo } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport {\n  Icon,\n  IconName,\n  LinkButton,\n  Pagination,\n  RadioButtonGroup,\n  Tooltip,\n  useStyles2,\n  FilterInput,\n} from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { contextSrv } from 'app/core/core';\n\nimport PageLoader from '../../core/components/PageLoader/PageLoader';\nimport { AccessControlAction, StoreState, Unit, UserDTO, UserFilter } from '../../types';\n\nimport { changeFilter, changePage, changeQuery, fetchUsers } from './state/actions';\n\nexport interface FilterProps {\n  filters: UserFilter[];\n  onChange: (filter: UserFilter) => void;\n  className?: string;\n}\nconst extraFilters: Array<ComponentType<FilterProps>> = [];\nexport const addExtraFilters = (filter: ComponentType<FilterProps>) => {\n  extraFilters.push(filter);\n};\n\nconst mapDispatchToProps = {\n  fetchUsers,\n  changeQuery,\n  changePage,\n  changeFilter,\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  users: state.userListAdmin.users,\n  query: state.userListAdmin.query,\n  showPaging: state.userListAdmin.showPaging,\n  totalPages: state.userListAdmin.totalPages,\n  page: state.userListAdmin.page,\n  filters: state.userListAdmin.filters,\n  isLoading: state.userListAdmin.isLoading,\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nconst UserListAdminPageUnConnected = ({\n  fetchUsers,\n  query,\n  changeQuery,\n  users,\n  showPaging,\n  totalPages,\n  page,\n  changePage,\n  changeFilter,\n  filters,\n  isLoading,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const showLicensedRole = useMemo(() => users.some((user) => user.licensedRole), [users]);\n\n  return (\n    <Page.Contents>\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput\n            placeholder=\"Search user by login, email, or name.\"\n            autoFocus={true}\n            value={query}\n            onChange={changeQuery}\n          />\n          <RadioButtonGroup\n            options={[\n              { label: 'All users', value: false },\n              { label: 'Active last 30 days', value: true },\n            ]}\n            onChange={(value) => changeFilter({ name: 'activeLast30Days', value })}\n            value={filters.find((f) => f.name === 'activeLast30Days')?.value}\n            className={styles.filter}\n          />\n          {extraFilters.map((FilterComponent, index) => (\n            <FilterComponent key={index} filters={filters} onChange={changeFilter} className={styles.filter} />\n          ))}\n        </div>\n        {contextSrv.hasPermission(AccessControlAction.UsersCreate) && (\n          <LinkButton href=\"admin/users/create\" variant=\"primary\">\n            New user\n          </LinkButton>\n        )}\n      </div>\n      {isLoading ? (\n        <PageLoader />\n      ) : (\n        <>\n          <div className={cx(styles.table, 'admin-list-table')}>\n            <table className=\"filter-table form-inline filter-table--hover\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Login</th>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Belongs to</th>\n                  {showLicensedRole && (\n                    <th>\n                      Licensed role{' '}\n                      <Tooltip\n                        placement=\"top\"\n                        content={\n                          <>\n                            Licensed role is based on a user&apos;s Org role (i.e. Viewer, Editor, Admin) and their\n                            dashboard/folder permissions.{' '}\n                            <a\n                              className={styles.link}\n                              target=\"_blank\"\n                              rel=\"noreferrer noopener\"\n                              href={\n                                'https://grafana.com/docs/grafana/next/enterprise/license/license-restrictions/#active-users-limit'\n                              }\n                            >\n                              Learn more\n                            </a>\n                          </>\n                        }\n                      >\n                        <Icon name=\"question-circle\" />\n                      </Tooltip>\n                    </th>\n                  )}\n                  <th>\n                    Last active&nbsp;\n                    <Tooltip placement=\"top\" content=\"Time since user was seen using Grafana\">\n                      <Icon name=\"question-circle\" />\n                    </Tooltip>\n                  </th>\n                  <th style={{ width: '1%' }}>Origin</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((user) => (\n                  <UserListItem user={user} showLicensedRole={showLicensedRole} key={user.id} />\n                ))}\n              </tbody>\n            </table>\n          </div>\n          {showPaging && <Pagination numberOfPages={totalPages} currentPage={page} onNavigate={changePage} />}\n        </>\n      )}\n    </Page.Contents>\n  );\n};\n\nexport const UserListAdminPageContent = connector(UserListAdminPageUnConnected);\nexport function UserListAdminPage() {\n  return (\n    <Page navId=\"global-users\">\n      <UserListAdminPageContent />\n    </Page>\n  );\n}\n\nconst getUsersAriaLabel = (name: string) => {\n  return `Edit user's ${name} details`;\n};\n\ntype UserListItemProps = {\n  user: UserDTO;\n  showLicensedRole: boolean;\n};\n\nconst UserListItem = memo(({ user, showLicensedRole }: UserListItemProps) => {\n  const styles = useStyles2(getStyles);\n  const editUrl = `admin/users/edit/${user.id}`;\n\n  return (\n    <tr key={user.id}>\n      <td className=\"width-4 text-center link-td\">\n        <a href={editUrl} aria-label={`Edit user's ${user.name} details`}>\n          <img className=\"filter-table__avatar\" src={user.avatarUrl} alt={`Avatar for user ${user.name}`} />\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.login} aria-label={getUsersAriaLabel(user.name)}>\n          {user.login}\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.email} aria-label={getUsersAriaLabel(user.name)}>\n          {user.email}\n        </a>\n      </td>\n      <td className=\"link-td max-width-10\">\n        <a className=\"ellipsis\" href={editUrl} title={user.name} aria-label={getUsersAriaLabel(user.name)}>\n          {user.name}\n        </a>\n      </td>\n\n      <td\n        className={styles.row}\n        title={\n          user.orgs?.length\n            ? `The user is a member of the following organizations: ${user.orgs.map((org) => org.name).join(',')}`\n            : undefined\n        }\n      >\n        <OrgUnits units={user.orgs} icon={'building'} />\n        {user.isAdmin && (\n          <a href={editUrl} aria-label={getUsersAriaLabel(user.name)}>\n            <Tooltip placement=\"top\" content=\"Grafana Admin\">\n              <Icon name=\"shield\" />\n            </Tooltip>\n          </a>\n        )}\n      </td>\n      {showLicensedRole && (\n        <td className={cx('link-td', styles.iconRow)}>\n          <a className=\"ellipsis\" href={editUrl} title={user.name} aria-label={getUsersAriaLabel(user.name)}>\n            {user.licensedRole === 'None' ? (\n              <span className={styles.disabled}>\n                Not assigned{' '}\n                <Tooltip placement=\"top\" content=\"A licensed role will be assigned when this user signs in\">\n                  <Icon name=\"question-circle\" />\n                </Tooltip>\n              </span>\n            ) : (\n              user.licensedRole\n            )}\n          </a>\n        </td>\n      )}\n      <td className=\"link-td\">\n        {user.lastSeenAtAge && (\n          <a\n            href={editUrl}\n            aria-label={`Last seen at ${user.lastSeenAtAge}. Follow to edit user's ${user.name} details.`}\n          >\n            {user.lastSeenAtAge === '10 years' ? <span className={styles.disabled}>Never</span> : user.lastSeenAtAge}\n          </a>\n        )}\n      </td>\n      <td className=\"text-right\">\n        {Array.isArray(user.authLabels) && user.authLabels.length > 0 && (\n          <TagBadge label={user.authLabels[0]} removeIcon={false} count={0} />\n        )}\n      </td>\n      <td className=\"text-right\">\n        {user.isDisabled && <span className=\"label label-tag label-tag--gray\">Disabled</span>}\n      </td>\n    </tr>\n  );\n});\n\nUserListItem.displayName = 'UserListItem';\n\ntype OrgUnitProps = { units?: Unit[]; icon: IconName };\n\nconst OrgUnits = ({ units, icon }: OrgUnitProps) => {\n  const styles = useStyles2(getStyles);\n\n  if (!units?.length) {\n    return null;\n  }\n\n  return units.length > 1 ? (\n    <Tooltip\n      placement={'top'}\n      content={\n        <div className={styles.unitTooltip}>\n          {units?.map((unit) => (\n            <a\n              href={unit.url}\n              className={styles.link}\n              title={unit.name}\n              key={unit.name}\n              aria-label={`Edit ${unit.name}`}\n            >\n              {unit.name}\n            </a>\n          ))}\n        </div>\n      }\n    >\n      <div className={styles.unitItem}>\n        <Icon name={icon} /> <span>{units.length}</span>\n      </div>\n    </Tooltip>\n  ) : (\n    <a\n      href={units[0].url}\n      className={styles.unitItem}\n      title={units[0].name}\n      key={units[0].name}\n      aria-label={`Edit ${units[0].name}`}\n    >\n      <Icon name={icon} /> {units[0].name}\n    </a>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    table: css`\n      margin-top: ${theme.spacing(3)};\n    `,\n    filter: css`\n      margin: 0 ${theme.spacing(1)};\n    `,\n    iconRow: css`\n      svg {\n        margin-left: ${theme.spacing(0.5)};\n      }\n    `,\n    row: css`\n      display: flex;\n      align-items: center;\n      height: 100% !important;\n\n      a {\n        padding: ${theme.spacing(0.5)} 0 !important;\n      }\n    `,\n    unitTooltip: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    unitItem: css`\n      cursor: pointer;\n      padding: ${theme.spacing(0.5)} 0;\n      margin-right: ${theme.spacing(1)};\n    `,\n    disabled: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    link: css`\n      color: inherit;\n      cursor: pointer;\n      text-decoration: underline;\n    `,\n  };\n};\n\nexport default UserListAdminPage;\n"],"names":["extraFilters","addExtraFilters","filter","mapDispatchToProps","mapStateToProps","state","UserListAdminPageContent","fetchUsers","query","changeQuery","users","showPaging","totalPages","page","changePage","changeFilter","filters","isLoading","styles","getStyles","showLicensedRole","user","value","f","FilterComponent","index","UserListItem","UserListAdminPage","getUsersAriaLabel","name","editUrl","org","OrgUnits","units","icon","unit","theme"],"sourceRoot":""}