{"version":3,"sources":["webpack:///./public/app/features/admin/state/apis.ts","webpack:///./public/app/features/admin/ServerStats.tsx"],"names":["getServerStats","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","Promise","_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__","get","name","value","res","_a","sent","users","admins","editors","viewers","activeUsers","activeAdmins","activeEditors","activeViewers","activeSessions","dashboards","orgs","playlists","snapshots","tags","stars","alerts","console","error","error_1","ServerStats","_super","_this","apply","this","arguments","state","stats","isLoading","prototype","componentDidMount","props","setState","render","navModel","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_6__","Contents","className","map","StatItem","react__WEBPACK_IMPORTED_MODULE_1__","stat","key","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_4__","navIndex","_state_apis__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"wJAOaA,EAAiB,kBAAAC,OAAAC,EAAA,UAAAD,MAAA,SAAUE,QAAO,wFAE/B,gCAAMF,OAAAG,EAAA,cAAAH,GAAgBI,IAAI,2BACtC,SAAO,CACL,CAAEC,KAAM,cAAeC,OAFnBC,EAAMC,EAAAC,QAEwBC,OAClC,CAAEL,KAAM,eAAgBC,MAAOC,EAAII,QACnC,CAAEN,KAAM,gBAAiBC,MAAOC,EAAIK,SACpC,CAAEP,KAAM,gBAAiBC,MAAOC,EAAIM,SACpC,CAAER,KAAM,mCAAoCC,MAAOC,EAAIO,aACvD,CAAET,KAAM,oCAAqCC,MAAOC,EAAIQ,cACxD,CAAEV,KAAM,qCAAsCC,MAAOC,EAAIS,eACzD,CAAEX,KAAM,qCAAsCC,MAAOC,EAAIU,eACzD,CAAEZ,KAAM,kBAAmBC,MAAOC,EAAIW,gBACtC,CAAEb,KAAM,mBAAoBC,MAAOC,EAAIY,YACvC,CAAEd,KAAM,aAAcC,MAAOC,EAAIa,MACjC,CAAEf,KAAM,kBAAmBC,MAAOC,EAAIc,WACtC,CAAEhB,KAAM,kBAAmBC,MAAOC,EAAIe,WACtC,CAAEjB,KAAM,uBAAwBC,MAAOC,EAAIgB,MAC3C,CAAElB,KAAM,2BAA4BC,MAAOC,EAAIiB,OAC/C,CAAEnB,KAAM,eAAgBC,MAAOC,EAAIkB,iBAIrC,iBADAC,QAAQC,MAAMC,GACRA,0NCXVC,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,MAAe,CACbC,MAAO,GACPC,WAAW,KAgCf,OAnCiCrC,OAAAC,EAAA,UAAAD,CAAA6B,EAAAC,GAMzBD,EAAAS,UAAAC,kBAAN,iJAEkB,gCAAMN,KAAKO,MAAMzC,gCAAzBqC,EAAQ5B,EAAAC,OACdwB,KAAKQ,SAAS,CAAEL,MAAKA,EAAEC,WAAW,mCAElCX,QAAQC,MAAMC,gCAIlBC,EAAAS,UAAAI,OAAA,WACU,IAAAC,EAAAV,KAAAO,MAAAG,SACFnC,EAAAyB,KAAAE,MAAEC,EAAA5B,EAAA4B,MAAOC,EAAA7B,EAAA6B,UAEf,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,SAAUA,GACdC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,CAACX,UAAWA,GACxBO,EAAAC,EAAAC,cAAA,SAAOG,UAAU,4BACfL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aAAQV,EAAMc,IAAIC,QAM9BtB,EAnCA,CAAiCuB,EAAA,eAqCjC,SAASD,EAASE,GAChB,OACET,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,EAAKhD,MACZuC,EAAAC,EAAAC,cAAA,UAAKO,EAAKhD,MACVuC,EAAAC,EAAAC,cAAA,UAAKO,EAAK/C,QAUDiD,EAAA,QAAAvD,OAAAwD,EAAA,IAAAxD,CAAIyD,EAAJ,CAAYzD,OAAA0D,EAAA,QAAA1D,CALH,SAACmC,GAAsB,OAC7CQ,SAAU3C,OAAA2D,EAAA,EAAA3D,CAAYmC,EAAMyB,SAAU,gBACtC7D,eAAgB8D,EAAA,IAGS7D,CAAyB6B","file":"ServerStats.4d0490a94b199a11f40c.js","sourcesContent":["import { getBackendSrv } from '@grafana/runtime';\n\nexport interface ServerStat {\n  name: string;\n  value: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat[]> => {\n  try {\n    const res = await getBackendSrv().get('api/admin/stats');\n    return [\n      { name: 'Total users', value: res.users },\n      { name: 'Total admins', value: res.admins },\n      { name: 'Total editors', value: res.editors },\n      { name: 'Total viewers', value: res.viewers },\n      { name: 'Active users (seen last 30 days)', value: res.activeUsers },\n      { name: 'Active admins (seen last 30 days)', value: res.activeAdmins },\n      { name: 'Active editors (seen last 30 days)', value: res.activeEditors },\n      { name: 'Active viewers (seen last 30 days)', value: res.activeViewers },\n      { name: 'Active sessions', value: res.activeSessions },\n      { name: 'Total dashboards', value: res.dashboards },\n      { name: 'Total orgs', value: res.orgs },\n      { name: 'Total playlists', value: res.playlists },\n      { name: 'Total snapshots', value: res.snapshots },\n      { name: 'Total dashboard tags', value: res.tags },\n      { name: 'Total starred dashboards', value: res.stars },\n      { name: 'Total alerts', value: res.alerts },\n    ];\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { StoreState } from 'app/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getServerStats, ServerStat } from './state/apis';\nimport Page from 'app/core/components/Page/Page';\nimport { NavModel } from '@grafana/data';\n\ninterface Props {\n  navModel: NavModel;\n  getServerStats: () => Promise<ServerStat[]>;\n}\n\ninterface State {\n  stats: ServerStat[];\n  isLoading: boolean;\n}\n\nexport class ServerStats extends PureComponent<Props, State> {\n  state: State = {\n    stats: [],\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const stats = await this.props.getServerStats();\n      this.setState({ stats, isLoading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const { navModel } = this.props;\n    const { stats, isLoading } = this.state;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          <table className=\"filter-table form-inline\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>{stats.map(StatItem)}</tbody>\n          </table>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction StatItem(stat: ServerStat) {\n  return (\n    <tr key={stat.name}>\n      <td>{stat.name}</td>\n      <td>{stat.value}</td>\n    </tr>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'server-stats'),\n  getServerStats: getServerStats,\n});\n\nexport default hot(module)(connect(mapStateToProps)(ServerStats));\n"],"sourceRoot":""}