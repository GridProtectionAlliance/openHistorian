{"version":3,"file":"SnapshotListPage.6cd34ec34ebf4b5ab5c4.js","mappings":"yOAQO,SAASA,GAAe,CAC7B,SAAO,KAAc,EAClB,IAAI,0BAA0B,EAC9B,KAAMC,GACEA,EAAO,IAAKC,IAAc,CAC/B,GAAGA,EACH,IAAK,uBAAuBA,EAAS,KACvC,EAAE,CACH,CACL,CACO,MAAMC,EAAoB,IAAM,CACrC,KAAM,CAACC,EAAWC,CAAY,KAAI,YAAqB,CAAC,CAAC,EACnD,CAACC,EAAgBC,CAAiB,KAAI,YAA+B,EACrEC,EAAc,iBAA4B,EAAE,SAC5CC,EAAU,OAAO,SAAS,KAC1BC,EAAUD,EAAQ,UAAU,EAAGA,EAAQ,QAAQD,CAAW,CAAC,KAEjEG,EAAA,GAAS,SAAY,CACnB,MAAMC,EAAW,MAAMZ,EAAa,EACpCK,EAAaO,CAAQ,CACvB,EAAG,CAACP,CAAY,CAAC,EAEjB,MAAMQ,KAAmB,eACvB,MAAOX,GAAuB,CAC5B,MAAMY,EAAoBV,EAAU,OAAQW,GAAOA,EAAG,MAAQb,EAAS,GAAG,EAC1EG,EAAaS,CAAiB,EAC9B,QAAM,KAAc,EACjB,OAAO,kBAAkBZ,EAAS,KAAK,EACvC,MAAM,IAAM,CACXG,EAAaD,CAAS,CACxB,CAAC,CACL,EACA,CAACA,CAAS,CACZ,EAEA,OACE,gBAAC,WACC,gBAAC,SAAM,UAAU,gBACf,gBAAC,aACC,gBAAC,UACC,gBAAC,UACC,gBAAC,cAAO,MAAI,CACd,EACA,gBAAC,UACC,gBAAC,cAAO,cAAY,CACtB,EACA,gBAAC,MAAG,MAAO,CAAE,MAAO,MAAO,EAAG,EAC9B,gBAAC,MAAG,MAAO,CAAE,MAAO,MAAO,EAAG,EAC9B,gBAAC,MAAG,MAAO,CAAE,MAAO,MAAO,EAAG,CAChC,CACF,EACA,gBAAC,aACEA,EAAU,IAAKF,GAAa,CAC3B,MAAMc,EAAMd,EAAS,aAAeA,EAAS,IACvCO,EAAUP,EAAS,aAAe,GAAGQ,IAAUR,EAAS,MAC9D,OACE,gBAAC,MAAG,IAAKA,EAAS,KAChB,gBAAC,UACC,gBAAC,KAAE,KAAMc,CAAA,EAAMd,EAAS,IAAK,CAC/B,EACA,gBAAC,UACC,gBAAC,KAAE,KAAMc,CAAA,EAAMP,CAAQ,CACzB,EACA,gBAAC,UAAIP,EAAS,UAAY,gBAAC,QAAK,UAAU,iBAAgB,UAAQ,CAAQ,EAC1E,gBAAC,MAAG,UAAU,eACZ,gBAAC,KAAU,CAAC,KAAMc,EAAK,QAAQ,YAAY,KAAK,KAAK,KAAK,OAAM,MAEhE,CACF,EACA,gBAAC,MAAG,UAAU,cACZ,gBAACC,EAAA,GAAM,CAAC,QAAQ,cAAc,KAAK,KAAK,KAAK,QAAQ,QAAS,IAAMV,EAAkBL,CAAQ,EAAG,CACnG,CACF,CAEJ,CAAC,CACH,CACF,EAEA,gBAACgB,EAAA,GACC,OAAQ,CAAC,CAACZ,EACV,KAAK,YACL,MAAM,SACN,KAAM,oCAAoCA,GAAgB,SAC1D,YAAY,SACZ,UAAW,IAAMC,EAAkB,MAAS,EAC5C,UAAW,IAAM,CACfM,EAAiBP,CAAe,EAChCC,EAAkB,MAAS,CAC7B,EACF,CACF,CAEJ,EC9FaY,EAAmB,CAAC,CAAC,IAE9B,gBAACC,EAAA,EAAI,CAAC,MAAM,wBACV,gBAACA,EAAA,gBACC,gBAACjB,EAAiB,IAAC,CACrB,CACF,EAIJ,EAAegB,C","sources":["webpack://grafana/./public/app/features/manage-dashboards/components/SnapshotListTable.tsx","webpack://grafana/./public/app/features/manage-dashboards/SnapshotListPage.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport { getBackendSrv, locationService } from '@grafana/runtime';\nimport { ConfirmModal, Button, LinkButton } from '@grafana/ui';\n\nimport { Snapshot } from '../types';\n\nexport function getSnapshots() {\n  return getBackendSrv()\n    .get('/api/dashboard/snapshots')\n    .then((result: Snapshot[]) => {\n      return result.map((snapshot) => ({\n        ...snapshot,\n        url: `/dashboard/snapshot/${snapshot.key}`,\n      }));\n    });\n}\nexport const SnapshotListTable = () => {\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const [removeSnapshot, setRemoveSnapshot] = useState<Snapshot | undefined>();\n  const currentPath = locationService.getLocation().pathname;\n  const fullUrl = window.location.href;\n  const baseUrl = fullUrl.substring(0, fullUrl.indexOf(currentPath));\n\n  useAsync(async () => {\n    const response = await getSnapshots();\n    setSnapshots(response);\n  }, [setSnapshots]);\n\n  const doRemoveSnapshot = useCallback(\n    async (snapshot: Snapshot) => {\n      const filteredSnapshots = snapshots.filter((ss) => ss.key !== snapshot.key);\n      setSnapshots(filteredSnapshots);\n      await getBackendSrv()\n        .delete(`/api/snapshots/${snapshot.key}`)\n        .catch(() => {\n          setSnapshots(snapshots);\n        });\n    },\n    [snapshots]\n  );\n\n  return (\n    <div>\n      <table className=\"filter-table\">\n        <thead>\n          <tr>\n            <th>\n              <strong>Name</strong>\n            </th>\n            <th>\n              <strong>Snapshot url</strong>\n            </th>\n            <th style={{ width: '70px' }}></th>\n            <th style={{ width: '30px' }}></th>\n            <th style={{ width: '25px' }}></th>\n          </tr>\n        </thead>\n        <tbody>\n          {snapshots.map((snapshot) => {\n            const url = snapshot.externalUrl || snapshot.url;\n            const fullUrl = snapshot.externalUrl || `${baseUrl}${snapshot.url}`;\n            return (\n              <tr key={snapshot.key}>\n                <td>\n                  <a href={url}>{snapshot.name}</a>\n                </td>\n                <td>\n                  <a href={url}>{fullUrl}</a>\n                </td>\n                <td>{snapshot.external && <span className=\"query-keyword\">External</span>}</td>\n                <td className=\"text-center\">\n                  <LinkButton href={url} variant=\"secondary\" size=\"sm\" icon=\"eye\">\n                    View\n                  </LinkButton>\n                </td>\n                <td className=\"text-right\">\n                  <Button variant=\"destructive\" size=\"sm\" icon=\"times\" onClick={() => setRemoveSnapshot(snapshot)} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <ConfirmModal\n        isOpen={!!removeSnapshot}\n        icon=\"trash-alt\"\n        title=\"Delete\"\n        body={`Are you sure you want to delete '${removeSnapshot?.name}'?`}\n        confirmText=\"Delete\"\n        onDismiss={() => setRemoveSnapshot(undefined)}\n        onConfirm={() => {\n          doRemoveSnapshot(removeSnapshot!);\n          setRemoveSnapshot(undefined);\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { SnapshotListTable } from './components/SnapshotListTable';\n\nexport const SnapshotListPage = ({}) => {\n  return (\n    <Page navId=\"dashboards/snapshots\">\n      <Page.Contents>\n        <SnapshotListTable />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default SnapshotListPage;\n"],"names":["getSnapshots","result","snapshot","SnapshotListTable","snapshots","setSnapshots","removeSnapshot","setRemoveSnapshot","currentPath","fullUrl","baseUrl","useAsync","response","doRemoveSnapshot","filteredSnapshots","ss","url","Button","ConfirmModal","SnapshotListPage","Page"],"sourceRoot":""}