{"version":3,"sources":["webpack:///./public/app/features/users/UsersTable.tsx","webpack:///./public/app/features/users/InviteeRow.tsx","webpack:///./public/app/features/users/InviteesTable.tsx","webpack:///./public/app/features/users/UsersListPage.tsx","webpack:///./public/app/core/components/FilterInput/FilterInput.tsx","webpack:///./public/app/features/users/state/selectors.ts","webpack:///./public/app/features/users/state/actions.ts","webpack:///./public/app/features/users/UsersActionBar.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","users","onRoleChange","onRemoveUser","a","createElement","className","style","width","map","user","index","key","userId","src","avatarUrl","login","email","name","lastSeenAtAge","value","role","onChange","event","target","option","onClick","InviteeRow_InviteeRow","_super","InviteeRow","_this","apply","this","arguments","copyUrlRef","Object","react","copyToClipboard","node","current","select","document","execCommand","tslib_es6","prototype","render","_a","invitee","revokeInvite","react_default","readOnly","url","position","bottom","right","opacity","zIndex","ref","code","mapDispatchToProps","actions","users_InviteeRow","es","InviteesTable_InviteesTable","InviteesTable","invitees","id","UsersListPage","call","updatedUser","tslib__WEBPACK_IMPORTED_MODULE_0__","updateUser","app_core_app_events__WEBPACK_IMPORTED_MODULE_10__","emit","app_types__WEBPACK_IMPORTED_MODULE_9__","showConfirmModal","title","text","yesText","icon","onConfirm","removeUser","onShowInvites","setState","prevState","showInvites","externalUserMngInfo","externalUserMngInfoHtml","_grafana_data__WEBPACK_IMPORTED_MODULE_4__","state","componentDidMount","fetchUsers","fetchInvitees","loadUsers","sent","loadInvitees","renderTable","react__WEBPACK_IMPORTED_MODULE_1___default","_InviteesTable__WEBPACK_IMPORTED_MODULE_8__","_UsersTable__WEBPACK_IMPORTED_MODULE_7__","navModel","hasFetched","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_5__","Contents","isLoading","Fragment","_UsersActionBar__WEBPACK_IMPORTED_MODULE_6__","dangerouslySetInnerHTML","__html","react__WEBPACK_IMPORTED_MODULE_1__","_state_actions__WEBPACK_IMPORTED_MODULE_11__","setUsersSearchQuery","_state_reducers__WEBPACK_IMPORTED_MODULE_14__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_12__","navIndex","_state_selectors__WEBPACK_IMPORTED_MODULE_13__","searchQuery","d","FilterInput","_grafana_data__WEBPACK_IMPORTED_MODULE_1__","labelClassName","type","inputClassName","placeholder","getUsers","getInvitees","getInviteesCount","getUsersSearchQuery","regex","RegExp","filter","test","length","dispatch","_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__","get","_reducers__WEBPACK_IMPORTED_MODULE_2__","patch","delete","UsersActionBar","canInvite","externalUserMngLinkName","externalUserMngLinkUrl","pendingInvitesCount","pendingInvitesButtonStyle","classnames__WEBPACK_IMPORTED_MODULE_3___default","btn","toggle-btn","active","usersButtonStyle","app_core_components_FilterInput_FilterInput__WEBPACK_IMPORTED_MODULE_6__","marginLeft","href","rel","_state_reducers__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_state_selectors__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"UsersListPage.4d0490a94b199a11f40c.js","sourcesContent":["import React, { FC } from 'react';\nimport { OrgUser } from 'app/types';\n\nexport interface Props {\n  users: OrgUser[];\n  onRoleChange: (role: string, user: OrgUser) => void;\n  onRemoveUser: (user: OrgUser) => void;\n}\n\nconst UsersTable: FC<Props> = props => {\n  const { users, onRoleChange, onRemoveUser } = props;\n\n  return (\n    <table className=\"filter-table form-inline\">\n      <thead>\n        <tr>\n          <th />\n          <th>Login</th>\n          <th>Email</th>\n          <th>Name</th>\n          <th>Seen</th>\n          <th>Role</th>\n          <th style={{ width: '34px' }} />\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user, index) => {\n          return (\n            <tr key={`${user.userId}-${index}`}>\n              <td className=\"width-4 text-center\">\n                <img className=\"filter-table__avatar\" src={user.avatarUrl} />\n              </td>\n              <td>{user.login}</td>\n              <td>\n                <span className=\"ellipsis\">{user.email}</span>\n              </td>\n              <td>{user.name}</td>\n              <td>{user.lastSeenAtAge}</td>\n              <td>\n                <div className=\"gf-form-select-wrapper width-12\">\n                  <select\n                    value={user.role}\n                    className=\"gf-form-input\"\n                    onChange={event => onRoleChange(event.target.value, user)}\n                  >\n                    {['Viewer', 'Editor', 'Admin'].map((option, index) => {\n                      return (\n                        <option value={option} key={`${option}-${index}`}>\n                          {option}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </td>\n              <td>\n                <div onClick={() => onRemoveUser(user)} className=\"btn btn-danger btn-small\">\n                  <i className=\"fa fa-remove\" />\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UsersTable;\n","import React, { createRef, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Invitee } from 'app/types';\nimport { revokeInvite } from './state/actions';\n\nexport interface Props {\n  invitee: Invitee;\n  revokeInvite: typeof revokeInvite;\n}\n\nclass InviteeRow extends PureComponent<Props> {\n  private copyUrlRef = createRef<HTMLTextAreaElement>();\n\n  copyToClipboard = () => {\n    const node = this.copyUrlRef.current;\n\n    if (node) {\n      node.select();\n      document.execCommand('copy');\n    }\n  };\n\n  render() {\n    const { invitee, revokeInvite } = this.props;\n    return (\n      <tr>\n        <td>{invitee.email}</td>\n        <td>{invitee.name}</td>\n        <td className=\"text-right\">\n          <button className=\"btn btn-inverse btn-small\" onClick={this.copyToClipboard}>\n            <textarea\n              readOnly={true}\n              value={invitee.url}\n              style={{ position: 'absolute', bottom: 0, right: 0, opacity: 0, zIndex: -10 }}\n              ref={this.copyUrlRef}\n            />\n            Copy Invite\n          </button>\n          &nbsp;\n        </td>\n        <td>\n          <button className=\"btn btn-danger btn-small\" onClick={() => revokeInvite(invitee.code)}>\n            <i className=\"fa fa-remove\" />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  revokeInvite,\n};\n\nexport default connect(() => {\n  return {};\n}, mapDispatchToProps)(InviteeRow);\n","import React, { PureComponent } from 'react';\nimport { Invitee } from 'app/types';\nimport InviteeRow from './InviteeRow';\n\nexport interface Props {\n  invitees: Invitee[];\n}\n\nexport default class InviteesTable extends PureComponent<Props> {\n  render() {\n    const { invitees } = this.props;\n\n    return (\n      <table className=\"filter-table form-inline\">\n        <thead>\n          <tr>\n            <th>Email</th>\n            <th>Name</th>\n            <th />\n            <th style={{ width: '34px' }} />\n          </tr>\n        </thead>\n        <tbody>\n          {invitees.map((invitee, index) => {\n            return <InviteeRow key={`${invitee.id}-${index}`} invitee={invitee} />;\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { NavModel, renderMarkdown } from '@grafana/data';\n\nimport Page from 'app/core/components/Page/Page';\nimport UsersActionBar from './UsersActionBar';\nimport UsersTable from './UsersTable';\nimport InviteesTable from './InviteesTable';\nimport { CoreEvents, Invitee, OrgUser } from 'app/types';\nimport appEvents from 'app/core/app_events';\nimport { loadInvitees, loadUsers, removeUser, updateUser } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getInvitees, getUsers, getUsersSearchQuery } from './state/selectors';\nimport { setUsersSearchQuery } from './state/reducers';\n\nexport interface Props {\n  navModel: NavModel;\n  invitees: Invitee[];\n  users: OrgUser[];\n  searchQuery: string;\n  externalUserMngInfo: string;\n  hasFetched: boolean;\n  loadUsers: typeof loadUsers;\n  loadInvitees: typeof loadInvitees;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  updateUser: typeof updateUser;\n  removeUser: typeof removeUser;\n}\n\nexport interface State {\n  showInvites: boolean;\n}\n\nexport class UsersListPage extends PureComponent<Props, State> {\n  externalUserMngInfoHtml: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    if (this.props.externalUserMngInfo) {\n      this.externalUserMngInfoHtml = renderMarkdown(this.props.externalUserMngInfo);\n    }\n\n    this.state = {\n      showInvites: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchInvitees();\n  }\n\n  async fetchUsers() {\n    return await this.props.loadUsers();\n  }\n\n  async fetchInvitees() {\n    return await this.props.loadInvitees();\n  }\n\n  onRoleChange = (role: string, user: OrgUser) => {\n    const updatedUser = { ...user, role: role };\n\n    this.props.updateUser(updatedUser);\n  };\n\n  onRemoveUser = (user: OrgUser) => {\n    appEvents.emit(CoreEvents.showConfirmModal, {\n      title: 'Delete',\n      text: 'Are you sure you want to delete user ' + user.login + '?',\n      yesText: 'Delete',\n      icon: 'fa-warning',\n      onConfirm: () => {\n        this.props.removeUser(user.userId);\n      },\n    });\n  };\n\n  onShowInvites = () => {\n    this.setState(prevState => ({\n      showInvites: !prevState.showInvites,\n    }));\n  };\n\n  renderTable() {\n    const { invitees, users } = this.props;\n\n    if (this.state.showInvites) {\n      return <InviteesTable invitees={invitees} />;\n    } else {\n      return (\n        <UsersTable\n          users={users}\n          onRoleChange={(role, user) => this.onRoleChange(role, user)}\n          onRemoveUser={user => this.onRemoveUser(user)}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { navModel, hasFetched } = this.props;\n    const externalUserMngInfoHtml = this.externalUserMngInfoHtml;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>\n          <>\n            <UsersActionBar onShowInvites={this.onShowInvites} showInvites={this.state.showInvites} />\n            {externalUserMngInfoHtml && (\n              <div className=\"grafana-info-box\" dangerouslySetInnerHTML={{ __html: externalUserMngInfoHtml }} />\n            )}\n            {hasFetched && this.renderTable()}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    navModel: getNavModel(state.navIndex, 'users'),\n    users: getUsers(state.users),\n    searchQuery: getUsersSearchQuery(state.users),\n    invitees: getInvitees(state.users),\n    externalUserMngInfo: state.users.externalUserMngInfo,\n    hasFetched: state.users.hasFetched,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadInvitees,\n  setUsersSearchQuery,\n  updateUser,\n  removeUser,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(UsersListPage));\n","import React, { forwardRef } from 'react';\nimport { escapeStringForRegex, unEscapeStringFromRegex } from '@grafana/data';\n\nexport interface Props {\n  value: string | undefined;\n  placeholder?: string;\n  labelClassName?: string;\n  inputClassName?: string;\n  onChange: (value: string) => void;\n}\n\nexport const FilterInput = forwardRef<HTMLInputElement, Props>((props, ref) => (\n  <label className={props.labelClassName}>\n    <input\n      ref={ref}\n      type=\"text\"\n      className={props.inputClassName}\n      value={unEscapeStringFromRegex(props.value)}\n      onChange={event => props.onChange(escapeStringForRegex(event.target.value))}\n      placeholder={props.placeholder ? props.placeholder : null}\n    />\n    <i className=\"gf-form-input-icon fa fa-search\" />\n  </label>\n));\n","import { UsersState } from 'app/types';\n\nexport const getUsers = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.users.filter(user => {\n    return regex.test(user.login) || regex.test(user.email) || regex.test(user.name);\n  });\n};\n\nexport const getInvitees = (state: UsersState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.invitees.filter(invitee => {\n    return regex.test(invitee.name) || regex.test(invitee.email);\n  });\n};\n\nexport const getInviteesCount = (state: UsersState) => state.invitees.length;\nexport const getUsersSearchQuery = (state: UsersState) => state.searchQuery;\n","import { ThunkResult } from '../../../types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { OrgUser } from 'app/types';\nimport { inviteesLoaded, usersLoaded } from './reducers';\n\nexport function loadUsers(): ThunkResult<void> {\n  return async dispatch => {\n    const users = await getBackendSrv().get('/api/org/users');\n    dispatch(usersLoaded(users));\n  };\n}\n\nexport function loadInvitees(): ThunkResult<void> {\n  return async dispatch => {\n    const invitees = await getBackendSrv().get('/api/org/invites');\n    dispatch(inviteesLoaded(invitees));\n  };\n}\n\nexport function updateUser(user: OrgUser): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/users/${user.userId}`, { role: user.role });\n    dispatch(loadUsers());\n  };\n}\n\nexport function removeUser(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/org/users/${userId}`);\n    dispatch(loadUsers());\n  };\n}\n\nexport function revokeInvite(code: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/invites/${code}/revoke`, {});\n    dispatch(loadInvitees());\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { setUsersSearchQuery } from './state/reducers';\nimport { getInviteesCount, getUsersSearchQuery } from './state/selectors';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\n\nexport interface Props {\n  searchQuery: string;\n  setUsersSearchQuery: typeof setUsersSearchQuery;\n  onShowInvites: () => void;\n  pendingInvitesCount: number;\n  canInvite: boolean;\n  showInvites: boolean;\n  externalUserMngLinkUrl: string;\n  externalUserMngLinkName: string;\n}\n\nexport class UsersActionBar extends PureComponent<Props> {\n  render() {\n    const {\n      canInvite,\n      externalUserMngLinkName,\n      externalUserMngLinkUrl,\n      searchQuery,\n      pendingInvitesCount,\n      setUsersSearchQuery,\n      onShowInvites,\n      showInvites,\n    } = this.props;\n\n    const pendingInvitesButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: showInvites,\n    });\n\n    const usersButtonStyle = classNames({\n      btn: true,\n      'toggle-btn': true,\n      active: !showInvites,\n    });\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput\n            labelClassName=\"gf-form--has-input-icon\"\n            inputClassName=\"gf-form-input width-20\"\n            value={searchQuery}\n            onChange={setUsersSearchQuery}\n            placeholder=\"Filter by email, login or name\"\n          />\n          {pendingInvitesCount > 0 && (\n            <div style={{ marginLeft: '1rem' }}>\n              <button className={usersButtonStyle} key=\"users\" onClick={onShowInvites}>\n                Users\n              </button>\n              <button className={pendingInvitesButtonStyle} onClick={onShowInvites} key=\"pending-invites\">\n                Pending Invites ({pendingInvitesCount})\n              </button>\n            </div>\n          )}\n          <div className=\"page-action-bar__spacer\" />\n          {canInvite && (\n            <a className=\"btn btn-primary\" href=\"org/users/invite\">\n              <span>Invite</span>\n            </a>\n          )}\n          {externalUserMngLinkUrl && (\n            <a className=\"btn btn-primary\" href={externalUserMngLinkUrl} target=\"_blank\" rel=\"noopener\">\n              {externalUserMngLinkName}\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchQuery: getUsersSearchQuery(state.users),\n    pendingInvitesCount: getInviteesCount(state.users),\n    externalUserMngLinkName: state.users.externalUserMngLinkName,\n    externalUserMngLinkUrl: state.users.externalUserMngLinkUrl,\n    canInvite: state.users.canInvite,\n  };\n}\n\nconst mapDispatchToProps = {\n  setUsersSearchQuery,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersActionBar);\n"],"sourceRoot":""}