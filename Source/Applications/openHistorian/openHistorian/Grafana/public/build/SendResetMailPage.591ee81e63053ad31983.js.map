{"version":3,"sources":["webpack:///./public/app/core/components/ForgottenPassword/ForgottenPassword.tsx","webpack:///./public/app/core/components/ForgottenPassword/SendResetMailPage.tsx"],"names":["paragraphStyles","theme","css","colors","formDescription","typography","size","sm","weight","regular","spacing","ForgottenPassword","useState","emailSent","setEmailSent","styles","useStyles","loginHref","config","appSubUrl","sendEmail","formModel","getBackendSrv","post","margin","variant","href","onSubmit","register","errors","label","description","invalid","userOrEmail","error","message","placeholder","name","ref","required","className","SendResetMailPage","LoginLayout"],"mappings":"mjCAWA,IAAMA,EAAkB,SAACC,GAAD,OAAyBC,cAAxB,IACdD,EAAME,OAAOC,gBACTH,EAAMI,WAAWC,KAAKC,GACpBN,EAAMI,WAAWG,OAAOC,QACzBR,EAAMS,QAAQH,KAIjBI,EAAwB,WAAM,QACPC,oBAAS,GADF,GAClCC,EADkC,KACvBC,EADuB,KAEnCC,EAASC,oBAAUhB,GACnBiB,EAAY,GAAH,OAAMC,IAAOC,UAAb,UAETC,EAAS,e,EAAA,G,EAAA,yBAAG,WAAOC,GAAP,gGACEC,0BAAgBC,KAAK,sCAAuCF,GAD9D,eAGdP,GAAa,GAHC,0C,+KAAH,sDAOf,OAAID,EAEA,6BACE,4HACA,kBAAC,YAAD,CAAWW,OAAO,OAClB,kBAAC,aAAD,CAAYC,QAAQ,UAAUC,KAAMT,GAApC,kBAOJ,kBAAC,OAAD,CAAMU,SAAUP,IACb,kBAAGQ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAb,OACC,oCACE,kBAAC,SAAD,uBACA,kBAAC,QAAD,CACEC,MAAM,OACNC,YAAY,yDACZC,UAAWH,EAAOI,YAClBC,MAAOL,aAAF,YAAEA,EAAQI,mBAAV,aAAE,EAAqBE,SAE5B,kBAAC,QAAD,CAAOC,YAAY,oBAAoBC,KAAK,cAAcC,IAAKV,EAAS,CAAEW,UAAU,OAEtF,kBAAC,kBAAD,KACE,kBAAC,SAAD,yBACA,kBAAC,aAAD,CAAYd,QAAQ,OAAOC,KAAMT,GAAjC,kBAKF,uBAAGuB,UAAWzB,GAAd,mFC9DV,kDAKO,IAAM0B,EAAwB,kBACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAKSD","file":"SendResetMailPage.591ee81e63053ad31983.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { Form, Field, Input, Button, Legend, Container, useStyles, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { css } from 'emotion';\nimport { GrafanaTheme } from '@grafana/data';\nimport config from 'app/core/config';\n\ninterface EmailDTO {\n  userOrEmail: string;\n}\n\nconst paragraphStyles = (theme: GrafanaTheme) => css`\n  color: ${theme.colors.formDescription};\n  font-size: ${theme.typography.size.sm};\n  font-weight: ${theme.typography.weight.regular};\n  margin-top: ${theme.spacing.sm};\n  display: block;\n`;\n\nexport const ForgottenPassword: FC = () => {\n  const [emailSent, setEmailSent] = useState(false);\n  const styles = useStyles(paragraphStyles);\n  const loginHref = `${config.appSubUrl}/login`;\n\n  const sendEmail = async (formModel: EmailDTO) => {\n    const res = await getBackendSrv().post('/api/user/password/send-reset-email', formModel);\n    if (res) {\n      setEmailSent(true);\n    }\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a reset link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={loginHref}>\n          Back to login\n        </LinkButton>\n      </div>\n    );\n  }\n  return (\n    <Form onSubmit={sendEmail}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Reset password</Legend>\n          <Field\n            label=\"User\"\n            description=\"Enter your information to get a reset link sent to you\"\n            invalid={!!errors.userOrEmail}\n            error={errors?.userOrEmail?.message}\n          >\n            <Input placeholder=\"Email or username\" name=\"userOrEmail\" ref={register({ required: true })} />\n          </Field>\n          <HorizontalGroup>\n            <Button>Send reset email</Button>\n            <LinkButton variant=\"link\" href={loginHref}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n\n          <p className={styles}>Did you forget your username or email? Contact your Grafana administrator.</p>\n        </>\n      )}\n    </Form>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\nimport { ForgottenPassword } from './ForgottenPassword';\n\nexport const SendResetMailPage: FC = () => (\n  <LoginLayout>\n    <InnerBox>\n      <ForgottenPassword />\n    </InnerBox>\n  </LoginLayout>\n);\n\nexport default SendResetMailPage;\n"],"sourceRoot":""}