{"version":3,"sources":["webpack:///./node_modules/apache-arrow/visitor/vectorloader.js","webpack:///./node_modules/apache-arrow/vector/map.js","webpack:///./node_modules/apache-arrow/io/interfaces.js","webpack:///./node_modules/apache-arrow/schema.js","webpack:///./node_modules/apache-arrow/vector/date.js","webpack:///./node_modules/apache-arrow/builder.js","webpack:///./node_modules/apache-arrow/Arrow.dom.js","webpack:///./node_modules/apache-arrow/builder/bool.js","webpack:///./node_modules/apache-arrow/builder/dictionary.js","webpack:///./node_modules/apache-arrow/util/int.js","webpack:///./node_modules/apache-arrow/builder/index.js","webpack:///./node_modules/apache-arrow/fb/Schema.js","webpack:///./node_modules/apache-arrow/vector/fixedsizebinary.js","webpack:///./node_modules/apache-arrow/Arrow.js","webpack:///./node_modules/apache-arrow/vector/struct.js","webpack:///./node_modules/apache-arrow/visitor/jsonvectorassembler.js","webpack:///./node_modules/apache-arrow/util/compat.js","webpack:///./node_modules/apache-arrow/visitor/builderctor.js","webpack:///./node_modules/apache-arrow/visitor/typeassembler.js","webpack:///./node_modules/apache-arrow/builder/fixedsizelist.js","webpack:///./node_modules/apache-arrow/builder/union.js","webpack:///./node_modules/apache-arrow/ipc/metadata/file.js","webpack:///./node_modules/apache-arrow/visitor/iterator.js","webpack:///./node_modules/apache-arrow/visitor/get.js","webpack:///./node_modules/apache-arrow/visitor/vectorctor.js","webpack:///./node_modules/apache-arrow/vector/bool.js","webpack:///./node_modules/apache-arrow/builder/int.js","webpack:///./node_modules/apache-arrow/vector/interval.js","webpack:///./node_modules/apache-arrow/builder/time.js","webpack:///./node_modules/apache-arrow/builder/utf8.js","webpack:///./node_modules/apache-arrow/builder/struct.js","webpack:///./node_modules/apache-arrow/visitor/set.js","webpack:///./node_modules/apache-arrow/builder/buffer.js","webpack:///./node_modules/apache-arrow/vector/union.js","webpack:///./node_modules/apache-arrow/visitor.js","webpack:///./node_modules/apache-arrow/vector/row.js","webpack:///./node_modules/apache-arrow/builder/interval.js","webpack:///./node_modules/apache-arrow/data.js","webpack:///./node_modules/apache-arrow/vector/null.js","webpack:///./packages/grafana-data/src/dataframe/ArrowDataFrame.ts","webpack:///./node_modules/apache-arrow/vector/utf8.js","webpack:///./node_modules/apache-arrow/vector/list.js","webpack:///./node_modules/apache-arrow/compute/dataframe.js","webpack:///./node_modules/apache-arrow/io/whatwg/builder.js","webpack:///./node_modules/apache-arrow/builder/date.js","webpack:///./node_modules/apache-arrow/type.js","webpack:///./node_modules/apache-arrow/util/vector.js","webpack:///./node_modules/apache-arrow/ipc/metadata/json.js","webpack:///./node_modules/apache-arrow/ipc/metadata/message.js","webpack:///./node_modules/apache-arrow/vector/time.js","webpack:///./node_modules/apache-arrow/util/math.js","webpack:///./node_modules/apache-arrow/vector/chunked.js","webpack:///./node_modules/apache-arrow/fb/Message.js","webpack:///./node_modules/apache-arrow/column.js","webpack:///./node_modules/apache-arrow/builder/binary.js","webpack:///./node_modules/apache-arrow/io/stream.js","webpack:///./node_modules/apache-arrow/vector/fixedsizelist.js","webpack:///./node_modules/apache-arrow/builder/timestamp.js","webpack:///./node_modules/apache-arrow/builder/fixedsizebinary.js","webpack:///./node_modules/apache-arrow/io/whatwg/writer.js","webpack:///./node_modules/apache-arrow/builder/decimal.js","webpack:///./node_modules/apache-arrow/util/bn.js","webpack:///./node_modules/apache-arrow/vector/int.js","webpack:///./node_modules/apache-arrow/util/recordbatch.js","webpack:///./node_modules/apache-arrow/builder/map.js","webpack:///./node_modules/apache-arrow/util/utf8.js","webpack:///./node_modules/apache-arrow/ipc/reader.js","webpack:///./node_modules/apache-arrow/builder/float.js","webpack:///./node_modules/apache-arrow/util/fn.js","webpack:///./node_modules/apache-arrow/visitor/jsontypeassembler.js","webpack:///./node_modules/apache-arrow/visitor/bytewidth.js","webpack:///./node_modules/apache-arrow/util/bit.js","webpack:///./node_modules/apache-arrow/util/buffer.js","webpack:///./node_modules/apache-arrow/vector/index.js","webpack:///./node_modules/apache-arrow/io/adapters.js","webpack:///./node_modules/apache-arrow/builder/run.js","webpack:///./node_modules/apache-arrow/fb/File.js","webpack:///./node_modules/apache-arrow/builder/null.js","webpack:///./node_modules/apache-arrow/util/pretty.js","webpack:///./node_modules/apache-arrow/visitor/indexof.js","webpack:///./node_modules/apache-arrow/visitor/typecomparator.js","webpack:///./node_modules/flatbuffers/js/flatbuffers.mjs","webpack:///./node_modules/apache-arrow/vector/base.js","webpack:///./node_modules/apache-arrow/io/whatwg/reader.js","webpack:///./node_modules/apache-arrow/io/whatwg/iterable.js","webpack:///./node_modules/apache-arrow/vector/timestamp.js","webpack:///./node_modules/apache-arrow/table.js","webpack:///./node_modules/apache-arrow/util/args.js","webpack:///./node_modules/apache-arrow/builder/valid.js","webpack:///./node_modules/text-encoding-utf-8/lib/encoding.lib.js","webpack:///./node_modules/apache-arrow/vector/float.js","webpack:///./node_modules/apache-arrow/io/file.js","webpack:///./node_modules/apache-arrow/vector.js","webpack:///./node_modules/apache-arrow/vector/binary.js","webpack:///./node_modules/apache-arrow/recordbatch.js","webpack:///./node_modules/apache-arrow/ipc/writer.js","webpack:///./node_modules/apache-arrow/enum.js","webpack:///./node_modules/apache-arrow/vector/dictionary.js","webpack:///./node_modules/apache-arrow/vector/decimal.js","webpack:///./node_modules/apache-arrow/builder/list.js","webpack:///./node_modules/apache-arrow/visitor/vectorassembler.js","webpack:///./node_modules/apache-arrow/ipc/message.js","webpack:///./node_modules/apache-arrow/visitor/toarray.js","webpack:///./node_modules/apache-arrow/compute/predicate.js"],"names":["Object","defineProperty","exports","value","data_1","require","schema_1","type_1","visitor_1","bit_1","utf8_1","int_1","enum_1","buffer_1","VectorLoader","bytes","nodes","buffers","dictionaries","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","nodesIndex","buffersIndex","Visitor","node","_get","prototype","Field","type","length","arguments","undefined","nextFieldNode","Data","Null","_ref2","nullCount","Bool","readNullBitmap","readData","_ref3","Int","_ref4","Float","_ref5","Utf8","readOffsets","_ref6","Binary","_ref7","FixedSizeBinary","_ref8","Date","_ref9","Timestamp","_ref10","Time","_ref11","Decimal","_ref12","List","visit","children","_ref13","Struct","visitMany","mode","UnionMode","Sparse","visitSparseUnion","visitDenseUnion","_ref14","Union","readTypeIds","_ref15","_ref16","Dictionary","indices","readDictionary","_ref17","Interval","_ref18","FixedSizeList","_ref19","Map","buffer","nextBufferRange","Uint8Array","_type","_ref20","offset","subarray","get","id","JSONVectorLoader","sources","_this2","packBools","toArrayBufferView","Int32Array","ArrayType","DataType","isTimestamp","Int64","convertArray","isInt","isTime","bitWidth","isDate","unit","DateUnit","MILLISECOND","isDecimal","Int128","isBinary","isFixedSizeBinary","values","joined","join","data","i","parseInt","substr","binaryDataFromJSON","isBool","isUtf8","encodeUtf8","map","x","row_1","vector_1","base_1","MapVector","BaseVector","child","Vector","clone","index","getChildAt","_this$valueOffsets","valueOffsets","begin","end","MapRow","slice","adapters_1","ITERATOR_DONE","freeze","done","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","writable","options","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_values","resolvers","_closedPromise","Promise","r","_closedPromiseResolve","reason","_ensureOpen","push","shift","resolve","_error","error","reject","Symbol","asyncIterator","_","abort","close","size","next","Error","concat","args_1","args_2","typecomparator_1","Schema","fields","metadata","generateDictionaryMap","f","other","instance","compareSchemas","_len","columnNames","Array","_key","names","reduce","xs","create","filter","name","_len2","columnIndices","_key2","Boolean","_len3","args","_key3","selectArgs","curFields","_toConsumableArray","mergeMaps","newFields","f2","findIndex","newDictionaries","toStringTag","_len4","_key4","selectFieldArgs","nullable","compareField","_args2","_args2$","_args2$2","_args2$3","_args2$4","_args$","_args$$name","_args$$type","_args$$nullable","_args$$metadata","_len5","_key5","_typeof","_slicedToArray","typeId","_len6","_key6","m1","m2","n","isDictionary","has","dictionary","set","index_1","DateVector","vectorFromValuesWithType","DAY","DateDay","DateMillisecond","DateDayVector","DateMillisecondVector","valid_1","Builder","nulls","finished","nullValues","stride","strideForType","_nulls","BitmapBufferBuilder","_isValid","createIsValidFunction","flush","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","_offsets","typeIds","_typeIds","BufferType","TYPE","OFFSET","DATA","last","VALIDITY","clear","forEach","finish","numInvalid","byteLength","reservedLength","reservedByteLength","throughIterable","throughAsyncIterable","FixedWidthBuilder","opts","DataBufferBuilder","reserve","VariableWidthBuilder","_pendingLength","OffsetsBufferBuilder","pending","_pending","current","_flush","pendingLength","_flushPending","_options$queueingStra","queueingStrategy","_options$highWaterMar","highWaterMark","Math","pow","sizeProperty","regeneratorRuntime","mark","_callee","source","numChunks","builder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","wrap","_context","prev","iterator","append","t0","toVector","t1","stop","_options$queueingStra2","_options$highWaterMar2","_ref","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_context2","_asyncIterator","_awaitAsyncGenerator","sent","_x","apply","reader_1","writer_1","iterable_1","builder_1","reader_2","writer_2","builderThroughDOMStream","RecordBatchReader","recordBatchReaderThroughDOMStream","RecordBatchWriter","recordBatchWriterThroughDOMStream","Arrow_1","ArrowType","IntervalUnit","MessageHeader","MetadataVersion","Precision","TimeUnit","Type","Int8","Int16","Int32","Uint8","Uint16","Uint32","Uint64","Float16","Float32","Float64","Date_","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","TimeSecond","TimeMillisecond","TimeMicrosecond","TimeNanosecond","DenseUnion","SparseUnion","IntervalDayTime","IntervalYearMonth","Map_","Table","Column","BinaryVector","BoolVector","Chunked","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","Float16Vector","Float32Vector","Float64Vector","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","Int8Vector","Int16Vector","Int32Vector","Int64Vector","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","NullVector","StructVector","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","ByteStream","AsyncByteStream","AsyncByteQueue","RecordBatchFileReader","RecordBatchStreamReader","AsyncRecordBatchFileReader","AsyncRecordBatchStreamReader","RecordBatchFileWriter","RecordBatchStreamWriter","RecordBatchJSONWriter","MessageReader","AsyncMessageReader","JSONMessageReader","Message","RecordBatch","DataFrame","FilteredDataFrame","CountByResult","predicate","util","BinaryBuilder","BoolBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FixedSizeListBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","ListBuilder","MapBuilder","NullBuilder","StructBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","UnionBuilder","DenseUnionBuilder","SparseUnionBuilder","Utf8Builder","hashFn","isOrdered","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","key","idx","_dictionary","curr","val","nullBitmap","intAsHex","toString","kPowersOfTen","BaseInt64","L","Uint32Array","R","product","sum","lessThan","_times","_plus","out_buffer","fromString","num","str","out","posn","group","chunk","multiple","times","plus","from","byteOffset","left","right","this_high","other_high","negate","startsWith","L0","L1","L2","L3","R0","R1","R2","R3","multiply","low","high","sums","bool_1","null_1","date_1","decimal_1","dictionary_1","fixedsizebinary_1","float_1","time_1","timestamp_1","interval_1","binary_1","list_1","fixedsizelist_1","map_1","struct_1","union_1","utf8_2","builder_2","set_1","builderctor_1","newBuilder","getVisitFn","defaultOptions","getChildOptions","isArray","field","_objectSpread","keys","T","NONE","visitBinary","org","apache","arrow","flatbuf","Endianness","bb","bb_pos","_createClass","obj","__init","readInt32","position","startObject","endObject","startNull","endNull","Struct_","startStruct_","endStruct_","startList","endList","LargeList","startLargeList","endLargeList","__offset","listSize","addFieldInt32","startFixedSizeList","addListSize","endFixedSizeList","readInt8","keysSorted","addFieldInt8","startMap","addKeysSorted","endMap","readInt16","__vector","__vector_len","addFieldInt16","typeIdsOffset","addFieldOffset","startVector","addInt32","endVector","numElems","startUnion","addMode","addTypeIds","endUnion","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","startUtf8","endUtf8","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","startBool","endBool","scale","startDecimal","addScale","endDecimal","startDate","addUnit","endDate","startTime","endTime","SECOND","optionalEncoding","__string","timezoneOffset","startTimestamp","addTimezone","endTimestamp","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","readInt64","createLong","__indirect","addFieldInt64","indexTypeOffset","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","readUint8","__union","nameOffset","typeType","typeOffset","dictionaryOffset","childrenOffset","addOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Buffer","prep","writeInt64","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","table_1","column_1","index_2","stream_1","message_1","message_2","recordbatch_1","dataframe_1","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","kRowIndex","proto","_row","StructRow","bound","binaryToString","bigNumsToStrings","bn_1","enum_2","JSONVectorAssembler","selectColumnChildrenArgs","column","assign","_defineProperty","count","isNull","iterateBits","getBit","getBool","vector","MICROSECOND","_this3","Dense","_this4","_this5","octets","byte","toUpperCase","_marked","BN","_marked2","interfaces_1","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayUnavailable","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayUnavailable","BigUint64ArrayCtor","BigUint64ArrayAvailable","isNumber","isBoolean","isFunction","isObject","isPromise","then","isObservable","subscribe","isIterable","isAsyncIterable","isArrowJSON","isArrayLike","isIteratorResult","isUnderlyingSink","isFileHandle","isFSReadStream","isReadableNodeStream","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream","GetBuilderCtor","Long","flatbuffers","Schema_","TypeAssembler","_node","b","timezone","createString","startTypeIdsVector","createTypeIdsVector","indexType","run_1","_run","Run","bind","childIndex","Int8Array","_valueToChildTypeId","childTypeId","_this$type","typeIdToChildIndex","File_","flatbuffers_1","ByteBuffer","_Block","Block","_Footer","Footer","Footer_","schema","version","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","toUint8Array","footer","getRootAsFooter","decode","OffHeapFooter","schemaOffset","encode","startRecordBatchesVector","reverse","rb","FileBlock","recordBatchesOffset","startDictionariesVector","db","dictionaryBatchesOffset","startFooter","addSchema","addVersion","addRecordBatches","addDictionaries","finishFooterBuffer","endFooter","asUint8Array","_footer","fileBlock","recordBatchesLength","dictionariesLength","metaDataLength","bodyLength","createBlock","get_1","IteratorVisitor","vectorIterator","getFn","vec","nullByte","nullBit","nullableIterator","visitNull","visitBool","visitInt","visitInt8","visitInt16","visitInt32","visitInt64","visitUint8","visitUint16","visitUint32","visitUint64","visitFloat","visitFloat16","visitFloat32","visitFloat64","visitUtf8","visitFixedSizeBinary","visitDate","visitDateDay","visitDateMillisecond","visitTimestamp","visitTimestampSecond","visitTimestampMillisecond","visitTimestampMicrosecond","visitTimestampNanosecond","visitTime","visitTimeSecond","visitTimeMillisecond","visitTimeMicrosecond","visitTimeNanosecond","visitDecimal","visitList","visitStruct","visitUnion","visitDictionary","visitInterval","visitIntervalDayTime","visitIntervalYearMonth","visitFixedSizeList","visitMap","math_1","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","epochMs","getVariableWidthBytes","y","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","uint16ToFloat64","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","signed","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","_index","decodeUtf8","NANOSECOND","decimal","getValue","getKey","DAY_TIME","GetVectorConstructor","input","compat_1","toBigInt","WideBufferBuilder","buffer64","memo","BigIntArray","ArrayBuffer","isView","bignumToBigInt","BufferBuilder","SetVisitor","setEpochMsToMillisecondsLong","setVariableWidthBytes","setDateDay","setEpochMsToDays","valueOf","setDateMillisecond","setNumeric","setFloat16","float64ToUint16","setNumericX2","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","o","v","c","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","entries","roundLengthUpToNearest64Bytes","len","BPE","BYTES_PER_ELEMENT","constructor","_resize","extra","reserved","array","arr","memcpy","sliceOrExtendArray","newLength","numValid","bit","cur","fill","ArrayType64","_ArrayType64","visitor","throwIfNotFound","fn","dtype","inferDType","SINGLE","DOUBLE","_Object$definePropert","pretty_1","kParent","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getIndex","ki","vi","kr","vr","k","callbackfn","thisArg","callback","m","valueToString","defineProperties","enumerable","configurable","createRowProxy","_assertThisInitialized","indexOf","defineRowProxyProperties","setPrototypeOf","desc","row","getter","setter","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","hasOwnProperty","err","Proxy","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","bit_2","kUnknownNullCount","childData","floor","max","_nullCount","toInt32Array","valueOffsetsOrChildren","childStride","_sliceBuffers","_sliceChildren","bitmap","truncateBitmap","popcnt_bit_range","base64StringToArrowTable","text","b64","atob","charCodeAt","apache_arrow__WEBPACK_IMPORTED_MODULE_2__","valueOrUndefined","parseOptionalMeta","JSON","parse","console","warn","arrowTableToDataFrame","table","numCols","col","getColumnAt","_types__WEBPACK_IMPORTED_MODULE_1__","number","boolean","time","string","log","config","labels","meta","refId","grafanaDataFrameToArrowTable","new","toArray","toArrowVector","stringify","resultsToDataFrames","rsp","frames","_c","tslib__WEBPACK_IMPORTED_MODULE_0__","results","_d","res","_e","e_2","dataframes","_f","t","predicate_1","countBy","chunks","scan","scanReverse","batches","numBatches","batchIndex","batch","numRows","count_by","Col","countByteLength","ceil","counts","Uint16Array","result","_predicate","_chunks","and","BuilderTransform","_numChunks","_finished","_bufferedSize","readableStrategy","writableStrategy","builderOptions","_objectWithoutProperties","_controller","_builder","_getSize","chunkLength","chunkByteLength","_readableStrategy$hig","readableHighWaterMark","_writableStrategy$hig","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Int_","Int16Array","Float32Array","Float64Array","Time_","Timestamp_","_this6","Interval_","_this7","_this8","valueType","_this9","Union_","_this10","_this11","_this12","_this13","atomicDictionaryId","getId","_this14","tmp","clampIndex","adjust","clampRange","_source$length","lhs","rhs","big0","isNaNFast","createElementComparator","search","comparitors","typeofSearch","valueOfSearch","compareArrayLike","createSubElementsComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","FieldNode","validity","buffersFromJSON","BufferRegion","fieldChildrenFromJSON","_field","fromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","schemaFromJSON","_schema","schemaFieldsFromJSON","dictionaryBatchFromJSON","DictionaryBatch","fieldFromJSON","dictMeta","dictType","Message_","typeassembler_1","json_1","_Field","_Schema","_Buffer","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","headerType","header","_version","_headerType","body","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","headerOffset","isSchema","isRecordBatch","isDictionaryBatch","startMessage","addHeader","addHeaderType","addBodyLength","finishMessageBuffer","endMessage","_nodes","_buffers","_length","isDelta","_data","_isDelta","_id","decodeFieldChildren","j","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","fieldsLength","decodeSchemaFields","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","dataOffset","startDictionaryBatch","addIsDelta","addData","endDictionaryBatch","createFieldNode","createBuffer","DataView","setInt16","f64","u32","h","expo","sigf","sign","NaN","d","vector_2","vectors","calculateOffsets","_chunkOffsets","_numChildren","AbstractVector","delegateYield","others","flatten","_sliceInternal","columns","_children","pos","mid","isValidInternal","getInternal","element","self","indexOfInternal","src","dst","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkOffset","to","min","_indices","selectChunkArgs","NS7624605610262437867","null_count","nodesOffset","buffersOffset","V1","chunked_1","_chunked_1$Chunked2","SingleChunkColumn","_vector_1$Vector","rest","some","_chunk","buffer_2","_step$value","joinUint8Arrays","_asyncToGenerator","abrupt","ByteStreamSource","fromIterable","peek","read","AsyncByteStreamSource","fromAsyncIterable","fromNodeStream","fromDOMStream","cancel","closed","cmd","writer","reader","readable","_cancel","pull","_pull","_start","_callee3","_context3","_x2","_x3","_next2","_callee4","_context4","BigNum","_construct","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","words","decimalToString","a","digits","base64","base32","checks","isArrowBigNumSymbol","toJSON","bignumToString","toPrimitive","TypedArray","is64bit","vectorTypeToDataType","InputType","arrayTypeToDataType","convert32To64Bit","TypeError","toBigInt64Array","_values64","toBigUint64Array","typeCtor","dataCtor","ctor","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","batchLength","numColumns","Number","POSITIVE_INFINITY","isFinite","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","unshift","_changeLengthAndBackfillNullBitmap","ensureSameLengthData","l","batchData","distributeColumnsIntoRecordBatches","text_encoding_utf_8_1","useNativeEncoders","TextDecoder","TextEncoder","decoder","_buffer_1$toUint8Arra","encoder","readAllSync","file_1","file_2","vectorloader_1","impl","_impl","isSync","isAsync","isFile","isStream","reset","opening","open","readRecordBatch","objectMode","autoDestroy","RecordBatchJSONReaderImpl","fromArrowJSON","fromFileHandle","fromAsyncByteStream","magicLength","checkForMagicArrowString","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","_callee15","_context16","fromByteStream","readAllAsync","_wrapAsyncGenerator","_asyncGeneratorDelegate","RecordBatchReaderImpl","_dictionaryIndex","_recordBatchIndex","_loadVectors","types","_reader","_handle","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_InternalEmptyPlaceholderRecordBatch","readMessage","AsyncRecordBatchStreamReaderImpl","RandomAccessFile","_readFooter","_readDictionaryBatch","seek","magicAndPadding","readAt","AsyncRecordBatchFileReaderImpl","AsyncRandomAccessFile","_context14","_callee14","_context15","_callee17","_context18","t2","t3","t4","t5","_callee16","_context17","_callee18","file","_context19","stat","magicX2AndPadding","partial0","partial1","partial2","JSONTypeAssembler","toLowerCase","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","context","byteIndex","remaining","_byte4","popcnt_array","cnt","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","setBool","alignedSize","rhsInside","lhsInside","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","target","targetByteOffset","sourceByteLength","targetByteLength","ArrayBufferViewCtor","sliced","xOffset","yOffset","xLen","yLen","_x6","_y","collapseContiguousByteRanges","Infinity","toInt8Array","toInt16Array","toUint16Array","toUint32Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","pump","ArrayCtor","it","toArrayBufferViewAsyncIterator","_callee6","emit","_context8","t6","t7","t8","_context6","_context5","_x4","_callee5","_context7","_x5","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","chunked_2","base_2","indexof_1","toarray_1","iterator_1","bytewidth_1","vectorctor_1","_nullValues$input","_nullValues$input$val","transform","newDataType","_input","_input$values","_input$type","_input$nullValues","getByteWidth","_bindDataAccessors","wrapNullableSet","VectorCtor","stream","threw","bufferLength","byteRange","_buffer_1$joinUint8Ar2","isNaN","_buffer_1$joinUint8Ar4","_buffer_1$joinUint8Ar6","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","getBYOBReader","e","getDefaultReader","readFromBYOBReader","readInto","_callee8","_context9","onEvent","event","handler","_callee7","events","cleanup","evt","destroy","_x11","_x12","_buffer_1$joinUint8Ar8","race","dictionariesOffset","pad","writeInt32","undf","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","TypeComparator","compareFields","every","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","compareTime","compareUnion","compareInterval","__webpack_require__","__webpack_exports__","Offset","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","ZERO","toFloat64","equals","opt_initial_size","initial_size","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeFloat32","writeFloat64","addInt8","addInt16","addInt64","addFloat32","addFloat64","voffset","defaultValue","slot","addFieldFloat32","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","root_table","opt_file_identifier","file_identifier","requiredField","table_start","vtable_start","elem_size","num_elems","alignment","s","utf8","codePoint","bytes_","position_","readUint16","readUint32","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","String","fromCharCode","vtable_offset","opt_encoding","__has_identifier","ident","_chunked_1$Chunked","VectorName","isConcatSpreadable","queue","_open","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","recordbatch_2","getColumnIndex","writeAll","nameToIndex","selectAt","columnName","_this$_schema","_other$schema$fields$","newIdx","_memo","oldToNew","_other$schema$fields$2","_fs","empty","tableFromIterable","tableFromAsyncIterable","cols","selectColumnArgs","fromStruct","_selectArgs","Ctor","vals","_selectFieldArgs3","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","_selectColumnChildrenArgs","toKeysAndValues","ret","_Object$entries$reduc2","fieldIndex","valueIndex","_ret","_keys$idx","fnBody","noNaNs","valueToCase","Function","inRange","ToDictionary","end_of_stream","Stream","tokens","endOfStream","prepend","token","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","encoding","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","u","stringToCodePoints","convertTo16Bit","_this$readAt","getInt32","nBytes","bytesRead","_dictionaries","DictionaryCollector","collect","_args_1$selectFieldAr2","fs","vs","vectorassembler_1","jsontypeassembler_1","jsonvectorassembler_1","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","sync","writeAllAsync","sink","_writeFooter","compareTo","_writeSchema","payload","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","MAGIC","_vectorassembler_1$Ve","VectorAssembler","assemble","_writeDictionaries","_writeBodyBuffers","_vectorassembler_1$Ve2","padding","_step2$value","_writeDictionaryBatch","_writeMagic","fieldToJSON","dictionaryBatchToJSON","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","records","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","assembler","run","_byteLength","_bufferRegions","vectorChildren","_assembler$visitMany3","RangeError","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","readMetadataLength","readMetadata","throwIfNull","PADDING","metadataLength","_body","_batchIndex","flattenDataSources","MAGIC_STR","ToArrayVisitor","arrayOfVector","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","_getPrototypeOf2","accum","p","_getPrototypeOf3","_batch","rtrn","left_func","right_func","lit","col_func","lastDictionary","reverseLookup","lastKey","func","CustomPredicate","bind_","or","_len7","_key7","custom"],"mappings":"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","file":"apache-arrow-util.4d0490a94b199a11f40c.js","sourcesContent":["\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst schema_1 = require(\"../schema\");\nconst type_1 = require(\"../type\");\nconst visitor_1 = require(\"../visitor\");\nconst bit_1 = require(\"../util/bit\");\nconst utf8_1 = require(\"../util/utf8\");\nconst int_1 = require(\"../util/int\");\nconst enum_1 = require(\"../enum\");\nconst buffer_1 = require(\"../util/buffer\");\n/** @ignore */\nclass VectorLoader extends visitor_1.Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof schema_1.Field ? node.type : node);\n    }\n    visitNull(type, { length, } = this.nextFieldNode()) { return data_1.Data.Null(type, 0, length); }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children)); }\n    visitUnion(type) { return type.mode === enum_1.UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type); }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children)); }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type)); }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0])); }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) { return data_1.Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\nexports.VectorLoader = VectorLoader;\n/** @ignore */\nclass JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : bit_1.packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return buffer_1.toArrayBufferView(Uint8Array, buffer_1.toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return buffer_1.toArrayBufferView(Uint8Array, buffer_1.toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (type_1.DataType.isTimestamp(type)) {\n            return buffer_1.toArrayBufferView(Uint8Array, int_1.Int64.convertArray(sources[offset]));\n        }\n        else if ((type_1.DataType.isInt(type) || type_1.DataType.isTime(type)) && type.bitWidth === 64) {\n            return buffer_1.toArrayBufferView(Uint8Array, int_1.Int64.convertArray(sources[offset]));\n        }\n        else if (type_1.DataType.isDate(type) && type.unit === enum_1.DateUnit.MILLISECOND) {\n            return buffer_1.toArrayBufferView(Uint8Array, int_1.Int64.convertArray(sources[offset]));\n        }\n        else if (type_1.DataType.isDecimal(type)) {\n            return buffer_1.toArrayBufferView(Uint8Array, int_1.Int128.convertArray(sources[offset]));\n        }\n        else if (type_1.DataType.isBinary(type) || type_1.DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (type_1.DataType.isBool(type)) {\n            return bit_1.packBools(sources[offset]);\n        }\n        else if (type_1.DataType.isUtf8(type)) {\n            return utf8_1.encodeUtf8(sources[offset].join(''));\n        }\n        return buffer_1.toArrayBufferView(Uint8Array, buffer_1.toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\nexports.JSONVectorLoader = JSONVectorLoader;\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst row_1 = require(\"./row\");\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass MapVector extends base_1.BaseVector {\n    asList() {\n        const child = this.type.children[0];\n        return vector_1.Vector.new(this.data.clone(new type_1.List(child)));\n    }\n    bind(index) {\n        const child = this.getChildAt(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new row_1.MapRow(child.slice(begin, end));\n    }\n}\nexports.MapVector = MapVector;\n\n//# sourceMappingURL=map.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst adapters_1 = require(\"./adapters\");\n/** @ignore */\nexports.ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nclass ArrowJSON {\n    // @ts-ignore\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\nexports.ArrowJSON = ArrowJSON;\n/** @ignore */\nclass ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\nexports.ReadableInterop = ReadableInterop;\n/** @ignore */\nclass AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    async cancel(reason) { await this.return(reason); }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(exports.ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return adapters_1.default.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return adapters_1.default.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    async throw(_) { await this.abort(_); return exports.ITERATOR_DONE; }\n    async return(_) { await this.close(); return exports.ITERATOR_DONE; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(exports.ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\nexports.AsyncQueue = AsyncQueue;\n\n//# sourceMappingURL=interfaces.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_1 = require(\"./type\");\nconst args_1 = require(\"./util/args\");\nconst args_2 = require(\"./util/args\");\nconst typecomparator_1 = require(\"./visitor/typecomparator\");\nclass Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    /** @nocollapse */\n    static from(...args) {\n        return Schema.new(args[0], args[1]);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        return new Schema(args_2.selectFieldArgs(args)[0]);\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    compareTo(other) {\n        return typecomparator_1.instance.compareSchemas(this, other);\n    }\n    select(...columnNames) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    selectAt(...columnIndices) {\n        return new Schema(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n    assign(...args) {\n        const other = args[0] instanceof Schema ? args[0]\n            : new Schema(args_1.selectArgs(Field, args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexports.Schema = Schema;\nclass Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    compareTo(other) {\n        return typecomparator_1.instance.compareField(this, other);\n    }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\nexports.Field = Field;\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (type_1.DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n\n//# sourceMappingURL=schema.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enum_1 = require(\"../enum\");\nconst base_1 = require(\"./base\");\nconst index_1 = require(\"./index\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass DateVector extends base_1.BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 2) {\n            return index_1.vectorFromValuesWithType(() => args[1] === enum_1.DateUnit.DAY ? new type_1.DateDay() : new type_1.DateMillisecond(), args[0]);\n        }\n        return index_1.vectorFromValuesWithType(() => new type_1.DateMillisecond(), args[0]);\n    }\n}\nexports.DateVector = DateVector;\n/** @ignore */\nclass DateDayVector extends DateVector {\n}\nexports.DateDayVector = DateDayVector;\n/** @ignore */\nclass DateMillisecondVector extends DateVector {\n}\nexports.DateMillisecondVector = DateMillisecondVector;\n\n//# sourceMappingURL=date.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"./vector\");\nconst enum_1 = require(\"./enum\");\nconst data_1 = require(\"./data\");\nconst valid_1 = require(\"./builder/valid\");\nconst buffer_1 = require(\"./builder/buffer\");\nconst type_1 = require(\"./type\");\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nclass Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = type_1.strideForType(type);\n        this._nulls = new buffer_1.BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = valid_1.createIsValidFunction(nulls);\n        }\n    }\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    static new(options) { }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    static throughIterable(options) {\n        return throughIterable(options);\n    }\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    static throughAsyncIterable(options) {\n        return throughAsyncIterable(options);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return vector_1.Vector.new(this.flush()); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    flush() {\n        const buffers = [];\n        const values = this._values;\n        const offsets = this._offsets;\n        const typeIds = this._typeIds;\n        const { length, nullCount } = this;\n        if (typeIds) { /* Unions */\n            buffers[enum_1.BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[enum_1.BufferType.OFFSET] = offsets.flush(length));\n        }\n        else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[enum_1.BufferType.DATA] = values.flush(offsets.last()));\n            buffers[enum_1.BufferType.OFFSET] = offsets.flush(length);\n        }\n        else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[enum_1.BufferType.DATA] = values.flush(length);\n        }\n        nullCount > 0 && (buffers[enum_1.BufferType.VALIDITY] = this._nulls.flush(length));\n        const data = data_1.Data.new(this.type, 0, length, nullCount, buffers, this.children.map((child) => child.flush()));\n        this.clear();\n        return data;\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\nexports.Builder = Builder;\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nclass FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_1.DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\nexports.FixedWidthBuilder = FixedWidthBuilder;\n/** @ignore */\nclass VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new buffer_1.OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\nexports.VariableWidthBuilder = VariableWidthBuilder;\n/** @ignore */\nfunction throughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n//# sourceMappingURL=builder.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst adapters_1 = require(\"./io/adapters\");\nconst index_1 = require(\"./builder/index\");\nconst reader_1 = require(\"./ipc/reader\");\nconst writer_1 = require(\"./ipc/writer\");\nconst iterable_1 = require(\"./io/whatwg/iterable\");\nconst builder_1 = require(\"./io/whatwg/builder\");\nconst reader_2 = require(\"./io/whatwg/reader\");\nconst writer_2 = require(\"./io/whatwg/writer\");\nadapters_1.default.toDOMStream = iterable_1.toDOMStream;\nindex_1.Builder['throughDOM'] = builder_1.builderThroughDOMStream;\nreader_1.RecordBatchReader['throughDOM'] = reader_2.recordBatchReaderThroughDOMStream;\nwriter_1.RecordBatchWriter['throughDOM'] = writer_2.recordBatchWriterThroughDOMStream;\nvar Arrow_1 = require(\"./Arrow\");\nexports.ArrowType = Arrow_1.ArrowType;\nexports.DateUnit = Arrow_1.DateUnit;\nexports.IntervalUnit = Arrow_1.IntervalUnit;\nexports.MessageHeader = Arrow_1.MessageHeader;\nexports.MetadataVersion = Arrow_1.MetadataVersion;\nexports.Precision = Arrow_1.Precision;\nexports.TimeUnit = Arrow_1.TimeUnit;\nexports.Type = Arrow_1.Type;\nexports.UnionMode = Arrow_1.UnionMode;\nexports.BufferType = Arrow_1.BufferType;\nexports.Data = Arrow_1.Data;\nexports.DataType = Arrow_1.DataType;\nexports.Null = Arrow_1.Null;\nexports.Bool = Arrow_1.Bool;\nexports.Int = Arrow_1.Int;\nexports.Int8 = Arrow_1.Int8;\nexports.Int16 = Arrow_1.Int16;\nexports.Int32 = Arrow_1.Int32;\nexports.Int64 = Arrow_1.Int64;\nexports.Uint8 = Arrow_1.Uint8;\nexports.Uint16 = Arrow_1.Uint16;\nexports.Uint32 = Arrow_1.Uint32;\nexports.Uint64 = Arrow_1.Uint64;\nexports.Float = Arrow_1.Float;\nexports.Float16 = Arrow_1.Float16;\nexports.Float32 = Arrow_1.Float32;\nexports.Float64 = Arrow_1.Float64;\nexports.Utf8 = Arrow_1.Utf8;\nexports.Binary = Arrow_1.Binary;\nexports.FixedSizeBinary = Arrow_1.FixedSizeBinary;\nexports.Date_ = Arrow_1.Date_;\nexports.DateDay = Arrow_1.DateDay;\nexports.DateMillisecond = Arrow_1.DateMillisecond;\nexports.Timestamp = Arrow_1.Timestamp;\nexports.TimestampSecond = Arrow_1.TimestampSecond;\nexports.TimestampMillisecond = Arrow_1.TimestampMillisecond;\nexports.TimestampMicrosecond = Arrow_1.TimestampMicrosecond;\nexports.TimestampNanosecond = Arrow_1.TimestampNanosecond;\nexports.Time = Arrow_1.Time;\nexports.TimeSecond = Arrow_1.TimeSecond;\nexports.TimeMillisecond = Arrow_1.TimeMillisecond;\nexports.TimeMicrosecond = Arrow_1.TimeMicrosecond;\nexports.TimeNanosecond = Arrow_1.TimeNanosecond;\nexports.Decimal = Arrow_1.Decimal;\nexports.List = Arrow_1.List;\nexports.Struct = Arrow_1.Struct;\nexports.Union = Arrow_1.Union;\nexports.DenseUnion = Arrow_1.DenseUnion;\nexports.SparseUnion = Arrow_1.SparseUnion;\nexports.Dictionary = Arrow_1.Dictionary;\nexports.Interval = Arrow_1.Interval;\nexports.IntervalDayTime = Arrow_1.IntervalDayTime;\nexports.IntervalYearMonth = Arrow_1.IntervalYearMonth;\nexports.FixedSizeList = Arrow_1.FixedSizeList;\nexports.Map_ = Arrow_1.Map_;\nexports.Table = Arrow_1.Table;\nexports.Column = Arrow_1.Column;\nexports.Schema = Arrow_1.Schema;\nexports.Field = Arrow_1.Field;\nexports.Visitor = Arrow_1.Visitor;\nexports.Vector = Arrow_1.Vector;\nexports.BaseVector = Arrow_1.BaseVector;\nexports.BinaryVector = Arrow_1.BinaryVector;\nexports.BoolVector = Arrow_1.BoolVector;\nexports.Chunked = Arrow_1.Chunked;\nexports.DateVector = Arrow_1.DateVector;\nexports.DateDayVector = Arrow_1.DateDayVector;\nexports.DateMillisecondVector = Arrow_1.DateMillisecondVector;\nexports.DecimalVector = Arrow_1.DecimalVector;\nexports.DictionaryVector = Arrow_1.DictionaryVector;\nexports.FixedSizeBinaryVector = Arrow_1.FixedSizeBinaryVector;\nexports.FixedSizeListVector = Arrow_1.FixedSizeListVector;\nexports.FloatVector = Arrow_1.FloatVector;\nexports.Float16Vector = Arrow_1.Float16Vector;\nexports.Float32Vector = Arrow_1.Float32Vector;\nexports.Float64Vector = Arrow_1.Float64Vector;\nexports.IntervalVector = Arrow_1.IntervalVector;\nexports.IntervalDayTimeVector = Arrow_1.IntervalDayTimeVector;\nexports.IntervalYearMonthVector = Arrow_1.IntervalYearMonthVector;\nexports.IntVector = Arrow_1.IntVector;\nexports.Int8Vector = Arrow_1.Int8Vector;\nexports.Int16Vector = Arrow_1.Int16Vector;\nexports.Int32Vector = Arrow_1.Int32Vector;\nexports.Int64Vector = Arrow_1.Int64Vector;\nexports.Uint8Vector = Arrow_1.Uint8Vector;\nexports.Uint16Vector = Arrow_1.Uint16Vector;\nexports.Uint32Vector = Arrow_1.Uint32Vector;\nexports.Uint64Vector = Arrow_1.Uint64Vector;\nexports.ListVector = Arrow_1.ListVector;\nexports.MapVector = Arrow_1.MapVector;\nexports.NullVector = Arrow_1.NullVector;\nexports.StructVector = Arrow_1.StructVector;\nexports.TimestampVector = Arrow_1.TimestampVector;\nexports.TimestampSecondVector = Arrow_1.TimestampSecondVector;\nexports.TimestampMillisecondVector = Arrow_1.TimestampMillisecondVector;\nexports.TimestampMicrosecondVector = Arrow_1.TimestampMicrosecondVector;\nexports.TimestampNanosecondVector = Arrow_1.TimestampNanosecondVector;\nexports.TimeVector = Arrow_1.TimeVector;\nexports.TimeSecondVector = Arrow_1.TimeSecondVector;\nexports.TimeMillisecondVector = Arrow_1.TimeMillisecondVector;\nexports.TimeMicrosecondVector = Arrow_1.TimeMicrosecondVector;\nexports.TimeNanosecondVector = Arrow_1.TimeNanosecondVector;\nexports.UnionVector = Arrow_1.UnionVector;\nexports.DenseUnionVector = Arrow_1.DenseUnionVector;\nexports.SparseUnionVector = Arrow_1.SparseUnionVector;\nexports.Utf8Vector = Arrow_1.Utf8Vector;\nexports.ByteStream = Arrow_1.ByteStream;\nexports.AsyncByteStream = Arrow_1.AsyncByteStream;\nexports.AsyncByteQueue = Arrow_1.AsyncByteQueue;\nexports.RecordBatchReader = Arrow_1.RecordBatchReader;\nexports.RecordBatchFileReader = Arrow_1.RecordBatchFileReader;\nexports.RecordBatchStreamReader = Arrow_1.RecordBatchStreamReader;\nexports.AsyncRecordBatchFileReader = Arrow_1.AsyncRecordBatchFileReader;\nexports.AsyncRecordBatchStreamReader = Arrow_1.AsyncRecordBatchStreamReader;\nexports.RecordBatchWriter = Arrow_1.RecordBatchWriter;\nexports.RecordBatchFileWriter = Arrow_1.RecordBatchFileWriter;\nexports.RecordBatchStreamWriter = Arrow_1.RecordBatchStreamWriter;\nexports.RecordBatchJSONWriter = Arrow_1.RecordBatchJSONWriter;\nexports.MessageReader = Arrow_1.MessageReader;\nexports.AsyncMessageReader = Arrow_1.AsyncMessageReader;\nexports.JSONMessageReader = Arrow_1.JSONMessageReader;\nexports.Message = Arrow_1.Message;\nexports.RecordBatch = Arrow_1.RecordBatch;\nexports.DataFrame = Arrow_1.DataFrame;\nexports.FilteredDataFrame = Arrow_1.FilteredDataFrame;\nexports.CountByResult = Arrow_1.CountByResult;\nexports.predicate = Arrow_1.predicate;\nexports.util = Arrow_1.util;\nexports.Builder = Arrow_1.Builder;\nexports.BinaryBuilder = Arrow_1.BinaryBuilder;\nexports.BoolBuilder = Arrow_1.BoolBuilder;\nexports.DateBuilder = Arrow_1.DateBuilder;\nexports.DateDayBuilder = Arrow_1.DateDayBuilder;\nexports.DateMillisecondBuilder = Arrow_1.DateMillisecondBuilder;\nexports.DecimalBuilder = Arrow_1.DecimalBuilder;\nexports.DictionaryBuilder = Arrow_1.DictionaryBuilder;\nexports.FixedSizeBinaryBuilder = Arrow_1.FixedSizeBinaryBuilder;\nexports.FixedSizeListBuilder = Arrow_1.FixedSizeListBuilder;\nexports.FloatBuilder = Arrow_1.FloatBuilder;\nexports.Float16Builder = Arrow_1.Float16Builder;\nexports.Float32Builder = Arrow_1.Float32Builder;\nexports.Float64Builder = Arrow_1.Float64Builder;\nexports.IntervalBuilder = Arrow_1.IntervalBuilder;\nexports.IntervalDayTimeBuilder = Arrow_1.IntervalDayTimeBuilder;\nexports.IntervalYearMonthBuilder = Arrow_1.IntervalYearMonthBuilder;\nexports.IntBuilder = Arrow_1.IntBuilder;\nexports.Int8Builder = Arrow_1.Int8Builder;\nexports.Int16Builder = Arrow_1.Int16Builder;\nexports.Int32Builder = Arrow_1.Int32Builder;\nexports.Int64Builder = Arrow_1.Int64Builder;\nexports.Uint8Builder = Arrow_1.Uint8Builder;\nexports.Uint16Builder = Arrow_1.Uint16Builder;\nexports.Uint32Builder = Arrow_1.Uint32Builder;\nexports.Uint64Builder = Arrow_1.Uint64Builder;\nexports.ListBuilder = Arrow_1.ListBuilder;\nexports.MapBuilder = Arrow_1.MapBuilder;\nexports.NullBuilder = Arrow_1.NullBuilder;\nexports.StructBuilder = Arrow_1.StructBuilder;\nexports.TimestampBuilder = Arrow_1.TimestampBuilder;\nexports.TimestampSecondBuilder = Arrow_1.TimestampSecondBuilder;\nexports.TimestampMillisecondBuilder = Arrow_1.TimestampMillisecondBuilder;\nexports.TimestampMicrosecondBuilder = Arrow_1.TimestampMicrosecondBuilder;\nexports.TimestampNanosecondBuilder = Arrow_1.TimestampNanosecondBuilder;\nexports.TimeBuilder = Arrow_1.TimeBuilder;\nexports.TimeSecondBuilder = Arrow_1.TimeSecondBuilder;\nexports.TimeMillisecondBuilder = Arrow_1.TimeMillisecondBuilder;\nexports.TimeMicrosecondBuilder = Arrow_1.TimeMicrosecondBuilder;\nexports.TimeNanosecondBuilder = Arrow_1.TimeNanosecondBuilder;\nexports.UnionBuilder = Arrow_1.UnionBuilder;\nexports.DenseUnionBuilder = Arrow_1.DenseUnionBuilder;\nexports.SparseUnionBuilder = Arrow_1.SparseUnionBuilder;\nexports.Utf8Builder = Arrow_1.Utf8Builder;\n\n//# sourceMappingURL=Arrow.dom.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"./buffer\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass BoolBuilder extends builder_1.Builder {\n    constructor(options) {\n        super(options);\n        this._values = new buffer_1.BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\nexports.BoolBuilder = BoolBuilder;\n\n//# sourceMappingURL=bool.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_1 = require(\"../type\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass DictionaryBuilder extends builder_1.Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new type_1.Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = builder_1.Builder.new({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = builder_1.Builder.new({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\nexports.DictionaryBuilder = DictionaryBuilder;\n\n//# sourceMappingURL=dictionary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000];\n/** @ignore */\nclass BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\nexports.BaseInt64 = BaseInt64;\n/** @ignore */\nclass Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\nexports.Uint64 = Uint64;\n/** @ignore */\nclass Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\nexports.Int64 = Int64;\n/** @ignore */\nclass Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\nexports.Int128 = Int128;\n\n//# sourceMappingURL=int.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @ignore */\nvar builder_1 = require(\"../builder\");\nexports.Builder = builder_1.Builder;\nvar bool_1 = require(\"./bool\");\nexports.BoolBuilder = bool_1.BoolBuilder;\nvar null_1 = require(\"./null\");\nexports.NullBuilder = null_1.NullBuilder;\nvar date_1 = require(\"./date\");\nexports.DateBuilder = date_1.DateBuilder;\nexports.DateDayBuilder = date_1.DateDayBuilder;\nexports.DateMillisecondBuilder = date_1.DateMillisecondBuilder;\nvar decimal_1 = require(\"./decimal\");\nexports.DecimalBuilder = decimal_1.DecimalBuilder;\nvar dictionary_1 = require(\"./dictionary\");\nexports.DictionaryBuilder = dictionary_1.DictionaryBuilder;\nvar fixedsizebinary_1 = require(\"./fixedsizebinary\");\nexports.FixedSizeBinaryBuilder = fixedsizebinary_1.FixedSizeBinaryBuilder;\nvar float_1 = require(\"./float\");\nexports.FloatBuilder = float_1.FloatBuilder;\nexports.Float16Builder = float_1.Float16Builder;\nexports.Float32Builder = float_1.Float32Builder;\nexports.Float64Builder = float_1.Float64Builder;\nvar int_1 = require(\"./int\");\nexports.IntBuilder = int_1.IntBuilder;\nexports.Int8Builder = int_1.Int8Builder;\nexports.Int16Builder = int_1.Int16Builder;\nexports.Int32Builder = int_1.Int32Builder;\nexports.Int64Builder = int_1.Int64Builder;\nexports.Uint8Builder = int_1.Uint8Builder;\nexports.Uint16Builder = int_1.Uint16Builder;\nexports.Uint32Builder = int_1.Uint32Builder;\nexports.Uint64Builder = int_1.Uint64Builder;\nvar time_1 = require(\"./time\");\nexports.TimeBuilder = time_1.TimeBuilder;\nexports.TimeSecondBuilder = time_1.TimeSecondBuilder;\nexports.TimeMillisecondBuilder = time_1.TimeMillisecondBuilder;\nexports.TimeMicrosecondBuilder = time_1.TimeMicrosecondBuilder;\nexports.TimeNanosecondBuilder = time_1.TimeNanosecondBuilder;\nvar timestamp_1 = require(\"./timestamp\");\nexports.TimestampBuilder = timestamp_1.TimestampBuilder;\nexports.TimestampSecondBuilder = timestamp_1.TimestampSecondBuilder;\nexports.TimestampMillisecondBuilder = timestamp_1.TimestampMillisecondBuilder;\nexports.TimestampMicrosecondBuilder = timestamp_1.TimestampMicrosecondBuilder;\nexports.TimestampNanosecondBuilder = timestamp_1.TimestampNanosecondBuilder;\nvar interval_1 = require(\"./interval\");\nexports.IntervalBuilder = interval_1.IntervalBuilder;\nexports.IntervalDayTimeBuilder = interval_1.IntervalDayTimeBuilder;\nexports.IntervalYearMonthBuilder = interval_1.IntervalYearMonthBuilder;\nvar utf8_1 = require(\"./utf8\");\nexports.Utf8Builder = utf8_1.Utf8Builder;\nvar binary_1 = require(\"./binary\");\nexports.BinaryBuilder = binary_1.BinaryBuilder;\nvar list_1 = require(\"./list\");\nexports.ListBuilder = list_1.ListBuilder;\nvar fixedsizelist_1 = require(\"./fixedsizelist\");\nexports.FixedSizeListBuilder = fixedsizelist_1.FixedSizeListBuilder;\nvar map_1 = require(\"./map\");\nexports.MapBuilder = map_1.MapBuilder;\nvar struct_1 = require(\"./struct\");\nexports.StructBuilder = struct_1.StructBuilder;\nvar union_1 = require(\"./union\");\nexports.UnionBuilder = union_1.UnionBuilder;\nexports.SparseUnionBuilder = union_1.SparseUnionBuilder;\nexports.DenseUnionBuilder = union_1.DenseUnionBuilder;\nconst enum_1 = require(\"../enum\");\nconst utf8_2 = require(\"./utf8\");\nconst builder_2 = require(\"../builder\");\nconst set_1 = require(\"../visitor/set\");\nconst builderctor_1 = require(\"../visitor/builderctor\");\n/** @nocollapse */\nbuilder_2.Builder.new = newBuilder;\nfunction newBuilder(options) {\n    const type = options.type;\n    const builder = new (builderctor_1.instance.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n    return builder;\n}\nObject.keys(enum_1.Type)\n    .map((T) => enum_1.Type[T])\n    .filter((T) => typeof T === 'number' && T !== enum_1.Type.NONE)\n    .forEach((typeId) => {\n    const BuilderCtor = builderctor_1.instance.visit(typeId);\n    BuilderCtor.prototype._setValue = set_1.instance.getVisitFn(typeId);\n});\nutf8_2.Utf8Builder.prototype._setValue = set_1.instance.visitBinary;\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n/* tslint:disable:class-name */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @enum {number}\n */\nvar org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MetadataVersion;\n                (function (MetadataVersion) {\n                    /**\n                     * 0.1.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n                    /**\n                     * 0.2.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n                    /**\n                     * 0.3.0 -> 0.7.1\n                     */\n                    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n                    /**\n                     * >= 0.8.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n                })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let UnionMode;\n                (function (UnionMode) {\n                    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n                    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n                })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Precision;\n                (function (Precision) {\n                    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n                    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n                    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let DateUnit;\n                (function (DateUnit) {\n                    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n                    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let TimeUnit;\n                (function (TimeUnit) {\n                    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n                    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n                    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n                })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let IntervalUnit;\n                (function (IntervalUnit) {\n                    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n                    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n                })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Type;\n                (function (Type) {\n                    Type[Type[\"NONE\"] = 0] = \"NONE\";\n                    Type[Type[\"Null\"] = 1] = \"Null\";\n                    Type[Type[\"Int\"] = 2] = \"Int\";\n                    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n                    Type[Type[\"Binary\"] = 4] = \"Binary\";\n                    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n                    Type[Type[\"Bool\"] = 6] = \"Bool\";\n                    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n                    Type[Type[\"Date\"] = 8] = \"Date\";\n                    Type[Type[\"Time\"] = 9] = \"Time\";\n                    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n                    Type[Type[\"Interval\"] = 11] = \"Interval\";\n                    Type[Type[\"List\"] = 12] = \"List\";\n                    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n                    Type[Type[\"Union\"] = 14] = \"Union\";\n                    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n                    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n                    Type[Type[\"Map\"] = 17] = \"Map\";\n                    Type[Type[\"Duration\"] = 18] = \"Duration\";\n                    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n                    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n                    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n                })(Type = flatbuf.Type || (flatbuf.Type = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Endianness;\n                (function (Endianness) {\n                    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n                    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n                })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Null {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Null\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Null= obj\n                     * @returns Null\n                     */\n                    static getRootAsNull(bb, obj) {\n                        return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startNull(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endNull(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createNull(builder) {\n                        Null.startNull(builder);\n                        return Null.endNull(builder);\n                    }\n                }\n                flatbuf.Null = Null;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Struct_ {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Struct_\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Struct_= obj\n                     * @returns Struct_\n                     */\n                    static getRootAsStruct_(bb, obj) {\n                        return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startStruct_(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endStruct_(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createStruct_(builder) {\n                        Struct_.startStruct_(builder);\n                        return Struct_.endStruct_(builder);\n                    }\n                }\n                flatbuf.Struct_ = Struct_;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class List {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns List\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param List= obj\n                     * @returns List\n                     */\n                    static getRootAsList(bb, obj) {\n                        return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createList(builder) {\n                        List.startList(builder);\n                        return List.endList(builder);\n                    }\n                }\n                flatbuf.List = List;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeList= obj\n                     * @returns LargeList\n                     */\n                    static getRootAsLargeList(bb, obj) {\n                        return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeList(builder) {\n                        LargeList.startLargeList(builder);\n                        return LargeList.endLargeList(builder);\n                    }\n                }\n                flatbuf.LargeList = LargeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeList= obj\n                     * @returns FixedSizeList\n                     */\n                    static getRootAsFixedSizeList(bb, obj) {\n                        return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of list items per value\n                     *\n                     * @returns number\n                     */\n                    listSize() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeList(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number listSize\n                     */\n                    static addListSize(builder, listSize) {\n                        builder.addFieldInt32(0, listSize, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeList(builder, listSize) {\n                        FixedSizeList.startFixedSizeList(builder);\n                        FixedSizeList.addListSize(builder, listSize);\n                        return FixedSizeList.endFixedSizeList(builder);\n                    }\n                }\n                flatbuf.FixedSizeList = FixedSizeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Map {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Map\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Map= obj\n                     * @returns Map\n                     */\n                    static getRootAsMap(bb, obj) {\n                        return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Set to true if the keys within each value are sorted\n                     *\n                     * @returns boolean\n                     */\n                    keysSorted() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMap(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean keysSorted\n                     */\n                    static addKeysSorted(builder, keysSorted) {\n                        builder.addFieldInt8(0, +keysSorted, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMap(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createMap(builder, keysSorted) {\n                        Map.startMap(builder);\n                        Map.addKeysSorted(builder, keysSorted);\n                        return Map.endMap(builder);\n                    }\n                }\n                flatbuf.Map = Map;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Union {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Union\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Union= obj\n                     * @returns Union\n                     */\n                    static getRootAsUnion(bb, obj) {\n                        return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.UnionMode\n                     */\n                    mode() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n                    }\n                    /**\n                     * @param number index\n                     * @returns number\n                     */\n                    typeIds(index) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    typeIdsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns Int32Array\n                     */\n                    typeIdsArray() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUnion(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.UnionMode mode\n                     */\n                    static addMode(builder, mode) {\n                        builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeIdsOffset\n                     */\n                    static addTypeIds(builder, typeIdsOffset) {\n                        builder.addFieldOffset(1, typeIdsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<number> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createTypeIdsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addInt32(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startTypeIdsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUnion(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUnion(builder, mode, typeIdsOffset) {\n                        Union.startUnion(builder);\n                        Union.addMode(builder, mode);\n                        Union.addTypeIds(builder, typeIdsOffset);\n                        return Union.endUnion(builder);\n                    }\n                }\n                flatbuf.Union = Union;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Int {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Int\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Int= obj\n                     * @returns Int\n                     */\n                    static getRootAsInt(bb, obj) {\n                        return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns boolean\n                     */\n                    isSigned() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInt(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(0, bitWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isSigned\n                     */\n                    static addIsSigned(builder, isSigned) {\n                        builder.addFieldInt8(1, +isSigned, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInt(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInt(builder, bitWidth, isSigned) {\n                        Int.startInt(builder);\n                        Int.addBitWidth(builder, bitWidth);\n                        Int.addIsSigned(builder, isSigned);\n                        return Int.endInt(builder);\n                    }\n                }\n                flatbuf.Int = Int;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FloatingPoint {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FloatingPoint\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FloatingPoint= obj\n                     * @returns FloatingPoint\n                     */\n                    static getRootAsFloatingPoint(bb, obj) {\n                        return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Precision\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFloatingPoint(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Precision precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFloatingPoint(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFloatingPoint(builder, precision) {\n                        FloatingPoint.startFloatingPoint(builder);\n                        FloatingPoint.addPrecision(builder, precision);\n                        return FloatingPoint.endFloatingPoint(builder);\n                    }\n                }\n                flatbuf.FloatingPoint = FloatingPoint;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Utf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Utf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Utf8= obj\n                     * @returns Utf8\n                     */\n                    static getRootAsUtf8(bb, obj) {\n                        return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUtf8(builder) {\n                        Utf8.startUtf8(builder);\n                        return Utf8.endUtf8(builder);\n                    }\n                }\n                flatbuf.Utf8 = Utf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Binary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Binary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Binary= obj\n                     * @returns Binary\n                     */\n                    static getRootAsBinary(bb, obj) {\n                        return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBinary(builder) {\n                        Binary.startBinary(builder);\n                        return Binary.endBinary(builder);\n                    }\n                }\n                flatbuf.Binary = Binary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeUtf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeUtf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeUtf8= obj\n                     * @returns LargeUtf8\n                     */\n                    static getRootAsLargeUtf8(bb, obj) {\n                        return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeUtf8(builder) {\n                        LargeUtf8.startLargeUtf8(builder);\n                        return LargeUtf8.endLargeUtf8(builder);\n                    }\n                }\n                flatbuf.LargeUtf8 = LargeUtf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeBinary= obj\n                     * @returns LargeBinary\n                     */\n                    static getRootAsLargeBinary(bb, obj) {\n                        return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeBinary(builder) {\n                        LargeBinary.startLargeBinary(builder);\n                        return LargeBinary.endLargeBinary(builder);\n                    }\n                }\n                flatbuf.LargeBinary = LargeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeBinary= obj\n                     * @returns FixedSizeBinary\n                     */\n                    static getRootAsFixedSizeBinary(bb, obj) {\n                        return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of bytes per value\n                     *\n                     * @returns number\n                     */\n                    byteWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeBinary(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number byteWidth\n                     */\n                    static addByteWidth(builder, byteWidth) {\n                        builder.addFieldInt32(0, byteWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeBinary(builder, byteWidth) {\n                        FixedSizeBinary.startFixedSizeBinary(builder);\n                        FixedSizeBinary.addByteWidth(builder, byteWidth);\n                        return FixedSizeBinary.endFixedSizeBinary(builder);\n                    }\n                }\n                flatbuf.FixedSizeBinary = FixedSizeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Bool {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Bool\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Bool= obj\n                     * @returns Bool\n                     */\n                    static getRootAsBool(bb, obj) {\n                        return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBool(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBool(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBool(builder) {\n                        Bool.startBool(builder);\n                        return Bool.endBool(builder);\n                    }\n                }\n                flatbuf.Bool = Bool;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Decimal {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Decimal\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Decimal= obj\n                     * @returns Decimal\n                     */\n                    static getRootAsDecimal(bb, obj) {\n                        return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Total number of decimal digits\n                     *\n                     * @returns number\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Number of digits after the decimal point \".\"\n                     *\n                     * @returns number\n                     */\n                    scale() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDecimal(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt32(0, precision, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number scale\n                     */\n                    static addScale(builder, scale) {\n                        builder.addFieldInt32(1, scale, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDecimal(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDecimal(builder, precision, scale) {\n                        Decimal.startDecimal(builder);\n                        Decimal.addPrecision(builder, precision);\n                        Decimal.addScale(builder, scale);\n                        return Decimal.endDecimal(builder);\n                    }\n                }\n                flatbuf.Decimal = Decimal;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Date {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Date\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Date= obj\n                     * @returns Date\n                     */\n                    static getRootAsDate(bb, obj) {\n                        return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.DateUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDate(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.DateUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDate(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDate(builder, unit) {\n                        Date.startDate(builder);\n                        Date.addUnit(builder, unit);\n                        return Date.endDate(builder);\n                    }\n                }\n                flatbuf.Date = Date;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Time {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Time\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Time= obj\n                     * @returns Time\n                     */\n                    static getRootAsTime(bb, obj) {\n                        return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTime(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(1, bitWidth, 32);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTime(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTime(builder, unit, bitWidth) {\n                        Time.startTime(builder);\n                        Time.addUnit(builder, unit);\n                        Time.addBitWidth(builder, bitWidth);\n                        return Time.endTime(builder);\n                    }\n                }\n                flatbuf.Time = Time;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Timestamp {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Timestamp\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Timestamp= obj\n                     * @returns Timestamp\n                     */\n                    static getRootAsTimestamp(bb, obj) {\n                        return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n                    }\n                    timezone(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTimestamp(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset timezoneOffset\n                     */\n                    static addTimezone(builder, timezoneOffset) {\n                        builder.addFieldOffset(1, timezoneOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTimestamp(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTimestamp(builder, unit, timezoneOffset) {\n                        Timestamp.startTimestamp(builder);\n                        Timestamp.addUnit(builder, unit);\n                        Timestamp.addTimezone(builder, timezoneOffset);\n                        return Timestamp.endTimestamp(builder);\n                    }\n                }\n                flatbuf.Timestamp = Timestamp;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Interval {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Interval\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Interval= obj\n                     * @returns Interval\n                     */\n                    static getRootAsInterval(bb, obj) {\n                        return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.IntervalUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInterval(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.IntervalUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInterval(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInterval(builder, unit) {\n                        Interval.startInterval(builder);\n                        Interval.addUnit(builder, unit);\n                        return Interval.endInterval(builder);\n                    }\n                }\n                flatbuf.Interval = Interval;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Duration {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Duration\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Duration= obj\n                     * @returns Duration\n                     */\n                    static getRootAsDuration(bb, obj) {\n                        return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDuration(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDuration(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDuration(builder, unit) {\n                        Duration.startDuration(builder);\n                        Duration.addUnit(builder, unit);\n                        return Duration.endDuration(builder);\n                    }\n                }\n                flatbuf.Duration = Duration;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class KeyValue {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns KeyValue\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param KeyValue= obj\n                     * @returns KeyValue\n                     */\n                    static getRootAsKeyValue(bb, obj) {\n                        return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    key(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    value(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startKeyValue(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset keyOffset\n                     */\n                    static addKey(builder, keyOffset) {\n                        builder.addFieldOffset(0, keyOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset valueOffset\n                     */\n                    static addValue(builder, valueOffset) {\n                        builder.addFieldOffset(1, valueOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endKeyValue(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createKeyValue(builder, keyOffset, valueOffset) {\n                        KeyValue.startKeyValue(builder);\n                        KeyValue.addKey(builder, keyOffset);\n                        KeyValue.addValue(builder, valueOffset);\n                        return KeyValue.endKeyValue(builder);\n                    }\n                }\n                flatbuf.KeyValue = KeyValue;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryEncoding {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryEncoding\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryEncoding= obj\n                     * @returns DictionaryEncoding\n                     */\n                    static getRootAsDictionaryEncoding(bb, obj) {\n                        return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * The known dictionary id in the application where this data is used. In\n                     * the file or streaming formats, the dictionary ids are found in the\n                     * DictionaryBatch messages\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * The dictionary indices are constrained to be positive integers. If this\n                     * field is null, the indices must be signed int32\n                     *\n                     * @param org.apache.arrow.flatbuf.Int= obj\n                     * @returns org.apache.arrow.flatbuf.Int|null\n                     */\n                    indexType(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * By default, dictionaries are not ordered, or the order does not have\n                     * semantic meaning. In some statistical, applications, dictionary-encoding\n                     * is used to represent ordered categorical data, and we provide a way to\n                     * preserve that metadata here\n                     *\n                     * @returns boolean\n                     */\n                    isOrdered() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryEncoding(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset indexTypeOffset\n                     */\n                    static addIndexType(builder, indexTypeOffset) {\n                        builder.addFieldOffset(1, indexTypeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isOrdered\n                     */\n                    static addIsOrdered(builder, isOrdered) {\n                        builder.addFieldInt8(2, +isOrdered, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryEncoding(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n                        DictionaryEncoding.startDictionaryEncoding(builder);\n                        DictionaryEncoding.addId(builder, id);\n                        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n                        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n                        return DictionaryEncoding.endDictionaryEncoding(builder);\n                    }\n                }\n                flatbuf.DictionaryEncoding = DictionaryEncoding;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Field {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Field\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Field= obj\n                     * @returns Field\n                     */\n                    static getRootAsField(bb, obj) {\n                        return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    name(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * Whether or not this field can contain nulls. Should be true in general.\n                     *\n                     * @returns boolean\n                     */\n                    nullable() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Type\n                     */\n                    typeType() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n                    }\n                    /**\n                     * This is the type of the decoded value if the field is dictionary encoded.\n                     *\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    type(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * Present only if the field is dictionary encoded.\n                     *\n                     * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n                     * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n                     */\n                    dictionary(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * children apply only to nested data types like Struct, List and Union. For\n                     * primitive types children will have length 0.\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    children(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    childrenLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * User-defined metadata\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startField(builder) {\n                        builder.startObject(7);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nameOffset\n                     */\n                    static addName(builder, nameOffset) {\n                        builder.addFieldOffset(0, nameOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean nullable\n                     */\n                    static addNullable(builder, nullable) {\n                        builder.addFieldInt8(1, +nullable, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Type typeType\n                     */\n                    static addTypeType(builder, typeType) {\n                        builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeOffset\n                     */\n                    static addType(builder, typeOffset) {\n                        builder.addFieldOffset(3, typeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionaryOffset\n                     */\n                    static addDictionary(builder, dictionaryOffset) {\n                        builder.addFieldOffset(4, dictionaryOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset childrenOffset\n                     */\n                    static addChildren(builder, childrenOffset) {\n                        builder.addFieldOffset(5, childrenOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createChildrenVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startChildrenVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(6, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endField(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n                        Field.startField(builder);\n                        Field.addName(builder, nameOffset);\n                        Field.addNullable(builder, nullable);\n                        Field.addTypeType(builder, typeType);\n                        Field.addType(builder, typeOffset);\n                        Field.addDictionary(builder, dictionaryOffset);\n                        Field.addChildren(builder, childrenOffset);\n                        Field.addCustomMetadata(builder, customMetadataOffset);\n                        return Field.endField(builder);\n                    }\n                }\n                flatbuf.Field = Field;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Buffer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Buffer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The relative offset into the shared memory page where the bytes for this\n                     * buffer starts\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The absolute length (in bytes) of the memory buffer. The memory is found\n                     * from offset (inclusive) to offset + length (non-inclusive).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param flatbuffers.Long length\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBuffer(builder, offset, length) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(length);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Buffer = Buffer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Schema {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Schema\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Schema= obj\n                     * @returns Schema\n                     */\n                    static getRootAsSchema(bb, obj) {\n                        return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * endianness of the buffer\n                     * it is Little Endian by default\n                     * if endianness doesn't match the underlying system then the vectors need to be converted\n                     *\n                     * @returns org.apache.arrow.flatbuf.Endianness\n                     */\n                    endianness() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    fields(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    fieldsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startSchema(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Endianness endianness\n                     */\n                    static addEndianness(builder, endianness) {\n                        builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset fieldsOffset\n                     */\n                    static addFields(builder, fieldsOffset) {\n                        builder.addFieldOffset(1, fieldsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startFieldsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(2, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endSchema(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishSchemaBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n                        Schema.startSchema(builder);\n                        Schema.addEndianness(builder, endianness);\n                        Schema.addFields(builder, fieldsOffset);\n                        Schema.addCustomMetadata(builder, customMetadataOffset);\n                        return Schema.endSchema(builder);\n                    }\n                }\n                flatbuf.Schema = Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n\n//# sourceMappingURL=Schema.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass FixedSizeBinaryVector extends base_1.BaseVector {\n}\nexports.FixedSizeBinaryVector = FixedSizeBinaryVector;\n\n//# sourceMappingURL=fixedsizebinary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar enum_1 = require(\"./enum\");\nexports.ArrowType = enum_1.ArrowType;\nexports.DateUnit = enum_1.DateUnit;\nexports.IntervalUnit = enum_1.IntervalUnit;\nexports.MessageHeader = enum_1.MessageHeader;\nexports.MetadataVersion = enum_1.MetadataVersion;\nexports.Precision = enum_1.Precision;\nexports.TimeUnit = enum_1.TimeUnit;\nexports.Type = enum_1.Type;\nexports.UnionMode = enum_1.UnionMode;\nexports.BufferType = enum_1.BufferType;\nvar data_1 = require(\"./data\");\nexports.Data = data_1.Data;\nvar type_1 = require(\"./type\");\nexports.DataType = type_1.DataType;\nexports.Null = type_1.Null;\nexports.Bool = type_1.Bool;\nexports.Int = type_1.Int;\nexports.Int8 = type_1.Int8;\nexports.Int16 = type_1.Int16;\nexports.Int32 = type_1.Int32;\nexports.Int64 = type_1.Int64;\nexports.Uint8 = type_1.Uint8;\nexports.Uint16 = type_1.Uint16;\nexports.Uint32 = type_1.Uint32;\nexports.Uint64 = type_1.Uint64;\nexports.Float = type_1.Float;\nexports.Float16 = type_1.Float16;\nexports.Float32 = type_1.Float32;\nexports.Float64 = type_1.Float64;\nexports.Utf8 = type_1.Utf8;\nexports.Binary = type_1.Binary;\nexports.FixedSizeBinary = type_1.FixedSizeBinary;\nexports.Date_ = type_1.Date_;\nexports.DateDay = type_1.DateDay;\nexports.DateMillisecond = type_1.DateMillisecond;\nexports.Timestamp = type_1.Timestamp;\nexports.TimestampSecond = type_1.TimestampSecond;\nexports.TimestampMillisecond = type_1.TimestampMillisecond;\nexports.TimestampMicrosecond = type_1.TimestampMicrosecond;\nexports.TimestampNanosecond = type_1.TimestampNanosecond;\nexports.Time = type_1.Time;\nexports.TimeSecond = type_1.TimeSecond;\nexports.TimeMillisecond = type_1.TimeMillisecond;\nexports.TimeMicrosecond = type_1.TimeMicrosecond;\nexports.TimeNanosecond = type_1.TimeNanosecond;\nexports.Decimal = type_1.Decimal;\nexports.List = type_1.List;\nexports.Struct = type_1.Struct;\nexports.Union = type_1.Union;\nexports.DenseUnion = type_1.DenseUnion;\nexports.SparseUnion = type_1.SparseUnion;\nexports.Dictionary = type_1.Dictionary;\nexports.Interval = type_1.Interval;\nexports.IntervalDayTime = type_1.IntervalDayTime;\nexports.IntervalYearMonth = type_1.IntervalYearMonth;\nexports.FixedSizeList = type_1.FixedSizeList;\nexports.Map_ = type_1.Map_;\nvar table_1 = require(\"./table\");\nexports.Table = table_1.Table;\nvar column_1 = require(\"./column\");\nexports.Column = column_1.Column;\nvar visitor_1 = require(\"./visitor\");\nexports.Visitor = visitor_1.Visitor;\nvar schema_1 = require(\"./schema\");\nexports.Schema = schema_1.Schema;\nexports.Field = schema_1.Field;\nvar index_1 = require(\"./vector/index\");\nexports.Vector = index_1.Vector;\nexports.BaseVector = index_1.BaseVector;\nexports.BinaryVector = index_1.BinaryVector;\nexports.BoolVector = index_1.BoolVector;\nexports.Chunked = index_1.Chunked;\nexports.DateVector = index_1.DateVector;\nexports.DateDayVector = index_1.DateDayVector;\nexports.DateMillisecondVector = index_1.DateMillisecondVector;\nexports.DecimalVector = index_1.DecimalVector;\nexports.DictionaryVector = index_1.DictionaryVector;\nexports.FixedSizeBinaryVector = index_1.FixedSizeBinaryVector;\nexports.FixedSizeListVector = index_1.FixedSizeListVector;\nexports.FloatVector = index_1.FloatVector;\nexports.Float16Vector = index_1.Float16Vector;\nexports.Float32Vector = index_1.Float32Vector;\nexports.Float64Vector = index_1.Float64Vector;\nexports.IntervalVector = index_1.IntervalVector;\nexports.IntervalDayTimeVector = index_1.IntervalDayTimeVector;\nexports.IntervalYearMonthVector = index_1.IntervalYearMonthVector;\nexports.IntVector = index_1.IntVector;\nexports.Int8Vector = index_1.Int8Vector;\nexports.Int16Vector = index_1.Int16Vector;\nexports.Int32Vector = index_1.Int32Vector;\nexports.Int64Vector = index_1.Int64Vector;\nexports.Uint8Vector = index_1.Uint8Vector;\nexports.Uint16Vector = index_1.Uint16Vector;\nexports.Uint32Vector = index_1.Uint32Vector;\nexports.Uint64Vector = index_1.Uint64Vector;\nexports.ListVector = index_1.ListVector;\nexports.MapVector = index_1.MapVector;\nexports.NullVector = index_1.NullVector;\nexports.StructVector = index_1.StructVector;\nexports.TimestampVector = index_1.TimestampVector;\nexports.TimestampSecondVector = index_1.TimestampSecondVector;\nexports.TimestampMillisecondVector = index_1.TimestampMillisecondVector;\nexports.TimestampMicrosecondVector = index_1.TimestampMicrosecondVector;\nexports.TimestampNanosecondVector = index_1.TimestampNanosecondVector;\nexports.TimeVector = index_1.TimeVector;\nexports.TimeSecondVector = index_1.TimeSecondVector;\nexports.TimeMillisecondVector = index_1.TimeMillisecondVector;\nexports.TimeMicrosecondVector = index_1.TimeMicrosecondVector;\nexports.TimeNanosecondVector = index_1.TimeNanosecondVector;\nexports.UnionVector = index_1.UnionVector;\nexports.DenseUnionVector = index_1.DenseUnionVector;\nexports.SparseUnionVector = index_1.SparseUnionVector;\nexports.Utf8Vector = index_1.Utf8Vector;\nvar index_2 = require(\"./builder/index\");\nexports.Builder = index_2.Builder;\nexports.BinaryBuilder = index_2.BinaryBuilder;\nexports.BoolBuilder = index_2.BoolBuilder;\nexports.DateBuilder = index_2.DateBuilder;\nexports.DateDayBuilder = index_2.DateDayBuilder;\nexports.DateMillisecondBuilder = index_2.DateMillisecondBuilder;\nexports.DecimalBuilder = index_2.DecimalBuilder;\nexports.DictionaryBuilder = index_2.DictionaryBuilder;\nexports.FixedSizeBinaryBuilder = index_2.FixedSizeBinaryBuilder;\nexports.FixedSizeListBuilder = index_2.FixedSizeListBuilder;\nexports.FloatBuilder = index_2.FloatBuilder;\nexports.Float16Builder = index_2.Float16Builder;\nexports.Float32Builder = index_2.Float32Builder;\nexports.Float64Builder = index_2.Float64Builder;\nexports.IntervalBuilder = index_2.IntervalBuilder;\nexports.IntervalDayTimeBuilder = index_2.IntervalDayTimeBuilder;\nexports.IntervalYearMonthBuilder = index_2.IntervalYearMonthBuilder;\nexports.IntBuilder = index_2.IntBuilder;\nexports.Int8Builder = index_2.Int8Builder;\nexports.Int16Builder = index_2.Int16Builder;\nexports.Int32Builder = index_2.Int32Builder;\nexports.Int64Builder = index_2.Int64Builder;\nexports.Uint8Builder = index_2.Uint8Builder;\nexports.Uint16Builder = index_2.Uint16Builder;\nexports.Uint32Builder = index_2.Uint32Builder;\nexports.Uint64Builder = index_2.Uint64Builder;\nexports.ListBuilder = index_2.ListBuilder;\nexports.MapBuilder = index_2.MapBuilder;\nexports.NullBuilder = index_2.NullBuilder;\nexports.StructBuilder = index_2.StructBuilder;\nexports.TimestampBuilder = index_2.TimestampBuilder;\nexports.TimestampSecondBuilder = index_2.TimestampSecondBuilder;\nexports.TimestampMillisecondBuilder = index_2.TimestampMillisecondBuilder;\nexports.TimestampMicrosecondBuilder = index_2.TimestampMicrosecondBuilder;\nexports.TimestampNanosecondBuilder = index_2.TimestampNanosecondBuilder;\nexports.TimeBuilder = index_2.TimeBuilder;\nexports.TimeSecondBuilder = index_2.TimeSecondBuilder;\nexports.TimeMillisecondBuilder = index_2.TimeMillisecondBuilder;\nexports.TimeMicrosecondBuilder = index_2.TimeMicrosecondBuilder;\nexports.TimeNanosecondBuilder = index_2.TimeNanosecondBuilder;\nexports.UnionBuilder = index_2.UnionBuilder;\nexports.DenseUnionBuilder = index_2.DenseUnionBuilder;\nexports.SparseUnionBuilder = index_2.SparseUnionBuilder;\nexports.Utf8Builder = index_2.Utf8Builder;\nvar stream_1 = require(\"./io/stream\");\nexports.ByteStream = stream_1.ByteStream;\nexports.AsyncByteStream = stream_1.AsyncByteStream;\nexports.AsyncByteQueue = stream_1.AsyncByteQueue;\nvar reader_1 = require(\"./ipc/reader\");\nexports.RecordBatchReader = reader_1.RecordBatchReader;\nexports.RecordBatchFileReader = reader_1.RecordBatchFileReader;\nexports.RecordBatchStreamReader = reader_1.RecordBatchStreamReader;\nexports.AsyncRecordBatchFileReader = reader_1.AsyncRecordBatchFileReader;\nexports.AsyncRecordBatchStreamReader = reader_1.AsyncRecordBatchStreamReader;\nvar writer_1 = require(\"./ipc/writer\");\nexports.RecordBatchWriter = writer_1.RecordBatchWriter;\nexports.RecordBatchFileWriter = writer_1.RecordBatchFileWriter;\nexports.RecordBatchStreamWriter = writer_1.RecordBatchStreamWriter;\nexports.RecordBatchJSONWriter = writer_1.RecordBatchJSONWriter;\nvar message_1 = require(\"./ipc/message\");\nexports.MessageReader = message_1.MessageReader;\nexports.AsyncMessageReader = message_1.AsyncMessageReader;\nexports.JSONMessageReader = message_1.JSONMessageReader;\nvar message_2 = require(\"./ipc/metadata/message\");\nexports.Message = message_2.Message;\nvar recordbatch_1 = require(\"./recordbatch\");\nexports.RecordBatch = recordbatch_1.RecordBatch;\nvar dataframe_1 = require(\"./compute/dataframe\");\nexports.DataFrame = dataframe_1.DataFrame;\nexports.FilteredDataFrame = dataframe_1.FilteredDataFrame;\nexports.CountByResult = dataframe_1.CountByResult;\nconst util_bn_ = require(\"./util/bn\");\nconst util_int_ = require(\"./util/int\");\nconst util_bit_ = require(\"./util/bit\");\nconst util_math_ = require(\"./util/math\");\nconst util_buffer_ = require(\"./util/buffer\");\nconst util_vector_ = require(\"./util/vector\");\nconst predicate = require(\"./compute/predicate\");\nexports.predicate = predicate;\n/** @ignore */\nexports.util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n\n//# sourceMappingURL=Arrow.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst row_1 = require(\"./row\");\nconst base_1 = require(\"./base\");\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nclass StructVector extends base_1.BaseVector {\n    bind(index) {\n        const proto = this._row || (this._row = new row_1.StructRow(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\nexports.StructVector = StructVector;\n\n//# sourceMappingURL=struct.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_1 = require(\"../util/bn\");\nconst column_1 = require(\"../column\");\nconst vector_1 = require(\"../vector\");\nconst visitor_1 = require(\"../visitor\");\nconst enum_1 = require(\"../enum\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst enum_2 = require(\"../enum\");\nconst bit_1 = require(\"../util/bit\");\nconst args_1 = require(\"../util/args\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass JSONVectorAssembler extends visitor_1.Visitor {\n    /** @nocollapse */\n    static assemble(...args) {\n        return new JSONVectorAssembler().visitMany(args_1.selectColumnChildrenArgs(recordbatch_1.RecordBatch, args));\n    }\n    visit(column) {\n        const { data, name, length } = column;\n        const { offset, nullCount, nullBitmap } = data;\n        const type = type_1.DataType.isDictionary(column.type) ? column.type.indices : column.type;\n        const buffers = Object.assign([], data.buffers, { [enum_1.BufferType.VALIDITY]: undefined });\n        return {\n            'name': name,\n            'count': length,\n            'VALIDITY': type_1.DataType.isNull(type) ? undefined\n                : nullCount <= 0 ? Array.from({ length }, () => 1)\n                    : [...bit_1.iterateBits(nullBitmap, offset, length, null, bit_1.getBit)],\n            ...super.visit(vector_1.Vector.new(data.clone(type, offset, length, 0, buffers)))\n        };\n    }\n    visitNull() { return {}; }\n    visitBool({ values, offset, length }) {\n        return { 'DATA': [...bit_1.iterateBits(values, offset, length, null, bit_1.getBool)] };\n    }\n    visitInt(vector) {\n        return {\n            'DATA': vector.type.bitWidth < 64\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    visitFloat(vector) {\n        return { 'DATA': [...vector.values] };\n    }\n    visitUtf8(vector) {\n        return { 'DATA': [...vector], 'OFFSET': [...vector.valueOffsets] };\n    }\n    visitBinary(vector) {\n        return { 'DATA': [...binaryToString(vector)], OFFSET: [...vector.valueOffsets] };\n    }\n    visitFixedSizeBinary(vector) {\n        return { 'DATA': [...binaryToString(vector)] };\n    }\n    visitDate(vector) {\n        return {\n            'DATA': vector.type.unit === enum_2.DateUnit.DAY\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    visitTimestamp(vector) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 2)] };\n    }\n    visitTime(vector) {\n        return {\n            'DATA': vector.type.unit < enum_2.TimeUnit.MICROSECOND\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    visitDecimal(vector) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 4)] };\n    }\n    visitList(vector) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) => this.visit(new column_1.Column(f, [vector.getChildAt(i)])))\n        };\n    }\n    visitStruct(vector) {\n        return {\n            'children': vector.type.children.map((f, i) => this.visit(new column_1.Column(f, [vector.getChildAt(i)])))\n        };\n    }\n    visitUnion(vector) {\n        return {\n            'TYPE': [...vector.typeIds],\n            'OFFSET': vector.type.mode === enum_2.UnionMode.Dense ? [...vector.valueOffsets] : undefined,\n            'children': vector.type.children.map((f, i) => this.visit(new column_1.Column(f, [vector.getChildAt(i)])))\n        };\n    }\n    visitInterval(vector) {\n        return { 'DATA': [...vector.values] };\n    }\n    visitFixedSizeList(vector) {\n        return {\n            'children': vector.type.children.map((f, i) => this.visit(new column_1.Column(f, [vector.getChildAt(i)])))\n        };\n    }\n    visitMap(vector) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) => this.visit(new column_1.Column(f, [vector.getChildAt(i)])))\n        };\n    }\n}\nexports.JSONVectorAssembler = JSONVectorAssembler;\n/** @ignore */\nfunction* binaryToString(vector) {\n    for (const octets of vector) {\n        yield octets.reduce((str, byte) => {\n            return `${str}${('0' + (byte & 0xFF).toString(16)).slice(-2)}`;\n        }, '').toUpperCase();\n    }\n}\n/** @ignore */\nfunction* bigNumsToStrings(values, stride) {\n    for (let i = -1, n = values.length / stride; ++i < n;) {\n        yield `${bn_1.BN.new(values.subarray((i + 0) * stride, (i + 1) * stride), false)}`;\n    }\n}\n\n//# sourceMappingURL=jsonvectorassembler.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst interfaces_1 = require(\"../io/interfaces\");\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\nexports.BigInt = BigIntCtor;\nexports.BigIntAvailable = BigIntAvailable;\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\nexports.BigInt64Array = BigInt64ArrayCtor;\nexports.BigInt64ArrayAvailable = BigInt64ArrayAvailable;\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexports.BigUint64Array = BigUint64ArrayCtor;\nexports.BigUint64ArrayAvailable = BigUint64ArrayAvailable;\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexports.isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexports.isPromise = (x) => {\n    return exports.isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexports.isObservable = (x) => {\n    return exports.isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexports.isIterable = (x) => {\n    return exports.isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexports.isAsyncIterable = (x) => {\n    return exports.isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexports.isArrowJSON = (x) => {\n    return exports.isObject(x) && exports.isObject(x['schema']);\n};\n/** @ignore */\nexports.isArrayLike = (x) => {\n    return exports.isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexports.isIteratorResult = (x) => {\n    return exports.isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexports.isUnderlyingSink = (x) => {\n    return exports.isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexports.isFileHandle = (x) => {\n    return exports.isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexports.isFSReadStream = (x) => {\n    return exports.isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexports.isFetchResponse = (x) => {\n    return exports.isObject(x) && exports.isReadableDOMStream(x['body']);\n};\n/** @ignore */\nexports.isWritableDOMStream = (x) => {\n    return exports.isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof interfaces_1.ReadableInterop);\n};\n/** @ignore */\nexports.isReadableDOMStream = (x) => {\n    return exports.isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof interfaces_1.ReadableInterop);\n};\n/** @ignore */\nexports.isWritableNodeStream = (x) => {\n    return exports.isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof interfaces_1.ReadableInterop);\n};\n/** @ignore */\nexports.isReadableNodeStream = (x) => {\n    return exports.isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof interfaces_1.ReadableInterop);\n};\n\n//# sourceMappingURL=compat.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst binary_1 = require(\"../builder/binary\");\nconst bool_1 = require(\"../builder/bool\");\nconst date_1 = require(\"../builder/date\");\nconst decimal_1 = require(\"../builder/decimal\");\nconst dictionary_1 = require(\"../builder/dictionary\");\nconst fixedsizebinary_1 = require(\"../builder/fixedsizebinary\");\nconst fixedsizelist_1 = require(\"../builder/fixedsizelist\");\nconst float_1 = require(\"../builder/float\");\nconst interval_1 = require(\"../builder/interval\");\nconst int_1 = require(\"../builder/int\");\nconst list_1 = require(\"../builder/list\");\nconst map_1 = require(\"../builder/map\");\nconst null_1 = require(\"../builder/null\");\nconst struct_1 = require(\"../builder/struct\");\nconst timestamp_1 = require(\"../builder/timestamp\");\nconst time_1 = require(\"../builder/time\");\nconst union_1 = require(\"../builder/union\");\nconst utf8_1 = require(\"../builder/utf8\");\n/** @ignore */\nclass GetBuilderCtor extends visitor_1.Visitor {\n    visitNull() { return null_1.NullBuilder; }\n    visitBool() { return bool_1.BoolBuilder; }\n    visitInt() { return int_1.IntBuilder; }\n    visitInt8() { return int_1.Int8Builder; }\n    visitInt16() { return int_1.Int16Builder; }\n    visitInt32() { return int_1.Int32Builder; }\n    visitInt64() { return int_1.Int64Builder; }\n    visitUint8() { return int_1.Uint8Builder; }\n    visitUint16() { return int_1.Uint16Builder; }\n    visitUint32() { return int_1.Uint32Builder; }\n    visitUint64() { return int_1.Uint64Builder; }\n    visitFloat() { return float_1.FloatBuilder; }\n    visitFloat16() { return float_1.Float16Builder; }\n    visitFloat32() { return float_1.Float32Builder; }\n    visitFloat64() { return float_1.Float64Builder; }\n    visitUtf8() { return utf8_1.Utf8Builder; }\n    visitBinary() { return binary_1.BinaryBuilder; }\n    visitFixedSizeBinary() { return fixedsizebinary_1.FixedSizeBinaryBuilder; }\n    visitDate() { return date_1.DateBuilder; }\n    visitDateDay() { return date_1.DateDayBuilder; }\n    visitDateMillisecond() { return date_1.DateMillisecondBuilder; }\n    visitTimestamp() { return timestamp_1.TimestampBuilder; }\n    visitTimestampSecond() { return timestamp_1.TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return timestamp_1.TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return timestamp_1.TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return timestamp_1.TimestampNanosecondBuilder; }\n    visitTime() { return time_1.TimeBuilder; }\n    visitTimeSecond() { return time_1.TimeSecondBuilder; }\n    visitTimeMillisecond() { return time_1.TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return time_1.TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return time_1.TimeNanosecondBuilder; }\n    visitDecimal() { return decimal_1.DecimalBuilder; }\n    visitList() { return list_1.ListBuilder; }\n    visitStruct() { return struct_1.StructBuilder; }\n    visitUnion() { return union_1.UnionBuilder; }\n    visitDenseUnion() { return union_1.DenseUnionBuilder; }\n    visitSparseUnion() { return union_1.SparseUnionBuilder; }\n    visitDictionary() { return dictionary_1.DictionaryBuilder; }\n    visitInterval() { return interval_1.IntervalBuilder; }\n    visitIntervalDayTime() { return interval_1.IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return interval_1.IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return fixedsizelist_1.FixedSizeListBuilder; }\n    visitMap() { return map_1.MapBuilder; }\n}\nexports.GetBuilderCtor = GetBuilderCtor;\n/** @ignore */\nexports.instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flatbuffers_1 = require(\"flatbuffers\");\nvar Long = flatbuffers_1.flatbuffers.Long;\nconst Schema_ = require(\"../fb/Schema\");\nconst visitor_1 = require(\"../visitor\");\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nclass TypeAssembler extends visitor_1.Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\nexports.TypeAssembler = TypeAssembler;\n/** @ignore */\nexports.instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst run_1 = require(\"./run\");\nconst schema_1 = require(\"../schema\");\nconst builder_1 = require(\"../builder\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass FixedSizeListBuilder extends builder_1.Builder {\n    constructor() {\n        super(...arguments);\n        this._run = new run_1.Run();\n    }\n    setValue(index, value) {\n        super.setValue(index, this._run.bind(value));\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new type_1.FixedSizeList(this.type.listSize, new schema_1.Field(name, child.type, true));\n        return childIndex;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\nexports.FixedSizeListBuilder = FixedSizeListBuilder;\n\n//# sourceMappingURL=fixedsizelist.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"../schema\");\nconst buffer_1 = require(\"./buffer\");\nconst builder_1 = require(\"../builder\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass UnionBuilder extends builder_1.Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new buffer_1.DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    // @ts-ignore\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        super.setValue(index, value);\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new schema_1.Field(name, child.type)];\n        this.type = new type_1.Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\nexports.UnionBuilder = UnionBuilder;\n/** @ignore */\nclass SparseUnionBuilder extends UnionBuilder {\n}\nexports.SparseUnionBuilder = SparseUnionBuilder;\n/** @ignore */\nclass DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new buffer_1.DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        this._offsets.set(index, this.getChildAt(childIndex).length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\nexports.DenseUnionBuilder = DenseUnionBuilder;\n\n//# sourceMappingURL=union.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:class-name */\nconst File_ = require(\"../../fb/File\");\nconst flatbuffers_1 = require(\"flatbuffers\");\nvar Long = flatbuffers_1.flatbuffers.Long;\nvar Builder = flatbuffers_1.flatbuffers.Builder;\nvar ByteBuffer = flatbuffers_1.flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nconst schema_1 = require(\"../../schema\");\nconst enum_1 = require(\"../../enum\");\nconst buffer_1 = require(\"../../util/buffer\");\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = enum_1.MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(buffer_1.toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = schema_1.Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = schema_1.Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, enum_1.MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexports.Footer = Footer_;\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass FileBlock {\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\nexports.FileBlock = FileBlock;\n\n//# sourceMappingURL=file.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enum_1 = require(\"../enum\");\nconst visitor_1 = require(\"../visitor\");\nconst bit_1 = require(\"../util/bit\");\nconst get_1 = require(\"./get\");\n/** @ignore */\nclass IteratorVisitor extends visitor_1.Visitor {\n}\nexports.IteratorVisitor = IteratorVisitor;\n/** @ignore */\nfunction nullableIterator(vector) {\n    const getFn = get_1.instance.getVisitFn(vector);\n    return bit_1.iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator(vector);\n    }\n    const { type, typeId, length } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && ((typeId === enum_1.Type.Timestamp) ||\n        (typeId === enum_1.Type.Int && type.bitWidth !== 64) ||\n        (typeId === enum_1.Type.Time && type.bitWidth !== 64) ||\n        (typeId === enum_1.Type.Float && type.precision > 0 /* Precision.HALF */))) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(get_1.instance.getVisitFn(vector));\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexports.instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_1 = require(\"../util/bn\");\nconst visitor_1 = require(\"../visitor\");\nconst utf8_1 = require(\"../util/utf8\");\nconst math_1 = require(\"../util/math\");\nconst enum_1 = require(\"../enum\");\n/** @ignore */\nclass GetVisitor extends visitor_1.Visitor {\n}\nexports.GetVisitor = GetVisitor;\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => math_1.uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ stride, values, type }, index) => bn_1.BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? utf8_1.decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => (vector.type.bitWidth < 64\n    ? getNumeric(vector, index)\n    : getBigInts(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => (vector.type.precision !== enum_1.Precision.HALF\n    ? getNumeric(vector, index)\n    : getFloat16(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => (vector.type.unit === enum_1.DateUnit.DAY\n    ? getDateDay(vector, index)\n    : getDateMillisecond(vector, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n    switch (vector.type.unit) {\n        case enum_1.TimeUnit.SECOND: return getTimestampSecond(vector, index);\n        case enum_1.TimeUnit.MILLISECOND: return getTimestampMillisecond(vector, index);\n        case enum_1.TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector, index);\n        case enum_1.TimeUnit.NANOSECOND: return getTimestampNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => bn_1.BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => bn_1.BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n    switch (vector.type.unit) {\n        case enum_1.TimeUnit.SECOND: return getTimeSecond(vector, index);\n        case enum_1.TimeUnit.MILLISECOND: return getTimeMillisecond(vector, index);\n        case enum_1.TimeUnit.MICROSECOND: return getTimeMicrosecond(vector, index);\n        case enum_1.TimeUnit.NANOSECOND: return getTimeNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values }, index) => bn_1.BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n/** @ignore */\nconst getList = (vector, index) => {\n    const child = vector.getChildAt(0), { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n    return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n    return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n    return vector.type.mode === enum_1.UnionMode.Dense ?\n        getDenseUnion(vector, index) :\n        getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n    return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => (vector.type.unit === enum_1.IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(vector, index)\n    : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride);\n};\nGetVisitor.prototype.visitNull = getNull;\nGetVisitor.prototype.visitBool = getBool;\nGetVisitor.prototype.visitInt = getInt;\nGetVisitor.prototype.visitInt8 = getNumeric;\nGetVisitor.prototype.visitInt16 = getNumeric;\nGetVisitor.prototype.visitInt32 = getNumeric;\nGetVisitor.prototype.visitInt64 = getBigInts;\nGetVisitor.prototype.visitUint8 = getNumeric;\nGetVisitor.prototype.visitUint16 = getNumeric;\nGetVisitor.prototype.visitUint32 = getNumeric;\nGetVisitor.prototype.visitUint64 = getBigInts;\nGetVisitor.prototype.visitFloat = getFloat;\nGetVisitor.prototype.visitFloat16 = getFloat16;\nGetVisitor.prototype.visitFloat32 = getNumeric;\nGetVisitor.prototype.visitFloat64 = getNumeric;\nGetVisitor.prototype.visitUtf8 = getUtf8;\nGetVisitor.prototype.visitBinary = getBinary;\nGetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nGetVisitor.prototype.visitDate = getDate;\nGetVisitor.prototype.visitDateDay = getDateDay;\nGetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nGetVisitor.prototype.visitTimestamp = getTimestamp;\nGetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nGetVisitor.prototype.visitTime = getTime;\nGetVisitor.prototype.visitTimeSecond = getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nGetVisitor.prototype.visitDecimal = getDecimal;\nGetVisitor.prototype.visitList = getList;\nGetVisitor.prototype.visitStruct = getStruct;\nGetVisitor.prototype.visitUnion = getUnion;\nGetVisitor.prototype.visitDenseUnion = getDenseUnion;\nGetVisitor.prototype.visitSparseUnion = getSparseUnion;\nGetVisitor.prototype.visitDictionary = getDictionary;\nGetVisitor.prototype.visitInterval = getInterval;\nGetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nGetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nexports.instance = new GetVisitor();\n\n//# sourceMappingURL=get.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst binary_1 = require(\"../vector/binary\");\nconst bool_1 = require(\"../vector/bool\");\nconst date_1 = require(\"../vector/date\");\nconst decimal_1 = require(\"../vector/decimal\");\nconst dictionary_1 = require(\"../vector/dictionary\");\nconst fixedsizebinary_1 = require(\"../vector/fixedsizebinary\");\nconst fixedsizelist_1 = require(\"../vector/fixedsizelist\");\nconst float_1 = require(\"../vector/float\");\nconst interval_1 = require(\"../vector/interval\");\nconst int_1 = require(\"../vector/int\");\nconst list_1 = require(\"../vector/list\");\nconst map_1 = require(\"../vector/map\");\nconst null_1 = require(\"../vector/null\");\nconst struct_1 = require(\"../vector/struct\");\nconst timestamp_1 = require(\"../vector/timestamp\");\nconst time_1 = require(\"../vector/time\");\nconst union_1 = require(\"../vector/union\");\nconst utf8_1 = require(\"../vector/utf8\");\n/** @ignore */\nclass GetVectorConstructor extends visitor_1.Visitor {\n    visitNull() { return null_1.NullVector; }\n    visitBool() { return bool_1.BoolVector; }\n    visitInt() { return int_1.IntVector; }\n    visitInt8() { return int_1.Int8Vector; }\n    visitInt16() { return int_1.Int16Vector; }\n    visitInt32() { return int_1.Int32Vector; }\n    visitInt64() { return int_1.Int64Vector; }\n    visitUint8() { return int_1.Uint8Vector; }\n    visitUint16() { return int_1.Uint16Vector; }\n    visitUint32() { return int_1.Uint32Vector; }\n    visitUint64() { return int_1.Uint64Vector; }\n    visitFloat() { return float_1.FloatVector; }\n    visitFloat16() { return float_1.Float16Vector; }\n    visitFloat32() { return float_1.Float32Vector; }\n    visitFloat64() { return float_1.Float64Vector; }\n    visitUtf8() { return utf8_1.Utf8Vector; }\n    visitBinary() { return binary_1.BinaryVector; }\n    visitFixedSizeBinary() { return fixedsizebinary_1.FixedSizeBinaryVector; }\n    visitDate() { return date_1.DateVector; }\n    visitDateDay() { return date_1.DateDayVector; }\n    visitDateMillisecond() { return date_1.DateMillisecondVector; }\n    visitTimestamp() { return timestamp_1.TimestampVector; }\n    visitTimestampSecond() { return timestamp_1.TimestampSecondVector; }\n    visitTimestampMillisecond() { return timestamp_1.TimestampMillisecondVector; }\n    visitTimestampMicrosecond() { return timestamp_1.TimestampMicrosecondVector; }\n    visitTimestampNanosecond() { return timestamp_1.TimestampNanosecondVector; }\n    visitTime() { return time_1.TimeVector; }\n    visitTimeSecond() { return time_1.TimeSecondVector; }\n    visitTimeMillisecond() { return time_1.TimeMillisecondVector; }\n    visitTimeMicrosecond() { return time_1.TimeMicrosecondVector; }\n    visitTimeNanosecond() { return time_1.TimeNanosecondVector; }\n    visitDecimal() { return decimal_1.DecimalVector; }\n    visitList() { return list_1.ListVector; }\n    visitStruct() { return struct_1.StructVector; }\n    visitUnion() { return union_1.UnionVector; }\n    visitDenseUnion() { return union_1.DenseUnionVector; }\n    visitSparseUnion() { return union_1.SparseUnionVector; }\n    visitDictionary() { return dictionary_1.DictionaryVector; }\n    visitInterval() { return interval_1.IntervalVector; }\n    visitIntervalDayTime() { return interval_1.IntervalDayTimeVector; }\n    visitIntervalYearMonth() { return interval_1.IntervalYearMonthVector; }\n    visitFixedSizeList() { return fixedsizelist_1.FixedSizeListVector; }\n    visitMap() { return map_1.MapVector; }\n}\nexports.GetVectorConstructor = GetVectorConstructor;\n/** @ignore */\nexports.instance = new GetVectorConstructor();\n\n//# sourceMappingURL=vectorctor.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_1 = require(\"../type\");\nconst base_1 = require(\"./base\");\nconst index_1 = require(\"./index\");\n/** @ignore */\nclass BoolVector extends base_1.BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return index_1.vectorFromValuesWithType(() => new type_1.Bool(), input);\n    }\n}\nexports.BoolVector = BoolVector;\n\n//# sourceMappingURL=bool.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_1 = require(\"../util/bn\");\nconst buffer_1 = require(\"./buffer\");\nconst compat_1 = require(\"../util/compat\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass IntBuilder extends builder_1.FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\nexports.IntBuilder = IntBuilder;\n/** @ignore */\nclass Int8Builder extends IntBuilder {\n}\nexports.Int8Builder = Int8Builder;\n/** @ignore */\nclass Int16Builder extends IntBuilder {\n}\nexports.Int16Builder = Int16Builder;\n/** @ignore */\nclass Int32Builder extends IntBuilder {\n}\nexports.Int32Builder = Int32Builder;\n/** @ignore */\nclass Int64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new buffer_1.WideBufferBuilder(new Int32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nexports.Int64Builder = Int64Builder;\n/** @ignore */\nclass Uint8Builder extends IntBuilder {\n}\nexports.Uint8Builder = Uint8Builder;\n/** @ignore */\nclass Uint16Builder extends IntBuilder {\n}\nexports.Uint16Builder = Uint16Builder;\n/** @ignore */\nclass Uint32Builder extends IntBuilder {\n}\nexports.Uint32Builder = Uint32Builder;\n/** @ignore */\nclass Uint64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new buffer_1.WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nexports.Uint64Builder = Uint64Builder;\nconst toBigInt = ((memo) => (value) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bn_1.bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': compat_1.BigInt64Array });\n\n//# sourceMappingURL=int.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass IntervalVector extends base_1.BaseVector {\n}\nexports.IntervalVector = IntervalVector;\n/** @ignore */\nclass IntervalDayTimeVector extends IntervalVector {\n}\nexports.IntervalDayTimeVector = IntervalDayTimeVector;\n/** @ignore */\nclass IntervalYearMonthVector extends IntervalVector {\n}\nexports.IntervalYearMonthVector = IntervalYearMonthVector;\n\n//# sourceMappingURL=interval.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass TimeBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.TimeBuilder = TimeBuilder;\n/** @ignore */\nclass TimeSecondBuilder extends TimeBuilder {\n}\nexports.TimeSecondBuilder = TimeSecondBuilder;\n/** @ignore */\nclass TimeMillisecondBuilder extends TimeBuilder {\n}\nexports.TimeMillisecondBuilder = TimeMillisecondBuilder;\n/** @ignore */\nclass TimeMicrosecondBuilder extends TimeBuilder {\n}\nexports.TimeMicrosecondBuilder = TimeMicrosecondBuilder;\n/** @ignore */\nclass TimeNanosecondBuilder extends TimeBuilder {\n}\nexports.TimeNanosecondBuilder = TimeNanosecondBuilder;\n\n//# sourceMappingURL=time.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utf8_1 = require(\"../util/utf8\");\nconst binary_1 = require(\"./binary\");\nconst buffer_1 = require(\"./buffer\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass Utf8Builder extends builder_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_1.BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, utf8_1.encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nexports.Utf8Builder = Utf8Builder;\nUtf8Builder.prototype._flushPending = binary_1.BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"../schema\");\nconst builder_1 = require(\"../builder\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass StructBuilder extends builder_1.Builder {\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new type_1.Struct([...this.type.children, new schema_1.Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\nexports.StructBuilder = StructBuilder;\n\n//# sourceMappingURL=struct.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\nconst visitor_1 = require(\"../visitor\");\nconst utf8_1 = require(\"../util/utf8\");\nconst math_1 = require(\"../util/math\");\nconst buffer_1 = require(\"../util/buffer\");\nconst enum_1 = require(\"../enum\");\n/** @ignore */\nclass SetVisitor extends visitor_1.Visitor {\n}\nexports.SetVisitor = SetVisitor;\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric = ({ stride, values }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16 = ({ stride, values }, index, value) => { values[stride * index] = math_1.float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n    switch (typeof value) {\n        case 'bigint':\n            vector.values64[index] = value;\n            break;\n        case 'number':\n            vector.values[index * vector.stride] = value;\n            break;\n        default:\n            const val = value;\n            const { stride, ArrayType } = vector;\n            const long = buffer_1.toArrayBufferView(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, utf8_1.encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector, index, value)\n        : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n    vector.type.precision !== enum_1.Precision.HALF\n        ? setNumeric(vector, index, value)\n        : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n    vector.type.unit === enum_1.DateUnit.DAY\n        ? setDateDay(vector, index, value)\n        : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case enum_1.TimeUnit.SECOND: return setTimestampSecond(vector, index, value);\n        case enum_1.TimeUnit.MILLISECOND: return setTimestampMillisecond(vector, index, value);\n        case enum_1.TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector, index, value);\n        case enum_1.TimeUnit.NANOSECOND: return setTimestampNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setTimeSecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case enum_1.TimeUnit.SECOND: return setTimeSecond(vector, index, value);\n        case enum_1.TimeUnit.MILLISECOND: return setTimeMillisecond(vector, index, value);\n        case enum_1.TimeUnit.MICROSECOND: return setTimeMicrosecond(vector, index, value);\n        case enum_1.TimeUnit.NANOSECOND: return setTimeNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setDecimal = ({ values }, index, value) => { values.set(value.subarray(0, 4), 4 * index); };\n/** @ignore */\nconst setList = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n    const setValue = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof vector_1.Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n    vector.type.mode === enum_1.UnionMode.Dense ?\n        setDenseUnion(vector, index, value) :\n        setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n    (vector.type.unit === enum_1.IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector, index, value)\n        : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\nSetVisitor.prototype.visitBool = setBool;\nSetVisitor.prototype.visitInt = setInt;\nSetVisitor.prototype.visitInt8 = setNumeric;\nSetVisitor.prototype.visitInt16 = setNumeric;\nSetVisitor.prototype.visitInt32 = setNumeric;\nSetVisitor.prototype.visitInt64 = setNumericX2;\nSetVisitor.prototype.visitUint8 = setNumeric;\nSetVisitor.prototype.visitUint16 = setNumeric;\nSetVisitor.prototype.visitUint32 = setNumeric;\nSetVisitor.prototype.visitUint64 = setNumericX2;\nSetVisitor.prototype.visitFloat = setFloat;\nSetVisitor.prototype.visitFloat16 = setFloat16;\nSetVisitor.prototype.visitFloat32 = setNumeric;\nSetVisitor.prototype.visitFloat64 = setNumeric;\nSetVisitor.prototype.visitUtf8 = setUtf8;\nSetVisitor.prototype.visitBinary = setBinary;\nSetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nSetVisitor.prototype.visitDate = setDate;\nSetVisitor.prototype.visitDateDay = setDateDay;\nSetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nSetVisitor.prototype.visitTimestamp = setTimestamp;\nSetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nSetVisitor.prototype.visitTime = setTime;\nSetVisitor.prototype.visitTimeSecond = setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nSetVisitor.prototype.visitDecimal = setDecimal;\nSetVisitor.prototype.visitList = setList;\nSetVisitor.prototype.visitStruct = setStruct;\nSetVisitor.prototype.visitUnion = setUnion;\nSetVisitor.prototype.visitDenseUnion = setDenseUnion;\nSetVisitor.prototype.visitSparseUnion = setSparseUnion;\nSetVisitor.prototype.visitDictionary = setDictionary;\nSetVisitor.prototype.visitInterval = setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nSetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nexports.instance = new SetVisitor();\n\n//# sourceMappingURL=set.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"../util/buffer\");\nconst compat_1 = require(\"../util/compat\");\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : buffer_1.memcpy(new arr.constructor(len), arr, 0));\n/** @ignore */\nclass BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n    get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = buffer_1.memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\nexports.BufferBuilder = BufferBuilder;\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nclass DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\nexports.DataBufferBuilder = DataBufferBuilder;\n/** @ignore */\nclass BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\nexports.BitmapBufferBuilder = BitmapBufferBuilder;\n/** @ignore */\nclass OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\nexports.OffsetsBufferBuilder = OffsetsBufferBuilder;\n/** @ignore */\nclass WideBufferBuilder extends BufferBuilder {\n    get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = (this.buffer instanceof Int32Array ? compat_1.BigInt64Array : compat_1.BigUint64Array));\n    }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint':\n                this.buffer64[index] = value;\n                break;\n            case 'number':\n                this.buffer[index * this.stride] = value;\n                break;\n            default: this.buffer.set(value, index * this.stride);\n        }\n        return this;\n    }\n    _resize(newLength) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (compat_1.BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\nexports.WideBufferBuilder = WideBufferBuilder;\n\n//# sourceMappingURL=buffer.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass UnionVector extends base_1.BaseVector {\n    get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\nexports.UnionVector = UnionVector;\n/** @ignore */\nclass DenseUnionVector extends UnionVector {\n    get valueOffsets() { return this.data.valueOffsets; }\n}\nexports.DenseUnionVector = DenseUnionVector;\n/** @ignore */\nclass SparseUnionVector extends UnionVector {\n}\nexports.SparseUnionVector = SparseUnionVector;\n\n//# sourceMappingURL=union.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"./data\");\nconst vector_1 = require(\"./vector\");\nconst enum_1 = require(\"./enum\");\nconst type_1 = require(\"./type\");\nclass Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\nexports.Visitor = Visitor;\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    let fn = null;\n    let dtype = enum_1.Type.NONE;\n    // tslint:disable\n    if (node instanceof data_1.Data) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof vector_1.Vector) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof type_1.DataType) {\n        dtype = inferDType(node);\n    }\n    else if (typeof (dtype = node) !== 'number') {\n        dtype = enum_1.Type[node];\n    }\n    switch (dtype) {\n        case enum_1.Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case enum_1.Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case enum_1.Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case enum_1.Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case enum_1.Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case enum_1.Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case enum_1.Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case enum_1.Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case enum_1.Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case enum_1.Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case enum_1.Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case enum_1.Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case enum_1.Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case enum_1.Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case enum_1.Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case enum_1.Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case enum_1.Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case enum_1.Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case enum_1.Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case enum_1.Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case enum_1.Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case enum_1.Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case enum_1.Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case enum_1.Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case enum_1.Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case enum_1.Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case enum_1.Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case enum_1.Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case enum_1.Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case enum_1.Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case enum_1.Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case enum_1.Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case enum_1.Type.List:\n            fn = visitor.visitList;\n            break;\n        case enum_1.Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case enum_1.Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case enum_1.Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case enum_1.Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case enum_1.Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case enum_1.Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case enum_1.Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case enum_1.Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case enum_1.Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case enum_1.Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${enum_1.Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case enum_1.Type.Null: return enum_1.Type.Null;\n        case enum_1.Type.Int:\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? enum_1.Type.Int8 : enum_1.Type.Uint8;\n                case 16: return isSigned ? enum_1.Type.Int16 : enum_1.Type.Uint16;\n                case 32: return isSigned ? enum_1.Type.Int32 : enum_1.Type.Uint32;\n                case 64: return isSigned ? enum_1.Type.Int64 : enum_1.Type.Uint64;\n            }\n            return enum_1.Type.Int;\n        case enum_1.Type.Float:\n            switch (type.precision) {\n                case enum_1.Precision.HALF: return enum_1.Type.Float16;\n                case enum_1.Precision.SINGLE: return enum_1.Type.Float32;\n                case enum_1.Precision.DOUBLE: return enum_1.Type.Float64;\n            }\n            return enum_1.Type.Float;\n        case enum_1.Type.Binary: return enum_1.Type.Binary;\n        case enum_1.Type.Utf8: return enum_1.Type.Utf8;\n        case enum_1.Type.Bool: return enum_1.Type.Bool;\n        case enum_1.Type.Decimal: return enum_1.Type.Decimal;\n        case enum_1.Type.Time:\n            switch (type.unit) {\n                case enum_1.TimeUnit.SECOND: return enum_1.Type.TimeSecond;\n                case enum_1.TimeUnit.MILLISECOND: return enum_1.Type.TimeMillisecond;\n                case enum_1.TimeUnit.MICROSECOND: return enum_1.Type.TimeMicrosecond;\n                case enum_1.TimeUnit.NANOSECOND: return enum_1.Type.TimeNanosecond;\n            }\n            return enum_1.Type.Time;\n        case enum_1.Type.Timestamp:\n            switch (type.unit) {\n                case enum_1.TimeUnit.SECOND: return enum_1.Type.TimestampSecond;\n                case enum_1.TimeUnit.MILLISECOND: return enum_1.Type.TimestampMillisecond;\n                case enum_1.TimeUnit.MICROSECOND: return enum_1.Type.TimestampMicrosecond;\n                case enum_1.TimeUnit.NANOSECOND: return enum_1.Type.TimestampNanosecond;\n            }\n            return enum_1.Type.Timestamp;\n        case enum_1.Type.Date:\n            switch (type.unit) {\n                case enum_1.DateUnit.DAY: return enum_1.Type.DateDay;\n                case enum_1.DateUnit.MILLISECOND: return enum_1.Type.DateMillisecond;\n            }\n            return enum_1.Type.Date;\n        case enum_1.Type.Interval:\n            switch (type.unit) {\n                case enum_1.IntervalUnit.DAY_TIME: return enum_1.Type.IntervalDayTime;\n                case enum_1.IntervalUnit.YEAR_MONTH: return enum_1.Type.IntervalYearMonth;\n            }\n            return enum_1.Type.Interval;\n        case enum_1.Type.Map: return enum_1.Type.Map;\n        case enum_1.Type.List: return enum_1.Type.List;\n        case enum_1.Type.Struct: return enum_1.Type.Struct;\n        case enum_1.Type.Union:\n            switch (type.mode) {\n                case enum_1.UnionMode.Dense: return enum_1.Type.DenseUnion;\n                case enum_1.UnionMode.Sparse: return enum_1.Type.SparseUnion;\n            }\n            return enum_1.Type.Union;\n        case enum_1.Type.FixedSizeBinary: return enum_1.Type.FixedSizeBinary;\n        case enum_1.Type.FixedSizeList: return enum_1.Type.FixedSizeList;\n        case enum_1.Type.Dictionary: return enum_1.Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${enum_1.Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pretty_1 = require(\"../util/pretty\");\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass Row {\n    constructor(parent, numKeys) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n    entries() { return this[Symbol.iterator](); }\n    has(key) { return this.get(key) !== undefined; }\n    get(key) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n            else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n    set(key, val) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n    clear() { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n    delete(_) { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n    *[Symbol.iterator]() {\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v, k, m) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n    toArray() { return [...this.values()]; }\n    toJSON() {\n        const obj = {};\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n    inspect() { return this.toString(); }\n    [kCustomInspect]() { return this.toString(); }\n    toString() {\n        const str = [];\n        this.forEach((val, key) => {\n            key = pretty_1.valueToString(key);\n            val = pretty_1.valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n}\nRow[Symbol.toStringTag] = ((proto) => {\n    Object.defineProperties(proto, {\n        'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n        [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n        [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n    });\n    return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\nclass MapRow extends Row {\n    constructor(slice) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    keys() {\n        return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n    values() {\n        return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n    getKey(idx) {\n        return this[kParent].getChildAt(0).get(idx);\n    }\n    getIndex(key) {\n        return this[kParent].getChildAt(0).indexOf(key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(1).get(index);\n    }\n    setValue(index, value) {\n        this[kParent].getChildAt(1).set(index, value);\n    }\n}\nexports.MapRow = MapRow;\nclass StructRow extends Row {\n    constructor(parent) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name;\n        }\n    }\n    *values() {\n        for (const field of this[kParent].type.children) {\n            yield this[field.name];\n        }\n    }\n    getKey(idx) {\n        return this[kParent].type.children[idx].name;\n    }\n    getIndex(key) {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n    setValue(index, value) {\n        return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n}\nexports.StructRow = StructRow;\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null, set: null };\n    return (row) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key) => function () { return this.get(key); };\n        const setter = (key) => function (val) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row, key) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row, key, receiver) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row, key, val, receiver) {\n            switch (key) {\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return (row) => new Proxy(row, RowProxyHandler);\n})();\n\n//# sourceMappingURL=row.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass IntervalBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.IntervalBuilder = IntervalBuilder;\n/** @ignore */\nclass IntervalDayTimeBuilder extends IntervalBuilder {\n}\nexports.IntervalDayTimeBuilder = IntervalDayTimeBuilder;\n/** @ignore */\nclass IntervalYearMonthBuilder extends IntervalBuilder {\n}\nexports.IntervalYearMonthBuilder = IntervalYearMonthBuilder;\n\n//# sourceMappingURL=interval.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bit_1 = require(\"./util/bit\");\nconst bit_2 = require(\"./util/bit\");\nconst enum_1 = require(\"./enum\");\nconst type_1 = require(\"./type\");\nconst buffer_1 = require(\"./util/buffer\");\n/** @ignore */ exports.kUnknownNullCount = -1;\n/** @ignore */\nclass Data {\n    constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data);\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = type_1.strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= exports.kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - bit_2.popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    clone(type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, childData = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === enum_1.Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(bit_1.truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[enum_1.BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[enum_1.BufferType.TYPE]) && (buffers[enum_1.BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[enum_1.BufferType.OFFSET]) && (buffers[enum_1.BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[enum_1.BufferType.DATA]) && (buffers[enum_1.BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(childData, offset, length) {\n        return childData.map((child) => child.slice(offset, length));\n    }\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n        if (buffers instanceof Data) {\n            buffers = buffers.buffers;\n        }\n        else if (!buffers) {\n            buffers = [];\n        }\n        switch (type.typeId) {\n            case enum_1.Type.Null: return Data.Null(type, offset, length);\n            case enum_1.Type.Int: return Data.Int(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Dictionary: return Data.Dictionary(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || [], dictionary);\n            case enum_1.Type.Float: return Data.Float(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Bool: return Data.Bool(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Decimal: return Data.Decimal(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Date: return Data.Date(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Time: return Data.Time(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Timestamp: return Data.Timestamp(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Interval: return Data.Interval(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.FixedSizeBinary: return Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Binary: return Data.Binary(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.OFFSET] || [], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.Utf8: return Data.Utf8(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.OFFSET] || [], buffers[enum_1.BufferType.DATA] || []);\n            case enum_1.Type.List: return Data.List(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.OFFSET] || [], (childData || [])[0]);\n            case enum_1.Type.FixedSizeList: return Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], (childData || [])[0]);\n            case enum_1.Type.Struct: return Data.Struct(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], childData || []);\n            case enum_1.Type.Map: return Data.Map(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.OFFSET] || [], (childData || [])[0]);\n            case enum_1.Type.Union: return Data.Union(type, offset, length, nullCount || 0, buffers[enum_1.BufferType.VALIDITY], buffers[enum_1.BufferType.TYPE] || [], buffers[enum_1.BufferType.OFFSET] || childData, childData);\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n    /** @nocollapse */\n    static Null(type, offset, length) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    static Int(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.indices.ArrayType, data), buffer_1.toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    static Float(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Bool(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Date(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Time(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Interval(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, buffer_1.toArrayBufferView(type.ArrayType, data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [buffer_1.toInt32Array(valueOffsets), buffer_1.toUint8Array(data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [buffer_1.toInt32Array(valueOffsets), buffer_1.toUint8Array(data), buffer_1.toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [buffer_1.toInt32Array(valueOffsets), undefined, buffer_1.toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, buffer_1.toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Struct(type, offset, length, nullCount, nullBitmap, children) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, buffer_1.toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [buffer_1.toInt32Array(valueOffsets), undefined, buffer_1.toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n        const buffers = [\n            undefined, undefined,\n            buffer_1.toUint8Array(nullBitmap),\n            buffer_1.toArrayBufferView(type.ArrayType, typeIds)\n        ];\n        if (type.mode === enum_1.UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n        }\n        buffers[enum_1.BufferType.OFFSET] = buffer_1.toInt32Array(valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\nexports.Data = Data;\nData.prototype.childData = Object.freeze([]);\n\n//# sourceMappingURL=data.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass NullVector extends base_1.BaseVector {\n}\nexports.NullVector = NullVector;\n\n//# sourceMappingURL=null.js.map\n","import { DataFrame, FieldType, Field, Vector } from '../types';\nimport {\n  Table,\n  ArrowType,\n  Builder,\n  Vector as ArrowVector,\n  Float64,\n  DataType,\n  Utf8,\n  TimestampMillisecond,\n  Bool,\n  Column,\n} from 'apache-arrow';\n\nexport interface ArrowDataFrame extends DataFrame {\n  table: Table;\n}\n\nexport function base64StringToArrowTable(text: string): Table {\n  const b64 = atob(text);\n  const arr = Uint8Array.from(b64, c => {\n    return c.charCodeAt(0);\n  });\n  return Table.from(arr);\n}\n\nfunction valueOrUndefined(val?: string) {\n  return val ? val : undefined;\n}\n\nfunction parseOptionalMeta(str?: string): any {\n  if (str && str.length && str !== '{}') {\n    try {\n      return JSON.parse(str);\n    } catch (err) {\n      console.warn('Error reading JSON from arrow metadata: ', str);\n    }\n  }\n  return undefined;\n}\n\nexport function arrowTableToDataFrame(table: Table): ArrowDataFrame {\n  const fields: Field[] = [];\n\n  for (let i = 0; i < table.numCols; i++) {\n    const col = table.getColumnAt(i);\n    if (col) {\n      const schema = table.schema.fields[i];\n      let type = FieldType.other;\n      const values: Vector<any> = col;\n      switch ((schema.typeId as unknown) as ArrowType) {\n        case ArrowType.Decimal:\n        case ArrowType.Int:\n        case ArrowType.FloatingPoint: {\n          type = FieldType.number;\n          break;\n        }\n        case ArrowType.Bool: {\n          type = FieldType.boolean;\n          break;\n        }\n        case ArrowType.Timestamp: {\n          type = FieldType.time;\n          break;\n        }\n        case ArrowType.Utf8: {\n          type = FieldType.string;\n          break;\n        }\n        default:\n          console.log('UNKNOWN Type:', schema);\n      }\n\n      fields.push({\n        name: col.name,\n        type,\n        values,\n        config: parseOptionalMeta(col.metadata.get('config')) || {},\n        labels: parseOptionalMeta(col.metadata.get('labels')),\n      });\n    }\n  }\n  const meta = table.schema.metadata;\n  return {\n    fields,\n    length: table.length,\n    refId: valueOrUndefined(meta.get('refId')),\n    name: valueOrUndefined(meta.get('name')),\n    meta: parseOptionalMeta(meta.get('meta')),\n    table,\n  };\n}\n\nfunction toArrowVector(field: Field): ArrowVector {\n  // OR: Float64Vector.from([1, 2, 3]));\n\n  let type: DataType;\n  if (field.type === FieldType.number) {\n    type = new Float64();\n  } else if (field.type === FieldType.time) {\n    type = new TimestampMillisecond();\n  } else if (field.type === FieldType.boolean) {\n    type = new Bool();\n  } else if (field.type === FieldType.string) {\n    type = new Utf8();\n  } else {\n    type = new Utf8();\n  }\n  const builder = Builder.new({ type, nullValues: [null] });\n  field.values.toArray().forEach(builder.append.bind(builder));\n  return builder.finish().toVector();\n}\n\nexport function grafanaDataFrameToArrowTable(data: DataFrame): Table {\n  const table = Table.new(\n    data.fields.map(field => {\n      const column = Column.new(field.name, toArrowVector(field));\n      if (field.labels) {\n        column.metadata.set('labels', JSON.stringify(field.labels));\n      }\n      if (field.config) {\n        column.metadata.set('config', JSON.stringify(field.config));\n      }\n      return column;\n    })\n  );\n  const metadata = table.schema.metadata;\n  if (data.name) {\n    metadata.set('name', data.name);\n  }\n  if (data.refId) {\n    metadata.set('refId', data.refId);\n  }\n  if (data.meta) {\n    metadata.set('meta', JSON.stringify(data.meta));\n  }\n  return table;\n}\n\nexport function resultsToDataFrames(rsp: any): DataFrame[] {\n  const frames: DataFrame[] = [];\n  for (const res of Object.values(rsp.results)) {\n    for (const b of (res as any).dataframes) {\n      const t = base64StringToArrowTable(b as string);\n      frames.push(arrowTableToDataFrame(t));\n    }\n  }\n  return frames;\n}\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst type_1 = require(\"../type\");\nconst index_1 = require(\"./index\");\n/** @ignore */\nclass Utf8Vector extends base_1.BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return index_1.vectorFromValuesWithType(() => new type_1.Utf8(), input);\n    }\n    asBinary() {\n        return vector_1.Vector.new(this.data.clone(new type_1.Binary()));\n    }\n}\nexports.Utf8Vector = Utf8Vector;\n\n//# sourceMappingURL=utf8.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass ListVector extends base_1.BaseVector {\n}\nexports.ListVector = ListVector;\n\n//# sourceMappingURL=list.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../table\");\nconst int_1 = require(\"../vector/int\");\nconst schema_1 = require(\"../schema\");\nconst predicate_1 = require(\"./predicate\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst type_1 = require(\"../type\");\ntable_1.Table.prototype.countBy = function (name) { return new DataFrame(this.chunks).countBy(name); };\ntable_1.Table.prototype.scan = function (next, bind) { return new DataFrame(this.chunks).scan(next, bind); };\ntable_1.Table.prototype.scanReverse = function (next, bind) { return new DataFrame(this.chunks).scanReverse(next, bind); };\ntable_1.Table.prototype.filter = function (predicate) { return new DataFrame(this.chunks).filter(predicate); };\nclass DataFrame extends table_1.Table {\n    filter(predicate) {\n        return new FilteredDataFrame(this.chunks, predicate);\n    }\n    scan(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    countBy(name) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new predicate_1.Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!type_1.DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, int_1.IntVector.from(counts));\n    }\n}\nexports.DataFrame = DataFrame;\n/** @ignore */\nclass CountByResult extends table_1.Table {\n    constructor(values, counts) {\n        const schema = new schema_1.Schema([\n            new schema_1.Field('values', values.type),\n            new schema_1.Field('counts', counts.type)\n        ]);\n        super(new recordbatch_1.RecordBatch(schema, counts.length, [values, counts]));\n    }\n    toJSON() {\n        const values = this.getColumnAt(0);\n        const counts = this.getColumnAt(1);\n        const result = {};\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\nexports.CountByResult = CountByResult;\n/** @ignore */\nclass FilteredDataFrame extends DataFrame {\n    constructor(batches, predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    scan(next, bind) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            if (bind) {\n                bind(batch);\n            }\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            if (bind) {\n                bind(batch);\n            }\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    count() {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    ++sum;\n                }\n            }\n        }\n        return sum;\n    }\n    *[Symbol.iterator]() {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    yield batch.get(index);\n                }\n            }\n        }\n    }\n    filter(predicate) {\n        return new FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n    }\n    countBy(name) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new predicate_1.Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!type_1.DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, int_1.IntVector.from(counts));\n    }\n}\nexports.FilteredDataFrame = FilteredDataFrame;\n\n//# sourceMappingURL=dataframe.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../builder/index\");\n/** @ignore */\nfunction builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\nexports.builderThroughDOMStream = builderThroughDOMStream;\n/** @ignore */\nclass BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count', ...builderOptions } = options;\n        this._controller = null;\n        this._builder = index_1.Builder.new(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller === null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\nexports.BuilderTransform = BuilderTransform;\n/** @ignore */ const chunkLength = (chunk) => chunk.length;\n/** @ignore */ const chunkByteLength = (chunk) => chunk.byteLength;\n\n//# sourceMappingURL=builder.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass DateBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.DateBuilder = DateBuilder;\n/** @ignore */\nclass DateDayBuilder extends DateBuilder {\n}\nexports.DateDayBuilder = DateDayBuilder;\n/** @ignore */\nclass DateMillisecondBuilder extends DateBuilder {\n}\nexports.DateMillisecondBuilder = DateMillisecondBuilder;\n\n//# sourceMappingURL=date.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typecomparator_1 = require(\"./visitor/typecomparator\");\nconst enum_1 = require(\"./enum\");\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nclass DataType {\n    /** @nocollapse */ static isNull(x) { return x && x.typeId === enum_1.Type.Null; }\n    /** @nocollapse */ static isInt(x) { return x && x.typeId === enum_1.Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return x && x.typeId === enum_1.Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return x && x.typeId === enum_1.Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return x && x.typeId === enum_1.Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return x && x.typeId === enum_1.Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return x && x.typeId === enum_1.Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return x && x.typeId === enum_1.Type.Date; }\n    /** @nocollapse */ static isTime(x) { return x && x.typeId === enum_1.Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return x && x.typeId === enum_1.Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return x && x.typeId === enum_1.Type.Interval; }\n    /** @nocollapse */ static isList(x) { return x && x.typeId === enum_1.Type.List; }\n    /** @nocollapse */ static isStruct(x) { return x && x.typeId === enum_1.Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return x && x.typeId === enum_1.Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return x && x.typeId === enum_1.Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return x && x.typeId === enum_1.Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return x && x.typeId === enum_1.Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return x && x.typeId === enum_1.Type.Dictionary; }\n    get typeId() { return enum_1.Type.NONE; }\n    compareTo(other) {\n        return typecomparator_1.instance.visit(this, other);\n    }\n}\nDataType[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\nexports.DataType = DataType;\n/** @ignore */\nclass Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return enum_1.Type.Null; }\n}\nNull[Symbol.toStringTag] = ((proto) => {\n    return proto[Symbol.toStringTag] = 'Null';\n})(Null.prototype);\nexports.Null = Null;\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return enum_1.Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nInt_[Symbol.toStringTag] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexports.Int = Int_;\n/** @ignore */\nclass Int8 extends Int_ {\n    constructor() { super(true, 8); }\n}\nexports.Int8 = Int8;\n/** @ignore */\nclass Int16 extends Int_ {\n    constructor() { super(true, 16); }\n}\nexports.Int16 = Int16;\n/** @ignore */\nclass Int32 extends Int_ {\n    constructor() { super(true, 32); }\n}\nexports.Int32 = Int32;\n/** @ignore */\nclass Int64 extends Int_ {\n    constructor() { super(true, 64); }\n}\nexports.Int64 = Int64;\n/** @ignore */\nclass Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n}\nexports.Uint8 = Uint8;\n/** @ignore */\nclass Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n}\nexports.Uint16 = Uint16;\n/** @ignore */\nclass Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n}\nexports.Uint32 = Uint32;\n/** @ignore */\nclass Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n}\nexports.Uint64 = Uint64;\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n/** @ignore */\nclass Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return enum_1.Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case enum_1.Precision.HALF: return Uint16Array;\n            case enum_1.Precision.SINGLE: return Float32Array;\n            case enum_1.Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nFloat[Symbol.toStringTag] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\nexports.Float = Float;\n/** @ignore */\nclass Float16 extends Float {\n    constructor() { super(enum_1.Precision.HALF); }\n}\nexports.Float16 = Float16;\n/** @ignore */\nclass Float32 extends Float {\n    constructor() { super(enum_1.Precision.SINGLE); }\n}\nexports.Float32 = Float32;\n/** @ignore */\nclass Float64 extends Float {\n    constructor() { super(enum_1.Precision.DOUBLE); }\n}\nexports.Float64 = Float64;\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nclass Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_1.Type.Binary; }\n    toString() { return `Binary`; }\n}\nBinary[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\nexports.Binary = Binary;\n/** @ignore */\nclass Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_1.Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nUtf8[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\nexports.Utf8 = Utf8;\n/** @ignore */\nclass Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_1.Type.Bool; }\n    toString() { return `Bool`; }\n}\nBool[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\nexports.Bool = Bool;\n/** @ignore */\nclass Decimal extends DataType {\n    constructor(scale, precision) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n    }\n    get typeId() { return enum_1.Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nDecimal[Symbol.toStringTag] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\nexports.Decimal = Decimal;\n/** @ignore */\nclass Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return enum_1.Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${enum_1.DateUnit[this.unit]}>`; }\n}\nDate_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\nexports.Date_ = Date_;\n/** @ignore */\nclass DateDay extends Date_ {\n    constructor() { super(enum_1.DateUnit.DAY); }\n}\nexports.DateDay = DateDay;\n/** @ignore */\nclass DateMillisecond extends Date_ {\n    constructor() { super(enum_1.DateUnit.MILLISECOND); }\n}\nexports.DateMillisecond = DateMillisecond;\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return enum_1.Type.Time; }\n    toString() { return `Time${this.bitWidth}<${enum_1.TimeUnit[this.unit]}>`; }\n}\nTime_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexports.Time = Time_;\n/** @ignore */\nclass TimeSecond extends Time_ {\n    constructor() { super(enum_1.TimeUnit.SECOND, 32); }\n}\nexports.TimeSecond = TimeSecond;\n/** @ignore */\nclass TimeMillisecond extends Time_ {\n    constructor() { super(enum_1.TimeUnit.MILLISECOND, 32); }\n}\nexports.TimeMillisecond = TimeMillisecond;\n/** @ignore */\nclass TimeMicrosecond extends Time_ {\n    constructor() { super(enum_1.TimeUnit.MICROSECOND, 64); }\n}\nexports.TimeMicrosecond = TimeMicrosecond;\n/** @ignore */\nclass TimeNanosecond extends Time_ {\n    constructor() { super(enum_1.TimeUnit.NANOSECOND, 64); }\n}\nexports.TimeNanosecond = TimeNanosecond;\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return enum_1.Type.Timestamp; }\n    toString() { return `Timestamp<${enum_1.TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nTimestamp_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexports.Timestamp = Timestamp_;\n/** @ignore */\nclass TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(enum_1.TimeUnit.SECOND, timezone); }\n}\nexports.TimestampSecond = TimestampSecond;\n/** @ignore */\nclass TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(enum_1.TimeUnit.MILLISECOND, timezone); }\n}\nexports.TimestampMillisecond = TimestampMillisecond;\n/** @ignore */\nclass TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(enum_1.TimeUnit.MICROSECOND, timezone); }\n}\nexports.TimestampMicrosecond = TimestampMicrosecond;\n/** @ignore */\nclass TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(enum_1.TimeUnit.NANOSECOND, timezone); }\n}\nexports.TimestampNanosecond = TimestampNanosecond;\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return enum_1.Type.Interval; }\n    toString() { return `Interval<${enum_1.IntervalUnit[this.unit]}>`; }\n}\nInterval_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexports.Interval = Interval_;\n/** @ignore */\nclass IntervalDayTime extends Interval_ {\n    constructor() { super(enum_1.IntervalUnit.DAY_TIME); }\n}\nexports.IntervalDayTime = IntervalDayTime;\n/** @ignore */\nclass IntervalYearMonth extends Interval_ {\n    constructor() { super(enum_1.IntervalUnit.YEAR_MONTH); }\n}\nexports.IntervalYearMonth = IntervalYearMonth;\n/** @ignore */\nclass List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return enum_1.Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\nexports.List = List;\n/** @ignore */\nclass Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n        this.children = children;\n    }\n    get typeId() { return enum_1.Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nStruct[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\nexports.Struct = Struct;\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null));\n    }\n    get typeId() { return enum_1.Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nUnion_[Symbol.toStringTag] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexports.Union = Union_;\n/** @ignore */\nclass DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(enum_1.UnionMode.Dense, typeIds, children);\n    }\n}\nexports.DenseUnion = DenseUnion;\n/** @ignore */\nclass SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(enum_1.UnionMode.Sparse, typeIds, children);\n    }\n}\nexports.SparseUnion = SparseUnion;\n/** @ignore */\nclass FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return enum_1.Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nFixedSizeBinary[Symbol.toStringTag] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\nexports.FixedSizeBinary = FixedSizeBinary;\n/** @ignore */\nclass FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return enum_1.Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nFixedSizeList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\nexports.FixedSizeList = FixedSizeList;\n/** @ignore */\nclass Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return enum_1.Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nMap_[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\nexports.Map_ = Map_;\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nclass Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    get typeId() { return enum_1.Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nDictionary[Symbol.toStringTag] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\nexports.Dictionary = Dictionary;\n/** @ignore */\nfunction strideForType(type) {\n    let t = type;\n    switch (type.typeId) {\n        case enum_1.Type.Decimal: return 4;\n        case enum_1.Type.Timestamp: return 2;\n        case enum_1.Type.Date: return 1 + t.unit;\n        case enum_1.Type.Interval: return 1 + t.unit;\n        case enum_1.Type.Int: return 1 + +(t.bitWidth > 32);\n        case enum_1.Type.Time: return 1 + +(t.bitWidth > 32);\n        case enum_1.Type.FixedSizeList: return t.listSize;\n        case enum_1.Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\nexports.strideForType = strideForType;\n\n//# sourceMappingURL=type.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\nconst row_1 = require(\"../vector/row\");\nconst buffer_1 = require(\"../util/buffer\");\nconst compat_1 = require(\"./compat\");\n/** @ignore */\nfunction clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\nexports.clampIndex = clampIndex;\n/** @ignore */\nlet tmp;\n/** @ignore */\nfunction clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nexports.clampRange = clampRange;\nconst big0 = compat_1.BigIntAvailable ? compat_1.BigInt(0) : 0;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nfunction createElementComparator(search) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value) => value === search\n            : (value) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? buffer_1.compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return creatMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof vector_1.Vector) {\n        return createVectorComparator(search);\n    }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\nexports.createElementComparator = createElementComparator;\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparitors = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparitors[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparitors);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n    let i = -1;\n    const comparitors = [];\n    lhs.forEach((v) => comparitors[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparitors);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparitors = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparitors[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparitors);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) {\n        return () => false;\n    }\n    const comparitors = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparitors[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparitors, keys);\n}\nfunction createSubElementsComparator(comparitors, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparitors, rhs);\n            case Map:\n            case row_1.MapRow:\n            case row_1.StructRow:\n                return compareObject(comparitors, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparitors, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof vector_1.Vector ? compareVector(comparitors, rhs) : false;\n    };\n}\nfunction compareArray(comparitors, arr) {\n    const n = comparitors.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparitors[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparitors, vec) {\n    const n = comparitors.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparitors[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparitors, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    let n = comparitors.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparitors[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"../../schema\");\nconst type_1 = require(\"../../type\");\nconst message_1 = require(\"./message\");\nconst enum_1 = require(\"../../enum\");\n/** @ignore */\nfunction schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new schema_1.Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\nexports.schemaFromJSON = schemaFromJSON;\n/** @ignore */\nfunction recordBatchFromJSON(b) {\n    return new message_1.RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\nexports.recordBatchFromJSON = recordBatchFromJSON;\n/** @ignore */\nfunction dictionaryBatchFromJSON(b) {\n    return new message_1.DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\nexports.dictionaryBatchFromJSON = dictionaryBatchFromJSON;\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => schema_1.Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => schema_1.Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new message_1.FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new message_1.BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new message_1.BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new message_1.BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new message_1.BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nfunction fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new schema_1.Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new type_1.Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new type_1.Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new schema_1.Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new type_1.Int32();\n        dictType = new type_1.Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new schema_1.Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\nexports.fieldFromJSON = fieldFromJSON;\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new type_1.Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new type_1.Null();\n        case 'null': return new type_1.Null();\n        case 'binary': return new type_1.Binary();\n        case 'utf8': return new type_1.Utf8();\n        case 'bool': return new type_1.Bool();\n        case 'list': return new type_1.List((children || [])[0]);\n        case 'struct': return new type_1.Struct(children || []);\n        case 'struct_': return new type_1.Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new type_1.Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new type_1.Float(enum_1.Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new type_1.Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new type_1.Date_(enum_1.DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new type_1.Time(enum_1.TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new type_1.Timestamp(enum_1.TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new type_1.Interval(enum_1.IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new type_1.Union(enum_1.UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new type_1.FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new type_1.FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new type_1.Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flatbuffers_1 = require(\"flatbuffers\");\nconst Schema_ = require(\"../../fb/Schema\");\nconst Message_ = require(\"../../fb/Message\");\nconst schema_1 = require(\"../../schema\");\nconst buffer_1 = require(\"../../util/buffer\");\nconst enum_1 = require(\"../../enum\");\nconst typeassembler_1 = require(\"../../visitor/typeassembler\");\nconst json_1 = require(\"./json\");\nvar Long = flatbuffers_1.flatbuffers.Long;\nvar Builder = flatbuffers_1.flatbuffers.Builder;\nvar ByteBuffer = flatbuffers_1.flatbuffers.ByteBuffer;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_.org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_.org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nconst type_1 = require(\"../../type\");\n/**\n * @ignore\n * @private\n **/\nclass Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, enum_1.MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(buffer_1.toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = schema_1.Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, enum_1.MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof schema_1.Schema) {\n            return new Message(0, enum_1.MetadataVersion.V4, enum_1.MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, enum_1.MetadataVersion.V4, enum_1.MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, enum_1.MetadataVersion.V4, enum_1.MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === enum_1.MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === enum_1.MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === enum_1.MessageHeader.DictionaryBatch; }\n}\nexports.Message = Message;\n/**\n * @ignore\n * @private\n **/\nclass RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\nexports.RecordBatch = RecordBatch;\n/**\n * @ignore\n * @private\n **/\nclass DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\nexports.DictionaryBatch = DictionaryBatch;\n/**\n * @ignore\n * @private\n **/\nclass BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\nexports.BufferRegion = BufferRegion;\n/**\n * @ignore\n * @private\n **/\nclass FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\nexports.FieldNode = FieldNode;\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case enum_1.MessageHeader.Schema: return schema_1.Schema.fromJSON(message);\n            case enum_1.MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case enum_1.MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${enum_1.MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case enum_1.MessageHeader.Schema: return schema_1.Schema.decode(message.header(new _Schema()));\n            case enum_1.MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case enum_1.MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${enum_1.MessageHeader[type]}, type: ${type} }`);\n    });\n}\nschema_1.Field['encode'] = encodeField;\nschema_1.Field['decode'] = decodeField;\nschema_1.Field['fromJSON'] = json_1.fieldFromJSON;\nschema_1.Schema['encode'] = encodeSchema;\nschema_1.Schema['decode'] = decodeSchema;\nschema_1.Schema['fromJSON'] = json_1.schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = json_1.recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = json_1.dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new schema_1.Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = enum_1.MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = enum_1.MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < enum_1.MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = schema_1.Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = schema_1.Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new schema_1.Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new type_1.Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new type_1.Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new schema_1.Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new type_1.Int32();\n        dictType = new type_1.Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new schema_1.Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new type_1.Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type.NONE: return new type_1.Null();\n        case Type.Null: return new type_1.Null();\n        case Type.Binary: return new type_1.Binary();\n        case Type.Utf8: return new type_1.Utf8();\n        case Type.Bool: return new type_1.Bool();\n        case Type.List: return new type_1.List((children || [])[0]);\n        case Type.Struct_: return new type_1.Struct(children || []);\n    }\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int());\n            return new type_1.Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint());\n            return new type_1.Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal());\n            return new type_1.Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date());\n            return new type_1.Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time());\n            return new type_1.Time(t.unit(), t.bitWidth());\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp());\n            return new type_1.Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval());\n            return new type_1.Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union());\n            return new type_1.Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary());\n            return new type_1.FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList());\n            return new type_1.FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map());\n            return new type_1.Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => schema_1.Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    let type = field.type;\n    let typeId = field.typeId;\n    if (!type_1.DataType.isDictionary(type)) {\n        typeOffset = typeassembler_1.instance.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeassembler_1.instance.visit(type, b);\n        typeOffset = typeassembler_1.instance.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => schema_1.Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (function () {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass TimeVector extends base_1.BaseVector {\n}\nexports.TimeVector = TimeVector;\n/** @ignore */\nclass TimeSecondVector extends TimeVector {\n}\nexports.TimeSecondVector = TimeSecondVector;\n/** @ignore */\nclass TimeMillisecondVector extends TimeVector {\n}\nexports.TimeMillisecondVector = TimeMillisecondVector;\n/** @ignore */\nclass TimeMicrosecondVector extends TimeVector {\n}\nexports.TimeMicrosecondVector = TimeMicrosecondVector;\n/** @ignore */\nclass TimeNanosecondVector extends TimeVector {\n}\nexports.TimeNanosecondVector = TimeNanosecondVector;\n\n//# sourceMappingURL=time.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nfunction uint16ToFloat64(h) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\nexports.uint16ToFloat64 = uint16ToFloat64;\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nfunction float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    }\n    else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\nexports.float64ToUint16 = float64ToUint16;\n\n//# sourceMappingURL=math.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../util/vector\");\nconst type_1 = require(\"../type\");\nconst args_1 = require(\"../util/args\");\nconst vector_2 = require(\"../vector\");\n/** @ignore */\nclass Chunked extends vector_2.AbstractVector {\n    constructor(type, chunks = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._nullCount = -1;\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n    /** @nocollapse */\n    static flatten(...vectors) {\n        return args_1.selectChunkArgs(vector_2.Vector, vectors);\n    }\n    /** @nocollapse */\n    static concat(...vectors) {\n        const chunks = Chunked.flatten(...vectors);\n        return new Chunked(chunks[0].type, chunks);\n    }\n    get type() { return this._type; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get typeId() { return this._type.typeId; }\n    get VectorName() { return `Chunked<${this._type}>`; }\n    get data() {\n        return this._chunks[0] ? this._chunks[0].data : null;\n    }\n    get ArrayType() { return this._type.ArrayType; }\n    get numChildren() { return this._numChildren; }\n    get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    get byteLength() {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n    get indices() {\n        if (type_1.DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = this._chunks;\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices)));\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    get dictionary() {\n        if (type_1.DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary;\n        }\n        return null;\n    }\n    *[Symbol.iterator]() {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n    clone(chunks = this._chunks) {\n        return new Chunked(this._type, chunks);\n    }\n    concat(...others) {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n    slice(begin, end) {\n        return vector_1.clampRange(this, begin, end, this._sliceInternal);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this._numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let child, field, chunks;\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = (this._type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked(field.type, chunks));\n            }\n        }\n        return null;\n    }\n    search(index, then) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0) {\n            return null;\n        }\n        if (idx >= offsets[rhs]) {\n            return null;\n        }\n        if (rhs <= 1) {\n            return then ? then(this, 0, idx) : [0, idx];\n        }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n    isValid(index) {\n        return !!this.search(index, this.isValidInternal);\n    }\n    get(index) {\n        return this.search(index, this.getInternal);\n    }\n    set(index, value) {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n    indexOf(element, offset) {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n    toArray() {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType = this._type.ArrayType;\n        if (n <= 0) {\n            return new ArrayType(0);\n        }\n        if (n <= 1) {\n            return chunks[0].toArray();\n        }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n    getInternal({ _chunks }, i, j) { return _chunks[i].get(j); }\n    isValidInternal({ _chunks }, i, j) { return _chunks[i].isValid(j); }\n    indexOfInternal({ _chunks }, chunkIndex, fromIndex, element) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n    _sliceInternal(self, begin, end) {\n        const slices = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) {\n                break;\n            }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) {\n                continue;\n            }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to));\n        }\n        return self.clone(slices);\n    }\n}\nexports.Chunked = Chunked;\n/** @ignore */\nfunction calculateOffsets(vectors) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n//# sourceMappingURL=chunked.js.map\n","\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NS7624605610262437867 = require(\"./Schema\");\nvar org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                flatbuf.Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MessageHeader;\n                (function (MessageHeader) {\n                    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n                    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n                    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n                    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n                    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n                    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n                })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FieldNode {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FieldNode\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The number of value slots in the Arrow array at this level of a nested\n                     * tree\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The number of observed nulls. Fields with null_count == 0 may choose not\n                     * to write their physical validity bitmap out as a materialized buffer,\n                     * instead setting the length of the bitmap buffer to 0.\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    nullCount() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     * @param flatbuffers.Long null_count\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldNode(builder, length, null_count) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(null_count);\n                        builder.writeInt64(length);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.FieldNode = FieldNode;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class RecordBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns RecordBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param RecordBatch= obj\n                     * @returns RecordBatch\n                     */\n                    static getRootAsRecordBatch(bb, obj) {\n                        return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * number of records / rows. The arrays in the batch should all have this\n                     * length\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * Nodes correspond to the pre-ordered flattened logical schema\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.FieldNode= obj\n                     * @returns org.apache.arrow.flatbuf.FieldNode\n                     */\n                    nodes(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    nodesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Buffers correspond to the pre-ordered flattened buffer tree\n                     *\n                     * The number of buffers appended to this list depends on the schema. For\n                     * example, most primitive arrays will have 2 buffers, 1 for the validity\n                     * bitmap and 1 for the values. For struct arrays, there will only be a\n                     * single buffer for the validity (nulls) bitmap\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Buffer= obj\n                     * @returns org.apache.arrow.flatbuf.Buffer\n                     */\n                    buffers(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    buffersLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startRecordBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     */\n                    static addLength(builder, length) {\n                        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nodesOffset\n                     */\n                    static addNodes(builder, nodesOffset) {\n                        builder.addFieldOffset(1, nodesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startNodesVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset buffersOffset\n                     */\n                    static addBuffers(builder, buffersOffset) {\n                        builder.addFieldOffset(2, buffersOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startBuffersVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endRecordBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n                        RecordBatch.startRecordBatch(builder);\n                        RecordBatch.addLength(builder, length);\n                        RecordBatch.addNodes(builder, nodesOffset);\n                        RecordBatch.addBuffers(builder, buffersOffset);\n                        return RecordBatch.endRecordBatch(builder);\n                    }\n                }\n                flatbuf.RecordBatch = RecordBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryBatch= obj\n                     * @returns DictionaryBatch\n                     */\n                    static getRootAsDictionaryBatch(bb, obj) {\n                        return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.RecordBatch= obj\n                     * @returns org.apache.arrow.flatbuf.RecordBatch|null\n                     */\n                    data(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * If isDelta is true the values in the dictionary are to be appended to a\n                     * dictionary with the indicated id\n                     *\n                     * @returns boolean\n                     */\n                    isDelta() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dataOffset\n                     */\n                    static addData(builder, dataOffset) {\n                        builder.addFieldOffset(1, dataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isDelta\n                     */\n                    static addIsDelta(builder, isDelta) {\n                        builder.addFieldInt8(2, +isDelta, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n                        DictionaryBatch.startDictionaryBatch(builder);\n                        DictionaryBatch.addId(builder, id);\n                        DictionaryBatch.addData(builder, dataOffset);\n                        DictionaryBatch.addIsDelta(builder, isDelta);\n                        return DictionaryBatch.endDictionaryBatch(builder);\n                    }\n                }\n                flatbuf.DictionaryBatch = DictionaryBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Message {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Message\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Message= obj\n                     * @returns Message\n                     */\n                    static getRootAsMessage(bb, obj) {\n                        return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MessageHeader\n                     */\n                    headerType() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n                    }\n                    /**\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    header(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMessage(builder) {\n                        builder.startObject(5);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MessageHeader headerType\n                     */\n                    static addHeaderType(builder, headerType) {\n                        builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset headerOffset\n                     */\n                    static addHeader(builder, headerOffset) {\n                        builder.addFieldOffset(2, headerOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long bodyLength\n                     */\n                    static addBodyLength(builder, bodyLength) {\n                        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(4, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMessage(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishMessageBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n                        Message.startMessage(builder);\n                        Message.addVersion(builder, version);\n                        Message.addHeaderType(builder, headerType);\n                        Message.addHeader(builder, headerOffset);\n                        Message.addBodyLength(builder, bodyLength);\n                        Message.addCustomMetadata(builder, customMetadataOffset);\n                        return Message.endMessage(builder);\n                    }\n                }\n                flatbuf.Message = Message;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n\n//# sourceMappingURL=Message.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"./schema\");\nconst vector_1 = require(\"./vector\");\nconst chunked_1 = require(\"./vector/chunked\");\nclass Column extends chunked_1.Chunked {\n    constructor(field, vectors = [], offsets) {\n        vectors = chunked_1.Chunked.flatten(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n    /** @nocollapse */\n    static new(field, data, ...rest) {\n        const chunks = chunked_1.Chunked.flatten(Array.isArray(data) ? [...data, ...rest] :\n            data instanceof vector_1.Vector ? [data, ...rest] :\n                [vector_1.Vector.new(data, ...rest)]);\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new schema_1.Field(field, type, true);\n        }\n        else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n    get field() { return this._field; }\n    get name() { return this._field.name; }\n    get nullable() { return this._field.nullable; }\n    get metadata() { return this._field.metadata; }\n    clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let column, field, chunks;\n        if (column = columns[index]) {\n            return column;\n        }\n        if (field = (this.type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n}\nexports.Column = Column;\n/** @ignore */\nclass SingleChunkColumn extends Column {\n    constructor(field, vector, offsets) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    search(index, then) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    isValid(index) {\n        return this._chunk.isValid(index);\n    }\n    get(index) {\n        return this._chunk.get(index);\n    }\n    set(index, value) {\n        this._chunk.set(index, value);\n    }\n    indexOf(element, offset) {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n\n//# sourceMappingURL=column.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"../util/buffer\");\nconst buffer_2 = require(\"./buffer\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass BinaryBuilder extends builder_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_2.BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, buffer_1.toUint8Array(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\nexports.BinaryBuilder = BinaryBuilder;\n\n//# sourceMappingURL=binary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst adapters_1 = require(\"./adapters\");\nconst utf8_1 = require(\"../util/utf8\");\nconst interfaces_1 = require(\"./interfaces\");\nconst buffer_1 = require(\"../util/buffer\");\nconst compat_1 = require(\"../util/compat\");\n/** @ignore */\nclass AsyncByteQueue extends interfaces_1.AsyncQueue {\n    write(value) {\n        if ((value = buffer_1.toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? utf8_1.decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(utf8_1.decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? buffer_1.joinUint8Arrays(this._values)[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return buffer_1.joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\nexports.AsyncByteQueue = AsyncByteQueue;\n/** @ignore */\nclass ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(adapters_1.default.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\nexports.ByteStream = ByteStream;\n/** @ignore */\nclass AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromAsyncIterable(source));\n        }\n        else if (compat_1.isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromNodeStream(source));\n        }\n        else if (compat_1.isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromDOMStream(source));\n        }\n        else if (compat_1.isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromDOMStream(source.body));\n        }\n        else if (compat_1.isIterable(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromIterable(source));\n        }\n        else if (compat_1.isPromise(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromAsyncIterable(source));\n        }\n        else if (compat_1.isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(adapters_1.default.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\nexports.AsyncByteStream = AsyncByteStream;\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || interfaces_1.ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || interfaces_1.ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    async cancel(reason) { await this.return(reason); }\n    get closed() { return this._closedPromise; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    async next(size, cmd = 'read') { return (await this.source.next({ cmd, size })); }\n    async throw(value) {\n        const result = (this.source.throw && await this.source.throw(value)) || interfaces_1.ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    async return(value) {\n        const result = (this.source.return && await this.source.return(value)) || interfaces_1.ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n\n//# sourceMappingURL=stream.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass FixedSizeListVector extends base_1.BaseVector {\n}\nexports.FixedSizeListVector = FixedSizeListVector;\n\n//# sourceMappingURL=fixedsizelist.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass TimestampBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.TimestampBuilder = TimestampBuilder;\n/** @ignore */\nclass TimestampSecondBuilder extends TimestampBuilder {\n}\nexports.TimestampSecondBuilder = TimestampSecondBuilder;\n/** @ignore */\nclass TimestampMillisecondBuilder extends TimestampBuilder {\n}\nexports.TimestampMillisecondBuilder = TimestampMillisecondBuilder;\n/** @ignore */\nclass TimestampMicrosecondBuilder extends TimestampBuilder {\n}\nexports.TimestampMicrosecondBuilder = TimestampMicrosecondBuilder;\n/** @ignore */\nclass TimestampNanosecondBuilder extends TimestampBuilder {\n}\nexports.TimestampNanosecondBuilder = TimestampNanosecondBuilder;\n\n//# sourceMappingURL=timestamp.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass FixedSizeBinaryBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.FixedSizeBinaryBuilder = FixedSizeBinaryBuilder;\n\n//# sourceMappingURL=fixedsizebinary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"../../io/stream\");\n/** @ignore */\nfunction recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new stream_1.AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    async function next(controller) {\n        let buf = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\nexports.recordBatchWriterThroughDOMStream = recordBatchWriterThroughDOMStream;\n\n//# sourceMappingURL=writer.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass DecimalBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.DecimalBuilder = DecimalBuilder;\n\n//# sourceMappingURL=decimal.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"./buffer\");\nconst compat_1 = require(\"./compat\");\n/** @ignore */\nexports.isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(buffer_1.toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[exports.isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${exports.bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return exports.bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return exports.bignumToString(this);\n        case 'default': return exports.bignumToBigInt(this);\n    }\n    return exports.bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': compat_1.BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': compat_1.BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': compat_1.BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\nif (!compat_1.BigIntAvailable) {\n    exports.bignumToString = decimalToString;\n    exports.bignumToBigInt = exports.bignumToString;\n}\nelse {\n    exports.bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    exports.bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nclass BN {\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case compat_1.BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n}\nexports.BN = BN;\n\n//# sourceMappingURL=bn.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst index_1 = require(\"./index\");\nconst compat_1 = require(\"../util/compat\");\nconst buffer_1 = require(\"../util/buffer\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass IntVector extends base_1.BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return vector_1.Vector.new(data_1.Data.Int(type, 0, length, 0, null, input));\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return index_1.vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\nexports.IntVector = IntVector;\n/** @ignore */\nclass Int8Vector extends IntVector {\n}\nexports.Int8Vector = Int8Vector;\n/** @ignore */\nclass Int16Vector extends IntVector {\n}\nexports.Int16Vector = Int16Vector;\n/** @ignore */\nclass Int32Vector extends IntVector {\n}\nexports.Int32Vector = Int32Vector;\n/** @ignore */\nclass Int64Vector extends IntVector {\n    toBigInt64Array() {\n        return buffer_1.toBigInt64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\nexports.Int64Vector = Int64Vector;\n/** @ignore */\nclass Uint8Vector extends IntVector {\n}\nexports.Uint8Vector = Uint8Vector;\n/** @ignore */\nclass Uint16Vector extends IntVector {\n}\nexports.Uint16Vector = Uint16Vector;\n/** @ignore */\nclass Uint32Vector extends IntVector {\n}\nexports.Uint32Vector = Uint32Vector;\n/** @ignore */\nclass Uint64Vector extends IntVector {\n    toBigUint64Array() {\n        return buffer_1.toBigUint64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\nexports.Uint64Vector = Uint64Vector;\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === type_1.Int64 || typeCtor === type_1.Uint64) &&\n        (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Array: return type_1.Int8;\n        case Int16Array: return type_1.Int16;\n        case Int32Array: return is64bit ? type_1.Int64 : type_1.Int32;\n        case compat_1.BigInt64Array: return type_1.Int64;\n        case Uint8Array: return type_1.Uint8;\n        case Uint16Array: return type_1.Uint16;\n        case Uint32Array: return is64bit ? type_1.Uint64 : type_1.Uint32;\n        case compat_1.BigUint64Array: return type_1.Uint64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Vector: return type_1.Int8;\n        case Int16Vector: return type_1.Int16;\n        case Int32Vector: return is64bit ? type_1.Int64 : type_1.Int32;\n        case Int64Vector: return type_1.Int64;\n        case Uint8Vector: return type_1.Uint8;\n        case Uint16Vector: return type_1.Uint16;\n        case Uint32Vector: return is64bit ? type_1.Uint64 : type_1.Uint32;\n        case Uint64Vector: return type_1.Uint64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=int.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst schema_1 = require(\"../schema\");\nconst chunked_1 = require(\"../vector/chunked\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength) => [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n];\n/** @ignore */\nfunction ensureSameLengthData(schema, chunks, batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)) {\n    let data;\n    let field;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }));\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : data_1.Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return [new schema_1.Schema(fields), batchLength, batchData];\n}\nexports.ensureSameLengthData = ensureSameLengthData;\n/** @ignore */\nfunction distributeColumnsIntoRecordBatches(columns) {\n    return distributeVectorsIntoRecordBatches(new schema_1.Schema(columns.map(({ field }) => field)), columns);\n}\nexports.distributeColumnsIntoRecordBatches = distributeColumnsIntoRecordBatches;\n/** @ignore */\nfunction distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v instanceof chunked_1.Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\nexports.distributeVectorsIntoRecordBatches = distributeVectorsIntoRecordBatches;\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n    const fields = [...schema.fields];\n    const batchArgs = [];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1, numColumns = columns.length;\n    let child, childData = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new schema_1.Schema(fields, schema.metadata),\n        batchArgs.map((xs) => new recordbatch_1.RecordBatch(schema, ...xs))\n    ];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n    let data;\n    let field;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            }\n            else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }));\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : data_1.Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return childData;\n}\n\n//# sourceMappingURL=recordbatch.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"../schema\");\nconst type_1 = require(\"../type\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass MapBuilder extends builder_1.VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new type_1.Map_(new schema_1.Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\nexports.MapBuilder = MapBuilder;\n\n//# sourceMappingURL=map.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"./buffer\");\nconst text_encoding_utf_8_1 = require(\"text-encoding-utf-8\");\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nexports.decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer) => decoder.decode(buffer);\n    }\n    return (input) => {\n        const { buffer, byteOffset, length } = buffer_1.toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : text_encoding_utf_8_1.TextDecoder);\n/** @ignore */\nexports.encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value) => encoder.encode(value);\n    }\n    return (input = '') => buffer_1.toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : text_encoding_utf_8_1.TextEncoder);\n\n//# sourceMappingURL=utf8.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\nconst enum_1 = require(\"../enum\");\nconst file_1 = require(\"./metadata/file\");\nconst adapters_1 = require(\"../io/adapters\");\nconst stream_1 = require(\"../io/stream\");\nconst file_2 = require(\"../io/file\");\nconst vectorloader_1 = require(\"../visitor/vectorloader\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst interfaces_1 = require(\"../io/interfaces\");\nconst message_1 = require(\"./message\");\nconst compat_1 = require(\"../util/compat\");\nclass RecordBatchReader extends interfaces_1.ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return compat_1.isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return adapters_1.default.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return adapters_1.default.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (compat_1.isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (compat_1.isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (compat_1.isPromise(source)) {\n            return (async () => await RecordBatchReader.from(await source))();\n        }\n        else if (compat_1.isFetchResponse(source) || compat_1.isReadableDOMStream(source) || compat_1.isReadableNodeStream(source) || compat_1.isAsyncIterable(source)) {\n            return fromAsyncByteStream(new stream_1.AsyncByteStream(source));\n        }\n        return fromByteStream(new stream_1.ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (compat_1.isArrowJSON(source) || ArrayBuffer.isView(source) || compat_1.isIterable(source) || compat_1.isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\nexports.RecordBatchReader = RecordBatchReader;\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nclass RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    async *[Symbol.asyncIterator]() { yield* this[Symbol.iterator](); }\n}\nexports.RecordBatchStreamReader = RecordBatchStreamReader;\n/** @ignore */\nclass AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\nexports.AsyncRecordBatchStreamReader = AsyncRecordBatchStreamReader;\n/** @ignore */\nclass RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\nexports.RecordBatchFileReader = RecordBatchFileReader;\n/** @ignore */\nclass AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\nexports.AsyncRecordBatchFileReader = AsyncRecordBatchFileReader;\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        return new recordbatch_1.RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            return (dictionary && isDelta ? dictionary.concat(vector_1.Vector.new(this._loadVectors(data, body, [type])[0])) :\n                vector_1.Vector.new(this._loadVectors(data, body, [type])[0]));\n        }\n        return dictionary;\n    }\n    _loadVectors(header, body, types) {\n        return new vectorloader_1.VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !compat_1.isArrowJSON(source)\n            ? new message_1.MessageReader(this._handle = source)\n            : new message_1.JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return interfaces_1.ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return interfaces_1.ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new recordbatch_1._InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new message_1.AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    async open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    async throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return interfaces_1.ITERATOR_DONE;\n    }\n    async return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return interfaces_1.ITERATOR_DONE;\n    }\n    async next() {\n        if (this.closed) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new recordbatch_1._InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return await this.return();\n    }\n    async _readNextMessageAndValidate(type) {\n        return await this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof file_2.RandomAccessFile ? source : new file_2.RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(enum_1.MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(enum_1.MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - message_1.magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return file_1.Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof file_2.AsyncRandomAccessFile ? source : new file_2.AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    async open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    async readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            await this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(enum_1.MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    async _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(enum_1.MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - message_1.magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return file_1.Footer.decode(buffer);\n    }\n    async _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            await this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new vectorloader_1.JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n    const reader = await RecordBatchReader.from(source);\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do {\n                yield reader;\n            } while (!(await reader.reset().open()).closed);\n        }\n    }\n    finally {\n        await reader.cancel();\n    }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((message_1.magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !message_1.checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n    const bytes = await source.peek((message_1.magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !message_1.checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(async function* () { }()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n    const { size } = await source.stat();\n    const file = new file_2.AsyncRandomAccessFile(source, size);\n    if (size >= message_1.magicX2AndPadding) {\n        if (message_1.checkForMagicArrowString(await file.readAt(0, (message_1.magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n}\n\n//# sourceMappingURL=reader.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst math_1 = require(\"../util/math\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass FloatBuilder extends builder_1.FixedWidthBuilder {\n}\nexports.FloatBuilder = FloatBuilder;\n/** @ignore */\nclass Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        this._values.set(index, math_1.float64ToUint16(value));\n    }\n}\nexports.Float16Builder = Float16Builder;\n/** @ignore */\nclass Float32Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\nexports.Float32Builder = Float32Builder;\n/** @ignore */\nclass Float64Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\nexports.Float64Builder = Float64Builder;\n\n//# sourceMappingURL=float.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @ignore */\nfunction partial0(visit) {\n    return function () { return visit(this); };\n}\nexports.partial0 = partial0;\n/** @ignore */\nfunction partial1(visit) {\n    return function (a) { return visit(this, a); };\n}\nexports.partial1 = partial1;\n/** @ignore */\nfunction partial2(visit) {\n    return function (a, b) { return visit(this, a, b); };\n}\nexports.partial2 = partial2;\n\n//# sourceMappingURL=fn.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst enum_1 = require(\"../enum\");\n/** @ignore */\nclass JSONTypeAssembler extends visitor_1.Visitor {\n    visit(node) {\n        return node == null ? undefined : super.visit(node);\n    }\n    visitNull({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitInt({ typeId, bitWidth, isSigned }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    visitFloat({ typeId, precision }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'precision': enum_1.Precision[precision] };\n    }\n    visitBinary({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitBool({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitUtf8({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitDecimal({ typeId, scale, precision }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    visitDate({ typeId, unit }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'unit': enum_1.DateUnit[unit] };\n    }\n    visitTime({ typeId, unit, bitWidth }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'unit': enum_1.TimeUnit[unit], bitWidth };\n    }\n    visitTimestamp({ typeId, timezone, unit }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'unit': enum_1.TimeUnit[unit], timezone };\n    }\n    visitInterval({ typeId, unit }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'unit': enum_1.IntervalUnit[unit] };\n    }\n    visitList({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitStruct({ typeId }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase() };\n    }\n    visitUnion({ typeId, mode, typeIds }) {\n        return {\n            'name': enum_1.ArrowType[typeId].toLowerCase(),\n            'mode': enum_1.UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    visitDictionary(node) {\n        return this.visit(node.dictionary);\n    }\n    visitFixedSizeBinary({ typeId, byteWidth }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    visitFixedSizeList({ typeId, listSize }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    visitMap({ typeId, keysSorted }) {\n        return { 'name': enum_1.ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\nexports.JSONTypeAssembler = JSONTypeAssembler;\n\n//# sourceMappingURL=jsontypeassembler.js.map\n","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst enum_1 = require(\"../enum\");\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type) => `Cannot compute the byte width of variable-width column ${type}`;\n/** @ignore */\nclass ByteWidthVisitor extends visitor_1.Visitor {\n    visitNull(____) { return 0; }\n    visitInt(type) { return type.bitWidth / 8; }\n    visitFloat(type) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    visitBinary(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitUtf8(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitBool(____) { return 1 / 8; }\n    visitDecimal(____) { return 16; }\n    visitDate(type) { return (type.unit + 1) * 4; }\n    visitTime(type) { return type.bitWidth / 8; }\n    visitTimestamp(type) { return type.unit === enum_1.TimeUnit.SECOND ? 4 : 8; }\n    visitInterval(type) { return (type.unit + 1) * 4; }\n    visitList(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitStruct(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitUnion(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitFixedSizeBinary(type) { return type.byteWidth; }\n    visitFixedSizeList(type) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    visitMap(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitDictionary(type) { return this.visit(type.indices); }\n    visitFields(fields) { return (fields || []).map((field) => this.visit(field.type)); }\n    visitSchema(schema) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\nexports.ByteWidthVisitor = ByteWidthVisitor;\n/** @ignore */\nexports.instance = new ByteWidthVisitor();\n\n//# sourceMappingURL=bytewidth.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @ignore */\nfunction getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\nexports.getBool = getBool;\n/** @ignore */\nfunction getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\nexports.getBit = getBit;\n/** @ignore */\nfunction setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\nexports.setBool = setBool;\n/** @ignore */\nfunction truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\nexports.truncateBitmap = truncateBitmap;\n/** @ignore */\nfunction packBools(values) {\n    let xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\nexports.packBools = packBools;\n/** @ignore */\nfunction* iterateBits(bytes, begin, length, context, get) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\nexports.iterateBits = iterateBits;\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nfunction popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\nexports.popcnt_bit_range = popcnt_bit_range;\n/** @ignore */\nfunction popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = byteOffset | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\nexports.popcnt_array = popcnt_array;\n/** @ignore */\nfunction popcnt_uint32(uint32) {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\nexports.popcnt_uint32 = popcnt_uint32;\n\n//# sourceMappingURL=bit.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flatbuffers_1 = require(\"flatbuffers\");\nconst utf8_1 = require(\"../util/utf8\");\nvar ByteBuffer = flatbuffers_1.flatbuffers.ByteBuffer;\nconst compat_1 = require(\"./compat\");\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nfunction memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\nexports.memcpy = memcpy;\n/** @ignore */\nfunction joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexports.joinUint8Arrays = joinUint8Arrays;\nfunction toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = compat_1.isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = utf8_1.encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof ByteBuffer) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\nexports.toArrayBufferView = toArrayBufferView;\n/** @ignore */ exports.toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ exports.toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ exports.toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ exports.toBigInt64Array = (input) => toArrayBufferView(compat_1.BigInt64Array, input);\n/** @ignore */ exports.toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ exports.toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ exports.toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ exports.toBigUint64Array = (input) => toArrayBufferView(compat_1.BigUint64Array, input);\n/** @ignore */ exports.toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ exports.toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ exports.toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !compat_1.isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\nexports.toArrayBufferViewIterator = toArrayBufferViewIterator;\n/** @ignore */ exports.toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ exports.toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ exports.toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ exports.toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ exports.toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ exports.toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ exports.toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ exports.toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ exports.toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nasync function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (compat_1.isPromise(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n    const wrap = async function* (x) { yield await x; };\n    const emit = async function* (source) {\n        yield* pump((function* (it) {\n            let r = null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n    const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n        : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n            : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                    : compat_1.isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                        : !compat_1.isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                            : source; // otherwise if AsyncIterable, use it\n    yield* pump((async function* (it) {\n        let r = null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\nexports.toArrayBufferViewAsyncIterator = toArrayBufferViewAsyncIterator;\n/** @ignore */ exports.toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ exports.toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ exports.toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ exports.toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ exports.toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ exports.toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ exports.toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ exports.toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ exports.toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nfunction rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\nexports.rebaseValueOffsets = rebaseValueOffsets;\n/** @ignore */\nfunction compareArrayLike(a, b) {\n    let i = 0, n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\nexports.compareArrayLike = compareArrayLike;\n\n//# sourceMappingURL=buffer.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vector_1 = require(\"../vector\");\nexports.Vector = vector_1.Vector;\nvar base_1 = require(\"./base\");\nexports.BaseVector = base_1.BaseVector;\nvar binary_1 = require(\"./binary\");\nexports.BinaryVector = binary_1.BinaryVector;\nvar bool_1 = require(\"./bool\");\nexports.BoolVector = bool_1.BoolVector;\nvar chunked_1 = require(\"./chunked\");\nexports.Chunked = chunked_1.Chunked;\nvar date_1 = require(\"./date\");\nexports.DateVector = date_1.DateVector;\nexports.DateDayVector = date_1.DateDayVector;\nexports.DateMillisecondVector = date_1.DateMillisecondVector;\nvar decimal_1 = require(\"./decimal\");\nexports.DecimalVector = decimal_1.DecimalVector;\nvar dictionary_1 = require(\"./dictionary\");\nexports.DictionaryVector = dictionary_1.DictionaryVector;\nvar fixedsizebinary_1 = require(\"./fixedsizebinary\");\nexports.FixedSizeBinaryVector = fixedsizebinary_1.FixedSizeBinaryVector;\nvar fixedsizelist_1 = require(\"./fixedsizelist\");\nexports.FixedSizeListVector = fixedsizelist_1.FixedSizeListVector;\nvar float_1 = require(\"./float\");\nexports.FloatVector = float_1.FloatVector;\nexports.Float16Vector = float_1.Float16Vector;\nexports.Float32Vector = float_1.Float32Vector;\nexports.Float64Vector = float_1.Float64Vector;\nvar interval_1 = require(\"./interval\");\nexports.IntervalVector = interval_1.IntervalVector;\nexports.IntervalDayTimeVector = interval_1.IntervalDayTimeVector;\nexports.IntervalYearMonthVector = interval_1.IntervalYearMonthVector;\nvar int_1 = require(\"./int\");\nexports.IntVector = int_1.IntVector;\nexports.Int8Vector = int_1.Int8Vector;\nexports.Int16Vector = int_1.Int16Vector;\nexports.Int32Vector = int_1.Int32Vector;\nexports.Int64Vector = int_1.Int64Vector;\nexports.Uint8Vector = int_1.Uint8Vector;\nexports.Uint16Vector = int_1.Uint16Vector;\nexports.Uint32Vector = int_1.Uint32Vector;\nexports.Uint64Vector = int_1.Uint64Vector;\nvar list_1 = require(\"./list\");\nexports.ListVector = list_1.ListVector;\nvar map_1 = require(\"./map\");\nexports.MapVector = map_1.MapVector;\nvar null_1 = require(\"./null\");\nexports.NullVector = null_1.NullVector;\nvar struct_1 = require(\"./struct\");\nexports.StructVector = struct_1.StructVector;\nvar timestamp_1 = require(\"./timestamp\");\nexports.TimestampVector = timestamp_1.TimestampVector;\nexports.TimestampSecondVector = timestamp_1.TimestampSecondVector;\nexports.TimestampMillisecondVector = timestamp_1.TimestampMillisecondVector;\nexports.TimestampMicrosecondVector = timestamp_1.TimestampMicrosecondVector;\nexports.TimestampNanosecondVector = timestamp_1.TimestampNanosecondVector;\nvar time_1 = require(\"./time\");\nexports.TimeVector = time_1.TimeVector;\nexports.TimeSecondVector = time_1.TimeSecondVector;\nexports.TimeMillisecondVector = time_1.TimeMillisecondVector;\nexports.TimeMicrosecondVector = time_1.TimeMicrosecondVector;\nexports.TimeNanosecondVector = time_1.TimeNanosecondVector;\nvar union_1 = require(\"./union\");\nexports.UnionVector = union_1.UnionVector;\nexports.DenseUnionVector = union_1.DenseUnionVector;\nexports.SparseUnionVector = union_1.SparseUnionVector;\nvar utf8_1 = require(\"./utf8\");\nexports.Utf8Vector = utf8_1.Utf8Vector;\nvar row_1 = require(\"./row\");\nexports.MapRow = row_1.MapRow;\nexports.StructRow = row_1.StructRow;\nconst fn = require(\"../util/fn\");\nconst enum_1 = require(\"../enum\");\nconst vector_2 = require(\"../vector\");\nconst chunked_2 = require(\"./chunked\");\nconst base_2 = require(\"./base\");\nconst bit_1 = require(\"../util/bit\");\nconst compat_1 = require(\"../util/compat\");\nconst builder_1 = require(\"../builder\");\nconst get_1 = require(\"../visitor/get\");\nconst set_1 = require(\"../visitor/set\");\nconst indexof_1 = require(\"../visitor/indexof\");\nconst toarray_1 = require(\"../visitor/toarray\");\nconst iterator_1 = require(\"../visitor/iterator\");\nconst bytewidth_1 = require(\"../visitor/bytewidth\");\nconst vectorctor_1 = require(\"../visitor/vectorctor\");\n/** @nocollapse */\nvector_2.Vector.new = newVector;\n/** @nocollapse */\nvector_2.Vector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (vectorctor_1.instance.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nfunction vectorFromValuesWithType(newDataType, input) {\n    if (compat_1.isIterable(input)) {\n        return vector_2.Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (compat_1.isAsyncIterable(input)) {\n        return vector_2.Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return compat_1.isIterable(values)\n        ? vector_2.Vector.from({ nullValues, ...input, type })\n        : vector_2.Vector.from({ nullValues, ...input, type });\n}\nexports.vectorFromValuesWithType = vectorFromValuesWithType;\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (compat_1.isIterable(values)) {\n        const chunks = [...builder_1.Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : chunked_2.Chunked.concat(chunks);\n    }\n    return (async (chunks) => {\n        const transform = builder_1.Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : chunked_2.Chunked.concat(chunks);\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nbase_2.BaseVector.prototype.get = function baseVectorGet(index) {\n    return get_1.instance.visit(this, index);\n};\nbase_2.BaseVector.prototype.set = function baseVectorSet(index, value) {\n    return set_1.instance.visit(this, index, value);\n};\nbase_2.BaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexof_1.instance.visit(this, value, fromIndex);\n};\nbase_2.BaseVector.prototype.toArray = function baseVectorToArray() {\n    return toarray_1.instance.visit(this);\n};\nbase_2.BaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return bytewidth_1.instance.visit(this.type);\n};\nbase_2.BaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iterator_1.instance.visit(this);\n};\nbase_2.BaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(enum_1.Type)\n    .map((T) => enum_1.Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== enum_1.Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = vectorctor_1.instance.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(get_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(set_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexof_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toarray_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(bytewidth_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iterator_1.instance.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (bit_1.setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"../util/buffer\");\n/** @ignore */\nexports.default = {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return buffer_1.joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = buffer_1.joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = buffer_1.toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return buffer_1.joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = buffer_1.joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = buffer_1.toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n    let done = false, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return buffer_1.joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = buffer_1.joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield null);\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer_1.toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    }\n    finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.byobReader = null;\n        this.defaultReader = null;\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        }\n        catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n    async cancel(reason) {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n    async read(size) {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = buffer_1.toUint8Array(result));\n        return result;\n    }\n    getDefaultReader() {\n        if (this.byobReader) {\n            this.releaseLock();\n        }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.defaultReader);\n    }\n    getBYOBReader() {\n        if (this.defaultReader) {\n            this.releaseLock();\n        }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.byobReader);\n    }\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    async readFromBYOBReader(size) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    let handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n    let events = [];\n    let event = 'error';\n    let done = false, err = null;\n    let cmd, size, bufferLength = 0;\n    let buffers = [], buffer;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return buffer_1.joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = buffer_1.joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield null);\n    // ignore stdin if it's a TTY\n    if (stream['isTTY']) {\n        return yield new Uint8Array(0);\n    }\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n        do {\n            events[2] = onEvent(stream, 'readable');\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') {\n                break;\n            }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = buffer_1.toUint8Array(stream['read'](undefined));\n                }\n                else {\n                    buffer = buffer_1.toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = buffer_1.toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n    function cleanup(events, err) {\n        buffer = buffers = null;\n        return new Promise(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = stream['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            }\n            catch (e) {\n                err = e || err;\n            }\n            finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=adapters.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\n/** @ignore */\nclass Run {\n    get length() { return this._values.length; }\n    get(index) { return this._values[index]; }\n    clear() { this._values = null; return this; }\n    bind(values) {\n        if (values instanceof vector_1.Vector) {\n            return values;\n        }\n        this._values = values;\n        return this;\n    }\n}\nexports.Run = Run;\n\n//# sourceMappingURL=run.js.map\n","\"use strict\";\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NS7624605610262437867 = require(\"./Schema\");\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nvar org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Footer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Footer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Footer= obj\n                     * @returns Footer\n                     */\n                    static getRootAsFooter(bb, obj) {\n                        return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.Schema= obj\n                     * @returns org.apache.arrow.flatbuf.Schema|null\n                     */\n                    schema(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    dictionaries(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    dictionariesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    recordBatches(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    recordBatchesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFooter(builder) {\n                        builder.startObject(4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset schemaOffset\n                     */\n                    static addSchema(builder, schemaOffset) {\n                        builder.addFieldOffset(1, schemaOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionariesOffset\n                     */\n                    static addDictionaries(builder, dictionariesOffset) {\n                        builder.addFieldOffset(2, dictionariesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startDictionariesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset recordBatchesOffset\n                     */\n                    static addRecordBatches(builder, recordBatchesOffset) {\n                        builder.addFieldOffset(3, recordBatchesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startRecordBatchesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFooter(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishFooterBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n                        Footer.startFooter(builder);\n                        Footer.addVersion(builder, version);\n                        Footer.addSchema(builder, schemaOffset);\n                        Footer.addDictionaries(builder, dictionariesOffset);\n                        Footer.addRecordBatches(builder, recordBatchesOffset);\n                        return Footer.endFooter(builder);\n                    }\n                }\n                flatbuf.Footer = Footer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Block {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Block\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * Index to the start of the RecordBlock (note this is past the Message header)\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * Length of the metadata\n                     *\n                     * @returns number\n                     */\n                    metaDataLength() {\n                        return this.bb.readInt32(this.bb_pos + 8);\n                    }\n                    /**\n                     * Length of the data (this is aligned so there can be a gap between this and\n                     * the metatdata).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        return this.bb.readInt64(this.bb_pos + 16);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param number metaDataLength\n                     * @param flatbuffers.Long bodyLength\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBlock(builder, offset, metaDataLength, bodyLength) {\n                        builder.prep(8, 24);\n                        builder.writeInt64(bodyLength);\n                        builder.pad(4);\n                        builder.writeInt32(metaDataLength);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Block = Block;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org = exports.org || (exports.org = {}));\n\n//# sourceMappingURL=File.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass NullBuilder extends builder_1.Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\nexports.NullBuilder = NullBuilder;\n\n//# sourceMappingURL=null.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @ignore */ const undf = void (0);\n/** @ignore */\nfunction valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\nexports.valueToString = valueToString;\n\n//# sourceMappingURL=pretty.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst bit_1 = require(\"../util/bit\");\nconst vector_1 = require(\"../util/vector\");\n/** @ignore */\nclass IndexOfVisitor extends visitor_1.Visitor {\n}\nexports.IndexOfVisitor = IndexOfVisitor;\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of bit_1.iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, bit_1.getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(vector, fromIndex);\n    }\n    const compare = vector_1.createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = vector_1.createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexports.instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\n/** @ignore */\nclass TypeComparator extends visitor_1.Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            exports.instance.compareFields(schema.fields, other.fields));\n    }\n    compareFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => exports.instance.compareField(f, others[i])));\n    }\n    compareField(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            exports.instance.visit(field.type, other.type));\n    }\n}\nexports.TypeComparator = TypeComparator;\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        exports.instance.compareFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        exports.instance.compareFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        exports.instance.compareFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        exports.instance.visit(type.indices, other.indices) &&\n        exports.instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        exports.instance.compareFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        exports.instance.compareFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexports.instance = new TypeComparator();\n\n//# sourceMappingURL=typecomparator.js.map\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enum_1 = require(\"../enum\");\nconst chunked_1 = require(\"./chunked\");\nconst vector_1 = require(\"../util/vector\");\nconst vector_2 = require(\"../vector\");\n/** @ignore */\nclass BaseVector extends vector_2.AbstractVector {\n    constructor(data, children) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n    get type() { return this.data.type; }\n    get typeId() { return this.data.typeId; }\n    get length() { return this.data.length; }\n    get offset() { return this.data.offset; }\n    get stride() { return this.data.stride; }\n    get nullCount() { return this.data.nullCount; }\n    get byteLength() { return this.data.byteLength; }\n    get VectorName() { return `${enum_1.Type[this.typeId]}Vector`; }\n    get ArrayType() { return this.type.ArrayType; }\n    get values() { return this.data.values; }\n    get typeIds() { return this.data.typeIds; }\n    get nullBitmap() { return this.data.nullBitmap; }\n    get valueOffsets() { return this.data.valueOffsets; }\n    get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n    clone(data, children = this._children) {\n        return vector_2.Vector.new(data, children);\n    }\n    concat(...others) {\n        return chunked_1.Chunked.concat(this, ...others);\n    }\n    slice(begin, end) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return vector_1.clampRange(this, begin, end, this._sliceInternal);\n    }\n    isValid(index) {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n    getChildAt(index) {\n        return index < 0 || index >= this.numChildren ? null : ((this._children || (this._children = []))[index] ||\n            (this._children[index] = vector_2.Vector.new(this.data.childData[index])));\n    }\n    toJSON() { return [...this]; }\n    _sliceInternal(self, begin, end) {\n        return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n    _bindDataAccessors(data) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\nexports.BaseVector = BaseVector;\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;\n\n//# sourceMappingURL=base.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"../../io/stream\");\nconst reader_1 = require(\"../../ipc/reader\");\n/** @ignore */\nfunction recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new stream_1.AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n    async function open() {\n        return await (await reader_1.RecordBatchReader.from(queue)).open(readableStrategy);\n    }\n    async function next(controller, reader) {\n        let size = controller.desiredSize;\n        let r = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\nexports.recordBatchReaderThroughDOMStream = recordBatchReaderThroughDOMStream;\n\n//# sourceMappingURL=reader.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"../../util/buffer\");\nconst compat_1 = require(\"../../util/compat\");\n/** @ignore */\nfunction toDOMStream(source, options) {\n    if (compat_1.isAsyncIterable(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if (compat_1.isIterable(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\nexports.toDOMStream = toDOMStream;\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = buffer_1.toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    async function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = buffer_1.toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=iterable.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass TimestampVector extends base_1.BaseVector {\n}\nexports.TimestampVector = TimestampVector;\n/** @ignore */\nclass TimestampSecondVector extends TimestampVector {\n}\nexports.TimestampSecondVector = TimestampSecondVector;\n/** @ignore */\nclass TimestampMillisecondVector extends TimestampVector {\n}\nexports.TimestampMillisecondVector = TimestampMillisecondVector;\n/** @ignore */\nclass TimestampMicrosecondVector extends TimestampVector {\n}\nexports.TimestampMicrosecondVector = TimestampMicrosecondVector;\n/** @ignore */\nclass TimestampNanosecondVector extends TimestampVector {\n}\nexports.TimestampNanosecondVector = TimestampNanosecondVector;\n\n//# sourceMappingURL=timestamp.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"./column\");\nconst schema_1 = require(\"./schema\");\nconst recordbatch_1 = require(\"./recordbatch\");\nconst reader_1 = require(\"./ipc/reader\");\nconst type_1 = require(\"./type\");\nconst args_1 = require(\"./util/args\");\nconst compat_1 = require(\"./util/compat\");\nconst writer_1 = require(\"./ipc/writer\");\nconst recordbatch_2 = require(\"./util/recordbatch\");\nconst index_1 = require(\"./vector/index\");\nclass Table extends index_1.Chunked {\n    constructor(...args) {\n        let schema = null;\n        if (args[0] instanceof schema_1.Schema) {\n            schema = args.shift();\n        }\n        let chunks = args_1.selectArgs(recordbatch_1.RecordBatch, args);\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n        chunks[0] || (chunks[0] = new recordbatch_1._InternalEmptyPlaceholderRecordBatch(schema));\n        super(new type_1.Struct(schema.fields), chunks);\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n    /** @nocollapse */\n    static empty(schema = new schema_1.Schema([])) { return new Table(schema, []); }\n    /** @nocollapse */\n    static from(input) {\n        if (!input) {\n            return Table.empty();\n        }\n        if (typeof input === 'object') {\n            let table = compat_1.isIterable(input['values']) ? tableFromIterable(input)\n                : compat_1.isAsyncIterable(input['values']) ? tableFromAsyncIterable(input)\n                    : null;\n            if (table !== null) {\n                return table;\n            }\n        }\n        let reader = reader_1.RecordBatchReader.from(input);\n        if (compat_1.isPromise(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n    /** @nocollapse */\n    static async fromAsync(source) {\n        return await Table.from(source);\n    }\n    /** @nocollapse */\n    static fromStruct(vector) {\n        return Table.new(vector.data.childData, vector.type.children);\n    }\n    /** @nocollapse */\n    static new(...cols) {\n        return new Table(...recordbatch_2.distributeColumnsIntoRecordBatches(args_1.selectColumnArgs(cols)));\n    }\n    get schema() { return this._schema; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get numCols() { return this._numChildren; }\n    clone(chunks = this._chunks) {\n        return new Table(this._schema, chunks);\n    }\n    getColumn(name) {\n        return this.getColumnAt(this.getColumnIndex(name));\n    }\n    getColumnAt(index) {\n        return this.getChildAt(index);\n    }\n    getColumnIndex(name) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let field, child;\n        const fields = this._schema.fields;\n        const columns = this._children || (this._children = []);\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new column_1.Column(field, chunks));\n            }\n        }\n        return null;\n    }\n    // @ts-ignore\n    serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? writer_1.RecordBatchFileWriter\n            : writer_1.RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    count() {\n        return this._length;\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new recordbatch_1.RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    assign(other) {\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) => (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))),\n            ...indices.map((i) => other.getColumnAt(i))\n        ].filter(Boolean);\n        return new Table(...recordbatch_2.distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\nexports.Table = Table;\nfunction tableFromIterable(input) {\n    const { type } = input;\n    if (type instanceof type_1.Struct) {\n        return Table.fromStruct(index_1.StructVector.from(input));\n    }\n    return null;\n}\nfunction tableFromAsyncIterable(input) {\n    const { type } = input;\n    if (type instanceof type_1.Struct) {\n        return index_1.StructVector.from(input).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n\n//# sourceMappingURL=table.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst schema_1 = require(\"../schema\");\nconst column_1 = require(\"../column\");\nconst vector_1 = require(\"../vector\");\nconst type_1 = require(\"../type\");\nconst chunked_1 = require(\"../vector/chunked\");\nconst isArray = Array.isArray;\n/** @ignore */\nexports.selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nexports.selectColumnArgs = (args) => {\n    const [fields, values] = _selectFieldArgs(args, [[], []]);\n    return values.map((x, i) => x instanceof column_1.Column ? column_1.Column.new(x.field.clone(fields[i]), x) :\n        x instanceof vector_1.Vector ? column_1.Column.new(fields[i], x) :\n            column_1.Column.new(fields[i], []));\n};\n/** @ignore */\nexports.selectFieldArgs = (args) => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nexports.selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nexports.selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nexports.selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof chunked_1.Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(vector_1.Vector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n        }\n        else if (value instanceof vector_1.Vector) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(column_1.Column, value.schema.fields.map((f, i) => column_1.Column.new(f, value.getChildAt(i))), res, j).length;\n        }\n        else if (value instanceof column_1.Column) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, [k, v], i) => (xs[0][i] = k, xs[1][i] = v, xs);\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n    let keys, n;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) {\n                return ret;\n            }\n            if (isArray(vals[0])) {\n                return _selectFieldArgs(vals[0], ret);\n            }\n            if (!(vals[0] instanceof data_1.Data || vals[0] instanceof vector_1.Vector || vals[0] instanceof type_1.DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field;\n    let val;\n    let [fields, values] = ret;\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof column_1.Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        }\n        else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof type_1.DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = schema_1.Field.new(field, val, true);\n            }\n            else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof data_1.Data && (values[valueIndex] = val = vector_1.Vector.new(val));\n                fields[++fieldIndex] = schema_1.Field.new(field, val.type, true);\n            }\n        }\n    }\n    return ret;\n}\n\n//# sourceMappingURL=args.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pretty_1 = require(\"../util/pretty\");\nconst compat_1 = require(\"../util/compat\");\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nfunction createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\nexports.createIsValidFunction = createIsValidFunction;\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return pretty_1.valueToString(x);\n    }\n    else if (compat_1.BigIntAvailable) {\n        return `${pretty_1.valueToString(x)}n`;\n    }\n    return `\"${pretty_1.valueToString(x)}\"`;\n}\n\n//# sourceMappingURL=valid.js.map\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst index_1 = require(\"./index\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass FloatVector extends base_1.BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        let ArrowType = vectorTypeToDataType(this);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return vector_1.Vector.new(data_1.Data.Float(type, 0, length, 0, null, input));\n                }\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return index_1.vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\nexports.FloatVector = FloatVector;\n/** @ignore */\nclass Float16Vector extends FloatVector {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    toFloat32Array() { return new Float32Array(this); }\n    toFloat64Array() { return new Float64Array(this); }\n}\nexports.Float16Vector = Float16Vector;\n/** @ignore */\nclass Float32Vector extends FloatVector {\n}\nexports.Float32Vector = Float32Vector;\n/** @ignore */\nclass Float64Vector extends FloatVector {\n}\nexports.Float64Vector = Float64Vector;\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === type_1.Float16) && (dataCtor !== Uint16Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Uint16Array: return type_1.Float16;\n        case Float32Array: return type_1.Float32;\n        case Float64Array: return type_1.Float64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Float16Vector: return type_1.Float16;\n        case Float32Vector: return type_1.Float32;\n        case Float64Vector: return type_1.Float64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=float.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"./stream\");\nconst buffer_1 = require(\"../util/buffer\");\n/** @ignore */\nclass RandomAccessFile extends stream_1.ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = buffer_1.toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\nexports.RandomAccessFile = RandomAccessFile;\n/** @ignore */\nclass AsyncRandomAccessFile extends stream_1.AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    async readInt32(position) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    async seek(position) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    async read(nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    async readAt(position, nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    async throw(value) { await this.close(); return { done: true, value }; }\n    async return(value) { await this.close(); return { done: true, value }; }\n}\nexports.AsyncRandomAccessFile = AsyncRandomAccessFile;\n\n//# sourceMappingURL=file.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AbstractVector {\n}\nexports.AbstractVector = AbstractVector;\nexports.Vector = AbstractVector;\n\n//# sourceMappingURL=vector.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass BinaryVector extends base_1.BaseVector {\n    asUtf8() {\n        return vector_1.Vector.new(this.data.clone(new type_1.Utf8()));\n    }\n}\nexports.BinaryVector = BinaryVector;\n\n//# sourceMappingURL=binary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"./data\");\nconst table_1 = require(\"./table\");\nconst vector_1 = require(\"./vector\");\nconst visitor_1 = require(\"./visitor\");\nconst schema_1 = require(\"./schema\");\nconst compat_1 = require(\"./util/compat\");\nconst chunked_1 = require(\"./vector/chunked\");\nconst args_1 = require(\"./util/args\");\nconst type_1 = require(\"./type\");\nconst recordbatch_1 = require(\"./util/recordbatch\");\nconst index_1 = require(\"./vector/index\");\nclass RecordBatch extends index_1.StructVector {\n    constructor(...args) {\n        let data;\n        let schema = args[0];\n        let children;\n        if (args[1] instanceof data_1.Data) {\n            [, data, children] = args;\n        }\n        else {\n            const fields = schema.fields;\n            const [, length, childData] = args;\n            data = data_1.Data.Struct(new type_1.Struct(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n    /** @nocollapse */\n    static from(options) {\n        if (compat_1.isIterable(options['values'])) {\n            return table_1.Table.from(options);\n        }\n        return table_1.Table.from(options);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        const [fs, xs] = args_1.selectFieldArgs(args);\n        const vs = xs.filter((x) => x instanceof vector_1.Vector);\n        return new RecordBatch(...recordbatch_1.ensureSameLengthData(new schema_1.Schema(fs), vs.map((x) => x.data)));\n    }\n    clone(data, children = this._children) {\n        return new RecordBatch(this._schema, data, children);\n    }\n    concat(...others) {\n        const schema = this._schema, chunks = chunked_1.Chunked.flatten(this, ...others);\n        return new table_1.Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n    get schema() { return this._schema; }\n    get numCols() { return this._schema.fields.length; }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch(schema, this.length, childData);\n    }\n}\nexports.RecordBatch = RecordBatch;\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nclass _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        super(schema, 0, schema.fields.map((f) => data_1.Data.new(f.type, 0, 0, 0)));\n    }\n}\nexports._InternalEmptyPlaceholderRecordBatch = _InternalEmptyPlaceholderRecordBatch;\n/** @ignore */\nclass DictionaryCollector extends visitor_1.Visitor {\n    constructor() {\n        super(...arguments);\n        this.dictionaries = new Map();\n    }\n    static collect(batch) {\n        return new DictionaryCollector().visit(batch.data, new type_1.Struct(batch.schema.fields)).dictionaries;\n    }\n    visit(data, type) {\n        if (type_1.DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        }\n        else {\n            data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    visitDictionary(data, type) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=recordbatch.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../table\");\nconst message_1 = require(\"./message\");\nconst column_1 = require(\"../column\");\nconst type_1 = require(\"../type\");\nconst schema_1 = require(\"../schema\");\nconst message_2 = require(\"./metadata/message\");\nconst metadata = require(\"./metadata/message\");\nconst file_1 = require(\"./metadata/file\");\nconst enum_1 = require(\"../enum\");\nconst stream_1 = require(\"../io/stream\");\nconst vectorassembler_1 = require(\"../visitor/vectorassembler\");\nconst jsontypeassembler_1 = require(\"../visitor/jsontypeassembler\");\nconst jsonvectorassembler_1 = require(\"../visitor/jsonvectorassembler\");\nconst buffer_1 = require(\"../util/buffer\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst interfaces_1 = require(\"../io/interfaces\");\nconst compat_1 = require(\"../util/compat\");\nclass RecordBatchWriter extends interfaces_1.ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new stream_1.AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        compat_1.isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if (compat_1.isPromise(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if (compat_1.isAsyncIterable(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof stream_1.AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new stream_1.AsyncByteQueue();\n            if (sink && compat_1.isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && compat_1.isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof table_1.Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof recordbatch_1.RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof recordbatch_1.RecordBatch) {\n            if (!(payload instanceof recordbatch_1._InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof table_1.Table) {\n            this.writeAll(payload.chunks);\n        }\n        else if (compat_1.isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = message_2.Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === enum_1.MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new file_1.FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === enum_1.MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new file_1.FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = buffer_1.toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(message_2.Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(message_1.MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = vectorassembler_1.VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = message_2.Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = vectorassembler_1.VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = message_2.Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\nexports.RecordBatchWriter = RecordBatchWriter;\n/** @ignore */\nclass RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if (compat_1.isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (compat_1.isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\nexports.RecordBatchStreamWriter = RecordBatchStreamWriter;\n/** @ignore */\nclass RecordBatchFileWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if (compat_1.isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (compat_1.isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = file_1.Footer.encode(new file_1.Footer(schema, enum_1.MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\nexports.RecordBatchFileWriter = RecordBatchFileWriter;\n/** @ignore */\nclass RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new file_1.FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new file_1.FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\nexports.RecordBatchJSONWriter = RecordBatchJSONWriter;\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof table_1.Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new jsontypeassembler_1.JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !type_1.DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const field = new schema_1.Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = jsonvectorassembler_1.JSONVectorAssembler.assemble(new column_1.Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': jsonvectorassembler_1.JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Schema_ = require(\"./fb/Schema\");\nconst Message_ = require(\"./fb/Message\");\nexports.ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexports.DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexports.TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexports.Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexports.UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexports.IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexports.MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexports.MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nvar Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type = exports.Type || (exports.Type = {}));\nvar BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType = exports.BufferType || (exports.BufferType = {}));\n\n//# sourceMappingURL=enum.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = require(\"../data\");\nconst vector_1 = require(\"../vector\");\nconst base_1 = require(\"./base\");\nconst index_1 = require(\"./index\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass DictionaryVector extends base_1.BaseVector {\n    constructor(data) {\n        super(data);\n        this.indices = vector_1.Vector.new(data.clone(this.type.indices));\n    }\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args;\n            const type = new type_1.Dictionary(values.type, indices, null, null);\n            return vector_1.Vector.new(data_1.Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return index_1.vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n    get dictionary() { return this.data.dictionary; }\n    reverseLookup(value) { return this.dictionary.indexOf(value); }\n    getKey(idx) { return this.indices.get(idx); }\n    getValue(key) { return this.dictionary.get(key); }\n    setKey(idx, key) { return this.indices.set(idx, key); }\n    setValue(key, value) { return this.dictionary.set(key, value); }\n}\nexports.DictionaryVector = DictionaryVector;\nDictionaryVector.prototype.indices = null;\n\n//# sourceMappingURL=dictionary.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\n/** @ignore */\nclass DecimalVector extends base_1.BaseVector {\n}\nexports.DecimalVector = DecimalVector;\n\n//# sourceMappingURL=decimal.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst run_1 = require(\"./run\");\nconst schema_1 = require(\"../schema\");\nconst type_1 = require(\"../type\");\nconst buffer_1 = require(\"./buffer\");\nconst builder_1 = require(\"../builder\");\n/** @ignore */\nclass ListBuilder extends builder_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._run = new run_1.Run();\n        this._offsets = new buffer_1.OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new type_1.List(new schema_1.Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    _flushPending(pending) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\nexports.ListBuilder = ListBuilder;\n\n//# sourceMappingURL=list.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst visitor_1 = require(\"../visitor\");\nconst enum_1 = require(\"../enum\");\nconst recordbatch_1 = require(\"../recordbatch\");\nconst buffer_1 = require(\"../util/buffer\");\nconst bit_1 = require(\"../util/bit\");\nconst args_1 = require(\"../util/args\");\nconst message_1 = require(\"../ipc/metadata/message\");\nconst type_1 = require(\"../type\");\n/** @ignore */\nclass VectorAssembler extends visitor_1.Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = args_1.selectVectorChildrenArgs(recordbatch_1.RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n    visit(vector) {\n        if (!type_1.DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!type_1.DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : bit_1.truncateBitmap(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new message_1.FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n    visitNull(_nullV) {\n        return this;\n    }\n    visitDictionary(vector) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\nexports.VectorAssembler = VectorAssembler;\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new message_1.BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === enum_1.UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    }\n    else if (type.mode === enum_1.UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = buffer_1.rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, bit_1.truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, bit_1.packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, buffer_1.rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, buffer_1.rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enum_1 = require(\"../enum\");\nconst flatbuffers_1 = require(\"flatbuffers\");\nvar ByteBuffer = flatbuffers_1.flatbuffers.ByteBuffer;\nconst message_1 = require(\"./metadata/message\");\nconst compat_1 = require(\"../util/compat\");\nconst file_1 = require(\"../io/file\");\nconst buffer_1 = require(\"../util/buffer\");\nconst stream_1 = require(\"../io/stream\");\nconst interfaces_1 = require(\"../io/interfaces\");\n/** @ignore */ const invalidMessageType = (type) => `Expected ${enum_1.MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${enum_1.MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nclass MessageReader {\n    constructor(source) {\n        this.source = source instanceof stream_1.ByteStream ? source : new stream_1.ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = buffer_1.toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = enum_1.MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(exports.PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: message_1.Message.decode(buf) };\n    }\n}\nexports.MessageReader = MessageReader;\n/** @ignore */\nclass AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof stream_1.AsyncByteStream ? source\n            : compat_1.isFileHandle(source)\n                ? new file_1.AsyncRandomAccessFile(source, byteLength)\n                : new stream_1.AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    async next() {\n        let r;\n        if ((r = await this.readMetadataLength()).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        if ((r = await this.readMetadata(r.value)).done) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        return r;\n    }\n    async throw(value) { return await this.source.throw(value); }\n    async return(value) { return await this.source.return(value); }\n    async readMessage(type) {\n        let r;\n        if ((r = await this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    async readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = buffer_1.toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    async readSchema(throwIfNull = false) {\n        const type = enum_1.MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    async readMetadataLength() {\n        const buf = await this.source.read(exports.PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    async readMetadata(metadataLength) {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) {\n            return interfaces_1.ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: message_1.Message.decode(buf) };\n    }\n}\nexports.AsyncMessageReader = AsyncMessageReader;\n/** @ignore */\nclass JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof interfaces_1.ArrowJSON ? source : new interfaces_1.ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = message_1.Message.fromJSON(_json.schema, enum_1.MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = message_1.Message.fromJSON(batch, enum_1.MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = message_1.Message.fromJSON(batch, enum_1.MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return interfaces_1.ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = enum_1.MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\nexports.JSONMessageReader = JSONMessageReader;\n/** @ignore */\nexports.PADDING = 4;\n/** @ignore */\nexports.MAGIC_STR = 'ARROW1';\n/** @ignore */\nexports.MAGIC = new Uint8Array(exports.MAGIC_STR.length);\nfor (let i = 0; i < exports.MAGIC_STR.length; i += 1 | 0) {\n    exports.MAGIC[i] = exports.MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nfunction checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = exports.MAGIC.length; ++i < n;) {\n        if (exports.MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.checkForMagicArrowString = checkForMagicArrowString;\n/** @ignore */\nexports.magicLength = exports.MAGIC.length;\n/** @ignore */\nexports.magicAndPadding = exports.magicLength + exports.PADDING;\n/** @ignore */\nexports.magicX2AndPadding = exports.magicLength * 2 + exports.PADDING;\n\n//# sourceMappingURL=message.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enum_1 = require(\"../enum\");\nconst visitor_1 = require(\"../visitor\");\nconst iterator_1 = require(\"./iterator\");\n/** @ignore */\nclass ToArrayVisitor extends visitor_1.Visitor {\n}\nexports.ToArrayVisitor = ToArrayVisitor;\n/** @ignore */\nfunction arrayOfVector(vector) {\n    const { type, length, stride } = vector;\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case enum_1.Type.Int:\n        case enum_1.Type.Float:\n        case enum_1.Type.Decimal:\n        case enum_1.Type.Time:\n        case enum_1.Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n    // Otherwise if not primitive, slow copy\n    return [...iterator_1.instance.visit(vector)];\n}\nToArrayVisitor.prototype.visitNull = arrayOfVector;\nToArrayVisitor.prototype.visitBool = arrayOfVector;\nToArrayVisitor.prototype.visitInt = arrayOfVector;\nToArrayVisitor.prototype.visitInt8 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16 = arrayOfVector;\nToArrayVisitor.prototype.visitInt32 = arrayOfVector;\nToArrayVisitor.prototype.visitInt64 = arrayOfVector;\nToArrayVisitor.prototype.visitUint8 = arrayOfVector;\nToArrayVisitor.prototype.visitUint16 = arrayOfVector;\nToArrayVisitor.prototype.visitUint32 = arrayOfVector;\nToArrayVisitor.prototype.visitUint64 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\nToArrayVisitor.prototype.visitDate = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTime = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal = arrayOfVector;\nToArrayVisitor.prototype.visitList = arrayOfVector;\nToArrayVisitor.prototype.visitStruct = arrayOfVector;\nToArrayVisitor.prototype.visitUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary = arrayOfVector;\nToArrayVisitor.prototype.visitInterval = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\nToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nexports.instance = new ToArrayVisitor();\n\n//# sourceMappingURL=toarray.js.map\n","\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dictionary_1 = require(\"../vector/dictionary\");\n/** @ignore */\nclass Value {\n    eq(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new Equals(this, other);\n    }\n    le(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new LTeq(this, other);\n    }\n    ge(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new GTeq(this, other);\n    }\n    lt(other) {\n        return new Not(this.ge(other));\n    }\n    gt(other) {\n        return new Not(this.le(other));\n    }\n    ne(other) {\n        return new Not(this.eq(other));\n    }\n}\nexports.Value = Value;\n/** @ignore */\nclass Literal extends Value {\n    constructor(v) {\n        super();\n        this.v = v;\n    }\n}\nexports.Literal = Literal;\n/** @ignore */\nclass Col extends Value {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    bind(batch) {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) {\n                throw new Error(`Failed to bind Col \"${this.name}\"`);\n            }\n        }\n        const vec = this.vector = batch.getChildAt(this.colidx);\n        return (idx) => vec.get(idx);\n    }\n}\nexports.Col = Col;\n/** @ignore */\nclass Predicate {\n    and(...expr) { return new And(this, ...expr); }\n    or(...expr) { return new Or(this, ...expr); }\n    not() { return new Not(this); }\n}\nexports.Predicate = Predicate;\n/** @ignore */\nclass ComparisonPredicate extends Predicate {\n    constructor(left, right) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n    bind(batch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindLitCol(batch, this.left, this.right);\n            }\n        }\n        else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindColCol(batch, this.left, this.right);\n            }\n        }\n    }\n}\nexports.ComparisonPredicate = ComparisonPredicate;\n/** @ignore */\nclass CombinationPredicate extends Predicate {\n    constructor(...children) {\n        super();\n        this.children = children;\n    }\n}\nexports.CombinationPredicate = CombinationPredicate;\n// add children to protoype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nclass And extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ands\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.every((p) => p(idx, batch));\n    }\n}\nexports.And = And;\n/** @ignore */\nclass Or extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ors\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.some((p) => p(idx, batch));\n    }\n}\nexports.Or = Or;\n/** @ignore */\nclass Equals extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v == right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof dictionary_1.DictionaryVector) {\n            let key;\n            const vector = col.vector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            }\n            else {\n                key = this.lastKey;\n            }\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            }\n            else {\n                return (idx) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        }\n        else {\n            return (idx, cols) => col_func(idx, cols) == lit.v;\n        }\n    }\n    _bindLitCol(batch, lit, col) {\n        // Equals is comutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\nexports.Equals = Equals;\n/** @ignore */\nclass LTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v <= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) <= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v <= col_func(idx, cols);\n    }\n}\nexports.LTeq = LTeq;\n/** @ignore */\nclass GTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v >= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) >= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v >= col_func(idx, cols);\n    }\n}\nexports.GTeq = GTeq;\n/** @ignore */\nclass Not extends Predicate {\n    constructor(child) {\n        super();\n        this.child = child;\n    }\n    bind(batch) {\n        const func = this.child.bind(batch);\n        return (idx, batch) => !func(idx, batch);\n    }\n}\nexports.Not = Not;\n/** @ignore */\nclass CustomPredicate extends Predicate {\n    constructor(next, bind_) {\n        super();\n        this.next = next;\n        this.bind_ = bind_;\n    }\n    bind(batch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\nexports.CustomPredicate = CustomPredicate;\nfunction lit(v) { return new Literal(v); }\nexports.lit = lit;\nfunction col(n) { return new Col(n); }\nexports.col = col;\nfunction and(...p) { return new And(...p); }\nexports.and = and;\nfunction or(...p) { return new Or(...p); }\nexports.or = or;\nfunction custom(next, bind) {\n    return new CustomPredicate(next, bind);\n}\nexports.custom = custom;\n\n//# sourceMappingURL=predicate.js.map\n"],"sourceRoot":""}