{"version":3,"file":"4007.cfd25ba5558e3595af64.js","mappings":"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","sources":["webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipColorIndicator.tsx","webpack://grafana/./packages/grafana-ui/src/components/VizTooltip/VizTooltipRow.tsx","webpack://grafana/./public/app/features/visualization/data-hover/ExemplarHoverView.tsx","webpack://grafana/./public/app/plugins/panel/geomap/style/types.ts","webpack://grafana/./public/app/plugins/panel/geomap/utils/uiUtils.tsx","webpack://grafana/./node_modules/ol/renderer/Map.js","webpack://grafana/./node_modules/ol/renderer/Composite.js","webpack://grafana/./node_modules/ol/pointer/EventType.js","webpack://grafana/./node_modules/ol/MapBrowserEventHandler.js","webpack://grafana/./node_modules/ol/MapProperty.js","webpack://grafana/./node_modules/ol/structs/PriorityQueue.js","webpack://grafana/./node_modules/ol/TileQueue.js","webpack://grafana/./node_modules/ol/control/Rotate.js","webpack://grafana/./node_modules/ol/control/defaults.js","webpack://grafana/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://grafana/./node_modules/ol/interaction/DragPan.js","webpack://grafana/./node_modules/ol/interaction/DragRotate.js","webpack://grafana/./node_modules/ol/render/Box.js","webpack://grafana/./node_modules/ol/interaction/DragBox.js","webpack://grafana/./node_modules/ol/interaction/DragZoom.js","webpack://grafana/./node_modules/ol/events/Key.js","webpack://grafana/./node_modules/ol/interaction/KeyboardPan.js","webpack://grafana/./node_modules/ol/interaction/KeyboardZoom.js","webpack://grafana/./node_modules/ol/Kinetic.js","webpack://grafana/./node_modules/ol/interaction/PinchRotate.js","webpack://grafana/./node_modules/ol/interaction/PinchZoom.js","webpack://grafana/./node_modules/ol/interaction/defaults.js","webpack://grafana/./node_modules/ol/Map.js","webpack://grafana/./public/app/plugins/panel/geomap/utils/utils.ts","webpack://grafana/./node_modules/ol/Collection.js","webpack://grafana/./node_modules/ol/CollectionEventType.js","webpack://grafana/./node_modules/ol/MapBrowserEvent.js","webpack://grafana/./node_modules/ol/MapBrowserEventType.js","webpack://grafana/./node_modules/ol/MapEvent.js","webpack://grafana/./node_modules/ol/MapEventType.js","webpack://grafana/./node_modules/ol/TileState.js","webpack://grafana/./node_modules/ol/ViewProperty.js","webpack://grafana/./node_modules/ol/centerconstraint.js","webpack://grafana/./node_modules/ol/resolutionconstraint.js","webpack://grafana/./node_modules/ol/View.js","webpack://grafana/./node_modules/ol/ViewHint.js","webpack://grafana/./node_modules/ol/color.js","webpack://grafana/./node_modules/ol/control/Attribution.js","webpack://grafana/./node_modules/ol/control/Control.js","webpack://grafana/./node_modules/ol/control/Zoom.js","webpack://grafana/./node_modules/ol/css.js","webpack://grafana/./node_modules/ol/dom.js","webpack://grafana/./node_modules/ol/easing.js","webpack://grafana/./node_modules/ol/events/condition.js","webpack://grafana/./node_modules/ol/interaction/Interaction.js","webpack://grafana/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://grafana/./node_modules/ol/interaction/Pointer.js","webpack://grafana/./node_modules/ol/interaction/Property.js","webpack://grafana/./node_modules/ol/layer/Base.js","webpack://grafana/./node_modules/ol/layer/Group.js","webpack://grafana/./node_modules/ol/layer/Layer.js","webpack://grafana/./node_modules/ol/layer/Property.js","webpack://grafana/./node_modules/ol/render/Event.js","webpack://grafana/./node_modules/ol/render/EventType.js","webpack://grafana/./node_modules/ol/render/canvas.js","webpack://grafana/./node_modules/ol/rotationconstraint.js","webpack://grafana/./node_modules/ol/size.js","webpack://grafana/./node_modules/ol/style/IconImageCache.js","webpack://grafana/./node_modules/ol/tilegrid/common.js"],"sourcesContent":["import { css, cx } from '@emotion/css';\n\nimport { FALLBACK_COLOR, GrafanaTheme2 } from '@grafana/data';\nimport { LineStyle } from '@grafana/schema';\n\nimport { useStyles2 } from '../../themes';\nimport { SeriesIcon } from '../VizLegend/SeriesIcon';\n\nimport { ColorIndicator, DEFAULT_COLOR_INDICATOR } from './types';\nimport { getColorIndicatorClass } from './utils';\n\nexport enum ColorIndicatorPosition {\n  Leading,\n  Trailing,\n}\n\ninterface Props {\n  color?: string;\n  colorIndicator?: ColorIndicator;\n  position?: ColorIndicatorPosition;\n  lineStyle?: LineStyle;\n}\n\nexport type ColorIndicatorStyles = ReturnType<typeof getStyles>;\n\nexport const VizTooltipColorIndicator = ({\n  color = FALLBACK_COLOR,\n  colorIndicator = DEFAULT_COLOR_INDICATOR,\n  position = ColorIndicatorPosition.Leading,\n  lineStyle,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (colorIndicator === ColorIndicator.series) {\n    return (\n      <SeriesIcon\n        color={color}\n        lineStyle={lineStyle}\n        className={position === ColorIndicatorPosition.Leading ? styles.leading : styles.trailing}\n      />\n    );\n  }\n\n  return (\n    <span\n      style={{ backgroundColor: color }}\n      className={cx(\n        position === ColorIndicatorPosition.Leading ? styles.leading : styles.trailing,\n        getColorIndicatorClass(colorIndicator, styles)\n      )}\n    />\n  );\n};\n\n// @TODO Update classes/add svgs\nconst getStyles = (theme: GrafanaTheme2) => ({\n  leading: css({\n    marginRight: theme.spacing(0.5),\n  }),\n  trailing: css({\n    marginLeft: theme.spacing(0.5),\n  }),\n  value: css({\n    width: '12px',\n    height: '12px',\n    borderRadius: theme.shape.radius.default,\n    fontWeight: 500,\n    minWidth: '12px',\n  }),\n  hexagon: css({}),\n  pie_1_4: css({}),\n  pie_2_4: css({}),\n  pie_3_4: css({}),\n  marker_sm: css({\n    width: '4px',\n    height: '4px',\n    borderRadius: theme.shape.radius.circle,\n    minWidth: '4px',\n  }),\n  marker_md: css({\n    width: '8px',\n    height: '8px',\n    borderRadius: theme.shape.radius.circle,\n    minWidth: '8px',\n  }),\n  marker_lg: css({\n    width: '12px',\n    height: '12px',\n    borderRadius: theme.shape.radius.circle,\n    minWidth: '12px',\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport { CSSProperties, ReactNode, useEffect, useRef, useState } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { InlineToast } from '../InlineToast/InlineToast';\nimport { Tooltip } from '../Tooltip';\n\nimport { ColorIndicatorPosition, VizTooltipColorIndicator } from './VizTooltipColorIndicator';\nimport { ColorPlacement, VizTooltipItem } from './types';\n\ninterface VizTooltipRowProps extends Omit<VizTooltipItem, 'value'> {\n  value: string | number | null | ReactNode;\n  justify?: string;\n  isActive?: boolean; // for series list\n  marginRight?: string;\n  isPinned: boolean;\n  showValueScroll?: boolean;\n}\n\nenum LabelValueTypes {\n  label = 'label',\n  value = 'value',\n}\n\nconst SUCCESSFULLY_COPIED_TEXT = 'Copied to clipboard';\nconst SHOW_SUCCESS_DURATION = 2 * 1000;\nconst HORIZONTAL_PX_PER_CHAR = 7;\n\nexport const VizTooltipRow = ({\n  label,\n  value,\n  color,\n  colorIndicator,\n  colorPlacement = ColorPlacement.first,\n  justify = 'flex-start',\n  isActive = false,\n  marginRight = '0px',\n  isPinned,\n  lineStyle,\n  showValueScroll,\n}: VizTooltipRowProps) => {\n  const styles = useStyles2(getStyles, justify, marginRight);\n\n  const innerValueScrollStyle: CSSProperties = showValueScroll\n    ? {\n        maxHeight: 55,\n        whiteSpace: 'wrap',\n        wordBreak: 'break-word',\n        overflowY: 'auto',\n      }\n    : {\n        whiteSpace: 'wrap',\n        wordBreak: 'break-word',\n      };\n\n  const [showLabelTooltip, setShowLabelTooltip] = useState(false);\n\n  const [copiedText, setCopiedText] = useState<Record<string, string> | null>(null);\n  const [showCopySuccess, setShowCopySuccess] = useState(false);\n\n  const labelRef = useRef<null | HTMLDivElement>(null);\n  const valueRef = useRef<null | HTMLDivElement>(null);\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    if (showCopySuccess) {\n      timeoutId = setTimeout(() => {\n        setShowCopySuccess(false);\n      }, SHOW_SUCCESS_DURATION);\n    }\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [showCopySuccess]);\n\n  const copyToClipboard = async (text: string, type: LabelValueTypes) => {\n    if (!(navigator?.clipboard && window.isSecureContext)) {\n      fallbackCopyToClipboard(text, type);\n      return;\n    }\n\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText({ [`${type}`]: text });\n      setShowCopySuccess(true);\n    } catch (error) {\n      setCopiedText(null);\n    }\n  };\n\n  const fallbackCopyToClipboard = (text: string, type: LabelValueTypes) => {\n    // Use a fallback method for browsers/contexts that don't support the Clipboard API.\n    const textarea = document.createElement('textarea');\n    labelRef.current?.appendChild(textarea);\n    textarea.value = text;\n    textarea.focus();\n    textarea.select();\n    try {\n      const successful = document.execCommand('copy');\n      if (successful) {\n        setCopiedText({ [`${type}`]: text });\n        setShowCopySuccess(true);\n      }\n    } catch (err) {\n      console.error('Unable to copy to clipboard', err);\n    }\n\n    textarea.remove();\n  };\n\n  const onMouseEnterLabel = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.currentTarget.offsetWidth < event.currentTarget.scrollWidth) {\n      setShowLabelTooltip(true);\n    }\n  };\n\n  const onMouseLeaveLabel = () => setShowLabelTooltip(false);\n\n  // if label is > 50% window width, try to put label/value pairs on new lines\n  if (label.length * HORIZONTAL_PX_PER_CHAR > window.innerWidth / 2) {\n    label = label.replaceAll('{', '{\\n  ').replaceAll('}', '\\n}').replaceAll(', ', ',\\n  ');\n  }\n\n  return (\n    <div className={styles.contentWrapper}>\n      {(color || label) && (\n        <div className={styles.valueWrapper}>\n          {color && colorPlacement === ColorPlacement.first && (\n            <VizTooltipColorIndicator color={color} colorIndicator={colorIndicator} lineStyle={lineStyle} />\n          )}\n          {!isPinned ? (\n            <div className={cx(styles.label, isActive && styles.activeSeries)}>{label}</div>\n          ) : (\n            <>\n              <Tooltip content={label} interactive={false} show={showLabelTooltip}>\n                <>\n                  {showCopySuccess && copiedText?.label && (\n                    <InlineToast placement=\"top\" referenceElement={labelRef.current}>\n                      {SUCCESSFULLY_COPIED_TEXT}\n                    </InlineToast>\n                  )}\n                  {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n                  <div\n                    className={cx(styles.label, isActive && styles.activeSeries, navigator?.clipboard && styles.copy)}\n                    onMouseEnter={onMouseEnterLabel}\n                    onMouseLeave={onMouseLeaveLabel}\n                    onClick={() => copyToClipboard(label, LabelValueTypes.label)}\n                    ref={labelRef}\n                  >\n                    {label}\n                  </div>\n                </>\n              </Tooltip>\n            </>\n          )}\n        </div>\n      )}\n\n      <div className={styles.valueWrapper}>\n        {color && colorPlacement === ColorPlacement.leading && (\n          <VizTooltipColorIndicator\n            color={color}\n            colorIndicator={colorIndicator}\n            position={ColorIndicatorPosition.Leading}\n            lineStyle={lineStyle}\n          />\n        )}\n\n        {!isPinned ? (\n          <div className={cx(styles.value, isActive)} style={innerValueScrollStyle}>\n            {value}\n          </div>\n        ) : (\n          <>\n            {showCopySuccess && copiedText?.value && (\n              <InlineToast placement=\"top\" referenceElement={valueRef.current}>\n                {SUCCESSFULLY_COPIED_TEXT}\n              </InlineToast>\n            )}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n            <div\n              className={cx(styles.value, isActive, navigator?.clipboard && styles.copy)}\n              style={innerValueScrollStyle}\n              onClick={() => copyToClipboard(value ? value.toString() : '', LabelValueTypes.value)}\n              ref={valueRef}\n            >\n              {value}\n            </div>\n          </>\n        )}\n\n        {color && colorPlacement === ColorPlacement.trailing && (\n          <VizTooltipColorIndicator\n            color={color}\n            colorIndicator={colorIndicator}\n            position={ColorIndicatorPosition.Trailing}\n            lineStyle={lineStyle}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2, justify: string, marginRight: string) => ({\n  contentWrapper: css({\n    display: 'flex',\n    alignItems: 'start',\n    justifyContent: justify,\n    marginRight: marginRight,\n  }),\n  label: css({\n    color: theme.colors.text.secondary,\n    fontWeight: 400,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    marginRight: theme.spacing(2),\n  }),\n  value: css({\n    fontWeight: 500,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  }),\n  valueWrapper: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  activeSeries: css({\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.colors.text.maxContrast,\n  }),\n  copy: css({\n    cursor: 'pointer',\n  }),\n});\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, LinkModel } from '@grafana/data';\nimport { DataLinkButton, useStyles2 } from '@grafana/ui';\nimport { VizTooltipRow } from '@grafana/ui/src/components/VizTooltip/VizTooltipRow';\nimport { renderValue } from 'app/plugins/panel/geomap/utils/uiUtils';\n\nimport { DisplayValue } from './DataHoverView';\n\nexport interface Props {\n  displayValues: DisplayValue[];\n  links?: LinkModel[];\n  header?: string;\n}\n\nexport const ExemplarHoverView = ({ displayValues, links, header = 'Exemplar' }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  const time = displayValues.find((val) => val.name === 'Time');\n  displayValues = displayValues.filter((val) => val.name !== 'Time'); // time?\n\n  return (\n    <div className={styles.exemplarWrapper}>\n      <div className={styles.exemplarHeader}>\n        <span className={styles.title}>{header}</span>\n        {time && <span className={styles.time}>{renderValue(time.valueString)}</span>}\n      </div>\n      <div className={styles.exemplarContent}>\n        {displayValues.map((displayValue, i) => {\n          return (\n            <VizTooltipRow\n              key={i}\n              label={displayValue.name}\n              value={renderValue(displayValue.valueString)}\n              justify={'space-between'}\n              isPinned={false}\n            />\n          );\n        })}\n      </div>\n      {links && links.length > 0 && (\n        <div className={styles.exemplarFooter}>\n          {links.map((link, i) => (\n            <DataLinkButton link={link} key={i} buttonProps={{ size: 'md' }} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2, padding = 0) => {\n  return {\n    exemplarWrapper: css({\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      gap: 4,\n      whiteSpace: 'pre',\n      borderRadius: theme.shape.radius.default,\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.weak}`,\n      boxShadow: `0 4px 8px ${theme.colors.background.primary}`,\n    }),\n    exemplarHeader: css({\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      gap: theme.spacing(0.5),\n      color: theme.colors.text.secondary,\n      padding: theme.spacing(1),\n    }),\n    time: css({\n      color: theme.colors.text.primary,\n    }),\n    exemplarContent: css({\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      gap: 4,\n      borderTop: `1px solid ${theme.colors.border.medium}`,\n      padding: theme.spacing(1),\n    }),\n    exemplarFooter: css({\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(1),\n      borderTop: `1px solid ${theme.colors.border.medium}`,\n      gap: 4,\n    }),\n    linkButton: css({\n      width: 'fit-content',\n    }),\n    label: css({\n      color: theme.colors.text.secondary,\n      fontWeight: 400,\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      marginRight: theme.spacing(0.5),\n    }),\n    value: css({\n      fontWeight: 500,\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    }),\n    title: css({\n      fontWeight: theme.typography.fontWeightMedium,\n      overflow: 'hidden',\n      display: 'inline-block',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      flexGrow: 1,\n    }),\n  };\n};\n","import { Style } from 'ol/style';\n\nimport {\n  ColorDimensionConfig,\n  ResourceDimensionConfig,\n  ResourceDimensionMode,\n  ScaleDimensionConfig,\n  ScalarDimensionConfig,\n  ScalarDimensionMode,\n  TextDimensionConfig,\n} from '@grafana/schema';\nimport { DimensionSupplier } from 'app/features/dimensions';\n\nexport enum GeometryTypeId {\n  Point = 'point',\n  Line = 'line',\n  Polygon = 'polygon',\n  Any = '*any*',\n}\n\n// StyleConfig is saved in panel json and is used to configure how items get rendered\nexport interface StyleConfig {\n  color?: ColorDimensionConfig;\n  opacity?: number; // defaults to 80%\n\n  // For non-points\n  lineWidth?: number;\n\n  // Used for points and dynamic text\n  size?: ScaleDimensionConfig;\n  symbol?: ResourceDimensionConfig;\n  symbolAlign?: SymbolAlign;\n\n  // Can show markers and text together!\n  text?: TextDimensionConfig;\n  textConfig?: TextStyleConfig;\n\n  // Allow for rotation of markers\n  rotation?: ScalarDimensionConfig;\n}\n\nexport const DEFAULT_SIZE = 5;\n\nexport enum TextAlignment {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right',\n}\nexport enum TextBaseline {\n  Top = 'top',\n  Middle = 'middle',\n  Bottom = 'bottom',\n}\nexport enum HorizontalAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right',\n}\nexport enum VerticalAlign {\n  Top = 'top',\n  Center = 'center',\n  Bottom = 'bottom',\n}\n\nexport const defaultStyleConfig = Object.freeze({\n  size: {\n    fixed: DEFAULT_SIZE,\n    min: 2,\n    max: 15,\n  },\n  color: {\n    fixed: 'dark-green', // picked from theme\n  },\n  opacity: 0.4,\n  symbol: {\n    mode: ResourceDimensionMode.Fixed,\n    fixed: 'img/icons/marker/circle.svg',\n  },\n  symbolAlign: {\n    horizontal: HorizontalAlign.Center,\n    vertical: VerticalAlign.Center,\n  },\n  textConfig: {\n    fontSize: 12,\n    textAlign: TextAlignment.Center,\n    textBaseline: TextBaseline.Middle,\n    offsetX: 0,\n    offsetY: 0,\n  },\n  rotation: {\n    fixed: 0,\n    mode: ScalarDimensionMode.Mod,\n    min: -360,\n    max: 360,\n  },\n});\n\nexport interface SymbolAlign {\n  horizontal?: HorizontalAlign;\n  vertical?: VerticalAlign;\n}\n\n/**\n * Static options for text display.  See:\n * https://openlayers.org/en/latest/apidoc/module-ol_style_Text.html\n */\nexport interface TextStyleConfig {\n  fontSize?: number;\n  offsetX?: number;\n  offsetY?: number;\n  textAlign?: TextAlignment;\n  textBaseline?: TextBaseline;\n}\n\n// Applying the config to real data gives the values\nexport interface StyleConfigValues {\n  color: string;\n  opacity?: number;\n  lineWidth?: number;\n  size?: number;\n  symbol?: string; // the point symbol\n  symbolAlign?: SymbolAlign;\n  rotation?: number;\n  text?: string;\n\n  // Pass though (not value dependant)\n  textConfig?: TextStyleConfig;\n}\n\nexport enum GeoJSONPolyStyles {\n  color = 'fill',\n  opacity = 'fill-opacity',\n  lineWidth = 'stroke-width',\n}\n\nexport enum GeoJSONPointStyles {\n  color = 'marker-color',\n  size = 'marker-size',\n}\n\nexport enum GeoJSONLineStyles {\n  color = 'stroke',\n  lineWidth = 'stroke-width',\n}\n\n/** When the style depends on a field */\nexport interface StyleConfigFields {\n  color?: string;\n  size?: string;\n  text?: string;\n  rotation?: string;\n}\n\nexport interface StyleDimensions {\n  color?: DimensionSupplier<string>;\n  size?: DimensionSupplier<number>;\n  text?: DimensionSupplier<string>;\n  rotation?: DimensionSupplier<number>;\n}\n\nexport interface StyleConfigState {\n  config: StyleConfig;\n  hasText?: boolean;\n  base: StyleConfigValues;\n  fields?: StyleConfigFields;\n  dims?: StyleDimensions;\n  maker: StyleMaker;\n}\n\n/**\n * Given values create a style\n */\nexport type StyleMaker = (values: StyleConfigValues) => Style | Style[];\n","import { cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { isUrl } from './utils';\n\nexport const renderValue = (value: string): string | React.ReactNode => {\n  if (isUrl(value)) {\n    return (\n      <a href={value} target={'_blank'} className={cx('external-link')} rel=\"noreferrer\">\n        {value}\n      </a>\n    );\n  }\n\n  return value;\n};\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","import { Map as OpenLayersMap } from 'ol';\nimport { defaults as interactionDefaults } from 'ol/interaction';\n\nimport { SelectableValue } from '@grafana/data';\nimport { DataFrame, GrafanaTheme2 } from '@grafana/data/src';\nimport { getColorDimension, getScalarDimension, getScaledDimension, getTextDimension } from 'app/features/dimensions';\nimport { getGrafanaDatasource } from 'app/plugins/datasource/grafana/datasource';\n\nimport { GeomapPanel } from '../GeomapPanel';\nimport { defaultStyleConfig, StyleConfig, StyleConfigState, StyleDimensions } from '../style/types';\nimport { Options, MapLayerState } from '../types';\n\nexport function getStyleDimension(\n  frame: DataFrame | undefined,\n  style: StyleConfigState,\n  theme: GrafanaTheme2,\n  customStyleConfig?: StyleConfig\n) {\n  const dims: StyleDimensions = {};\n  if (customStyleConfig && Object.keys(customStyleConfig).length) {\n    dims.color = getColorDimension(frame, customStyleConfig.color ?? defaultStyleConfig.color, theme);\n    dims.size = getScaledDimension(frame, customStyleConfig.size ?? defaultStyleConfig.size);\n    dims.rotation = getScalarDimension(frame, customStyleConfig.rotation ?? defaultStyleConfig.rotation);\n    if (customStyleConfig.text && (customStyleConfig.text.field || customStyleConfig.text.fixed)) {\n      dims.text = getTextDimension(frame, customStyleConfig.text!);\n    }\n  } else {\n    if (style.fields) {\n      if (style.fields.color) {\n        dims.color = getColorDimension(frame, style.config.color ?? defaultStyleConfig.color, theme);\n      }\n      if (style.fields.size) {\n        dims.size = getScaledDimension(frame, style.config.size ?? defaultStyleConfig.size);\n      }\n      if (style.fields.text) {\n        dims.text = getTextDimension(frame, style.config.text!);\n      }\n      if (style.fields.rotation) {\n        dims.rotation = getScalarDimension(frame, style.config.rotation ?? defaultStyleConfig.rotation);\n      }\n    }\n  }\n\n  return dims;\n}\n\nlet publicGeoJSONFiles: Array<SelectableValue<string>> | undefined = undefined;\n\nexport function getPublicGeoJSONFiles(): Array<SelectableValue<string>> {\n  if (!publicGeoJSONFiles) {\n    publicGeoJSONFiles = [];\n    initGeojsonFiles(); // async\n  }\n  return publicGeoJSONFiles;\n}\n\n// This will find all geojson files in the maps and gazetteer folders\nasync function initGeojsonFiles() {\n  const ds = await getGrafanaDatasource();\n  for (let folder of ['maps', 'gazetteer']) {\n    ds.listFiles(folder).subscribe({\n      next: (frame) => {\n        frame.forEach((item) => {\n          if (item.name.endsWith('.geojson')) {\n            const value = `public/${folder}/${item.name}`;\n            publicGeoJSONFiles!.push({\n              value,\n              label: value,\n            });\n          }\n        });\n      },\n    });\n  }\n}\n\nexport const getNewOpenLayersMap = (panel: GeomapPanel, options: Options, div: HTMLDivElement) => {\n  const view = panel.initMapView(options.view);\n  return (panel.map = new OpenLayersMap({\n    view: view,\n    pixelRatio: 1, // or zoom?\n    layers: [], // loaded explicitly below\n    controls: [],\n    target: div,\n    interactions: interactionDefaults({\n      mouseWheelZoom: false, // managed by initControls\n    }),\n  }));\n};\n\nexport const updateMap = (panel: GeomapPanel, options: Options) => {\n  panel.initControls(options.controls);\n  panel.forceUpdate(); // first render\n};\n\nexport const notifyPanelEditor = (geomapPanel: GeomapPanel, layers: MapLayerState[], selected: number) => {\n  // Notify the panel editor\n  if (geomapPanel.panelContext && geomapPanel.panelContext.onInstanceStateChange) {\n    geomapPanel.panelContext.onInstanceStateChange({\n      map: geomapPanel.map,\n      layers: layers,\n      selected: selected,\n      actions: geomapPanel.actions,\n    });\n  }\n};\n\nexport const getNextLayerName = (panel: GeomapPanel) => {\n  let idx = panel.layers.length; // since basemap is 0, this looks right\n  while (true && idx < 100) {\n    const name = `Layer ${idx++}`;\n    if (!panel.byName.has(name)) {\n      return name;\n    }\n  }\n\n  return `Layer ${Date.now()}`;\n};\n\nexport function isSegmentVisible(\n  map: OpenLayersMap,\n  pixelTolerance: number,\n  segmentStartCoords: number[],\n  segmentEndCoords: number[]\n): boolean {\n  // For a segment, calculate x and y pixel lengths\n  //TODO: let's try to find a less intensive check\n  const pixelStart = map.getPixelFromCoordinate(segmentStartCoords);\n  const pixelEnd = map.getPixelFromCoordinate(segmentEndCoords);\n  const deltaX = Math.abs(pixelStart[0] - pixelEnd[0]);\n  const deltaY = Math.abs(pixelStart[1] - pixelEnd[1]);\n  // If greater than pixel tolerance in either direction, segment is visible\n  if (deltaX > pixelTolerance || deltaY > pixelTolerance) {\n    return true;\n  }\n  return false;\n}\n\nexport const isUrl = (url: string) => {\n  try {\n    const newUrl = new URL(url);\n    return newUrl.protocol.includes('http');\n  } catch (_) {\n    return false;\n  }\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n"],"names":["ColorIndicatorPosition","VizTooltipColorIndicator","color","colorIndicator","position","lineStyle","styles","getStyles","SeriesIcon","theme","LabelValueTypes","SUCCESSFULLY_COPIED_TEXT","SHOW_SUCCESS_DURATION","HORIZONTAL_PX_PER_CHAR","VizTooltipRow","label","value","colorPlacement","justify","isActive","marginRight","isPinned","showValueScroll","innerValueScrollStyle","showLabelTooltip","setShowLabelTooltip","copiedText","setCopiedText","showCopySuccess","setShowCopySuccess","labelRef","valueRef","timeoutId","copyToClipboard","text","type","fallbackCopyToClipboard","textarea","err","onMouseEnterLabel","event","onMouseLeaveLabel","Tooltip","InlineToast","ExemplarHoverView","displayValues","links","header","time","val","displayValue","i","link","padding","GeometryTypeId","DEFAULT_SIZE","TextAlignment","TextBaseline","HorizontalAlign","VerticalAlign","defaultStyleConfig","GeoJSONPolyStyles","GeoJSONPointStyles","GeoJSONLineStyles","renderValue","MapRenderer","Disposable","map","frameState","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","managed","feature","layer","geometry","projection","translatedCoordinate","offsets","projectionExtent","worldWidth","layerStates","numLayers","matches","tmpCoord","j","layerState","layerRenderer","source","coordinates","order","m","a","b","expireIconCache","CompositeMapRenderer","Map","ObjectEventType","style","container","layerStatesArray","declutterLayers","previousElement","ii","sourceState","element","MapBrowserEventHandler","Target","moveTolerance","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","id","pointerId","doc","dragging","originalEvent","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","index","key","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","n","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","state","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","center","deltaX","deltaY","Rotate","Control","options","className","compassClassName","tipLabel","button","cssClasses","view","rotation","mapEvent","transform","contains","defaults","controls","Collection","Zoom","Attribution","DoubleClickZoom","Interaction","mapBrowserEvent","stopEvent","browserEvent","anchor","delta","DragPan","Pointer","condition","targetPointers","centroid","distance","angle","centerpx","dest","DragRotate","size","offset","theta","RenderBox","startPixel","endPixel","px","Polygon","DragBoxEventType","DragBoxEvent","DragBox","width","height","completeBox","DragZoom","rotatedExtent","resolution","factor","KeyboardPan","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","x","y","lastIndex","firstIndex","duration","dx","dy","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","direction","interactions","kinetic","MouseWheelZoom","removeLayerMapProperty","Layer","setLayerMapProperty","layers","optionsInternal","createOptionsInternal","MapProperty","View","viewOptions","CollectionEventType","control","interaction","overlay","pixel","features","addLayersFrom","layerGroup","viewportPosition","viewportSize","scaleX","scaleY","eventPosition","group","collection","renderer","viewCoordinate","targetElement","eventType","rootNode","target","interactionsArray","tileQueue","hints","ViewHint","lowOnFrameBudget","MapEvent","MapEventType","postRenderFunctions","Composite","keyboardEventTarget","Group","previousFrameState","viewHints","oldLayerGroup","computedStyle","oldSize","values","overlays","getStyleDimension","frame","customStyleConfig","dims","publicGeoJSONFiles","getPublicGeoJSONFiles","initGeojsonFiles","ds","folder","item","getNewOpenLayersMap","panel","div","updateMap","notifyPanelEditor","geomapPanel","selected","getNextLayerName","idx","name","isSegmentVisible","pixelTolerance","segmentStartCoords","segmentEndCoords","pixelStart","pixelEnd","isUrl","url","Property","CollectionEvent","array","arr","f","elem","prev","except","activePointers","createExtent","extent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","DEFAULT_MIN_ZOOM","properties","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","args","animationCount","animationCallback","start","series","animation","isNoopAnimation","jj","now","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","constrainedResolution","constrainedRotation","currentCenter","currentResolution","w","h","zoom","enabled","max","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","userProjection","cosAngle","sinAngle","coords","stride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","minZoom","maxZoom","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","toString","fromNamed","el","rgb","fromString","cache","cacheSize","s","fromStringInternal_","asArray","r","g","d","hasAlpha","normalize","isStringColor","expandClassName","collapseLabel","collapseClassName","activeLabel","visibleAttributions","collapsible","attributions","visible","collapsed","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","context","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeNode","node","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","easeIn","t","easeOut","inAndOut","linear","upAndDown","all","conditions","pass","altKeyOnly","altShiftKeysOnly","focus","activeElement","focusWithTabindex","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","touchOnly","pointerEvt","penOnly","primaryAction","active","pan","zoomByDelta","wheelEvent","timeLeft","useAnchor","PointerInteraction","handledUp","handled","pointerEvents","length","clientX","clientY","BaseLayer","zIndex","states","background","opacity","zindex","GroupEvent","LayerGroup","baseOptions","layersArray","listenerKeys","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","layerExtent","inView","getAttributions","evt","arrayLayerState","RenderEvent","inversePixelTransform","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","len","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","scale","executeLabelInstructions","contextInstructions","disable","createSnapToN","createSnapToZero","buffer","num","hasArea","toSize","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE"],"sourceRoot":""}