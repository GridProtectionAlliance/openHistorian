{"version":3,"file":"graphPlugin.b472c469c99d1c59b039.js","mappings":"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","sources":["webpack://grafana/./public/app/angular/AngularLocationWrapper.ts","webpack://grafana/./public/app/angular/panel/metrics_panel_ctrl.ts","webpack://grafana/./public/app/angular/panel/panel_ctrl.ts","webpack://grafana/./public/app/features/alerting/state/ThresholdMapper.ts","webpack://grafana/./public/app/features/dashboard/utils/loadSnapshotData.ts","webpack://grafana/./public/app/features/panel/panellinks/linkSuppliers.ts","webpack://grafana/./public/app/plugins/panel/graph/jquery.flot.events.ts","webpack://grafana/./public/app/plugins/panel/graph/Legend/LegendSeriesItem.tsx","webpack://grafana/./public/app/plugins/panel/graph/Legend/Legend.tsx","webpack://grafana/./public/app/plugins/panel/graph/align_yaxes.ts","webpack://grafana/./public/app/plugins/panel/graph/event_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/graph_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/histogram.ts","webpack://grafana/./public/app/plugins/panel/graph/threshold_manager.ts","webpack://grafana/./public/app/core/utils/timeRegions.ts","webpack://grafana/./public/app/plugins/panel/graph/time_region_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/utils.ts","webpack://grafana/./public/app/plugins/panel/graph/graph.ts","webpack://grafana/./public/app/plugins/panel/graph/series_overrides_ctrl.ts","webpack://grafana/./public/app/plugins/panel/graph/thresholds_form.ts","webpack://grafana/./public/app/plugins/panel/graph/time_regions_form.ts","webpack://grafana/./public/app/plugins/panel/graph/annotation_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/event_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphContextMenuCtrl.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphMigrations.ts","webpack://grafana/./public/app/plugins/panel/graph/axes_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/data_processor.ts","webpack://grafana/./public/app/plugins/panel/graph/template.ts","webpack://grafana/./public/app/plugins/panel/graph/module.ts"],"sourcesContent":["import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime';\n\n// Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\nconst DEFAULT_PORTS: Record<string, number> = { http: 80, https: 443, ftp: 21 };\n\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn: Function, replacement?: string) {\n    let self = this;\n\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl(): string {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash?: string | null) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host(): string {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash,\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port(): number | null {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol(): string {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search?: any, paramValue?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue,\n      });\n\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = { ...search };\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key of Object.keys(newQuery)) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push({ ...locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith('?')) {\n        locationService.push({ ...locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n","import { isArray } from 'lodash';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  DataFrame,\n  DataQueryResponse,\n  DataSourceApi,\n  LegacyResponseData,\n  LoadingState,\n  PanelData,\n  PanelEvents,\n  TimeRange,\n  toDataFrameDTO,\n  toLegacyResponseData,\n} from '@grafana/data';\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { applyPanelTimeOverrides } from 'app/features/dashboard/utils/panel';\n\nimport { PanelQueryRunner } from '../../features/query/state/PanelQueryRunner';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  declare datasource: DataSourceApi;\n  declare range: TimeRange;\n\n  contextSrv: ContextSrv;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo?: string;\n  skipDataOnInit = false;\n  dataList: LegacyResponseData[] = [];\n  querySubscription?: Unsubscribable | null;\n  useDataFrames = false;\n  panelData?: PanelData;\n\n  constructor($scope: any, $injector: any) {\n    super($scope, $injector);\n\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.panel.datasource = this.panel.datasource || null;\n\n    this.events.on(PanelEvents.refresh, this.onMetricsPanelRefresh.bind(this));\n    this.events.on(PanelEvents.panelTeardown, this.onPanelTearDown.bind(this));\n    this.events.on(PanelEvents.componentDidMount, this.onMetricsPanelMounted.bind(this));\n  }\n\n  private onMetricsPanelMounted() {\n    const queryRunner = this.panel.getQueryRunner() as PanelQueryRunner;\n    this.querySubscription = queryRunner\n      .getData({ withTransforms: true, withFieldConfig: true })\n      .subscribe(this.panelDataObserver);\n  }\n\n  private onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      // backward compatibility\n      if (!isArray(data)) {\n        data = data.data;\n      }\n\n      this.panelData = {\n        state: LoadingState.Done,\n        series: data,\n        timeRange: this.range,\n      };\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit(PanelEvents.dataSnapshotLoad, data);\n      });\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    return this.datasourceSrv\n      .get(this.panel.datasource, this.panel.scopedVars)\n      .then(this.issueQueries.bind(this))\n      .catch((err: any) => {\n        this.processDataError(err);\n      });\n  }\n\n  processDataError(err: any) {\n    // if canceled  keep loading set to true\n    if (err.cancelled) {\n      console.log('Panel request cancelled', err);\n      return;\n    }\n\n    this.error = err.message || 'Request Error';\n\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      } else if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    this.angularDirtyCheck();\n  }\n\n  angularDirtyCheck() {\n    if (!this.$scope.$root.$$phase) {\n      this.$scope.$digest();\n    }\n  }\n\n  // Updates the response with information from the stream\n  panelDataObserver = {\n    next: (data: PanelData) => {\n      this.panelData = data;\n\n      if (data.state === LoadingState.Error) {\n        this.loading = false;\n        this.processDataError(data.error);\n      }\n\n      // Ignore data in loading state\n      if (data.state === LoadingState.Loading) {\n        this.loading = true;\n        this.angularDirtyCheck();\n        return;\n      }\n\n      if (data.request) {\n        const { timeInfo } = data.request;\n        if (timeInfo) {\n          this.timeInfo = timeInfo;\n        }\n      }\n\n      if (data.timeRange) {\n        this.range = data.timeRange;\n      }\n\n      if (this.useDataFrames) {\n        this.handleDataFrames(data.series);\n      } else {\n        // Make the results look as if they came directly from a <6.2 datasource request\n        const legacy = data.series.map((v) => toLegacyResponseData(v));\n        this.handleQueryResult({ data: legacy });\n      }\n\n      this.angularDirtyCheck();\n    },\n  };\n\n  updateTimeRange(datasource?: DataSourceApi) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n\n    const newTimeData = applyPanelTimeOverrides(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n  }\n\n  issueQueries(datasource: DataSourceApi) {\n    this.updateTimeRange(datasource);\n\n    this.datasource = datasource;\n\n    const panel = this.panel as PanelModel;\n    const queryRunner = panel.getQueryRunner();\n\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardId: this.dashboard.id,\n      timezone: this.dashboard.getTimezone(),\n      timeInfo: this.timeInfo,\n      timeRange: this.range,\n      maxDataPoints: panel.maxDataPoints || this.width,\n      minInterval: panel.interval,\n      publicDashboardAccessToken: this.dashboard.meta.publicDashboardAccessToken,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      queryCachingTTL: panel.queryCachingTTL,\n      transformations: panel.transformations,\n    });\n  }\n\n  handleDataFrames(data: DataFrame[]) {\n    this.loading = false;\n\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map((frame) => toDataFrameDTO(frame));\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataFramesReceived, data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  handleQueryResult(result: DataQueryResponse) {\n    this.loading = false;\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataReceived, result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import { auto } from 'angular';\nimport { isString } from 'lodash';\n\nimport {\n  AppEvent,\n  PanelEvents,\n  PanelPluginMeta,\n  AngularPanelMenuItem,\n  EventBusExtended,\n  EventBusSrv,\n} from '@grafana/data';\nimport { AngularLocationWrapper } from 'app/angular/AngularLocationWrapper';\nimport config from 'app/core/config';\nimport { profiler } from 'app/core/core';\n\nimport { DashboardModel } from '../../features/dashboard/state';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  declare dashboard: DashboardModel;\n  pluginName = '';\n  pluginId = '';\n  editorTabs: any;\n  $scope: any;\n  $injector: auto.IInjectorService;\n  $timeout: any;\n  editModeInitiated = false;\n  declare height: number;\n  declare width: number;\n  containerHeight: any;\n  events: EventBusExtended;\n  loading = false;\n  timing: any;\n  $location: AngularLocationWrapper;\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    this.panel = this.panel ?? $scope.$parent.panel;\n    this.dashboard = this.dashboard ?? $scope.$parent.dashboard;\n    this.$injector = $injector;\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabs = [];\n    this.$location = new AngularLocationWrapper();\n    this.events = new EventBusSrv();\n    this.timing = {}; // not used but here to not break plugins\n\n    const plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on(PanelEvents.componentDidMount.name, () => this.panelDidMount());\n  }\n\n  panelDidMount() {\n    this.events.emit(PanelEvents.componentDidMount);\n    this.events.emit(PanelEvents.initialized);\n    this.dashboard.panelInitialized(this.panel);\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted();\n  }\n\n  refresh() {\n    this.panel.refresh();\n  }\n\n  publishAppEvent<T>(event: AppEvent<T>, payload?: T) {\n    this.$scope.$root.appEvent(event, payload);\n  }\n\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit(PanelEvents.editModeInitialized);\n    }\n  }\n\n  addEditorTab(title: string, directiveFn: any, index?: number, icon?: any) {\n    const editorTab = { title, directiveFn, icon };\n\n    if (isString(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  getExtendedMenu() {\n    const menu: AngularPanelMenuItem[] = [];\n    this.events.emit(PanelEvents.initPanelActions, menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems(): Promise<any[]> {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.otherPanelInFullscreen(this.panel);\n  }\n\n  render(payload?: any) {\n    this.events.emit(PanelEvents.render, payload);\n  }\n\n  // overriden from react\n  onPluginTypeChange = (plugin: PanelPluginMeta) => {};\n}\n","import { config } from 'app/core/config';\nimport { PanelModel } from 'app/features/dashboard/state';\n\nexport const hiddenReducerTypes = ['percent_diff', 'percent_diff_abs'];\nexport class ThresholdMapper {\n  static alertToGraphThresholds(panel: PanelModel) {\n    if (!panel.alert || config.unifiedAlertingEnabled) {\n      return false; // no update when no alerts\n    }\n\n    for (let i = 0; i < panel.alert.conditions.length; i++) {\n      const condition = panel.alert.conditions[i];\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      const evaluator = condition.evaluator;\n      const thresholds: any[] = (panel.thresholds = []);\n      const visible = hiddenReducerTypes.indexOf(condition.reducer?.type) === -1;\n\n      switch (evaluator.type) {\n        case 'gt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'gt', visible });\n          break;\n        }\n        case 'lt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'lt', visible });\n          break;\n        }\n        case 'outside_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          }\n\n          break;\n        }\n        case 'within_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          }\n          break;\n        }\n      }\n      break;\n    }\n\n    for (const t of panel.thresholds) {\n      t.fill = panel.options.alertThreshold;\n      t.line = panel.options.alertThreshold;\n      t.colorMode = 'critical';\n    }\n\n    const updated = true;\n    return updated;\n  }\n}\n","import {\n  applyFieldOverrides,\n  ArrayDataFrame,\n  getDefaultTimeRange,\n  getProcessedDataFrames,\n  LoadingState,\n  PanelData,\n} from '@grafana/data';\nimport { config } from 'app/core/config';\n\nimport { SnapshotWorker } from '../../query/state/DashboardQueryRunner/SnapshotWorker';\nimport { getTimeSrv } from '../services/TimeSrv';\nimport { DashboardModel, PanelModel } from '../state';\n\nimport { applyPanelTimeOverrides } from './panel';\n\nexport function loadSnapshotData(panel: PanelModel, dashboard: DashboardModel): PanelData {\n  const data = getProcessedDataFrames(panel.snapshotData);\n  const worker = new SnapshotWorker();\n  const options = { dashboard, range: getDefaultTimeRange() };\n  const annotationEvents = worker.canWork(options) ? worker.getAnnotationsInSnapshot(dashboard, panel.id) : [];\n  const annotations = [new ArrayDataFrame(annotationEvents)];\n  const timeData = applyPanelTimeOverrides(panel, getTimeSrv().timeRange());\n\n  return {\n    timeRange: timeData.timeRange,\n    state: LoadingState.Done,\n    series: applyFieldOverrides({\n      data,\n      fieldConfig: {\n        defaults: {},\n        overrides: [],\n      },\n      replaceVariables: panel.replaceVariables,\n      fieldConfigRegistry: panel.plugin!.fieldConfigRegistry,\n      theme: config.theme2,\n      timeZone: dashboard.getTimezone(),\n    }),\n    annotations,\n  };\n}\n","import {\n  DataLink,\n  DisplayValue,\n  FieldDisplay,\n  formattedValueToString,\n  getFieldDisplayValuesProxy,\n  getTimeField,\n  InterpolateFunction,\n  Labels,\n  LinkModelSupplier,\n  ScopedVar,\n  ScopedVars,\n} from '@grafana/data';\nimport { PanelModel } from 'app/features/dashboard/state/PanelModel';\n\nimport { getLinkSrv } from './link_srv';\n\ninterface SeriesVars {\n  name?: string;\n  refId?: string;\n}\n\ninterface FieldVars {\n  name: string;\n  labels?: Labels;\n}\n\ninterface ValueVars {\n  raw: any;\n  numeric: number;\n  text: string;\n  time?: number;\n  calc?: string;\n}\n\ninterface DataViewVars {\n  name?: string;\n  refId?: string;\n  fields?: Record<string, DisplayValue>;\n}\n\ninterface DataLinkScopedVars extends ScopedVars {\n  __series: ScopedVar<SeriesVars>;\n  __field: ScopedVar<FieldVars>;\n  __value: ScopedVar<ValueVars>;\n  __data: ScopedVar<DataViewVars>;\n}\n\n/**\n * Link suppliers creates link models based on a link origin\n */\nexport const getFieldLinksSupplier = (value: FieldDisplay): LinkModelSupplier<FieldDisplay> | undefined => {\n  const links = value.field.links;\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n\n  return {\n    getLinks: (replaceVariables: InterpolateFunction) => {\n      const scopedVars: Partial<DataLinkScopedVars> = {};\n\n      if (value.view) {\n        const { dataFrame } = value.view;\n\n        scopedVars['__series'] = {\n          value: {\n            name: dataFrame.name,\n            refId: dataFrame.refId,\n          },\n          text: 'Series',\n        };\n\n        const field = value.colIndex !== undefined ? dataFrame.fields[value.colIndex] : undefined;\n\n        if (field) {\n          scopedVars['__field'] = {\n            value: {\n              name: field.name,\n              labels: field.labels,\n            },\n            text: 'Field',\n          };\n\n          if (value.rowIndex !== undefined && value.rowIndex >= 0) {\n            const { timeField } = getTimeField(dataFrame);\n            scopedVars['__value'] = {\n              value: {\n                raw: field.values.get(value.rowIndex),\n                numeric: value.display.numeric,\n                text: formattedValueToString(value.display),\n                time: timeField ? timeField.values.get(value.rowIndex) : undefined,\n              },\n              text: 'Value',\n            };\n          }\n\n          // Expose other values on the row\n          if (value.view) {\n            scopedVars['__data'] = {\n              value: {\n                name: dataFrame.name,\n                refId: dataFrame.refId,\n                fields: getFieldDisplayValuesProxy({\n                  frame: dataFrame,\n                  rowIndex: value.rowIndex!,\n                }),\n              },\n              text: 'Data',\n            };\n          }\n        } else {\n          // calculation\n          scopedVars['__value'] = {\n            value: {\n              raw: value.display.numeric,\n              numeric: value.display.numeric,\n              text: formattedValueToString(value.display),\n              calc: value.name,\n            },\n            text: 'Value',\n          };\n        }\n      } else {\n        console.log('VALUE', value);\n      }\n\n      const replace: InterpolateFunction = (value: string, vars: ScopedVars | undefined, fmt?: string | Function) => {\n        const finalVars: ScopedVars = {\n          ...(scopedVars as ScopedVars),\n          ...vars,\n        };\n        return replaceVariables(value, finalVars, fmt);\n      };\n\n      return links.map((link: DataLink) => {\n        return getLinkSrv().getDataLinkUIModel(link, replace, value);\n      });\n    },\n  };\n};\n\nexport const getPanelLinksSupplier = (panel: PanelModel): LinkModelSupplier<PanelModel> | undefined => {\n  const links = panel.links;\n\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n\n  return {\n    getLinks: () => {\n      return links.map((link) => {\n        return getLinkSrv().getDataLinkUIModel(link, panel.replaceVariables, panel);\n      });\n    },\n  };\n};\n","import $ from 'jquery';\nimport { partition, each } from 'lodash';\n//@ts-ignore\nimport Drop from 'tether-drop';\n\nimport { CreatePlotOverlay } from '@grafana/data';\nimport { getLegacyAngularInjector } from '@grafana/runtime';\n\nconst createAnnotationToolip: CreatePlotOverlay = (element, event, plot) => {\n  const injector = getLegacyAngularInjector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    ($compile, $rootScope) => {\n      const eventManager = plot.getOptions().events.manager;\n      const tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = () => {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      const drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', () => {\n        setTimeout(() => {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n};\n\nlet markerElementToAttachTo: any = null;\n\nconst createEditPopover: CreatePlotOverlay = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(() => {\n    const injector = getLegacyAngularInjector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      ($compile, $rootScope) => {\n        const scope = $rootScope.$new(true);\n        let drop: any;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = () => {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', () => {\n          // need timeout here in order call drop.destroy\n          setTimeout(() => {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n};\n\nexport { createEditPopover, createAnnotationToolip };\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  constructor(\n    object: JQuery,\n    drawFunc: any,\n    clearFunc: any,\n    moveFunc: any,\n    left: number,\n    top: number,\n    width: number,\n    height: number\n  ) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left, top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position: { left: number; top: number }) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  constructor(options: any, drawableEvent: DrawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  constructor(plot: any) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types: any) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events: any[]) {\n    const parts = partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a: any, b: any) => {\n      const ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      const options = event.getOptions();\n      const insidePlot = this._insidePlot(options.min) || this._insidePlot(options.timeEnd);\n      const overlapPlot = this._overlapPlot(options.min, options.timeEnd);\n      // check event is inside the graph range\n      if ((insidePlot || overlapPlot) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event.visual().getObject().hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n    let left;\n    let top;\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event: { eventType: any; min: any; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      const mouseenter = function (this: any) {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: any, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width() ?? 1,\n      line.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event: { eventType: any; min: number; timeEnd: number; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top,\n      left,\n      lineWidth: number,\n      regionWidth,\n      lineStyle: string | number | cssPropertySetter,\n      color: string,\n      markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n\n    const [xmin, xmax] = [o.left, o.left + this._plot.width()];\n    const regionStart = Math.max(left, xmin);\n    const regionEnd = Math.min(right, xmax);\n    const regionOffset = right > xmax ? 0 : lineWidth; // only include lineWidth when right line is visible\n    regionWidth = regionEnd - regionStart + regionOffset;\n\n    each([left, right], (position) => {\n      // only draw visible region lines\n      if (xmin <= position && position < xmax) {\n        const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n          position: 'absolute',\n          opacity: 0.8,\n          left: position + 'px',\n          top: 8,\n          width: lineWidth + 'px',\n          height: this._plot.height() + topOffset,\n          'border-left-width': lineWidth + 'px',\n          'border-left-style': lineStyle,\n          'border-left-color': color,\n          color: color,\n        });\n        line.appendTo(container);\n      }\n    });\n\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: regionStart + 'px',\n      top: top,\n      width: regionWidth + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    const mouseenter = function (this: any) {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: { css: (arg0: { top: any; left: any }) => void }, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width() ?? 1,\n      region.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x: any) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n\n  /**\n   * check if the event overlaps the visible range\n   */\n  _overlapPlot(point0: number, point1: number) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const [coord0, coord1] = [xaxis.p2c(point0), xaxis.p2c(point1)];\n    const [coordMin, coordMax] = [0, xaxis.p2c(xaxis.max)];\n    return coordMin < coord0 && coord1 < coordMax;\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\nexport function init(this: any, plot: any) {\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event.visual().getObject().hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = (events: any[]) => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot: any, options: any) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push((plot: any) => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nconst defaultOptions: any = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n","import classNames from 'classnames';\nimport React, { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { SeriesColorPicker, SeriesIcon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nexport const LEGEND_STATS = ['min', 'max', 'avg', 'current', 'total'] as const;\nexport type LegendStat = (typeof LEGEND_STATS)[number];\n\nexport interface LegendLabelProps {\n  series: TimeSeries;\n  asTable?: boolean;\n  hidden?: boolean;\n  onLabelClick: (series: any, event: any) => void;\n  onColorChange: (series: any, color: string) => void;\n  onToggleAxis: (series: any) => void;\n}\n\nexport interface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ntype LegendItemProps = LegendLabelProps & LegendValuesProps;\n\ninterface LegendItemState {\n  yaxis: number;\n}\n\nexport class LegendItem extends PureComponent<LegendItemProps, LegendItemState> {\n  static defaultProps = {\n    asTable: false,\n    hidden: false,\n    onLabelClick: () => {},\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  constructor(props: LegendItemProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.series.yaxis,\n    };\n  }\n\n  onLabelClick = (e: any) => this.props.onLabelClick(this.props.series, e);\n\n  onToggleAxis = () => {\n    const yaxis = this.state.yaxis === 2 ? 1 : 2;\n    const info = { alias: this.props.series.alias, yaxis: yaxis };\n    this.setState({ yaxis: yaxis });\n    this.props.onToggleAxis(info);\n  };\n\n  onColorChange = (color: string) => {\n    this.props.onColorChange(this.props.series, color);\n    // Because of PureComponent nature it makes only shallow props comparison and changing of series.color doesn't run\n    // component re-render. In this case we can't rely on color, selected by user, because it may be overwritten\n    // by series overrides. So we need to use forceUpdate() to make sure we have proper series color.\n    this.forceUpdate();\n  };\n\n  renderLegendValues() {\n    const { series, asTable } = this.props;\n    const legendValueItems = [];\n    for (const valueName of LEGEND_STATS) {\n      // @ts-ignore\n      if (this.props[valueName]) {\n        const valueFormatted = series.formatValue(series.stats[valueName]);\n        legendValueItems.push(\n          <LegendValue\n            key={valueName}\n            valueName={valueName}\n            value={valueFormatted}\n            asTable={asTable}\n            onValueClick={this.onLabelClick}\n          />\n        );\n      }\n    }\n    return legendValueItems;\n  }\n\n  render() {\n    const { series, values, asTable, hidden } = this.props;\n    const seriesOptionClasses = classNames({\n      'graph-legend-series-hidden': hidden,\n      'graph-legend-series--right-y': series.yaxis === 2,\n    });\n    const valueItems = values ? this.renderLegendValues() : [];\n    const seriesLabel = (\n      <LegendSeriesLabel\n        label={series.alias}\n        color={series.color}\n        yaxis={this.state.yaxis}\n        onLabelClick={this.onLabelClick}\n        onColorChange={this.onColorChange}\n        onToggleAxis={this.onToggleAxis}\n      />\n    );\n\n    if (asTable) {\n      return (\n        <tr className={`graph-legend-series ${seriesOptionClasses}`}>\n          <td role=\"gridcell\">\n            <div className=\"graph-legend-series__table-name\">{seriesLabel}</div>\n          </td>\n          {valueItems}\n        </tr>\n      );\n    } else {\n      return (\n        <div className={`graph-legend-series ${seriesOptionClasses}`}>\n          {seriesLabel}\n          {valueItems}\n        </div>\n      );\n    }\n  }\n}\n\ninterface LegendSeriesLabelProps {\n  label: string;\n  color: string;\n  yaxis?: number;\n  onLabelClick: (event: any) => void;\n}\n\nclass LegendSeriesLabel extends PureComponent<LegendSeriesLabelProps & LegendSeriesIconProps> {\n  static defaultProps: Partial<LegendSeriesLabelProps> = {\n    yaxis: undefined,\n    onLabelClick: () => {},\n  };\n\n  render() {\n    const { label, color, yaxis } = this.props;\n    const { onColorChange, onToggleAxis } = this.props;\n    const onLabelClick = this.props.onLabelClick ? this.props.onLabelClick : () => {};\n\n    return [\n      <LegendSeriesIcon\n        key=\"icon\"\n        color={color}\n        yaxis={yaxis}\n        onColorChange={onColorChange}\n        onToggleAxis={onToggleAxis}\n      />,\n      <button\n        type=\"button\"\n        className=\"graph-legend-alias pointer\"\n        title={label}\n        key=\"label\"\n        onClick={onLabelClick}\n        aria-label={selectors.components.Panels.Visualization.Graph.Legend.legendItemAlias(label)}\n      >\n        {label}\n      </button>,\n    ];\n  }\n}\n\ninterface LegendSeriesIconProps {\n  color: string;\n  yaxis?: number;\n  onColorChange?: (color: string) => void;\n  onToggleAxis?: () => void;\n}\n\ninterface LegendSeriesIconState {\n  color: string;\n}\n\nclass LegendSeriesIcon extends PureComponent<LegendSeriesIconProps, LegendSeriesIconState> {\n  static defaultProps: Partial<LegendSeriesIconProps> = {\n    yaxis: undefined,\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  onColorChange = (color: string) => {\n    const { onColorChange } = this.props;\n    if (onColorChange) {\n      onColorChange(color);\n    }\n  };\n  render() {\n    return (\n      <SeriesColorPicker\n        yaxis={this.props.yaxis}\n        color={this.props.color}\n        onChange={this.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n        enableNamedColors\n      >\n        {({ ref, showColorPicker, hideColorPicker }) => (\n          <SeriesIcon\n            color={this.props.color}\n            ref={ref}\n            onClick={showColorPicker}\n            onMouseLeave={hideColorPicker}\n            className=\"graph-legend-icon\"\n          />\n        )}\n      </SeriesColorPicker>\n    );\n  }\n}\n\ninterface LegendValueProps {\n  value: string;\n  valueName: string;\n  asTable?: boolean;\n  onValueClick?: (event: any) => void;\n}\n\nfunction LegendValue({ value, valueName, asTable, onValueClick }: LegendValueProps) {\n  if (asTable) {\n    return (\n      <td role=\"gridcell\" className={`graph-legend-value ${valueName}`}>\n        {value}\n      </td>\n    );\n  }\n  return <div className={`graph-legend-value ${valueName}`}>{value}</div>;\n}\n","import { sortBy as _sortBy } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { CustomScrollbar, Icon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nimport { LegendStat, LegendItem, LEGEND_STATS } from './LegendSeriesItem';\n\ninterface LegendProps {\n  seriesList: TimeSeries[];\n  optionalClass?: string;\n}\n\ninterface LegendEventHandlers {\n  onToggleSeries?: (hiddenSeries: any) => void;\n  onToggleSort?: (sortBy: any, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendComponentEventHandlers {\n  onToggleSeries?: (series: TimeSeries, event: any) => void;\n  onToggleSort?: (sortBy: LegendStat | undefined, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendDisplayProps {\n  hiddenSeries: any;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  alignAsTable?: boolean;\n  rightSide?: boolean;\n  sideWidth?: number;\n}\n\ninterface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ninterface LegendSortProps {\n  sort?: LegendStat;\n  sortDesc?: boolean;\n}\n\nexport type GraphLegendProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendEventHandlers;\nexport type LegendComponentProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendComponentEventHandlers;\n\ninterface LegendState {\n  hiddenSeries: { [seriesAlias: string]: boolean };\n}\n\nexport class GraphLegend extends PureComponent<GraphLegendProps, LegendState> {\n  static defaultProps: Partial<GraphLegendProps> = {\n    values: false,\n    min: false,\n    max: false,\n    avg: false,\n    current: false,\n    total: false,\n    alignAsTable: false,\n    rightSide: false,\n    sort: undefined,\n    sortDesc: false,\n    optionalClass: '',\n    onToggleSeries: () => {},\n    onToggleSort: () => {},\n    onToggleAxis: () => {},\n    onColorChange: () => {},\n  };\n\n  constructor(props: GraphLegendProps) {\n    super(props);\n    this.state = {\n      hiddenSeries: this.props.hiddenSeries,\n    };\n  }\n\n  sortLegend() {\n    let seriesList: TimeSeries[] = [...this.props.seriesList] || [];\n    const sortBy = this.props.sort;\n    if (sortBy && this.props[sortBy] && this.props.alignAsTable) {\n      seriesList = _sortBy(seriesList, (series) => {\n        let sort = series.stats[sortBy];\n        if (sort === null) {\n          sort = -Infinity;\n        }\n        return sort;\n      }) as TimeSeries[];\n      if (this.props.sortDesc) {\n        seriesList = seriesList.reverse();\n      }\n    }\n    return seriesList;\n  }\n\n  onToggleSeries = (series: TimeSeries, event: any) => {\n    if (!this.props.onToggleSeries) {\n      return;\n    }\n\n    let hiddenSeries = { ...this.state.hiddenSeries };\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (hiddenSeries[series.alias]) {\n        delete hiddenSeries[series.alias];\n      } else {\n        hiddenSeries[series.alias] = true;\n      }\n    } else {\n      hiddenSeries = this.toggleSeriesExclusiveMode(series);\n    }\n    this.setState({ hiddenSeries: hiddenSeries });\n    this.props.onToggleSeries(hiddenSeries);\n  };\n\n  toggleSeriesExclusiveMode(series: TimeSeries) {\n    const hiddenSeries = { ...this.state.hiddenSeries };\n\n    if (hiddenSeries[series.alias]) {\n      delete hiddenSeries[series.alias];\n    }\n\n    // check if every other series is hidden\n    const alreadyExclusive = this.props.seriesList.every((value) => {\n      if (value.alias === series.alias) {\n        return true;\n      }\n\n      return hiddenSeries[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      this.props.seriesList.forEach((value) => {\n        delete hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      this.props.seriesList.forEach((value) => {\n        if (value.alias === series.alias) {\n          return;\n        }\n\n        hiddenSeries[value.alias] = true;\n      });\n    }\n\n    return hiddenSeries;\n  }\n\n  render() {\n    const {\n      optionalClass,\n      rightSide,\n      sideWidth,\n      sort,\n      sortDesc,\n      hideEmpty,\n      hideZero,\n      values,\n      min,\n      max,\n      avg,\n      current,\n      total,\n    } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    const hiddenSeries = this.state.hiddenSeries;\n    const seriesHideProps = { hideEmpty, hideZero };\n    const sortProps = { sort, sortDesc };\n    const seriesList = this.sortLegend().filter((series) => !series.hideFromLegend(seriesHideProps));\n    const legendClass = `${this.props.alignAsTable ? 'graph-legend-table' : ''} ${optionalClass}`;\n\n    // Set min-width if side style and there is a value, otherwise remove the CSS property\n    // Set width so it works with IE11\n    const width: any = rightSide && sideWidth ? sideWidth : undefined;\n    const ieWidth: any = rightSide && sideWidth ? sideWidth - 1 : undefined;\n    const legendStyle: React.CSSProperties = {\n      minWidth: width,\n      width: ieWidth,\n    };\n\n    const legendProps: LegendComponentProps = {\n      seriesList: seriesList,\n      hiddenSeries: hiddenSeries,\n      onToggleSeries: this.onToggleSeries,\n      onToggleAxis: this.props.onToggleAxis,\n      onToggleSort: this.props.onToggleSort,\n      onColorChange: this.props.onColorChange,\n      ...seriesValuesProps,\n      ...sortProps,\n    };\n\n    return (\n      <div className={`graph-legend-content ${legendClass}`} style={legendStyle}>\n        {this.props.alignAsTable ? <LegendTable {...legendProps} /> : <LegendSeriesList {...legendProps} />}\n      </div>\n    );\n  }\n}\n\nclass LegendSeriesList extends PureComponent<LegendComponentProps> {\n  render() {\n    const { seriesList, hiddenSeries, values, min, max, avg, current, total } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    return seriesList.map((series, i) => (\n      <LegendItem\n        // This trick required because TimeSeries.id is not unique (it's just TimeSeries.alias).\n        // In future would be good to make id unique across the series list.\n        key={`${series.id}-${i}`}\n        series={series}\n        hidden={hiddenSeries[series.alias]}\n        {...seriesValuesProps}\n        onLabelClick={this.props.onToggleSeries}\n        onColorChange={this.props.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n      />\n    ));\n  }\n}\n\nclass LegendTable extends PureComponent<Partial<LegendComponentProps>> {\n  onToggleSort = (stat: LegendStat) => {\n    if (!this.props.onToggleSort) {\n      return;\n    }\n\n    let sortDesc = this.props.sortDesc;\n    let sortBy = this.props.sort;\n    if (stat !== sortBy) {\n      sortDesc = undefined;\n    }\n\n    // if already sort ascending, disable sorting\n    if (sortDesc === false) {\n      sortBy = undefined;\n      sortDesc = undefined;\n    } else {\n      sortDesc = !sortDesc;\n      sortBy = stat;\n    }\n    this.props.onToggleSort(sortBy, sortDesc);\n  };\n\n  render() {\n    const seriesList = this.props.seriesList;\n    const { values, min, max, avg, current, total, sort, sortDesc, hiddenSeries } = this.props;\n    const seriesValuesProps: any = { values, min, max, avg, current, total };\n\n    if (!seriesList) {\n      return null;\n    }\n\n    return (\n      <table role=\"grid\">\n        <colgroup>\n          <col style={{ width: '100%' }} />\n        </colgroup>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left' }} />\n            {LEGEND_STATS.map(\n              (statName) =>\n                seriesValuesProps[statName] && (\n                  <LegendTableHeaderItem\n                    key={statName}\n                    statName={statName}\n                    sort={sort}\n                    sortDesc={sortDesc}\n                    onClick={this.onToggleSort}\n                  />\n                )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {seriesList &&\n            seriesList.map((series, i) => (\n              <LegendItem\n                key={`${series.id}-${i}`}\n                asTable={true}\n                series={series}\n                hidden={hiddenSeries[series.alias]}\n                onLabelClick={this.props.onToggleSeries}\n                onColorChange={this.props.onColorChange}\n                onToggleAxis={this.props.onToggleAxis}\n                {...seriesValuesProps}\n              />\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface LegendTableHeaderProps {\n  statName: LegendStat;\n  onClick?: (statName: LegendStat) => void;\n}\n\nclass LegendTableHeaderItem extends PureComponent<LegendTableHeaderProps & LegendSortProps> {\n  onClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.statName);\n    }\n  };\n\n  render() {\n    const { statName, sort, sortDesc } = this.props;\n    return (\n      <th className=\"pointer\" onClick={this.onClick}>\n        {statName}\n        {sort === statName && <Icon name={sortDesc ? 'angle-down' : 'angle-up'} />}\n      </th>\n    );\n  }\n}\n\nexport class Legend extends PureComponent<GraphLegendProps> {\n  render() {\n    return (\n      <CustomScrollbar hideHorizontalTrack>\n        <GraphLegend {...this.props} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nexport default Legend;\n","/**\n * To align two Y axes by Y level\n * @param yAxes data [{min: min_y1, min: max_y1}, {min: min_y2, max: max_y2}]\n * @param level Y level\n */\nexport function alignYLevel(yAxes: any, level: any) {\n  if (isNaN(level) || !checkCorrectAxis(yAxes)) {\n    return;\n  }\n\n  const [yLeft, yRight] = yAxes;\n  moveLevelToZero(yLeft, yRight, level);\n\n  expandStuckValues(yLeft, yRight);\n\n  // one of graphs on zero\n  const zero = yLeft.min === 0 || yRight.min === 0 || yLeft.max === 0 || yRight.max === 0;\n\n  const oneSide = checkOneSide(yLeft, yRight);\n\n  if (zero && oneSide) {\n    yLeft.min = yLeft.max > 0 ? 0 : yLeft.min;\n    yLeft.max = yLeft.max > 0 ? yLeft.max : 0;\n    yRight.min = yRight.max > 0 ? 0 : yRight.min;\n    yRight.max = yRight.max > 0 ? yRight.max : 0;\n  } else {\n    if (checkOppositeSides(yLeft, yRight)) {\n      if (yLeft.min >= 0) {\n        yLeft.min = -yLeft.max;\n        yRight.max = -yRight.min;\n      } else {\n        yLeft.max = -yLeft.min;\n        yRight.min = -yRight.max;\n      }\n    } else {\n      const rate = getRate(yLeft, yRight);\n\n      if (oneSide) {\n        // all graphs above the Y level\n        if (yLeft.min > 0) {\n          yLeft.min = yLeft.max / rate;\n          yRight.min = yRight.max / rate;\n        } else {\n          yLeft.max = yLeft.min / rate;\n          yRight.max = yRight.min / rate;\n        }\n      } else {\n        if (checkTwoCross(yLeft, yRight)) {\n          yLeft.min = yRight.min ? yRight.min * rate : yLeft.min;\n          yRight.min = yLeft.min ? yLeft.min / rate : yRight.min;\n          yLeft.max = yRight.max ? yRight.max * rate : yLeft.max;\n          yRight.max = yLeft.max ? yLeft.max / rate : yRight.max;\n        } else {\n          yLeft.min = yLeft.min > 0 ? yRight.min * rate : yLeft.min;\n          yRight.min = yRight.min > 0 ? yLeft.min / rate : yRight.min;\n          yLeft.max = yLeft.max < 0 ? yRight.max * rate : yLeft.max;\n          yRight.max = yRight.max < 0 ? yLeft.max / rate : yRight.max;\n        }\n      }\n    }\n  }\n\n  restoreLevelFromZero(yLeft, yRight, level);\n}\n\nfunction expandStuckValues(yLeft: { max: number; min: number }, yRight: { max: number; min: number }) {\n  // wide Y min and max using increased wideFactor\n  const wideFactor = 0.25;\n  if (yLeft.max === yLeft.min) {\n    yLeft.min -= wideFactor;\n    yLeft.max += wideFactor;\n  }\n  if (yRight.max === yRight.min) {\n    yRight.min -= wideFactor;\n    yRight.max += wideFactor;\n  }\n}\n\nfunction moveLevelToZero(yLeft: { min: number; max: number }, yRight: { min: number; max: number }, level: number) {\n  if (level !== 0) {\n    yLeft.min -= level;\n    yLeft.max -= level;\n    yRight.min -= level;\n    yRight.max -= level;\n  }\n}\n\nfunction restoreLevelFromZero(\n  yLeft: { min: number; max: number },\n  yRight: { min: number; max: number },\n  level: number\n) {\n  if (level !== 0) {\n    yLeft.min += level;\n    yLeft.max += level;\n    yRight.min += level;\n    yRight.max += level;\n  }\n}\n\ninterface AxisSide {\n  max: number;\n  min: number;\n}\n\nfunction checkCorrectAxis(axis: any[]): boolean {\n  return axis.length === 2 && checkCorrectAxes(axis[0]) && checkCorrectAxes(axis[1]);\n}\n\nfunction checkCorrectAxes(axes: any): boolean {\n  return 'min' in axes && 'max' in axes;\n}\n\nfunction checkOneSide(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the one hand with respect to zero\n  return (yLeft.min >= 0 && yRight.min >= 0) || (yLeft.max <= 0 && yRight.max <= 0);\n}\n\nfunction checkTwoCross(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // both across zero\n  return yLeft.min <= 0 && yLeft.max >= 0 && yRight.min <= 0 && yRight.max >= 0;\n}\n\nfunction checkOppositeSides(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the opposite sides with respect to zero\n  return (yLeft.min >= 0 && yRight.max <= 0) || (yLeft.max <= 0 && yRight.min >= 0);\n}\n\nfunction getRate(yLeft: AxisSide, yRight: AxisSide): number {\n  if (checkTwoCross(yLeft, yRight)) {\n    const rateLeft = yRight.min ? yLeft.min / yRight.min : 0;\n    const rateRight = yRight.max ? yLeft.max / yRight.max : 0;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (checkOneSide(yLeft, yRight)) {\n    const absLeftMin = Math.abs(yLeft.min);\n    const absLeftMax = Math.abs(yLeft.max);\n    const absRightMin = Math.abs(yRight.min);\n    const absRightMax = Math.abs(yRight.max);\n    const upLeft = Math.max(absLeftMin, absLeftMax);\n    const downLeft = Math.min(absLeftMin, absLeftMax);\n    const upRight = Math.max(absRightMin, absRightMax);\n    const downRight = Math.min(absRightMin, absRightMax);\n\n    const rateLeft = downLeft !== 0 ? upLeft / downLeft : upLeft;\n    const rateRight = downRight !== 0 ? upRight / downRight : upRight;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (yLeft.min > 0 || yRight.min > 0) {\n    return yLeft.max / yRight.max;\n  } else {\n    return yLeft.min / yRight.min;\n  }\n}\n","import { each, filter, keys } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nimport { AnnotationEvent } from '@grafana/data';\nimport {\n  ALERTING_COLOR,\n  DEFAULT_ANNOTATION_COLOR,\n  NO_DATA_COLOR,\n  OK_COLOR,\n  PENDING_COLOR,\n  REGION_FILL_ALPHA,\n} from '@grafana/ui';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nexport class EventManager {\n  event: AnnotationEvent | null = null;\n  editorOpen = false;\n\n  constructor(private panelCtrl: MetricsPanelCtrl) {}\n\n  editorClosed() {\n    this.event = null;\n    this.editorOpen = false;\n    this.panelCtrl.render();\n  }\n\n  editorOpened() {\n    this.editorOpen = true;\n  }\n\n  updateTime(range: { from: any; to: any }) {\n    if (!this.event) {\n      this.event = {};\n      this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n      this.event.panelId = this.panelCtrl.panel.id;\n    }\n\n    // update time\n    this.event.time = range.from;\n    this.event.isRegion = false;\n\n    if (range.to) {\n      this.event.timeEnd = range.to;\n      this.event.isRegion = true;\n    }\n\n    this.panelCtrl.render();\n  }\n\n  editEvent(event: AnnotationEvent, elem?: any) {\n    this.event = event;\n    this.panelCtrl.render();\n  }\n\n  addFlotEvents(annotations: any, flotOptions: any) {\n    if (!this.event && annotations.length === 0) {\n      return;\n    }\n\n    const types: any = {\n      $__alerting: {\n        color: ALERTING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__ok: {\n        color: OK_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__no_data: {\n        color: NO_DATA_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__pending: {\n        color: PENDING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__editing: {\n        color: DEFAULT_ANNOTATION_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n    };\n\n    if (this.event) {\n      if (this.event.isRegion) {\n        annotations = [\n          {\n            isRegion: true,\n            min: this.event.time,\n            timeEnd: this.event.timeEnd,\n            text: this.event.text,\n            eventType: '$__editing',\n            editModel: this.event,\n          },\n        ];\n      } else {\n        annotations = [\n          {\n            min: this.event.time,\n            text: this.event.text,\n            editModel: this.event,\n            eventType: '$__editing',\n          },\n        ];\n      }\n    } else {\n      // annotations from query\n      for (let i = 0; i < annotations.length; i++) {\n        const item = annotations[i];\n\n        // add properties used by jquery flot events\n        item.min = item.time;\n        item.max = item.time;\n        item.eventType = item.type;\n\n        if (item.newState) {\n          item.eventType = '$__' + item.newState;\n          continue;\n        }\n\n        if (!types[item.type]) {\n          types[item.type] = {\n            color: item.color,\n            position: 'BOTTOM',\n            markerSize: 5,\n          };\n        }\n      }\n    }\n\n    const regions = getRegions(annotations);\n    addRegionMarking(regions, flotOptions);\n\n    const eventSectionHeight = 20;\n    const eventSectionMargin = 7;\n    flotOptions.grid.eventSectionHeight = eventSectionMargin;\n    flotOptions.xaxis.eventSectionHeight = eventSectionHeight;\n\n    flotOptions.events = {\n      levels: keys(types).length + 1,\n      data: annotations,\n      types: types,\n      manager: this,\n    };\n  }\n}\n\nfunction getRegions(events: AnnotationEvent[]) {\n  return filter(events, 'isRegion');\n}\n\nfunction addRegionMarking(regions: any[], flotOptions: { grid: { markings: any } }) {\n  const markings = flotOptions.grid.markings;\n  const defaultColor = DEFAULT_ANNOTATION_COLOR;\n  let fillColor;\n\n  each(regions, (region) => {\n    if (region.source) {\n      fillColor = region.color || defaultColor;\n    } else {\n      fillColor = defaultColor;\n    }\n\n    fillColor = addAlphaToRGB(fillColor, REGION_FILL_ALPHA);\n    markings.push({\n      xaxis: { from: region.min, to: region.timeEnd },\n      color: fillColor,\n    });\n  });\n}\n\nfunction addAlphaToRGB(colorString: string, alpha: number): string {\n  const color = tinycolor(colorString);\n  if (color.isValid()) {\n    color.setAlpha(alpha);\n    return color.toRgbString();\n  } else {\n    return colorString;\n  }\n}\n","import $ from 'jquery';\n\nimport {\n  textUtil,\n  systemDateFormats,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  DataHoverClearEvent,\n} from '@grafana/data';\nimport { appEvents } from 'app/core/core';\nimport { CoreEvents } from 'app/types';\n\nexport default function GraphTooltip(this: any, elem: any, dashboard: any, scope: any, getSeriesFn: any) {\n  const self = this;\n  const ctrl = scope.ctrl;\n  const panel = ctrl.panel;\n  const hoverEvent = new LegacyGraphHoverEvent({ pos: {}, point: {}, panel: this.panel });\n\n  const $tooltip = $('<div class=\"graph-tooltip\">');\n\n  this.destroy = () => {\n    $tooltip.remove();\n  };\n\n  this.findHoverIndexFromDataPoints = (posX: number, series: any, last: number) => {\n    const ps = series.datapoints.pointsize;\n    const initial = last * ps;\n    const len = series.datapoints.points.length;\n    let j;\n    for (j = initial; j < len; j += ps) {\n      // Special case of a non stepped line, highlight the very last point just before a null point\n      if (\n        (!series.lines.steps && series.datapoints.points[initial] != null && series.datapoints.points[j] == null) ||\n        //normal case\n        series.datapoints.points[j] > posX\n      ) {\n        return Math.max(j - ps, 0) / ps;\n      }\n    }\n    return j / ps - 1;\n  };\n\n  this.findHoverIndexFromData = (posX: any, series: any) => {\n    let lower = 0;\n    let upper = series.data.length - 1;\n    let middle;\n    while (true) {\n      if (lower > upper) {\n        return Math.max(upper, 0);\n      }\n      middle = Math.floor((lower + upper) / 2);\n      if (series.data[middle][0] === posX) {\n        return middle;\n      } else if (series.data[middle][0] < posX) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n  };\n\n  this.renderAndShow = (absoluteTime: string, innerHtml: string, pos: { pageX: number; pageY: any }, xMode: string) => {\n    if (xMode === 'time') {\n      innerHtml = '<div class=\"graph-tooltip-time\">' + absoluteTime + '</div>' + innerHtml;\n    }\n    $tooltip.html(innerHtml).place_tt(pos.pageX, pos.pageY, { offset: 10 });\n  };\n\n  this.getMultiSeriesPlotHoverInfo = function (seriesList: any[], pos: { x: number }) {\n    let value, i, series, hoverIndex, hoverDistance, pointTime, yaxis;\n    // 3 sub-arrays, 1st for hidden series, 2nd for left yaxis, 3rd for right yaxis.\n    let results: any = [[], [], []];\n\n    //now we know the current X (j) position for X and Y values\n    let lastValue = 0; //needed for stacked values\n\n    let minDistance, minTime;\n\n    for (i = 0; i < seriesList.length; i++) {\n      series = seriesList[i];\n\n      if (!series.data.length || (panel.legend.hideEmpty && series.allIsNull)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (!series.data.length || (panel.legend.hideZero && series.allIsZero)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (series.hideTooltip) {\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      hoverIndex = this.findHoverIndexFromData(pos.x, series);\n      hoverDistance = pos.x - series.data[hoverIndex][0];\n      pointTime = series.data[hoverIndex][0];\n\n      // Take the closest point before the cursor, or if it does not exist, the closest after\n      if (\n        !minDistance ||\n        (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n        (hoverDistance < 0 && hoverDistance > minDistance)\n      ) {\n        minDistance = hoverDistance;\n        minTime = pointTime;\n      }\n\n      value = series.data[hoverIndex][1];\n\n      if (series.stack && value !== null && panel.tooltip.value_type !== 'individual') {\n        lastValue += value;\n        value = lastValue;\n      }\n\n      // Highlighting multiple Points depending on the plot type\n      if (series.lines.steps || series.stack) {\n        // stacked and steppedLine plots can have series with different length.\n        // Stacked series can increase its length on each new stacked serie if null points found,\n        // to speed the index search we begin always on the last found hoverIndex.\n        hoverIndex = this.findHoverIndexFromDataPoints(pos.x, series, hoverIndex);\n      }\n\n      // Be sure we have a yaxis so that it does not brake series sorting\n      yaxis = 0;\n      if (series.yaxis) {\n        yaxis = series.yaxis.n;\n      }\n\n      results[yaxis].push({\n        value: value,\n        hoverIndex: hoverIndex,\n        color: series.color,\n        label: series.aliasEscaped,\n        time: pointTime,\n        distance: hoverDistance,\n        index: i,\n      });\n    }\n\n    // Contat the 3 sub-arrays\n    results = results[0].concat(results[1], results[2]);\n\n    // Time of the point closer to pointer\n    results.time = minTime;\n\n    return results;\n  };\n\n  elem.mouseleave(() => {\n    if (panel.tooltip?.shared) {\n      const plot = elem.data().plot;\n      if (plot) {\n        $tooltip.detach();\n        plot.unhighlight();\n      }\n    }\n    dashboard.events.publish(new LegacyGraphHoverClearEvent());\n    dashboard.events.publish(new DataHoverClearEvent());\n  });\n\n  elem.bind('plothover', (event: any, pos: { panelRelY: number; pageY: number }, item: any) => {\n    self.show(pos, item);\n\n    // broadcast to other graph panels that we are hovering!\n    if (!dashboard.panelInEdit) {\n      pos.panelRelY = (pos.pageY - elem.offset().top) / elem.height();\n      hoverEvent.payload.pos = pos;\n      hoverEvent.payload.panel = panel;\n      hoverEvent.payload.point['time'] = (pos as any).x;\n      dashboard.events.publish(hoverEvent);\n    }\n  });\n\n  elem.bind('plotclick', (event: any, pos: any, item: any) => {\n    appEvents.emit(CoreEvents.graphClicked, { pos: pos, panel: panel, item: item });\n  });\n\n  elem.bind('plotleave', () => {\n    if (!panel.tooltip.shared) {\n      return;\n    }\n\n    const plot = elem.data().plot;\n    if (plot) {\n      $tooltip.detach();\n      plot.unhighlight();\n    }\n  });\n\n  this.clear = (plot: { clearCrosshair: () => void; unhighlight: () => void }) => {\n    $tooltip.detach();\n    plot.clearCrosshair();\n    plot.unhighlight();\n  };\n\n  this.show = (pos: any, item: any) => {\n    const plot = elem.data().plot;\n    const plotData = plot.getData();\n    const xAxes = plot.getXAxes();\n    const xMode = xAxes[0].options.mode;\n    const seriesList = getSeriesFn();\n    let allSeriesMode = panel.tooltip.shared;\n    let group, value, absoluteTime, hoverInfo, i, series, seriesHtml, tooltipFormat;\n\n    // if panelRelY is defined another panel wants us to show a tooltip\n    // get pageX from position on x axis and pageY from relative position in original panel\n    if (pos.panelRelY) {\n      const pointOffset = plot.pointOffset({ x: pos.x });\n      if (Number.isNaN(pointOffset.left) || pointOffset.left < 0 || pointOffset.left > elem.width()) {\n        self.clear(plot);\n        return;\n      }\n\n      pos.pageX = elem.offset().left + pointOffset.left;\n      pos.pageY = elem.offset().top + elem.height() * pos.panelRelY;\n\n      const scrollTop = $(window).scrollTop() ?? 0;\n      const isVisible = pos.pageY >= scrollTop && pos.pageY <= $(window).innerHeight()! + scrollTop;\n\n      if (!isVisible) {\n        self.clear(plot);\n        return;\n      }\n\n      plot.setCrosshair(pos);\n      allSeriesMode = true;\n\n      if (dashboard.sharedCrosshairModeOnly()) {\n        // if only crosshair mode we are done\n        return;\n      }\n    }\n\n    if (seriesList.length === 0) {\n      return;\n    }\n\n    if (seriesList[0].hasMsResolution) {\n      tooltipFormat = systemDateFormats.fullDateMS;\n    } else {\n      tooltipFormat = systemDateFormats.fullDate;\n    }\n\n    if (allSeriesMode) {\n      plot.unhighlight();\n\n      const seriesHoverInfo = self.getMultiSeriesPlotHoverInfo(plotData, pos);\n\n      seriesHtml = '';\n\n      absoluteTime = dashboard.formatDate(seriesHoverInfo.time, tooltipFormat);\n\n      // Dynamically reorder the hovercard for the current time point if the\n      // option is enabled.\n      if (panel.tooltip.sort === 2) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return b.value - a.value;\n        });\n      } else if (panel.tooltip.sort === 1) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return a.value - b.value;\n        });\n      }\n\n      for (i = 0; i < seriesHoverInfo.length; i++) {\n        hoverInfo = seriesHoverInfo[i];\n\n        if (hoverInfo.hidden) {\n          continue;\n        }\n\n        let highlightClass = '';\n        if (item && hoverInfo.index === item.seriesIndex) {\n          highlightClass = 'graph-tooltip-list-item--highlight';\n        }\n\n        series = seriesList[hoverInfo.index];\n        value = textUtil.sanitize(series.formatValue(hoverInfo.value));\n\n        const color = textUtil.sanitize(hoverInfo.color);\n        const label = textUtil.sanitize(hoverInfo.label);\n\n        seriesHtml +=\n          '<div class=\"graph-tooltip-list-item ' + highlightClass + '\"><div class=\"graph-tooltip-series-name\">';\n        seriesHtml += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + label + ':</div>';\n        seriesHtml += '<div class=\"graph-tooltip-value\">' + value + '</div></div>';\n        plot.highlight(hoverInfo.index, hoverInfo.hoverIndex);\n      }\n\n      self.renderAndShow(absoluteTime, seriesHtml, pos, xMode);\n    } else if (item) {\n      // single series tooltip\n      const color = textUtil.sanitize(item.series.color);\n      series = seriesList[item.seriesIndex];\n      group = '<div class=\"graph-tooltip-list-item\"><div class=\"graph-tooltip-series-name\">';\n      group += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + series.aliasEscaped + ':</div>';\n\n      if (panel.stack && panel.tooltip.value_type === 'individual') {\n        value = item.datapoint[1] - item.datapoint[2];\n      } else {\n        value = item.datapoint[1];\n      }\n\n      value = textUtil.sanitize(series.formatValue(value));\n      absoluteTime = dashboard.formatDate(item.datapoint[0], tooltipFormat);\n\n      group += '<div class=\"graph-tooltip-value\">' + value + '</div>';\n\n      self.renderAndShow(absoluteTime, group, pos, xMode);\n    } else {\n      // no hit\n      $tooltip.detach();\n    }\n  };\n}\n","import { histogram } from 'd3';\n\nimport TimeSeries from 'app/core/time_series2';\n\n/**\n * Convert series into array of series values.\n * @param data Array of series\n */\nexport function getSeriesValues(dataList: TimeSeries[]): number[] {\n  const VALUE_INDEX = 0;\n  const values = [];\n\n  // Count histogam stats\n  for (let i = 0; i < dataList.length; i++) {\n    const series = dataList[i];\n    const datapoints = series.datapoints;\n    for (let j = 0; j < datapoints.length; j++) {\n      if (datapoints[j][VALUE_INDEX] !== null) {\n        values.push(datapoints[j][VALUE_INDEX]);\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert array of values into timeseries-like histogram:\n * [[val_1, count_1], [val_2, count_2], ..., [val_n, count_n]]\n * @param values\n * @param bucketSize\n */\nexport function convertValuesToHistogram(values: number[], bucketSize: number, min: number, max: number): any[] {\n  const minBound = getBucketBound(min, bucketSize);\n  const maxBound = getBucketBound(max, bucketSize);\n\n  const histGenerator = histogram()\n    .domain([minBound, maxBound])\n    .thresholds(Math.round(max - min) / bucketSize);\n\n  return histGenerator(values).map((bin) => {\n    return [bin.x0, bin.length];\n  });\n}\n\n/**\n * Convert series into array of histogram data.\n * @param data Array of series\n * @param bucketSize\n */\nexport function convertToHistogramData(\n  data: any,\n  bucketSize: number,\n  hiddenSeries: any,\n  min: number,\n  max: number\n): any[] {\n  return data.map((series: any) => {\n    const values = getSeriesValues([series]);\n    series.histogram = true;\n    if (!hiddenSeries[series.alias]) {\n      const histogram = convertValuesToHistogram(values, bucketSize, min, max);\n      series.data = histogram;\n    } else {\n      series.data = [];\n    }\n    return series;\n  });\n}\n\nfunction getBucketBound(value: number, bucketSize: number): number {\n  return Math.floor(value / bucketSize) * bucketSize;\n}\n","import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport { isNumber } from 'lodash';\n\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { config } from 'app/core/config';\nimport { CoreEvents } from 'app/types';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup = false;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl: PanelCtrl) {}\n\n  getHandleHtml(handleIndex: any, model: { colorMode: string }, valueStr: any) {\n    let stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt: any) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    let lastY: number | null = null;\n    let posTop: number;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt: any) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      document.removeEventListener('mouseup', stopped);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit(CoreEvents.thresholdChanged, {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    document.addEventListener('mouseup', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex: number, defaultHandleTopPos: number) {\n    const model = this.thresholds[handleIndex];\n    // alerting defines\n    if (!model.visible && (this.panelCtrl as any).alert) {\n      return;\n    }\n\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0;\n\n    // handle no value\n    if (!isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem: JQuery, data: any[]) {\n    this.hasSecondYAxis = false;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot: any) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        }\n      }\n    }\n  }\n}\n","import { AbsoluteTimeRange, dateTime, TimeRange } from '@grafana/data';\n\nexport interface TimeRegionConfig {\n  from?: string;\n  fromDayOfWeek?: number; // 1-7\n\n  to?: string;\n  toDayOfWeek?: number; // 1-7\n}\n\ninterface ParsedTime {\n  dayOfWeek?: number; // 1-7\n  h?: number; // 0-23\n  m?: number; // 0-59\n  s?: number; // 0-59\n}\n\nexport function calculateTimesWithin(cfg: TimeRegionConfig, tRange: TimeRange): AbsoluteTimeRange[] {\n  if (!(cfg.fromDayOfWeek || cfg.from) && !(cfg.toDayOfWeek || cfg.to)) {\n    return [];\n  }\n\n  // So we can mutate\n  const timeRegion = { ...cfg };\n\n  if (timeRegion.from && !timeRegion.to) {\n    timeRegion.to = timeRegion.from;\n  }\n\n  if (!timeRegion.from && timeRegion.to) {\n    timeRegion.from = timeRegion.to;\n  }\n\n  const hRange = {\n    from: parseTimeRange(timeRegion.from),\n    to: parseTimeRange(timeRegion.to),\n  };\n\n  if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n    timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n  }\n\n  if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n    timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n  }\n\n  if (timeRegion.fromDayOfWeek) {\n    hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n  }\n\n  if (timeRegion.toDayOfWeek) {\n    hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n  }\n\n  if (hRange.from.dayOfWeek && hRange.from.h == null && hRange.from.m == null) {\n    hRange.from.h = 0;\n    hRange.from.m = 0;\n    hRange.from.s = 0;\n  }\n\n  if (hRange.to.dayOfWeek && hRange.to.h == null && hRange.to.m == null) {\n    hRange.to.h = 23;\n    hRange.to.m = 59;\n    hRange.to.s = 59;\n  }\n\n  if (!hRange.from || !hRange.to) {\n    return [];\n  }\n\n  if (hRange.from.h == null) {\n    hRange.from.h = 0;\n  }\n\n  if (hRange.to.h == null) {\n    hRange.to.h = 23;\n  }\n\n  const regions: AbsoluteTimeRange[] = [];\n\n  const fromStart = dateTime(tRange.from);\n  fromStart.set('hour', 0);\n  fromStart.set('minute', 0);\n  fromStart.set('second', 0);\n  fromStart.add(hRange.from.h, 'hours');\n  fromStart.add(hRange.from.m, 'minutes');\n  fromStart.add(hRange.from.s, 'seconds');\n\n  while (fromStart.unix() <= tRange.to.unix()) {\n    while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n      fromStart.add(24, 'hours');\n    }\n\n    if (fromStart.unix() > tRange.to.unix()) {\n      break;\n    }\n\n    const fromEnd = dateTime(fromStart);\n\n    if (fromEnd.hour) {\n      if (hRange.from.h <= hRange.to.h) {\n        fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n      } else if (hRange.from.h > hRange.to.h) {\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      } else {\n        fromEnd.add(24 - hRange.from.h, 'hours');\n\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      }\n    }\n\n    fromEnd.set('minute', hRange.to.m ?? 0);\n    fromEnd.set('second', hRange.to.s ?? 0);\n\n    while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n      fromEnd.add(24, 'hours');\n    }\n\n    const outsideRange =\n      (fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix()) ||\n      (fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix());\n\n    if (!outsideRange) {\n      regions.push({ from: fromStart.valueOf(), to: fromEnd.valueOf() });\n    }\n\n    fromStart.add(24, 'hours');\n  }\n\n  return regions;\n}\n\nfunction parseTimeRange(str?: string): ParsedTime {\n  const result: ParsedTime = {};\n  if (!str?.length) {\n    return result;\n  }\n\n  const timeRegex = /^([\\d]+):?(\\d{2})?/;\n  const match = timeRegex.exec(str);\n\n  if (!match) {\n    return result;\n  }\n\n  if (match.length > 1) {\n    result.h = Number(match[1]);\n    result.m = 0;\n\n    if (match.length > 2 && match[2] !== undefined) {\n      result.m = Number(match[2]);\n    }\n\n    if (result.h > 23) {\n      result.h = 23;\n    }\n\n    if (result.m > 59) {\n      result.m = 59;\n    }\n  }\n\n  return result;\n}\n","import 'vendor/flot/jquery.flot';\nimport { map } from 'lodash';\n\nimport { dateTime, GrafanaTheme2, TimeRange } from '@grafana/data';\nimport { config } from 'app/core/config';\nimport { calculateTimesWithin, TimeRegionConfig } from 'app/core/utils/timeRegions';\n\ntype TimeRegionColorDefinition = {\n  fill: string | null;\n  line: string | null;\n};\n\nexport const colorModes: any = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: { fill: 'rgba(255, 255, 255, 0.09)', line: 'rgba(255, 255, 255, 0.2)' },\n    lightColor: { fill: 'rgba(0, 0, 0, 0.09)', line: 'rgba(0, 0, 0, 0.2)' },\n  },\n  red: {\n    title: 'Red',\n    color: { fill: 'rgba(234, 112, 112, 0.12)', line: 'rgba(237, 46, 24, 0.60)' },\n  },\n  green: {\n    title: 'Green',\n    color: { fill: 'rgba(11, 237, 50, 0.090)', line: 'rgba(6,163,69, 0.60)' },\n  },\n  blue: {\n    title: 'Blue',\n    color: { fill: 'rgba(11, 125, 238, 0.12)', line: 'rgba(11, 125, 238, 0.60)' },\n  },\n  yellow: {\n    title: 'Yellow',\n    color: { fill: 'rgba(235, 138, 14, 0.12)', line: 'rgba(247, 149, 32, 0.60)' },\n  },\n  custom: { title: 'Custom' },\n};\n\nexport function getColorModes() {\n  return map(Object.keys(colorModes), (key) => {\n    return {\n      key,\n      value: colorModes[key].title,\n    };\n  });\n}\n\nfunction getColor(timeRegion: any, theme: GrafanaTheme2): TimeRegionColorDefinition {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? theme.visualization.getColorByName(timeRegion.fillColor) : null,\n      line: timeRegion.line && timeRegion.lineColor ? theme.visualization.getColorByName(timeRegion.lineColor) : null,\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme.isLight ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.fill) : null,\n    line: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.line) : null,\n  };\n}\n\ninterface GraphTimeRegionConfig extends TimeRegionConfig {\n  colorMode: string;\n\n  fill: boolean;\n  fillColor: string;\n\n  line: boolean;\n  lineColor: string;\n}\n\nexport class TimeRegionManager {\n  plot: any;\n  timeRegions?: TimeRegionConfig[];\n\n  constructor(private panelCtrl: any) {}\n\n  draw(plot: any) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.timeRegions?.length) {\n      return;\n    }\n\n    // The panel range\n    const tRange: TimeRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc(),\n      raw: {\n        from: '',\n        to: '',\n      },\n    };\n\n    for (const tr of panel.timeRegions) {\n      const timeRegion: GraphTimeRegionConfig = tr;\n      const regions = calculateTimesWithin(tr, tRange);\n      if (regions.length) {\n        const timeRegionColor = getColor(timeRegion, config.theme2);\n\n        for (let j = 0; j < regions.length; j++) {\n          const r = regions[j];\n          if (timeRegion.fill) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.to },\n              color: timeRegionColor.fill,\n            });\n          }\n\n          if (timeRegion.line) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.from },\n              color: timeRegionColor.line,\n            });\n            options.grid.markings.push({\n              xaxis: { from: r.to, to: r.to },\n              color: timeRegionColor.line,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n","import {\n  AbsoluteTimeRange,\n  DataFrame,\n  FieldType,\n  LegacyGraphHoverEventPayload,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\n\n/**\n * Find the min and max time that covers all data\n */\nexport function getDataTimeRange(frames: DataFrame[]): AbsoluteTimeRange | undefined {\n  const range: AbsoluteTimeRange = {\n    from: Number.MAX_SAFE_INTEGER,\n    to: Number.MIN_SAFE_INTEGER,\n  };\n  let found = false;\n  const reducers = [ReducerID.min, ReducerID.max];\n  for (const frame of frames) {\n    for (const field of frame.fields) {\n      if (field.type === FieldType.time) {\n        const calcs = reduceField({ field, reducers });\n        range.from = Math.min(range.from, calcs[ReducerID.min]);\n        range.to = Math.max(range.to, calcs[ReducerID.max]);\n        found = true;\n      }\n    }\n  }\n  return found ? range : undefined;\n}\n\n// Check whether event is LegacyGraphHoverEvent\nexport function isLegacyGraphHoverEvent(event: unknown): event is LegacyGraphHoverEventPayload {\n  return Boolean(event && typeof event === 'object' && event.hasOwnProperty('pos'));\n}\n","import 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport './jquery.flot.events';\n\nimport $ from 'jquery';\nimport { clone, find, flatten, isUndefined, map, max as _max, min as _min, sortBy as _sortBy, toNumber } from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  DataFrame,\n  DataFrameView,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  DataHoverPayload,\n  DecimalCount,\n  FieldDisplay,\n  FieldType,\n  formattedValueToString,\n  getDisplayProcessor,\n  getFlotPairsConstant,\n  getTimeField,\n  getValueFormat,\n  hasLinks,\n  LegacyEventHandler,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  LegacyGraphHoverEventPayload,\n  LinkModelSupplier,\n  PanelEvents,\n  toUtc,\n} from '@grafana/data';\nimport { graphTickFormatter, graphTimeFormat, MenuItemProps, MenuItemsGroup } from '@grafana/ui';\nimport { coreModule } from 'app/angular/core_module';\nimport config from 'app/core/config';\nimport { updateLegendValues } from 'app/core/core';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { provideTheme } from 'app/core/utils/ConfigProvider';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nimport { DashboardModel } from '../../../features/dashboard/state';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { GraphLegendProps, Legend } from './Legend/Legend';\nimport { alignYLevel } from './align_yaxes';\nimport { EventManager } from './event_manager';\nimport GraphTooltip from './graph_tooltip';\nimport { convertToHistogramData } from './histogram';\nimport { GraphCtrl } from './module';\nimport { ThresholdManager } from './threshold_manager';\nimport { TimeRegionManager } from './time_region_manager';\nimport { isLegacyGraphHoverEvent } from './utils';\n\nconst LegendWithThemeProvider = provideTheme(Legend, config.theme2);\n\nclass GraphElement {\n  ctrl: GraphCtrl;\n  contextMenu: GraphContextMenuCtrl;\n  tooltip: any;\n  dashboard: DashboardModel;\n  annotations: object[];\n  panel: any;\n  plot: any;\n  sortedSeries?: any[];\n  data: any[] = [];\n  panelWidth: number;\n  eventManager: EventManager;\n  thresholdManager: ThresholdManager;\n  timeRegionManager: TimeRegionManager;\n  declare legendElem: HTMLElement;\n\n  constructor(\n    private scope: any,\n    private elem: JQuery & {\n      bind(eventType: string, handler: (eventObject: JQueryEventObject, ...args: any[]) => any): JQuery; // need to extend with Plot\n    },\n    private timeSrv: TimeSrv\n  ) {\n    this.ctrl = scope.ctrl;\n    this.contextMenu = scope.ctrl.contextMenuCtrl;\n    this.dashboard = this.ctrl.dashboard;\n    this.panel = this.ctrl.panel;\n    this.annotations = [];\n\n    this.panelWidth = 0;\n    this.eventManager = new EventManager(this.ctrl);\n    this.thresholdManager = new ThresholdManager(this.ctrl);\n    this.timeRegionManager = new TimeRegionManager(this.ctrl);\n    // @ts-ignore\n    this.tooltip = new GraphTooltip(this.elem, this.ctrl.dashboard, this.scope, () => {\n      return this.sortedSeries;\n    });\n\n    // panel events\n    this.ctrl.events.on(PanelEvents.panelTeardown, this.onPanelTeardown.bind(this));\n    this.ctrl.events.on(PanelEvents.render, this.onRender.bind(this));\n\n    // global events\n    // Using old way here to use the scope unsubscribe model as the new $on function does not take scope\n    this.ctrl.dashboard.events.on(LegacyGraphHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    this.ctrl.dashboard.events.on(DataHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(DataHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    // plot events\n    this.elem.bind('plotselected', this.onPlotSelected.bind(this));\n    this.elem.bind('plotclick', this.onPlotClick.bind(this));\n\n    // get graph legend element\n    if (this.elem && this.elem.parent) {\n      this.legendElem = this.elem.parent().find('.graph-legend')[0];\n    }\n  }\n\n  onRender(renderData: any[]) {\n    this.data = renderData || this.data;\n    if (!this.data) {\n      return;\n    }\n\n    this.annotations = this.ctrl.annotations || [];\n    this.buildFlotPairs(this.data);\n    const graphHeight = this.ctrl.height;\n    updateLegendValues(this.data, this.panel, graphHeight);\n\n    if (!this.panel.legend.show) {\n      if (this.legendElem.hasChildNodes()) {\n        ReactDOM.unmountComponentAtNode(this.legendElem);\n      }\n      this.renderPanel();\n      return;\n    }\n\n    const { values, min, max, avg, current, total } = this.panel.legend;\n    const { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero } = this.panel.legend;\n    const legendOptions = { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero };\n    const valueOptions = { values, min, max, avg, current, total };\n    const legendProps: GraphLegendProps = {\n      seriesList: this.data,\n      hiddenSeries: this.ctrl.hiddenSeries,\n      ...legendOptions,\n      ...valueOptions,\n      onToggleSeries: this.ctrl.onToggleSeries,\n      onToggleSort: this.ctrl.onToggleSort,\n      onColorChange: this.ctrl.onColorChange,\n      onToggleAxis: this.ctrl.onToggleAxis,\n    };\n\n    const legendReactElem = React.createElement(LegendWithThemeProvider, legendProps);\n    ReactDOM.render(legendReactElem, this.legendElem, () => this.renderPanel());\n  }\n\n  onGraphHover(evt: LegacyGraphHoverEventPayload | DataHoverPayload) {\n    // ignore other graph hover events if shared tooltip is disabled\n    if (!this.dashboard.sharedTooltipModeEnabled()) {\n      return;\n    }\n\n    if (isLegacyGraphHoverEvent(evt)) {\n      // ignore if we are the emitter\n      if (!this.plot || evt.panel?.id === this.panel.id || this.ctrl.otherPanelInFullscreenMode()) {\n        return;\n      }\n\n      this.tooltip.show(evt.pos);\n    }\n\n    // DataHoverEvent can come from multiple panels that doesn't include x position\n    if (!evt.point?.time) {\n      return;\n    }\n\n    this.tooltip.show({ x: evt.point.time, panelRelY: evt.point.panelRelY ?? 1 });\n  }\n\n  onPanelTeardown() {\n    if (this.plot) {\n      this.plot.destroy();\n      this.plot = null;\n    }\n\n    this.tooltip.destroy();\n    this.elem.off();\n    this.elem.remove();\n\n    ReactDOM.unmountComponentAtNode(this.legendElem);\n  }\n\n  onGraphHoverClear(handler: LegacyEventHandler<any>) {\n    if (this.plot) {\n      this.tooltip.clear(this.plot);\n    }\n  }\n\n  onPlotSelected(event: JQueryEventObject, ranges: any) {\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      this.plot.clearSelection();\n      return;\n    }\n\n    if ((ranges.ctrlKey || ranges.metaKey) && this.dashboard.canAddAnnotations()) {\n      // Add annotation\n      setTimeout(() => {\n        this.eventManager.updateTime(ranges.xaxis);\n      }, 100);\n    } else {\n      this.scope.$apply(() => {\n        this.timeSrv.setTime({\n          from: toUtc(ranges.xaxis.from),\n          to: toUtc(ranges.xaxis.to),\n        });\n      });\n    }\n  }\n\n  getContextMenuItemsSupplier = (\n    flotPosition: { x: number; y: number },\n    linksSupplier?: LinkModelSupplier<FieldDisplay>\n  ): (() => MenuItemsGroup[]) => {\n    return () => {\n      // Fixed context menu items\n      const items: MenuItemsGroup[] = this.dashboard.canAddAnnotations()\n        ? [\n            {\n              items: [\n                {\n                  label: 'Add annotation',\n                  ariaLabel: 'Add annotation',\n                  icon: 'comment-alt',\n                  onClick: () => this.eventManager.updateTime({ from: flotPosition.x, to: null }),\n                },\n              ],\n            },\n          ]\n        : [];\n\n      if (!linksSupplier) {\n        return items;\n      }\n\n      const dataLinks = [\n        {\n          items: linksSupplier.getLinks(this.panel.replaceVariables).map<MenuItemProps>((link) => {\n            return {\n              label: link.title,\n              ariaLabel: link.title,\n              url: link.href,\n              target: link.target,\n              icon: link.target === '_self' ? 'link' : 'external-link-alt',\n              onClick: link.onClick,\n            };\n          }),\n        },\n      ];\n\n      return [...items, ...dataLinks];\n    };\n  };\n\n  onPlotClick(event: JQueryEventObject, pos: any, item: any) {\n    const scrollContextElement = this.elem.closest('.view') ? this.elem.closest('.view').get()[0] : null;\n    const contextMenuSourceItem = item;\n\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      return;\n    }\n\n    if (pos.ctrlKey || pos.metaKey) {\n      // Skip if range selected (added in \"plotselected\" event handler)\n      if (pos.x !== pos.x1) {\n        return;\n      }\n\n      // skip if dashboard is not saved yet (exists in db) or user cannot edit\n      if (!this.dashboard.id || !this.dashboard.canAddAnnotations()) {\n        return;\n      }\n\n      setTimeout(() => {\n        this.eventManager.updateTime({ from: pos.x, to: null });\n      }, 100);\n      return;\n    } else {\n      this.tooltip.clear(this.plot);\n      let linksSupplier: LinkModelSupplier<FieldDisplay> | undefined;\n\n      if (item) {\n        // pickup y-axis index to know which field's config to apply\n        const yAxisConfig = this.panel.yaxes[item.series.yaxis.n === 2 ? 1 : 0];\n        const dataFrame = this.ctrl.dataList[item.series.dataFrameIndex];\n        const field = dataFrame.fields[item.series.fieldIndex];\n        const dataIndex = this.getDataIndexWithNullValuesCorrection(item, dataFrame);\n\n        let links: any[] = this.panel.options.dataLinks || [];\n        const hasLinksValue = hasLinks(field);\n        if (hasLinksValue) {\n          // Append the configured links to the panel datalinks\n          links = [...links, ...field.config.links!];\n        }\n        const fieldConfig = {\n          decimals: yAxisConfig.decimals,\n          links,\n        };\n        const fieldDisplay = getDisplayProcessor({\n          field: { config: fieldConfig, type: FieldType.number },\n          theme: config.theme2,\n          timeZone: this.dashboard.getTimezone(),\n        })(field.values.get(dataIndex));\n        linksSupplier = links.length\n          ? getFieldLinksSupplier({\n              display: fieldDisplay,\n              name: field.name,\n              view: new DataFrameView(dataFrame),\n              rowIndex: dataIndex,\n              colIndex: item.series.fieldIndex,\n              field: fieldConfig,\n              hasLinks: hasLinksValue,\n            })\n          : undefined;\n      }\n\n      this.scope.$apply(() => {\n        // Setting nearest CustomScrollbar element as a scroll context for graph context menu\n        this.contextMenu.setScrollContextElement(scrollContextElement);\n        this.contextMenu.setSource(contextMenuSourceItem);\n        this.contextMenu.setMenuItemsSupplier(this.getContextMenuItemsSupplier(pos, linksSupplier) as any);\n        this.contextMenu.toggleMenu(pos);\n      });\n    }\n  }\n\n  getDataIndexWithNullValuesCorrection(item: any, dataFrame: DataFrame): number {\n    /** This is one added to handle the scenario where we have null values in\n     *  the time series data and the: \"visualization options -> null value\"\n     *  set to \"connected\". In this scenario we will get the wrong dataIndex.\n     *\n     *  https://github.com/grafana/grafana/issues/22651\n     */\n    const { datapoint, dataIndex } = item;\n\n    if (!Array.isArray(datapoint) || datapoint.length === 0) {\n      return dataIndex;\n    }\n\n    const ts = datapoint[0];\n    const { timeField } = getTimeField(dataFrame);\n\n    if (!timeField || !timeField.values) {\n      return dataIndex;\n    }\n\n    const field = timeField.values.get(dataIndex);\n\n    if (field === ts) {\n      return dataIndex;\n    }\n\n    const correctIndex = timeField.values.toArray().findIndex((value) => value === ts);\n    return correctIndex > -1 ? correctIndex : dataIndex;\n  }\n\n  shouldAbortRender() {\n    if (!this.data) {\n      return true;\n    }\n\n    if (this.panelWidth === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  drawHook(plot: any) {\n    // add left axis labels\n    if (this.panel.yaxes[0].label && this.panel.yaxes[0].show) {\n      $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[0].label)\n        .appendTo(this.elem);\n    }\n\n    // add right axis labels\n    if (this.panel.yaxes[1].label && this.panel.yaxes[1].show) {\n      $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[1].label)\n        .appendTo(this.elem);\n    }\n\n    const { dataWarning } = this.ctrl;\n    if (dataWarning) {\n      const msg = $(`<div class=\"datapoints-warning flot-temp-elem\">${dataWarning.title}</div>`);\n      if (dataWarning.action) {\n        $(`<button class=\"btn btn-secondary\">${dataWarning.actionText}</button>`)\n          .click(dataWarning.action)\n          .appendTo(msg);\n      }\n      msg.appendTo(this.elem);\n    }\n    this.thresholdManager.draw(plot);\n    this.timeRegionManager.draw(plot);\n  }\n\n  processOffsetHook(plot: any, gridMargin: { left: number; right: number }) {\n    const left = this.panel.yaxes[0];\n    const right = this.panel.yaxes[1];\n    if (left.show && left.label) {\n      gridMargin.left = 20;\n    }\n    if (right.show && right.label) {\n      gridMargin.right = 20;\n    }\n\n    // apply y-axis min/max options\n    const yaxis = plot.getYAxes();\n    for (let i = 0; i < yaxis.length; i++) {\n      const axis: any = yaxis[i];\n      const panelOptions = this.panel.yaxes[i];\n      axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n      axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n    }\n  }\n\n  processRangeHook(plot: any) {\n    const yAxes = plot.getYAxes();\n    const align = this.panel.yaxis.align || false;\n\n    if (yAxes.length > 1 && align === true) {\n      const level = this.panel.yaxis.alignLevel || 0;\n      alignYLevel(yAxes, parseFloat(level));\n    }\n  }\n\n  // Series could have different timeSteps,\n  // let's find the smallest one so that bars are correctly rendered.\n  // In addition, only take series which are rendered as bars for this.\n  getMinTimeStepOfSeries(data: any[]) {\n    let min = Number.MAX_VALUE;\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].stats.timeStep) {\n        continue;\n      }\n      if (this.panel.bars) {\n        if (data[i].bars && data[i].bars.show === false) {\n          continue;\n        }\n      } else {\n        if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n          continue;\n        }\n      }\n\n      if (data[i].stats.timeStep < min) {\n        min = data[i].stats.timeStep;\n      }\n    }\n\n    return min;\n  }\n\n  // Function for rendering panel\n  renderPanel() {\n    this.panelWidth = this.elem.width() ?? 0;\n\n    if (this.shouldAbortRender()) {\n      return;\n    }\n\n    // give space to alert editing\n    this.thresholdManager.prepare(this.elem, this.data);\n\n    // un-check dashes if lines are unchecked\n    this.panel.dashes = this.panel.lines ? this.panel.dashes : false;\n\n    // Populate element\n    const options: any = this.buildFlotOptions(this.panel);\n    this.prepareXAxis(options, this.panel);\n    this.configureYAxisOptions(this.data, options);\n    this.thresholdManager.addFlotOptions(options, this.panel);\n    this.timeRegionManager.addFlotOptions(options, this.panel);\n    this.eventManager.addFlotEvents(this.annotations, options);\n    this.sortedSeries = this.sortSeries(this.data, this.panel);\n    this.callPlot(options, true);\n  }\n\n  buildFlotPairs(data: any) {\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      series.data = series.getFlotPairs(series.nullPointMode || this.panel.nullPointMode);\n\n      if (series.transform === 'constant') {\n        series.data = getFlotPairsConstant(series.data, this.ctrl.range!);\n      }\n\n      // if hidden remove points and disable stack\n      if (this.ctrl.hiddenSeries[series.alias]) {\n        series.data = [];\n        series.stack = false;\n      }\n    }\n  }\n\n  prepareXAxis(options: any, panel: any) {\n    switch (panel.xaxis.mode) {\n      case 'series': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n\n        for (let i = 0; i < this.data.length; i++) {\n          const series = this.data[i];\n          series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n        }\n\n        this.addXSeriesAxis(options);\n        break;\n      }\n      case 'histogram': {\n        let bucketSize: number;\n\n        if (this.data.length) {\n          let histMin = _min(map(this.data, (s) => s.stats.min));\n          let histMax = _max(map(this.data, (s) => s.stats.max));\n          const ticks = panel.xaxis.buckets || this.panelWidth / 50;\n          if (panel.xaxis.min != null) {\n            const isInvalidXaxisMin = tickStep(panel.xaxis.min, histMax, ticks) <= 0;\n            histMin = isInvalidXaxisMin ? histMin : panel.xaxis.min;\n          }\n          if (panel.xaxis.max != null) {\n            const isInvalidXaxisMax = tickStep(histMin, panel.xaxis.max, ticks) <= 0;\n            histMax = isInvalidXaxisMax ? histMax : panel.xaxis.max;\n          }\n          bucketSize = tickStep(histMin, histMax, ticks);\n          options.series.bars.barWidth = bucketSize * 0.8;\n          this.data = convertToHistogramData(this.data, bucketSize, this.ctrl.hiddenSeries, histMin, histMax);\n        } else {\n          bucketSize = 0;\n        }\n\n        this.addXHistogramAxis(options, bucketSize);\n        break;\n      }\n      case 'table': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n        this.addXTableAxis(options);\n        break;\n      }\n      default: {\n        options.series.bars.barWidth = this.getMinTimeStepOfSeries(this.data) / 1.5;\n        this.addTimeAxis(options);\n        break;\n      }\n    }\n  }\n\n  callPlot(options: any, incrementRenderCounter: boolean) {\n    try {\n      this.plot = $.plot(this.elem, this.sortedSeries, options);\n      if (this.ctrl.renderError) {\n        delete this.ctrl.error;\n      }\n    } catch (e) {\n      console.error('flotcharts error', e);\n      this.ctrl.error = e instanceof Error ? e.message : 'Render Error';\n      this.ctrl.renderError = true;\n    }\n\n    if (incrementRenderCounter) {\n      this.ctrl.renderingCompleted();\n    }\n  }\n\n  buildFlotOptions(panel: any) {\n    let gridColor = '#c8c8c8';\n    if (config.bootData.user.lightTheme === true) {\n      gridColor = '#a1a1a1';\n    }\n    const stack = panel.stack ? true : null;\n    const options: any = {\n      hooks: {\n        draw: [this.drawHook.bind(this)],\n        processOffset: [this.processOffsetHook.bind(this)],\n        processRange: [this.processRangeHook.bind(this)],\n      },\n      legend: { show: false },\n      series: {\n        stackpercent: panel.stack ? panel.percentage : false,\n        stack: panel.percentage ? null : stack,\n        lines: {\n          show: panel.lines,\n          zero: false,\n          fill: this.translateFillOption(panel.fill),\n          fillColor: this.getFillGradient(panel.fillGradient),\n          lineWidth: panel.dashes ? 0 : panel.linewidth,\n          steps: panel.steppedLine,\n        },\n        dashes: {\n          show: panel.dashes,\n          lineWidth: panel.linewidth,\n          dashLength: [panel.dashLength, panel.spaceLength],\n        },\n        bars: {\n          show: panel.bars,\n          fill: 1,\n          barWidth: 1,\n          zero: false,\n          lineWidth: 0,\n        },\n        points: {\n          show: panel.points,\n          fill: 1,\n          fillColor: false,\n          radius: panel.points ? panel.pointradius : 2,\n        },\n        shadowSize: 0,\n      },\n      yaxes: [],\n      xaxis: {},\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        hoverable: true,\n        clickable: true,\n        color: gridColor,\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n        mouseActiveRadius: 30,\n      },\n      selection: {\n        mode: 'x',\n        color: '#666',\n      },\n      crosshair: {\n        mode: 'x',\n      },\n    };\n    return options;\n  }\n\n  sortSeries(series: any, panel: any) {\n    const sortBy = panel.legend.sort;\n    const sortOrder = panel.legend.sortDesc;\n    const haveSortBy = sortBy !== null && sortBy !== undefined && panel.legend[sortBy];\n    const haveSortOrder = sortOrder !== null && sortOrder !== undefined;\n    const shouldSortBy = panel.stack && haveSortBy && haveSortOrder && panel.legend.alignAsTable;\n    const sortDesc = panel.legend.sortDesc === true ? -1 : 1;\n\n    if (shouldSortBy) {\n      return _sortBy(series, (s) => s.stats[sortBy] * sortDesc);\n    } else {\n      return _sortBy(series, (s) => s.zindex);\n    }\n  }\n\n  getFillGradient(amount: number) {\n    if (!amount) {\n      return null;\n    }\n\n    return {\n      colors: [{ opacity: 0.0 }, { opacity: amount / 10 }],\n    };\n  }\n\n  translateFillOption(fill: number) {\n    if (this.panel.percentage && this.panel.stack) {\n      return fill === 0 ? 0.001 : fill / 10;\n    } else {\n      return fill / 10;\n    }\n  }\n\n  addTimeAxis(options: any) {\n    const ticks = this.panelWidth / 100;\n    const min = isUndefined(this.ctrl.range!.from) ? null : this.ctrl.range!.from.valueOf();\n    const max = isUndefined(this.ctrl.range!.to) ? null : this.ctrl.range!.to.valueOf();\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: 'time',\n      min: min,\n      max: max,\n      label: 'Datetime',\n      ticks: ticks,\n      timeformat: graphTimeFormat(ticks, min, max),\n      tickFormatter: graphTickFormatter,\n    };\n  }\n\n  addXSeriesAxis(options: any) {\n    const ticks = map(this.data, (series, index) => {\n      return [index + 1, series.alias];\n    });\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  addXHistogramAxis(options: any, bucketSize: number) {\n    let ticks: number | number[];\n    let min: number | undefined;\n    let max: number | undefined;\n\n    const defaultTicks = this.panelWidth / 50;\n\n    if (this.data.length && bucketSize) {\n      const tickValues = [];\n\n      for (const d of this.data) {\n        for (const point of d.data) {\n          tickValues[point[0]] = true;\n        }\n      }\n\n      ticks = Object.keys(tickValues).map((v) => Number(v));\n      min = _min(ticks)!;\n      max = _max(ticks)!;\n\n      // Adjust tick step\n      let tickStep = bucketSize;\n      let ticksNum = Math.floor((max - min) / tickStep);\n      while (ticksNum > defaultTicks) {\n        tickStep = tickStep * 2;\n        ticksNum = Math.ceil((max - min) / tickStep);\n      }\n\n      // Expand ticks for pretty view\n      min = Math.floor(min / tickStep) * tickStep;\n      // 1.01 is 101% - ensure we have enough space for last bar\n      max = Math.ceil((max * 1.01) / tickStep) * tickStep;\n\n      ticks = [];\n      for (let i = min; i <= max; i += tickStep) {\n        ticks.push(i);\n      }\n    } else {\n      // Set defaults if no data\n      ticks = defaultTicks / 2;\n      min = 0;\n      max = 1;\n    }\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: min,\n      max: max,\n      label: 'Histogram',\n      ticks: ticks,\n    };\n\n    // Use 'short' format for histogram values\n    this.configureAxisMode(options.xaxis, 'short', null);\n  }\n\n  addXTableAxis(options: any) {\n    let ticks = map(this.data, (series, seriesIndex) => {\n      return map(series.datapoints, (point, pointIndex) => {\n        const tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n        return [tickIndex + 1, point[1]];\n      });\n    });\n    // @ts-ignore, potential bug? is this flattenDeep?\n    ticks = flatten(ticks, true);\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  configureYAxisOptions(data: any, options: any) {\n    const defaults = {\n      position: 'left',\n      show: this.panel.yaxes[0].show,\n      index: 1,\n      logBase: this.panel.yaxes[0].logBase || 1,\n      min: this.parseNumber(this.panel.yaxes[0].min),\n      max: this.parseNumber(this.panel.yaxes[0].max),\n      tickDecimals: this.panel.yaxes[0].decimals,\n    };\n\n    options.yaxes.push(defaults);\n\n    if (find(data, { yaxis: 2 })) {\n      const secondY = clone(defaults);\n      secondY.index = 2;\n      secondY.show = this.panel.yaxes[1].show;\n      secondY.logBase = this.panel.yaxes[1].logBase || 1;\n      secondY.position = 'right';\n      secondY.min = this.parseNumber(this.panel.yaxes[1].min);\n      secondY.max = this.parseNumber(this.panel.yaxes[1].max);\n      secondY.tickDecimals = this.panel.yaxes[1].decimals;\n      options.yaxes.push(secondY);\n\n      this.applyLogScale(options.yaxes[1], data);\n      this.configureAxisMode(\n        options.yaxes[1],\n        this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[1].format,\n        this.panel.yaxes[1].decimals\n      );\n    }\n    this.applyLogScale(options.yaxes[0], data);\n    this.configureAxisMode(\n      options.yaxes[0],\n      this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[0].format,\n      this.panel.yaxes[0].decimals\n    );\n  }\n\n  parseNumber(value: any) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    return toNumber(value);\n  }\n\n  applyLogScale(axis: any, data: any) {\n    if (axis.logBase === 1) {\n      return;\n    }\n\n    const minSetToZero = axis.min === 0;\n\n    if (axis.min < Number.MIN_VALUE) {\n      axis.min = null;\n    }\n    if (axis.max < Number.MIN_VALUE) {\n      axis.max = null;\n    }\n\n    let series, i;\n    let max = axis.max,\n      min = axis.min;\n\n    for (i = 0; i < data.length; i++) {\n      series = data[i];\n      if (series.yaxis === axis.index) {\n        if (!max || max < series.stats.max) {\n          max = series.stats.max;\n        }\n        if (!min || min > series.stats.logmin) {\n          min = series.stats.logmin;\n        }\n      }\n    }\n\n    axis.transform = (v: number) => {\n      return v < Number.MIN_VALUE ? null : Math.log(v) / Math.log(axis.logBase);\n    };\n    axis.inverseTransform = (v: any) => {\n      return Math.pow(axis.logBase, v);\n    };\n\n    if (!max && !min) {\n      max = axis.inverseTransform(+2);\n      min = axis.inverseTransform(-2);\n    } else if (!max) {\n      max = min * axis.inverseTransform(+4);\n    } else if (!min) {\n      min = max * axis.inverseTransform(-4);\n    }\n\n    if (axis.min) {\n      min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n    } else {\n      min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n    }\n    if (axis.max) {\n      max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n    } else {\n      max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n    }\n\n    if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n      return;\n    }\n\n    if (Number.isFinite(min) && Number.isFinite(max)) {\n      if (minSetToZero) {\n        axis.min = 0.1;\n        min = 1;\n      }\n\n      axis.ticks = this.generateTicksForLogScaleYAxis(min, max, axis.logBase);\n      if (minSetToZero) {\n        axis.ticks.unshift(0.1);\n      }\n      if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n        axis.max = axis.ticks[axis.ticks.length - 1];\n      }\n    } else {\n      axis.ticks = [1, 2];\n      delete axis.min;\n      delete axis.max;\n    }\n  }\n\n  generateTicksForLogScaleYAxis(min: any, max: number, logBase: number) {\n    let ticks = [];\n\n    let nextTick;\n    for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n      ticks.push(nextTick);\n    }\n\n    const maxNumTicks = Math.ceil(this.ctrl.height / 25);\n    const numTicks = ticks.length;\n    if (numTicks > maxNumTicks) {\n      const factor = Math.ceil(numTicks / maxNumTicks) * logBase;\n      ticks = [];\n\n      for (nextTick = min; nextTick <= max * factor; nextTick *= factor) {\n        ticks.push(nextTick);\n      }\n    }\n\n    return ticks;\n  }\n\n  configureAxisMode(axis: { tickFormatter: (val: any, axis: any) => string }, format: string, decimals?: DecimalCount) {\n    axis.tickFormatter = (val, axis) => {\n      const formatter = getValueFormat(format);\n\n      if (!formatter) {\n        throw new Error(`Unit '${format}' is not supported`);\n      }\n\n      return formattedValueToString(formatter(val, decimals));\n    };\n  }\n}\n\ncoreModule.directive('grafanaGraph', ['timeSrv', 'popoverSrv', 'contextSrv', graphDirective]);\n\nfunction graphDirective(timeSrv: TimeSrv, popoverSrv: any, contextSrv: ContextSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: (scope: any, elem: JQuery) => {\n      return new GraphElement(scope, elem, timeSrv);\n    },\n  };\n}\n\nexport { GraphElement, graphDirective };\n","import { map, each, isUndefined } from 'lodash';\n\nimport { textUtil } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\n\ncoreModule.controller('SeriesOverridesCtrl', ['$scope', '$element', 'popoverSrv', SeriesOverridesCtrl]);\n\nexport function SeriesOverridesCtrl($scope: any, $element: JQuery, popoverSrv: any) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name: string, propertyName: string, values: any) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: map(values, (value) => {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item: { propertyName: string }, subItem: { value: any }) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = (color: any) => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n\n    // update picker model so that the picker UI will also update\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = (color: any) => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: { color },\n    };\n\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = (option: { propertyName: string | number }) => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return map($scope.ctrl.seriesList, (series) => {\n      return textUtil.escapeHtml(series.alias);\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    each($scope.overrideMenu, (option) => {\n      const value = $scope.override[option.propertyName];\n      if (isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Fill gradient', 'fillGradient', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Hidden Series', 'hiddenSeries', [true, false]);\n  $scope.addOverrideOption(\n    'Dash Length',\n    'dashLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption(\n    'Dash Space',\n    'spaceLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n","import tinycolor from 'tinycolor2';\n\nimport coreModule from 'app/angular/core_module';\nimport config from 'app/core/config';\nexport class ThresholdFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n\n  static $inject = ['$scope'];\n\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert && !config.unifiedAlertingEnabled) {\n      this.disabled = true;\n    }\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({\n      value: undefined,\n      colorMode: 'critical',\n      op: 'gt',\n      fill: true,\n      line: true,\n      yaxis: 'left',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index: number) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].lineColor = newColor;\n      this.render();\n    };\n  }\n\n  onThresholdTypeChange(index: number) {\n    // Because of the ng-model binding, threshold's color mode is already set here\n    if (this.panel.thresholds[index].colorMode === 'custom') {\n      this.panel.thresholds[index].fillColor = tinycolor(config.theme2.v1.palette.blue85).setAlpha(0.2).toRgbString();\n      this.panel.thresholds[index].lineColor = tinycolor(config.theme2.v1.palette.blue77).setAlpha(0.6).toRgbString();\n    }\n    this.panelCtrl.render();\n  }\n}\n\ncoreModule.directive('graphThresholdForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/thresholds_form.html',\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import coreModule from 'app/angular/core_module';\n\nimport { getColorModes } from './time_region_manager';\n\nexport class TimeRegionFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n  colorModes: any;\n\n  static $inject = ['$scope'];\n\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index: number) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import $ from 'jquery';\nimport { isString, escape } from 'lodash';\n\nimport coreModule from 'app/angular/core_module';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { DashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\ncoreModule.directive('annotationTooltip', ['$sanitize', 'dashboardSrv', '$compile', annotationTooltipDirective]);\n\nexport function annotationTooltipDirective($sanitize: any, dashboardSrv: DashboardSrv, $compile: any) {\n  function sanitizeString(str: string) {\n    try {\n      return $sanitize(str);\n    } catch (err) {\n      console.log('Could not sanitize annotation string, html escaping instead');\n      return escape(str);\n    }\n  }\n\n  return {\n    restrict: 'E',\n    scope: {\n      event: '=',\n      onEdit: '&',\n    },\n    link: (scope: any, element: JQuery) => {\n      const event = scope.event;\n      let title = event.title;\n      let text = event.text;\n      const dashboard = dashboardSrv.getCurrent();\n\n      let tooltip = '<div class=\"graph-annotation\">';\n      let titleStateClass = '';\n\n      if (event.alertId !== undefined && event.newState) {\n        const stateModel = alertDef.getStateDisplayModel(event.newState);\n        titleStateClass = stateModel.stateClass;\n        title = `<i class=\"${stateModel.iconClass}\"></i> ${stateModel.text}`;\n        text = alertDef.getAlertAnnotationInfo(event);\n        if (event.text) {\n          text = text + '<br />' + event.text;\n        }\n      } else if (title) {\n        text = title + '<br />' + (isString(text) ? text : '');\n        title = '';\n      }\n\n      let header = `<div class=\"graph-annotation__header\">`;\n      if (event.login && event.avatarUrl) {\n        header += `<div class=\"graph-annotation__user\" bs-tooltip=\"'Created by ${event.login}'\"><img src=\"${event.avatarUrl}\" /></div>`;\n      }\n      header += `\n          <span class=\"graph-annotation__title ${titleStateClass}\">${sanitizeString(title)}</span>\n          <span class=\"graph-annotation__time\">${dashboard?.formatDate(event.min)}</span>\n      `;\n\n      // Show edit icon only for users with at least Editor role\n      if (event.id && dashboard?.canEditAnnotations(event.dashboardId)) {\n        header += `\n          <span class=\"pointer graph-annotation__edit-icon\" ng-click=\"onEdit()\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </span>\n        `;\n      }\n\n      header += `</div>`;\n      tooltip += header;\n      tooltip += '<div class=\"graph-annotation__body\">';\n\n      if (text) {\n        tooltip += '<div ng-non-bindable>' + sanitizeString(text.replace(/\\n/g, '<br>')) + '</div>';\n      }\n\n      const tags = event.tags;\n\n      if (tags && tags.length) {\n        scope.tags = tags;\n        tooltip +=\n          '<span class=\"label label-tag small\" ng-repeat=\"tag in tags\" tag-color-from-name=\"tag\">{{tag}}</span><br/>';\n      }\n\n      tooltip += '</div>';\n      tooltip += '</div>';\n\n      const $tooltip = $(tooltip);\n      $tooltip.appendTo(element);\n\n      $compile(element.contents())(scope);\n    },\n  };\n}\n","import { cloneDeep, isNumber } from 'lodash';\n\nimport { AnnotationEvent, dateTime } from '@grafana/data';\nimport { coreModule } from 'app/angular/core_module';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from '../../../features/annotations/api';\nimport { getDashboardQueryRunner } from '../../../features/query/state/DashboardQueryRunner/DashboardQueryRunner';\n\nexport class EventEditorCtrl {\n  // @ts-ignore initialized through Angular not constructor\n  panelCtrl: MetricsPanelCtrl;\n  // @ts-ignore initialized through Angular not constructor\n  event: AnnotationEvent;\n  timeRange?: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated?: string;\n\n  constructor() {}\n\n  $onInit() {\n    this.event.panelId = this.panelCtrl.panel.id; // set correct id if in panel edit\n    this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time!);\n  }\n\n  canDelete(): boolean {\n    if (contextSrv.accessControlEnabled()) {\n      if (this.event.source.type === 'dashboard') {\n        return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.dashboard.canDelete;\n      }\n      return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.organization.canDelete;\n    }\n    return true;\n  }\n\n  async save(): Promise<void> {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = cloneDeep(this.event);\n    saveModel.time = saveModel.time!.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd!.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    let crudFunction = saveAnnotation;\n    if (saveModel.id) {\n      crudFunction = updateAnnotation;\n    }\n\n    try {\n      await crudFunction(saveModel);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n\n  async delete(): Promise<void> {\n    try {\n      await deleteAnnotation(this.event);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n}\n\nfunction tryEpochToMoment(timestamp: any) {\n  if (timestamp && isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n","import { FlotDataPoint } from '@grafana/data';\nimport { MenuItemProps } from '@grafana/ui';\n\nexport class GraphContextMenuCtrl {\n  private source?: FlotDataPoint | null;\n  private scope?: any;\n  menuItemsSupplier?: () => MenuItemProps[];\n  scrollContextElement: HTMLElement | null = null;\n  position: {\n    x: number;\n    y: number;\n  } = { x: 0, y: 0 };\n\n  isVisible: boolean;\n\n  constructor($scope: any) {\n    this.isVisible = false;\n    this.scope = $scope;\n  }\n\n  onClose = () => {\n    if (this.scrollContextElement) {\n      this.scrollContextElement.removeEventListener('scroll', this.onClose);\n    }\n\n    this.scope.$apply(() => {\n      this.isVisible = false;\n    });\n  };\n\n  toggleMenu = (event?: { pageX: number; pageY: number }) => {\n    this.isVisible = !this.isVisible;\n    if (this.isVisible && this.scrollContextElement) {\n      this.scrollContextElement.addEventListener('scroll', this.onClose);\n    }\n\n    if (this.source) {\n      this.position = {\n        x: this.source.pageX,\n        y: this.source.pageY,\n      };\n    } else {\n      this.position = {\n        x: event ? event.pageX : 0,\n        y: event ? event.pageY : 0,\n      };\n    }\n  };\n\n  // Sets element which is considered as a scroll context of given context menu.\n  // Having access to this element allows scroll event attachement for menu to be closed when user scrolls\n  setScrollContextElement = (el: HTMLElement | null) => {\n    this.scrollContextElement = el;\n  };\n\n  setSource = (source: FlotDataPoint | null) => {\n    this.source = source;\n  };\n\n  getSource = () => {\n    return this.source;\n  };\n\n  setMenuItemsSupplier = (menuItemsSupplier: () => MenuItemProps[]) => {\n    this.menuItemsSupplier = menuItemsSupplier;\n  };\n}\n","import { PanelModel, FieldConfigSource, DataLink } from '@grafana/data';\n\n/**\n * Called when upgrading from a previously saved versoin\n */\nexport const graphPanelMigrationHandler = (panel: PanelModel<any>): Partial<any> => {\n  const fieldConfig: FieldConfigSource = panel.fieldConfig ?? {\n    defaults: {},\n    overrides: [],\n  };\n\n  const options = panel.options || {};\n\n  // Move <7.1 dataLinks to the field section\n  if (options.dataLinks) {\n    fieldConfig.defaults.links = options.dataLinks as DataLink[];\n    delete options.dataLinks;\n  }\n\n  // Mutate the original panel state (only necessary because it is angular)\n  panel.options = options;\n  panel.fieldConfig = fieldConfig;\n  return options;\n};\n","import { selectors } from '@grafana/e2e-selectors';\n\nimport { GraphCtrl } from './module';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: GraphCtrl;\n  logScales: any;\n  xAxisModes: any;\n  xAxisStatOptions: any;\n  xNameSegment: any;\n  selectors: typeof selectors.components.Panels.Visualization.Graph.VisualizationTab;\n\n  static $inject = ['$scope'];\n\n  constructor(private $scope: any) {\n    this.panelCtrl = $scope.ctrl as GraphCtrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.xAxisModes = {\n      Time: 'time',\n      Series: 'series',\n      Histogram: 'histogram',\n      // 'Data field': 'field',\n    };\n\n    this.xAxisStatOptions = [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Count', value: 'count' },\n      { text: 'Current', value: 'current' },\n    ];\n\n    if (this.panel.xaxis.mode === 'custom') {\n      if (!this.panel.xaxis.name) {\n        this.panel.xaxis.name = 'specify field';\n      }\n    }\n    this.selectors = selectors.components.Panels.Visualization.Graph.VisualizationTab;\n  }\n\n  setUnitFormat(axis: { format: any }) {\n    return (unit: string) => {\n      axis.format = unit;\n      // if already set via field config we clear that\n      if (this.panel.fieldConfig.defaults.unit) {\n        this.panel.fieldConfig.defaults.unit = undefined;\n        this.panelCtrl.refresh();\n      } else {\n        this.panelCtrl.render();\n      }\n    };\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  xAxisModeChanged() {\n    this.panelCtrl.processor.setPanelDefaultsForNewXAxisMode();\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n\n  xAxisValueChanged() {\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n}\n\nexport function axesEditorComponent() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/graph/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import { find } from 'lodash';\n\nimport { DataFrame, dateTime, Field, FieldType, getFieldDisplayName, getTimeField, TimeRange } from '@grafana/data';\nimport { colors } from '@grafana/ui';\nimport { applyNullInsertThreshold } from '@grafana/ui/src/components/GraphNG/nullInsertThreshold';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n\ntype Options = {\n  dataList: DataFrame[];\n  range?: TimeRange;\n};\n\nexport class DataProcessor {\n  constructor(private panel: any) {}\n\n  getSeriesList(options: Options): TimeSeries[] {\n    const list: TimeSeries[] = [];\n    const { dataList, range } = options;\n\n    if (!dataList || !dataList.length) {\n      return list;\n    }\n\n    for (let i = 0; i < dataList.length; i++) {\n      let series = dataList[i];\n      let { timeField } = getTimeField(series);\n\n      if (!timeField) {\n        continue;\n      }\n\n      series = applyNullInsertThreshold({ frame: series, refFieldName: timeField.name });\n      timeField = getTimeField(series).timeField!; // use updated length\n\n      for (let j = 0; j < series.fields.length; j++) {\n        const field = series.fields[j];\n\n        if (field.type !== FieldType.number) {\n          continue;\n        }\n        const name = getFieldDisplayName(field, series, dataList);\n        const datapoints = [];\n\n        for (let r = 0; r < series.length; r++) {\n          datapoints.push([field.values.get(r), dateTime(timeField.values.get(r)).valueOf()]);\n        }\n\n        list.push(this.toTimeSeries(field, name, i, j, datapoints, list.length, range));\n      }\n    }\n\n    // Merge all the rows if we want to show a histogram\n    if (this.panel.xaxis.mode === 'histogram' && !this.panel.stack && list.length > 1) {\n      const first = list[0];\n      first.alias = first.aliasEscaped = 'Count';\n\n      for (let i = 1; i < list.length; i++) {\n        first.datapoints = first.datapoints.concat(list[i].datapoints);\n      }\n\n      return [first];\n    }\n\n    return list;\n  }\n\n  private toTimeSeries(\n    field: Field,\n    alias: string,\n    dataFrameIndex: number,\n    fieldIndex: number,\n    datapoints: any[][],\n    index: number,\n    range?: TimeRange\n  ) {\n    const colorIndex = index % colors.length;\n    const color = this.panel.aliasColors[alias] || colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints: datapoints || [],\n      alias: alias,\n      color: config.theme2.visualization.getColorByName(color),\n      unit: field.config ? field.config.unit : undefined,\n      dataFrameIndex,\n      fieldIndex,\n    });\n\n    if (datapoints && datapoints.length > 0 && range) {\n      const last = datapoints[datapoints.length - 1][1];\n      const from = range.from;\n\n      if (last - from.valueOf() < -10000) {\n        // If the data is in reverse order\n        const first = datapoints[0][1];\n        if (first - from.valueOf() < -10000) {\n          series.isOutsideRange = true;\n        }\n      }\n    }\n    return series;\n  }\n\n  setPanelDefaultsForNewXAxisMode() {\n    switch (this.panel.xaxis.mode) {\n      case 'time': {\n        this.panel.bars = false;\n        this.panel.lines = true;\n        this.panel.points = false;\n        this.panel.legend.show = true;\n        this.panel.tooltip.shared = true;\n        this.panel.xaxis.values = [];\n        break;\n      }\n      case 'series': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        this.panel.xaxis.values = ['total'];\n        break;\n      }\n      case 'histogram': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        break;\n      }\n    }\n  }\n\n  validateXAxisSeriesValue() {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        if (this.panel.xaxis.values.length === 0) {\n          this.panel.xaxis.values = ['total'];\n          return;\n        }\n\n        const validOptions = this.getXAxisValueOptions({});\n        const found: any = find(validOptions, { value: this.panel.xaxis.values[0] });\n        if (!found) {\n          this.panel.xaxis.values = ['total'];\n        }\n        return;\n      }\n    }\n  }\n\n  getXAxisValueOptions(options: any) {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        return [\n          { text: 'Avg', value: 'avg' },\n          { text: 'Min', value: 'min' },\n          { text: 'Max', value: 'max' },\n          { text: 'Total', value: 'total' },\n          { text: 'Count', value: 'count' },\n        ];\n      }\n    }\n\n    return [];\n  }\n\n  pluckDeep(obj: any, property: string) {\n    const propertyParts = property.split('.');\n    let value = obj;\n    for (let i = 0; i < propertyParts.length; ++i) {\n      if (value[propertyParts[i]]) {\n        value = value[propertyParts[i]];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n}\n","const template = `\n<div class=\"graph-panel\" ng-class=\"{'graph-panel--legend-right': ctrl.panel.legend.rightSide}\">\n  <div class=\"graph-panel__chart\" grafana-graph ng-dblclick=\"ctrl.zoomOut()\">\n  </div>\n\n  <div class=\"graph-legend\">\n    <div class=\"graph-legend-content\" graph-legend></div>\n  </div>\n  <div ng-if=\"ctrl.contextMenuCtrl.isVisible\">\n    <graph-context-menu\n      itemsGroup=\"ctrl.contextMenuCtrl.menuItemsSupplier()\"\n      on-close=\"ctrl.onContextMenuClose\"\n      getContextMenuSource=\"ctrl.contextMenuCtrl.getSource\"\n      timeZone=\"ctrl.getTimeZone()\"\n      x=\"ctrl.contextMenuCtrl.position.x\"\n      y=\"ctrl.contextMenuCtrl.position.y\"\n    ></graph-context-menu>\n  </div>\n</div>\n`;\n\nexport default template;\n","import './graph';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\nimport './time_regions_form';\nimport './annotation_tooltip';\nimport './event_editor';\n\nimport { auto } from 'angular';\nimport { defaults, find, without } from 'lodash';\n\nimport { DataFrame, FieldConfigProperty, PanelEvents, PanelPlugin } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { ThresholdMapper } from 'app/features/alerting/state/ThresholdMapper';\nimport { changePanelPlugin } from 'app/features/panel/state/actions';\nimport { dispatch } from 'app/store/store';\n\nimport { appEvents } from '../../../core/core';\nimport { loadSnapshotData } from '../../../features/dashboard/utils/loadSnapshotData';\nimport { annotationsFromDataFrames } from '../../../features/query/state/DashboardQueryRunner/utils';\nimport { ZoomOutEvent } from '../../../types/events';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { graphPanelMigrationHandler } from './GraphMigrations';\nimport { axesEditorComponent } from './axes_editor';\nimport { DataProcessor } from './data_processor';\nimport template from './template';\nimport { DataWarning, GraphFieldConfig, GraphPanelOptions } from './types';\nimport { getDataTimeRange } from './utils';\n\nexport class GraphCtrl extends MetricsPanelCtrl {\n  static template = template;\n\n  renderError = false;\n  hiddenSeries: any = {};\n  hiddenSeriesTainted = false;\n  seriesList: TimeSeries[] = [];\n  dataList: DataFrame[] = [];\n  annotations: any = [];\n  alertState: any;\n\n  dataWarning?: DataWarning;\n  colors: any = [];\n  subTabIndex = 0;\n  processor: DataProcessor;\n  contextMenuCtrl: GraphContextMenuCtrl;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null,\n    },\n    yaxis: {\n      align: false,\n      alignLevel: null,\n    },\n    // show/hide lines\n    lines: true,\n    // fill factor\n    fill: 1,\n    // fill gradient\n    fillGradient: 0,\n    // line width in pixels\n    linewidth: 1,\n    // show/hide dashed line\n    dashes: false,\n    // show/hide line\n    hiddenSeries: false,\n    // length of a dash\n    dashLength: 10,\n    // length of space between two dashes\n    spaceLength: 10,\n    // show hide points\n    points: false,\n    // point radius in pixels\n    pointradius: 2,\n    // show hide bars\n    bars: false,\n    // enable/disable stacking\n    stack: false,\n    // stack percentage mode\n    percentage: false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false,\n    },\n    // how null points should be handled\n    nullPointMode: 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip: {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n    timeRegions: [],\n    options: {\n      // show/hide alert threshold lines and fill\n      alertThreshold: true,\n    },\n  };\n\n  static $inject = ['$scope', '$injector'];\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    super($scope, $injector);\n\n    defaults(this.panel, this.panelDefaults);\n    defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    defaults(this.panel.legend, this.panelDefaults.legend);\n    defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n    defaults(this.panel.options, this.panelDefaults.options);\n\n    this.useDataFrames = true;\n    this.processor = new DataProcessor(this.panel);\n    this.contextMenuCtrl = new GraphContextMenuCtrl($scope);\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.events.on(PanelEvents.dataFramesReceived, this.onDataFramesReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataSnapshotLoad.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n    this.events.on(PanelEvents.initPanelActions, this.onInitPanelActions.bind(this));\n\n    // set axes format from field config\n    const fieldConfigUnit = this.panel.fieldConfig.defaults.unit;\n    if (fieldConfigUnit) {\n      this.panel.yaxes[0].format = fieldConfigUnit;\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Display', 'public/app/plugins/panel/graph/tab_display.html');\n    this.addEditorTab('Series overrides', 'public/app/plugins/panel/graph/tab_series_overrides.html');\n    this.addEditorTab('Axes', axesEditorComponent);\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html');\n    this.addEditorTab('Thresholds', 'public/app/plugins/panel/graph/tab_thresholds.html');\n    this.addEditorTab('Time regions', 'public/app/plugins/panel/graph/tab_time_regions.html');\n    this.subTabIndex = 0;\n    this.hiddenSeriesTainted = false;\n  }\n\n  onInitPanelActions(actions: any[]) {\n    actions.push({ text: 'Toggle legend', click: 'ctrl.toggleLegend()', shortcut: 'p l' });\n  }\n\n  zoomOut(evt: any) {\n    appEvents.publish(new ZoomOutEvent({ scale: 2 }));\n  }\n\n  onDataSnapshotLoad(snapshotData: any) {\n    const { series, annotations } = loadSnapshotData(this.panel, this.dashboard);\n    this.panelData!.annotations = annotations;\n    this.onDataFramesReceived(series);\n  }\n\n  onDataFramesReceived(data: DataFrame[]) {\n    this.dataList = data;\n    this.seriesList = this.processor.getSeriesList({\n      dataList: this.dataList,\n      range: this.range,\n    });\n\n    this.dataWarning = this.getDataWarning();\n\n    this.alertState = undefined;\n    (this.seriesList as any).alertState = undefined;\n    if (this.panelData!.alertState) {\n      this.alertState = this.panelData!.alertState;\n      (this.seriesList as any).alertState = this.alertState.state;\n    }\n\n    this.annotations = [];\n    if (this.panelData!.annotations?.length) {\n      this.annotations = annotationsFromDataFrames(this.panelData!.annotations);\n    }\n\n    this.loading = false;\n    this.render(this.seriesList);\n  }\n\n  getDataWarning(): DataWarning | undefined {\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      if (this.dataList) {\n        for (const frame of this.dataList) {\n          if (frame.length && frame.fields?.length) {\n            return {\n              title: 'Unable to graph data',\n              tip: 'Data exists, but is not timeseries',\n              actionText: 'Switch to table view',\n              action: () => {\n                dispatch(changePanelPlugin({ panel: this.panel, pluginId: 'table' }));\n              },\n            };\n          }\n        }\n      }\n\n      return {\n        title: 'No data',\n        tip: 'No data returned from query',\n      };\n    }\n\n    // If any data is in range, do not return an error\n    for (const series of this.seriesList) {\n      if (!series.isOutsideRange) {\n        return undefined;\n      }\n    }\n\n    // All data is outside the time range\n    const dataWarning: DataWarning = {\n      title: 'Data outside time range',\n      tip: 'Can be caused by timezone mismatch or missing time filter in query',\n    };\n\n    const range = getDataTimeRange(this.dataList);\n\n    if (range) {\n      dataWarning.actionText = 'Zoom to data';\n      dataWarning.action = () => {\n        locationService.partial({\n          from: range.from,\n          to: range.to,\n        });\n      };\n    }\n\n    return dataWarning;\n  }\n\n  onRender() {\n    if (!this.seriesList) {\n      return;\n    }\n\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n\n    for (const series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      // Always use the configured field unit\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis - 1].format = series.unit;\n      }\n      if (this.hiddenSeriesTainted === false && series.hiddenSeries === true) {\n        this.hiddenSeries[series.alias] = true;\n      }\n    }\n  }\n\n  onColorChange = (series: any, color: string) => {\n    series.setColor(config.theme2.visualization.getColorByName(color));\n    this.panel.aliasColors[series.alias] = color;\n    this.render();\n  };\n\n  onToggleSeries = (hiddenSeries: any) => {\n    this.hiddenSeriesTainted = true;\n    this.hiddenSeries = hiddenSeries;\n    this.render();\n  };\n\n  onToggleSort = (sortBy: any, sortDesc: any) => {\n    this.panel.legend.sort = sortBy;\n    this.panel.legend.sortDesc = sortDesc;\n    this.render();\n  };\n\n  onToggleAxis = (info: { alias: any; yaxis: any }) => {\n    let override: any = find(this.panel.seriesOverrides, { alias: info.alias });\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    override.yaxis = info.yaxis;\n    this.render();\n  };\n\n  addSeriesOverride(override: any) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override: any) {\n    this.panel.seriesOverrides = without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.render();\n  }\n\n  legendValuesOptionChanged() {\n    const legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  onContextMenuClose = () => {\n    this.contextMenuCtrl.toggleMenu();\n  };\n\n  getTimeZone = () => this.dashboard.getTimezone();\n\n  getDataFrameByRefId = (refId: string) => {\n    return this.dataList.filter((dataFrame) => dataFrame.refId === refId)[0];\n  };\n\n  migrateToReact() {\n    this.onPluginTypeChange(config.panels['timeseries']);\n  }\n}\n\n// Use new react style configuration\nexport const plugin = new PanelPlugin<GraphPanelOptions, GraphFieldConfig>(null)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Mappings,\n    ],\n  })\n  .setDataSupport({ annotations: true, alertStates: true })\n  .setMigrationHandler(graphPanelMigrationHandler);\n\n// Use the angular ctrt rather than a react one\nplugin.angularPanelCtrl = GraphCtrl;\n"],"names":["DEFAULT_PORTS","AngularLocationWrapper","fn","replacement","self","newHash","pathname","location","parsedPath","url","search","paramValue","newQuery","key","updatedUrl","state","newUrl","MetricsPanelCtrl","$scope","$injector","data","timeInfo","legacy","v","queryRunner","err","datasource","newTimeData","panel","frame","result","PanelCtrl","plugin","event","payload","title","directiveFn","index","icon","editorTab","menu","hiddenReducerTypes","ThresholdMapper","i","condition","evaluator","thresholds","visible","value","value1","value2","t","loadSnapshotData","dashboard","worker","options","annotationEvents","annotations","getFieldLinksSupplier","links","replaceVariables","scopedVars","dataFrame","field","timeField","replace","vars","fmt","finalVars","link","getPanelLinksSupplier","createAnnotationToolip","element","plot","injector","content","$compile","$rootScope","eventManager","tmpScope","drop","markerElementToAttachTo","createEditPopover","scope","DrawableEvent","object","drawFunc","clearFunc","moveFunc","left","top","width","height","position","VisualEvent","drawableEvent","EventMarkers","types","events","parts","regions","ve","vre","a","b","ao","bo","insidePlot","overlapPlot","o","xaxis","val","that","container","color","markerSize","markerShow","lineStyle","lineWidth","markerTooltip","eventTypeId","topOffset","line","marker","mouseenter","mouseleave","obj","regionWidth","timeFrom","timeTo","right","xmin","xmax","regionStart","regionEnd","regionOffset","region","x","xc","point0","point1","coord0","coord1","coordMin","coordMax","init","eventMarkers","defaultOptions","LEGEND_STATS","LegendItem","props","e","yaxis","info","series","asTable","legendValueItems","valueName","valueFormatted","LegendValue","values","hidden","seriesOptionClasses","valueItems","seriesLabel","LegendSeriesLabel","label","onColorChange","onToggleAxis","onLabelClick","LegendSeriesIcon","selectors","ref","showColorPicker","hideColorPicker","SeriesIcon","onValueClick","GraphLegend","hiddenSeries","seriesList","sortBy","sort","optionalClass","rightSide","sideWidth","sortDesc","hideEmpty","hideZero","min","max","avg","current","total","seriesValuesProps","seriesHideProps","sortProps","legendClass","ieWidth","legendStyle","legendProps","LegendTable","LegendSeriesList","stat","statName","LegendTableHeaderItem","Icon","Legend","CustomScrollbar","alignYLevel","yAxes","level","checkCorrectAxis","yLeft","yRight","moveLevelToZero","expandStuckValues","zero","oneSide","checkOneSide","checkOppositeSides","rate","getRate","checkTwoCross","restoreLevelFromZero","axis","checkCorrectAxes","axes","rateLeft","rateRight","absLeftMin","absLeftMax","absRightMin","absRightMax","upLeft","downLeft","upRight","downRight","EventManager","panelCtrl","range","elem","flotOptions","item","getRegions","addRegionMarking","eventSectionHeight","eventSectionMargin","markings","defaultColor","fillColor","addAlphaToRGB","colorString","alpha","tinycolor","GraphTooltip","getSeriesFn","hoverEvent","$tooltip","posX","last","ps","initial","len","j","lower","upper","middle","absoluteTime","innerHtml","pos","xMode","hoverIndex","hoverDistance","pointTime","results","lastValue","minDistance","minTime","plotData","allSeriesMode","group","hoverInfo","seriesHtml","tooltipFormat","pointOffset","scrollTop","seriesHoverInfo","highlightClass","getSeriesValues","dataList","datapoints","convertValuesToHistogram","bucketSize","minBound","getBucketBound","maxBound","bin","convertToHistogramData","histogram","ThresholdManager","handleIndex","model","valueStr","stateClass","evt","handleElem","lastY","posTop","dragging","diff","stopped","graphValue","defaultHandleTopPos","handleTopPos","valueCanvasPos","thresholdMargin","gtLimit","ltLimit","threshold","other","limit","lineColor","config","calculateTimesWithin","cfg","tRange","timeRegion","hRange","parseTimeRange","fromStart","fromEnd","str","match","colorModes","getColorModes","getColor","theme","colorMode","TimeRegionManager","tr","timeRegionColor","r","getDataTimeRange","frames","found","reducers","calcs","isLegacyGraphHoverEvent","LegendWithThemeProvider","GraphElement","timeSrv","flotPosition","linksSupplier","items","dataLinks","renderData","graphHeight","alignAsTable","legendOptions","valueOptions","legendReactElem","handler","ranges","scrollContextElement","contextMenuSourceItem","yAxisConfig","dataIndex","hasLinksValue","fieldConfig","fieldDisplay","DataFrameView","datapoint","ts","correctIndex","dataWarning","msg","gridMargin","panelOptions","align","histMin","s","histMax","ticks","incrementRenderCounter","gridColor","stack","sortOrder","haveSortBy","haveSortOrder","shouldSortBy","amount","fill","defaultTicks","tickValues","d","point","tickStep","ticksNum","seriesIndex","pointIndex","defaults","secondY","minSetToZero","logBase","nextTick","maxNumTicks","numTicks","factor","format","decimals","formatter","graphDirective","popoverSrv","contextSrv","SeriesOverridesCtrl","$element","name","propertyName","option","subItem","ThresholdFormCtrl","unbindDestroy","newColor","TimeRegionFormCtrl","annotationTooltipDirective","$sanitize","dashboardSrv","sanitizeString","text","tooltip","titleStateClass","stateModel","alertDef","header","tags","EventEditorCtrl","tryEpochToMoment","saveModel","crudFunction","timestamp","epoch","eventEditor","GraphContextMenuCtrl","el","source","menuItemsSupplier","graphPanelMigrationHandler","AxesEditorCtrl","unit","axesEditorComponent","DataProcessor","list","first","alias","dataFrameIndex","fieldIndex","colorIndex","colors","from","validOptions","property","propertyParts","GraphCtrl","override","refId","fieldConfigUnit","actions","snapshotData","prev","legend","PanelPlugin"],"sourceRoot":""}