// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LokiExploreQueryEditor should render component 1`] = `
<Component
  ExtraFieldElement={
    <Memo(LokiExploreExtraField)
      label="Line limit"
      min={0}
      onChangeFunc={[Function]}
      onKeyDownFunc={[Function]}
      type="number"
      value="0"
    />
  }
  data={
    Object {
      "request": Object {
        "app": "Grafana",
        "dashboardId": 1,
        "interval": "1s",
        "intervalMs": 1000,
        "panelId": 1,
        "range": Object {
          "from": "2020-01-01T00:00:00.000Z",
          "raw": Object {
            "from": "2020-01-01T00:00:00.000Z",
            "to": "2020-01-02T00:00:00.000Z",
          },
          "to": "2020-01-02T00:00:00.000Z",
        },
        "requestId": "1",
        "scopedVars": Object {},
        "startTime": 0,
        "targets": Array [],
        "timezone": "GMT",
      },
      "series": Array [],
      "state": "NotStarted",
      "timeRange": Object {
        "from": "2020-01-01T00:00:00.000Z",
        "raw": Object {
          "from": "2020-01-01T00:00:00.000Z",
          "to": "2020-01-02T00:00:00.000Z",
        },
        "to": "2020-01-02T00:00:00.000Z",
      },
    }
  }
  datasource={
    Object {
      "languageProvider": LokiLanguageProvider {
        "addLabelValuesToOptions": [Function],
        "cleanText": [Function],
        "datasource": [Circular],
        "fetchSeriesLabels": [Function],
        "getBeginningCompletionItems": [Function],
        "getPipeCompletionItem": [Function],
        "getTermCompletionItems": [Function],
        "labelKeys": Array [],
        "labelsCache": LRUCache {
          Symbol(max): 10,
          Symbol(lengthCalculator): [Function],
          Symbol(allowStale): false,
          Symbol(maxAge): 0,
          Symbol(dispose): undefined,
          Symbol(noDisposeOnSet): false,
          Symbol(updateAgeOnGet): false,
          Symbol(cache): Map {},
          Symbol(lruList): Yallist {
            "head": null,
            "length": 0,
            "tail": null,
          },
          Symbol(length): 0,
        },
        "logLabelFetchTs": 0,
        "request": [Function],
        "seriesCache": LRUCache {
          Symbol(max): 10,
          Symbol(lengthCalculator): [Function],
          Symbol(allowStale): false,
          Symbol(maxAge): 0,
          Symbol(dispose): undefined,
          Symbol(noDisposeOnSet): false,
          Symbol(updateAgeOnGet): false,
          Symbol(cache): Map {},
          Symbol(lruList): Yallist {
            "head": null,
            "length": 0,
            "tail": null,
          },
          Symbol(length): 0,
        },
        "start": [Function],
      },
      "metadataRequest": [Function],
    }
  }
  history={Array []}
  onBlur={[Function]}
  onChange={[MockFunction]}
  onRunQuery={[MockFunction]}
  query={
    Object {
      "expr": "",
      "maxLines": 0,
      "refId": "A",
    }
  }
  range={
    Object {
      "from": "2020-01-01T00:00:00.000Z",
      "raw": Object {
        "from": "2020-01-01T00:00:00.000Z",
        "to": "2020-01-02T00:00:00.000Z",
      },
      "to": "2020-01-02T00:00:00.000Z",
    }
  }
/>
`;
