"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[9580],{"../../node_modules/eventemitter3/index.js":function(module){var has=Object.prototype.hasOwnProperty,prefix="~";function Events(){}function EE(fn,context,once){this.fn=fn,this.context=context,this.once=once||!1}function addListener(emitter,event,fn,context,once){if("function"!=typeof fn)throw new TypeError("The listener must be a function");var listener=new EE(fn,context||emitter,once),evt=prefix?prefix+event:event;return emitter._events[evt]?emitter._events[evt].fn?emitter._events[evt]=[emitter._events[evt],listener]:emitter._events[evt].push(listener):(emitter._events[evt]=listener,emitter._eventsCount++),emitter}function clearEvent(emitter,evt){0==--emitter._eventsCount?emitter._events=new Events:delete emitter._events[evt]}function EventEmitter(){this._events=new Events,this._eventsCount=0}Object.create&&(Events.prototype=Object.create(null),(new Events).__proto__||(prefix=!1)),EventEmitter.prototype.eventNames=function eventNames(){var events,name,names=[];if(0===this._eventsCount)return names;for(name in events=this._events)has.call(events,name)&&names.push(prefix?name.slice(1):name);return Object.getOwnPropertySymbols?names.concat(Object.getOwnPropertySymbols(events)):names},EventEmitter.prototype.listeners=function listeners(event){var evt=prefix?prefix+event:event,handlers=this._events[evt];if(!handlers)return[];if(handlers.fn)return[handlers.fn];for(var i=0,l=handlers.length,ee=new Array(l);i<l;i++)ee[i]=handlers[i].fn;return ee},EventEmitter.prototype.listenerCount=function listenerCount(event){var evt=prefix?prefix+event:event,listeners=this._events[evt];return listeners?listeners.fn?1:listeners.length:0},EventEmitter.prototype.emit=function emit(event,a1,a2,a3,a4,a5){var evt=prefix?prefix+event:event;if(!this._events[evt])return!1;var args,i,listeners=this._events[evt],len=arguments.length;if(listeners.fn){switch(listeners.once&&this.removeListener(event,listeners.fn,void 0,!0),len){case 1:return listeners.fn.call(listeners.context),!0;case 2:return listeners.fn.call(listeners.context,a1),!0;case 3:return listeners.fn.call(listeners.context,a1,a2),!0;case 4:return listeners.fn.call(listeners.context,a1,a2,a3),!0;case 5:return listeners.fn.call(listeners.context,a1,a2,a3,a4),!0;case 6:return listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),!0}for(i=1,args=new Array(len-1);i<len;i++)args[i-1]=arguments[i];listeners.fn.apply(listeners.context,args)}else{var j,length=listeners.length;for(i=0;i<length;i++)switch(listeners[i].once&&this.removeListener(event,listeners[i].fn,void 0,!0),len){case 1:listeners[i].fn.call(listeners[i].context);break;case 2:listeners[i].fn.call(listeners[i].context,a1);break;case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;case 4:listeners[i].fn.call(listeners[i].context,a1,a2,a3);break;default:if(!args)for(j=1,args=new Array(len-1);j<len;j++)args[j-1]=arguments[j];listeners[i].fn.apply(listeners[i].context,args)}}return!0},EventEmitter.prototype.on=function on(event,fn,context){return addListener(this,event,fn,context,!1)},EventEmitter.prototype.once=function once(event,fn,context){return addListener(this,event,fn,context,!0)},EventEmitter.prototype.removeListener=function removeListener(event,fn,context,once){var evt=prefix?prefix+event:event;if(!this._events[evt])return this;if(!fn)return clearEvent(this,evt),this;var listeners=this._events[evt];if(listeners.fn)listeners.fn!==fn||once&&!listeners.once||context&&listeners.context!==context||clearEvent(this,evt);else{for(var i=0,events=[],length=listeners.length;i<length;i++)(listeners[i].fn!==fn||once&&!listeners[i].once||context&&listeners[i].context!==context)&&events.push(listeners[i]);events.length?this._events[evt]=1===events.length?events[0]:events:clearEvent(this,evt)}return this},EventEmitter.prototype.removeAllListeners=function removeAllListeners(event){var evt;return event?(evt=prefix?prefix+event:event,this._events[evt]&&clearEvent(this,evt)):(this._events=new Events,this._eventsCount=0),this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.addListener=EventEmitter.prototype.on,EventEmitter.prefixed=prefix,EventEmitter.EventEmitter=EventEmitter,module.exports=EventEmitter},"../../node_modules/eventemitter3/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _index_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/eventemitter3/index.js"),_index_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_index_js__WEBPACK_IMPORTED_MODULE_0__);__webpack_exports__.A=_index_js__WEBPACK_IMPORTED_MODULE_0___default()},"../../node_modules/ol/Object.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return ol_Object}});var Event=class BaseEvent{constructor(type){this.propagationStopped,this.defaultPrevented,this.type=type,this.target=null}preventDefault(){this.defaultPrevented=!0}stopPropagation(){this.propagationStopped=!0}},ObjectEventType_PROPERTYCHANGE="propertychange";var ol_Disposable=class Disposable{constructor(){this.disposed=!1}dispose(){this.disposed||(this.disposed=!0,this.disposeInternal())}disposeInternal(){}},functions=__webpack_require__("../../node_modules/ol/functions.js"),obj=__webpack_require__("../../node_modules/ol/obj.js");var events_Target=class Target extends ol_Disposable{constructor(target){super(),this.eventTarget_=target,this.pendingRemovals_=null,this.dispatching_=null,this.listeners_=null}addEventListener(type,listener){if(!type||!listener)return;const listeners=this.listeners_||(this.listeners_={}),listenersForType=listeners[type]||(listeners[type]=[]);listenersForType.includes(listener)||listenersForType.push(listener)}dispatchEvent(event){const isString="string"==typeof event,type=isString?event:event.type,listeners=this.listeners_&&this.listeners_[type];if(!listeners)return;const evt=isString?new Event(event):event;evt.target||(evt.target=this.eventTarget_||this);const dispatching=this.dispatching_||(this.dispatching_={}),pendingRemovals=this.pendingRemovals_||(this.pendingRemovals_={});let propagate;type in dispatching||(dispatching[type]=0,pendingRemovals[type]=0),++dispatching[type];for(let i=0,ii=listeners.length;i<ii;++i)if(propagate="handleEvent"in listeners[i]?listeners[i].handleEvent(evt):listeners[i].call(this,evt),!1===propagate||evt.propagationStopped){propagate=!1;break}if(0==--dispatching[type]){let pr=pendingRemovals[type];for(delete pendingRemovals[type];pr--;)this.removeEventListener(type,functions.tV);delete dispatching[type]}return propagate}disposeInternal(){this.listeners_&&(0,obj.I)(this.listeners_)}getListeners(type){return this.listeners_&&this.listeners_[type]||void 0}hasListener(type){return!!this.listeners_&&(type?type in this.listeners_:Object.keys(this.listeners_).length>0)}removeEventListener(type,listener){const listeners=this.listeners_&&this.listeners_[type];if(listeners){const index=listeners.indexOf(listener);-1!==index&&(this.pendingRemovals_&&type in this.pendingRemovals_?(listeners[index]=functions.tV,++this.pendingRemovals_[type]):(listeners.splice(index,1),0===listeners.length&&delete this.listeners_[type]))}}},EventType=__webpack_require__("../../node_modules/ol/events/EventType.js"),events=__webpack_require__("../../node_modules/ol/events.js");class Observable extends events_Target{constructor(){super(),this.on=this.onInternal,this.once=this.onceInternal,this.un=this.unInternal,this.revision_=0}changed(){++this.revision_,this.dispatchEvent(EventType.A.CHANGE)}getRevision(){return this.revision_}onInternal(type,listener){if(Array.isArray(type)){const len=type.length,keys=new Array(len);for(let i=0;i<len;++i)keys[i]=(0,events.KT)(this,type[i],listener);return keys}return(0,events.KT)(this,type,listener)}onceInternal(type,listener){let key;if(Array.isArray(type)){const len=type.length;key=new Array(len);for(let i=0;i<len;++i)key[i]=(0,events.Jz)(this,type[i],listener)}else key=(0,events.Jz)(this,type,listener);return listener.ol_key=key,key}unInternal(type,listener){const key=listener.ol_key;if(key)!function unByKey(key){if(Array.isArray(key))for(let i=0,ii=key.length;i<ii;++i)(0,events.JH)(key[i]);else(0,events.JH)(key)}(key);else if(Array.isArray(type))for(let i=0,ii=type.length;i<ii;++i)this.removeEventListener(type[i],listener);else this.removeEventListener(type,listener)}}Observable.prototype.on,Observable.prototype.once,Observable.prototype.un;var ol_Observable=Observable,util=__webpack_require__("../../node_modules/ol/util.js");class ObjectEvent extends Event{constructor(type,key,oldValue){super(type),this.key=key,this.oldValue=oldValue}}var ol_Object=class BaseObject extends ol_Observable{constructor(values){super(),this.on,this.once,this.un,(0,util.v6)(this),this.values_=null,void 0!==values&&this.setProperties(values)}get(key){let value;return this.values_&&this.values_.hasOwnProperty(key)&&(value=this.values_[key]),value}getKeys(){return this.values_&&Object.keys(this.values_)||[]}getProperties(){return this.values_&&Object.assign({},this.values_)||{}}hasProperties(){return!!this.values_}notify(key,oldValue){let eventType;eventType=`change:${key}`,this.hasListener(eventType)&&this.dispatchEvent(new ObjectEvent(eventType,key,oldValue)),eventType=ObjectEventType_PROPERTYCHANGE,this.hasListener(eventType)&&this.dispatchEvent(new ObjectEvent(eventType,key,oldValue))}addChangeListener(key,listener){this.addEventListener(`change:${key}`,listener)}removeChangeListener(key,listener){this.removeEventListener(`change:${key}`,listener)}set(key,value,silent){const values=this.values_||(this.values_={});if(silent)values[key]=value;else{const oldValue=values[key];values[key]=value,oldValue!==value&&this.notify(key,oldValue)}}setProperties(values,silent){for(const key in values)this.set(key,values[key],silent)}applyProperties(source){source.values_&&Object.assign(this.values_||(this.values_={}),source.values_)}unset(key,silent){if(this.values_&&key in this.values_){const oldValue=this.values_[key];delete this.values_[key],(0,obj.p)(this.values_)&&(this.values_=null),silent||this.notify(key,oldValue)}}}},"../../node_modules/ol/array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function binarySearch(haystack,needle,comparator){let mid,cmp;comparator=comparator||ascending;let low=0,high=haystack.length,found=!1;for(;low<high;)mid=low+(high-low>>1),cmp=+comparator(haystack[mid],needle),cmp<0?low=mid+1:(high=mid,found=!cmp);return found?low:~low}function ascending(a,b){return a>b?1:a<b?-1:0}function extend(arr,data){const extension=Array.isArray(data)?data:[data],length=extension.length;for(let i=0;i<length;i++)arr[arr.length]=extension[i]}function equals(arr1,arr2){const len1=arr1.length;if(len1!==arr2.length)return!1;for(let i=0;i<len1;i++)if(arr1[i]!==arr2[i])return!1;return!0}__webpack_require__.d(__webpack_exports__,{El:function(){return binarySearch},V_:function(){return ascending},X$:function(){return extend},aI:function(){return equals}})},"../../node_modules/ol/events.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{JH:function(){return unlistenByKey},Jz:function(){return listenOnce},KT:function(){return listen}});var _obj_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/ol/obj.js");function listen(target,type,listener,thisArg,once){if(thisArg&&thisArg!==target&&(listener=listener.bind(thisArg)),once){const originalListener=listener;listener=function(){target.removeEventListener(type,listener),originalListener.apply(this,arguments)}}const eventsKey={target:target,type:type,listener:listener};return target.addEventListener(type,listener),eventsKey}function listenOnce(target,type,listener,thisArg){return listen(target,type,listener,thisArg,!0)}function unlistenByKey(key){key&&key.target&&(key.target.removeEventListener(key.type,key.listener),(0,_obj_js__WEBPACK_IMPORTED_MODULE_0__.I)(key))}},"../../node_modules/ol/events/EventType.js":function(__unused_webpack_module,__webpack_exports__){__webpack_exports__.A={CHANGE:"change",ERROR:"error",BLUR:"blur",CLEAR:"clear",CONTEXTMENU:"contextmenu",CLICK:"click",DBLCLICK:"dblclick",DRAGENTER:"dragenter",DRAGOVER:"dragover",DROP:"drop",FOCUS:"focus",KEYDOWN:"keydown",KEYPRESS:"keypress",LOAD:"load",RESIZE:"resize",TOUCHMOVE:"touchmove",WHEEL:"wheel"}},"../../node_modules/ol/extent.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ld:function(){return closestSquaredDistanceXY},ms:function(){return containsExtent},Rj:function(){return containsXY},S5:function(){return createEmpty},aZ:function(){return createOrUpdateEmpty},dP:function(){return createOrUpdateFromCoordinate},Vy:function(){return createOrUpdateFromFlatCoordinates},X$:function(){return extend},R8:function(){return extendFlatCoordinates},sB:function(){return forEachCorner},q1:function(){return getCenter},Oq:function(){return getHeight},HY:function(){return intersects},Mx:function(){return intersectsSegment},$u:function(){return returnOrUpdate}});var Relationship={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function closestSquaredDistanceXY(extent,x,y){let dx,dy;return dx=x<extent[0]?extent[0]-x:extent[2]<x?x-extent[2]:0,dy=y<extent[1]?extent[1]-y:extent[3]<y?y-extent[3]:0,dx*dx+dy*dy}function containsExtent(extent1,extent2){return extent1[0]<=extent2[0]&&extent2[2]<=extent1[2]&&extent1[1]<=extent2[1]&&extent2[3]<=extent1[3]}function containsXY(extent,x,y){return extent[0]<=x&&x<=extent[2]&&extent[1]<=y&&y<=extent[3]}function coordinateRelationship(extent,coordinate){const minX=extent[0],minY=extent[1],maxX=extent[2],maxY=extent[3],x=coordinate[0],y=coordinate[1];let relationship=Relationship.UNKNOWN;return x<minX?relationship|=Relationship.LEFT:x>maxX&&(relationship|=Relationship.RIGHT),y<minY?relationship|=Relationship.BELOW:y>maxY&&(relationship|=Relationship.ABOVE),relationship===Relationship.UNKNOWN&&(relationship=Relationship.INTERSECTING),relationship}function createEmpty(){return[1/0,1/0,-1/0,-1/0]}function createOrUpdate(minX,minY,maxX,maxY,dest){return dest?(dest[0]=minX,dest[1]=minY,dest[2]=maxX,dest[3]=maxY,dest):[minX,minY,maxX,maxY]}function createOrUpdateEmpty(dest){return createOrUpdate(1/0,1/0,-1/0,-1/0,dest)}function createOrUpdateFromCoordinate(coordinate,dest){const x=coordinate[0],y=coordinate[1];return createOrUpdate(x,y,x,y,dest)}function createOrUpdateFromFlatCoordinates(flatCoordinates,offset,end,stride,dest){return extendFlatCoordinates(createOrUpdateEmpty(dest),flatCoordinates,offset,end,stride)}function extend(extent1,extent2){return extent2[0]<extent1[0]&&(extent1[0]=extent2[0]),extent2[2]>extent1[2]&&(extent1[2]=extent2[2]),extent2[1]<extent1[1]&&(extent1[1]=extent2[1]),extent2[3]>extent1[3]&&(extent1[3]=extent2[3]),extent1}function extendFlatCoordinates(extent,flatCoordinates,offset,end,stride){for(;offset<end;offset+=stride)extendXY(extent,flatCoordinates[offset],flatCoordinates[offset+1]);return extent}function extendXY(extent,x,y){extent[0]=Math.min(extent[0],x),extent[1]=Math.min(extent[1],y),extent[2]=Math.max(extent[2],x),extent[3]=Math.max(extent[3],y)}function forEachCorner(extent,callback){let val;return val=callback(getBottomLeft(extent)),val||(val=callback(getBottomRight(extent)),val||(val=callback(getTopRight(extent)),val||(val=callback(getTopLeft(extent)),val||!1)))}function getBottomLeft(extent){return[extent[0],extent[1]]}function getBottomRight(extent){return[extent[2],extent[1]]}function getCenter(extent){return[(extent[0]+extent[2])/2,(extent[1]+extent[3])/2]}function getHeight(extent){return extent[3]-extent[1]}function getTopLeft(extent){return[extent[0],extent[3]]}function getTopRight(extent){return[extent[2],extent[3]]}function intersects(extent1,extent2){return extent1[0]<=extent2[2]&&extent1[2]>=extent2[0]&&extent1[1]<=extent2[3]&&extent1[3]>=extent2[1]}function returnOrUpdate(extent,dest){return dest?(dest[0]=extent[0],dest[1]=extent[1],dest[2]=extent[2],dest[3]=extent[3],dest):extent}function intersectsSegment(extent,start,end){let intersects=!1;const startRel=coordinateRelationship(extent,start),endRel=coordinateRelationship(extent,end);if(startRel===Relationship.INTERSECTING||endRel===Relationship.INTERSECTING)intersects=!0;else{const minX=extent[0],minY=extent[1],maxX=extent[2],maxY=extent[3],startX=start[0],startY=start[1],endX=end[0],endY=end[1],slope=(endY-startY)/(endX-startX);let x,y;endRel&Relationship.ABOVE&&!(startRel&Relationship.ABOVE)&&(x=endX-(endY-maxY)/slope,intersects=x>=minX&&x<=maxX),intersects||!(endRel&Relationship.RIGHT)||startRel&Relationship.RIGHT||(y=endY-(endX-maxX)*slope,intersects=y>=minY&&y<=maxY),intersects||!(endRel&Relationship.BELOW)||startRel&Relationship.BELOW||(x=endX-(endY-minY)/slope,intersects=x>=minX&&x<=maxX),intersects||!(endRel&Relationship.LEFT)||startRel&Relationship.LEFT||(y=endY-(endX-minX)*slope,intersects=y>=minY&&y<=maxY)}return intersects}},"../../node_modules/ol/format/WKT.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return format_WKT}});var ol_Object=__webpack_require__("../../node_modules/ol/Object.js"),EventType=__webpack_require__("../../node_modules/ol/events/EventType.js");const messages={1:"The view center is not defined",2:"The view resolution is not defined",3:"The view rotation is not defined",4:"`image` and `src` cannot be provided at the same time",5:"`imgSize` must be set when `image` is provided",7:"`format` must be set when `url` is set",8:"Unknown `serverType` configured",9:"`url` must be configured or set using `#setUrl()`",10:"The default `geometryFunction` can only handle `Point` geometries",11:"`options.featureTypes` must be an Array",12:"`options.geometryName` must also be provided when `options.bbox` is set",13:"Invalid corner",14:"Invalid color",15:"Tried to get a value for a key that does not exist in the cache",16:"Tried to set a value for a key that is used already",17:"`resolutions` must be sorted in descending order",18:"Either `origin` or `origins` must be configured, never both",19:"Number of `tileSizes` and `resolutions` must be equal",20:"Number of `origins` and `resolutions` must be equal",22:"Either `tileSize` or `tileSizes` must be configured, never both",24:"Invalid extent or geometry provided as `geometry`",25:"Cannot fit empty extent provided as `geometry`",26:"Features must have an id set",27:"Features must have an id set",28:'`renderMode` must be `"hybrid"` or `"vector"`',30:"The passed `feature` was already added to the source",31:"Tried to enqueue an `element` that was already added to the queue",32:"Transformation matrix cannot be inverted",33:"Invalid units",34:"Invalid geometry layout",36:"Unknown SRS type",37:"Unknown geometry type found",38:"`styleMapValue` has an unknown type",39:"Unknown geometry type",40:"Expected `feature` to have a geometry",41:"Expected an `ol/style/Style` or an array of `ol/style/Style.js`",42:"Question unknown, the answer is 42",43:"Expected `layers` to be an array or a `Collection`",47:"Expected `controls` to be an array or an `ol/Collection`",48:"Expected `interactions` to be an array or an `ol/Collection`",49:"Expected `overlays` to be an array or an `ol/Collection`",50:"`options.featureTypes` should be an Array",51:"Either `url` or `tileJSON` options must be provided",52:"Unknown `serverType` configured",53:"Unknown `tierSizeCalculation` configured",55:"The {-y} placeholder requires a tile grid with extent",56:"mapBrowserEvent must originate from a pointer event",57:"At least 2 conditions are required",59:"Invalid command found in the PBF",60:"Missing or invalid `size`",61:"Cannot determine IIIF Image API version from provided image information JSON",62:"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`",64:"Layer opacity must be a number",66:"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`",67:"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both",68:"A VectorTile source can only be rendered if it has a projection compatible with the view projection",69:"`width` or `height` cannot be provided together with `scale`"};class AssertionError extends Error{constructor(code){const message=messages[code];super(message),this.code=code,this.name="AssertionError",this.message=message}}var ol_AssertionError=AssertionError;var events=__webpack_require__("../../node_modules/ol/events.js");class Feature extends ol_Object.A{constructor(geometryOrProperties){if(super(),this.on,this.once,this.un,this.id_=void 0,this.geometryName_="geometry",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),geometryOrProperties)if("function"==typeof geometryOrProperties.getSimplifiedGeometry){const geometry=geometryOrProperties;this.setGeometry(geometry)}else{const properties=geometryOrProperties;this.setProperties(properties)}}clone(){const clone=new Feature(this.hasProperties()?this.getProperties():null);clone.setGeometryName(this.getGeometryName());const geometry=this.getGeometry();geometry&&clone.setGeometry(geometry.clone());const style=this.getStyle();return style&&clone.setStyle(style),clone}getGeometry(){return this.get(this.geometryName_)}getId(){return this.id_}getGeometryName(){return this.geometryName_}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}handleGeometryChange_(){this.changed()}handleGeometryChanged_(){this.geometryChangeKey_&&((0,events.JH)(this.geometryChangeKey_),this.geometryChangeKey_=null);const geometry=this.getGeometry();geometry&&(this.geometryChangeKey_=(0,events.KT)(geometry,EventType.A.CHANGE,this.handleGeometryChange_,this)),this.changed()}setGeometry(geometry){this.set(this.geometryName_,geometry)}setStyle(style){this.style_=style,this.styleFunction_=style?function createStyleFunction(obj){if("function"==typeof obj)return obj;let styles;if(Array.isArray(obj))styles=obj;else{!function assert(assertion,errorCode){if(!assertion)throw new ol_AssertionError(errorCode)}("function"==typeof obj.getZIndex,41);styles=[obj]}return function(){return styles}}(style):void 0,this.changed()}setId(id){this.id_=id,this.changed()}setGeometryName(name){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=name,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()}}var ol_Feature=Feature,Geometry=__webpack_require__("../../node_modules/ol/geom/Geometry.js"),ol_extent=__webpack_require__("../../node_modules/ol/extent.js");class GeometryCollection extends Geometry.A{constructor(geometries){super(),this.geometries_=geometries||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(events.JH),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let i=0,ii=this.geometries_.length;i<ii;++i)this.changeEventsKeys_.push((0,events.KT)(this.geometries_[i],EventType.A.CHANGE,this.changed,this))}clone(){const geometryCollection=new GeometryCollection(null);return geometryCollection.setGeometries(this.geometries_),geometryCollection.applyProperties(this),geometryCollection}closestPointXY(x,y,closestPoint,minSquaredDistance){if(minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y))return minSquaredDistance;const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)minSquaredDistance=geometries[i].closestPointXY(x,y,closestPoint,minSquaredDistance);return minSquaredDistance}containsXY(x,y){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)if(geometries[i].containsXY(x,y))return!0;return!1}computeExtent(extent){(0,ol_extent.aZ)(extent);const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)(0,ol_extent.X$)(extent,geometries[i].getExtent());return extent}getGeometries(){return cloneGeometries(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let geometriesArray=[];const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].getType()===this.getType()?geometriesArray=geometriesArray.concat(geometries[i].getGeometriesArrayRecursive()):geometriesArray.push(geometries[i]);return geometriesArray}getSimplifiedGeometry(squaredTolerance){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),squaredTolerance<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&squaredTolerance<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const simplifiedGeometries=[],geometries=this.geometries_;let simplified=!1;for(let i=0,ii=geometries.length;i<ii;++i){const geometry=geometries[i],simplifiedGeometry=geometry.getSimplifiedGeometry(squaredTolerance);simplifiedGeometries.push(simplifiedGeometry),simplifiedGeometry!==geometry&&(simplified=!0)}if(simplified){const simplifiedGeometryCollection=new GeometryCollection(null);return simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries),simplifiedGeometryCollection}return this.simplifiedGeometryMaxMinSquaredTolerance=squaredTolerance,this}getType(){return"GeometryCollection"}intersectsExtent(extent){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)if(geometries[i].intersectsExtent(extent))return!0;return!1}isEmpty(){return 0===this.geometries_.length}rotate(angle,anchor){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].rotate(angle,anchor);this.changed()}scale(sx,sy,anchor){anchor||(anchor=(0,ol_extent.q1)(this.getExtent()));const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].scale(sx,sy,anchor);this.changed()}setGeometries(geometries){this.setGeometriesArray(cloneGeometries(geometries))}setGeometriesArray(geometries){this.unlistenGeometriesChange_(),this.geometries_=geometries,this.listenGeometriesChange_(),this.changed()}applyTransform(transformFn){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].applyTransform(transformFn);this.changed()}translate(deltaX,deltaY){const geometries=this.geometries_;for(let i=0,ii=geometries.length;i<ii;++i)geometries[i].translate(deltaX,deltaY);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function cloneGeometries(geometries){const clonedGeometries=[];for(let i=0,ii=geometries.length;i<ii;++i)clonedGeometries.push(geometries[i].clone());return clonedGeometries}var geom_GeometryCollection=GeometryCollection,util=__webpack_require__("../../node_modules/ol/util.js"),transform=__webpack_require__("../../node_modules/ol/geom/flat/transform.js");class SimpleGeometry extends Geometry.A{constructor(){super(),this.layout="XY",this.stride=2,this.flatCoordinates=null}computeExtent(extent){return(0,ol_extent.Vy)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,extent)}getCoordinates(){return(0,util.b0)()}getFirstCoordinate(){return this.flatCoordinates.slice(0,this.stride)}getFlatCoordinates(){return this.flatCoordinates}getLastCoordinate(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)}getLayout(){return this.layout}getSimplifiedGeometry(squaredTolerance){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),squaredTolerance<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&squaredTolerance<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;const simplifiedGeometry=this.getSimplifiedGeometryInternal(squaredTolerance);return simplifiedGeometry.getFlatCoordinates().length<this.flatCoordinates.length?simplifiedGeometry:(this.simplifiedGeometryMaxMinSquaredTolerance=squaredTolerance,this)}getSimplifiedGeometryInternal(squaredTolerance){return this}getStride(){return this.stride}setFlatCoordinates(layout,flatCoordinates){this.stride=getStrideForLayout(layout),this.layout=layout,this.flatCoordinates=flatCoordinates}setCoordinates(coordinates,layout){(0,util.b0)()}setLayout(layout,coordinates,nesting){let stride;if(layout)stride=getStrideForLayout(layout);else{for(let i=0;i<nesting;++i){if(0===coordinates.length)return this.layout="XY",void(this.stride=2);coordinates=coordinates[0]}stride=coordinates.length,layout=function getLayoutForStride(stride){let layout;2==stride?layout="XY":3==stride?layout="XYZ":4==stride&&(layout="XYZM");return layout}(stride)}this.layout=layout,this.stride=stride}applyTransform(transformFn){this.flatCoordinates&&(transformFn(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())}rotate(angle,anchor){const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,transform.e$)(flatCoordinates,0,flatCoordinates.length,stride,angle,anchor,flatCoordinates),this.changed()}}scale(sx,sy,anchor){void 0===sy&&(sy=sx),anchor||(anchor=(0,ol_extent.q1)(this.getExtent()));const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,transform.hs)(flatCoordinates,0,flatCoordinates.length,stride,sx,sy,anchor,flatCoordinates),this.changed()}}translate(deltaX,deltaY){const flatCoordinates=this.getFlatCoordinates();if(flatCoordinates){const stride=this.getStride();(0,transform.Tl)(flatCoordinates,0,flatCoordinates.length,stride,deltaX,deltaY,flatCoordinates),this.changed()}}}function getStrideForLayout(layout){let stride;return"XY"==layout?stride=2:"XYZ"==layout||"XYM"==layout?stride=3:"XYZM"==layout&&(stride=4),stride}var geom_SimpleGeometry=SimpleGeometry;function squaredSegmentDistance(x,y,x1,y1,x2,y2){const dx=x2-x1,dy=y2-y1;if(0!==dx||0!==dy){const t=((x-x1)*dx+(y-y1)*dy)/(dx*dx+dy*dy);t>1?(x1=x2,y1=y2):t>0&&(x1+=dx*t,y1+=dy*t)}return math_squaredDistance(x,y,x1,y1)}function math_squaredDistance(x1,y1,x2,y2){const dx=x2-x1,dy=y2-y1;return dx*dx+dy*dy}function lerp(a,b,x){return a+x*(b-a)}function assignClosest(flatCoordinates,offset1,offset2,stride,x,y,closestPoint){const x1=flatCoordinates[offset1],y1=flatCoordinates[offset1+1],dx=flatCoordinates[offset2]-x1,dy=flatCoordinates[offset2+1]-y1;let offset;if(0===dx&&0===dy)offset=offset1;else{const t=((x-x1)*dx+(y-y1)*dy)/(dx*dx+dy*dy);if(t>1)offset=offset2;else{if(t>0){for(let i=0;i<stride;++i)closestPoint[i]=lerp(flatCoordinates[offset1+i],flatCoordinates[offset2+i],t);return void(closestPoint.length=stride)}offset=offset1}}for(let i=0;i<stride;++i)closestPoint[i]=flatCoordinates[offset+i];closestPoint.length=stride}function maxSquaredDelta(flatCoordinates,offset,end,stride,max){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1];for(offset+=stride;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1],squaredDelta=math_squaredDistance(x1,y1,x2,y2);squaredDelta>max&&(max=squaredDelta),x1=x2,y1=y2}return max}function arrayMaxSquaredDelta(flatCoordinates,offset,ends,stride,max){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];max=maxSquaredDelta(flatCoordinates,offset,end,stride,max),offset=end}return max}function assignClosestPoint(flatCoordinates,offset,end,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){if(offset==end)return minSquaredDistance;let i,squaredDistance;if(0===maxDelta){if(squaredDistance=math_squaredDistance(x,y,flatCoordinates[offset],flatCoordinates[offset+1]),squaredDistance<minSquaredDistance){for(i=0;i<stride;++i)closestPoint[i]=flatCoordinates[offset+i];return closestPoint.length=stride,squaredDistance}return minSquaredDistance}tmpPoint=tmpPoint||[NaN,NaN];let index=offset+stride;for(;index<end;)if(assignClosest(flatCoordinates,index-stride,index,stride,x,y,tmpPoint),squaredDistance=math_squaredDistance(x,y,tmpPoint[0],tmpPoint[1]),squaredDistance<minSquaredDistance){for(minSquaredDistance=squaredDistance,i=0;i<stride;++i)closestPoint[i]=tmpPoint[i];closestPoint.length=stride,index+=stride}else index+=stride*Math.max((Math.sqrt(squaredDistance)-Math.sqrt(minSquaredDistance))/maxDelta|0,1);if(isRing&&(assignClosest(flatCoordinates,end-stride,offset,stride,x,y,tmpPoint),squaredDistance=math_squaredDistance(x,y,tmpPoint[0],tmpPoint[1]),squaredDistance<minSquaredDistance)){for(minSquaredDistance=squaredDistance,i=0;i<stride;++i)closestPoint[i]=tmpPoint[i];closestPoint.length=stride}return minSquaredDistance}function assignClosestArrayPoint(flatCoordinates,offset,ends,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){tmpPoint=tmpPoint||[NaN,NaN];for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];minSquaredDistance=assignClosestPoint(flatCoordinates,offset,end,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint),offset=end}return minSquaredDistance}function deflateCoordinates(flatCoordinates,offset,coordinates,stride){for(let i=0,ii=coordinates.length;i<ii;++i){const coordinate=coordinates[i];for(let j=0;j<stride;++j)flatCoordinates[offset++]=coordinate[j]}return offset}function deflateCoordinatesArray(flatCoordinates,offset,coordinatess,stride,ends){ends=ends||[];let i=0;for(let j=0,jj=coordinatess.length;j<jj;++j){const end=deflateCoordinates(flatCoordinates,offset,coordinatess[j],stride);ends[i++]=end,offset=end}return ends.length=i,ends}function douglasPeucker(flatCoordinates,offset,end,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset){const n=(end-offset)/stride;if(n<3){for(;offset<end;offset+=stride)simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset],simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+1];return simplifiedOffset}const markers=new Array(n);markers[0]=1,markers[n-1]=1;const stack=[offset,end-stride];let index=0;for(;stack.length>0;){const last=stack.pop(),first=stack.pop();let maxSquaredDistance=0;const x1=flatCoordinates[first],y1=flatCoordinates[first+1],x2=flatCoordinates[last],y2=flatCoordinates[last+1];for(let i=first+stride;i<last;i+=stride){const squaredDistance=squaredSegmentDistance(flatCoordinates[i],flatCoordinates[i+1],x1,y1,x2,y2);squaredDistance>maxSquaredDistance&&(index=i,maxSquaredDistance=squaredDistance)}maxSquaredDistance>squaredTolerance&&(markers[(index-offset)/stride]=1,first+stride<index&&stack.push(first,index),index+stride<last&&stack.push(index,last))}for(let i=0;i<n;++i)markers[i]&&(simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+i*stride],simplifiedFlatCoordinates[simplifiedOffset++]=flatCoordinates[offset+i*stride+1]);return simplifiedOffset}function douglasPeuckerArray(flatCoordinates,offset,ends,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];simplifiedOffset=douglasPeucker(flatCoordinates,offset,end,stride,squaredTolerance,simplifiedFlatCoordinates,simplifiedOffset),simplifiedEnds.push(simplifiedOffset),offset=end}return simplifiedOffset}function snap(value,tolerance){return tolerance*Math.round(value/tolerance)}function quantize(flatCoordinates,offset,end,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset){if(offset==end)return simplifiedOffset;let x2,y2,x1=snap(flatCoordinates[offset],tolerance),y1=snap(flatCoordinates[offset+1],tolerance);offset+=stride,simplifiedFlatCoordinates[simplifiedOffset++]=x1,simplifiedFlatCoordinates[simplifiedOffset++]=y1;do{if(x2=snap(flatCoordinates[offset],tolerance),y2=snap(flatCoordinates[offset+1],tolerance),(offset+=stride)==end)return simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,simplifiedOffset}while(x2==x1&&y2==y1);for(;offset<end;){const x3=snap(flatCoordinates[offset],tolerance),y3=snap(flatCoordinates[offset+1],tolerance);if(offset+=stride,x3==x2&&y3==y2)continue;const dx1=x2-x1,dy1=y2-y1,dx2=x3-x1,dy2=y3-y1;dx1*dy2==dy1*dx2&&(dx1<0&&dx2<dx1||dx1==dx2||dx1>0&&dx2>dx1)&&(dy1<0&&dy2<dy1||dy1==dy2||dy1>0&&dy2>dy1)?(x2=x3,y2=y3):(simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,x1=x2,y1=y2,x2=x3,y2=y3)}return simplifiedFlatCoordinates[simplifiedOffset++]=x2,simplifiedFlatCoordinates[simplifiedOffset++]=y2,simplifiedOffset}function quantizeArray(flatCoordinates,offset,ends,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds){for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];simplifiedOffset=quantize(flatCoordinates,offset,end,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset),simplifiedEnds.push(simplifiedOffset),offset=end}return simplifiedOffset}var array=__webpack_require__("../../node_modules/ol/array.js");function forEach(flatCoordinates,offset,end,stride,callback){let ret;for(offset+=stride;offset<end;offset+=stride)if(ret=callback(flatCoordinates.slice(offset-stride,offset),flatCoordinates.slice(offset,offset+stride)),ret)return ret;return!1}function inflateCoordinates(flatCoordinates,offset,end,stride,coordinates){coordinates=void 0!==coordinates?coordinates:[];let i=0;for(let j=offset;j<end;j+=stride)coordinates[i++]=flatCoordinates.slice(j,j+stride);return coordinates.length=i,coordinates}function inflateCoordinatesArray(flatCoordinates,offset,ends,stride,coordinatess){coordinatess=void 0!==coordinatess?coordinatess:[];let i=0;for(let j=0,jj=ends.length;j<jj;++j){const end=ends[j];coordinatess[i++]=inflateCoordinates(flatCoordinates,offset,end,stride,coordinatess[i]),offset=end}return coordinatess.length=i,coordinatess}function interpolatePoint(flatCoordinates,offset,end,stride,fraction,dest,dimension){let o,t;const n=(end-offset)/stride;if(1===n)o=offset;else if(2===n)o=offset,t=fraction;else if(0!==n){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1],length=0;const cumulativeLengths=[0];for(let i=offset+stride;i<end;i+=stride){const x2=flatCoordinates[i],y2=flatCoordinates[i+1];length+=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)),cumulativeLengths.push(length),x1=x2,y1=y2}const target=fraction*length,index=(0,array.El)(cumulativeLengths,target);index<0?(t=(target-cumulativeLengths[-index-2])/(cumulativeLengths[-index-1]-cumulativeLengths[-index-2]),o=offset+(-index-2)*stride):o=offset+index*stride}dimension=dimension>1?dimension:2,dest=dest||new Array(dimension);for(let i=0;i<dimension;++i)dest[i]=void 0===o?NaN:void 0===t?flatCoordinates[o+i]:lerp(flatCoordinates[o+i],flatCoordinates[o+stride+i],t);return dest}function lineStringCoordinateAtM(flatCoordinates,offset,end,stride,m,extrapolate){if(end==offset)return null;let coordinate;if(m<flatCoordinates[offset+stride-1])return extrapolate?(coordinate=flatCoordinates.slice(offset,offset+stride),coordinate[stride-1]=m,coordinate):null;if(flatCoordinates[end-1]<m)return extrapolate?(coordinate=flatCoordinates.slice(end-stride,end),coordinate[stride-1]=m,coordinate):null;if(m==flatCoordinates[offset+stride-1])return flatCoordinates.slice(offset,offset+stride);let lo=offset/stride,hi=end/stride;for(;lo<hi;){const mid=lo+hi>>1;m<flatCoordinates[(mid+1)*stride-1]?hi=mid:lo=mid+1}const m0=flatCoordinates[lo*stride-1];if(m==m0)return flatCoordinates.slice((lo-1)*stride,(lo-1)*stride+stride);const t=(m-m0)/(flatCoordinates[(lo+1)*stride-1]-m0);coordinate=[];for(let i=0;i<stride-1;++i)coordinate.push(lerp(flatCoordinates[(lo-1)*stride+i],flatCoordinates[lo*stride+i],t));return coordinate.push(m),coordinate}function linearRingContainsExtent(flatCoordinates,offset,end,stride,extent){return!(0,ol_extent.sB)(extent,(function(coordinate){return!linearRingContainsXY(flatCoordinates,offset,end,stride,coordinate[0],coordinate[1])}))}function linearRingContainsXY(flatCoordinates,offset,end,stride,x,y){let wn=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];y1<=y?y2>y&&(x2-x1)*(y-y1)-(x-x1)*(y2-y1)>0&&wn++:y2<=y&&(x2-x1)*(y-y1)-(x-x1)*(y2-y1)<0&&wn--,x1=x2,y1=y2}return 0!==wn}function linearRingsContainsXY(flatCoordinates,offset,ends,stride,x,y){if(0===ends.length)return!1;if(!linearRingContainsXY(flatCoordinates,offset,ends[0],stride,x,y))return!1;for(let i=1,ii=ends.length;i<ii;++i)if(linearRingContainsXY(flatCoordinates,ends[i-1],ends[i],stride,x,y))return!1;return!0}function intersectsLineString(flatCoordinates,offset,end,stride,extent){const coordinatesExtent=(0,ol_extent.R8)((0,ol_extent.S5)(),flatCoordinates,offset,end,stride);return!!(0,ol_extent.HY)(extent,coordinatesExtent)&&(!!(0,ol_extent.ms)(extent,coordinatesExtent)||(coordinatesExtent[0]>=extent[0]&&coordinatesExtent[2]<=extent[2]||(coordinatesExtent[1]>=extent[1]&&coordinatesExtent[3]<=extent[3]||forEach(flatCoordinates,offset,end,stride,(function(point1,point2){return(0,ol_extent.Mx)(extent,point1,point2)})))))}function intersectsLinearRingArray(flatCoordinates,offset,ends,stride,extent){if(!function intersectsLinearRing(flatCoordinates,offset,end,stride,extent){return!!(intersectsLineString(flatCoordinates,offset,end,stride,extent)||linearRingContainsXY(flatCoordinates,offset,end,stride,extent[0],extent[1])||linearRingContainsXY(flatCoordinates,offset,end,stride,extent[0],extent[3])||linearRingContainsXY(flatCoordinates,offset,end,stride,extent[2],extent[1])||linearRingContainsXY(flatCoordinates,offset,end,stride,extent[2],extent[3]))}(flatCoordinates,offset,ends[0],stride,extent))return!1;if(1===ends.length)return!0;for(let i=1,ii=ends.length;i<ii;++i)if(linearRingContainsExtent(flatCoordinates,ends[i-1],ends[i],stride,extent)&&!intersectsLineString(flatCoordinates,ends[i-1],ends[i],stride,extent))return!1;return!0}function lineStringLength(flatCoordinates,offset,end,stride){let x1=flatCoordinates[offset],y1=flatCoordinates[offset+1],length=0;for(let i=offset+stride;i<end;i+=stride){const x2=flatCoordinates[i],y2=flatCoordinates[i+1];length+=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)),x1=x2,y1=y2}return length}class LineString extends geom_SimpleGeometry{constructor(coordinates,layout){super(),this.flatMidpoint_=null,this.flatMidpointRevision_=-1,this.maxDelta_=-1,this.maxDeltaRevision_=-1,void 0===layout||Array.isArray(coordinates[0])?this.setCoordinates(coordinates,layout):this.setFlatCoordinates(layout,coordinates)}appendCoordinate(coordinate){this.flatCoordinates?(0,array.X$)(this.flatCoordinates,coordinate):this.flatCoordinates=coordinate.slice(),this.changed()}clone(){const lineString=new LineString(this.flatCoordinates.slice(),this.layout);return lineString.applyProperties(this),lineString}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(maxSquaredDelta(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestPoint(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,x,y,closestPoint,minSquaredDistance))}forEachSegment(callback){return forEach(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,callback)}getCoordinateAtM(m,extrapolate){return"XYM"!=this.layout&&"XYZM"!=this.layout?null:(extrapolate=void 0!==extrapolate&&extrapolate,lineStringCoordinateAtM(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,m,extrapolate))}getCoordinates(){return inflateCoordinates(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinateAt(fraction,dest){return interpolatePoint(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,fraction,dest,this.stride)}getLength(){return lineStringLength(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getFlatMidpoint(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[];return simplifiedFlatCoordinates.length=douglasPeucker(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,squaredTolerance,simplifiedFlatCoordinates,0),new LineString(simplifiedFlatCoordinates,"XY")}getType(){return"LineString"}intersectsExtent(extent){return intersectsLineString(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=deflateCoordinates(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}var geom_LineString=LineString;class MultiLineString extends geom_SimpleGeometry{constructor(coordinates,layout,ends){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(coordinates[0]))this.setCoordinates(coordinates,layout);else if(void 0!==layout&&ends)this.setFlatCoordinates(layout,coordinates),this.ends_=ends;else{let layout=this.getLayout();const lineStrings=coordinates,flatCoordinates=[],ends=[];for(let i=0,ii=lineStrings.length;i<ii;++i){const lineString=lineStrings[i];0===i&&(layout=lineString.getLayout()),(0,array.X$)(flatCoordinates,lineString.getFlatCoordinates()),ends.push(flatCoordinates.length)}this.setFlatCoordinates(layout,flatCoordinates),this.ends_=ends}}appendLineString(lineString){this.flatCoordinates?(0,array.X$)(this.flatCoordinates,lineString.getFlatCoordinates().slice()):this.flatCoordinates=lineString.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const multiLineString=new MultiLineString(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return multiLineString.applyProperties(this),multiLineString}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,x,y,closestPoint,minSquaredDistance))}getCoordinateAtM(m,extrapolate,interpolate){return"XYM"!=this.layout&&"XYZM"!=this.layout||0===this.flatCoordinates.length?null:(extrapolate=void 0!==extrapolate&&extrapolate,interpolate=void 0!==interpolate&&interpolate,function lineStringsCoordinateAtM(flatCoordinates,offset,ends,stride,m,extrapolate,interpolate){if(interpolate)return lineStringCoordinateAtM(flatCoordinates,offset,ends[ends.length-1],stride,m,extrapolate);let coordinate;if(m<flatCoordinates[stride-1])return extrapolate?(coordinate=flatCoordinates.slice(0,stride),coordinate[stride-1]=m,coordinate):null;if(flatCoordinates[flatCoordinates.length-1]<m)return extrapolate?(coordinate=flatCoordinates.slice(flatCoordinates.length-stride),coordinate[stride-1]=m,coordinate):null;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];if(offset!=end){if(m<flatCoordinates[offset+stride-1])return null;if(m<=flatCoordinates[end-1])return lineStringCoordinateAtM(flatCoordinates,offset,end,stride,m,!1);offset=end}}return null}(this.flatCoordinates,0,this.ends_,this.stride,m,extrapolate,interpolate))}getCoordinates(){return inflateCoordinatesArray(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(index){return index<0||this.ends_.length<=index?null:new geom_LineString(this.flatCoordinates.slice(0===index?0:this.ends_[index-1],this.ends_[index]),this.layout)}getLineStrings(){const flatCoordinates=this.flatCoordinates,ends=this.ends_,layout=this.layout,lineStrings=[];let offset=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],lineString=new geom_LineString(flatCoordinates.slice(offset,end),layout);lineStrings.push(lineString),offset=end}return lineStrings}getFlatMidpoints(){const midpoints=[],flatCoordinates=this.flatCoordinates;let offset=0;const ends=this.ends_,stride=this.stride;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],midpoint=interpolatePoint(flatCoordinates,offset,end,stride,.5);(0,array.X$)(midpoints,midpoint),offset=end}return midpoints}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEnds=[];return simplifiedFlatCoordinates.length=douglasPeuckerArray(this.flatCoordinates,0,this.ends_,this.stride,squaredTolerance,simplifiedFlatCoordinates,0,simplifiedEnds),new MultiLineString(simplifiedFlatCoordinates,"XY",simplifiedEnds)}getType(){return"MultiLineString"}intersectsExtent(extent){return function intersectsLineStringArray(flatCoordinates,offset,ends,stride,extent){for(let i=0,ii=ends.length;i<ii;++i){if(intersectsLineString(flatCoordinates,offset,ends[i],stride,extent))return!0;offset=ends[i]}return!1}(this.flatCoordinates,0,this.ends_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,2),this.flatCoordinates||(this.flatCoordinates=[]);const ends=deflateCoordinatesArray(this.flatCoordinates,0,coordinates,this.stride,this.ends_);this.flatCoordinates.length=0===ends.length?0:ends[ends.length-1],this.changed()}}var geom_MultiLineString=MultiLineString;class Point extends geom_SimpleGeometry{constructor(coordinates,layout){super(),this.setCoordinates(coordinates,layout)}clone(){const point=new Point(this.flatCoordinates.slice(),this.layout);return point.applyProperties(this),point}closestPointXY(x,y,closestPoint,minSquaredDistance){const flatCoordinates=this.flatCoordinates,squaredDistance=math_squaredDistance(x,y,flatCoordinates[0],flatCoordinates[1]);if(squaredDistance<minSquaredDistance){const stride=this.stride;for(let i=0;i<stride;++i)closestPoint[i]=flatCoordinates[i];return closestPoint.length=stride,squaredDistance}return minSquaredDistance}getCoordinates(){return this.flatCoordinates?this.flatCoordinates.slice():[]}computeExtent(extent){return(0,ol_extent.dP)(this.flatCoordinates,extent)}getType(){return"Point"}intersectsExtent(extent){return(0,ol_extent.Rj)(extent,this.flatCoordinates[0],this.flatCoordinates[1])}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=function deflateCoordinate(flatCoordinates,offset,coordinate,stride){for(let i=0,ii=coordinate.length;i<ii;++i)flatCoordinates[offset++]=coordinate[i];return offset}(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}var geom_Point=Point;class MultiPoint extends geom_SimpleGeometry{constructor(coordinates,layout){super(),layout&&!Array.isArray(coordinates[0])?this.setFlatCoordinates(layout,coordinates):this.setCoordinates(coordinates,layout)}appendPoint(point){this.flatCoordinates?(0,array.X$)(this.flatCoordinates,point.getFlatCoordinates()):this.flatCoordinates=point.getFlatCoordinates().slice(),this.changed()}clone(){const multiPoint=new MultiPoint(this.flatCoordinates.slice(),this.layout);return multiPoint.applyProperties(this),multiPoint}closestPointXY(x,y,closestPoint,minSquaredDistance){if(minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y))return minSquaredDistance;const flatCoordinates=this.flatCoordinates,stride=this.stride;for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const squaredDistance=math_squaredDistance(x,y,flatCoordinates[i],flatCoordinates[i+1]);if(squaredDistance<minSquaredDistance){minSquaredDistance=squaredDistance;for(let j=0;j<stride;++j)closestPoint[j]=flatCoordinates[i+j];closestPoint.length=stride}}return minSquaredDistance}getCoordinates(){return inflateCoordinates(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(index){const n=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return index<0||n<=index?null:new geom_Point(this.flatCoordinates.slice(index*this.stride,(index+1)*this.stride),this.layout)}getPoints(){const flatCoordinates=this.flatCoordinates,layout=this.layout,stride=this.stride,points=[];for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const point=new geom_Point(flatCoordinates.slice(i,i+stride),layout);points.push(point)}return points}getType(){return"MultiPoint"}intersectsExtent(extent){const flatCoordinates=this.flatCoordinates,stride=this.stride;for(let i=0,ii=flatCoordinates.length;i<ii;i+=stride){const x=flatCoordinates[i],y=flatCoordinates[i+1];if((0,ol_extent.Rj)(extent,x,y))return!0}return!1}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=deflateCoordinates(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}var geom_MultiPoint=MultiPoint;function linearRing(flatCoordinates,offset,end,stride){let twiceArea=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];twiceArea+=y1*x2-x1*y2,x1=x2,y1=y2}return twiceArea/2}function linearRings(flatCoordinates,offset,ends,stride){let area=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i];area+=linearRing(flatCoordinates,offset,end,stride),offset=end}return area}class LinearRing extends geom_SimpleGeometry{constructor(coordinates,layout){super(),this.maxDelta_=-1,this.maxDeltaRevision_=-1,void 0===layout||Array.isArray(coordinates[0])?this.setCoordinates(coordinates,layout):this.setFlatCoordinates(layout,coordinates)}clone(){return new LinearRing(this.flatCoordinates.slice(),this.layout)}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(maxSquaredDelta(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestPoint(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}getArea(){return linearRing(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinates(){return inflateCoordinates(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[];return simplifiedFlatCoordinates.length=douglasPeucker(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,squaredTolerance,simplifiedFlatCoordinates,0),new LinearRing(simplifiedFlatCoordinates,"XY")}getType(){return"LinearRing"}intersectsExtent(extent){return!1}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=deflateCoordinates(this.flatCoordinates,0,coordinates,this.stride),this.changed()}}var geom_LinearRing=LinearRing;function getInteriorPointOfArray(flatCoordinates,offset,ends,stride,flatCenters,flatCentersOffset,dest){let i,ii,x,x1,x2,y1,y2;const y=flatCenters[flatCentersOffset+1],intersections=[];for(let r=0,rr=ends.length;r<rr;++r){const end=ends[r];for(x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1],i=offset;i<end;i+=stride)x2=flatCoordinates[i],y2=flatCoordinates[i+1],(y<=y1&&y2<=y||y1<=y&&y<=y2)&&(x=(y-y1)/(y2-y1)*(x2-x1)+x1,intersections.push(x)),x1=x2,y1=y2}let pointX=NaN,maxSegmentLength=-1/0;for(intersections.sort(array.V_),x1=intersections[0],i=1,ii=intersections.length;i<ii;++i){x2=intersections[i];const segmentLength=Math.abs(x2-x1);segmentLength>maxSegmentLength&&(x=(x1+x2)/2,linearRingsContainsXY(flatCoordinates,offset,ends,stride,x,y)&&(pointX=x,maxSegmentLength=segmentLength)),x1=x2}return isNaN(pointX)&&(pointX=flatCenters[flatCentersOffset]),dest?(dest.push(pointX,y,maxSegmentLength),dest):[pointX,y,maxSegmentLength]}function coordinates(flatCoordinates,offset,end,stride){for(;offset<end-stride;){for(let i=0;i<stride;++i){const tmp=flatCoordinates[offset+i];flatCoordinates[offset+i]=flatCoordinates[end-stride+i],flatCoordinates[end-stride+i]=tmp}offset+=stride,end-=stride}}function linearRingIsClockwise(flatCoordinates,offset,end,stride){let edge=0,x1=flatCoordinates[end-stride],y1=flatCoordinates[end-stride+1];for(;offset<end;offset+=stride){const x2=flatCoordinates[offset],y2=flatCoordinates[offset+1];edge+=(x2-x1)*(y2+y1),x1=x2,y1=y2}return 0===edge?void 0:edge>0}function linearRingsAreOriented(flatCoordinates,offset,ends,stride,right){right=void 0!==right&&right;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],isClockwise=linearRingIsClockwise(flatCoordinates,offset,end,stride);if(0===i){if(right&&isClockwise||!right&&!isClockwise)return!1}else if(right&&!isClockwise||!right&&isClockwise)return!1;offset=end}return!0}function orientLinearRings(flatCoordinates,offset,ends,stride,right){right=void 0!==right&&right;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],isClockwise=linearRingIsClockwise(flatCoordinates,offset,end,stride);(0===i?right&&isClockwise||!right&&!isClockwise:right&&!isClockwise||!right&&isClockwise)&&coordinates(flatCoordinates,offset,end,stride),offset=end}return offset}function orientLinearRingsArray(flatCoordinates,offset,endss,stride,right){for(let i=0,ii=endss.length;i<ii;++i)offset=orientLinearRings(flatCoordinates,offset,endss[i],stride,right);return offset}class Polygon extends geom_SimpleGeometry{constructor(coordinates,layout,ends){super(),this.ends_=[],this.flatInteriorPointRevision_=-1,this.flatInteriorPoint_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,void 0!==layout&&ends?(this.setFlatCoordinates(layout,coordinates),this.ends_=ends):this.setCoordinates(coordinates,layout)}appendLinearRing(linearRing){this.flatCoordinates?(0,array.X$)(this.flatCoordinates,linearRing.getFlatCoordinates()):this.flatCoordinates=linearRing.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const polygon=new Polygon(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return polygon.applyProperties(this),polygon}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}containsXY(x,y){return linearRingsContainsXY(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,x,y)}getArea(){return linearRings(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)}getCoordinates(right){let flatCoordinates;return void 0!==right?(flatCoordinates=this.getOrientedFlatCoordinates().slice(),orientLinearRings(flatCoordinates,0,this.ends_,this.stride,right)):flatCoordinates=this.flatCoordinates,inflateCoordinatesArray(flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getFlatInteriorPoint(){if(this.flatInteriorPointRevision_!=this.getRevision()){const flatCenter=(0,ol_extent.q1)(this.getExtent());this.flatInteriorPoint_=getInteriorPointOfArray(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,flatCenter,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_}getInteriorPoint(){return new geom_Point(this.getFlatInteriorPoint(),"XYM")}getLinearRingCount(){return this.ends_.length}getLinearRing(index){return index<0||this.ends_.length<=index?null:new geom_LinearRing(this.flatCoordinates.slice(0===index?0:this.ends_[index-1],this.ends_[index]),this.layout)}getLinearRings(){const layout=this.layout,flatCoordinates=this.flatCoordinates,ends=this.ends_,linearRings=[];let offset=0;for(let i=0,ii=ends.length;i<ii;++i){const end=ends[i],linearRing=new geom_LinearRing(flatCoordinates.slice(offset,end),layout);linearRings.push(linearRing),offset=end}return linearRings}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const flatCoordinates=this.flatCoordinates;linearRingsAreOriented(flatCoordinates,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=flatCoordinates:(this.orientedFlatCoordinates_=flatCoordinates.slice(),this.orientedFlatCoordinates_.length=orientLinearRings(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEnds=[];return simplifiedFlatCoordinates.length=quantizeArray(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(squaredTolerance),simplifiedFlatCoordinates,0,simplifiedEnds),new Polygon(simplifiedFlatCoordinates,"XY",simplifiedEnds)}getType(){return"Polygon"}intersectsExtent(extent){return intersectsLinearRingArray(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,2),this.flatCoordinates||(this.flatCoordinates=[]);const ends=deflateCoordinatesArray(this.flatCoordinates,0,coordinates,this.stride,this.ends_);this.flatCoordinates.length=0===ends.length?0:ends[ends.length-1],this.changed()}}var geom_Polygon=Polygon;class MultiPolygon extends geom_SimpleGeometry{constructor(coordinates,layout,endss){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!endss&&!Array.isArray(coordinates[0])){let thisLayout=this.getLayout();const polygons=coordinates,flatCoordinates=[],thisEndss=[];for(let i=0,ii=polygons.length;i<ii;++i){const polygon=polygons[i];0===i&&(thisLayout=polygon.getLayout());const offset=flatCoordinates.length,ends=polygon.getEnds();for(let j=0,jj=ends.length;j<jj;++j)ends[j]+=offset;(0,array.X$)(flatCoordinates,polygon.getFlatCoordinates()),thisEndss.push(ends)}layout=thisLayout,coordinates=flatCoordinates,endss=thisEndss}void 0!==layout&&endss?(this.setFlatCoordinates(layout,coordinates),this.endss_=endss):this.setCoordinates(coordinates,layout)}appendPolygon(polygon){let ends;if(this.flatCoordinates){const offset=this.flatCoordinates.length;(0,array.X$)(this.flatCoordinates,polygon.getFlatCoordinates()),ends=polygon.getEnds().slice();for(let i=0,ii=ends.length;i<ii;++i)ends[i]+=offset}else this.flatCoordinates=polygon.getFlatCoordinates().slice(),ends=polygon.getEnds().slice(),this.endss_.push();this.endss_.push(ends),this.changed()}clone(){const len=this.endss_.length,newEndss=new Array(len);for(let i=0;i<len;++i)newEndss[i]=this.endss_[i].slice();const multiPolygon=new MultiPolygon(this.flatCoordinates.slice(),this.layout,newEndss);return multiPolygon.applyProperties(this),multiPolygon}closestPointXY(x,y,closestPoint,minSquaredDistance){return minSquaredDistance<(0,ol_extent.Ld)(this.getExtent(),x,y)?minSquaredDistance:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(function multiArrayMaxSquaredDelta(flatCoordinates,offset,endss,stride,max){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];max=arrayMaxSquaredDelta(flatCoordinates,offset,ends,stride,max),offset=ends[ends.length-1]}return max}(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),function assignClosestMultiArrayPoint(flatCoordinates,offset,endss,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint){tmpPoint=tmpPoint||[NaN,NaN];for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];minSquaredDistance=assignClosestArrayPoint(flatCoordinates,offset,ends,stride,maxDelta,isRing,x,y,closestPoint,minSquaredDistance,tmpPoint),offset=ends[ends.length-1]}return minSquaredDistance}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,x,y,closestPoint,minSquaredDistance))}containsXY(x,y){return function linearRingssContainsXY(flatCoordinates,offset,endss,stride,x,y){if(0===endss.length)return!1;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(linearRingsContainsXY(flatCoordinates,offset,ends,stride,x,y))return!0;offset=ends[ends.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,x,y)}getArea(){return function linearRingss(flatCoordinates,offset,endss,stride){let area=0;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];area+=linearRings(flatCoordinates,offset,ends,stride),offset=ends[ends.length-1]}return area}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(right){let flatCoordinates;return void 0!==right?(flatCoordinates=this.getOrientedFlatCoordinates().slice(),orientLinearRingsArray(flatCoordinates,0,this.endss_,this.stride,right)):flatCoordinates=this.flatCoordinates,function inflateMultiCoordinatesArray(flatCoordinates,offset,endss,stride,coordinatesss){coordinatesss=void 0!==coordinatesss?coordinatesss:[];let i=0;for(let j=0,jj=endss.length;j<jj;++j){const ends=endss[j];coordinatesss[i++]=1===ends.length&&ends[0]===offset?[]:inflateCoordinatesArray(flatCoordinates,offset,ends,stride,coordinatesss[i]),offset=ends[ends.length-1]}return coordinatesss.length=i,coordinatesss}(flatCoordinates,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const flatCenters=function center_linearRingss(flatCoordinates,offset,endss,stride){const flatCenters=[];let extent=(0,ol_extent.S5)();for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];extent=(0,ol_extent.Vy)(flatCoordinates,offset,ends[0],stride),flatCenters.push((extent[0]+extent[2])/2,(extent[1]+extent[3])/2),offset=ends[ends.length-1]}return flatCenters}(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=function getInteriorPointsOfMultiArray(flatCoordinates,offset,endss,stride,flatCenters){let interiorPoints=[];for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];interiorPoints=getInteriorPointOfArray(flatCoordinates,offset,ends,stride,flatCenters,2*i,interiorPoints),offset=ends[ends.length-1]}return interiorPoints}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,flatCenters),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new geom_MultiPoint(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const flatCoordinates=this.flatCoordinates;!function linearRingssAreOriented(flatCoordinates,offset,endss,stride,right){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(!linearRingsAreOriented(flatCoordinates,offset,ends,stride,right))return!1;ends.length&&(offset=ends[ends.length-1])}return!0}(flatCoordinates,0,this.endss_,this.stride)?(this.orientedFlatCoordinates_=flatCoordinates.slice(),this.orientedFlatCoordinates_.length=orientLinearRingsArray(this.orientedFlatCoordinates_,0,this.endss_,this.stride)):this.orientedFlatCoordinates_=flatCoordinates,this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(squaredTolerance){const simplifiedFlatCoordinates=[],simplifiedEndss=[];return simplifiedFlatCoordinates.length=function quantizeMultiArray(flatCoordinates,offset,endss,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEndss){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i],simplifiedEnds=[];simplifiedOffset=quantizeArray(flatCoordinates,offset,ends,stride,tolerance,simplifiedFlatCoordinates,simplifiedOffset,simplifiedEnds),simplifiedEndss.push(simplifiedEnds),offset=ends[ends.length-1]}return simplifiedOffset}(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(squaredTolerance),simplifiedFlatCoordinates,0,simplifiedEndss),new MultiPolygon(simplifiedFlatCoordinates,"XY",simplifiedEndss)}getPolygon(index){if(index<0||this.endss_.length<=index)return null;let offset;if(0===index)offset=0;else{const prevEnds=this.endss_[index-1];offset=prevEnds[prevEnds.length-1]}const ends=this.endss_[index].slice(),end=ends[ends.length-1];if(0!==offset)for(let i=0,ii=ends.length;i<ii;++i)ends[i]-=offset;return new geom_Polygon(this.flatCoordinates.slice(offset,end),this.layout,ends)}getPolygons(){const layout=this.layout,flatCoordinates=this.flatCoordinates,endss=this.endss_,polygons=[];let offset=0;for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i].slice(),end=ends[ends.length-1];if(0!==offset)for(let j=0,jj=ends.length;j<jj;++j)ends[j]-=offset;const polygon=new geom_Polygon(flatCoordinates.slice(offset,end),layout,ends);polygons.push(polygon),offset=end}return polygons}getType(){return"MultiPolygon"}intersectsExtent(extent){return function intersectsLinearRingMultiArray(flatCoordinates,offset,endss,stride,extent){for(let i=0,ii=endss.length;i<ii;++i){const ends=endss[i];if(intersectsLinearRingArray(flatCoordinates,offset,ends,stride,extent))return!0;offset=ends[ends.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,extent)}setCoordinates(coordinates,layout){this.setLayout(layout,coordinates,3),this.flatCoordinates||(this.flatCoordinates=[]);const endss=function deflateMultiCoordinatesArray(flatCoordinates,offset,coordinatesss,stride,endss){endss=endss||[];let i=0;for(let j=0,jj=coordinatesss.length;j<jj;++j){const ends=deflateCoordinatesArray(flatCoordinates,offset,coordinatesss[j],stride,endss[i]);0===ends.length&&(ends[0]=offset),endss[i++]=ends,offset=ends[ends.length-1]}return endss.length=i,endss}(this.flatCoordinates,0,coordinates,this.stride,this.endss_);if(0===endss.length)this.flatCoordinates.length=0;else{const lastEnds=endss[endss.length-1];this.flatCoordinates.length=0===lastEnds.length?0:lastEnds[lastEnds.length-1]}this.changed()}}var geom_MultiPolygon=MultiPolygon,proj=__webpack_require__("../../node_modules/ol/proj.js");var format_Feature=class FeatureFormat{constructor(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.supportedMediaTypes=null}getReadOptions(source,options){if(options){let dataProjection=options.dataProjection?(0,proj.Jt)(options.dataProjection):this.readProjection(source);options.extent&&dataProjection&&"tile-pixels"===dataProjection.getUnits()&&(dataProjection=(0,proj.Jt)(dataProjection),dataProjection.setWorldExtent(options.extent)),options={dataProjection:dataProjection,featureProjection:options.featureProjection}}return this.adaptOptions(options)}adaptOptions(options){return Object.assign({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection},options)}getType(){return(0,util.b0)()}readFeature(source,options){return(0,util.b0)()}readFeatures(source,options){return(0,util.b0)()}readGeometry(source,options){return(0,util.b0)()}readProjection(source){return(0,util.b0)()}writeFeature(feature,options){return(0,util.b0)()}writeFeatures(features,options){return(0,util.b0)()}writeGeometry(geometry,options){return(0,util.b0)()}};function transformGeometryWithOptions(geometry,write,options){const featureProjection=options?(0,proj.Jt)(options.featureProjection):null,dataProjection=options?(0,proj.Jt)(options.dataProjection):null;let transformed;if(transformed=featureProjection&&dataProjection&&!(0,proj.tI)(featureProjection,dataProjection)?(write?geometry.clone():geometry).transform(write?featureProjection:dataProjection,write?dataProjection:featureProjection):geometry,write&&options&&void 0!==options.decimals){const power=Math.pow(10,options.decimals),transform=function(coordinates){for(let i=0,ii=coordinates.length;i<ii;++i)coordinates[i]=Math.round(coordinates[i]*power)/power;return coordinates};transformed===geometry&&(transformed=geometry.clone()),transformed.applyTransform(transform)}return transformed}function getText(source){return"string"==typeof source?source:""}var format_TextFeature=class TextFeature extends format_Feature{constructor(){super()}getType(){return"text"}readFeature(source,options){return this.readFeatureFromText(getText(source),this.adaptOptions(options))}readFeatureFromText(text,options){return(0,util.b0)()}readFeatures(source,options){return this.readFeaturesFromText(getText(source),this.adaptOptions(options))}readFeaturesFromText(text,options){return(0,util.b0)()}readGeometry(source,options){return this.readGeometryFromText(getText(source),this.adaptOptions(options))}readGeometryFromText(text,options){return(0,util.b0)()}readProjection(source){return this.readProjectionFromText(getText(source))}readProjectionFromText(text){return this.dataProjection}writeFeature(feature,options){return this.writeFeatureText(feature,this.adaptOptions(options))}writeFeatureText(feature,options){return(0,util.b0)()}writeFeatures(features,options){return this.writeFeaturesText(features,this.adaptOptions(options))}writeFeaturesText(features,options){return(0,util.b0)()}writeGeometry(geometry,options){return this.writeGeometryText(geometry,this.adaptOptions(options))}writeGeometryText(geometry,options){return(0,util.b0)()}};const GeometryConstructor={POINT:geom_Point,LINESTRING:geom_LineString,POLYGON:geom_Polygon,MULTIPOINT:geom_MultiPoint,MULTILINESTRING:geom_MultiLineString,MULTIPOLYGON:geom_MultiPolygon},EMPTY="EMPTY",Z="Z",M="M",TokenType_START=0,TokenType_TEXT=1,TokenType_LEFT_PAREN=2,TokenType_RIGHT_PAREN=3,TokenType_NUMBER=4,TokenType_COMMA=5,TokenType_EOF=6,wktTypeLookup={Point:"POINT",LineString:"LINESTRING",Polygon:"POLYGON",MultiPoint:"MULTIPOINT",MultiLineString:"MULTILINESTRING",MultiPolygon:"MULTIPOLYGON",GeometryCollection:"GEOMETRYCOLLECTION",Circle:"CIRCLE"};class Lexer{constructor(wkt){this.wkt=wkt,this.index_=-1}isAlpha_(c){return c>="a"&&c<="z"||c>="A"&&c<="Z"}isNumeric_(c,decimal){return decimal=void 0!==decimal&&decimal,c>="0"&&c<="9"||"."==c&&!decimal}isWhiteSpace_(c){return" "==c||"\t"==c||"\r"==c||"\n"==c}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const c=this.nextChar_(),position=this.index_;let type,value=c;if("("==c)type=TokenType_LEFT_PAREN;else if(","==c)type=TokenType_COMMA;else if(")"==c)type=TokenType_RIGHT_PAREN;else if(this.isNumeric_(c)||"-"==c)type=TokenType_NUMBER,value=this.readNumber_();else if(this.isAlpha_(c))type=TokenType_TEXT,value=this.readText_();else{if(this.isWhiteSpace_(c))return this.nextToken();if(""!==c)throw new Error("Unexpected character: "+c);type=TokenType_EOF}return{position:position,value:value,type:type}}readNumber_(){let c;const index=this.index_;let decimal=!1,scientificNotation=!1;do{"."==c?decimal=!0:"e"!=c&&"E"!=c||(scientificNotation=!0),c=this.nextChar_()}while(this.isNumeric_(c,decimal)||!scientificNotation&&("e"==c||"E"==c)||scientificNotation&&("-"==c||"+"==c));return parseFloat(this.wkt.substring(index,this.index_--))}readText_(){let c;const index=this.index_;do{c=this.nextChar_()}while(this.isAlpha_(c));return this.wkt.substring(index,this.index_--).toUpperCase()}}class Parser{constructor(lexer){this.lexer_=lexer,this.token_={position:0,type:TokenType_START},this.layout_="XY"}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(type){return this.token_.type==type}match(type){const isMatch=this.isTokenType(type);return isMatch&&this.consume_(),isMatch}parse(){return this.consume_(),this.parseGeometry_()}parseGeometryLayout_(){let layout="XY";const dimToken=this.token_;if(this.isTokenType(TokenType_TEXT)){const dimInfo=dimToken.value;dimInfo===Z?layout="XYZ":dimInfo===M?layout="XYM":"ZM"===dimInfo&&(layout="XYZM"),"XY"!==layout&&this.consume_()}return layout}parseGeometryCollectionText_(){if(this.match(TokenType_LEFT_PAREN)){const geometries=[];do{geometries.push(this.parseGeometry_())}while(this.match(TokenType_COMMA));if(this.match(TokenType_RIGHT_PAREN))return geometries}throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(TokenType_LEFT_PAREN)){const coordinates=this.parsePoint_();if(this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(TokenType_LEFT_PAREN)){const coordinates=this.parsePointList_();if(this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(TokenType_LEFT_PAREN)){const coordinates=this.parseLineStringTextList_();if(this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(TokenType_LEFT_PAREN)){let coordinates;if(coordinates=this.token_.type==TokenType_LEFT_PAREN?this.parsePointTextList_():this.parsePointList_(),this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(TokenType_LEFT_PAREN)){const coordinates=this.parseLineStringTextList_();if(this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(TokenType_LEFT_PAREN)){const coordinates=this.parsePolygonTextList_();if(this.match(TokenType_RIGHT_PAREN))return coordinates}throw new Error(this.formatErrorMessage_())}parsePoint_(){const coordinates=[],dimensions=this.layout_.length;for(let i=0;i<dimensions;++i){const token=this.token_;if(!this.match(TokenType_NUMBER))break;coordinates.push(token.value)}if(coordinates.length==dimensions)return coordinates;throw new Error(this.formatErrorMessage_())}parsePointList_(){const coordinates=[this.parsePoint_()];for(;this.match(TokenType_COMMA);)coordinates.push(this.parsePoint_());return coordinates}parsePointTextList_(){const coordinates=[this.parsePointText_()];for(;this.match(TokenType_COMMA);)coordinates.push(this.parsePointText_());return coordinates}parseLineStringTextList_(){const coordinates=[this.parseLineStringText_()];for(;this.match(TokenType_COMMA);)coordinates.push(this.parseLineStringText_());return coordinates}parsePolygonTextList_(){const coordinates=[this.parsePolygonText_()];for(;this.match(TokenType_COMMA);)coordinates.push(this.parsePolygonText_());return coordinates}isEmptyGeometry_(){const isEmpty=this.isTokenType(TokenType_TEXT)&&this.token_.value==EMPTY;return isEmpty&&this.consume_(),isEmpty}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const token=this.token_;if(this.match(TokenType_TEXT)){const geomType=token.value;this.layout_=this.parseGeometryLayout_();const isEmpty=this.isEmptyGeometry_();if("GEOMETRYCOLLECTION"==geomType){if(isEmpty)return new geom_GeometryCollection([]);const geometries=this.parseGeometryCollectionText_();return new geom_GeometryCollection(geometries)}const ctor=GeometryConstructor[geomType];if(!ctor)throw new Error("Invalid geometry type: "+geomType);let coordinates;if(isEmpty)coordinates="POINT"==geomType?[NaN,NaN]:[];else switch(geomType){case"POINT":coordinates=this.parsePointText_();break;case"LINESTRING":coordinates=this.parseLineStringText_();break;case"POLYGON":coordinates=this.parsePolygonText_();break;case"MULTIPOINT":coordinates=this.parseMultiPointText_();break;case"MULTILINESTRING":coordinates=this.parseMultiLineStringText_();break;case"MULTIPOLYGON":coordinates=this.parseMultiPolygonText_()}return new ctor(coordinates,this.layout_)}throw new Error(this.formatErrorMessage_())}}function encodePointGeometry(geom){const coordinates=geom.getCoordinates();return 0===coordinates.length?"":coordinates.join(" ")}function encodeLineStringGeometry(geom){const coordinates=geom.getCoordinates(),array=[];for(let i=0,ii=coordinates.length;i<ii;++i)array.push(coordinates[i].join(" "));return array.join(",")}function encodePolygonGeometry(geom){const array=[],rings=geom.getLinearRings();for(let i=0,ii=rings.length;i<ii;++i)array.push("("+encodeLineStringGeometry(rings[i])+")");return array.join(",")}const GeometryEncoder={Point:encodePointGeometry,LineString:encodeLineStringGeometry,Polygon:encodePolygonGeometry,MultiPoint:function encodeMultiPointGeometry(geom){const array=[],components=geom.getPoints();for(let i=0,ii=components.length;i<ii;++i)array.push("("+encodePointGeometry(components[i])+")");return array.join(",")},MultiLineString:function encodeMultiLineStringGeometry(geom){const array=[],components=geom.getLineStrings();for(let i=0,ii=components.length;i<ii;++i)array.push("("+encodeLineStringGeometry(components[i])+")");return array.join(",")},MultiPolygon:function encodeMultiPolygonGeometry(geom){const array=[],components=geom.getPolygons();for(let i=0,ii=components.length;i<ii;++i)array.push("("+encodePolygonGeometry(components[i])+")");return array.join(",")},GeometryCollection:function encodeGeometryCollectionGeometry(geom){const array=[],geoms=geom.getGeometries();for(let i=0,ii=geoms.length;i<ii;++i)array.push(encode(geoms[i]));return array.join(",")}};function encode(geom){const type=geom.getType(),enc=(0,GeometryEncoder[type])(geom);let wktType=wktTypeLookup[type];if("function"==typeof geom.getFlatCoordinates){const dimInfo=function encodeGeometryLayout(geom){const layout=geom.getLayout();let dimInfo="";return"XYZ"!==layout&&"XYZM"!==layout||(dimInfo+=Z),"XYM"!==layout&&"XYZM"!==layout||(dimInfo+=M),dimInfo}(geom);dimInfo.length>0&&(wktType+=" "+dimInfo)}return 0===enc.length?wktType+" "+EMPTY:wktType+"("+enc+")"}var format_WKT=class WKT extends format_TextFeature{constructor(options){super(),options=options||{},this.splitCollection_=void 0!==options.splitCollection&&options.splitCollection}parse_(wkt){const lexer=new Lexer(wkt);return new Parser(lexer).parse()}readFeatureFromText(text,options){const geom=this.readGeometryFromText(text,options),feature=new ol_Feature;return feature.setGeometry(geom),feature}readFeaturesFromText(text,options){let geometries=[];const geometry=this.readGeometryFromText(text,options);geometries=this.splitCollection_&&"GeometryCollection"==geometry.getType()?geometry.getGeometriesArray():[geometry];const features=[];for(let i=0,ii=geometries.length;i<ii;++i){const feature=new ol_Feature;feature.setGeometry(geometries[i]),features.push(feature)}return features}readGeometryFromText(text,options){return transformGeometryWithOptions(this.parse_(text),!1,options)}writeFeatureText(feature,options){const geometry=feature.getGeometry();return geometry?this.writeGeometryText(geometry,options):""}writeFeaturesText(features,options){if(1==features.length)return this.writeFeatureText(features[0],options);const geometries=[];for(let i=0,ii=features.length;i<ii;++i)geometries.push(features[i].getGeometry());const collection=new geom_GeometryCollection(geometries);return this.writeGeometryText(collection,options)}writeGeometryText(geometry,options){return encode(transformGeometryWithOptions(geometry,!0,options))}}},"../../node_modules/ol/functions.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{B4:function(){return memoizeOne},tV:function(){return VOID}});var _array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/ol/array.js");function VOID(){}function memoizeOne(fn){let lastResult,lastArgs,lastThis,called=!1;return function(){const nextArgs=Array.prototype.slice.call(arguments);return called&&this===lastThis&&(0,_array_js__WEBPACK_IMPORTED_MODULE_0__.aI)(nextArgs,lastArgs)||(called=!0,lastThis=this,lastArgs=nextArgs,lastResult=fn.apply(this,arguments)),lastResult}}},"../../node_modules/ol/geom/Geometry.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return geom_Geometry}});var ol_Object=__webpack_require__("../../node_modules/ol/Object.js"),util=__webpack_require__("../../node_modules/ol/util.js");new Array(6);function compose(transform,dx1,dy1,sx,sy,angle,dx2,dy2){const sin=Math.sin(angle),cos=Math.cos(angle);return transform[0]=sx*cos,transform[1]=sy*sin,transform[2]=-sx*sin,transform[3]=sy*cos,transform[4]=dx2*sx*cos-dy2*sx*sin+dx1,transform[5]=dx2*sy*sin+dy2*sy*cos+dy1,transform}var ol_extent=__webpack_require__("../../node_modules/ol/extent.js"),proj=__webpack_require__("../../node_modules/ol/proj.js"),functions=__webpack_require__("../../node_modules/ol/functions.js"),transform=__webpack_require__("../../node_modules/ol/geom/flat/transform.js");const tmpTransform=[1,0,0,1,0,0];class Geometry extends ol_Object.A{constructor(){super(),this.extent_=(0,ol_extent.S5)(),this.extentRevision_=-1,this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=0,this.simplifyTransformedInternal=(0,functions.B4)((function(revision,squaredTolerance,transform){if(!transform)return this.getSimplifiedGeometry(squaredTolerance);const clone=this.clone();return clone.applyTransform(transform),clone.getSimplifiedGeometry(squaredTolerance)}))}simplifyTransformed(squaredTolerance,transform){return this.simplifyTransformedInternal(this.getRevision(),squaredTolerance,transform)}clone(){return(0,util.b0)()}closestPointXY(x,y,closestPoint,minSquaredDistance){return(0,util.b0)()}containsXY(x,y){const coord=this.getClosestPoint([x,y]);return coord[0]===x&&coord[1]===y}getClosestPoint(point,closestPoint){return closestPoint=closestPoint||[NaN,NaN],this.closestPointXY(point[0],point[1],closestPoint,1/0),closestPoint}intersectsCoordinate(coordinate){return this.containsXY(coordinate[0],coordinate[1])}computeExtent(extent){return(0,util.b0)()}getExtent(extent){if(this.extentRevision_!=this.getRevision()){const extent=this.computeExtent(this.extent_);(isNaN(extent[0])||isNaN(extent[1]))&&(0,ol_extent.aZ)(extent),this.extentRevision_=this.getRevision()}return(0,ol_extent.$u)(this.extent_,extent)}rotate(angle,anchor){(0,util.b0)()}scale(sx,sy,anchor){(0,util.b0)()}simplify(tolerance){return this.getSimplifiedGeometry(tolerance*tolerance)}getSimplifiedGeometry(squaredTolerance){return(0,util.b0)()}getType(){return(0,util.b0)()}applyTransform(transformFn){(0,util.b0)()}intersectsExtent(extent){return(0,util.b0)()}translate(deltaX,deltaY){(0,util.b0)()}transform(source,destination){const sourceProj=(0,proj.Jt)(source),transformFn="tile-pixels"==sourceProj.getUnits()?function(inCoordinates,outCoordinates,stride){const pixelExtent=sourceProj.getExtent(),projectedExtent=sourceProj.getWorldExtent(),scale=(0,ol_extent.Oq)(projectedExtent)/(0,ol_extent.Oq)(pixelExtent);return compose(tmpTransform,projectedExtent[0],projectedExtent[3],scale,-scale,0,0,0),(0,transform.Rc)(inCoordinates,0,inCoordinates.length,stride,tmpTransform,outCoordinates),(0,proj.RG)(sourceProj,destination)(inCoordinates,outCoordinates,stride)}:(0,proj.RG)(sourceProj,destination);return this.applyTransform(transformFn),this}}var geom_Geometry=Geometry},"../../node_modules/ol/geom/flat/transform.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function transform2D(flatCoordinates,offset,end,stride,transform,dest){dest=dest||[];let i=0;for(let j=offset;j<end;j+=stride){const x=flatCoordinates[j],y=flatCoordinates[j+1];dest[i++]=transform[0]*x+transform[2]*y+transform[4],dest[i++]=transform[1]*x+transform[3]*y+transform[5]}return dest&&dest.length!=i&&(dest.length=i),dest}function rotate(flatCoordinates,offset,end,stride,angle,anchor,dest){dest=dest||[];const cos=Math.cos(angle),sin=Math.sin(angle),anchorX=anchor[0],anchorY=anchor[1];let i=0;for(let j=offset;j<end;j+=stride){const deltaX=flatCoordinates[j]-anchorX,deltaY=flatCoordinates[j+1]-anchorY;dest[i++]=anchorX+deltaX*cos-deltaY*sin,dest[i++]=anchorY+deltaX*sin+deltaY*cos;for(let k=j+2;k<j+stride;++k)dest[i++]=flatCoordinates[k]}return dest&&dest.length!=i&&(dest.length=i),dest}function scale(flatCoordinates,offset,end,stride,sx,sy,anchor,dest){dest=dest||[];const anchorX=anchor[0],anchorY=anchor[1];let i=0;for(let j=offset;j<end;j+=stride){const deltaX=flatCoordinates[j]-anchorX,deltaY=flatCoordinates[j+1]-anchorY;dest[i++]=anchorX+sx*deltaX,dest[i++]=anchorY+sy*deltaY;for(let k=j+2;k<j+stride;++k)dest[i++]=flatCoordinates[k]}return dest&&dest.length!=i&&(dest.length=i),dest}function translate(flatCoordinates,offset,end,stride,deltaX,deltaY,dest){dest=dest||[];let i=0;for(let j=offset;j<end;j+=stride){dest[i++]=flatCoordinates[j]+deltaX,dest[i++]=flatCoordinates[j+1]+deltaY;for(let k=j+2;k<j+stride;++k)dest[i++]=flatCoordinates[k]}return dest&&dest.length!=i&&(dest.length=i),dest}__webpack_require__.d(__webpack_exports__,{Rc:function(){return transform2D},Tl:function(){return translate},e$:function(){return rotate},hs:function(){return scale}})},"../../node_modules/ol/obj.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function clear(object){for(const property in object)delete object[property]}function isEmpty(object){let property;for(property in object)return!1;return!property}__webpack_require__.d(__webpack_exports__,{I:function(){return clear},p:function(){return isEmpty}})},"../../node_modules/ol/proj.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{tI:function(){return equivalent},Jt:function(){return proj_get},RG:function(){return getTransform}});const Units_METERS_PER_UNIT={radians:6370997/(2*Math.PI),degrees:2*Math.PI*6370997/360,ft:.3048,m:1,"us-ft":1200/3937};var proj_Projection=class Projection{constructor(options){this.code_=options.code,this.units_=options.units,this.extent_=void 0!==options.extent?options.extent:null,this.worldExtent_=void 0!==options.worldExtent?options.worldExtent:null,this.axisOrientation_=void 0!==options.axisOrientation?options.axisOrientation:"enu",this.global_=void 0!==options.global&&options.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=options.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=options.metersPerUnit}canWrapX(){return this.canWrapX_}getCode(){return this.code_}getExtent(){return this.extent_}getUnits(){return this.units_}getMetersPerUnit(){return this.metersPerUnit_||Units_METERS_PER_UNIT[this.units_]}getWorldExtent(){return this.worldExtent_}getAxisOrientation(){return this.axisOrientation_}isGlobal(){return this.global_}setGlobal(global){this.global_=global,this.canWrapX_=!(!global||!this.extent_)}getDefaultTileGrid(){return this.defaultTileGrid_}setDefaultTileGrid(tileGrid){this.defaultTileGrid_=tileGrid}setExtent(extent){this.extent_=extent,this.canWrapX_=!(!this.global_||!extent)}setWorldExtent(worldExtent){this.worldExtent_=worldExtent}setGetPointResolution(func){this.getPointResolutionFunc_=func}getPointResolutionFunc(){return this.getPointResolutionFunc_}};const RADIUS=6378137,HALF_SIZE=Math.PI*RADIUS,EXTENT=[-HALF_SIZE,-HALF_SIZE,HALF_SIZE,HALF_SIZE],WORLD_EXTENT=[-180,-85,180,85],MAX_SAFE_Y=RADIUS*Math.log(Math.tan(Math.PI/2));class EPSG3857Projection extends proj_Projection{constructor(code){super({code:code,units:"m",extent:EXTENT,global:!0,worldExtent:WORLD_EXTENT,getPointResolution:function(resolution,point){return resolution/Math.cosh(point[1]/RADIUS)}})}}const PROJECTIONS=[new EPSG3857Projection("EPSG:3857"),new EPSG3857Projection("EPSG:102100"),new EPSG3857Projection("EPSG:102113"),new EPSG3857Projection("EPSG:900913"),new EPSG3857Projection("http://www.opengis.net/def/crs/EPSG/0/3857"),new EPSG3857Projection("http://www.opengis.net/gml/srs/epsg.xml#3857")];function fromEPSG4326(input,output,dimension){const length=input.length;dimension=dimension>1?dimension:2,void 0===output&&(output=dimension>2?input.slice():new Array(length));for(let i=0;i<length;i+=dimension){output[i]=HALF_SIZE*input[i]/180;let y=RADIUS*Math.log(Math.tan(Math.PI*(+input[i+1]+90)/360));y>MAX_SAFE_Y?y=MAX_SAFE_Y:y<-MAX_SAFE_Y&&(y=-MAX_SAFE_Y),output[i+1]=y}return output}function toEPSG4326(input,output,dimension){const length=input.length;dimension=dimension>1?dimension:2,void 0===output&&(output=dimension>2?input.slice():new Array(length));for(let i=0;i<length;i+=dimension)output[i]=180*input[i]/HALF_SIZE,output[i+1]=360*Math.atan(Math.exp(input[i+1]/RADIUS))/Math.PI-90;return output}const epsg4326_EXTENT=[-180,-90,180,90],epsg4326_METERS_PER_UNIT=6378137*Math.PI/180;class EPSG4326Projection extends proj_Projection{constructor(code,axisOrientation){super({code:code,units:"degrees",extent:epsg4326_EXTENT,axisOrientation:axisOrientation,global:!0,metersPerUnit:epsg4326_METERS_PER_UNIT,worldExtent:epsg4326_EXTENT})}}const epsg4326_PROJECTIONS=[new EPSG4326Projection("CRS:84"),new EPSG4326Projection("EPSG:4326","neu"),new EPSG4326Projection("urn:ogc:def:crs:OGC:1.3:CRS84"),new EPSG4326Projection("urn:ogc:def:crs:OGC:2:84"),new EPSG4326Projection("http://www.opengis.net/def/crs/OGC/1.3/CRS84"),new EPSG4326Projection("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new EPSG4326Projection("http://www.opengis.net/def/crs/EPSG/0/4326","neu")];let cache={};let transforms={};function transforms_add(source,destination,transformFn){const sourceCode=source.getCode(),destinationCode=destination.getCode();sourceCode in transforms||(transforms[sourceCode]={}),transforms[sourceCode][destinationCode]=transformFn}function cloneTransform(input,output){if(void 0!==output)for(let i=0,ii=input.length;i<ii;++i)output[i]=input[i];else output=input.slice();return output}function identityTransform(input,output){if(void 0!==output&&input!==output){for(let i=0,ii=input.length;i<ii;++i)output[i]=input[i];input=output}return input}function addProjection(projection){!function add(code,projection){cache[code]=projection}(projection.getCode(),projection),transforms_add(projection,projection,cloneTransform)}function proj_get(projectionLike){return"string"==typeof projectionLike?function get(code){return cache[code]||cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/,"EPSG:$3")]||null}(projectionLike):projectionLike||null}function addEquivalentProjections(projections){!function addProjections(projections){projections.forEach(addProjection)}(projections),projections.forEach((function(source){projections.forEach((function(destination){source!==destination&&transforms_add(source,destination,cloneTransform)}))}))}function equivalent(projection1,projection2){if(projection1===projection2)return!0;const equalUnits=projection1.getUnits()===projection2.getUnits();if(projection1.getCode()===projection2.getCode())return equalUnits;return getTransformFromProjections(projection1,projection2)===cloneTransform&&equalUnits}function getTransformFromProjections(sourceProjection,destinationProjection){let transformFunc=function transforms_get(sourceCode,destinationCode){let transform;return sourceCode in transforms&&destinationCode in transforms[sourceCode]&&(transform=transforms[sourceCode][destinationCode]),transform}(sourceProjection.getCode(),destinationProjection.getCode());return transformFunc||(transformFunc=identityTransform),transformFunc}function getTransform(source,destination){return getTransformFromProjections(proj_get(source),proj_get(destination))}!function addCommon(){addEquivalentProjections(PROJECTIONS),addEquivalentProjections(epsg4326_PROJECTIONS),function addEquivalentTransforms(projections1,projections2,forwardTransform,inverseTransform){projections1.forEach((function(projection1){projections2.forEach((function(projection2){transforms_add(projection1,projection2,forwardTransform),transforms_add(projection2,projection1,inverseTransform)}))}))}(epsg4326_PROJECTIONS,PROJECTIONS,fromEPSG4326,toEPSG4326)}()},"../../node_modules/ol/util.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function abstract(){throw new Error("Unimplemented abstract method.")}__webpack_require__.d(__webpack_exports__,{b0:function(){return abstract},v6:function(){return getUid}});let uidCounter_=0;function getUid(obj){return obj.ol_uid||(obj.ol_uid=String(++uidCounter_))}},"../../node_modules/react-use/esm/misc/util.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{AU:function(){return off},Bd:function(){return isBrowser},lQ:function(){return noop},on:function(){return on}});var noop=function(){};function on(obj){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];obj&&obj.addEventListener&&obj.addEventListener.apply(obj,args)}function off(obj){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];obj&&obj.removeEventListener&&obj.removeEventListener.apply(obj,args)}var isBrowser="undefined"!=typeof window},"../../node_modules/react-use/esm/useAsync.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return useAsync}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_useAsyncFn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react-use/esm/useAsyncFn.js");function useAsync(fn,deps){void 0===deps&&(deps=[]);var _a=(0,_useAsyncFn__WEBPACK_IMPORTED_MODULE_1__.A)(fn,deps,{loading:!0}),state=_a[0],callback=_a[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){callback()}),[callback]),state}},"../../node_modules/react-use/esm/useAsyncFn.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return useAsyncFn}});var tslib_es6=__webpack_require__("../../node_modules/tslib/tslib.es6.mjs"),react=__webpack_require__("../../node_modules/react/index.js");function useAsyncFn(fn,deps,initialState){void 0===deps&&(deps=[]),void 0===initialState&&(initialState={loading:!1});var lastCallId=(0,react.useRef)(0),isMounted=function useMountedState(){var mountedRef=(0,react.useRef)(!1),get=(0,react.useCallback)((function(){return mountedRef.current}),[]);return(0,react.useEffect)((function(){return mountedRef.current=!0,function(){mountedRef.current=!1}}),[]),get}(),_a=(0,react.useState)(initialState),state=_a[0],set=_a[1],callback=(0,react.useCallback)((function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var callId=++lastCallId.current;return state.loading||set((function(prevState){return(0,tslib_es6.__assign)((0,tslib_es6.__assign)({},prevState),{loading:!0})})),fn.apply(void 0,args).then((function(value){return isMounted()&&callId===lastCallId.current&&set({value:value,loading:!1}),value}),(function(error){return isMounted()&&callId===lastCallId.current&&set({error:error,loading:!1}),error}))}),deps);return[state,callback]}},"../../node_modules/react-use/esm/useClickAway.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react-use/esm/misc/util.js"),defaultEvents=["mousedown","touchstart"];__webpack_exports__.A=function(ref,onClickAway,events){void 0===events&&(events=defaultEvents);var savedCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(onClickAway);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){savedCallback.current=onClickAway}),[onClickAway]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){for(var handler=function(event){var el=ref.current;el&&!el.contains(event.target)&&savedCallback.current(event)},_i=0,events_1=events;_i<events_1.length;_i++){var eventName=events_1[_i];(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.on)(document,eventName,handler)}return function(){for(var _i=0,events_2=events;_i<events_2.length;_i++){var eventName=events_2[_i];(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.AU)(document,eventName,handler)}}}),[events,ref])}},"../../node_modules/react-use/esm/useEffectOnce.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");__webpack_exports__.A=function(effect){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,[])}},"../../node_modules/rxjs/dist/esm5/internal/Observable.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{c:function(){return Observable}});var Subscriber=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/Subscriber.js"),Subscription=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/Subscription.js"),observable="function"==typeof Symbol&&Symbol.observable||"@@observable";function identity(x){return x}function pipeFromArray(fns){return 0===fns.length?identity:1===fns.length?fns[0]:function piped(input){return fns.reduce((function(prev,fn){return fn(prev)}),input)}}var config=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/config.js"),isFunction=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/util/isFunction.js"),errorContext=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/util/errorContext.js"),Observable=function(){function Observable(subscribe){subscribe&&(this._subscribe=subscribe)}return Observable.prototype.lift=function(operator){var observable=new Observable;return observable.source=this,observable.operator=operator,observable},Observable.prototype.subscribe=function(observerOrNext,error,complete){var _this=this,subscriber=function isSubscriber(value){return value&&value instanceof Subscriber.vU||function isObserver(value){return value&&(0,isFunction.T)(value.next)&&(0,isFunction.T)(value.error)&&(0,isFunction.T)(value.complete)}(value)&&(0,Subscription.Uv)(value)}(observerOrNext)?observerOrNext:new Subscriber.Ms(observerOrNext,error,complete);return(0,errorContext.Y)((function(){var _a=_this,operator=_a.operator,source=_a.source;subscriber.add(operator?operator.call(subscriber,source):source?_this._subscribe(subscriber):_this._trySubscribe(subscriber))})),subscriber},Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){sink.error(err)}},Observable.prototype.forEach=function(next,promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var subscriber=new Subscriber.Ms({next:function(value){try{next(value)}catch(err){reject(err),subscriber.unsubscribe()}},error:reject,complete:resolve});_this.subscribe(subscriber)}))},Observable.prototype._subscribe=function(subscriber){var _a;return null===(_a=this.source)||void 0===_a?void 0:_a.subscribe(subscriber)},Observable.prototype[observable]=function(){return this},Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++)operations[_i]=arguments[_i];return pipeFromArray(operations)(this)},Observable.prototype.toPromise=function(promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var value;_this.subscribe((function(x){return value=x}),(function(err){return reject(err)}),(function(){return resolve(value)}))}))},Observable.create=function(subscribe){return new Observable(subscribe)},Observable}();function getPromiseCtor(promiseCtor){var _a;return null!==(_a=null!=promiseCtor?promiseCtor:config.$.Promise)&&void 0!==_a?_a:Promise}},"../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{B:function(){return debounceTime}});var tslib_es6=__webpack_require__("../../node_modules/tslib/tslib.es6.mjs"),Action=function(_super){function Action(scheduler,work){return _super.call(this)||this}return(0,tslib_es6.__extends)(Action,_super),Action.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),this},Action}(__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/Subscription.js").yU),intervalProvider={setInterval:function(handler,timeout){for(var args=[],_i=2;_i<arguments.length;_i++)args[_i-2]=arguments[_i];var delegate=intervalProvider.delegate;return(null==delegate?void 0:delegate.setInterval)?delegate.setInterval.apply(delegate,(0,tslib_es6.__spreadArray)([handler,timeout],(0,tslib_es6.__read)(args))):setInterval.apply(void 0,(0,tslib_es6.__spreadArray)([handler,timeout],(0,tslib_es6.__read)(args)))},clearInterval:function(handle){var delegate=intervalProvider.delegate;return((null==delegate?void 0:delegate.clearInterval)||clearInterval)(handle)},delegate:void 0},arrRemove=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"),AsyncAction=function(_super){function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this.pending=!1,_this}return(0,tslib_es6.__extends)(AsyncAction,_super),AsyncAction.prototype.schedule=function(state,delay){var _a;if(void 0===delay&&(delay=0),this.closed)return this;this.state=state;var id=this.id,scheduler=this.scheduler;return null!=id&&(this.id=this.recycleAsyncId(scheduler,id,delay)),this.pending=!0,this.delay=delay,this.id=null!==(_a=this.id)&&void 0!==_a?_a:this.requestAsyncId(scheduler,this.id,delay),this},AsyncAction.prototype.requestAsyncId=function(scheduler,_id,delay){return void 0===delay&&(delay=0),intervalProvider.setInterval(scheduler.flush.bind(scheduler,this),delay)},AsyncAction.prototype.recycleAsyncId=function(_scheduler,id,delay){if(void 0===delay&&(delay=0),null!=delay&&this.delay===delay&&!1===this.pending)return id;null!=id&&intervalProvider.clearInterval(id)},AsyncAction.prototype.execute=function(state,delay){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var error=this._execute(state,delay);if(error)return error;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},AsyncAction.prototype._execute=function(state,_delay){var errorValue,errored=!1;try{this.work(state)}catch(e){errored=!0,errorValue=e||new Error("Scheduled action threw falsy error")}if(errored)return this.unsubscribe(),errorValue},AsyncAction.prototype.unsubscribe=function(){if(!this.closed){var id=this.id,scheduler=this.scheduler,actions=scheduler.actions;this.work=this.state=this.scheduler=null,this.pending=!1,(0,arrRemove.o)(actions,this),null!=id&&(this.id=this.recycleAsyncId(scheduler,id,null)),this.delay=null,_super.prototype.unsubscribe.call(this)}},AsyncAction}(Action),dateTimestampProvider={now:function(){return(dateTimestampProvider.delegate||Date).now()},delegate:void 0},Scheduler=function(){function Scheduler(schedulerActionCtor,now){void 0===now&&(now=Scheduler.now),this.schedulerActionCtor=schedulerActionCtor,this.now=now}return Scheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),new this.schedulerActionCtor(this,work).schedule(state,delay)},Scheduler.now=dateTimestampProvider.now,Scheduler}(),asyncScheduler=new(function(_super){function AsyncScheduler(SchedulerAction,now){void 0===now&&(now=Scheduler.now);var _this=_super.call(this,SchedulerAction,now)||this;return _this.actions=[],_this._active=!1,_this}return(0,tslib_es6.__extends)(AsyncScheduler,_super),AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this._active)actions.push(action);else{var error;this._active=!0;do{if(error=action.execute(action.state,action.delay))break}while(action=actions.shift());if(this._active=!1,error){for(;action=actions.shift();)action.unsubscribe();throw error}}},AsyncScheduler}(Scheduler))(AsyncAction),lift=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=asyncScheduler),(0,lift.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}},"../../node_modules/rxjs/dist/esm5/internal/operators/filter.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{p:function(){return filter}});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function filter(predicate,thisArg){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var index=0;source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,(function(value){return predicate.call(thisArg,value,index++)&&subscriber.next(value)})))}))}}}]);