/*! For license information please see 5856.e2ce0ac0.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[5856],{"../../node_modules/exenv/index.js":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement),ExecutionEnvironment={canUseDOM:canUseDOM,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:canUseDOM&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:canUseDOM&&!!window.screen};void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return ExecutionEnvironment}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"../../node_modules/react-inlinesvg/esm/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return esm}});var react=__webpack_require__("../../node_modules/react/index.js"),__read=function(o,n){var m="function"==typeof Symbol&&o[Symbol.iterator];if(!m)return o;var r,e,i=m.call(o),ar=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)ar.push(r.value)}catch(error){e={error:error}}finally{try{r&&!r.done&&(m=i.return)&&m.call(i)}finally{if(e)throw e.error}}return ar},styleToObject=function(input){return input.split(/ ?; ?/).reduce((function(acc,d){var _a=__read(d.split(/ ?: ?/),2),key=_a[0],value=_a[1];return key&&value&&(acc[key.replace(/-(\w)/g,(function(_$0,$1){return $1.toUpperCase()}))]=Number.isNaN(Number(value))?value:Number(value)),acc}),{})};var noTextChildNodes=["br","col","colgroup","dl","hr","iframe","img","input","link","menuitem","meta","ol","param","select","table","tbody","tfoot","thead","tr","ul","wbr"],possibleStandardNames={"accept-charset":"acceptCharset",acceptcharset:"acceptCharset",accesskey:"accessKey",allowfullscreen:"allowFullScreen",autocapitalize:"autoCapitalize",autocomplete:"autoComplete",autocorrect:"autoCorrect",autofocus:"autoFocus",autoplay:"autoPlay",autosave:"autoSave",cellpadding:"cellPadding",cellspacing:"cellSpacing",charset:"charSet",class:"className",classid:"classID",classname:"className",colspan:"colSpan",contenteditable:"contentEditable",contextmenu:"contextMenu",controlslist:"controlsList",crossorigin:"crossOrigin",dangerouslysetinnerhtml:"dangerouslySetInnerHTML",datetime:"dateTime",defaultchecked:"defaultChecked",defaultvalue:"defaultValue",enctype:"encType",for:"htmlFor",formmethod:"formMethod",formaction:"formAction",formenctype:"formEncType",formnovalidate:"formNoValidate",formtarget:"formTarget",frameborder:"frameBorder",hreflang:"hrefLang",htmlfor:"htmlFor",httpequiv:"httpEquiv","http-equiv":"httpEquiv",icon:"icon",innerhtml:"innerHTML",inputmode:"inputMode",itemid:"itemID",itemprop:"itemProp",itemref:"itemRef",itemscope:"itemScope",itemtype:"itemType",keyparams:"keyParams",keytype:"keyType",marginwidth:"marginWidth",marginheight:"marginHeight",maxlength:"maxLength",mediagroup:"mediaGroup",minlength:"minLength",nomodule:"noModule",novalidate:"noValidate",playsinline:"playsInline",radiogroup:"radioGroup",readonly:"readOnly",referrerpolicy:"referrerPolicy",rowspan:"rowSpan",spellcheck:"spellCheck",srcdoc:"srcDoc",srclang:"srcLang",srcset:"srcSet",tabindex:"tabIndex",typemustmatch:"typeMustMatch",usemap:"useMap",accentheight:"accentHeight","accent-height":"accentHeight",alignmentbaseline:"alignmentBaseline","alignment-baseline":"alignmentBaseline",allowreorder:"allowReorder",arabicform:"arabicForm","arabic-form":"arabicForm",attributename:"attributeName",attributetype:"attributeType",autoreverse:"autoReverse",basefrequency:"baseFrequency",baselineshift:"baselineShift","baseline-shift":"baselineShift",baseprofile:"baseProfile",calcmode:"calcMode",capheight:"capHeight","cap-height":"capHeight",clippath:"clipPath","clip-path":"clipPath",clippathunits:"clipPathUnits",cliprule:"clipRule","clip-rule":"clipRule",colorinterpolation:"colorInterpolation","color-interpolation":"colorInterpolation",colorinterpolationfilters:"colorInterpolationFilters","color-interpolation-filters":"colorInterpolationFilters",colorprofile:"colorProfile","color-profile":"colorProfile",colorrendering:"colorRendering","color-rendering":"colorRendering",contentscripttype:"contentScriptType",contentstyletype:"contentStyleType",diffuseconstant:"diffuseConstant",dominantbaseline:"dominantBaseline","dominant-baseline":"dominantBaseline",edgemode:"edgeMode",enablebackground:"enableBackground","enable-background":"enableBackground",externalresourcesrequired:"externalResourcesRequired",fillopacity:"fillOpacity","fill-opacity":"fillOpacity",fillrule:"fillRule","fill-rule":"fillRule",filterres:"filterRes",filterunits:"filterUnits",floodopacity:"floodOpacity","flood-opacity":"floodOpacity",floodcolor:"floodColor","flood-color":"floodColor",fontfamily:"fontFamily","font-family":"fontFamily",fontsize:"fontSize","font-size":"fontSize",fontsizeadjust:"fontSizeAdjust","font-size-adjust":"fontSizeAdjust",fontstretch:"fontStretch","font-stretch":"fontStretch",fontstyle:"fontStyle","font-style":"fontStyle",fontvariant:"fontVariant","font-variant":"fontVariant",fontweight:"fontWeight","font-weight":"fontWeight",glyphname:"glyphName","glyph-name":"glyphName",glyphorientationhorizontal:"glyphOrientationHorizontal","glyph-orientation-horizontal":"glyphOrientationHorizontal",glyphorientationvertical:"glyphOrientationVertical","glyph-orientation-vertical":"glyphOrientationVertical",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",horizadvx:"horizAdvX","horiz-adv-x":"horizAdvX",horizoriginx:"horizOriginX","horiz-origin-x":"horizOriginX",imagerendering:"imageRendering","image-rendering":"imageRendering",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",letterspacing:"letterSpacing","letter-spacing":"letterSpacing",lightingcolor:"lightingColor","lighting-color":"lightingColor",limitingconeangle:"limitingConeAngle",markerend:"markerEnd","marker-end":"markerEnd",markerheight:"markerHeight",markermid:"markerMid","marker-mid":"markerMid",markerstart:"markerStart","marker-start":"markerStart",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",overlineposition:"overlinePosition","overline-position":"overlinePosition",overlinethickness:"overlineThickness","overline-thickness":"overlineThickness",paintorder:"paintOrder","paint-order":"paintOrder","panose-1":"panose1",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointerevents:"pointerEvents","pointer-events":"pointerEvents",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",renderingintent:"renderingIntent","rendering-intent":"renderingIntent",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",shaperendering:"shapeRendering","shape-rendering":"shapeRendering",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",stopcolor:"stopColor","stop-color":"stopColor",stopopacity:"stopOpacity","stop-opacity":"stopOpacity",strikethroughposition:"strikethroughPosition","strikethrough-position":"strikethroughPosition",strikethroughthickness:"strikethroughThickness","strikethrough-thickness":"strikethroughThickness",strokedasharray:"strokeDasharray","stroke-dasharray":"strokeDasharray",strokedashoffset:"strokeDashoffset","stroke-dashoffset":"strokeDashoffset",strokelinecap:"strokeLinecap","stroke-linecap":"strokeLinecap",strokelinejoin:"strokeLinejoin","stroke-linejoin":"strokeLinejoin",strokemiterlimit:"strokeMiterlimit","stroke-miterlimit":"strokeMiterlimit",strokewidth:"strokeWidth","stroke-width":"strokeWidth",strokeopacity:"strokeOpacity","stroke-opacity":"strokeOpacity",suppresscontenteditablewarning:"suppressContentEditableWarning",suppresshydrationwarning:"suppressHydrationWarning",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textanchor:"textAnchor","text-anchor":"textAnchor",textdecoration:"textDecoration","text-decoration":"textDecoration",textlength:"textLength",textrendering:"textRendering","text-rendering":"textRendering",underlineposition:"underlinePosition","underline-position":"underlinePosition",underlinethickness:"underlineThickness","underline-thickness":"underlineThickness",unicodebidi:"unicodeBidi","unicode-bidi":"unicodeBidi",unicoderange:"unicodeRange","unicode-range":"unicodeRange",unitsperem:"unitsPerEm","units-per-em":"unitsPerEm",unselectable:"unselectable",valphabetic:"vAlphabetic","v-alphabetic":"vAlphabetic",vectoreffect:"vectorEffect","vector-effect":"vectorEffect",vertadvy:"vertAdvY","vert-adv-y":"vertAdvY",vertoriginx:"vertOriginX","vert-origin-x":"vertOriginX",vertoriginy:"vertOriginY","vert-origin-y":"vertOriginY",vhanging:"vHanging","v-hanging":"vHanging",videographic:"vIdeographic","v-ideographic":"vIdeographic",viewbox:"viewBox",viewtarget:"viewTarget",vmathematical:"vMathematical","v-mathematical":"vMathematical",wordspacing:"wordSpacing","word-spacing":"wordSpacing",writingmode:"writingMode","writing-mode":"writingMode",xchannelselector:"xChannelSelector",xheight:"xHeight","x-height":"xHeight",xlinkactuate:"xlinkActuate","xlink:actuate":"xlinkActuate",xlinkarcrole:"xlinkArcrole","xlink:arcrole":"xlinkArcrole",xlinkhref:"xlinkHref","xlink:href":"xlinkHref",xlinkrole:"xlinkRole","xlink:role":"xlinkRole",xlinkshow:"xlinkShow","xlink:show":"xlinkShow",xlinktitle:"xlinkTitle","xlink:title":"xlinkTitle",xlinktype:"xlinkType","xlink:type":"xlinkType",xmlbase:"xmlBase","xml:base":"xmlBase",xmllang:"xmlLang","xml:lang":"xmlLang","xml:space":"xmlSpace",xmlnsxlink:"xmlnsXlink","xmlns:xlink":"xmlnsXlink",xmlspace:"xmlSpace",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan",onblur:"onBlur",onchange:"onChange",onclick:"onClick",oncontextmenu:"onContextMenu",ondoubleclick:"onDoubleClick",ondrag:"onDrag",ondragend:"onDragEnd",ondragenter:"onDragEnter",ondragexit:"onDragExit",ondragleave:"onDragLeave",ondragover:"onDragOver",ondragstart:"onDragStart",ondrop:"onDrop",onerror:"onError",onfocus:"onFocus",oninput:"onInput",oninvalid:"onInvalid",onkeydown:"onKeyDown",onkeypress:"onKeyPress",onkeyup:"onKeyUp",onload:"onLoad",onmousedown:"onMouseDown",onmouseenter:"onMouseEnter",onmouseleave:"onMouseLeave",onmousemove:"onMouseMove",onmouseout:"onMouseOut",onmouseover:"onMouseOver",onmouseup:"onMouseUp",onscroll:"onScroll",onsubmit:"onSubmit",ontouchcancel:"onTouchCancel",ontouchend:"onTouchEnd",ontouchmove:"onTouchMove",ontouchstart:"onTouchStart",onwheel:"onWheel"},__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},esm_read=function(o,n){var m="function"==typeof Symbol&&o[Symbol.iterator];if(!m)return o;var r,e,i=m.call(o),ar=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)ar.push(r.value)}catch(error){e={error:error}}finally{try{r&&!r.done&&(m=i.return)&&m.call(i)}finally{if(e)throw e.error}}return ar},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))};function convertFromNode(input,options){var _a;if(void 0===options&&(options={}),!(input&&input instanceof Node))return null;var _b=options.actions,actions=void 0===_b?[]:_b,_c=options.index,index=void 0===_c?0:_c,_d=options.level,level=void 0===_d?0:_d,randomKey=options.randomKey,node=input,key="".concat(level,"-").concat(index),result=[];if(randomKey&&0===level&&(key="".concat(function randomString(length){void 0===length&&(length=6);for(var characters="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",result="",index=length;index>0;--index)result+=characters[Math.round(61*Math.random())];return result}(),"-").concat(key)),Array.isArray(actions)&&actions.forEach((function(action){action.condition(node,key,level)&&("function"==typeof action.pre&&((node=action.pre(node,key,level))instanceof Node||(node=input)),"function"==typeof action.post&&result.push(action.post(node,key,level)))})),result.length)return result;switch(node.nodeType){case 1:return react.createElement(function parseName(nodeName){return/[a-z]+[A-Z]+[a-z]+/.test(nodeName)?nodeName:nodeName.toLowerCase()}(node.nodeName),function parseAttributes(node,reactKey){var attributes={key:reactKey};if(node instanceof Element){var nodeClassNames=node.getAttribute("class");nodeClassNames&&(attributes.className=nodeClassNames),__spreadArray([],esm_read(node.attributes),!1).forEach((function(d){switch(d.name){case"class":break;case"style":attributes[d.name]=styleToObject(d.value);break;case"allowfullscreen":case"allowpaymentrequest":case"async":case"autofocus":case"autoplay":case"checked":case"controls":case"default":case"defer":case"disabled":case"formnovalidate":case"hidden":case"ismap":case"itemscope":case"loop":case"multiple":case"muted":case"nomodule":case"novalidate":case"open":case"readonly":case"required":case"reversed":case"selected":case"typemustmatch":attributes[possibleStandardNames[d.name]||d.name]=!0;break;default:attributes[possibleStandardNames[d.name]||d.name]=d.value}}))}return attributes}(node,key),function parseChildren(childNodeList,level,options){var children=__spreadArray([],esm_read(childNodeList),!1).map((function(node,index){return convertFromNode(node,__assign(__assign({},options),{index:index,level:level+1}))})).filter(Boolean);return children.length?children:null}(node.childNodes,level,options));case 3:var nodeText=(null===(_a=node.nodeValue)||void 0===_a?void 0:_a.toString())||"";if(/^\s+$/.test(nodeText)&&!/[\u00A0\u202F]/.test(nodeText))return null;if(!node.parentNode)return nodeText;var parentNodeName=node.parentNode.nodeName.toLowerCase();return noTextChildNodes.includes(parentNodeName)?(/\S/.test(nodeText)&&console.warn("A textNode is not allowed inside '".concat(parentNodeName,"'. Your text \"").concat(nodeText,'" will be ignored')),null):nodeText;default:return null}}function convert(input,options){return void 0===options&&(options={}),"string"==typeof input?function convertFromString(input,options){if(void 0===options&&(options={}),!input||"string"!=typeof input)return null;var _a=options.nodeOnly,nodeOnly=void 0!==_a&&_a,_b=options.selector,selector=void 0===_b?"body > *":_b,_c=options.type,type=void 0===_c?"text/html":_c;try{var node=(new DOMParser).parseFromString(input,type).querySelector(selector);if(!(node instanceof Node))throw new TypeError("Error parsing input");return nodeOnly?node:convertFromNode(node,options)}catch(error){}return null}(input,options):input instanceof Node?convertFromNode(input,options):null}var exenv=__webpack_require__("../../node_modules/exenv/index.js"),STATUS={FAILED:"failed",LOADED:"loaded",LOADING:"loading",PENDING:"pending",READY:"ready",UNSUPPORTED:"unsupported"};function canUseDOM(){return exenv.canUseDOM}function isSupportedEnvironment(){return function supportsInlineSVG(){if(!document)return!1;var div=document.createElement("div");div.innerHTML="<svg />";var svg=div.firstChild;return!!svg&&"http://www.w3.org/2000/svg"===svg.namespaceURI}()&&"undefined"!=typeof window&&null!==window}var extendStatics,__extends=(extendStatics=function(d,b){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])},extendStatics(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),esm_assign=function(){return esm_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},esm_assign.apply(this,arguments)},react_inlinesvg_esm_read=function(o,n){var m="function"==typeof Symbol&&o[Symbol.iterator];if(!m)return o;var r,e,i=m.call(o),ar=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)ar.push(r.value)}catch(error){e={error:error}}finally{try{r&&!r.done&&(m=i.return)&&m.call(i)}finally{if(e)throw e.error}}return ar},esm_spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},cacheStore=Object.create(null),InlineSVG=function(_super){function InlineSVG(props){var _this=_super.call(this,props)||this;return Object.defineProperty(_this,"isInitialized",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(_this,"isActive",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(_this,"hash",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(_this,"handleLoad",{enumerable:!0,configurable:!0,writable:!0,value:function(content,hasCache){void 0===hasCache&&(hasCache=!1),_this.isActive&&_this.setState({content:content,hasCache:hasCache,status:STATUS.LOADED},_this.getElement)}}),Object.defineProperty(_this,"handleError",{enumerable:!0,configurable:!0,writable:!0,value:function(error){var onError=_this.props.onError,status="Browser does not support SVG"===error.message?STATUS.UNSUPPORTED:STATUS.FAILED;_this.isActive&&_this.setState({status:status},(function(){"function"==typeof onError&&onError(error)}))}}),Object.defineProperty(_this,"request",{enumerable:!0,configurable:!0,writable:!0,value:function(){var _a=_this.props,cacheRequests=_a.cacheRequests,fetchOptions=_a.fetchOptions,src=_a.src;try{return cacheRequests&&(cacheStore[src]={content:"",status:STATUS.LOADING}),fetch(src,fetchOptions).then((function(response){var contentType=response.headers.get("content-type"),fileType=react_inlinesvg_esm_read((contentType||"").split(/ ?; ?/),1)[0];if(response.status>299)throw new Error("Not found");if(!["image/svg+xml","text/plain"].some((function(d){return fileType.includes(d)})))throw new Error("Content type isn't valid: ".concat(fileType));return response.text()})).then((function(content){var currentSrc=_this.props.src;if(src===currentSrc){if(_this.handleLoad(content),cacheRequests){var cache=cacheStore[src];cache&&(cache.content=content,cache.status=STATUS.LOADED)}}else cacheStore[src].status===STATUS.LOADING&&delete cacheStore[src]})).catch((function(error){(_this.handleError(error),cacheRequests)&&(cacheStore[src]&&delete cacheStore[src])}))}catch(error){return _this.handleError(new Error(error.message))}}}),_this.state={content:"",element:null,hasCache:!!props.cacheRequests&&!!cacheStore[props.src],status:STATUS.PENDING},_this.hash=props.uniqueHash||function helpers_randomString(length){for(var character,letters="abcdefghijklmnopqrstuvwxyz",charset="".concat(letters).concat(letters.toUpperCase()).concat("1234567890"),R="",index=0;index<length;index++)R+=(character=charset)[Math.floor(Math.random()*character.length)];return R}(8),_this}return __extends(InlineSVG,_super),Object.defineProperty(InlineSVG.prototype,"componentDidMount",{enumerable:!1,configurable:!0,writable:!0,value:function(){if(this.isActive=!0,canUseDOM()&&!this.isInitialized){var status=this.state.status,src=this.props.src;try{if(status===STATUS.PENDING){if(!isSupportedEnvironment())throw new Error("Browser does not support SVG");if(!src)throw new Error("Missing src");this.load()}}catch(error){this.handleError(error)}this.isInitialized=!0}}}),Object.defineProperty(InlineSVG.prototype,"componentDidUpdate",{enumerable:!1,configurable:!0,writable:!0,value:function(previousProps,previousState){if(canUseDOM()){var _a=this.state,hasCache=_a.hasCache,status=_a.status,_b=this.props,onLoad=_b.onLoad,src=_b.src;if(previousState.status!==STATUS.READY&&status===STATUS.READY&&onLoad&&onLoad(src,hasCache),previousProps.src!==src){if(!src)return void this.handleError(new Error("Missing src"));this.load()}}}}),Object.defineProperty(InlineSVG.prototype,"componentWillUnmount",{enumerable:!1,configurable:!0,writable:!0,value:function(){this.isActive=!1}}),Object.defineProperty(InlineSVG.prototype,"getNode",{enumerable:!1,configurable:!0,writable:!0,value:function(){var _a=this.props,description=_a.description,title=_a.title;try{var node=convert(this.processSVG(),{nodeOnly:!0});if(!(node&&node instanceof SVGSVGElement))throw new Error("Could not convert the src to a DOM Node");var svg=this.updateSVGAttributes(node);if(description){var originalDesc=svg.querySelector("desc");originalDesc&&originalDesc.parentNode&&originalDesc.parentNode.removeChild(originalDesc);var descElement=document.createElementNS("http://www.w3.org/2000/svg","desc");descElement.innerHTML=description,svg.prepend(descElement)}if(void 0!==title){var originalTitle=svg.querySelector("title");if(originalTitle&&originalTitle.parentNode&&originalTitle.parentNode.removeChild(originalTitle),title){var titleElement=document.createElementNS("http://www.w3.org/2000/svg","title");titleElement.innerHTML=title,svg.prepend(titleElement)}}return svg}catch(error){return this.handleError(error)}}}),Object.defineProperty(InlineSVG.prototype,"getElement",{enumerable:!1,configurable:!0,writable:!0,value:function(){try{var element=convert(this.getNode());if(!element||!react.isValidElement(element))throw new Error("Could not convert the src to a React element");this.setState({element:element,status:STATUS.READY})}catch(error){this.handleError(new Error(error.message))}}}),Object.defineProperty(InlineSVG.prototype,"load",{enumerable:!1,configurable:!0,writable:!0,value:function(){var _this=this;this.isActive&&this.setState({content:"",element:null,hasCache:!1,status:STATUS.LOADING},(function(){var _a=_this.props,cacheRequests=_a.cacheRequests,src=_a.src,cache=cacheRequests&&cacheStore[src];if(cache&&cache.status===STATUS.LOADED)_this.handleLoad(cache.content,!0);else{var inlineSrc,dataURI=src.match(/data:image\/svg[^,]*?(;base64)?,(.*)/);dataURI?inlineSrc=dataURI[1]?window.atob(dataURI[2]):decodeURIComponent(dataURI[2]):src.includes("<svg")&&(inlineSrc=src),inlineSrc?_this.handleLoad(inlineSrc):_this.request()}}))}}),Object.defineProperty(InlineSVG.prototype,"updateSVGAttributes",{enumerable:!1,configurable:!0,writable:!0,value:function(node){var _this=this,_a=this.props,_b=_a.baseURL,baseURL=void 0===_b?"":_b,uniquifyIDs=_a.uniquifyIDs,replaceableAttributes=["id","href","xlink:href","xlink:role","xlink:arcrole"],linkAttributes=["href","xlink:href"];return uniquifyIDs?(esm_spreadArray([],react_inlinesvg_esm_read(node.children),!1).map((function(d){if(d.attributes&&d.attributes.length){var attributes_1=Object.values(d.attributes).map((function(a){var attribute=a,match=a.value.match(/url\((.*?)\)/);return match&&match[1]&&(attribute.value=a.value.replace(match[0],"url(".concat(baseURL).concat(match[1],"__").concat(_this.hash,")"))),attribute}));replaceableAttributes.forEach((function(r){var name,value,attribute=attributes_1.find((function(a){return a.name===r}));attribute&&(name=r,value=attribute.value,!linkAttributes.includes(name)||!value||value.includes("#"))&&(attribute.value="".concat(attribute.value,"__").concat(_this.hash))}))}return d.children.length?_this.updateSVGAttributes(d):d})),node):node}}),Object.defineProperty(InlineSVG.prototype,"processSVG",{enumerable:!1,configurable:!0,writable:!0,value:function(){var content=this.state.content,preProcessor=this.props.preProcessor;return preProcessor?preProcessor(content):content}}),Object.defineProperty(InlineSVG.prototype,"render",{enumerable:!1,configurable:!0,writable:!0,value:function(){var _a=this.state,element=_a.element,status=_a.status,_b=this.props,_c=_b.children,children=void 0===_c?null:_c,innerRef=_b.innerRef,_d=_b.loader,loader=void 0===_d?null:_d,elementProps=function omit(input){for(var filter=[],_i=1;_i<arguments.length;_i++)filter[_i-1]=arguments[_i];var output={};for(var key in input)({}).hasOwnProperty.call(input,key)&&(filter.includes(key)||(output[key]=input[key]));return output}(this.props,"baseURL","cacheRequests","children","description","fetchOptions","innerRef","loader","onError","onLoad","preProcessor","src","title","uniqueHash","uniquifyIDs");return canUseDOM()?element?react.cloneElement(element,esm_assign({ref:innerRef},elementProps)):[STATUS.UNSUPPORTED,STATUS.FAILED].includes(status)?children:loader:loader}}),Object.defineProperty(InlineSVG,"defaultProps",{enumerable:!0,configurable:!0,writable:!0,value:{cacheRequests:!0,uniquifyIDs:!1}}),InlineSVG}(react.PureComponent),esm=InlineSVG}}]);