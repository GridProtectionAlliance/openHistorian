"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[183],{"./src/components/Layout/utils/responsiveness.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function breakpointCSS(theme,prop,getCSS,key){var value=prop[key];if(null!=value)return function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({},theme.breakpoints.up(key),getCSS(value))}function getResponsiveStyle(theme,prop,getCSS){return null==prop?null:"object"==typeof prop&&"xs"in prop?[breakpointCSS(theme,prop,getCSS,"xs"),breakpointCSS(theme,prop,getCSS,"sm"),breakpointCSS(theme,prop,getCSS,"md"),breakpointCSS(theme,prop,getCSS,"lg"),breakpointCSS(theme,prop,getCSS,"xl"),breakpointCSS(theme,prop,getCSS,"xxl")]:getCSS(prop)}__webpack_require__.d(__webpack_exports__,{Y:function(){return getResponsiveStyle}});try{getResponsiveStyle.displayName="getResponsiveStyle",getResponsiveStyle.__docgenInfo={description:"Function that converts a ResponsiveProp object into CSS",displayName:"getResponsiveStyle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Layout/utils/responsiveness.tsx#getResponsiveStyle"]={docgenInfo:getResponsiveStyle.__docgenInfo,name:"getResponsiveStyle",path:"src/components/Layout/utils/responsiveness.tsx#getResponsiveStyle"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Layout/Grid/Grid.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColumnsMinWidth:function(){return ColumnsMinWidth},ColumnsNumber:function(){return ColumnsNumber},default:function(){return Grid_story}});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),ThemeContext=__webpack_require__("./src/themes/ThemeContext.tsx"),emotion_css_esm=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),react=__webpack_require__("../../node_modules/react/index.js"),responsiveness=__webpack_require__("./src/components/Layout/utils/responsiveness.tsx");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Grid=(0,react.forwardRef)((function(props,ref){var alignItems=props.alignItems,children=props.children,gap=props.gap,columns=props.columns,minColumnWidth=props.minColumnWidth,rest=_object_without_properties(props,["alignItems","children","gap","columns","minColumnWidth"]),styles=(0,ThemeContext.of)(getGridStyles,gap,columns,minColumnWidth,alignItems);return(0,jsx_runtime.jsx)("div",_object_spread_props(function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({ref:ref},rest),{className:styles.grid,children:children}))}));Grid.displayName="Grid";var getGridStyles=function(theme,gap,columns,minColumnWidth,alignItems){return{grid:(0,emotion_css_esm.AH)([{display:"grid"},(0,responsiveness.Y)(theme,gap,(function(val){return{gap:theme.spacing(val)}})),minColumnWidth&&(0,responsiveness.Y)(theme,minColumnWidth,(function(val){return{gridTemplateColumns:"repeat(auto-fill, minmax(".concat(theme.spacing(val),", 1fr))")}})),columns&&(0,responsiveness.Y)(theme,columns,(function(val){return{gridTemplateColumns:"repeat(".concat(val,", 1fr)")}})),(0,responsiveness.Y)(theme,alignItems,(function(val){return{alignItems:val}}))])}};try{Grid.displayName="Grid",Grid.__docgenInfo={description:"",displayName:"Grid",props:{columns:{defaultValue:null,description:"Number of columns",name:"columns",required:!1,type:{name:"ResponsiveProp<1 | 2 | 4 | 3 | 5 | 6 | 8 | 10 | 7 | 9 | 11 | 12>"}},minColumnWidth:{defaultValue:null,description:"For a responsive layout, fit as many columns while maintaining this minimum column width.\nThe real width will be calculated based on the theme spacing tokens: `theme.spacing(minColumnWidth)`",name:"minColumnWidth",required:!1,type:{name:"ResponsiveProp<1 | 2 | 3 | 5 | 8 | 13 | 21 | 34 | 44 | 55 | 72 | 89 | 144>"}},gap:{defaultValue:null,description:"Specifies the gutters between columns and rows. It is overwritten when a column or row gap has a value.",name:"gap",required:!1,type:{name:"ResponsiveProp<ThemeSpacingTokens>"}},alignItems:{defaultValue:null,description:"",name:"alignItems",required:!1,type:{name:"ResponsiveProp<AlignItems>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Layout/Grid/Grid.tsx#Grid"]={docgenInfo:Grid.__docgenInfo,name:"Grid",path:"src/components/Layout/Grid/Grid.tsx#Grid"})}catch(__react_docgen_typescript_loader_error){}var lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"MDX|Grid",component:Grid}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"grid",children:"Grid"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The Grid component is a layout component that allows you to create a grid of columns and rows to organize content and elements. It is a wrapper around the ",(0,jsx_runtime.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",rel:"nofollow",children:"CSS Grid"})," specification."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-to-use",children:"When to use"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the Grid component when you want to create structured and organized layouts where content or elements need to be aligned in rows and columns for clarity and consistency."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-not-to-use",children:"When not to use"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"Stack"})," component instead for these use cases:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Alignment:"})," More options for item alignment."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Flex items:"})," Custom flex basis or configure how items stretch and wrap."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"properties",children:"Properties"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsxs)(_components.em,{children:["Note: There is no support for using ",(0,jsx_runtime.jsx)(_components.code,{children:"columns"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"minColumnWidth"})," props at the same time. The correct behaviour is working just with one of them not both."]})}),"\n",(0,jsx_runtime.jsx)(dist.ov,{of:Grid})]})}function Grid_story_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Grid_story_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){Grid_story_define_property(target,key,source[key])}))}return target}function Grid_story_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function Grid_story_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}var dimensions=Array.from({length:9}).map((function(){return{minHeight:"".concat(100*Math.random()+100,"px")}})),meta={title:"General/Layout/Grid",component:Grid,parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}},args:{gap:1}},ColumnsNumber=function(args){var theme=(0,ThemeContext.$j)();return(0,jsx_runtime.jsx)(Grid,Grid_story_object_spread_props(Grid_story_object_spread({},args),{children:Array.from({length:9}).map((function(_,i){return(0,jsx_runtime.jsxs)("div",{style:Grid_story_object_spread({background:theme.colors.background.secondary,textAlign:"center"},dimensions[i]),children:["N# ",i]},i)}))}))};ColumnsNumber.argTypes={alignItems:{control:"select",options:["stretch","flex-start","flex-end","center","baseline","start","end","self-start","self-end"]}},ColumnsNumber.args={columns:3},ColumnsNumber.parameters={controls:{exclude:["minColumnWidth"]}};var ColumnsMinWidth=function(args){var theme=(0,ThemeContext.$j)();return(0,jsx_runtime.jsx)(Grid,{gap:args.gap,minColumnWidth:args.minColumnWidth,children:Array.from({length:9}).map((function(_,i){return(0,jsx_runtime.jsxs)("div",{style:{background:theme.colors.background.secondary,textAlign:"center"},children:["N# ",i]},i)}))})};ColumnsMinWidth.args={minColumnWidth:21},ColumnsMinWidth.parameters={controls:{exclude:["columns"]}};var Grid_story=meta;ColumnsNumber.parameters={...ColumnsNumber.parameters,docs:{...ColumnsNumber.parameters?.docs,source:{originalSource:"args => {\n  const theme = useTheme2();\n  return <Grid {...args}>\n      {Array.from({\n      length: 9\n    }).map((_, i) => <div key={i} style={{\n      background: theme.colors.background.secondary,\n      textAlign: 'center',\n      ...dimensions[i]\n    }}>\n          N# {i}\n        </div>)}\n    </Grid>;\n}",...ColumnsNumber.parameters?.docs?.source}}},ColumnsMinWidth.parameters={...ColumnsMinWidth.parameters,docs:{...ColumnsMinWidth.parameters?.docs,source:{originalSource:"args => {\n  const theme = useTheme2();\n  return <Grid gap={args.gap} minColumnWidth={args.minColumnWidth}>\n      {Array.from({\n      length: 9\n    }).map((_, i) => <div key={i} style={{\n      background: theme.colors.background.secondary,\n      textAlign: 'center'\n    }}>\n          N# {i}\n        </div>)}\n    </Grid>;\n}",...ColumnsMinWidth.parameters?.docs?.source}}}}}]);