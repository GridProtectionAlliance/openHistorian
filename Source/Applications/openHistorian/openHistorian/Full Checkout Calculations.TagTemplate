# Full Checkout Calculations Template
#
# File format is tab-delimited with the following columns:
#     Tag Name->Inputs->Equation->Type->Description
#
# For custom action adapter types, the format can be interpreted as:
#     Tag Name = Adapter Instance Name
#     Inputs = Connection String
#     Equation = Assembly Name (i.e., DLL file name)
#     Type = Fully Qualified Type Name
#     Description = Local Comments
#
# Otherwise format defines dynamic signal based calculations based on input configuration:
#     Tag Name = Identifier that becomes part of the point tag name of the calculation result
#     Inputs = Particular inputs for the specified calculation type
#     Equation = Calculation equation, if applicable to the calculation type
#     Type = Calculation type, one of: CalculatePower, SumPhase or DynamicCalculator
#     Description = Textual description of calculation purpose included in measurement description field
#
# CalculatePower type creates power calculations for paired voltage/current phasors where
# Inputs column is one of: +, A, B or C
#
# SumPhase type creates a 3-phase power summation when A, B and C power calculations are available where
# Inputs column is one of: MW, MVAR or MVA
#     
# DynamicCalculator type creates an equation-based calculation using one or more selected inputs separated by semi-colon where
# Inputs column variables are as follows - note that phasor based inputs will create one calculation per phasor type (V or I):
#     VNOM: Nominal Voltage = derived from per voltage phasor screen input in kV
#      VAM: Voltage A-Phase Magnitude also VBM, VCM, VNM for B, C & N phases and VPOSM, VNEGM, VZM for +, -, 0 sequence
#      VAA: Voltage A-Phase Angle     also VBA, VCA, VNA            ^            VPOSA, VNEGA, VZA
#      IAM: Current A-Phase Magnitude also IBM, ICM, INM         Neutral         IPOSM, INEGM, IZM
#      IAA: Current A-Phase Angle     also IBA, ICA, INA                         IPOSA, INEGA, IZA
#     FREQ: Frequency
#     FNOM: Constant nominal frequency per defined global system configuration, defaults to 60
#     FAVG: Current average frequency - must be pre-calculated with signal reference of "SYSTEM!FREQ-AVG-FQ"
#    FLAGS: Status Flags, e.g., IEEE C37.118 STAT word
MW_1	+		CalculatePower	Positive Sequence MW
MW_A	A		CalculatePower	Single Phase MW A
MW_B	B		CalculatePower	Single Phase MW B
MW_C	C		CalculatePower	Single Phase MW C
MW_3	MW		SumPhase	3-Phase MW
MVAR_3	MVAR		SumPhase	3-Phase MVAR
MVA_3	MVA		SumPhase	3-Phase MVA
VMAG_DEV_VA	VNOM;VAM	100*((VAM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal A
VMAG_DEV_VB	VNOM;VBM	100*((VBM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal B
VMAG_DEV_VC	VNOM;VCM	100*((VCM-VNOM)/VNOM)	DynamicCalculator	Voltage Deviation from Nominal C
VMAG_DEV_XP	VAM;VBM;VCM	100*((Max(VAM,Max(VBM,VCM))-Min(VAM,Min(VBM,VCM)))/Min(VAM,Min(VBM,VCM)))	DynamicCalculator	Voltage Deviation across Phases
VANG_DIFF_BA	VBA;VAA	VBA-VAA	DynamicCalculator	Voltage Angle Difference B to A
VANG_DIFF_CA	VCA;VAA	VCA-VAA	DynamicCalculator	Voltage Angle Difference C to A
VANG_DIFF_1A	VPOSA;VAA	VPOSA-VAA	DynamicCalculator	Voltage Angle Difference + to A
IMAG_RATIO_NA	INM;IAM	100*(INM/IAM)	DynamicCalculator	Neutral Current Ratio to Angle
IMAG_DEV_XP	IAM;IBM;ICM	100*((Max(IAM,Max(IBM,ICM))-Min(IAM,Min(IBM,ICM)))/Min(IAM,Min(IBM,ICM)))	DynamicCalculator	Current Deviation across Phases
IANG_DIFF_BA	IBA;IAA	IBA-IAA	DynamicCalculator	Current Angle Difference B to A
IANG_DIFF_CA	ICA;IAA	ICA-IAA	DynamicCalculator	Current Angle Difference C to A
IANG_DIFF_1A	IPOSA;IAA	IPOSA-IAA	DynamicCalculator	Current Angle Difference + to A
FREQ_DIFF_NOM	FREQ;FNOM	FREQ-FNOM	DynamicCalculator	Frequency Difference from Nominal
FREQ_DIFF_AVG	FREQ;FAVG	FREQ-FAVG	DynamicCalculator	Frequency Difference from Average
TIME_SYNC	FLAGS	(cast(FLAGS, int) AND 48) = 0	DynamicCalculator	Valid Time Synchronization
# The following calculation specifies FLAGS as input but does not use it in the equation, this is intentional, the TIME
# variable is a reserved constant in the dynamic calculator, but the calculator will not execute without an input:
TIME_DIFF	FLAGS	(UtcNow.Ticks-TIME) / 10000	DynamicCalculator	Millisecond Timestamp Difference from System Clock
#BULK_SEQ	IncludePositiveSequence=False	PowerCalculations.dll	PowerCalculations.BulkSequenceCalculator	Sets up bulk sequence calculations
