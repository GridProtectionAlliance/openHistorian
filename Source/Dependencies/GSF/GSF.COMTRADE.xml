<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GSF.COMTRADE</name>
    </assembly>
    <members>
        <member name="T:GSF.COMTRADE.AnalogChannel">
            <summary>
            Represents an analog channel definition of the <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultCurrentMagnitudeMultiplier">
            <summary>
            Default multiplier for current magnitude values.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultVoltageMagnitudeMultiplier">
            <summary>
            Default multiplier for voltage magnitude values.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultPhaseAngleMultiplier">
            <summary>
            Default multiplier for phase angle values.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultFrequencyMultiplier">
            <summary>
            Default multiplier for frequency values.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultDfDtMultiplier">
            <summary>
            Default multiplier for dF/dt values.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.AnalogChannel.DefaultAnalogMultipler">
            <summary>
            Default multiplier for an analog value.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.AnalogChannel.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
            <param name="version">Target schema version.</param>
            <param name="targetFloatingPoint">Determines if file type is targeting floating point.</param>
        </member>
        <member name="M:GSF.COMTRADE.AnalogChannel.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.AnalogChannel"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
            <param name="version">Target schema version.</param>
            <param name="targetFloatingPoint">Determines if file type is targeting floating point.</param>
            <param name="useRelaxedValidation">Indicates whether to relax validation on the number of line image elements.</param>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Index">
            <summary>
            Gets or sets index of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Name">
            <summary>
            Gets or sets name of this <see cref="T:GSF.COMTRADE.AnalogChannel"/> formatted as station_name:channel_name.
            </summary>
            <exception cref="T:System.FormatException">Name must be formatted as station_name:channel_name.</exception>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.StationName">
            <summary>
            Gets or sets station name component of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.ChannelName">
            <summary>
            Gets or sets channel name component of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.PhaseID">
            <summary>
            Gets or sets the 2-character phase identifier for this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.PhaseDesignation">
            <summary>
            Gets or sets phase designation of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Value is not a valid phase designation.</exception>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.PhasorType">
            <summary>
            Gets or sets phasor type of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>, if applicable.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.NominalFrequency">
            <summary>
            Gets or sets nominal frequency of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.SignalKind">
            <summary>
            Gets or sets signal kind of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Value is not a valid analog signal kind.</exception>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.CoordinateFormat">
            <summary>
            Gets or sets coordinate format of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.CircuitComponent">
            <summary>
            Gets or sets circuit component of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Units">
            <summary>
            Gets or sets units of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Multiplier">
            <summary>
            Gets or sets value multiplier of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Adder">
            <summary>
            Gets or sets adder of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Skew">
            <summary>
            Gets or sets time skew between channels of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.MinValue">
            <summary>
            Gets or sets minimum unscaled value of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.MaxValue">
            <summary>
            Gets or sets maximum unscaled value of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.PrimaryRatio">
            <summary>
            Gets or sets the channel voltage or current transformer ratio primary factor of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.SecondaryRatio">
            <summary>
            Gets or sets the channel voltage or current transformer ratio secondary factor of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.ScalingIdentifier">
            <summary>
            Gets or sets the primary or secondary data scaling identifier of this <see cref="T:GSF.COMTRADE.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.AngleUnit">
            <summary>
            Gets <see cref="P:GSF.COMTRADE.AnalogChannel.AngleUnit"/> derived from <see cref="P:GSF.COMTRADE.AnalogChannel.Units"/>, if applicable to channel type.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.AnalogChannel.Version">
            <summary>
            Gets target schema version.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.AnalogChannel.ToString">
            <summary>
            Converts <see cref="T:GSF.COMTRADE.AnalogChannel"/> to its string format.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.ChannelMetadata">
            <summary>
            Defines a minimal set of channel metadata for a COMTRADE config file.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadata.Name">
            <summary>
            Channel name.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadata.SignalType">
            <summary>
            Channel signal type.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadata.IsDigital">
            <summary>
            Determines if channel is a digital.
            </summary>
            <remarks>
            Channel is assumed to be an analog if field is <c>false</c>.
            </remarks>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadata.Units">
            <summary>
            Defines units to use for channel.
            </summary>
            <remarks>
            Leave <c>null</c> for defaults.
            </remarks>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadata.CircuitComponent">
            <summary>
            Defines circuit component channel.
            </summary>
            <remarks>
            Leave <c>null</c> for none.
            </remarks>
        </member>
        <member name="T:GSF.COMTRADE.ChannelMetadataSorter">
            <summary>
            Defines a comparison class to property sort metadata.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.ChannelMetadataSorter.Compare(GSF.COMTRADE.ChannelMetadata,GSF.COMTRADE.ChannelMetadata)">
            <summary>
            Compares one metadata record to another.
            </summary>
            <param name="left">Left metadata record to compare.</param>
            <param name="right">Right metadata record to compare.</param>
            <returns>Comparison sort order of metadata record.</returns>
        </member>
        <member name="F:GSF.COMTRADE.ChannelMetadataSorter.Default">
            <summary>
            Default instance of the metadata record sorter.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.DigitalChannel">
            <summary>
            Represents a digital channel definition of the <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.DigitalChannel.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
            <param name="version">Target schema version.</param>
        </member>
        <member name="M:GSF.COMTRADE.DigitalChannel.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.DigitalChannel"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
            <param name="version">Target schema version.</param>
            <param name="useRelaxedValidation">Indicates whether to relax validation on the number of line image elements.</param>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.Index">
            <summary>
            Gets or sets index of this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.Name">
            <summary>
            Gets or sets name of this <see cref="T:GSF.COMTRADE.DigitalChannel"/> formatted as station_name:channel_name.
            </summary>
            <exception cref="T:System.FormatException">Name must be formatted as station_name:channel_name.</exception>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.StationName">
            <summary>
            Gets or sets station name component of this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.ChannelName">
            <summary>
            Gets or sets channel name component of this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.PhaseID">
            <summary>
            Gets or sets the 2-character phase identifier for this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.CircuitComponent">
            <summary>
            Gets or sets circuit component of this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.NormalState">
            <summary>
            Gets or sets normal state of this <see cref="T:GSF.COMTRADE.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.DigitalChannel.Version">
            <summary>
            Gets target schema version.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.DigitalChannel.ToString">
            <summary>
            Converts <see cref="T:GSF.COMTRADE.DigitalChannel"/> to its string format.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.Parser">
            <summary>
            COMTRADE data file(s) parser.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Parser.Finalize">
            <summary>
            Releases the unmanaged resources before the <see cref="T:GSF.COMTRADE.Parser"/> object is reclaimed by <see cref="T:System.GC"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.Schema">
            <summary>
            Gets or sets associated COMTRADE schema for this <see cref="T:GSF.COMTRADE.Parser"/>.
            </summary>
            <remarks>
            Upon assignment, any <see cref="P:GSF.COMTRADE.Schema.FileName"/> value will be used to
            initialize the parser's initial <see cref="P:GSF.COMTRADE.Parser.FileName"/> property when an associated
            data file that ends with ".cff", ".dat" or ".d00" is found to exist.
            </remarks>
        </member>
        <member name="P:GSF.COMTRADE.Parser.FileName">
            <summary>
            Gets or sets COMTRADE data filename. If there are more than one data files in a set, this should be set to first file name in the set, e.g., DATA123.D00.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.IsCombinedFileFormat">
            <summary>
            Gets flag that determines if <see cref="P:GSF.COMTRADE.Parser.FileName"/> is a Combined File Format (.cff) file.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.BinaryByteCount">
            <summary>
            Gets the byte count as parsed from a Combined File Format (.cff) file targeted with binary format.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.InferTimeFromSampleRates">
            <summary>
            Gets or sets flag that determines if time should be inferred from sample rates.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.Timestamp">
            <summary>
            Gets timestamp of current record.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.Values">
            <summary>
            Gets values of current record.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.PrimaryValues">
            <summary>
            Gets values of current record with secondary analog channels scaled to primary values.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.SecondaryValues">
            <summary>
            Gets values of current record with primary analog channels scaled to secondary values.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.AdjustToUTC">
            <summary>
            Gets or sets flag that determines if schemas that include a time code for a UTC offset
            should apply the adjustment so that timestamps are parsed as UTC.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Parser.TargetAngleUnit">
            <summary>
            Gets or sets target angle unit for any analog channels that are angles.
            </summary>
            <remarks>
            When assigned, any encountered angles will be converted to the specified unit while parsing.
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Parser.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:GSF.COMTRADE.Parser"/> object.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Parser.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.COMTRADE.Parser"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.COMTRADE.Parser.OpenFiles">
            <summary>
            Opens all COMTRADE data file streams.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Parser.CloseFiles">
            <summary>
            Closes all COMTRADE data file streams.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Parser.ReadNext">
            <summary>
            Reads next COMTRADE record.
            </summary>
            <returns><c>true</c> if read succeeded; otherwise, <c>false</c> if end of data set was reached.</returns>
        </member>
        <member name="T:GSF.COMTRADE.SampleRate">
            <summary>
            Represents a sample rate with associated ending sample using the COMTRADE file standard, IEEE Std C37.111-1999.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.SampleRate.Rate">
            <summary>
            Sample rate in Hertz (Hz).
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.SampleRate.EndSample">
            <summary>
            Last sample number at sample rate.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.SampleRate.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.SampleRate"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
            <param name="useRelaxedValidation">Indicates whether to relax validation on the number of line image elements.</param>
        </member>
        <member name="M:GSF.COMTRADE.SampleRate.ToString">
            <summary>
            Converts <see cref="T:GSF.COMTRADE.SampleRate"/> to its string format.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.FileType">
            <summary>
            <see cref="T:GSF.COMTRADE.Schema"/> file type enumeration.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.FileType.Ascii">
            <summary>
            ASCII file type.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.FileType.Binary">
            <summary>
            Binary file type, analog channel size = uint16.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.FileType.Binary32">
            <summary>
            Binary file type, analog channel size = uint32.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.FileType.Float32">
            <summary>
            Binary file type, analog channel size = float32.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.TimeQualityIndicatorCode">
            <summary>
            <see cref="T:GSF.COMTRADE.Schema"/> time quality indicator code.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.Locked">
            <summary>
            Clock locked, Normal operation.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.Failure">
            <summary>
            Clock fault, time not reliable.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.Unlocked10Seconds">
            <summary>
            Clock unlocked, time within 10^1s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.Unlocked1Second">
            <summary>
            Clock unlocked, time within 10^0s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint1Seconds">
            <summary>
            Clock unlocked, time within 10^-1s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint01Seconds">
            <summary>
            Clock unlocked, time within 10^-2s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint001Seconds">
            <summary>
            Clock unlocked, time within 10^-3s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint0001Seconds">
            <summary>
            Clock unlocked, time within 10^-4s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint00001Seconds">
            <summary>
            Clock unlocked, time within 10^-5s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint000001Seconds">
            <summary>
            Clock unlocked, time within 10^-6s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint0000001Seconds">
            <summary>
            Clock unlocked, time within 10^-7s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint00000001Seconds">
            <summary>
            Clock unlocked, time within 10^-8s.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.TimeQualityIndicatorCode.UnlockedPoint000000001Seconds">
            <summary>
            Clock unlocked, time within 10^-9s.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.LeapSecondIndicator">
            <summary>
            <see cref="T:GSF.COMTRADE.Schema"/> leap second indicator.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.LeapSecondIndicator.NoLeapSecondAdjustment">
            <summary>
            No leap second adjustment was added during recorded data set.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.LeapSecondIndicator.LeapSecondWasAdded">
            <summary>
            Leap second adjustment was added during recorded data set.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.LeapSecondIndicator.LeapSecondWasSubtracted">
            <summary>
            Leap second adjustment was subtracted during recorded data set.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.LeapSecondIndicator.NoLeapSecondCapacity">
            <summary>
            Leap second adjustment not capable for recording device.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.Schema">
            <summary>
            Represents the schema for a configuration file in the COMTRADE file standard, IEEE Std C37.111-1999/2013.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Schema.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Schema.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.Schema"/> from an existing configuration file name.
            </summary>
            <param name="fileName">File name of configuration file to parse.</param>
        </member>
        <member name="M:GSF.COMTRADE.Schema.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.Schema"/> from an existing configuration file name.
            </summary>
            <param name="fileName">File name of configuration file to parse.</param>
            <param name="useRelaxedValidation">Indicates whether to relax validation on the number of line image elements.</param>
        </member>
        <member name="P:GSF.COMTRADE.Schema.FileName">
            <summary>
            Gets the file name used to generate this schema when constructed with one; otherwise, <c>null</c>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.IsCombinedFileFormat">
            <summary>
            Gets flag that determines if <see cref="P:GSF.COMTRADE.Schema.FileName"/> is a Combined File Format (.cff) file.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.StationName">
            <summary>
            Gets or sets free-form station name for this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.DeviceID">
            <summary>
            Gets or sets free-form device ID for this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.Version">
            <summary>
            Gets or sets version number of the IEEE Std C37.111 used by this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalChannels">
            <summary>
            Gets total number of analog and digital channels of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalAnalogChannels">
            <summary>
            Gets total number of analog channels of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalDigitalChannels">
            <summary>
            Gets total number of digital channels of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.AnalogChannels">
            <summary>
            Gets or sets analog channels of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.DigitalChannels">
            <summary>
            Gets or sets digital channels of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.NominalFrequency">
            <summary>
            Gets or sets nominal frequency of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.SampleRates">
            <summary>
            Gets or sets sampling rates of this <see cref="T:GSF.COMTRADE.Schema"/>. A file of phasor data will normally be made using a single sampling rate, so this will usually be 1.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalSampleRates">
            <summary>
            Gets total number of sample rates of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalSamples">
            <summary>
            Gets total number of samples, i.e., rows per timestamp, as reported by the sample rates.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TotalChannelValues">
            <summary>
            Gets total number of channels values, i.e., <c>TotalChannels * TotalSamples</c>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.StartTime">
            <summary>
            Gets or sets start timestamp of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TriggerTime">
            <summary>
            Gets or sets trigger timestamp of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.FileType">
            <summary>
            Gets or sets file type of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TimeFactor">
            <summary>
            Gets or sets the multiplication factor for the time differential (timestamp) field in this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TimeCode">
            <summary>
            Gets or sets UTC offset for channel timestamps - format HhMM.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.LocalCode">
            <summary>
            Gets or sets UTC offset for timezone of recording device, or "x" for not applicable - format HhMM.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.TimeQualityIndicatorCode">
            <summary>
            Gets or sets the time quality indicator code for the recorded data set.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.LeapSecondIndicator">
            <summary>
            Gets or sets the leap second indicator for the recorded data set.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.DigitalWords">
            <summary>
            Gets the total digital words for given number of digital values when the file type is binary.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.BinaryRecordLength">
            <summary>
            Calculates the size of a record, in bytes, when the file type is binary.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.Binary32RecordLength">
            <summary>
            Calculates the size of a record, in bytes, when the file type is binary32.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.Float32RecordLength">
            <summary>
            Calculates the size of a record, in bytes, when the file type is float32.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.Schema.FileImage">
            <summary>
            Gets the file image of this <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.TimeOffset">
            <summary>
            Represents a UTC time offset for COMTRADE - format HhMM.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.TimeOffset.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.TimeOffset"/>
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.TimeOffset.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.TimeOffset"/>
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="P:GSF.COMTRADE.TimeOffset.Hours">
            <summary>
            Gets or sets UTC time offset hours.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.TimeOffset.Minutes">
            <summary>
            Gets or sets UTC time offset minutes.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.TimeOffset.NotApplicable">
            <summary>
            Gets or sets value that determines if offset is not applicable.
            </summary>
        </member>
        <member name="P:GSF.COMTRADE.TimeOffset.TickOffset">
            <summary>
            Gets the total <see cref="T:GSF.COMTRADE.TimeOffset"/> value in ticks.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.TimeOffset.ToString">
            <summary>
            Converts <see cref="T:GSF.COMTRADE.TimeOffset"/> to its string format.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.Timestamp">
            <summary>
            Represents a timestamp in the COMTRADE file standard format, IEEE Std C37.111-1999..
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.Timestamp.Value">
            <summary>
            Timestamp in ticks.
            </summary>
        </member>
        <member name="M:GSF.COMTRADE.Timestamp.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.COMTRADE.Timestamp"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="M:GSF.COMTRADE.Timestamp.ToString">
            <summary>
            Converts <see cref="T:GSF.COMTRADE.Timestamp"/> to its string format.
            </summary>
        </member>
        <member name="T:GSF.COMTRADE.Writer">
            <summary>
            COMTRADE data and config file writer.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.Writer.MaxFileSize">
            <summary>
            Defines the maximum file size for this COMTRADE implementation.
            </summary>
            <remarks>
            Value represents 256TB, arbitrarily chosen extreme maximum file size.
            </remarks>
        </member>
        <member name="F:GSF.COMTRADE.Writer.MaxEndSample">
            <summary>
            Defines the maximum COMTRADE end sample number.
            </summary>
        </member>
        <member name="F:GSF.COMTRADE.Writer.CRLF">
            <summary>
            Defines a carriage return and line feed constant, i.e., <c>"\r\n"</c>.
            </summary>
            <remarks>
            The standard .NET <see cref="P:System.Environment.NewLine"/> constant can just be a line feed, <c>"\n"</c>,
            on some operating systems, e.g., Linux, however the COMTRADE standard requires that end of line
            markers be both a carriage return and line feed, <c>"\r\n"</c>.
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.CreateSchema(System.Collections.Generic.IEnumerable{GSF.COMTRADE.ChannelMetadata},System.String,System.String,GSF.Ticks,System.Int64,System.Int32,GSF.COMTRADE.FileType,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new COMTRADE configuration <see cref="T:GSF.COMTRADE.Schema"/>.
            </summary>
            <param name="metadata">Schema <see cref="T:GSF.COMTRADE.ChannelMetadata"/> records.</param>
            <param name="stationName">Station name for the schema.</param>
            <param name="deviceID">Device ID for the schema.</param>
            <param name="dataStartTime">Data start time.</param>
            <param name="sampleCount">Total data samples (i.e., total number of rows).</param>
            <param name="version">Target schema version - defaults to 1999.</param>
            <param name="fileType">Determines the data file type for the schema.</param>
            <param name="timeFactor">Time factor to use in schema - defaults to 1000.</param>
            <param name="samplingRate">Desired sampling rate - defaults to 33.3333Hz.</param>
            <param name="nominalFrequency">Nominal frequency - defaults to 60Hz.</param>
            <param name="includeFracSecDefinition">Determines if the FRACSEC word digital definitions should be included - defaults to <c>true</c>.</param>
            <returns>New COMTRADE configuration <see cref="T:GSF.COMTRADE.Schema"/>.</returns>
            <remarks>
            <para>
            This function is primarily intended to create a configuration based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually create a schema object for other COMTRADE needs. You can call
            the <see cref="P:GSF.COMTRADE.Schema.FileImage"/> property to return a string that can be written to a file
            that will be the contents of the configuration file.
            </para>
            <para>
            Linear scaling factors for analog channels, i.e., adders and multipliers, will be set to reasonable
            values based on the channel type. These should be adjusted as needed based on actual channel value
            ranges. Note that for <see cref="F:GSF.COMTRADE.FileType.Float32"/> the multiplier will be <c>1.0</c> and the adder
            will be <c>0.0</c> for all analog values.
            </para>
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.CreateCFFStream(System.String,GSF.COMTRADE.Schema,System.String[],System.String[],System.Text.Encoding)">
            <summary>
            Creates a new Combined File Format (.cff) COMTRADE file stream.
            </summary>
            <param name="fileName">Target file name. Must have ".cff" extension.</param>
            <param name="schema">Schema of file stream.</param>
            <param name="infLines">Lines of "INF" section to write to stream, if any.</param>
            <param name="hdrLines">Lines of "HDR" section to write to stream, if any.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
            <returns>New file stream for Combined File Format (.cff) COMTRADE file, ready to write at data section.</returns>
        </member>
        <member name="M:GSF.COMTRADE.Writer.CreateCFFStreamAscii(System.String,GSF.COMTRADE.Schema,System.String[],System.String[],System.Text.Encoding)">
            <summary>
            Creates a new Combined File Format (.cff) COMTRADE file stream targeted for ASCII.
            </summary>
            <param name="fileName">Target file name. Must have ".cff" extension.</param>
            <param name="schema">Schema of file stream.</param>
            <param name="infLines">Lines of "INF" section to write to stream, if any.</param>
            <param name="hdrLines">Lines of "HDR" section to write to stream, if any.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
            <returns>New stream writer for Combined File Format (.cff) COMTRADE file, ready to write at data section.</returns>
            <remarks>
            For COMTRADE versions greater than 2001, any use of the term ASCII also inherently implies Unicode UTF-8.
            When then <paramref name="encoding"/> parameter is <c>null</c>, the default, UTF-8 encoding will be used
            for text writes. If ASCII encoding needs to be enforced for backwards compatibility reasons, then the
            <paramref name="encoding"/> parameter will need to be set to <see cref="P:System.Text.Encoding.ASCII"/>.
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.CreateCFFStream(System.IO.Stream,GSF.COMTRADE.Schema,System.String[],System.String[],System.Text.Encoding)">
            <summary>
            Creates a new Combined File Format (.cff) COMTRADE file stream.
            </summary>
            <param name="stream">Target stream.</param>
            <param name="schema">Schema of file stream.</param>
            <param name="infLines">Lines of "INF" section to write to stream, if any.</param>
            <param name="hdrLines">Lines of "HDR" section to write to stream, if any.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
        </member>
        <member name="M:GSF.COMTRADE.Writer.CreateCFFStreamAscii(System.IO.Stream,GSF.COMTRADE.Schema,System.String[],System.String[],System.Text.Encoding)">
            <summary>
            Creates a new Combined File Format (.cff) COMTRADE file stream targeted for ASCII.
            </summary>
            <param name="stream">Target stream.</param>
            <param name="schema">Schema of file stream.</param>
            <param name="infLines">Lines of "INF" section to write to stream, if any.</param>
            <param name="hdrLines">Lines of "HDR" section to write to stream, if any.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
            <returns>New stream writer for Combined File Format (.cff) COMTRADE file, ready to write at data section.</returns>
            <remarks>
            For COMTRADE versions greater than 2001, any use of the term ASCII also inherently implies Unicode UTF-8.
            When then <paramref name="encoding"/> parameter is <c>null</c>, the default, UTF-8 encoding will be used
            for text writes. If ASCII encoding needs to be enforced for backwards compatibility reasons, then the
            <paramref name="encoding"/> parameter will need to be set to <see cref="P:System.Text.Encoding.ASCII"/>.
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.UpdateCFFEndSample(System.IO.Stream,System.Int64,System.Int32,System.Text.Encoding)">
            <summary>
            Updates a Combined File Format (.cff) COMTRADE file stream with a final end sample number.
            </summary>
            <param name="stream">Destination stream.</param>
            <param name="endSample">End sample value.</param>
            <param name="rateIndex">Zero-based rate index to update.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
        </member>
        <member name="M:GSF.COMTRADE.Writer.UpdateCFFStreamBinaryByteCount(System.IO.Stream,System.Int64,System.Text.Encoding)">
            <summary>
            Updates a Combined File Format (.cff) COMTRADE file stream with a final binary byte count.
            </summary>
            <param name="stream">Destination stream.</param>
            <param name="byteCount">Binary byte count.</param>
            <param name="encoding">Target encoding; <c>null</c> value will default to UTF-8 (no BOM).</param>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordAscii(System.IO.StreamWriter,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in ASCII format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value, method will write out bits.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE ASCII data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordBinary(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in binary format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE binary data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordBinary32(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in binary32 format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE binary32 data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordFloat32(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in float32 format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE float32 data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordAscii(System.IO.StreamWriter,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.Boolean[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in ASCII format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="analogValues">Values to write for analog channels.</param>
            <param name="digitalValues">Values to write for digital channels.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>false</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE ASCII data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordBinary(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.Boolean[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in binary format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="analogValues">Values to write for analog channels.</param>
            <param name="digitalValues">Values to write for digital channels.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>false</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE binary data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordBinary32(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.Boolean[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in binary32 format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="analogValues">Values to write for analog channels.</param>
            <param name="digitalValues">Values to write for digital channels.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>false</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE binary32 data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:GSF.COMTRADE.Writer.WriteNextRecordFloat32(System.IO.Stream,GSF.COMTRADE.Schema,GSF.Ticks,System.Double[],System.Boolean[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in float32 format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="analogValues">Values to write for analog channels.</param>
            <param name="digitalValues">Values to write for digital channels.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>false</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE float32 data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
    </members>
</doc>
