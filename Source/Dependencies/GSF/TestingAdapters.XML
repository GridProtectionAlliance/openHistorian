<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestingAdapters</name>
    </assembly>
    <members>
        <member name="T:TestingAdapters.FrameBasedRandomValueInputAdapter">
            <summary>
            Represents a class used to stream frames of measurements with random values meant to simulate a frame-based input source.
            </summary>
        </member>
        <member name="F:TestingAdapters.FrameBasedRandomValueInputAdapter.DefaultPublishRate">
            <summary>
            Default value for the <see cref="P:TestingAdapters.FrameBasedRandomValueInputAdapter.PublishRate"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.FrameBasedRandomValueInputAdapter.DefaultLatency">
            <summary>
            The default number of milliseconds for the delay;
            </summary>
        </member>
        <member name="F:TestingAdapters.FrameBasedRandomValueInputAdapter.DefaultJitter">
            <summary>
            The default jitter in the channel (1 standard deviation);
            </summary>
        </member>
        <member name="P:TestingAdapters.FrameBasedRandomValueInputAdapter.PublishRate">
            <summary>
            Gets or sets the number of frames generated by the adapter per second.
            </summary>
        </member>
        <member name="P:TestingAdapters.FrameBasedRandomValueInputAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:TestingAdapters.FrameBasedRandomValueInputAdapter.UseAsyncConnect">
            <summary>
            Gets flag that determines if the data input connects asynchronously.
            </summary>
            <remarks>
            Derived classes should return true when data input source is connects asynchronously, otherwise return false.
            </remarks>
        </member>
        <member name="M:TestingAdapters.FrameBasedRandomValueInputAdapter.Initialize">
            <summary>
            Initializes <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.FrameBasedRandomValueInputAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </summary>
            <param name="maxLength">Maximum number of available characters for display.</param>
            <returns>
            A short one-line summary of the current status of this <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </returns>
        </member>
        <member name="M:TestingAdapters.FrameBasedRandomValueInputAdapter.AttemptConnection">
            <summary>
            Attempts to connect to data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.FrameBasedRandomValueInputAdapter.AttemptDisconnection">
            <summary>
            Attempts to disconnect from data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.FrameBasedRandomValueInputAdapter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:TestingAdapters.MovingValueInputAdapter"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:TestingAdapters.MovingValueInputAdapter">
            <summary>
            Represents a class used to stream a series of values that move randomly but change gradually.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMinValue">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MinValue"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMaxValue">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MaxValue"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMinHoldTime">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MinHoldTime"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMaxHoldTime">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MaxHoldTime"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMinMoveTime">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MinMoveTime"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultMaxMoveTime">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.MaxMoveTime"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultPublishRate">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.PublishRate"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultValueWraps">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.ValueWraps"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultRandomNumberSeed">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.RandomNumberSeed"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.MovingValueInputAdapter.DefaultIncludeTime">
            <summary>
            Default value for the <see cref="P:TestingAdapters.MovingValueInputAdapter.IncludeTime"/> property.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MinValue">
            <summary>
            Gets or sets the smallest possible value generated by the adapter.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MaxValue">
            <summary>
            Gets or sets the largest possible value generated by the adapter.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MinHoldTime">
            <summary>
            Gets or sets the smallest possible amount of time that the values will stay the same before moving again, in seconds.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MaxHoldTime">
            <summary>
            Gets or sets the smallest possible amount of time that the values will stay the same before moving again, in seconds.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MinMoveTime">
            <summary>
            Gets or sets the smallest possible amount of time that the values will move between two held values, in seconds.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.MaxMoveTime">
            <summary>
            Gets or sets the largest possible amount of time that the values will move between two held values, in seconds.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.PublishRate">
            <summary>
            Gets or sets the number of values generated by the adapter per second.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.ValueWraps">
            <summary>
            Gets or sets the flag that determines whether the value can wrap from min to max or vice-versa.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.RandomNumberSeed">
            <summary>
            Gets or sets the initial random number seed. Set to -1 for timer based seed.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.IncludeTime">
            <summary>
            Gets or sets the flag that determines whether time will be included in the published measurements.
            False will set all time values to zero.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.ConnectOnDemand">
            <summary>
            Gets or sets the flag that determines whether adapter will only connect when measurements are requested.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:TestingAdapters.MovingValueInputAdapter.UseAsyncConnect">
            <summary>
            Gets flag that determines if the data input connects asynchronously.
            </summary>
            <remarks>
            Derived classes should return true when data input source is connects asynchronously, otherwise return false.
            </remarks>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.Initialize">
            <summary>
            Initializes <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </summary>
            <param name="maxLength">Maximum number of available characters for display.</param>
            <returns>
            A short one-line summary of the current status of this <see cref="T:TestingAdapters.MovingValueInputAdapter"/>.
            </returns>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.Start">
            <summary>
            Starts this adapter and initiates connection cycle to data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.AttemptConnection">
            <summary>
            Attempts to connect to data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.AttemptDisconnection">
            <summary>
            Attempts to disconnect from data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.MovingValueInputAdapter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:TestingAdapters.MovingValueInputAdapter"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:TestingAdapters.RandomValueInputAdapter">
            <summary>
            Represents a class used to stream in random values for input measurements.
            </summary>
            <remarks>
            <para>
            Example connection string using manually defined measurements:<br/>
            <c>outputMeasurements={P3:1345,60.0,1.0;P3:1346;P3:1347}</c><br/>
            When defined manually outputMeasurements are defined as "ArchiveSource:PointID,Adder,Multiplier",
            the adder and multiplier are optional defaulting to 0.0 and 1.0 respectively.
            <br/>
            </para>
            <para>
            Example connection string using measurements defined in a <see cref="P:GSF.TimeSeries.Adapters.AdapterBase.DataSource"/> table:<br/>
            <c>outputMeasurements={FILTER ActiveMeasurements WHERE SignalType IN ('IPHA','VPHA') AND Phase='+'}</c><br/>
            <br/>
            Basic filtering syntax is as follows:<br/>
            <br/>
                {FILTER &lt;TableName&gt; WHERE &lt;Expression&gt; [ORDER BY &lt;SortField&gt;]}<br/>
            <br/>
            Source tables are expected to have at least the following fields:<br/>
            <list type="table">
                <listheader>
                    <term>Name</term>
                    <term>Type</term>
                    <description>Description.</description>
                </listheader>
                <item>
                    <term>ID</term>
                    <term>NVARCHAR</term>
                    <description>Measurement key formatted as: ArchiveSource:PointID.</description>
                </item>
                <item>
                    <term>PointTag</term>
                    <term>NVARCHAR</term>
                    <description>Point tag of measurement.</description>
                </item>
                <item>
                    <term>Adder</term>
                    <term>FLOAT</term>
                    <description>Adder to apply to value, if any (default to 0.0).</description>
                </item>
                <item>
                    <term>Multiplier</term>
                    <term>FLOAT</term>
                    <description>Multipler to apply to value, if any (default to 1.0).</description>
                </item>
            </list>
            </para>
            <para>
            Note that the random value produced for the points will be a number between 0 to 1, use the Adder and Multipler
            to narrow down the range for your point. For example, to produce random frequency values between 59.95 and 60.05
            you would use the following point definition:<br/>
            <c>outputMeasurements={LocalDevArchive:2,59.95,0.1}</c>
            </para>
            </remarks>
        </member>
        <member name="F:TestingAdapters.RandomValueInputAdapter.DefaultPointsToSend">
            <summary>
            Specifies the default value for the <see cref="F:TestingAdapters.RandomValueInputAdapter.DefaultPointsToSend"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.RandomValueInputAdapter.DefaultInterpointDelay">
            <summary>
            Specifies the default value for the <see cref="P:TestingAdapters.RandomValueInputAdapter.InterpointDelay"/> property.
            </summary>
        </member>
        <member name="M:TestingAdapters.RandomValueInputAdapter.#ctor">
            <summary>
            Creates a new <see cref="T:TestingAdapters.RandomValueInputAdapter"/>.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.UseAsyncConnect">
            <summary>
            Gets flag that determines if the data input connects asynchronously.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.Name">
            <summary>
            Gets or sets the name of this <see cref="T:TestingAdapters.RandomValueInputAdapter"/>.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.PointsToSend">
            <summary>
            Gets or sets number of test points to send.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.InterpointDelay">
            <summary>
            Gets or sets number of milliseconds between points.
            </summary>
        </member>
        <member name="P:TestingAdapters.RandomValueInputAdapter.Status">
            <summary>
            Returns the detailed status of the data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.RandomValueInputAdapter.Initialize">
            <summary>
            Intializes <see cref="T:TestingAdapters.RandomValueInputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.RandomValueInputAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.RandomValueInputAdapter"/>.
            </summary>
            <param name="maxLength">Maximum number of available characters for display.</param>
            <returns>A short one-line summary of the current status of this <see cref="T:GSF.TimeSeries.Adapters.AdapterBase"/>.</returns>
        </member>
        <member name="M:TestingAdapters.RandomValueInputAdapter.AttemptConnection">
            <summary>
            Attempts to connect to data input source.
            </summary>
        </member>
        <member name="M:TestingAdapters.RandomValueInputAdapter.AttemptDisconnection">
            <summary>
            Attempts to disconnect from data input source.
            </summary>
        </member>
        <member name="T:TestingAdapters.SampleActionAdapter">
            <summary>
            Defines a sample action adapter for reference.
            </summary>
        </member>
        <member name="P:TestingAdapters.SampleActionAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:TestingAdapters.SampleActionAdapter.AlternateDatabaseConnection">
            <summary>
            Gets or sets an alternate database connection to use to get configuration information.
            </summary>
        </member>
        <member name="M:TestingAdapters.SampleActionAdapter.Initialize">
            <summary>
            Initializes <see cref="T:GSF.TimeSeries.Adapters.ActionAdapterBase"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.SampleActionAdapter.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publish <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            concentrator's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
            <remarks>
            If user implemented publication function consistently exceeds available publishing time (i.e., <c>1 / <see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/></c> seconds),
            concentration will fall behind. A small amount of this time is required by the <see cref="T:GSF.TimeSeries.ConcentratorBase"/> for processing overhead, so actual total time
            available for user function process will always be slightly less than <c>1 / <see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/></c> seconds.
            </remarks>
        </member>
        <member name="T:TestingAdapters.SetFlagsFilterAdapter">
            <summary>
            Forces a set of flags to be turned on for a set of inputs.
            </summary>
        </member>
        <member name="F:TestingAdapters.SetFlagsFilterAdapter.DefaultFlags">
            <summary>
            Default value for the <see cref="P:TestingAdapters.SetFlagsFilterAdapter.Flags"/> property.
            </summary>
        </member>
        <member name="P:TestingAdapters.SetFlagsFilterAdapter.Flags">
            <summary>
            Gets or sets the set of flags to be forced on.
            </summary>
        </member>
        <member name="P:TestingAdapters.SetFlagsFilterAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing (it doesn't).
            </summary>
        </member>
        <member name="M:TestingAdapters.SetFlagsFilterAdapter.Initialize">
            <summary>
            Initializes the adapter's settings.
            </summary>
        </member>
        <member name="M:TestingAdapters.SetFlagsFilterAdapter.ProcessMeasurements(System.Collections.Generic.IEnumerable{GSF.TimeSeries.IMeasurement})">
            <summary>
            Processes the measurements to apply the flags.
            </summary>
            <param name="measurements">The set of measurements to which to apply the flags.</param>
        </member>
        <member name="T:TestingAdapters.SynchronizeLocalClock">
            <summary>
            Represents a class used to synchronize the local system clock time to the time from input measurements.
            </summary>
        </member>
        <member name="F:TestingAdapters.SynchronizeLocalClock.DefaultUpdateFrequency">
            <summary>
            Default value for the <see cref="P:TestingAdapters.SynchronizeLocalClock.UpdateFrequency"/> property.
            </summary>
        </member>
        <member name="F:TestingAdapters.SynchronizeLocalClock.DefaultUpdateTolerance">
            <summary>
            Default value for the <see cref="P:TestingAdapters.SynchronizeLocalClock.UpdateTolerance"/> property.
            </summary>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.UpdateFrequency">
            <summary>
            Gets or sets the update frequency, in milliseconds, for setting the local system clock time.
            </summary>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.UpdateTolerance">
            <summary>
            Gets or sets the minimum update tolerance, in seconds, as deviation to current local time to check before updating the local clock.
            </summary>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.UseLocalClockAsRealTime">
            <summary>
            Gets or sets flag that determines whether or not to use the local clock time as real time.
            </summary>
            <remarks>
            Use your local system clock as real time only if the time is locally GPS-synchronized,
            or if the measurement values being sorted were not measured relative to a GPS-synchronized clock.
            Turn this off if the class is intended to process historical data.
            </remarks>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.FallBackOnLocalClock">
            <summary>
            Gest or sets flag that determines whether to fall back on local clock time as real time when time is unreasonable.
            </summary>
            <remarks>
            This property is only applicable when <see cref="P:GSF.TimeSeries.Adapters.FacileActionAdapterBase.UseLocalClockAsRealTime"/> is <c>false</c>.
            </remarks>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.TrackLatestMeasurements">
            <summary>
            Gets or sets flag to start tracking the absolute latest received measurement values.
            </summary>
            <remarks>
            Latest received measurement value will be available via the <see cref="P:GSF.TimeSeries.Adapters.FacileActionAdapterBase.LatestMeasurements"/> property.
            </remarks>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:TestingAdapters.SynchronizeLocalClock.Status">
            <summary>
            Returns the detailed status of the data input source.
            </summary>
            <remarks>
            Derived classes should extend status with implementation specific information.
            </remarks>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:TestingAdapters.SynchronizeLocalClock"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.Initialize">
            <summary>
            Initializes <see cref="T:TestingAdapters.SynchronizeLocalClock"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.Stop">
            <summary>
            Stops the <see cref="T:TestingAdapters.SynchronizeLocalClock"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.Start">
            <summary>
            Starts the <see cref="T:TestingAdapters.SynchronizeLocalClock"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.ManualSync(System.String)">
            <summary>
            Manually synchronizes local to specified date/time.
            </summary>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.ForceSync">
            <summary>
            Forces local clock synchronization to latest time value without reasonability considerations.
            </summary>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:GSF.TimeSeries.Adapters.AdapterBase"/>.
            </summary>
            <param name="maxLength">Maximum number of available characters for display.</param>
            <returns>A short one-line summary of the current status of this <see cref="T:GSF.TimeSeries.Adapters.AdapterBase"/>.</returns>
        </member>
        <member name="M:TestingAdapters.SynchronizeLocalClock.QueueMeasurementsForProcessing(System.Collections.Generic.IEnumerable{GSF.TimeSeries.IMeasurement})">
            <summary>
            Queues a collection of measurements for processing.
            </summary>
            <param name="measurements">Measurements to queue for processing.</param>
        </member>
        <member name="T:TestingAdapters.VirtualActionAdapter">
            <summary>
            Represents a virtual action adapter used for testing purposes - no data gets produced.
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualActionAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualActionAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.VirtualActionAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualActionAdapter.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publish <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            concentrator's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
        </member>
        <member name="T:TestingAdapters.VirtualInputAdapter">
            <summary>
            Represents a virtual input adapter used for testing purposes - no data gets produced.
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualInputAdapter.UseAsyncConnect">
            <summary>
            Gets flag that determines if this <see cref="T:TestingAdapters.VirtualInputAdapter"/> uses an asynchronous connection.
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualInputAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualInputAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.VirtualInputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualInputAdapter.AttemptConnection">
            <summary>
            Attempts to connect to this <see cref="T:TestingAdapters.VirtualInputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualInputAdapter.AttemptDisconnection">
            <summary>
            Attempts to disconnect to this <see cref="T:TestingAdapters.VirtualInputAdapter"/>.
            </summary>
        </member>
        <member name="T:TestingAdapters.VirtualOutputAdapter">
            <summary>
            Represents a virtual historian output adapter used for testing purposes - no data gets archived.
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualOutputAdapter.InputMeasurementKeys">
            <summary>
            Causes this adapter to receive no measurements
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualOutputAdapter.OutputIsForArchive">
            <summary>
            Returns a flag that determines if measurements sent to this <see cref="T:TestingAdapters.VirtualOutputAdapter"/> are
            destined for archival.
            </summary>
        </member>
        <member name="P:TestingAdapters.VirtualOutputAdapter.UseAsyncConnect">
            <summary>
            Gets flag that determines if this <see cref="T:TestingAdapters.VirtualOutputAdapter"/> uses an asynchronous connection.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualOutputAdapter.AttemptConnection">
            <summary>
            Attempts to connect to this <see cref="T:TestingAdapters.VirtualOutputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualOutputAdapter.AttemptDisconnection">
            <summary>
            Attempts to disconnect from this <see cref="T:TestingAdapters.VirtualOutputAdapter"/>.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualOutputAdapter.ProcessMeasurements(GSF.TimeSeries.IMeasurement[])">
            <summary>
            Serializes measurements to data output stream.
            </summary>
        </member>
        <member name="M:TestingAdapters.VirtualOutputAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this <see cref="T:TestingAdapters.VirtualOutputAdapter"/>.
            </summary>
        </member>
    </members>
</doc>
