<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GSF.Web</name>
    </assembly>
    <members>
        <member name="T:GSF.Web.Security.AntiForgery">
            <summary>
            Provides access to the anti-forgery system, which provides protection against
            Cross-site Request Forgery (CSRF, also called XSRF) attacks.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AntiForgery.GetHtml(System.Net.Http.HttpResponseMessage)">
            <summary>
            Generates an anti-forgery token for this request. This token can
            be validated by calling the Validate() method.
            </summary>
            <param name="response">Response message.</param>
            <returns>An HTML string corresponding to an &lt;input type="hidden"&gt;
            element. This element should be put inside a &lt;form&gt;.</returns>
            <remarks>
            This method has a side effect: it may set a response cookie.
            </remarks>
        </member>
        <member name="M:GSF.Web.Security.AntiForgery.GetTokens(System.Net.Http.HttpRequestMessage,System.String,System.String@,System.String@)">
            <summary>
            Generates an anti-forgery token pair (cookie and form token) for this request.
            This method is similar to GetHtml(), but this method gives the caller control
            over how to persist the returned values. To validate these tokens, call the
            appropriate overload of Validate.
            </summary>
            <param name="request">Request message.</param>
            <param name="oldCookieToken">The anti-forgery token - if any - that already existed
            for this request. May be null. The anti-forgery system will try to reuse this cookie
            value when generating a matching form token.</param>
            <param name="newCookieToken">Will contain a new cookie value if the old cookie token
            was null or invalid. If this value is non-null when the method completes, the caller
            must persist this value in the form of a response cookie, and the existing cookie value
            should be discarded. If this value is null when the method completes, the existing
            cookie value was valid and needn't be modified.</param>
            <param name="formToken">The value that should be stored in the &lt;form&gt;. The caller
            should take care not to accidentally swap the cookie and form tokens.</param>
            <remarks>
            Unlike the GetHtml() method, this method has no side effect. The caller
            is responsible for setting the response cookie and injecting the returned
            form token as appropriate.
            </remarks>
        </member>
        <member name="M:GSF.Web.Security.AntiForgery.Validate(System.Net.Http.HttpRequestMessage)">
            <summary>
            Validates an anti-forgery token that was supplied for this request.
            The anti-forgery token may be generated by calling GetHtml().
            </summary>
            <remarks>
            Throws an HttpAntiForgeryException if validation fails.
            </remarks>
        </member>
        <member name="M:GSF.Web.Security.AntiForgery.Validate(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Validates an anti-forgery token pair that was generated by the GetTokens method.
            </summary>
            <param name="request">Request message.</param>
            <param name="cookieToken">The token that was supplied in the request cookie.</param>
            <param name="formToken">The token that was supplied in the request form body.</param>
            <remarks>
            Throws an HttpAntiForgeryException if validation fails.
            </remarks>
        </member>
        <member name="T:GSF.Web.Security.AntiForgeryConfig">
            <summary>
            Provides programmatic configuration for the anti-forgery token system.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AntiForgeryConfig.AdditionalDataProvider">
            <summary>
            Specifies an object that can provide additional data to put into all
            generated tokens and that can validate additional data in incoming
            tokens.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AntiForgeryConfig.CookieName">
            <summary>
            Specifies the name of the cookie that is used by the anti-forgery
            system.
            </summary>
            <remarks>
            If an explicit name is not provided, the system will automatically
            generate a name.
            </remarks>
        </member>
        <member name="P:GSF.Web.Security.AntiForgeryConfig.RequireSsl">
            <summary>
            Specifies whether SSL is required for the anti-forgery system
            to operate. If this setting is 'true' and a non-SSL request
            comes into the system, all anti-forgery APIs will fail.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AntiForgeryConfig.SuppressXFrameOptionsHeader">
            <summary>
            Specifies whether to suppress the generation of X-Frame-Options header which
            is used to prevent ClickJacking. By default, the X-Frame-Options header is
            generated with the value SAMEORIGIN. If this setting is <c>true</c>, the
            X-Frame-Options header will not be generated for the response.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
            <summary>
            Specifies whether the anti-forgery system should skip checking
            for conditions that might indicate misuse of the system. Please
            use caution when setting this switch, as improper use could open
            security holes in the application.
            </summary>
            <remarks>
            Setting this switch will disable several checks, including:
            - Identity.IsAuthenticated = true without Identity.Name being set
            </remarks>
        </member>
        <member name="T:GSF.Web.Security.IAntiForgeryAdditionalDataProvider">
            <summary>
            Allows providing or validating additional custom data for anti-forgery tokens.
            For example, the developer could use this to supply a nonce when the token is
            generated, then he could validate the nonce when the token is validated.
            </summary>
            <remarks>
            The anti-forgery system already embeds the client's username within the
            generated tokens. This interface provides and consumes <em>supplemental</em>
            data. If an incoming anti-forgery token contains supplemental data but no
            additional data provider is configured, the supplemental data will not be
            validated.
            </remarks>
        </member>
        <member name="M:GSF.Web.Security.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Net.Http.HttpRequestMessage)">
            <summary>
            Provides additional data to be stored for the anti-forgery tokens generated
            during this request.
            </summary>
            <param name="request">Information about the current request.</param>
            <returns>Supplemental data to embed within the anti-forgery token.</returns>
        </member>
        <member name="M:GSF.Web.Security.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Validates additional data that was embedded inside an incoming anti-forgery
            token.
            </summary>
            <param name="request">Information about the current request.</param>
            <param name="additionalData">Supplemental data that was embedded within the token.</param>
            <returns>True if the data is valid; false if the data is invalid.</returns>
        </member>
        <member name="T:GSF.Web.Security.ValidateRequestVerificationTokenAttribute">
            <summary>
            Requests that the controller or method validate the anti-forgery request verification
            token values found in the HTTP headers.
            </summary>
            <remarks>
            For self-hosted web sites, use this attribute to validate anti-forgery tokens instead of
            the <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute"/> which requires an
            active <see cref="T:System.Web.HttpContext"/>.
            </remarks>
        </member>
        <member name="P:GSF.Web.Security.ValidateRequestVerificationTokenAttribute.FormValidation">
            <summary>
            Gets or sets flag that determines if validation should occur via posted form data or header data.
            Set to <c>true</c> to use form data with <see cref="M:GSF.Web.Model.HtmlHelper.RequestVerificationToken"/> function;
            otherwise, set to <c>false</c> to use with <see cref="M:GSF.Web.Model.HtmlHelper.RequestVerificationHeaderToken"/>
            function (e.g., when used via JSON). Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ValidateRequestVerificationTokenAttribute.HttpMethods">
            <summary>
            Gets or sets HTTP methods, as a comma separated value string, for which validation will apply.
            Defaults to <c>*</c>, meaning validation applies to all possible HTTP methods.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.ValidateRequestVerificationTokenAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.ValidateRequestVerificationTokenAttribute"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.ValidateRequestVerificationTokenAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:GSF.Web.Security.AuthenticationHandler">
            <summary>
            Handles authentication using the configured <see cref="T:GSF.Security.ISecurityProvider"/> implementation in the Owin pipeline.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>The ticket data provided by the authentication logic</returns>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationHandler.InvokeAsync">
            <summary>
            Called once by common code after initialization. If an authentication middle-ware
            responds directly to specifically known paths it must override this virtual,
            compare the request path to it's known paths, provide any response information
            as appropriate, and true to stop further processing.
            </summary>
            <returns>
            Returning false will cause the common code to call the next middle-ware in line.
            Returning true will cause the common code to begin the async completion journey
            without calling the rest of the middle-ware pipeline.
            </returns>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationHandler.TryGetPrincipal(System.Guid,GSF.Security.SecurityPrincipal@)">
            <summary>
            Attempt to get current security principal for specified <paramref name="sessionID"/>.
            </summary>
            <param name="sessionID">Session ID to user.</param>
            <param name="securityPrincipal">Principal of user with specified <paramref name="sessionID"/>, if found.</param>
            <returns><c>true</c> if principal was found for specified <paramref name="sessionID"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationHandler.ClearAuthorizationCache(System.Guid)">
            <summary>
            Clears any cached authorizations for the specified <paramref name="sessionID"/>.
            </summary>
            <param name="sessionID">Identifier of session authorization to clear.</param>
            <returns><c>true</c> if session authorization was found and cleared; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GSF.Web.Security.AuthenticationMiddleware">
            <summary>
            Middle-ware for configuring authentication using <see cref="T:GSF.Security.ISecurityProvider"/> in the Owin pipeline.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,GSF.Web.Security.AuthenticationOptions)">
            <summary>
            Creates a new instance of the <see cref="T:GSF.Web.Security.AuthenticationMiddleware"/> class.
            </summary>
            <param name="next">The next middle-ware object in the pipeline.</param>
            <param name="options">The options for authentication.</param>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationMiddleware.CreateHandler">
            <summary>
            Returns the authentication handler that provides the authentication logic.
            </summary>
            <returns>The authentication handler to provide authentication logic.</returns>
        </member>
        <member name="T:GSF.Web.Security.AppBuilderExtensions">
            <summary>
            Represents <see cref="T:Owin.IAppBuilder"/> extension functions for GSF authentication middle-ware.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AppBuilderExtensions.UseAuthentication(Owin.IAppBuilder,GSF.Web.Security.AuthenticationOptions)">
            <summary>
            Inserts GSF role-based security authentication into the Owin pipeline.
            </summary>
            <param name="app">Target <see cref="T:Owin.IAppBuilder"/> instance.</param>
            <param name="options">Authentication options.</param>
            <returns><see cref="T:Owin.IAppBuilder"/> instance.</returns>
        </member>
        <member name="T:GSF.Web.Security.AuthenticationOptions">
            <summary>
            Represents options for authentication using <see cref="T:GSF.Web.Security.AuthenticationHandler"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultRequestVerificationToken">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.RequestVerificationToken"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultAuthFailureRedirectResourceExpression">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.AuthFailureRedirectResourceExpression"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultAnonymousResourceExpression">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.AnonymousResourceExpression"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultLoginPage">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.LoginPage"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultAuthTestPage">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.AuthTestPage"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultAuthenticationSchemes">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.AuthenticationSchemes"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthenticationOptions.DefaultClearCredentialsParameter">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.AuthenticationOptions.ClearCredentialsParameter"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationOptions.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:GSF.Web.Security.AuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.AuthFailureRedirectResourceExpression">
            <summary>
            Gets or sets the expression that will match paths for the resources on the web server
            that should redirect to the <see cref="P:GSF.Web.Security.AuthenticationOptions.LoginPage"/> when authentication fails.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.AnonymousResourceExpression">
            <summary>
            Gets or sets the expression that will match paths for the resources on the web server
            that can be provided without checking credentials.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.AuthenticationToken">
            <summary>
            Gets or sets the token used for identifying the authentication token in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.SessionToken">
            <summary>
            Gets or sets the token used for identifying the session ID in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.RequestVerificationToken">
            <summary>
            Gets or sets the token used for anti-forgery verification in HTTP request headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.LoginPage">
            <summary>
            Gets or sets the login page used as a redirect location when authentication fails.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.AuthTestPage">
            <summary>
            Gets or sets the page name used to test user authorization.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.AuthenticationSchemes">
            <summary>
            Gets or sets the authentication schemes to use when testing authentication with the <see cref="P:GSF.Web.Security.AuthenticationOptions.AuthTestPage"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.ClearCredentialsParameter">
            <summary>
            Gets or sets the parameter name for the <see cref="P:GSF.Web.Security.AuthenticationOptions.AuthTestPage"/> that forces it to use Basic authentication
            so that any cached browser credentials can be cleared.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.Realm">
            <summary>
            Gets or sets the case-sensitive identifier that defines the protection space for this authentication.
            </summary>
            <remarks>
            <para>
            The "realm" authentication parameter is reserved for use by authentication schemes that wish to
            indicate a scope of protection.
            </para>
            <para>
            A protection space is defined by the canonical root URI (the scheme and authority components of the
            effective request URI) of the server being accessed, in combination with the realm value if present.
            These realms allow the protected resources on a server to be partitioned into a set of protection
            spaces, each with its own authentication scheme and/or authorization database. The realm value is a
            string, generally assigned by the origin server, that can have additional semantics specific to the
            authentication scheme. Note that a response can have multiple challenges with the same auth-scheme
            but with different realms.
            </para>
            </remarks>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.LoginHeader">
            <summary>
            Gets or sets any custom header to be displayed on the <see cref="P:GSF.Web.Security.AuthenticationOptions.LoginPage"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthenticationOptions.Readonly">
            <summary>
            Gets an immutable version of the authentication options.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationOptions.IsAuthFailureRedirectResource(System.String)">
            <summary>
            Determines whether the given resource is an authentication failure redirect resource.
            </summary>
            <param name="urlPath">Path to check as an anonymous resource.</param>
            <returns><c>true</c> if path is an anonymous resource; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationOptions.IsAnonymousResource(System.String)">
            <summary>
            Determines whether the given resource is an anonymous resource.
            </summary>
            <param name="urlPath">Path to check as an anonymous resource.</param>
            <returns><c>true</c> if path is an anonymous resource; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.AuthenticationOptions.ResourceRequiresAuthentication(System.String,System.Boolean)">
            <summary>
            Sets the resource to the required authentication state.
            </summary>
            <param name="resource">Resource name.</param>
            <param name="required">Set to <c>true</c> to require authenticated access; otherwise, <c>false</c> to require anonymous access.</param>
            <remarks>
            This state overrides any authentication state that would otherwise be derived from <see cref="P:GSF.Web.Security.AuthenticationOptions.AnonymousResourceExpression"/>.
            </remarks>
        </member>
        <member name="T:GSF.Web.Security.ReadonlyAuthenticationOptions">
            <summary>
            Represents an immutable version of <see cref="T:GSF.Web.Security.AuthenticationOptions"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthFailureRedirectResourceExpression">
            <summary>
            Gets the expression that will match paths for the resources on the web server
            that should redirect to the <see cref="P:GSF.Web.Security.ReadonlyAuthenticationOptions.LoginPage"/> when authentication fails.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AnonymousResourceExpression">
            <summary>
            Gets the expression that will match paths for the resources on the web server
            that can be provided without checking credentials.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthenticationToken">
            <summary>
            Gets the token used for identifying the authentication token in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.SessionToken">
            <summary>
            Gets the token used for identifying the session ID in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.RequestVerificationToken">
            <summary>
            Gets the token used for anti-forgery verification in HTTP request headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.LoginPage">
            <summary>
            Gets the login page used as a redirect location when authentication fails.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthTestPage">
            <summary>
            Gets the page name used to test user authorization.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthenticationSchemes">
            <summary>
            Gets the authentication schemes to use when testing authentication with the <see cref="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthTestPage"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.ClearCredentialsParameter">
            <summary>
            Gets the parameter name for the <see cref="P:GSF.Web.Security.ReadonlyAuthenticationOptions.AuthTestPage"/> that forces it to use Basic authentication
            so that any cached browser credentials can be cleared.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.Realm">
            <summary>
            Gets the case-sensitive identifier that defines the protection space for this authentication.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.ReadonlyAuthenticationOptions.LoginHeader">
            <summary>
            Gets any custom header to be displayed on the <see cref="P:GSF.Web.Security.ReadonlyAuthenticationOptions.LoginPage"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.ReadonlyAuthenticationOptions.IsAuthFailureRedirectResource(System.String)">
            <summary>
            Determines whether the given resource is an authentication failure redirect resource.
            </summary>
            <param name="urlPath">Path to check as an anonymous resource.</param>
            <returns><c>true</c> if path is an anonymous resource; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.ReadonlyAuthenticationOptions.IsAnonymousResource(System.String)">
            <summary>
            Determines whether the given resource is an anonymous resource.
            </summary>
            <param name="urlPath">Path to check as an anonymous resource.</param>
            <returns><c>true</c> if path is an anonymous resource; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:GSF.Web.Security.AuthorizationCache">
            <summary>
            Defines authorization cache.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthorizationCache.UserIDs">
            <summary>
            Gets the current user ID cache.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizationCache.CacheAuthorization(System.String,System.String)">
            <summary>
            Caches authorized user.
            </summary>
            <param name="userName">User name to cache.</param>
            <param name="securitySettingsCategory">Settings category used to lookup security connection for user data context.</param>
        </member>
        <member name="T:GSF.Web.Security.AuthorizeControllerRoleAttribute">
            <summary>
            Defines an MVC filter attribute to handle the GSF role based security model.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.AuthorizeControllerRoleAttribute.AllowedRoles">
            <summary>
            Gets allowed roles as a string array.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeControllerRoleAttribute.#ctor">
            <summary>
            Creates a new MVC based authorization attribute.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeControllerRoleAttribute.#ctor(System.String)">
            <summary>
            Creates a new MVC based authorization attribute for specified roles.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthorizeControllerRoleAttribute.SecuritySettingsCategory">
            <summary>
            Gets or sets settings category used to lookup security connection for user data context.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthorizeControllerRoleAttribute.SecurityExceptionViewName">
            <summary>
            Gets or sets view name to show for security exceptions.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeControllerRoleAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            Called when authorization is required.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeControllerRoleAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            Called when an exception occurs.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="T:GSF.Web.Security.AuthorizeHubRoleAttribute">
            <summary>
            Defines a SignalR authorization attribute to handle the GSF role based security model.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeHubRoleAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.AuthorizeHubRoleAttribute"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeHubRoleAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.AuthorizeHubRoleAttribute"/> with specified allowed roles.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthorizeHubRoleAttribute.SecuritySettingsCategory">
            <summary>
            Gets or sets settings category used to lookup security connection for user data context.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.AuthorizeHubRoleAttribute.AllowedRoles">
            <summary>
            Gets the allowed <see cref="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles"/> as a string array.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.AuthorizeHubRoleAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
            <summary>
            Provides an entry point for custom authorization checks.
            </summary>
            <param name="user">The <see cref="T:System.Security.Principal.IPrincipal"/> for the client being authorize</param>
            <returns>
            <c>true</c> if the user is authorized, otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GSF.Web.Security.NamespaceDoc">
            <summary>
            Contains classes that provide role based security functionality for MVC and SignalR applications.
            </summary>
        </member>
        <member name="T:GSF.Web.Security.SecurityHub">
            <summary>
            Defines a SignalR security hub for managing users, groups and SID management.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.SecurityHub"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.#ctor(System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.SecurityHub"/> with the specified logging functions.
            </summary>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.#ctor(System.String,System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.SecurityHub"/> with the specified <see cref="T:GSF.Web.Model.DataContext"/> and logging functions.
            </summary>
            <param name="settingsCategory">Setting category that contains the connection settings. Defaults to "securityProvider".</param>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="F:GSF.Web.Security.SecurityHub.DefaultNodeID">
            <summary>
            Gets current default Node ID for security.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.Logout(System.String)">
            <summary>
            Resets the current provider cache.
            </summary>
            <param name="sessionCookieValue">Session ID as it appears in the cookie header value.</param>
            <returns><c>true</c> if session was cleared; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QueryUserAccount(System.Guid)">
            <summary>
            Finds the specified user account record.
            </summary>
            <param name="id">ID of requested user.</param>
            <returns>Specified user account record.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QueryUserAccountByName(System.String)">
            <summary>
            Finds the specified user account record by SID or database account name.
            </summary>
            <param name="accountName">SID or database account name of requested user.</param>
            <returns>Specified user account record.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.SearchUserAccounts(System.String)">
            <summary>
            Searches user accounts by resolved names with no limit on total returned records.
            </summary>
            <param name="searchText">Search text to lookup.</param>
            <returns>Search results as "IDLabel" instances - serialized as JSON [{ id : "value", label : "name" }, ...]; useful for dynamic lookup lists.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.SearchUserAccounts(System.String,System.Int32)">
            <summary>
            Searches user accounts by resolved names limited to the specified number of records.
            </summary>
            <param name="searchText">Search text to lookup.</param>
            <param name="limit">Limit of number of record to return.</param>
            <returns>Search results as "IDLabel" instances - serialized as JSON [{ id : "value", label : "name" }, ...]; useful for dynamic lookup lists.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QuerySecurityGroup(System.Guid)">
            <summary>
            Finds the specified security group record.
            </summary>
            <param name="id">ID of requested group.</param>
            <returns>Specified security group record.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QuerySecurityGroupByName(System.String)">
            <summary>
            Finds the specified security group record by SID or database account name.
            </summary>
            <param name="accountName">SID or database account name of requested group.</param>
            <returns>Specified security group record.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.SearchSecurityGroups(System.String)">
            <summary>
            Searches security groups by resolved names.
            </summary>
            <param name="searchText">Search text to lookup.</param>
            <returns>Search results as "Labels" - serialized as JSON [{ label : "value" }, ...]; useful for dynamic lookup lists.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QueryApplicationRoles">
            <summary>
            Gets the current application role records.
            </summary>
            <returns>Current application role records.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.UserIsInRole(System.Guid,System.Guid)">
            <summary>
            Determines if user is in role based on database ID values.
            </summary>
            <param name="userID">User ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if user is in role; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.AddUserToRole(System.Guid,System.Guid)">
            <summary>
            Adds user to a role.
            </summary>
            <param name="userID">User ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if user was added; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.RemoveUserFromRole(System.Guid,System.Guid)">
            <summary>
            Removes user from a role.
            </summary>
            <param name="userID">User ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if user was removed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.UserNameToSID(System.String)">
            <summary>
            Gets SID for a given user name.
            </summary>
            <param name="userName">User name to convert to SID.</param>
            <returns>SID for a given user name.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.IsUserSID(System.String)">
            <summary>
            Determines if SID is for a user.
            </summary>
            <param name="sid">Security identifier to test.</param>
            <returns><c>true</c>if <paramref name="sid"/> is for a user; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.GroupIsInRole(System.Guid,System.Guid)">
            <summary>
            Determines if group is in role based on database ID values.
            </summary>
            <param name="groupID">Group ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if group is in role; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.AddGroupToRole(System.Guid,System.Guid)">
            <summary>
            Adds group to a role.
            </summary>
            <param name="groupID">Group ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if group was added; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.RemoveGroupFromRole(System.Guid,System.Guid)">
            <summary>
            Removes group from a role.
            </summary>
            <param name="groupID">Group ID value.</param>
            <param name="roleID">Role ID value.</param>
            <returns><c>true</c> if group was removed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.GroupNameToSID(System.String)">
            <summary>
            Gets SID for a given group name.
            </summary>
            <param name="groupName">Group name to convert to SID.</param>
            <returns>SID for a given group name.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.IsGroupSID(System.String)">
            <summary>
            Determines if SID is for a group.
            </summary>
            <param name="sid">Security identifier to test.</param>
            <returns><c>true</c>if <paramref name="sid"/> is for a group; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.SIDToAccountName(System.String)">
            <summary>
            Gets account name for a given SID.
            </summary>
            <param name="sid">SID to convert to a account name.</param>
            <returns>Account name for a given SID.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.GetDefaultNodeID">
            <summary>
            Gets the default NodeID based on the current configuration.
            </summary>
            <returns>Default NodeID based on the current configuration.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QueryUserAccountCount(System.String)">
            <summary>
            Queries count of user accounts.
            </summary>
            <param name="filterText">Text to use for filtering.</param>
            <returns>Count of user accounts.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QueryUserAccounts(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Queries page of user accounts.
            </summary>
            <param name="sortField">Current sort field.</param>
            <param name="ascending">Current sort direction.</param>
            <param name="page">Current page number.</param>
            <param name="pageSize">Current page size.</param>
            <param name="filterText">Text to use for filtering.</param>
            <returns>Page of user accounts.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.DeleteUserAccount(System.Guid)">
            <summary>
            Deletes user account.
            </summary>
            <param name="id">Unique ID of user account.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.NewUserAccount">
            <summary>
            Creates a new user account model instance.
            </summary>
            <returns>A new user account model instance.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.AddNewUserAccount(GSF.Security.Model.UserAccount)">
            <summary>
            Adds a new user account.
            </summary>
            <param name="record">User account model instance to add.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.UpdateUserAccount(GSF.Security.Model.UserAccount)">
            <summary>
            Updates user account.
            </summary>
            <param name="record">User account model instance to update.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QuerySecurityGroupCount(System.String)">
            <summary>
            Queries count of security groups.
            </summary>
            <param name="filterText">Text to use for filtering.</param>
            <returns>Count of security groups.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.QuerySecurityGroups(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Queries page of security groups.
            </summary>
            <param name="sortField">Current sort field.</param>
            <param name="ascending">Current sort direction.</param>
            <param name="page">Current page number.</param>
            <param name="pageSize">Current page size.</param>
            <param name="filterText">Text to use for filtering.</param>
            <returns>Page of security groups.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.DeleteSecurityGroup(System.Guid)">
            <summary>
            Deletes security group.
            </summary>
            <param name="id">Unique ID of security group.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.NewSecurityGroup">
            <summary>
            Creates a new security group model instance.
            </summary>
            <returns>A new security group model instance.</returns>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.AddNewSecurityGroup(GSF.Security.Model.SecurityGroup)">
            <summary>
            Adds a new security group.
            </summary>
            <param name="record">Security group model instance to add.</param>
        </member>
        <member name="M:GSF.Web.Security.SecurityHub.UpdateSecurityGroup(GSF.Security.Model.SecurityGroup)">
            <summary>
            Updates security group.
            </summary>
            <param name="record">Security group model instance to update.</param>
        </member>
        <member name="T:GSF.Web.Security.SessionHandler">
            <summary>
            Represents an HTTP messaging handler that can inject a session ID that can be used for security and user state.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.SessionHandler.DefaultSessionTimeout">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.SessionHandler.SessionTimeout"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.SessionHandler.DefaultSessionMonitorInterval">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.SessionHandler.SessionMonitorInterval"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Security.SessionHandler.DefaultAuthenticationToken">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.SessionHandler.AuthenticationToken"/>;
            </summary>
        </member>
        <member name="F:GSF.Web.Security.SessionHandler.DefaultSessionToken">
            <summary>
            Default value for <see cref="P:GSF.Web.Security.SessionHandler.SessionToken"/>;
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Security.SessionHandler"/>.
            </summary>
            <param name="authenticationToken">Token used for identifying the authentication token in cookie headers.</param>
            <param name="sessionToken">Token used for identifying the session ID in cookie headers.</param>
        </member>
        <member name="P:GSF.Web.Security.SessionHandler.AuthenticationToken">
            <summary>
            Gets the token used for identifying the authentication token in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.SessionHandler.SessionToken">
            <summary>
            Gets the token used for identifying the session ID in cookie headers.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Modifies the HTTP request message pipeline to include a session identifier.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel operation.</param>
            <returns>HTTP response message.</returns>
        </member>
        <member name="E:GSF.Web.Security.SessionHandler.SessionExpired">
            <summary>
            Raised when a client session is being expired.
            </summary>
        </member>
        <member name="E:GSF.Web.Security.SessionHandler.ProcessException">
            <summary>
            Occurs when a static method encounters an exception.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.SessionHandler.SessionTimeout">
            <summary>
            Gets timeout, in minutes, for which inactive client sessions will be expired and removed from the cache.
            </summary>
        </member>
        <member name="P:GSF.Web.Security.SessionHandler.SessionMonitorInterval">
            <summary>
            Gets interval, in milliseconds, over which the client session cache will be evaluated for expired sessions.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.ClearSessionCache(System.Guid)">
            <summary>
            Clears any cached session for the specified <paramref name="sessionID"/>.
            </summary>
            <param name="sessionID">Identifier of session to clear.</param>
            <returns><c>true</c> if session was found and cleared; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.TryGetCachedCredentials(System.String,System.String@,System.String@)">
            <summary>
            Attempts to use the authentication token to retrieve the user's credentials from the credential cache.
            </summary>
            <param name="authenticationToken">The token used to retrieve the user's credentials.</param>
            <param name="username">The username of the user.</param>
            <param name="password">THe user's password.</param>
            <returns>True if the user's credentials were successfully retrieved; false otherwise.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.TryGetSessionID(System.Net.Http.HttpRequestMessage,System.String,System.Guid@)">
            <summary>
            Tries to get the session ID Guid as defined in the request properties dictionary.
            </summary>
            <param name="request">The target HTTP request message.</param>
            <param name="sessionToken">Token used for identifying the session ID in properties dictionary.</param>
            <param name="sessionID">Validated session ID to return.</param>
            <returns><c>true</c> if session ID was successfully accessed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.TryGetSessionState(System.Net.Http.HttpRequestMessage,System.String,RazorEngine.Templating.DynamicViewBag@)">
            <summary>
            Tries to get the session state as defined in the request properties dictionary.
            </summary>
            <param name="request">The target HTTP request message.</param>
            <param name="sessionToken">Token used for identifying the session ID in properties dictionary.</param>
            <param name="sessionState">Session state to return.</param>
            <returns><c>true</c> if session state was successfully accessed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.GetAuthenticationTokenFromCookie(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Gets the authentication token as defined in the request cookie header values.
            </summary>
            <param name="request">The target HTTP request message.</param>
            <param name="authenticationToken">Token used for identifying the authentication token in cookie headers.</param>
            <returns>Authentication token string, if defined; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.GetAuthenticationTokenFromCookie(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Gets the authentication token as defined in the request cookie header values.
            </summary>
            <param name="request">The target Owin request.</param>
            <param name="authenticationToken">Token used for identifying the authentication token in cookie headers.</param>
            <returns>Authentication token string, if defined; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.GetSessionIDFromCookie(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Gets the session ID Guid as defined in the request cookie header values.
            </summary>
            <param name="request">The target HTTP request message.</param>
            <param name="sessionToken">Token used for identifying the session ID in cookie headers.</param>
            <returns>Session ID string, if defined; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.GetSessionIDFromCookie(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Gets the session ID Guid as defined in the Owin cookie header values.
            </summary>
            <param name="request">The target Owin request.</param>
            <param name="sessionToken">Token used for identifying the session ID in cookie headers.</param>
            <returns>Session ID string, if defined; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:GSF.Web.Security.SessionHandler.GetSessionIDFromCookie(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>
            Gets the session ID Guid as defined in the SignalR cookie header values.
            </summary>
            <param name="request">The target SignalR request.</param>
            <param name="sessionToken">Token used for identifying the session ID in cookie headers.</param>
            <returns>Session ID string, if defined; otherwise, <c>null</c>.</returns>
        </member>
        <member name="T:GSF.Web.Security.HttpConfigurationExtensions">
            <summary>
            Represents <see cref="T:System.Web.Http.HttpConfiguration"/> extension functions for GSF authentication middle-ware.
            </summary>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.EnableSessions(System.Web.Http.HttpConfiguration,GSF.Web.Security.AuthenticationOptions)">
            <summary>
            Adds session management to the HTTP configuration message handlers to enable GSF role-base security.
            </summary>
            <param name="httpConfig">Target <see cref="T:System.Web.Http.HttpConfiguration"/> instance.</param>
            <param name="options">Authentication options.</param>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.GetAuthenticationOptions(System.Net.Http.HttpRequestMessage)">
            <summary>
            Retrieves a read-only copy of the authentication options from the specified <paramref name="request"/>.
            </summary>
            <param name="request">The HTTP request.</param>
            <returns>The authentication options.</returns>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.GenerateRequestVerficationHeaderToken(System.Net.Http.HttpRequestMessage)">
            <summary>
            Generates an anti-forgery token that can be manually added to an HTTP request header,
            e.g., from within an AJAX request.
            </summary>
            <param name="request">HTTP request message.</param>
            <returns>Anti-forgery token to be added as an HTTP header value.</returns>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.AddRequestVerificationHeaderToken(System.Net.Http.HttpRequestMessage)">
            <summary>
            Adds a new anti-forgery request verification token to the headers of the specified <paramref name="request"/>.
            </summary>
            <param name="request">HTTP request message.</param>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.ValidateRequestVerificationToken(System.Net.Http.HttpRequestMessage,System.Boolean)">
            <summary>
            Validates that the anti-forgery request verification token value comes from the user who submitted the data.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="formValidation">Flag that determines if form validation should be used.</param>
        </member>
        <member name="M:GSF.Web.Security.HttpConfigurationExtensions.ValidateRequestVerificationToken(System.Net.Http.HttpRequestMessage,GSF.Web.Security.ReadonlyAuthenticationOptions,System.Boolean)">
            <summary>
            Validates that the anti-forgery request verification token value comes from the user who submitted the data.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="options">Read-only authentication options for this <paramref name="request"/>.</param>
            <param name="formValidation">Flag that determines if form validation should be used.</param>
        </member>
        <member name="P:GSF.Web.Shared.Model.Company.CreatedOn">
            <summary>
            Created on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Company.CreatedBy">
            <summary>
            Created by field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Company.UpdatedOn">
            <summary>
            Updated on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Company.UpdatedBy">
            <summary>
            Updated by field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Vendor.CreatedOn">
            <summary>
            Created on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Vendor.CreatedBy">
            <summary>
            Created by field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Vendor.UpdatedOn">
            <summary>
            Updated on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.Vendor.UpdatedBy">
            <summary>
            Updated by field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.VendorDevice.CreatedOn">
            <summary>
            Created on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.VendorDevice.CreatedBy">
            <summary>
            Created by field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.VendorDevice.UpdatedOn">
            <summary>
            Updated on field.
            </summary>
        </member>
        <member name="P:GSF.Web.Shared.Model.VendorDevice.UpdatedBy">
            <summary>
            Updated by field.
            </summary>
        </member>
        <member name="T:GSF.Web.Shared.Resources">
            <summary>
            Represents common resources that can be used in a web page.
            </summary>
        </member>
        <member name="F:GSF.Web.Shared.Resources.Root">
            <summary>
            Defines embedded resource root path.
            </summary>
        </member>
        <member name="F:GSF.Web.Shared.Resources.HeaderIcons">
            <summary>
            Gets common set of icon resources that can be included in web page header.
            </summary>
        </member>
        <member name="T:GSF.Web.Shared.SharedHub">
            <summary>
            Defines a SignalR security hub for managing users, groups and SID management.
            </summary>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Shared.SharedHub"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.#ctor(System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Shared.SharedHub"/> with the specified logging functions.
            </summary>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.#ctor(System.String,System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Shared.SharedHub"/> with the specified <see cref="T:GSF.Web.Model.DataContext"/> and logging functions.
            </summary>
            <param name="settingsCategory">Setting category that contains the connection settings. Defaults to "securityProvider".</param>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.OnConnected">
            <summary>
            Overrides base OnConnected method to provide logging
            </summary>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.OnDisconnected(System.Boolean)">
            <summary>
            Overrides base OnDisconnected method to provide logging
            </summary>
            <param name="stopCalled"></param>
            <returns></returns>
        </member>
        <member name="F:GSF.Web.Shared.SharedHub.DefaultNodeID">
            <summary>
            Gets current default Node ID for security.
            </summary>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryCompanyCount(System.String)">
            <summary>
            Queries company table counts
            </summary>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The count of the rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryCompanies(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Queries company table.
            </summary>
            <param name="sortField">Table field label to sort on.</param>
            <param name="ascending">Boolean denoting direction of sort.</param>
            <param name="page">The page number to return.</param>
            <param name="pageSize">The size of the page.</param>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.DeleteCompany(System.Int32)">
            <summary>
            Deletes record from company table.
            </summary>
            <param name="id">The id of the record to delete.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.NewCompany">
            <summary>
            Creates a new Company object.
            </summary>
            <returns>A new company instance</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.AddNewCompany(GSF.Web.Shared.Model.Company)">
            <summary>
            Adds new record to company table.
            </summary>
            <param name="company">The record to add.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.UpdateCompany(GSF.Web.Shared.Model.Company)">
            <summary>
            Updates a record in company table.
            </summary>
            <param name="company">The record to update.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryVendorCount(System.String)">
            <summary>
            Queries vendor table count.
            </summary>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The count of the rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryVendors(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Queries vendor table records.
            </summary>
            <param name="sortField">Table field label to sort on.</param>
            <param name="ascending">Boolean denoting direction of sort.</param>
            <param name="page">The page number to return.</param>
            <param name="pageSize">The size of the page.</param>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.DeleteVendor(System.Int32)">
            <summary>
            Deletes vendor table record.
            </summary>
            <param name="id">The id of the record to delete.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.NewVendor">
            <summary>
            Creates new vendor object.
            </summary>
            <returns>A new Vendor model instance.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.AddNewVendor(GSF.Web.Shared.Model.Vendor)">
            <summary>
            Adds new vendor record to table.
            </summary>
            <param name="vendor">The record to add.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.UpdateVendor(GSF.Web.Shared.Model.Vendor)">
            <summary>
            Updates record in vendor table.
            </summary>
            <param name="vendor">The record to update.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryVendorDeviceCount(System.String)">
            <summary>
            Queries vendor device table count.
            </summary>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The count of the rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.QueryVendorDevices(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Queries vendor device table records.
            </summary>
            <param name="sortField">Table field label to sort on.</param>
            <param name="ascending">Boolean denoting direction of sort.</param>
            <param name="page">The page number to return.</param>
            <param name="pageSize">The size of the page.</param>
            <param name="filterText">Text to filter search down to.</param>
            <returns>The rows in the table matching the query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.DeleteVendorDevice(System.Int32)">
            <summary>
            Deletes record from vendor device table.
            </summary>
            <param name="id">The id of the record to delete.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.NewVendorDevice">
            <summary>
            Creates new VendorDevice object.
            </summary>
            <returns>A new VendorDevice model instance.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.AddNewVendorDevice(GSF.Web.Shared.Model.VendorDevice)">
            <summary>
            Adds new record to vendor device table.
            </summary>
            <param name="vendorDevice">The record to add.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.UpdateVendorDevice(GSF.Web.Shared.Model.VendorDevice)">
            <summary>
            Updates record in vendor device table.
            </summary>
            <param name="vendorDevice">The record to update.</param>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.GetStatistic(System.Object)">
            <summary>
            If measurement is a statistic, returns the associated Statistic record; otherwise, returns <c>null</c>.
            </summary>
            <param name="metadataRecord">Record of measurement metadata used to lookup Statistic record.</param>
            <returns>Associated Statistic record, if measurement is a statistic; otherwise, returns <c>null</c>.</returns>
            <remarks>
            For best results, this function should be called after all statistic engine sources have been registered.
            <paramref name="metadataRecord"/> object expected to contain a "SignalID" and "SignalReference" property.
            </remarks>
        </member>
        <member name="M:GSF.Web.Shared.SharedHub.GetStatisticFormatRecords(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Gets the format records for statistics associated with the <paramref name="metadata"/>.
            </summary>
            <param name="metadata">Collection of measurement metadata.</param>
            <returns>Array of statistical records for the <paramref name="metadata"/>.</returns>
            <remarks>
            This is usually used in conjunction with a call to <see cref="M:GSF.Web.Shared.SubscriberHub.SetMeasurementFormats(System.String,System.Collections.Generic.IEnumerable{System.Object})"/>
            or applied to the "FormatRecords" property of a Json <c>subscriptionInfo</c> object.
            Records in <paramref name="metadata"/> array expected to contain a "SignalID" and "SignalReference" property.
            </remarks>
        </member>
        <member name="T:GSF.Web.Shared.SubscriberHub">
            <summary>
            SignalR hub that exposes server-side functions for the subscriber API.
            </summary>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.Connect(System.String)">
            <summary>
            Initiates the subscriber connection.
            </summary>
            <param name="subscriberID">The ID of the subscriber to be connected.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.SendCommand(System.String,GSF.TimeSeries.Transport.ServerCommand,System.String)">
            <summary>
            Sends a command to the publisher.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
            <param name="commandCode">The command to be sent.</param>
            <param name="message">The message to be sent to the publisher.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.GetMetadata(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Filters metadata and returns the result.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
            <param name="tableName">The metadata table from which to return rows.</param>
            <param name="filter">The filter to apply to the metadata table.</param>
            <param name="sortField">The field by which to sort the result set.</param>
            <param name="takeCount">The maximum number of records to be returned from the result set.</param>
            <returns>The result of the metadata query.</returns>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.SetMeasurementFormat(System.String,System.Guid,System.String,System.String)">
            <summary>
            Defines a string format to apply for a given measurement.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
            <param name="signalID">Measurement signal ID to which to apply the format.</param>
            <param name="format">String format to apply, e.g., "{0:N3} seconds".</param>
            <param name="dataType">Fully qualified data type for measurement, defaults to "System.Double" if <c>null</c>.</param>
            <remarks>
            <para>
            Set <paramref name="format"/> to <c>null</c> to remove any existing formatting.
            </para>
            <para>
            Conversion of double-precision measurement floating point value to specified
            <paramref name="dataType"/> will be attempted when type is provided.
            </para>
            </remarks>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.SetMeasurementFormats(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Defines string formats to apply for the collection of format records.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
            <param name="formatRecords">Collection of format records.</param>
            <remarks>
            This is simply a bulk operation for <see cref="M:GSF.Web.Shared.SubscriberHub.SetMeasurementFormat(System.String,System.Guid,System.String,System.String)"/>.
            Each format record should be a Json object similar to the following:
            <code>
            {
                "signalID":"4B1DEE7C-72EC-41EA-AAF3-7E8094355740",
                "format":"{0:N3} seconds",
                "dataType":"System.Double"
            }
            </code>
            Where
             - "signalID" is the measurement signal ID to which to apply the format
             - "format" is the string format to apply, and
             - "dataType" is the fully qualified data type for measurement
            </remarks>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.Subscribe(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Subscribes to the internal data publisher.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
            <param name="data">Data from the client describing the subscription.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.Unsubscribe(System.String)">
            <summary>
            Unsubscribes from the publisher.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.Disconnect(System.String)">
            <summary>
            Disconnects from the publisher.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.Dispose(System.String)">
            <summary>
            Closes the connection and releases all resources retained by the subscriber with this ID.
            </summary>
            <param name="subscriberID">The ID of the subscriber.</param>
        </member>
        <member name="M:GSF.Web.Shared.SubscriberHub.OnDisconnected(System.Boolean)">
            <summary>
            Handles when a client disconnects from the hub.
            </summary>
            <param name="stopCalled">Indicates whether the client called stop.</param>
            <returns>The task to handle the disconnect.</returns>
        </member>
        <member name="T:GSF.Web.Embedded.EmbeddedResourceProvider">
            <summary>
            Represents a <see cref="T:System.Web.Hosting.VirtualPathProvider"/> that allows access to embedded resources.
            </summary>
            <remarks>
            <para>
            This provider responds to requests for embedded resources when the virtual path begins with an "@", e.g.,
            http://localhost/@GSF.Web.Model.Scripts.gsf.web.client.js
            </para>
            <para>
            To use, add the following to the Global.asax.cs Application_Start function:
            <code>
                // Add additional virtual path provider to allow access to embedded resources
                EmbeddedResourceProvider.Register();
            </code>
            Then add the namespace paths to the embedded resources for which you need access to the Web.config &lt;system.webServer&gt; section:
            <code>
            &lt;system.webServer&gt;
              &lt;handlers&gt;
                &lt;!-- Add embedded resource handler for GSF script resources using slash delimiters --&gt;
                &lt;add name="EmbeddedResourceHandler-GSFScripts" path="@GSF/Web/Model/Scripts/*" verb="*" type="System.Web.StaticFileHandler" allowPathInfo="true" /&gt;
                &lt;!-- Add embedded resource handler for GSF view resources using slash delimiters --&gt;
                &lt;add name="EmbeddedResourceHandler-GSFViews" path="@GSF/Web/Model/Views/*" verb="*" type="System.Web.StaticFileHandler" allowPathInfo="true" /&gt;
                &lt;!-- Add embedded resource handler for GSF handler resources using slash delimiters --&gt;
                &lt;add name="EmbeddedResourceHandler-GSFHandlers" path="@GSF/Web/Model/Handlers/*" verb="*" type="System.Web.UI.SimpleHandlerFactory" allowPathInfo="true" /&gt;
                &lt;!-- Add embedded resource handler for fully qualified type names using dot delimiters (this should be defined last) --&gt;
                &lt;add name="EmbeddedResourceHandler-FQName" path="@*" verb="*" type="System.Web.StaticFileHandler" allowPathInfo="true" /&gt;
              &lt;/handlers&gt;
            &lt;/system.webServer&gt;
            </code>
            </para>
            </remarks>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.FileExists(System.String)">
            <summary>
            Gets a value that indicates whether a file exists in the virtual file system.
            </summary>
            <returns>true if the file exists in the virtual file system; otherwise, false.</returns>
            <param name="virtualPath">The path to the virtual file.</param>
            <remarks>
            Any virtual path that begins with an @ symbol is assumed to be an embedded resource where
            the path represents the namespace hierarchy in either slash or dot notation.
            </remarks>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.GetFile(System.String)">
            <summary>
            Gets a file from the virtual file system.
            </summary>
            <returns>An implementation of the <see cref="T:System.Web.Hosting.VirtualFile"/> class that represents a file in the virtual file system.</returns>
            <param name="virtualPath">The path to the virtual file.</param>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.DirectoryExists(System.String)">
            <summary>
            Gets a value that indicates whether a directory exists in the virtual file system.
            </summary>
            <returns>true if the directory exists in the virtual file system; otherwise, false.</returns>
            <param name="virtualDir">The path to the virtual directory.</param>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.GetDirectory(System.String)">
            <summary>
            Gets a virtual directory from the virtual file system.
            </summary>
            <returns>A descendant of the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class that represents a directory in the virtual file system.</returns>
            <param name="virtualDir">The path to the virtual directory.</param>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <returns>A <see cref="T:System.Web.Caching.CacheDependency" /> object for the specified virtual resources.</returns>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <param name="virtualPathDependencies">An array of paths to other resources required by the primary virtual resource.</param>
            <param name="utcStart">The UTC time at which the virtual resources were read.</param>
        </member>
        <member name="M:GSF.Web.Embedded.EmbeddedResourceProvider.Register">
            <summary>
            Registers the <see cref="T:GSF.Web.Embedded.EmbeddedResourceProvider"/> within a <see cref="T:System.Web.Hosting.HostingEnvironment"/>.
            </summary>
            <remarks>
            This function will properly register the <see cref="T:GSF.Web.Embedded.EmbeddedResourceProvider"/> even when being run from
            within a pre-compiled web application.
            </remarks>
        </member>
        <member name="T:GSF.Web.Embedded.NamespaceDoc">
            <summary>
            Contains embedded ASP.NET web pages and WCF web services that support the implementation of role-based security in .NET and non-.NET based development platforms.
            </summary>
        </member>
        <member name="T:GSF.Web.Embedded.ISecurityService">
            <summary>
            Embedded WCF service contract used for securing external facing WCF services.
            </summary>
        </member>
        <member name="M:GSF.Web.Embedded.ISecurityService.GetUserData">
            <summary>
            Returns information about the current user. 
            </summary>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user if user's security context has been initialized, otherwise null.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.ISecurityService.RefreshUserData">
            <summary>
            Refreshes and returns information about the current user. 
            </summary>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user if user's security context has been initialized, otherwise null.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.ISecurityService.Authenticate(System.String,System.String)">
            <summary>
            Authenticates a user and caches the security context upon successful authentication for subsequent use.
            </summary>
            <param name="username">Username of the user.</param>
            <param name="password">Password of the user.</param>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.ISecurityService.ResetPassword(System.String)">
            <summary>
            Resets user password.
            </summary>
            <param name="securityAnswer">Answer to user's security question.</param>
            <returns>true if password is reset, otherwise false.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.ISecurityService.ChangePassword(System.String,System.String)">
            <summary>
            Changes user password.
            </summary>
            <param name="oldPassword">User's current password.</param>
            <param name="newPassword">User's new password.</param>
            <returns>true if the password is changed, otherwise false.</returns>
        </member>
        <member name="T:GSF.Web.Embedded.SecurityPortal">
            <summary>
            Embedded web page used by secure ASP.NET web sites for security related tasks.
            </summary>
            <example>
            Config file entries for customizing the page:
            <code>
            <![CDATA[
            <?xml version="1.0"?>
            <configuration>
              <configSections>
                <section name="categorizedSettings" type="GSF.Configuration.CategorizedSettingsSection, GSF.Core" />
              </configSections>
              <categorizedSettings>
                <securityPortal>
                  <add name="CompanyLogo" value="~/images/MyCompanyLogo.png" description="Image file of the company's logo." encrypted="false" />
                  <add name="CompanyLink" value="http://www.mycompany.com" description="Link to the company's web site." encrypted="false" />
                  <add name="HelpPage" value="~/files/Help.pdf" description="Link to the help page." encrypted="false" />
                  <add name="FooterText" value="(C) My Company. All rights reserved." description="Text to be displayed in the footer." encrypted="false" />
                </securityPortal>
              </categorizedSettings>
            </configuration>
            ]]>
            </code>
            </example>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Initializes the web page.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.LoginButton_Click(System.Object,System.EventArgs)">
            <summary>
            Logins the user.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.UpdateButton_Click(System.Object,System.EventArgs)">
            <summary>
            Updates user data.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.ChangeButton_Click(System.Object,System.EventArgs)">
            <summary>
            Changes user password.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.ResetCheckButton_Click(System.Object,System.EventArgs)">
            <summary>
            Checks if user password can be reset.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityPortal.ResetFinalButton_Click(System.Object,System.EventArgs)">
            <summary>
            Resets user password.
            </summary>
            <param name="sender">Source of this event.</param>
            <param name="e">Arguments of this event.</param>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.StyleSheet">
            <summary>
            StyleSheet control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.MainForm">
            <summary>
            MainForm control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LogoLink">
            <summary>
            LogoLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LogoImage">
            <summary>
            LogoImage control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.HelpLink">
            <summary>
            HelpLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.HelpImage">
            <summary>
            HelpImage control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ContentPlaceHolder">
            <summary>
            ContentPlaceHolder control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.MessageLabel">
            <summary>
            MessageLabel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.FooterLabel">
            <summary>
            FooterLabel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginPanel">
            <summary>
            LoginPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginUsernameValidator">
            <summary>
            LoginUsernameValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginUsername">
            <summary>
            LoginUsername control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.RememberUsername">
            <summary>
            RememberUsername control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginPasswordValidator">
            <summary>
            LoginPasswordValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginPassword">
            <summary>
            LoginPassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ForgotPassword">
            <summary>
            ForgotPassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePassword">
            <summary>
            ChangePassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.LoginButton">
            <summary>
            LoginButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordCheckPanel">
            <summary>
            ResetPasswordCheckPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordUsernameValidator">
            <summary>
            ResetPasswordUsernameValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordUsername">
            <summary>
            ResetPasswordUsername control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetCheckButton">
            <summary>
            ResetCheckButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordFinalPanel">
            <summary>
            ResetPasswordFinalPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordSecurityQuestion">
            <summary>
            ResetPasswordSecurityQuestion control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetPasswordSecurityAnswer">
            <summary>
            ResetPasswordSecurityAnswer control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ResetFinalButton">
            <summary>
            ResetFinalButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordPanel">
            <summary>
            ChangePasswordPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordUsernameValidator">
            <summary>
            ChangePasswordUsernameValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordUsername">
            <summary>
            ChangePasswordUsername control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordOldPasswordValidator">
            <summary>
            ChangePasswordOldPasswordValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordOldPassword">
            <summary>
            ChangePasswordOldPassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordNewPasswordValidator1">
            <summary>
            ChangePasswordNewPasswordValidator1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordNewPasswordValidator2">
            <summary>
            ChangePasswordNewPasswordValidator2 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordNewPassword">
            <summary>
            ChangePasswordNewPassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordConfirmNewPasswordValidator1">
            <summary>
            ChangePasswordConfirmNewPasswordValidator1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordConfirmNewPasswordValidator2">
            <summary>
            ChangePasswordConfirmNewPasswordValidator2 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangePasswordConfirmNewPassword">
            <summary>
            ChangePasswordConfirmNewPassword control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.ChangeButton">
            <summary>
            ChangeButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.MyAccountPanel">
            <summary>
            MyAccountPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUsername">
            <summary>
            AccountUsername control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserCompany">
            <summary>
            AccountUserCompany control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserFirstNameValidator">
            <summary>
            AccountUserFirstNameValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserFirstName">
            <summary>
            AccountUserFirstName control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserLastNameValidator">
            <summary>
            AccountUserLastNameValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserLastName">
            <summary>
            AccountUserLastName control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserEmailAddressValidator">
            <summary>
            AccountUserEmailAddressValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserEmailAddress">
            <summary>
            AccountUserEmailAddress control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserPhoneNumberAddressValidator">
            <summary>
            AccountUserPhoneNumberAddressValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserPhoneNumber">
            <summary>
            AccountUserPhoneNumber control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserSecurityQuestion">
            <summary>
            AccountUserSecurityQuestion control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserSecurityAnswerValidator">
            <summary>
            AccountUserSecurityAnswerValidator control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccountUserSecurityAnswer">
            <summary>
            AccountUserSecurityAnswer control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.UpdateButton">
            <summary>
            UpdateButton control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.AccessDeniedPanel">
            <summary>
            AccessDeniedPanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:GSF.Web.Embedded.SecurityPortal.WarningImage">
            <summary>
            WarningImage control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:GSF.Web.Embedded.SecurityService">
            <summary>
            Embedded WCF service that can be used for securing applications using role-based security.
            </summary>
            <remarks>
            This list shows the endpoints exposed by <see cref="T:GSF.Web.Embedded.SecurityService"/>:
            <list type="table">
                <listheader>
                    <term>URI</term>
                    <description>Protocol</description>
                </listheader>
                <item>
                    <term><b>~/SecurityService.svc/soap</b></term>
                    <description>SOAP 1.1</description>
                </item>
                <item>
                    <term><b>~/SecurityService.svc/rest</b></term>
                    <description>REST</description>
                </item>
            </list>
            </remarks>
            <example>
            This example shows how to consume the REST endpoint of <see cref="T:GSF.Web.Embedded.SecurityService"/> using <a href="http://jquery.com/" target="_blank">jQuery</a>:
            <code>
            <![CDATA[
            <script src="jquery.js" type="text/javascript" />
            <script language="javascript" type="text/javascript">
                $(document).ready(function () { login(); });
            
                function login() {
                    $.get("SecurityService.svc/rest/getuserdata", loginCallback);
                }
            
                function loginCallback(data) {
                    var user = new UserData(data);
                    if (!user.isAuthenticated) {
                        alert('Access is denied.');
                    }
                    else {
                        alert('Welcome ' + user.firstName + '!');
                    }
                }
            
                function UserData(xml) {
                    this.username = $(xml).find('Username').text();
                    this.password = $(xml).find('Password').text();
                    this.firstName = $(xml).find('FirstName').text();
                    this.lastName = $(xml).find('LastName').text();
                    this.companyName = $(xml).find('CompanyName').text();
                    this.phoneNumber = $(xml).find('PhoneNumber').text();
                    this.emailAddress = $(xml).find('EmailAddress').text();
                    this.securityQuestion = $(xml).find('SecurityQuestion').text();
                    this.securityAnswer = $(xml).find('SecurityAnswer').text();
                    this.passwordChangeDateTime = $(xml).find('PasswordChangeDateTime').text();
                    this.accountCreatedDateTime = $(xml).find('AccountCreatedDateTime').text();
                    this.isDefined = $(xml).find('IsDefined').text() === 'true';
                    this.isExternal = $(xml).find('IsExternal').text() === 'true';
                    this.isDisabled = $(xml).find('IsDisabled').text() === 'true';
                    this.isLockedOut = $(xml).find('IsLockedOut').text() === 'true';
                    this.isAuthenticated = $(xml).find('IsAuthenticated').text() === 'true';
                    // Retrieve user groups.
                    this.groups = groups = new Array();
                    $(xml).find('Group').each(function () { groups.push($(this).text()); });
                    // Retrieve user roles.
                    this.roles = roles = new Array();
                    $(xml).find('Role').each(function () { roles.push($(this).text()); });
                }
            </script>
            ]]>
            </code>
            </example>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityService.GetUserData">
            <summary>
            Returns information about the current user. 
            </summary>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user if user's security context has been initialized, otherwise null.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityService.RefreshUserData">
            <summary>
            Refreshes and returns information about the current user. 
            </summary>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user if user's security context has been initialized, otherwise null.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityService.Authenticate(System.String,System.String)">
            <summary>
            Authenticates a user and caches the security context upon successful authentication for subsequent use.
            </summary>
            <param name="username">Username of the user.</param>
            <param name="password">Password of the user.</param>
            <returns>An <see cref="T:GSF.Security.UserData"/> object of the user.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityService.ResetPassword(System.String)">
            <summary>
            Resets user password.
            </summary>
            <param name="securityAnswer">Answer to user's security question.</param>
            <returns>true if password is reset, otherwise false.</returns>
        </member>
        <member name="M:GSF.Web.Embedded.SecurityService.ChangePassword(System.String,System.String)">
            <summary>
            Changes user password.
            </summary>
            <param name="oldPassword">User's current password.</param>
            <param name="newPassword">User's new password.</param>
            <returns>true if the password is changed, otherwise false.</returns>
        </member>
        <member name="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute">
            <summary>
            Attribute indicating the location of an embedded resource that should be
            served by the <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>.
            </summary>
            <remarks>
            <para>
            This attribute is used by the <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>
            module/path provider to retrieve the list of embedded resources from an assembly
            that should be considered a part of the virtual filesystem.
            </para>
            </remarks>
            <example>
            <para>
            Below is an example of what it might look like to embed a web form and a
            user control in an assembly to be served up with the <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>:
            </para>
            <code lang="C#">
            [assembly: EmbeddedResourceFileAttribute("MyNamespace.WebForm1.aspx", "MyNamespace")]
            [assembly: EmbeddedResourceFileAttribute("MyNamespace.UserControl1.ascx", "MyNamespace")]
            </code>
            </example>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourceFileAttribute.m_resourceNamespace">
            <summary>
            Internal storage for the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceFileAttribute.ResourceNamespace" />
            property.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourceFileAttribute.m_resourcePath">
            <summary>
            Internal storage for the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceFileAttribute.ResourcePath" />
            property.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourceFileAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" /> class.
            </summary>
            <param name="resourcePath">The path to the embedded resource.  Used to get the resource as a stream from the assembly.</param>
            <param name="resourceNamespace">The namespace the resource is in.  This will generally be removed from the full resource path to calculate the "application path" for the embedded resource.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="resourcePath" /> or <paramref name="resourceNamespace" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="resourcePath" /> is <see cref="F:System.String.Empty" />
            or if it only consists of periods and/or spaces.
            </exception>
            <remarks>
            <para>
            Both <paramref name="resourcePath" /> and <paramref name="resourceNamespace" />
            will be processed to have leading and trailing periods and spaces removed.
            If <paramref name="resourcePath" /> ends up being empty, an
            <see cref="T:System.ArgumentOutOfRangeException"/> is thrown.  No exception
            is thrown if <paramref name="resourceNamespace" /> turns out empty.
            </para>
            </remarks>
            <example>
            <para>
            If the <paramref name="resourcePath" /> is <c>RootNS.SubNS.AppRoot.Folder.File.aspx</c>
            and the <paramref name="resourceNamespace" /> is <c>RootNS.SubNS.AppRoot</c>,
            the virtual "path" to the embedded file will be <c>Folder.File.aspx</c>
            (which will be converted by the <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>
            to <c>~/Folder/File.aspx</c>).
            </para>
            </example>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourceFileAttribute.ResourceNamespace">
            <summary>
            Gets the namespace for the embedded resource.
            </summary>
            <value>
            A <see cref="T:System.String"/> with the embedded resource namespace.
            </value>
            <remarks>
            <para>
            This namespace will be removed from the full <see cref="P:GSF.Web.Hosting.EmbeddedResourceFileAttribute.ResourcePath"/>
            to create the virtual application path for the resource.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourceFileAttribute.ResourcePath">
            <summary>
            Gets the path to the embedded resource.
            </summary>
            <value>
            A <see cref="T:System.String"/> with the full path to an embedded resource in
            the associated assembly.
            </value>
            <remarks>
            <para>
            This path will be used to retrieve the resource from the assembly and serve
            it up.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourceFileAttribute.RemoveMalformedEndChars(System.String)">
            <summary>
            Removes leading and trailing dots and spaces from a string.
            </summary>
            <param name="toFix">The <see cref="T:System.String"/> to be cleaned up.</param>
            <returns>A version of <paramref name="toFix" /> with leading and trailing dots and spaces removed.</returns>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourceFileAttribute.MalformedEndCharExpression">
            <summary>
            Regular expression indicating the characters that can't start or end a resource.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
            <seealso cref="M:GSF.Web.Hosting.EmbeddedResourceFileAttribute.RemoveMalformedEndChars(System.String)" />
        </member>
        <member name="T:GSF.Web.Hosting.EmbeddedResourcePathProvider">
            <summary>
            A <see cref="T:System.Web.Hosting.VirtualPathProvider"/> that allows serving
            pages from embedded resources.
            </summary>
            <remarks>
            <para>
            ASP.NET retrieves files to serve via the <see cref="T:System.Web.Hosting.HostingEnvironment"/>.
            Rather than opening a file via <see cref="T:System.IO.File"/>, you ask
            the <see cref="T:System.Web.Hosting.HostingEnvironment"/> for its
            <see cref="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider"/>
            and ask that provider for the file.  The provider will return a
            <see cref="T:System.Web.Hosting.VirtualFile"/> reference that will allow you
            to open a stream on the file and use the contents.
            </para>
            <para>
            This implementation of <see cref="T:System.Web.Hosting.VirtualPathProvider"/>
            allows you to serve files to ASP.NET through embedded resources.  Rather
            than deploying your web forms, user controls, etc., to the file system,
            you can embed the files as resources right in your assembly and deploy
            just your assembly.  The <see cref="T:System.Web.Hosting.VirtualPathProvider"/>
            mechanism will take care of the rest.
            </para>
            <note type="caution">
            Most <see cref="T:System.Web.Hosting.VirtualPathProvider"/> implementations
            handle both directories and files.  This implementation handles only files.
            As such, if the <see cref="T:System.Web.Hosting.VirtualPathProvider"/> is
            used to enumerate available files (as in directory browsing), files provided
            via embedded resource will not be included.
            </note>
            <para>
            To use this <see cref="T:System.Web.Hosting.VirtualPathProvider"/>, you need
            to do four things to your web application.
            </para>
            <para>
            First, you need to set all of the files you want to serve from your assembly
            as embedded resources.  By default, web forms and so forth are set as "content"
            files; setting them as embedded resources will package them into your assembly.
            </para>
            <para>
            Second, in your <c>AssemblyInfo.cs</c> file (or whichever file you are
            declaring your assembly attributes in) you need to add one
            <see cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute"/> for
            every file you plan on serving.  This lets the provider know which embedded
            resources are available and which are actually resources for other purposes.
            Your assembly attributes will look something like this:
            </para>
            <code lang="C#">
            [assembly: EmbeddedResourceFileAttribute("MyNamespace.WebForm1.aspx", "MyNamespace")]
            [assembly: EmbeddedResourceFileAttribute("MyNamespace.UserControl1.ascx", "MyNamespace")]
            </code>
            <para>
            Third, you need to register this provider at application startup so ASP.NET
            knows to use it.  In your <c>Global.asax</c>, during <c>Application_OnStart</c>,
            put the following:
            </para>
            <code lang="C#">
            System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(new EmbeddedResourcePathProvider());
            </code>
            <para>
            Fourth, in your <c>web.config</c> file, you need to set up a configuration
            section called <c>embeddedFileAssemblies</c> that lets the provider know
            which assemblies should be queried for embedded files.  A sample configuration
            section looks like this:
            </para>
            <code>
            &lt;configuration&gt;
              &lt;configSections&gt;
                &lt;section name="embeddedFileAssemblies" type="GSF.Configuration.StringCollectionSectionHandler, GSF.Web.Hosting.EmbeddedResourcePathProvider"/&gt;
              &lt;/configSections&gt;
              &lt;embeddedFileAssemblies&gt;
                &lt;add value="My.Web.Assembly"/&gt;
              &lt;/embeddedFileAssemblies&gt;
              &lt;!-- ... other web.config items ... --&gt;
            &lt;/configuration&gt;
            </code>
            <para>
            Once you have that set up, you're ready to serve files from embedded resources.
            Simply deploy your application without putting the embedded resource files
            into the filesystem.  When you visit the embedded locations, the provider
            will automatically retrieve the proper embedded resource.
            </para>
            <para>
            File paths are mapped into the application using the
            <see cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute"/>
            declarations and the <see cref="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.MapResourceToWebApplication(System.String,System.String)"/>
            method.  This allows you to set up your web application as normal in
            Visual Studio and the folder structure, which automatically generates
            namespaces for your embedded resources, will translate into virtual folders
            in the embedded resource "filesystem."
            </para>
            <para>
            By default, files that are embedded as resources will take precedence over
            files in the filesystem.  If you would like the files in the filesystem
            to take precedence (that is, if you would like to allow the filesystem
            to "override" embedded files), you can set a key in the <c>appSettings</c>
            section of your <c>web.config</c> file that enables overrides:
            </para>
            <code>
            &lt;configuration&gt;
              &lt;!-- ... other web.config items ... --&gt;
              &lt;appSettings&gt;
                &lt;add key="GSF.Web.Hosting.EmbeddedResourcePathProvider.AllowOverrides" value="true"/&gt;
              &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            <para>
            For more information on virtual filesystems in ASP.NET, check out
            <see cref="T:System.Web.Hosting.VirtualPathProvider"/>.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute" />
            <seealso cref="T:System.Web.Hosting.VirtualPathProvider" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourcePathProvider.ApplicationRootPath">
            <summary>
            The standard web application "app relative root" path.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourcePathProvider.ConfigSectionName">
            <summary>
            The name of the configuration section containing the list of assemblies
            that should participate in the virtual filesystem.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourcePathProvider.ConfigKeyAllowOverrides">
            <summary>
            Appsettings key that indicates if filesystem files should override
            embedded files.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourcePathProvider._files">
            <summary>
            Internal storage for the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourcePathProvider.Files" />
            property.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourcePathProvider.AllowOverrides">
            <summary>
            Gets a value indicating if embedded files can be overridden.
            </summary>
            <value>
            <see langword="true" /> if embedded files can be overridden by other
            files (e.g., if filesystem files override embedded files); <see langword="false" />
            if not.  Defaults to <see langword="false" />.
            </value>
            <remarks>
            <para>
            This property uses the <see cref="P:System.Configuration.ConfigurationManager.AppSettings"/>
            key <see cref="F:GSF.Web.Hosting.EmbeddedResourcePathProvider.ConfigKeyAllowOverrides"/>
            to determine if overrides are allowed.  If the key is present, it is
            parsed to a <see cref="T:System.Boolean"/> and that value is returned.
            If the key is not present or if any error occurs during the parsing,
            <see langword="false" /> is returned.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourcePathProvider.Files">
            <summary>
            Gets the collection of files served by this provider.
            </summary>
            <value>
            A <see cref="T:GSF.Web.Hosting.VirtualFileBaseCollection"/>
            that contains all of the files served by this provider.
            </value>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.FileExists(System.String)">
            <summary>
            Gets a value that indicates whether a file exists in the virtual file system.
            </summary>
            <param name="virtualPath">The path to the virtual file.</param>
            <returns><see langword="true" /> if the file exists in the virtual file system; otherwise, <see langword="false" />.</returns>
            <remarks>
            <para>
            This override checks to see if the embedded resource file exists
            in memory.  If so, this method will return <see langword="true" />.
            If not, it returns the value from the <see cref="P:System.Web.Hosting.VirtualPathProvider.Previous"/>
            virtual path provider.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="virtualPath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="virtualPath" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
            <seealso cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            Creates a cache dependency based on the specified virtual paths.
            </summary>
            <param name="virtualPath">The path to the primary virtual resource.</param>
            <param name="virtualPathDependencies">An array of paths to other resources required by the primary virtual resource.</param>
            <param name="utcStart">The UTC time at which the virtual resources were read.</param>
            <returns>A <see cref="T:System.Web.Caching.CacheDependency"/> object for the specified virtual resources.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="virtualPath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="virtualPath" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
            <seealso cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.GetFile(System.String)">
            <summary>
            Gets a virtual file from the virtual file system.
            </summary>
            <param name="virtualPath">The path to the virtual file.</param>
            <returns>A descendent of the <see cref="T:System.Web.Hosting.VirtualFile"/> class that represents a file in the virtual file system.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="virtualPath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="virtualPath" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
            <seealso cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.Initialize">
            <summary>
            Initializes the <see cref="T:System.Web.Hosting.VirtualPathProvider"/> instance.
            </summary>
            <remarks>
            <para>
            The set of assemblies configured to provide embedded resource files
            are queried for <see cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute"/>
            attributes.  For each one present, the associated embedded resource
            is added to the virtual file system served by this provider.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
            <seealso cref="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.GetConfiguredAssemblyNames">
            <summary>
            Gets the names of the configured assemblies from configuration.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Specialized.StringCollection"/> with
            the names of the configured assemblies that should participate in this
            path provider.
            </returns>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.MapResourceToWebApplication(System.String,System.String)">
            <summary>
            Maps an embedded resource ID into a web application relative path (~/path).
            </summary>
            <param name="baseNamespace">
            The base namespace of the resource to map.
            </param>
            <param name="resourcePath">
            The fully qualified embedded resource path to map.
            </param>
            <returns>The mapped path of the resource into the web application.</returns>
            <remarks>
            <para>
            The <paramref name="baseNamespace" /> is stripped from the front of the
            <paramref name="resourcePath" /> and all but the last period in the remaining
            <paramref name="resourcePath" /> is replaced with the directory separator character
            ('/').  Finally, that path is mapped into a web application relative path.
            </para>
            <para>
            The filename being mapped must have an extension associated with it, and that
            extension may not have a period in it.  Only one period will be kept in the
            mapped filename - others will be assumed to be directory separators.  If a filename
            has multiple extensions (i.e., <c>My.Custom.config</c>), it will not map properly -
            it will end up being <c>~/My/Custom.config</c>.
            </para>
            <para>
            If <paramref name="baseNamespace" /> does not occur at the start of the
            <paramref name="resourcePath" />, an <see cref="T:System.InvalidOperationException"/>
            is thrown.
            </para>
            </remarks>
            <example>
            <para>
            Given a <paramref name="baseNamespace" /> of <c>MyNamespace</c>,
            this method will process <paramref name="resourcePath" /> as follows:
            </para>
            <list type="table">
            <listheader>
            <term><paramref name="resourcePath" /> value</term>
            <description>Mapping in Web App</description>
            </listheader>
            <item>
            <term><c>MyNamespace.Config.MyFile.config</c></term>
            <description><c>~/Config/MyFile.config</c></description>
            </item>
            <item>
            <term><c>MyNamespace.MyPage.aspx</c></term>
            <description><c>~/MyPage.aspx</c></description>
            </item>
            </list>
            </example>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="baseNamespace" /> or <paramref name="resourcePath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="baseNamespace" /> or <paramref name="resourcePath" />:
            <list type="bullet">
            <item>
            <description>
            Is <see cref="F:System.String.Empty"/>.
            </description>
            </item>
            <item>
            <description>
            Start or end with period.
            </description>
            </item>
            <item>
            <description>
            Contain two or more periods together (like <c>MyNamespace..MySubnamespace</c>).
            </description>
            </item>
            </list>
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.ValidateResourcePath(System.String,System.String)">
            <summary>
            Validates an embedded resource path or namespace.
            </summary>
            <param name="paramName">The name of the parameter being validated.</param>
            <param name="path">The path/namespace to validate.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="path" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="path" />:
            <list type="bullet">
            <item>
            <description>
            Is <see cref="F:System.String.Empty"/>.
            </description>
            </item>
            <item>
            <description>
            Start or end with period.
            </description>
            </item>
            <item>
            <description>
            Contain two or more periods together (like <c>MyNamespace..MySubnamespace</c>).
            </description>
            </item>
            </list>
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.FileHandledByBaseProvider(System.String)">
            <summary>
            Determines if a file should be handled by the base provider or if
            it should be handled by this provider.
            </summary>
            <param name="absolutePath">The absolute path to the file to check.</param>
            <returns>
            <see langword="true" /> if processing of the file at
            <paramref name="absolutePath" /> should be done by the base provider;
            <see langword="false" /> if this provider should handle it.
            </returns>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.ProcessEmbeddedFiles(System.String)">
            <summary>
            Reads in the embedded files from an assembly an processes them into
            the virtual file system.
            </summary>
            <param name="assemblyName">The name of the <see cref="T:System.Reflection.Assembly"/> to load and process.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="assemblyName" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="assemblyName" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown if the <see cref="T:System.Reflection.Assembly"/> indicated by
            <paramref name="assemblyName" /> is not found.
            </exception>
            <remarks>
            <para>
            The <paramref name="assemblyName" /> will be passed to <see cref="M:System.Reflection.Assembly.Load(System.String)"/>
            so the associated assembly can be processed.  If the assembly is not
            found, a <see cref="T:System.IO.FileNotFoundException"/> is thrown.
            </para>
            <para>
            Once the assembly is retrieved, it is queried for <see cref="T:GSF.Web.Hosting.EmbeddedResourceFileAttribute"/>
            instances.  For each one found, the associated resources are processed
            into virtual files that will be stored in
            <see cref="P:GSF.Web.Hosting.EmbeddedResourcePathProvider.Files"/>
            for later use.
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
            <seealso cref="M:GSF.Web.Hosting.EmbeddedResourcePathProvider.Initialize" />
        </member>
        <member name="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile">
            <summary>
            Represents a file object in embedded resource space.
            </summary>
            <remarks>
            <para>
            This type is used by the <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>
            to serve embedded resources as virtual files.  The properties on the
            file can be used to retrieve an embedded resource stream from the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ContainingAssembly"/>
            at the appropriate
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ResourcePath"/>
            using reflection.  As part of the <see cref="T:System.Web.Hosting.VirtualFile"/>
            interface, you can do this easily via <see cref="M:GSF.Web.Hosting.EmbeddedResourceVirtualFile.Open"/>.
            </para>
            <para>
            For more information on embedded resource virtual filesystem
            usage, see <see cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider"/>
            </para>
            </remarks>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourcePathProvider" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourceVirtualFile._containingAssembly">
            <summary>
            Internal storage for the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ContainingAssembly" />
            property.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
        </member>
        <member name="F:GSF.Web.Hosting.EmbeddedResourceVirtualFile._resourcePath">
            <summary>
            Internal storage for the
            <see cref="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ResourcePath" />
            property.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ContainingAssembly">
            <summary>
            Gets a reference to the assembly containing the virtual file.
            </summary>
            <value>
            A <see cref="T:System.Reflection.Assembly"/> that contains the embedded
            resource with the file contents.
            </value>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
        </member>
        <member name="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ResourcePath">
            <summary>
            Gets the path to the embedded resource in the containing assembly.
            </summary>
            <value>
            A <see cref="T:System.String"/> that indicates an embedded resource
            in the <see cref="P:GSF.Web.Hosting.EmbeddedResourceVirtualFile.ContainingAssembly"/>
            that represents the file for this instance.
            </value>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourceVirtualFile.#ctor(System.String,System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" /> class.
            </summary>
            <param name="virtualPath">The virtual path to the resource represented by this instance.</param>
            <param name="containingAssembly">The <see cref="T:System.Reflection.Assembly"/> containing the resource represented by this instance.</param>
            <param name="resourcePath">The path to the embedded resource in the <paramref name="containingAssembly" />.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="containingAssembly" /> or <paramref name="resourcePath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="resourcePath" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
        </member>
        <member name="M:GSF.Web.Hosting.EmbeddedResourceVirtualFile.Open">
            <summary>
            Returns a read-only stream to the virtual resource.
            </summary>
            <returns>A read-only stream to the virtual file.</returns>
            <seealso cref="T:GSF.Web.Hosting.EmbeddedResourceVirtualFile" />
            <seealso cref="M:System.Web.Hosting.VirtualFile.Open" />
        </member>
        <member name="T:GSF.Web.Hosting.IHostedHttpHandler">
            <summary>
            Defines an HTTP handler for self-hosted <see cref="T:GSF.Web.Hosting.WebServer"/> instances.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.IHostedHttpHandler.ProcessRequestAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            Enables processing of HTTP web requests by a custom handler that implements the <see cref="T:GSF.Web.Hosting.IHostedHttpHandler"/> interface.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="response">HTTP response message.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
        </member>
        <member name="P:GSF.Web.Hosting.IHostedHttpHandler.UseClientCache">
            <summary>
            Determines if client cache should be enabled for rendered handler content.
            </summary>
            <remarks>
            If rendered handler content does not change often, the server and client will use the
            <see cref="M:GSF.Web.Hosting.IHostedHttpHandler.GetContentHash(System.Net.Http.HttpRequestMessage)"/> to determine if the client needs to refresh the content.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hosting.IHostedHttpHandler.GetContentHash(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets hash of response content based on any <paramref name="request"/> parameters.
            </summary>
            <param name="request">HTTP request message.</param>
            <remarks>
            Value is only used when <see cref="P:GSF.Web.Hosting.IHostedHttpHandler.UseClientCache"/> is <c>true</c>.
            </remarks>
        </member>
        <member name="T:GSF.Web.Hosting.NamespaceDoc">
            <summary>
            Contains classes that make-up the framework for serving content embedded in .NET assemblies over the web.
            </summary>
        </member>
        <member name="T:GSF.Web.Hosting.VirtualFileBaseCollection">
            <summary>
            A strongly typed <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />
            where each element is a <see cref="T:System.Web.Hosting.VirtualFileBase" /> and is keyed
            off of the <see cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
            property.
            </summary>
            <remarks>
            <para>
            The default constructor for this collection does a culture-invariant case-insensitive
            comparison on the keys.  This allows for proper case-insensitive web-oriented
            behavior that is generally expected.
            </para>
            </remarks>
            <seealso cref="T:System.Web.Hosting.VirtualFileBase" />
        </member>
        <member name="M:GSF.Web.Hosting.VirtualFileBaseCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" /> class that uses a case-insensitive comparer.
            </summary>
            <seealso cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" />
        </member>
        <member name="M:GSF.Web.Hosting.VirtualFileBaseCollection.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" /> class that uses the specified equality comparer.
            </summary>
            <param name="comparer">
            The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
            generic interface to use when comparing keys, or <see langword="null" /> to use the default
            equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.
            </param>
            <seealso cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" />
        </member>
        <member name="M:GSF.Web.Hosting.VirtualFileBaseCollection.#ctor(System.Collections.Generic.IEqualityComparer{System.String},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" /> class that uses the specified equality comparer.
            </summary>
            <param name="comparer">
            The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
            generic interface to use when comparing keys, or <see langword="null" /> to use the default
            equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.
            </param>
            <param name="dictionaryCreationThreshold">
            The number of elements the collection can hold without creating a lookup dictionary
            (0 creates the lookup dictionary when the first item is added), or ?1 to specify that
            a lookup dictionary is never created.
            </param>
            <seealso cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" />
        </member>
        <member name="M:GSF.Web.Hosting.VirtualFileBaseCollection.GetKeyForItem(System.Web.Hosting.VirtualFileBase)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">
            The <see cref="T:System.Web.Hosting.VirtualFileBase" /> element from which to extract the key (<see cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />).
            </param>
            <seealso cref="T:GSF.Web.Hosting.VirtualFileBaseCollection" />
        </member>
        <member name="T:GSF.Web.Hosting.WebPageController">
            <summary>
            Defines a mini-web server with Razor support using the self-hosted API controller.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageController.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hosting.WebPageController"/> using the default configured <see cref="P:GSF.Web.Hosting.WebPageController.WebServer"/> instance.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageController.#ctor(GSF.Web.Hosting.WebServer)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hosting.WebPageController"/> using specified <paramref name="webServer"/>.
            </summary>
            <param name="webServer"><see cref="P:GSF.Web.Hosting.WebPageController.WebServer"/> instance to use for controller; uses default instance if not provided.</param>
        </member>
        <member name="P:GSF.Web.Hosting.WebPageController.Model">
            <summary>
            Gets or sets the <see cref="T:GSF.Web.Model.RazorView"/> model instance for this <see cref="T:GSF.Web.Hosting.WebPageController"/>, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebPageController.ModelType">
            <summary>
            Gets or sets the <see cref="T:GSF.Web.Model.RazorView"/> model <see cref="T:System.Type"/> for this <see cref="T:GSF.Web.Hosting.WebPageController"/>, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebPageController.WebServer">
            <summary>
            Gets the <see cref="T:GSF.Web.Hosting.WebServer"/> instance used by this <see cref="T:GSF.Web.Hosting.WebPageController"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageController.GetPage(System.String,System.Threading.CancellationToken)">
            <summary>
            Common page request handler.
            </summary>
            <param name="pageName">Page name to render.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <returns>Rendered page result for given page.</returns>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageController.PostPage(System.String,System.Threading.CancellationToken)">
            <summary>
            Common page post handler.
            </summary>
            <param name="pageName">Page name to render.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <returns>Rendered page result for given page.</returns>
        </member>
        <member name="T:GSF.Web.Hosting.WebPageControllerAppBuilderExtensions">
            <summary>
            Defines extension function for registering <see cref="T:GSF.Web.Hosting.WebPageController"/> in web server pipeline.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageControllerAppBuilderExtensions.UseWebPageController(Owin.IAppBuilder,GSF.Web.Hosting.WebServer,System.String,System.Object,System.Type,GSF.Web.Security.AuthenticationOptions)">
            <summary>
            Registers web page controller in web server pipeline.
            </summary>
            <param name="app">The app builder for the web server pipeline.</param>
            <param name="webServer"><see cref="T:GSF.Web.Hosting.WebServer"/> instance to use for controller.</param>
            <param name="defaultWebPage">The default page to display on the default path.</param>
            <param name="model">Reference to model to use when rendering Razor templates, if any.</param>
            <param name="modelType">Type of <paramref name="model"/>, if any.</param>
            <param name="options">Authentication options for enabling sessions.</param>
        </member>
        <member name="M:GSF.Web.Hosting.WebPageControllerAppBuilderExtensions.GetDependencyResolver(GSF.Web.Hosting.WebServer,System.Object,System.Type)">
            <summary>
            Gets a dependency resolver.
            </summary>
            <param name="webServer"><see cref="T:GSF.Web.Hosting.WebServer"/> instance to use for controller.</param>
            <param name="model">Reference to model to use when rendering Razor templates, if any.</param>
            <param name="modelType">Type of <paramref name="model"/>, if any.</param>
            <returns>Dependency resolver for the specified parameters.</returns>
        </member>
        <member name="T:GSF.Web.Hosting.WebServer">
            <summary>
            Represents the web server engine for <see cref="T:GSF.Web.Hosting.WebPageController"/> instances.
            </summary>
        </member>
        <member name="E:GSF.Web.Hosting.WebServer.ExecutionException">
            <summary>
            Exposes execution exceptions that occur in <see cref="T:GSF.Web.Hosting.WebPageController"/> instances.
            </summary>
        </member>
        <member name="E:GSF.Web.Hosting.WebServer.StatusMessage">
            <summary>
            Exposes status messages that get reported from <see cref="T:GSF.Web.Hosting.WebPageController"/> instances.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebServer.#ctor(GSF.Web.Hosting.WebServerOptions,GSF.Web.Model.IRazorEngine,GSF.Web.Model.IRazorEngine)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
            <param name="options">Web server options to use; set to <c>null</c> for defaults.</param>
            <param name="razorEngineCS">Razor engine instance for .cshtml templates; uses default instance if not provided.</param>
            <param name="razorEngineVB">Razor engine instance for .vbhtml templates; uses default instance if not provided.</param>
        </member>
        <member name="P:GSF.Web.Hosting.WebServer.Options">
            <summary>
            Gets options in use for this <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServer.RazorEngineCS">
            <summary>
            Gets the C# Razor engine instance used by this <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServer.RazorEngineVB">
            <summary>
            Gets the Visual Basic Razor engine instance used by this <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServer.PagedViewModelTypes">
            <summary>
            Defines associated page view model types and data hub types for Razor pages, if any.
            </summary>
            <remarks>
            This dictionary associates Razor views based on a paged view model with associated <see cref="T:System.Type"/> values.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hosting.WebServer.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:GSF.Web.Hosting.WebServer"/> object.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.Web.Hosting.WebServer"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.Web.Hosting.WebServer.RenderResponse(System.Net.Http.HttpRequestMessage,System.String,System.Threading.CancellationToken,System.Object,System.Type,GSF.Data.AdoDataConnection)">
            <summary>
            Renders an HTTP response for a given request.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="pageName">Name of page to render.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <param name="model">Reference to model to use when rendering Razor templates, if any.</param>
            <param name="modelType">Type of <paramref name="model"/>, if any.</param>
            <param name="database"><see cref="T:GSF.Data.AdoDataConnection"/> to use, if any.</param>
            <returns>HTTP response for provided request.</returns>
        </member>
        <member name="P:GSF.Web.Hosting.WebServer.Default">
            <summary>
            Gets default configured web server instance.
            </summary>
        </member>
        <member name="M:GSF.Web.Hosting.WebServer.GetConfiguredServer(System.String,GSF.Web.Model.IRazorEngine,GSF.Web.Model.IRazorEngine)">
            <summary>
            Gets a shared <see cref="T:GSF.Web.Hosting.WebServer"/> instance created based on configured options defined in the specified <paramref name="settingsCategory"/>.
            </summary>
            <param name="settingsCategory">Settings category to use for web server options; defaults to "systemSettings".</param>
            <param name="razorEngineCS">Razor engine instance for .cshtml templates; uses default instance if not provided.</param>
            <param name="razorEngineVB">Razor engine instance for .vbhtml templates; uses default instance if not provided.</param>
            <returns>Shared <see cref="T:GSF.Web.Hosting.WebServer"/> instance created based on configured options.</returns>
        </member>
        <member name="T:GSF.Web.Hosting.WebServerOptions">
            <summary>
            Represents configuration options for a <see cref="T:GSF.Web.Hosting.WebServer"/> instance.
            </summary>
        </member>
        <member name="F:GSF.Web.Hosting.WebServerOptions.DefaultWebRootPath">
            <summary>
            Default value for <see cref="P:GSF.Web.Hosting.WebServerOptions.WebRootPath"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Hosting.WebServerOptions.DefaultClientCacheEnabled">
            <summary>
            Default value for <see cref="P:GSF.Web.Hosting.WebServerOptions.ClientCacheEnabled"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Hosting.WebServerOptions.DefaultMinifyJavascript">
            <summary>
            Default value for <see cref="P:GSF.Web.Hosting.WebServerOptions.MinifyJavascript"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Hosting.WebServerOptions.DefaultMinifyStyleSheets">
            <summary>
            Default value for <see cref="P:GSF.Web.Hosting.WebServerOptions.MinifyStyleSheets"/>.
            </summary>
        </member>
        <member name="F:GSF.Web.Hosting.WebServerOptions.DefaultUseMinifyInDebug">
            <summary>
            Default value for <see cref="P:GSF.Web.Hosting.WebServerOptions.UseMinifyInDebug"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.WebRootPath">
            <summary>
            Gets or sets root path defined for this <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.ClientCacheEnabled">
            <summary>
            Gets or sets flag that determines if cache control is enabled for browser clients; default to <c>true</c>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.MinifyJavascript">
            <summary>
            Gets or sets value that determines if minification should be applied to rendered Javascript files.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.MinifyStyleSheets">
            <summary>
            Gets or sets value that determines if minification should be applied to rendered CSS files.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.UseMinifyInDebug">
            <summary>
            Gets or sets value that determines if minification should be applied when running a Debug build.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.SessionToken">
            <summary>
            Gets or sets the token used for identifying the session ID in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.AuthTestPage">
            <summary>
            Gets or sets the page name used to test user authorization.
            </summary>
            <remarks>
            Page name for web server use will not be prefixed with slash. Any slash
            prefix will automatically be removed during value assignment.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hosting.WebServerOptions.Readonly">
            <summary>
            Gets an immutable version of the web server options.
            </summary>
        </member>
        <member name="T:GSF.Web.Hosting.ReadonlyWebServerOptions">
            <summary>
            Represents an immutable version of <see cref="T:GSF.Web.Hosting.WebServerOptions"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.WebRootPath">
            <summary>
            Gets root path defined for this <see cref="T:GSF.Web.Hosting.WebServer"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.ClientCacheEnabled">
            <summary>
            Gets flag that determines if cache control is enabled for browser clients; default to <c>true</c>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.MinifyJavascript">
            <summary>
            Gets value that determines if minification should be applied to rendered Javascript files.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.MinifyStyleSheets">
            <summary>
            Gets value that determines if minification should be applied to rendered CSS files.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.UseMinifyInDebug">
            <summary>
            Gets value that determines if minification should be applied when running a Debug build.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.SessionToken">
            <summary>
            Gets the token used for identifying the session ID in cookie headers.
            </summary>
        </member>
        <member name="P:GSF.Web.Hosting.ReadonlyWebServerOptions.AuthTestPage">
            <summary>
            Gets the page name used to test user authorization.
            </summary>
            <remarks>
            Page name for web server use will not be prefixed with slash.
            </remarks>
        </member>
        <member name="T:GSF.Web.Hubs.DataContextHubClient">
            <summary>
            Represents a SignalR <see cref="T:Microsoft.AspNet.SignalR.Hub"/> client session instance of a data context.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.DataContextHubClient.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.DataContextHubClient"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.DataContextHubClient.PrimaryKeySessionCache">
            <summary>
            Gets primary key cache for current session.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.DataContextHubClient.GetDataContext(System.String)">
            <summary>
            Gets a new <see cref="T:GSF.Web.Model.DataContext"/> instance for the current SignalR hub session, applying
            any existing primary key caches.
            </summary>
        </member>
        <member name="T:GSF.Web.Hubs.DataContextOperations">
            <summary>
            Represents hub operations for using <see cref="T:GSF.Web.Hubs.DataContextHubClient"/> instances.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.DataContextOperations.#ctor(Microsoft.AspNet.SignalR.Hubs.IHub,System.String,System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.DataContextOperations"/> instance.
            </summary>
            <param name="hub">Parent hub.</param>
            <param name="settingsCategory">Setting category that contains the connection settings.</param>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="P:GSF.Web.Hubs.DataContextOperations.PrimaryKeySessionCache">
            <summary>
            Gets primary key cache for current session.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.DataContextOperations.DataContext">
            <summary>
            Gets a new <see cref="T:GSF.Web.Model.DataContext"/> instance for the current SignalR hub session, applying
            any existing primary key caches.
            </summary>
        </member>
        <member name="T:GSF.Web.Hubs.HubClientBase">
            <summary>
            Represents a base class implementation for <see cref="T:GSF.Web.Hubs.IHubClient"/> implementations.
            </summary>
            <remarks>
            This base class is useful for defining classes that should persist per SignalR session.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientBase.ClientScript">
            <summary>
            Gets reference to SignalR hub client browser DOM functionality.
            </summary>
            <remarks>
            This property can be used to call registered Javascript hub functions.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientBase.HubInstance">
            <summary>
            Gets or sets reference to SignalR hub instance.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientBase.ConnectionID">
            <summary>
            Gets or sets the connection ID of the calling client.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientBase.LogStatusMessageFunction">
            <summary>
            Gets or sets delegate to use to log status messages.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientBase.LogExceptionFunction">
            <summary>
            Gets or sets delegate to use to log exception messages.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientBase.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:GSF.Web.Hubs.HubClientBase"/> object.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.Web.Hubs.HubClientBase"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientBase.LogStatusMessage(System.String,GSF.UpdateType,System.Boolean)">
            <summary>
            Logs a status message to hub client and any provided log status message delegate.
            </summary>
            <param name="message">Message content to log.</param>
            <param name="type">Type of message to log.</param>
            <param name="logToClient">Determines if message should be logged to hub client.</param>
            <remarks>
            When <paramref name="logToClient"/> is <c>true</c>, function will
            call "sendInfoMessage" Javascript hub client function if defined.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientBase.LogException(System.Exception,System.Boolean)">
            <summary>
            Logs an exception to hub client and any provided log exception delegate.
            </summary>
            <param name="ex">Exception to log.</param>
            <param name="logToClient">Determines if message should be logged to hub client.</param>
            <remarks>
            When <paramref name="logToClient"/> is <c>true</c>, function will
            call "sendErrorMessage" Javascript hub client function if defined.
            </remarks>
        </member>
        <member name="T:GSF.Web.Hubs.HubClientOperationsBase`1">
            <summary>
            Represents a base class for SignalR hub operations that need to track session based clients.
            </summary>
            <typeparam name="T">Type of <see cref="T:GSF.Web.Hubs.IHubClient"/> for hub operations.</typeparam>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientOperationsBase`1.#ctor(Microsoft.AspNet.SignalR.Hubs.IHub,System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.HubClientOperationsBase`1"/> instance.
            </summary>
            <param name="hub"></param>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="P:GSF.Web.Hubs.HubClientOperationsBase`1.HubClient">
            <summary>
            Gets instance of hub client for current SignalR session.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientOperationsBase`1.EndSession">
            <summary>
            Disposes any associated <see cref="T:GSF.Web.Hubs.IHubClient"/> when SignalR session is disconnected.
            </summary>
            <remarks>
            This method should be called within implementing SignalR hub when stop is called.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hubs.HubClientOperationsBase`1.EndSession(System.String)">
            <summary>
            Disposes any associated <see cref="T:GSF.Web.Hubs.IHubClient"/> when SignalR session is disconnected.
            </summary>
            <param name="connectionID">SignalR connection ID.</param>
            <remarks>
            This method should be called within implementing SignalR hub when stop is called.
            </remarks>
        </member>
        <member name="T:GSF.Web.Hubs.IHubClient">
            <summary>
            Interface that defines needed operations for hub client implementations.
            </summary>
            <remarks>
            This interface is useful for defining classes that should persist per SignalR session.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.IHubClient.HubInstance">
            <summary>
            Gets or sets reference to SignalR hub instance.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.IHubClient.ConnectionID">
            <summary>
            Gets or sets the connection ID of the calling client.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.IHubClient.LogStatusMessageFunction">
            <summary>
            Gets or sets delegate to use to log status messages.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.IHubClient.LogExceptionFunction">
            <summary>
            Gets or sets delegate to use to log exception messages.
            </summary>
        </member>
        <member name="T:GSF.Web.Hubs.RecordOperationsHub`1">
            <summary>
            Defines a base class for implementing SignalR hubs that need record operations support.
            </summary>
            <typeparam name="T">Type of <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>, typically inheritor.</typeparam>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.#ctor(System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> with the specified logging functions.
            </summary>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.#ctor(System.String,System.Action{System.String,GSF.UpdateType},System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> with the specified <see cref="P:GSF.Web.Hubs.RecordOperationsHub`1.DataContext"/> and logging functions.
            </summary>
            <param name="settingsCategory">Setting category that contains the connection settings.</param>
            <param name="logStatusMessageFunction">Delegate to use to log status messages, if any.</param>
            <param name="logExceptionFunction">Delegate to use to log exceptions, if any.</param>
        </member>
        <member name="P:GSF.Web.Hubs.RecordOperationsHub`1.RecordOperationsCache">
            <summary>
            Gets <see cref="P:GSF.Web.Hubs.IRecordOperationsHub.RecordOperationsCache"/> for SignalR hub.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.RecordOperationsHub`1.DataContext">
            <summary>
            Gets <see cref="T:GSF.Web.Model.DataContext"/> created for this <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> instance.
            </summary>
            <remarks>
            Primary key caches for data context table operations are cached per user session.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.RecordOperationsHub`1.ClientScript">
            <summary>
            Gets reference to SignalR hub client browser DOM functionality.
            </summary>
            <remarks>
            This property can be used to call registered Javascript hub functions.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.RecordOperationsHub`1.ConnectionID">
            <summary>
            Gets active connection ID from current hub context or assigns one to use.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.OnConnected">
            <summary>
            Called when the connection connects to this hub instance.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /></returns>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.OnDisconnected(System.Boolean)">
            <summary>
            Called when a connection disconnects from this hub gracefully or due to a timeout.
            </summary>
            <param name="stopCalled">
            <c>true</c> if stop was called on the client closing the connection gracefully;
            otherwise, <c>false</c>, if the connection has been lost for longer than the
            <see cref="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout" />. Timeouts can be caused
            by clients reconnecting to another SignalR server in scale-out.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /></returns>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.LogStatusMessage(System.String,GSF.UpdateType,System.Boolean)">
            <summary>
            Logs a status message to hub client and any provided log status message delegate.
            </summary>
            <param name="message">Message content to log.</param>
            <param name="type">Type of message to log.</param>
            <param name="logToClient">Determines if message should be logged to hub client.</param>
            <remarks>
            When <paramref name="logToClient"/> is <c>true</c>, function will
            call "sendInfoMessage" Javascript hub client function if defined.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.LogException(System.Exception,System.Boolean)">
            <summary>
            Logs an exception to hub client and any provided log exception delegate.
            </summary>
            <param name="ex">Exception to log.</param>
            <param name="logToClient">Determines if message should be logged to hub client.</param>
            <remarks>
            When <paramref name="logToClient"/> is <c>true</c>, function will
            call "sendErrorMessage" Javascript hub client function if defined.
            </remarks>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.GetConnectionID">
            <summary>
            Gets connection ID for active hub context, if any.
            </summary>
            <returns>Connection ID for active hub context.</returns>
            <remarks>
            This defines a client-side script function to return connection ID for active SignalR hub context.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.RecordOperationsHub`1.ConnectionCount">
            <summary>
            Gets the hub connection count.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsHub`1.GetRecordOperationsCache">
            <summary>
            Gets statically cached instance of <see cref="P:GSF.Web.Hubs.RecordOperationsHub`1.RecordOperationsCache"/> for <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> instances.
            </summary>
            <returns>Statically cached instance of <see cref="P:GSF.Web.Hubs.RecordOperationsHub`1.RecordOperationsCache"/> for <see cref="T:GSF.Web.Hubs.RecordOperationsHub`1"/> instances.</returns>
        </member>
        <member name="T:GSF.Web.Hubs.IRecordOperationsHub">
            <summary>
            Defines an interface for SignalR hubs to indicate support for record operations.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.IRecordOperationsHub.RecordOperationsCache">
            <summary>
            Gets <see cref="P:GSF.Web.Hubs.IRecordOperationsHub.RecordOperationsCache"/> for SignalR hub.
            </summary>
            <remarks>
            Implementors should statically cache instance since reflected cache content will not change.
            </remarks>
        </member>
        <member name="P:GSF.Web.Hubs.IRecordOperationsHub.DataContext">
            <summary>
            Gets <see cref="T:GSF.Web.Model.DataContext"/> created for this <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/> implementation.
            </summary>
        </member>
        <member name="P:GSF.Web.Hubs.IRecordOperationsHub.ConnectionID">
            <summary>
            Gets active connection ID from current hub context or assigns one to use.
            </summary>
        </member>
        <member name="T:GSF.Web.Hubs.RecordOperationsCache">
            <summary>
            Defines class that caches data hub operations.
            </summary>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsCache.#ctor(System.Type)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.RecordOperationsCache"/>.
            </summary>
            <param name="hub">Hub to analyze for record operations.</param>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsCache.GetRecordOperations``1">
            <summary>
            Gets record operation methods for specified modeled table.
            </summary>
            <typeparam name="TModel">Modeled table.</typeparam>
            <returns>record operation methods for specified modeled table.</returns>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsCache.GetRecordOperations(System.Type)">
            <summary>
            Gets record operation methods for specified modeled table type.
            </summary>
            <param name="model">Model type.</param>
            <returns>record operation methods for specified modeled table type.</returns>
        </member>
        <member name="T:GSF.Web.Hubs.RecordOperationsCache`1">
            <summary>
            Defines class that caches data hub operations for the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Specific <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub"/> type for record operations cache.</typeparam>
        </member>
        <member name="M:GSF.Web.Hubs.RecordOperationsCache`1.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Hubs.RecordOperationsCache`1"/>.
            </summary>
        </member>
        <member name="T:GSF.Web.IgnoreServicesSecurityModule">
            <summary>
            Represents an <see cref="T:System.Web.IHttpModule">HTTP module</see> that can be used to enable site-wide role-based security except for WCF services.
            </summary>
        </member>
        <member name="M:GSF.Web.IgnoreServicesSecurityModule.IsAccessSecured(System.String)">
            <summary>
            Determines if access to the requested <paramref name="resource"/> is to be secured.
            </summary>
            <param name="resource">Name of the resource being requested.</param>
            <returns>True if access to the resource is to be secured, otherwise False.</returns>
        </member>
        <member name="T:GSF.Web.Model.DataContext">
            <summary>
            Defines a data context for Razor views.
            </summary>
            <remarks>
            This class is used by views to render HTML form input templates, paged view model configurations,
            provide access to modeled table operations and general database access.
            </remarks>
        </member>
        <member name="F:GSF.Web.Model.DataContext.UrlValidation">
            <summary>
            Defines the regular expression used to validate URLs. 
            </summary>
        </member>
        <member name="M:GSF.Web.Model.DataContext.#ctor(GSF.Data.AdoDataConnection,System.Boolean,GSF.Web.Model.IRazorEngine,System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.DataContext"/>.
            </summary>
            <param name="connection"><see cref="T:GSF.Data.AdoDataConnection"/> to use; defaults to a new connection.</param>
            <param name="disposeConnection">Set to <c>true</c> to dispose the provided <paramref name="connection"/>.</param>
            <param name="razorEngine">Razor engine instance to use for data context; set to <c>null</c> to use default embedded resources instance.</param>
            <param name="exceptionHandler">Delegate to handle exceptions.</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.#ctor(System.String,GSF.Web.Model.IRazorEngine,System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.DataContext"/> using the specified <paramref name="settingsCategory"/>.
            </summary>
            <param name="settingsCategory">Setting category that contains the connection settings.</param>
            <param name="razorEngine">Razor engine instance to use for data context; set to <c>null</c> to use default embedded resources instance.</param>
            <param name="exceptionHandler">Delegate to handle exceptions.</param>
        </member>
        <member name="P:GSF.Web.Model.DataContext.RazorEngine">
            <summary>
            Gets reference to <see cref="T:GSF.Web.Model.IRazorEngine"/> used by this <see cref="T:GSF.Web.Model.DataContext"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.Connection">
            <summary>
            Gets the <see cref="T:GSF.Data.AdoDataConnection"/> for this <see cref="T:GSF.Web.Model.DataContext"/>, creating a new one if needed.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.FieldValidationParameters">
            <summary>
            Gets validation pattern and error message for rendered fields, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.FieldValueInitializers">
            <summary>
            Gets field value initializers, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.ReadonlyHotLinkFields">
            <summary>
            Gets any text input fields that should render clickable URLs and e-mail addresses when in view mode.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.DefinedDateFields">
            <summary>
            Gets defined date fields, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.InitialFocusField">
            <summary>
            Gets field name designated for initial focus.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.AddDateFieldTemplate">
            <summary>
            Gets or sets the date field razor template file name.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.AddInputFieldTemplate">
            <summary>
            Gets or sets the input field razor template file name.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.AddTextAreaFieldTemplate">
            <summary>
            Gets or sets the text area field razor template file name.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.AddSelectFieldTemplate">
            <summary>
            Gets or sets the select field razor template file name.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.AddCheckBoxFieldTemplate">
            <summary>
            Gets or sets the check box field razor template file name.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.CustomTableOperationTokens">
            <summary>
            Gets dictionary of per-model custom tokens to use with <see cref="T:GSF.Data.Model.AmendExpressionAttribute"/> values for <see cref="T:GSF.Data.Model.TableOperations`1"/> in this <see cref="T:GSF.Web.Model.DataContext"/> .
            </summary>
            <remarks>
            The returned dictionary can be used to apply run-time tokens to any defined <see cref="T:GSF.Data.Model.AmendExpressionAttribute"/> values,
            for example, given the following amendment expression applied to a modeled class:
            <code>
            [AmendExpression("TOP {count}", 
                TargetExpression = TargetExpression.FieldList,
                AffixPosition = AffixPosition.Prefix,
                StatementTypes = StatementTypes.SelectSet)]]
            public class MyTable
            {
                string MyField;
            }
            </code>
            The per-model key/value pairs could be set as follows at run-time:
            <code>
            int count = 200;
            dataContext.CustomTableOperationTokens[typeof(MyTable)] = new[] { new KeyValuePair&lt;string, string&gt;("{count}", $"{count}") };
            </code>
            </remarks>        
        </member>
        <member name="P:GSF.Web.Model.DataContext.TableOperationsCache">
            <summary>
            Gets table operations cache for data context.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.DataContext.PrimaryKeySessionCache">
            <summary>
            Gets or sets session based primary key cache of table operations, creating it if needed.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.DataContext.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:GSF.Web.Model.DataContext"/> object.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.DataContext.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.Web.Model.DataContext"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.Table``1">
            <summary>
            Gets the table operations for the specified modeled table <typeparamref name="TModel"/>.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <returns>Table operations for the specified modeled table <typeparamref name="TModel"/>.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.Table(System.Type)">
            <summary>
            Gets the table operations for the specified modeled table type <paramref name="model"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <returns>Table operations for the specified modeled table type <paramref name="model"/>.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.GetPrimaryLabelField``1">
            <summary>
            Gets the field name targeted as the primary label for the modeled table.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <returns>Field name targeted as the primary label for the modeled table.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.GetPrimaryLabelField(System.Type)">
            <summary>
            Gets the field name targeted as the primary label for the modeled table.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <returns>Field name targeted as the primary label for the modeled table.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.GetIsDeletedFlag``1">
            <summary>
            Gets the field name targeted to mark a record as deleted.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <returns>Field name targeted to mark a record as deleted.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.GetIsDeletedFlag(System.Type)">
            <summary>
            Gets the field name targeted to mark a record as deleted.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <returns>Field name targeted to mark a record as deleted.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.UserIsInRole(GSF.Security.SecurityPrincipal,System.String)">
            <summary>
            Determines if user is in a specific role or list of roles (comma separated).
            </summary>
            <param name="securityPrincipal">Principal that provides role-based security.</param>
            <param name="role">Role or comma separated list of roles.</param>
            <returns><c>true</c> if user is in <paramref name="role"/>(s); otherwise, <c>false</c>.</returns>
            <remarks>
            Set to * for any role.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.UserIsInRole(GSF.Security.SecurityPrincipal,System.String[])">
            <summary>
            Determines if user is in one of the provided of roles.
            </summary>
            <param name="securityPrincipal">Security principal that provides role-based security.</param>
            <param name="roles">List of role names.</param>
            <returns><c>true</c> if user is in one of the <paramref name="roles"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.UserIsInGroup(GSF.Security.SecurityPrincipal,System.String)">
            <summary>
            Determines if user is in a specific group or list of groups (comma separated).
            </summary>
            <param name="securityPrincipal">Security principal that provides role-based security.</param>
            <param name="group">Group or comma separated list of groups.</param>
            <returns><c>true</c> if user is in <paramref name="group"/>(s); otherwise, <c>false</c>.</returns>
            <remarks>
            Set to * for any group.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.UserIsInGroup(GSF.Security.SecurityPrincipal,System.String[])">
            <summary>
            Determines if user is in one of the provided of groups.
            </summary>
            <param name="securityPrincipal">Security principal that provides role-based security.</param>
            <param name="groups">List of group names.</param>
            <returns><c>true</c> if user is in one of the <paramref name="groups"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.Net.Http.HttpRequestMessage,System.Object)">
            <summary>
            Configures a simple view with common view bag parameters.
            </summary>
            <param name="request">HTTP request message for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For self-hosted web servers, route ID is passed as a command line parameter, e.g.: myview.cshtml?RouteID=ShowDeleted
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView``2(System.Net.Http.HttpRequestMessage,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <typeparamref name="TModel"/> and SignalR <typeparamref name="THub"/>.
            </summary>
            <param name="request">HTTP request message for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <typeparam name="THub">SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</typeparam>
            <remarks>
            This is normally called from controller before returning view action result.
            For self-hosted web servers, route ID is passed as a command line parameter, e.g.: myview.cshtml?RouteID=ShowDeleted
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.Type,System.Type,System.Net.Http.HttpRequestMessage,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <paramref name="model"/> and SignalR <paramref name="hub"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <param name="hub">Type of SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</param>
            <param name="request">HTTP request message for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For self-hosted web servers, route ID is passed as a command line parameter, e.g.: myview.cshtml?RouteID=ShowDeleted
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.Web.Routing.RequestContext,System.Object)">
            <summary>
            Configures a simple view with common view bag parameters.
            </summary>
            <param name="requestContext">Url.RequestContext for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is the route ID parameter derived from the route data. In many use
            cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView``2(System.Web.Routing.RequestContext,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <typeparamref name="TModel"/> and SignalR <typeparamref name="THub"/>.
            </summary>
            <param name="requestContext">Url.RequestContext for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <typeparam name="THub">SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</typeparam>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is the route ID parameter derived from the route data. In many use
            cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.Type,System.Type,System.Web.Routing.RequestContext,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <paramref name="model"/> and SignalR <paramref name="hub"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <param name="hub">Type of SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</param>
            <param name="requestContext">Url.RequestContext for view used to derive route ID, if any.</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is the route ID parameter derived from the route data. In many use
            cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.String,System.Object)">
            <summary>
            Configures a simple view with common view bag parameters.
            </summary>
            <param name="routeID">Route ID for view, if any (e.g., AddNew or ShowDeleted).</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is what is requested as the <paramref name="routeID"/> parameter. In many
            use cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView``2(System.String,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <typeparamref name="TModel"/> and SignalR <typeparamref name="THub"/>.
            </summary>
            <param name="routeID">Route ID for view, if any (e.g., AddNew or ShowDeleted).</param>
            <param name="viewBag">Current view bag.</param>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <typeparam name="THub">SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</typeparam>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is what is requested as the <paramref name="routeID"/> parameter. In many
            use cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.ConfigureView(System.Type,System.Type,System.String,System.Object)">
            <summary>
            Configures a view establishing user roles based on modeled table <paramref name="model"/> and SignalR <paramref name="hub"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <param name="hub">Type of SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</param>
            <param name="routeID">Route ID for view, if any (e.g., AddNew or ShowDeleted).</param>
            <param name="viewBag">Current view bag.</param>
            <remarks>
            This is normally called from controller before returning view action result.
            For normal MVC views the common route is "{controller}/{action}/{id}", the {id} of
            the route is what is requested as the <paramref name="routeID"/> parameter. In many
            use cases this is a primary key or action value for the page, e.g., "ShowDeleted".
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.EstablishUserRolesForPage``2(System.Object)">
            <summary>
            Looks up proper user roles for paged based on modeled security in <see cref="T:GSF.Web.Hubs.RecordOperationsCache"/>.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <typeparam name="THub">SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</typeparam>
            <param name="viewBag">ViewBag for the current view.</param>
            <remarks>
            Typically used in paged view model scenarios and invoked by controller prior to view rendering.
            Security is controlled at hub level, so failure to call will not impact security but may result
            in screen enabling and/or showing controls that the user does not actually have access to and
            upon attempted use will result in a security error.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.EstablishUserRolesForPage(System.Type,System.Type,System.Object)">
            <summary>
            Looks up proper user roles for paged based on modeled security in <see cref="T:GSF.Web.Hubs.RecordOperationsCache"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <param name="hub">Type of SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</param>
            <param name="viewBag">ViewBag for the current view.</param>
            <remarks>
            Typically used in paged view model scenarios and invoked by controller prior to view rendering.
            Security is controlled at hub level, so failure to call will not impact security but may result
            in screen enabling and/or showing controls that the user does not actually have access to and
            upon attempted use will result in a security error.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.EstablishUserRolesForPage``1(GSF.Web.Hubs.RecordOperationsCache,System.Object)">
            <summary>
            Looks up proper user roles for paged based on modeled security in <see cref="T:GSF.Web.Hubs.RecordOperationsCache"/>.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <param name="cache">Data hub record operations cache.</param>
            <param name="viewBag">ViewBag for the current view.</param>
            <remarks>
            Typically used in paged view model scenarios and invoked by controller prior to view rendering.
            Security is controlled at hub level, so failure to call will not impact security but may result
            in screen enabling and/or showing controls that the user does not actually have access to and
            upon attempted use will result in a security error.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.EstablishUserRolesForPage(System.Type,GSF.Web.Hubs.RecordOperationsCache,System.Object)">
            <summary>
            Looks up proper user roles for paged based on modeled security in <see cref="T:GSF.Web.Hubs.RecordOperationsCache"/>.
            </summary>
            <param name="model">Modeled database table (or view) type.</param>
            <param name="cache">Data hub record operations cache.</param>
            <param name="viewBag">ViewBag for the current view.</param>
            <remarks>
            Typically used in paged view model scenarios and invoked by controller prior to view rendering.
            Security is controlled at hub level, so failure to call will not impact security but may result
            in screen enabling and/or showing controls that the user does not actually have access to and
            upon attempted use will result in a security error.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.RenderViewModelConfiguration``2(System.Object,System.String,System.String,System.Object[])">
            <summary>
            Renders client-side configuration script for paged view model.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <typeparam name="THub">SignalR hub that implements <see cref="T:GSF.Web.Hubs.IRecordOperationsHub"/>.</typeparam>
            <param name="viewBag">ViewBag for the view.</param>
            <param name="defaultSortField">Default sort field name, defaults to first primary key field. Prefix field name with a minus, i.e., '-', to default to descending sort.</param>
            <param name="hubScriptName">Javascript hub name, defaults to camel-cased <typeparamref name="THub"/> type name.</param>
            <param name="parentKeys">Primary keys values of the parent record to load.</param>
            <returns>Rendered paged view model configuration script.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.RenderViewModelConfiguration``1(GSF.Web.Hubs.RecordOperationsCache,System.Object,System.String,System.String,System.String,System.Object[])">
            <summary>
            Renders client-side configuration script for paged view model.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <param name="cache">Data hub record operations cache.</param>
            <param name="viewBag">ViewBag for the view.</param>
            <param name="defaultSortField">Default sort field name, defaults to first primary key field. Prefix field name with a minus, i.e., '-', to default to descending sort.</param>
            <param name="hubClassName">Full class name of hub instance, defaults to "GSF.Web.Security.SecurityHub".</param>
            <param name="hubScriptName">Javascript hub name, defaults to "securityHub".</param>
            <param name="parentKeys">Primary keys values of the parent record to load.</param>
            <returns>Rendered paged view model configuration script.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.RenderLookupFunction``1(System.String,System.String,System.String,System.String)">
            <summary>
            Renders client-side Javascript function for looking up single values from a table.
            </summary>
            <typeparam name="TModel">Modeled database table (or view).</typeparam>
            <param name="valueFieldName">Table field name as defined in the table.</param>
            <param name="keyFieldName">Name of primary key field, defaults to "ID".</param>
            <param name="lookupFunctionName">Name of lookup function, defaults to lookup + <typeparamref name="TModel"/> name + <paramref name="valueFieldName"/> + Value.</param>
            <param name="arrayName">Name of value array, defaults to camel cased <typeparamref name="TModel"/> name + <paramref name="valueFieldName"/> + Values.</param>
            <returns>Client-side Javascript lookup function.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddFieldValidation(System.String,System.String,System.String)">
            <summary>
            Adds a new pattern based validation and option error message to a field.
            </summary>
            <param name="observableFieldReference">Observable field reference (from JS view model).</param>
            <param name="validationPattern">Reg-ex based validation pattern.</param>
            <param name="errorMessage">Optional error message to display when pattern fails.</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddFieldValueInitializer(System.String,System.String)">
            <summary>
            Adds a new field value initializer.
            </summary>
            <param name="fieldName">Field name (as defined in model).</param>
            <param name="initialValueScript">Javascript based initial value for field.</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddFieldValueInitializer``1(System.String)">
            <summary>
            Adds a new field value initializer based on modeled table field attributes.
            </summary>
            <param name="fieldName">Field name (as defined in model).</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddPageDefinedFieldInitialization(System.String,System.String,System.String,System.String)">
            <summary>
            Adds field initialization, and optional validation, from a page-defined (e.g., loaded from database) parameter definition.
            </summary>
            <param name="fieldName">Target field name.</param>
            <param name="initialValue">Javascript based initial value for field.</param>
            <param name="validationPattern">Reg-ex based validation pattern, if any.</param>
            <param name="errorMessage">Optional error message to display when pattern fails.</param>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddReadOnlyHotLinkField(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Renders a read-only field with enabled hot links for a given text input field when in view mode.
            </summary>
            <param name="fieldID">ID of input field.</param>
            <param name="readOnlyDivID">ID of read-only div.</param>
            <param name="fieldName">Field name.</param>
            <param name="isTextArea"><c>true</c> if field is a textarea; otherwise, <c>false</c> for input[type="text"].</param>
            <remarks>
            These fields will be rendered with clickable URL and e-mail addresses when viewing a record and normal text
            when adding or updating a record.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddDateField``1(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Generates template based input date field based on reflected modeled table field attributes.
            </summary>
            <typeparam name="TModel">Modeled table.</typeparam>
            <param name="fieldName">Field name for input date field.</param>
            <param name="inputType">Input field type, defaults to text.</param>
            <param name="fieldLabel">Label name for input date field, pulls from <see cref="T:GSF.ComponentModel.DataAnnotations.LabelAttribute"/> if defined, otherwise defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for input field; defaults to date + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <returns>Generated HTML for new date based input field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddDateField(System.String,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Generates template based input date field based on specified parameters.
            </summary>
            <param name="fieldName">Field name for input date field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="maxLength">Defines maximum input field length.</param>
            <param name="inputType">Input field type, defaults to text.</param>
            <param name="fieldLabel">Label name for input date field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for input field; defaults to date + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <returns>Generated HTML for new date based input field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddInputField``1(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Generates template based input text field based on reflected modeled table field attributes.
            </summary>
            <typeparam name="TModel">Modeled table.</typeparam>
            <param name="fieldName">Field name for input text field.</param>
            <param name="inputType">Input field type, defaults to appropriate model field type.</param>
            <param name="fieldLabel">Label name for input text field, pulls from <see cref="T:GSF.ComponentModel.DataAnnotations.LabelAttribute"/> if defined, otherwise defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for input field; defaults to input + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="enableHotLinks">Enable clickable URLs and e-mail addresses in view mode.</param>
            <returns>Generated HTML for new input field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddInputField(System.String,System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Generates template based input text field based on specified parameters.
            </summary>
            <param name="fieldName">Field name for input text field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="maxLength">Defines maximum input field length.</param>
            <param name="inputType">Input field type, defaults to text.</param>
            <param name="fieldLabel">Label name for input text field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for input field; defaults to input + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="enableHotLinks">Enable clickable URLs and e-mail addresses in view mode.</param>
            <returns>Generated HTML for new input field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddTextAreaField``1(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Generates template based text area field based on reflected modeled table field attributes.
            </summary>
            <typeparam name="TModel">Modeled table.</typeparam>
            <param name="fieldName">Field name for text area field.</param>
            <param name="rows">Number of rows for text area.</param>
            <param name="fieldLabel">Label name for text area field, pulls from <see cref="T:GSF.ComponentModel.DataAnnotations.LabelAttribute"/> if defined, otherwise defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for text area field; defaults to text + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="enableHotLinks">Enable clickable URLs and e-mail addresses in view mode.</param>
            <returns>Generated HTML for new text area field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddTextAreaField(System.String,System.Boolean,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Generates template based text area field based on specified parameters.
            </summary>
            <param name="fieldName">Field name for text area field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="maxLength">Defines maximum text area field length.</param>
            <param name="rows">Number of rows for text area.</param>
            <param name="fieldLabel">Label name for text area field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for text area field; defaults to text + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="enableHotLinks">Enable clickable URLs and e-mail addresses in view mode.</param>
            <returns>Generated HTML for new text area field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddSelectField``2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,GSF.Data.Model.RecordRestriction,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Generates template based select field based on reflected modeled table field attributes.
            </summary>
            <typeparam name="TModel">Modeled table for select field.</typeparam>
            <typeparam name="TOption">Modeled table for option data.</typeparam>
            <param name="fieldName">Field name for value of select field.</param>
            <param name="optionValueFieldName">Field name for ID of option data.</param>
            <param name="optionLabelFieldName">Field name for label of option data, defaults to <paramref name="optionValueFieldName"/></param>
            <param name="optionSortFieldName">Field name for sort order of option data, defaults to <paramref name="optionLabelFieldName"/></param>
            <param name="fieldLabel">Label name for select field, pulls from <see cref="T:GSF.ComponentModel.DataAnnotations.LabelAttribute"/> if defined, otherwise defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for select field; defaults to select + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="optionDataBinding">Data-bind operations to apply to each option value, if any.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="restriction">Record restriction to apply, if any.</param>
            <param name="allowUnset">Flag that determines if select can have no selected value.</param>
            <param name="unsetCaption">Label to show when no value is selected; defaults to "Select value...".</param>
            <param name="addEmptyRow">Flag that determines if an empty row should be added to options list.</param>
            <param name="emptyRowValue">Value to use for empty row; defaults to empty string.</param>
            <param name="showNoRecordOption">Flag that determines if an option representing no records should be shown if select query returns no values.</param>
            <param name="noRecordValue">Value for no records option when select query returns no values; defaults to "-1".</param>
            <param name="noRecordText">Text for no records option when select query returns no values; defaults to "No records".</param>
            <returns>Generated HTML for new text field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddSelectFieldFromEnum``2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Generates template based select field based on reflected modeled enum field attributes.
            </summary>
            <typeparam name="TModel">Modeled table for select field.</typeparam>
            <typeparam name="TOption">Modeled Enum for option data.</typeparam>
            <param name="fieldName">Field name for value of select field.</param>
            <param name="fieldLabel">Label name for select field, pulls from <see cref="T:GSF.ComponentModel.DataAnnotations.LabelAttribute"/> if defined, otherwise defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for select field; defaults to select + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="optionDataBinding">Data-bind operations to apply to each option value, if any.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="allowUnset">Flag that determines if select can have no selected value.</param>
            <param name="unsetCaption">Label to show when no value is selected; defaults to "Select value...".</param>
            <param name="addEmptyRow">Flag that determines if an empty row should be added to options list.</param>
            <param name="emptyRowValue">Value to use for empty row; defaults to empty string.</param>
            <param name="showNoRecordOption">Flag that determines if an option representing no records should be shown if select query returns no values.</param>
            <param name="noRecordValue">Value for no records option when select query returns no values; defaults to "-1".</param>
            <param name="noRecordText">Text for no records option when select query returns no values; defaults to "No records".</param>
            <returns>Generated HTML for new text field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddSelectField``1(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,GSF.Data.Model.RecordRestriction,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Generates template based select field based on specified parameters.
            </summary>
            <typeparam name="TOption">Modeled table for option data.</typeparam>
            <param name="fieldName">Field name for value of select field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="optionValueFieldName">Field name for ID of option data.</param>
            <param name="optionLabelFieldName">Field name for label of option data, defaults to <paramref name="optionValueFieldName"/></param>
            <param name="optionSortFieldName">Field name for sort order of option data, defaults to <paramref name="optionLabelFieldName"/></param>
            <param name="fieldLabel">Label name for select field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for select field; defaults to select + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="optionDataBinding">Data-bind operations to apply to each option value, if any.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="restriction">Record restriction to apply, if any.</param>
            <param name="allowUnset">Flag that determines if select can have no selected value.</param>
            <param name="unsetCaption">Label to show when no value is selected; defaults to "Select value...".</param>
            <param name="addEmptyRow">Flag that determines if an empty row should be added to options list.</param>
            <param name="emptyRowValue">Value to use for empty row; defaults to empty string.</param>
            <param name="showNoRecordOption">Flag that determines if an option representing no records should be shown if select query returns no values.</param>
            <param name="noRecordValue">Value for no records option when select query returns no values; defaults to "-1".</param>
            <param name="noRecordText">Text for no records option when select query returns no values; defaults to "No records".</param>
            <returns>Generated HTML for new text field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddSelectFieldFromEnum``1(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Generates template based select field based on specified parameters.
            </summary>
            <typeparam name="TOption">Modeled enum for option data.</typeparam>
            <param name="fieldName">Field name for value of select field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="fieldLabel">Label name for select field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for select field; defaults to select + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="optionDataBinding">Data-bind operations to apply to each option value, if any.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="allowUnset">Flag that determines if select can have no selected value.</param>
            <param name="unsetCaption">Label to show when no value is selected; defaults to "Select value...".</param>
            <param name="addEmptyRow">Flag that determines if an empty row should be added to options list.</param>
            <param name="emptyRowValue">Value to use for empty row; defaults to empty string.</param>
            <param name="showNoRecordOption">Flag that determines if an option representing no records should be shown if select query returns no values.</param>
            <param name="noRecordValue">Value for no records option when select query returns no values; defaults to "-1".</param>
            <param name="noRecordText">Text for no records option when select query returns no values; defaults to "No records".</param>
            <returns>Generated HTML for new text field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddSelectField``1(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Generates template based select field based on a dictionary of field attributes.
            </summary>
            <typeparam name="TModel">Modeled table for select field.</typeparam>
            <param name="options">Dictionary generated to be used for the options.</param>
            <param name="fieldName">Field name for value of select field.</param>
            <param name="required">Determines if field name is required.</param>
            <param name="fieldLabel">Label name for select field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for select field; defaults to select + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="requiredDataBinding">Boolean data-bind operation to apply to required state, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="optionDataBinding">Data-bind operations to apply to each option value, if any.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <param name="allowUnset">Flag that determines if select can have no selected value.</param>
            <param name="unsetCaption">Label to show when no value is selected; defaults to "Select value...".</param>
            <param name="addEmptyRow">Flag that determines if an empty row should be added to options list.</param>
            <param name="emptyRowValue">Value to use for empty row; defaults to empty string.</param>
            <param name="showNoRecordOption">Flag that determines if an option representing no records should be shown if select query returns no values.</param>
            <param name="noRecordValue">Value for no records option when select query returns no values; defaults to "-1".</param>
            <param name="noRecordText">Text for no records option when select query returns no values; defaults to "No records".</param>
            <returns>Generated HTML for new text field based on specified parameters.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddCheckBoxField``1(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Generates template based check box field based on reflected modeled table field attributes.
            </summary>
            <typeparam name="TModel">Modeled table.</typeparam>
            <param name="fieldName">Field name for value of check box field.</param>
            <param name="fieldLabel">Label name for check box field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for check box field; defaults to check + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <returns>Generated HTML for new check box field based on modeled table field attributes.</returns>
        </member>
        <member name="M:GSF.Web.Model.DataContext.AddCheckBoxField(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Generates template based check box field based on specified parameters.
            </summary>
            <param name="fieldName">Field name for value of check box field.</param>
            <param name="fieldLabel">Label name for check box field, defaults to <paramref name="fieldName"/>.</param>
            <param name="fieldID">ID to use for check box field; defaults to check + <paramref name="fieldName"/>.</param>
            <param name="groupDataBinding">Data-bind operations to apply to outer form-group div, if any.</param>
            <param name="labelDataBinding">Data-bind operations to apply to label, if any.</param>
            <param name="customDataBinding">Extra custom data-binding operations to apply to field, if any.</param>
            <param name="dependencyFieldName">Defines default "enabled" subordinate data-bindings based a single boolean field, e.g., a check-box.</param>
            <param name="toolTip">Tool tip text to apply to field, if any.</param>
            <param name="initialFocus">Use field for initial focus.</param>
            <returns>Generated HTML for new check box field based on specified parameters.</returns>
        </member>
        <member name="T:GSF.Web.Model.ExtendedTemplateBase">
            <summary>
            Represents an extended RazorEngine template base with helper functions.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.ExtendedTemplateBase.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.ExtendedTemplateBase"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase.Html">
            <summary>
            Gets HTML based helper functions.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase.Url">
            <summary>
            Gets URL based helper functions.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase.Context">
            <summary>
            Gets the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.ExtendedTemplateBase`1">
            <summary>
            Represents an extended RazorEngine modeled template base with helper functions.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.ExtendedTemplateBase`1.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.ExtendedTemplateBase"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase`1.Html">
            <summary>
            Gets HTML based helper functions.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase`1.Url">
            <summary>
            Gets URL based helper functions.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.ExtendedTemplateBase`1.Context">
            <summary>
            Gets the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.Handlers.CsvDownloadHandler">
            <summary>
            Handles downloading of modeled table data as a comma-separated value file.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.Handlers.CsvDownloadHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <returns>
            <c>true</c> if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:GSF.Web.Model.Handlers.CsvDownloadHandler.UseClientCache">
            <summary>
            Determines if client cache should be enabled for rendered handler content.
            </summary>
            <remarks>
            If rendered handler content does not change often, the server and client will use the
            <see cref="M:GSF.Web.Hosting.IHostedHttpHandler.GetContentHash(System.Net.Http.HttpRequestMessage)"/> to determine if the client needs to refresh the content.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.Handlers.CsvDownloadHandler.GetContentHash(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets hash of response content based on any <paramref name="request"/> parameters.
            </summary>
            <param name="request">HTTP request message.</param>
            <remarks>
            Value is only used when <see cref="P:GSF.Web.Hosting.IHostedHttpHandler.UseClientCache"/> is <c>true</c>.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.Handlers.CsvDownloadHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="M:GSF.Web.Model.Handlers.CsvDownloadHandler.ProcessRequestAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            Enables processing of HTTP web requests by a custom handler that implements the <see cref="T:GSF.Web.Hosting.IHostedHttpHandler"/> interface.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="response">HTTP response message.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
        </member>
        <member name="F:GSF.Web.Model.Handlers.CsvDownloadHandler.LogExceptionHandler">
            <summary>
            Defines any exception handler for any thrown exceptions.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.HtmlHelper">
            <summary>
            Defines an HTML helper class for <see cref="T:GSF.Web.Model.IRazorEngine"/> views.
            </summary>
            <remarks>
            This class provides Razor view compatibility functions so that the same view syntax, e.g.,
            @Html.Raw(""), can be used in both self-hosted and ASP.NET hosted web sites.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.RequestVerificationToken">
            <summary>
            Generates a hidden form field (anti-forgery token) that is validated when the form is submitted.
            </summary>
            <returns>The generated form field (anti-forgery token).</returns>
            <remarks>
            The anti-forgery token can be used to help protect your application against cross-site request
            forgery. To use this feature, call the RequestVerificationToken method from a form and add the
            <see cref="T:GSF.Web.Security.ValidateRequestVerificationTokenAttribute"/> attribute to the action method that you
            want to protect setting <see cref="P:GSF.Web.Security.ValidateRequestVerificationTokenAttribute.FormValidation"/>
            to <c>true</c>, for example:
            <code>
            [HttpPost]
            [ValidateRequestVerificationToken(FormValidation = true)]
            [SuppressMessage("Security", "SG0016", Justification = "CSRF vulnerability handled via ValidateRequestVerificationToken.")]
            public void ImportData(CancellationToken cancellationToken)
            {
                 PostData postData = Request.GetPostData();
                 string myFieldValue = postData.FormData["MyField"];
            }
            </code>
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.RequestVerificationHeaderToken">
            <summary>
            Generates an anti-forgery token that can be manually added to an HTTP request header,
            e.g., from within an AJAX request.
            </summary>
            <returns>Anti-forgery token to be added as an HTTP header value.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.Raw(System.String)">
            <summary>
            Returns a string value that is not HTML encoded.
            </summary>
            <param name="value">Raw string value to return.</param>
            <returns>Raw string value that is not HTML encoded.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.Partial(System.String,System.Object,System.Type)">
            <summary>
            Includes the template with the specified name.
            </summary>
            <param name="name">The name of the template type in cache.</param>
            <param name="model">The model or NULL if there is no model for the template.</param>
            <param name="modelType"></param>
            <returns>The template writer helper.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.ToAbsoluteUrl(System.String,System.Net.Http.HttpRequestMessage)">
            <summary>
            Converts relative URL to an absolute URL.
            </summary>
            <param name="url">Relative URL.</param>
            <param name="request">Request message.</param>
            <returns>Absolute URL.</returns>
            <remarks>
            If HttpRequestMessage is not specified, function will attempt to find message in ViewBag.Request.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.IncludeUrl(System.String)">
            <summary>
            Includes an HTTP resource directly into view page.
            </summary>
            <param name="url">URL of resource to include.</param>
            <returns>Resolved URL resource as an encoded string.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.IncludeResource(System.String)">
            <summary>
            Includes an embedded resource directly into view page.
            </summary>
            <param name="resourceName">Resource to include.</param>
            <returns>Resource as an encoded string.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.RenderResource(System.String,System.Type,System.Object)">
            <summary>
            Renders a Razor view from an embedded resource.
            </summary>
            <param name="resourceName">Embedded resource name.</param>
            <param name="modelType">Type of model.</param>
            <param name="model">Model instance.</param>
            <returns>Rendered resource as an encoded string.</returns>
        </member>
        <member name="M:GSF.Web.Model.HtmlHelper.RenderResource``1(System.String,``0)">
            <summary>
            Renders a Razor view from an embedded resource.
            </summary>
            <typeparam name="T">Type of model.</typeparam>
            <param name="resourceName">Embedded resource name.</param>
            <param name="model">Model instance.</param>
            <returns>Rendered resource as an encoded string.</returns>
        </member>
        <member name="T:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations">
            <summary>
            Defines an interface for <see cref="T:GSF.Web.Model.HubOperations.DirectoryBrowserOperations"/> to make sure all needed methods
            are implemented in a hub when using the DirectoryBrowserOperations.cshtml view.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations.LoadDirectories(System.String,System.Boolean)">
            <summary>
            Retrieves list of directories from specified <paramref name="rootFolder"/>.
            </summary>
            <param name="rootFolder">Folder to load directories from.</param>
            <param name="showHidden"><c>true</c> to show hidden directories; otherwise, <c>false</c>.</param>
            <returns>List of directories from specified <paramref name="rootFolder"/>.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations.IsLogicalDrive(System.String)">
            <summary>
            Determines if the specified <paramref name="path"/> is a logical drive, e.g., C:\.
            </summary>
            <param name="path">Path to test.</param>
            <returns><c>true</c> if the specified <paramref name="path"/> is a logical drive; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations.ResolvePath(System.String)">
            <summary>
            Resolves the specified <paramref name="path"/> to an absolute full path and expands any environmental variables.
            </summary>
            <param name="path">Path to resolve.</param>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations.CombinePath(System.String,System.String)">
            <summary>
            Combines the specified <paramref name="path1"/> and <paramref name="path2"/> strings into a single path.
            </summary>
            <param name="path1">The first path to combine.</param>
            <param name="path2">The second path to combine.</param>
            <returns>The combined paths.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.IDirectoryBrowserOperations.CreatePath(System.String)">
            <summary>
            Creates all directories and subdirectories in the specified <paramref name="path"/> unless they already exist.
            </summary>
            <param name="path">The directory to create.</param>
        </member>
        <member name="T:GSF.Web.Model.HubOperations.DirectoryBrowserOperations">
            <summary>
            Represents hub based operations for the DirectoryBrowserOperations.cshtml view.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.DirectoryBrowserOperations.LoadDirectories(System.String,System.Boolean)">
            <summary>
            Retrieves list of directories from specified <paramref name="rootFolder"/>.
            </summary>
            <param name="rootFolder">Folder to load directories from.</param>
            <param name="showHidden"><c>true</c> to show hidden directories; otherwise, <c>false</c>.</param>
            <returns>List of directories from specified <paramref name="rootFolder"/>.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.DirectoryBrowserOperations.IsLogicalDrive(System.String)">
            <summary>
            Determines if the specified <paramref name="path"/> is a logical drive, e.g., C:\.
            </summary>
            <param name="path">Path to test.</param>
            <returns><c>true</c> if the specified <paramref name="path"/> is a logical drive; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.DirectoryBrowserOperations.ResolvePath(System.String)">
            <summary>
            Resolves the specified <paramref name="path"/> to an absolute full path and expands any environmental variables.
            </summary>
            <param name="path">Path to resolve.</param>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.DirectoryBrowserOperations.CombinePath(System.String,System.String)">
            <summary>
            Combines the specified <paramref name="path1"/> and <paramref name="path2"/> strings into a single path.
            </summary>
            <param name="path1">The first path to combine.</param>
            <param name="path2">The second path to combine.</param>
            <returns>The combined paths.</returns>
        </member>
        <member name="M:GSF.Web.Model.HubOperations.DirectoryBrowserOperations.CreatePath(System.String)">
            <summary>
            Creates all directories and subdirectories in the specified <paramref name="path"/> unless they already exist.
            </summary>
            <param name="path">The directory to create.</param>
        </member>
        <member name="T:GSF.Web.Model.IRazorEngine">
            <summary>
            Defines an interface for <see cref="T:GSF.Web.Model.RazorEngine`1"/> implementations.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.IRazorEngine.TemplatePath">
            <summary>
            Gets the template path defined for this <see cref="T:GSF.Web.Model.IRazorEngine"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.IRazorEngine.PreCompile(System.Action{System.Exception})">
            <summary>
            Kicks off a task to pre-compile Razor templates.
            </summary>
            <param name="exceptionHandler">Exception handler used to report issues, if any.</param>
        </member>
        <member name="T:GSF.Web.Model.Label">
            <summary>
            Defines a label object for JSON serialized data in dynamic lookups.
            </summary>
            <remarks>
            Useful for creating serialized JSON like "[{ label : "name" }, ...]" that can be used in dynamic lookup lists.
            </remarks>
        </member>
        <member name="F:GSF.Web.Model.Label.label">
            <summary>
            Label value.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.Label.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.Label"/>.
            </summary>
            <param name="label">Label value.</param>
        </member>
        <member name="M:GSF.Web.Model.Label.Create(System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.Label"/> instance.
            </summary>
            <param name="label">Label value.</param>
            <returns>New <see cref="T:GSF.Web.Model.Label"/> instance.</returns>
        </member>
        <member name="T:GSF.Web.Model.IDLabel">
            <summary>
            Defines a ID and label object for JSON serialized data in dynamic lookups.
            </summary>
            <remarks>
            Useful for creating serialized JSON like "[{ id: "value", label : "name" }, ...]" that can be used in dynamic lookup lists.
            </remarks>
        </member>
        <member name="F:GSF.Web.Model.IDLabel.id">
            <summary>
            ID value.
            </summary>
        </member>
        <member name="F:GSF.Web.Model.IDLabel.label">
            <summary>
            Label value.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.IDLabel.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.IDLabel"/>.
            </summary>
            <param name="id">ID value.</param>
            <param name="label">Label value.</param>
        </member>
        <member name="M:GSF.Web.Model.IDLabel.Create(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.IDLabel"/> instance.
            </summary>
            <param name="id">ID value.</param>
            <param name="label">Label value.</param>
            <returns>New <see cref="T:GSF.Web.Model.Label"/> instance.</returns>
        </member>
        <member name="T:GSF.Web.Model.LanguageConstraint">
            <summary>
            Defines a language constraint for a <see cref="T:GSF.Web.Model.RazorEngine`1"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.LanguageConstraint.TargetLanguage">
            <summary>
            Gets target language for the <see cref="T:GSF.Web.Model.LanguageConstraint"/> implementation.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.LanguageConstraint.ResolutionMode">
            <summary>
            Gets resolution mode for <see cref="T:GSF.Web.Model.RazorEngine`1"/> views.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.CSharp">
            <summary>
            Defines a C# based language constraint.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.CSharp.TargetLanguage">
            <summary>
            Gets target language for the <see cref="T:GSF.Web.Model.LanguageConstraint"/> implementation - C#.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.CSharpDebug">
            <summary>
            Defines a C# based language constraint in debug mode.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.CSharpDebug.ResolutionMode">
            <summary>
            Gets resolution mode for <see cref="T:GSF.Web.Model.RazorEngine`1"/> views - watching resolve path for debugging operations.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.CSharpEmbeddedResource">
            <summary>
            Defines a C# based language constraint for embedded resources.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.CSharpEmbeddedResource.ResolutionMode">
            <summary>
            Gets resolution mode for <see cref="T:GSF.Web.Model.RazorEngine`1"/> views - embedded resources.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.VisualBasic">
            <summary>
            Defines a Visual Basic based language constraint.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.VisualBasic.TargetLanguage">
            <summary>
            Gets target language for the <see cref="T:GSF.Web.Model.LanguageConstraint"/> implementation - Visual Basic.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.VisualBasicDebug">
            <summary>
            Defines a Visual Basic based language constraint in debug mode.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.VisualBasicDebug.ResolutionMode">
            <summary>
            Gets resolution mode for <see cref="T:GSF.Web.Model.RazorEngine`1"/> views - watching resolve path for debugging operations.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.VisualBasicEmbeddedResource">
            <summary>
            Defines a Visual Basic based language constraint for embedded resources.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.VisualBasicEmbeddedResource.ResolutionMode">
            <summary>
            Gets resolution mode for <see cref="T:GSF.Web.Model.RazorEngine`1"/> views - embedded resources.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.NamespaceDoc">
            <summary>
            Contains classes that provide functionality for MVC style modeled table operations.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.RazorEngine`1">
            <summary>
            Defines a Razor engine instance for the specified <typeparamref name="TLanguage"/> constraint.
            </summary>
            <typeparam name="TLanguage"><see cref="T:GSF.Web.Model.LanguageConstraint"/> for the Razor engine.</typeparam>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.RazorEngine`1"/> instance.
            </summary>
            <param name="templatePath">Template path for view files.</param>
        </member>
        <member name="P:GSF.Web.Model.RazorEngine`1.TemplatePath">
            <summary>
            Gets the template path defined for this <see cref="T:GSF.Web.Model.RazorEngine`1"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorEngine`1.EngineService">
            <summary>
            Gets the <see cref="T:RazorEngine.Templating.IRazorEngineService"/> instance used by the <see cref="T:GSF.Web.Model.RazorEngine`1"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:GSF.Web.Model.RazorEngine`1"/> object.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GSF.Web.Model.RazorEngine`1"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.GetKey(System.String,RazorEngine.Templating.ResolveType,RazorEngine.Templating.ITemplateKey)">
            <summary>
            Gets a given key from the <see cref="T:RazorEngine.Templating.ITemplateManager" /> implementation. See <see cref="M:RazorEngine.Templating.ITemplateManager.GetKey(System.String,RazorEngine.Templating.ResolveType,RazorEngine.Templating.ITemplateKey)" />.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.IsTemplateCached(RazorEngine.Templating.ITemplateKey,System.Type)">
            <summary>Checks if a given template is already cached.</summary>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.AddTemplate(RazorEngine.Templating.ITemplateKey,RazorEngine.Templating.ITemplateSource)">
            <summary>
            Adds a given template to the template manager as dynamic template.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.Compile(RazorEngine.Templating.ITemplateKey,System.Type)">
            <summary>
            Compiles the specified template and caches it.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.Compile(System.String,System.Type)">
            <summary>
            Compiles the specified template, by name, and caches it.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.RunCompile(RazorEngine.Templating.ITemplateKey,System.IO.TextWriter,System.Type,System.Object,RazorEngine.Templating.DynamicViewBag)">
            <summary>
            Runs the given cached template. When the cache does not contain the template it will be compiled and cached beforehand.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.Run(RazorEngine.Templating.ITemplateKey,System.IO.TextWriter,System.Type,System.Object,RazorEngine.Templating.DynamicViewBag)">
            <summary>
            Runs the given cached template.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.PreCompile(System.Action{System.Exception})">
            <summary>
            Kicks off a task to pre-compile Razor templates.
            </summary>
            <param name="exceptionHandler">Exception handler used to report issues, if any.</param>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.PreCompile(System.Action{System.Exception},System.String)">
            <summary>
            Kicks off a task to pre-compile Razor templates.
            </summary>
            <param name="exceptionHandler">Exception handler used to report issues, if any.</param>
            <param name="templatePath">Template path is use; otherwise, set to <c>null</c> to use default path.</param>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.PreCompile(System.Type,System.Action{System.Exception},System.String)">
            <summary>
            Kicks off a task to pre-compile Razor templates.
            </summary>
            <param name="modelType">The type of the model used for the application.</param>
            <param name="exceptionHandler">Exception handler used to report issues, if any.</param>
            <param name="templatePath">Template path is use; otherwise, set to <c>null</c> to use default path.</param>
        </member>
        <member name="P:GSF.Web.Model.RazorEngine`1.Default">
            <summary>
            Gets default configured razor engine instance.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorEngine`1.GetConfiguredEngine(System.String)">
            <summary>
            Gets a shared <see cref="T:GSF.Web.Model.RazorEngine`1"/> instance created based on configured template path defined in the specified <paramref name="settingsCategory"/>.
            </summary>
            <param name="settingsCategory">Settings category to use for template path settings; defaults to "systemSettings".</param>
            <returns>Shared <see cref="T:GSF.Web.Model.RazorEngine`1"/> instance created based on configured template path.</returns>
        </member>
        <member name="T:GSF.Web.Model.RazorViewResolutionMode">
            <summary>
            Defines resolutions modes for Razor view template files.
            </summary>
        </member>
        <member name="F:GSF.Web.Model.RazorViewResolutionMode.ResolvePath">
            <summary>
            Resolves template files from a path.
            </summary>
        </member>
        <member name="F:GSF.Web.Model.RazorViewResolutionMode.WatchingResolvePath">
            <summary>
            Resolves template files from a path and watches for changes.
            </summary>
            <remarks>
            This should only be used in debug mode.
            </remarks>
        </member>
        <member name="F:GSF.Web.Model.RazorViewResolutionMode.EmbeddedResource">
            <summary>
            Resolves template files from an embedded resource.
            </summary>
        </member>
        <member name="T:GSF.Web.Model.UrlHelper">
            <summary>
            Defines a URL help class for <see cref="T:GSF.Web.Model.IRazorEngine"/> views.
            </summary>
            <remarks>
            This class provides Razor view compatibility functions so that the same view syntax, e.g.,
            @Url.Content(""), can be used in both self-hosted and ASP.NET hosted web sites.
            </remarks>
        </member>
        <member name="M:GSF.Web.Model.UrlHelper.Content(System.String)">
            <summary>
            Returns a string that contains a content URL.
            </summary>
            <param name="contentPath">The content path.</param>
            <returns>A string that contains a content URL.</returns>
        </member>
        <member name="M:GSF.Web.Model.UrlHelper.Encode(System.String)">
            <summary>
            Encodes special characters in a URL string into character-entity equivalents.
            </summary>
            <returns>An encoded URL string.</returns>
            <param name="url">The text to encode.</param>
        </member>
        <member name="T:GSF.Web.Model.RazorView">
            <summary>
            Defines a view class for data context based Razor template implementations.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorView.#ctor(GSF.Web.Model.IRazorEngine,System.String,System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.RazorView"/>.
            </summary>
            <param name="razorEngine"><see cref="T:GSF.Web.Model.IRazorEngine"/> instance to use.</param>
            <param name="templateName">Name of template file, typically a .cshtml or .vbhtml file.</param>
            <param name="exceptionHandler">Delegate to handle exceptions, if any.</param>
        </member>
        <member name="M:GSF.Web.Model.RazorView.#ctor(GSF.Web.Model.IRazorEngine,System.String,System.Object,System.Type,System.Type,System.Type,GSF.Data.AdoDataConnection,System.Action{System.Exception},GSF.Web.Hosting.ReadonlyWebServerOptions)">
            <summary>
            Creates a new <see cref="T:GSF.Web.Model.RazorView"/>.
            </summary>
            <param name="razorEngine"><see cref="T:GSF.Web.Model.IRazorEngine"/> instance to use.</param>
            <param name="templateName">Name of template file, typically a .cshtml or .vbhtml file.</param>
            <param name="model">Reference to model to use when rendering template.</param>
            <param name="modelType">Type of <paramref name="model"/>.</param>
            <param name="pagedViewModelDataType">Type of data class for views based on paged view model, if any.</param>
            <param name="pagedViewModelHubType">Type of SignalR hub for views based on paged view model, if any.</param>
            <param name="database"><see cref="T:GSF.Data.AdoDataConnection"/> to use, if any.</param>
            <param name="exceptionHandler">Delegate to handle exceptions, if any.</param>
            <param name="webServerOptions">Web server options currently in use.</param>
        </member>
        <member name="P:GSF.Web.Model.RazorView.TemplateName">
            <summary>
            Gets or sets name of template file.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.Model">
            <summary>
            Gets or sets reference to model to use when rendering template.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.ModelType">
            <summary>
            Gets or sets type of <see cref="P:GSF.Web.Model.RazorView.Model"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.PagedViewModelDataType">
            <summary>
            Gets or sets type of data model for views based on paged view model.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.PagedViewModelHubType">
            <summary>
            Gets or sets type of SignalR hub for views based on paged view model.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.ViewBag">
            <summary>
            Gets reference to view bag used when rendering template.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.Item(System.String)">
            <summary>
            Gets query string parameter specified by <paramref name="key"/>.
            </summary>
            <param name="key">Name of query string parameter to retrieve.</param>
            <returns>Query string parameter specified by <paramref name="key"/>.</returns>
        </member>
        <member name="P:GSF.Web.Model.RazorView.Parameters">
            <summary>
            Gets a dictionary of query string parameters passed to rendered view.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.RazorEngine">
            <summary>
            Gets reference to <see cref="T:GSF.Web.Model.IRazorEngine"/> used by this <see cref="T:GSF.Web.Model.RazorView"/>.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.Database">
            <summary>
            Gets or sets database connection to provide to <see cref="T:GSF.Web.Model.DataContext"/>, if any.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.ExceptionHandler">
            <summary>
            Gets or sets delegate used to handle exceptions.
            </summary>
        </member>
        <member name="P:GSF.Web.Model.RazorView.DataContextEngine">
            <summary>
            Gets or sets <see cref="T:GSF.Web.Model.IRazorEngine"/> to use for the <see cref="T:GSF.Web.Model.DataContext"/> provided to the view; defaults to <c>null</c>.
            </summary>
            <remarks>
            This should typically not be changed. When value is <c>null</c>, the data context will use the default
            <see cref="T:GSF.Web.Model.RazorEngine`1"/> instance for <see cref="T:GSF.Web.Model.CSharpEmbeddedResource"/> which is used
            to generate template based HTML input fields for a view. The default HTML input templates are defined
            as embedded resources in GSF.Web.
            </remarks>
        </member>
        <member name="P:GSF.Web.Model.RazorView.WebServerOptions">
            <summary>
            Gets or sets the web server options currently in use.
            </summary>
        </member>
        <member name="M:GSF.Web.Model.RazorView.Execute">
            <summary>
            Compiles and executes view template.
            </summary>
            <returns>Rendered result.</returns>
        </member>
        <member name="M:GSF.Web.Model.RazorView.Execute(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
            <summary>
            Compiles and executes view template for specified request message and post data.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="response">HTTP response message.</param>
            <returns>Rendered result.</returns>
        </member>
        <member name="M:GSF.Web.Model.RazorView.ExecuteAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            Asynchronously compiles and executes view template for specified request message and post data.
            </summary>
            <param name="request">HTTP request message.</param>
            <param name="response">HTTP response message.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <returns>Task that will provide rendered result.</returns>
        </member>
        <member name="T:GSF.Web.NamespaceDoc">
            <summary>
            Contains classes and extension functions related to .NET web enabled platforms such as ASP.NET and WCF.
            </summary>
        </member>
        <member name="T:GSF.Web.PostData">
            <summary>
            Represents parsed HTTP post data from multi-part form data.
            </summary>
        </member>
        <member name="M:GSF.Web.PostData.#ctor">
            <summary>
            Creates a new <see cref="T:GSF.Web.PostData"/> instance.
            </summary>
        </member>
        <member name="P:GSF.Web.PostData.FormData">
            <summary>
            Gets any form data passed as part of the multi-part form data.
            </summary>
        </member>
        <member name="P:GSF.Web.PostData.FileData">
            <summary>
            Gets any uploaded file data passed as part of the multi-part form data.
            </summary>
        </member>
        <member name="T:GSF.Web.SecurityModule">
            <summary>
            Represents an <see cref="T:System.Web.IHttpModule">HTTP module</see> that can be used to enable site-wide role-based security.
            </summary>
            <example>
            Required config file entries:
            <code>
            <![CDATA[
            <?xml version="1.0"?>
            <configuration>
              <configSections>
                <section name="categorizedSettings" type="GSF.Configuration.CategorizedSettingsSection, GSF.Core" />
              </configSections>
              <categorizedSettings>
                <securityProvider>
                  <add name="ApplicationName" value="" description="Name of the application being secured as defined in the backend security datastore."
                    encrypted="false" />
                  <add name="ConnectionString" value="" description="Connection string to be used for connection to the backend security datastore."
                    encrypted="false" />
                  <add name="ProviderType" value="GSF.Security.LdapSecurityProvider, GSF.Security"
                    description="The type to be used for enforcing security." encrypted="false" />
                  <add name="IncludedResources" value="*/*.*=*" description="Semicolon delimited list of resources to be secured along with role names."
                    encrypted="false" />
                  <add name="ExcludedResources" value="*/WebResource.axd*;*/SecurityPortal.aspx*"
                    description="Semicolon delimited list of resources to be excluded from being secured."
                    encrypted="false" />
                  <add name="NotificationSmtpServer" value="localhost" description="SMTP server to be used for sending out email notification messages."
                    encrypted="false" />
                  <add name="NotificationSenderEmail" value="sender@company.com" description="Email address of the sender of email notification messages." 
                    encrypted="false" />
                </securityProvider>
                <activeDirectory>
                  <add name="PrivilegedDomain" value="" description="Domain of privileged domain user account."
                    encrypted="false" />
                  <add name="PrivilegedUserName" value="" description="Username of privileged domain user account."
                    encrypted="false" />
                  <add name="PrivilegedPassword" value="" description="Password of privileged domain user account."
                    encrypted="true" />
                </activeDirectory>
              </categorizedSettings>
              <system.web>
                <authentication mode="Windows"/>
                <httpModules>
                  <add name="SecurityModule" type="GSF.Web.SecurityModule, GSF.Web" />
                </httpModules>
              </system.web>
            </configuration>
            ]]>
            </code>
            </example>
            <seealso cref="T:GSF.Security.ISecurityProvider"/>
        </member>
        <member name="T:GSF.Web.SecurityModule.SessionEnabledHandler">
            <summary>
            A handler used to force the SessionStateModule to load session state.
            </summary>
        </member>
        <member name="M:GSF.Web.SecurityModule.SessionEnabledHandler.#ctor(System.Web.IHttpHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:GSF.Web.SecurityModule.SessionEnabledHandler"/> class.
            </summary>
            <param name="originalHandler">The original handler object.</param>
        </member>
        <member name="M:GSF.Web.SecurityModule.SessionEnabledHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            This method will never get called.
            </summary>
        </member>
        <member name="P:GSF.Web.SecurityModule.SessionEnabledHandler.IsReusable">
            <summary>
            Returns false since class has a member.
            </summary>
        </member>
        <member name="P:GSF.Web.SecurityModule.Application">
            <summary>
            Gets the current <see cref="T:System.Web.HttpApplication"/> instance.
            </summary>
        </member>
        <member name="M:GSF.Web.SecurityModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the <see cref="T:GSF.Web.SecurityModule"/>.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:GSF.Web.SecurityModule.Dispose">
            <summary>
            Releases the resources used by <see cref="T:GSF.Web.SecurityModule"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.SecurityModule.Redirect(System.Net.HttpStatusCode)">
            <summary>
            Redirects the client browser based on the specified <paramref name="httpStatusCode"/>
            </summary>
            <param name="httpStatusCode"><see cref="T:System.Net.HttpStatusCode"/> to be used for the redirect.</param>
        </member>
        <member name="M:GSF.Web.SecurityModule.GetResourceName">
            <summary>
            Gets the name of resource being accessed.
            </summary>
            <returns><see cref="P:System.Web.HttpApplication.Request"/>.<see cref="P:System.Web.HttpRequest.Url"/>.<see cref="P:System.Uri.PathAndQuery"/> property value.</returns>
        </member>
        <member name="M:GSF.Web.SecurityModule.IsAccessRestricted">
            <summary>
            Determines if access to the requested resource is restricted by <see cref="T:GSF.Security.RestrictAccessAttribute"/>.
            </summary>
            <returns>true if access to the requested resource is restricted, otherwise false.</returns>
        </member>
        <member name="M:GSF.Web.SecurityModule.IsAccessSecured(System.String)">
            <summary>
            Determines if access to the requested <paramref name="resource"/> is to be secured.
            </summary>
            <param name="resource">Name of the resource being requested.</param>
            <returns>True if access to the resource is to be secured, otherwise False.</returns>
        </member>
        <member name="T:GSF.Web.UI.MsgBoxStyle">
            <summary>
            Specifies the buttons to be displayed in a message box.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.OKOnly">
            <summary>
            OK Button.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.OKCancel">
            <summary>
            OK and Cancel buttons.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.AbortRetryIgnore">
            <summary>
            Abort,Retry, and Ignore buttons.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.YesNoCancel">
            <summary>
            Yes, No, and Cancel buttons.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.YesNo">
            <summary>
            Yes and No buttons.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.RetryCancel">
            <summary>
            Retry and Cancel buttons.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.Critical">
            <summary>
            Critical message.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.Question">
            <summary>
            Warning query.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.Exclamation">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.Information">
            <summary>
            Information message.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.DefaultButton1">
            <summary>
            First button is default.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.DefaultButton2">
            <summary>
            Second button is default.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.DefaultButton3">
            <summary>
            Third button is default.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.DefaultButton4">
            <summary>
            Fourth button is default.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.ApplicationModal">
            <summary>
            Application modal message box.
            </summary>
        </member>
        <member name="F:GSF.Web.UI.MsgBoxStyle.SystemModal">
            <summary>
            System modal message box.
            </summary>
        </member>
        <member name="T:GSF.Web.UI.ClientSideExtensions">
            <summary>
            Defines javascript client-side extensions for web controls.
            </summary>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.JavaScriptEncode(System.String@)">
            <summary>
            Performs JavaScript encoding on given string.
            </summary>
            <param name="text">The string to be encoded.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.JavaScriptDecode(System.String@)">
            <summary>
            Decodes JavaScript characters from given string.
            </summary>
            <param name="text">The string to be decoded.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.SetDefaultButton(System.Web.UI.WebControls.TextBox,System.Web.UI.Control)">
            <summary>
            Registers a default button to be activated when the ENTER key is pressed inside this <paramref name="textbox"/>.
            </summary>
            <param name="textbox"><see cref="T:System.Web.UI.WebControls.TextBox"/> for which the default button is to be registered.</param>
            <param name="control">Button <see cref="T:System.Web.UI.Control"/> to be assigned as the default action handler.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.SetSubmitOnce(System.Web.UI.WebControls.Button)">
            <summary>
            Registers the <paramref name="button"/> to be disabled after one click to prevent multiple postbacks.
            </summary>
            <param name="button"><see cref="T:System.Web.UI.WebControls.Button"/> for which submit once script is to be registered.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.BringToFront(System.Web.UI.Page)">
            <summary>
            Brings the <paramref name="page"/>'s browser window to the foreground.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> to be brought to the foreground.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.PushToBack(System.Web.UI.Page)">
            <summary>
            Pushes the <paramref name="page"/>'s browser window to the background.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> to be pushed to the background.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Refresh(System.Web.UI.Page,System.Boolean)">
            <summary>
            Registers this <paramref name="page"/> to perform a page refresh.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> to refresh.</param>
            <param name="refreshOnLoad">Refreshes the <paramref name="page"/> after the page content has loaded.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Refresh(System.Web.UI.Control)">
            <summary>
            Registers the <paramref name="control"/> to perform a page refresh.
            </summary>
            <param name="control"><see cref="T:System.Web.UI.Control"/> that will perform a page refresh when clicked.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Show(System.Web.UI.Page,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a modeless popup window for the specified web page <paramref name="url"/> when the <paramref name="page"/> has loaded.
            </summary>
            <param name="page"><see name="Page"/> that will show the popup window when loaded.</param>
            <param name="url">Web page url for which the popup windows is to be shown.</param>
            <param name="height">Height of the popup window.</param>
            <param name="width">Width of the popup window.</param>
            <param name="left">Location of the popup window on X-axis.</param>
            <param name="top">Location of the popup window on Y-axis.</param>
            <param name="center">True if the popup window is to be centered, otherwise False.</param>
            <param name="help">True if help button is to be displayed, otherwise False.</param>
            <param name="resizable">True if the popup window can be resized, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Show(System.Web.UI.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a modeless popup window for the specified web page <paramref name="url"/> when the <paramref name="control"/> is clicked.
            </summary>
            <param name="control"><see name="Control"/> that will show the popup window when clicked.</param>
            <param name="url">Web page url for which the popup windows is to be shown.</param>
            <param name="height">Height of the popup window.</param>
            <param name="width">Width of the popup window.</param>
            <param name="left">Location of the popup window on X-axis.</param>
            <param name="top">Location of the popup window on Y-axis.</param>
            <param name="center">True if the popup window is to be centered, otherwise False.</param>
            <param name="help">True if help button is to be displayed, otherwise False.</param>
            <param name="resizable">True if the popup window can be resized, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.ShowDialog(System.Web.UI.Page,System.String,System.Web.UI.Control,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a modal popup window for the specified web page <paramref name="url"/> when the <paramref name="page"/> has loaded.
            </summary>
            <param name="page">Web page that will show the popup window when loaded.</param>
            <param name="url">Web page url for which the popup windows is to be shown.</param>
            <param name="dialogResultHolder"><see cref="T:System.Web.UI.Control"/> whose text is to updated with the text returned by the web page displayed in the popup window.</param>
            <param name="height">Height of the popup window.</param>
            <param name="width">Width of the popup window.</param>
            <param name="left">Location of the popup window on X-axis.</param>
            <param name="top">Location of the popup window on Y-axis.</param>
            <param name="center">True if the popup window is to be centered, otherwise False.</param>
            <param name="help">True if help button is to be displayed, otherwise False.</param>
            <param name="resizable">True if the popup window can be resized, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.ShowDialog(System.Web.UI.Control,System.String,System.Web.UI.Control,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a modal popup window for the specified web page <paramref name="url"/> when the <paramref name="control"/> is clicked.
            </summary>
            <param name="control"><see cref="T:System.Web.UI.Control"/> that will show the popup window when clicked.</param>
            <param name="url">Web page url for which the popup windows is to be shown.</param>
            <param name="dialogResultHolder"><see cref="T:System.Web.UI.Control"/> whose text is to updated with the text returned by the web page displayed in the popup window.</param>
            <param name="height">Height of the popup window.</param>
            <param name="width">Width of the popup window.</param>
            <param name="left">Location of the popup window on X-axis.</param>
            <param name="top">Location of the popup window on Y-axis.</param>
            <param name="center">True if the popup window is to be centered, otherwise False.</param>
            <param name="help">True if help button is to be displayed, otherwise False.</param>
            <param name="resizable">True if the popup window can be resized, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.ShowPopup(System.Web.UI.Page,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a popup for the specified web page <paramref name="url"/> when the <paramref name="page"/> has loaded.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> that will show the popup when loaded.</param>
            <param name="url">Web page url for which the popup is to be shown.</param>
            <param name="height">Height of the popup.</param>
            <param name="width">Width of the popup.</param>
            <param name="left">Location of the popup on X-axis.</param>
            <param name="top">Location of the popup on Y-axis.</param>
            <param name="center">True if the popup is to be centered, otherwise False.</param>
            <param name="resizable">True if the popup can be resized, otherwise False.</param>
            <param name="scrollbars">True is the scrollbars are to be displayed, otherwise False.</param>
            <param name="toolbar">True if the toolbar is to be displayed, otherwise False.</param>
            <param name="menubar">True if the menu bar is to be displayed, otherwise False.</param>
            <param name="location">True if the address bar is to be displayed, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
            <param name="directories">True if the directories buttons (Netscape only) are to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.ShowPopup(System.Web.UI.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a popup for the specified web page <paramref name="url"/> when the <paramref name="control"/> is clicked.
            </summary>
            <param name="control"><see cref="T:System.Web.UI.Control"/> that will show the popup when clicked.</param>
            <param name="url">Web page url for which the popup is to be shown.</param>
            <param name="height">Height of the popup.</param>
            <param name="width">Width of the popup.</param>
            <param name="left">Location of the popup on X-axis.</param>
            <param name="top">Location of the popup on Y-axis.</param>
            <param name="center">True if the popup is to be centered, otherwise False.</param>
            <param name="resizable">True if the popup can be resized, otherwise False.</param>
            <param name="scrollbars">True is the scrollbars are to be displayed, otherwise False.</param>
            <param name="toolbar">True if the toolbar is to be displayed, otherwise False.</param>
            <param name="menubar">True if the menu bar is to be displayed, otherwise False.</param>
            <param name="location">True if the address bar is to be displayed, otherwise False.</param>
            <param name="status">True if the status bar is to be displayed, otherwise False.</param>
            <param name="directories">True if the directories buttons (Netscape only) are to be displayed, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Close(System.Web.UI.Page,System.String)">
            <summary>
            Closes the current <paramref name="page"/> when it has finished loading in the browser and returns the specified <paramref name="returnValue"/> to the web page that opened it.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> to be closed.</param>
            <param name="returnValue">Value to be returned to the parent web page.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.Close(System.Web.UI.Control,System.String)">
            <summary>
            Closes the current page when the <paramref name="control"/> is clicked and returns the specified <paramref name="returnValue"/> to the web page that opened it.
            </summary>
            <param name="control"><see cref="T:System.Web.UI.Control"/> that will close the current web page when clicked.</param>
            <param name="returnValue">Value to be returned to the parent web page.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.MsgBox(System.Web.UI.Page,System.String,System.String,GSF.Web.UI.MsgBoxStyle,System.Boolean)">
            <summary>
            Shows a windows application style message box when the <paramref name="page"/> has loaded.
            </summary>
            <param name="page"><see cref="T:System.Web.UI.Page"/> that will show the message box when loaded.</param>
            <param name="prompt">Text that is to be displayed in the message box.</param>
            <param name="title">Title of the message box.</param>
            <param name="buttons">Buttons to be displayed in the message box.</param>
            <param name="doPostBack">True if a post-back is to be performed when either OK, Retry, or Yes buttons are clicked in the message box, otherwise False.</param>
        </member>
        <member name="M:GSF.Web.UI.ClientSideExtensions.MsgBox(System.Web.UI.Control,System.String,System.String,GSF.Web.UI.MsgBoxStyle,System.Boolean)">
            <summary>
            Shows a windows application style message box when the <paramref name="control"/> is clicked.
            </summary>
            <param name="control"><see cref="T:System.Web.UI.Control"/> that will show the message box when clicked.</param>
            <param name="prompt">Text that is to be displayed in the message box.</param>
            <param name="title">Title of the message box.</param>
            <param name="buttons">Buttons to be displayed in the message box.</param>
            <param name="doPostBack">True if a post-back is to be performed when either OK, Retry, or Yes buttons are clicked in the message box, otherwise False.</param>
        </member>
        <member name="T:GSF.Web.WebExtensions">
            <summary>
            Defines extension methods useful for web applications.
            </summary>
        </member>
        <member name="F:GSF.Web.WebExtensions.PostDataKey">
            <summary>
            Key name for <see cref="P:System.Net.Http.HttpRequestMessage.Properties"/> dictionary used to cache parsed <see cref="T:GSF.Web.PostData"/>.
            </summary>
        </member>
        <member name="M:GSF.Web.WebExtensions.JavaScriptEncode(System.String)">
            <summary>
            Performs JavaScript encoding on given string.
            </summary>
            <param name="text">The string to be encoded.</param>
        </member>
        <member name="M:GSF.Web.WebExtensions.HtmlEncode(System.String)">
            <summary>
            Performs HTML encoding on the given string.
            </summary>
            <param name="text">The string to be encoded.</param>
        </member>
        <member name="M:GSF.Web.WebExtensions.UrlEncode(System.String)">
            <summary>
            Performs URL encoding on the given string.
            </summary>
            <param name="text">The string to be encoded.</param>
        </member>
        <member name="M:GSF.Web.WebExtensions.ParseJsonTimestamp(System.String)">
            <summary>
            Parses a JSON timestamp into a .NET <see cref="T:System.DateTime"/>.
            </summary>
            <param name="timestamp">JSON timestamp.</param>
            <returns>.NET <see cref="T:System.DateTime"/> parsed from JSON <paramref name="timestamp"/>.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.FixForwardSpacing(System.String,System.Int32,System.Boolean)">
            <summary>
            Corrects script alignment with a desired number of forward spaces.
            </summary>
            <param name="script">Script text.</param>
            <param name="spaces">Desired forward spaces.</param>
            <param name="forceFixed">Determines if exact forward spacing should forced on each line - when true, existing hierarchy will not be preserved.</param>
            <returns>Script with corrected forward alignment.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.AddBasicAuthenticationHeader(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Adds basic authentication header to an <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
            <param name="client"><see cref="T:System.Net.Http.HttpClient"/> instance to add authentication header.</param>
            <param name="userName">User name for basic authentication.</param>
            <param name="password">Password for basic authentication.</param>
        </member>
        <member name="M:GSF.Web.WebExtensions.QueryParameters(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets query parameters for current request message
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.GetPostData(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets a collection of uploaded post data from an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> request data that contains form data and/or uploaded files.</param>
            <returns>Parsed post data.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.GetPostDataAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets a collection of uploaded post data from an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> request data that contains form data and/or uploaded files.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Parsed post data.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.ToAbsoluteUrl(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Converts relative URL to an absolute URL.
            </summary>
            <param name="helper">MVC HTML helper instance.</param>
            <param name="url">Relative URL.</param>
            <returns>Absolute URL.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.IncludeUrl(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Includes an HTTP resource directly into an MVC view page.
            </summary>
            <param name="helper">MVC HTML helper instance.</param>
            <param name="url">URL of resource to include.</param>
            <returns>Resolved URL resource as an MvcHtmlString.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.IncludeResouce(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Includes an embedded resource directly into an MVC view page.
            </summary>
            <param name="helper">MVC HTML helper instance.</param>
            <param name="resourceName">Resource to include.</param>
            <returns>Resource as an MvcHtmlString.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.RenderResource(System.Web.Mvc.HtmlHelper,System.String,System.Type,System.Object)">
            <summary>
            Renders a Razor view from an embedded resource.
            </summary>
            <param name="helper">MVC HTML helper instance.</param>
            <param name="resourceName">Embedded resource name.</param>
            <param name="modelType">Type of model.</param>
            <param name="model">Model instance.</param>
            <returns>Rendered resource as an MvcHtmlString.</returns>
            <remarks>
            If needed by view, define ViewBag.DataContext before rendering resource.
            </remarks>
        </member>
        <member name="M:GSF.Web.WebExtensions.RenderResource``1(System.Web.Mvc.HtmlHelper,System.String,``0)">
            <summary>
            Renders a Razor view from an embedded resource.
            </summary>
            <typeparam name="T">Type of model.</typeparam>
            <param name="helper">MVC HTML helper instance.</param>
            <param name="resourceName">Embedded resource name.</param>
            <param name="model">Model instance.</param>
            <returns>Rendered resource as an MvcHtmlString.</returns>
            <remarks>
            If needed by view, define ViewBag.DataContext before rendering resource.
            </remarks>
        </member>
        <member name="M:GSF.Web.WebExtensions.EmbeddedResourceExists(System.String)">
            <summary>
            Determines if specified embedded resource exists.
            </summary>
            <param name="resourceName">Fully qualified name of resource to check.</param>
            <returns><c>true</c> if resource exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.OpenEmbeddedResourceStream(System.String)">
            <summary>
            Opens a stream to an embedded resource.
            </summary>
            <param name="resourceName">Fully qualified name of resource to open.</param>
            <returns>Stream to embedded resource if found; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:GSF.Web.WebExtensions.AddEmbeddedResourceAssembly(System.Reflection.Assembly)">
            <summary>
            Adds embedded resources from the specified assembly.
            </summary>
            <param name="assembly">Assembly to add resources from.</param>
        </member>
        <member name="M:GSF.Web.WebExtensions.ValidateAssemblyBindings(System.String,System.IO.Stream)">
            <summary>
            Validates the assembly bindings for the specified application <paramref name="configFileName"/>.
            </summary>
            <param name="configFileName">Application configuration file to validate for needed assembly bindings.</param>
            <param name="assemblyBindingsSource">Stream to assembly bindings to add; defaults to embedded "GSF.Web.AssemblyBindings.xml" resource.</param>
            <returns><c>true</c> if assembly bindings were updated; otherwise, <c>false</c>.</returns>
            <remarks>Any stream passed in via <paramref name="assemblyBindingsSource"/> will be closed if function succeeds.</remarks>
        </member>
    </members>
</doc>
