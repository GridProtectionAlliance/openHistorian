<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PowerCalculations</name>
    </assembly>
    <members>
        <member name="T:PowerCalculations.AverageFrequency">
            <summary>
            Calculates a real-time average frequency reporting the average, maximum and minimum values.
            </summary>
        </member>
        <member name="P:PowerCalculations.AverageFrequency.LowFrequencyThreshold">
            <summary>
            Gets or sets low frequency reasonability threshold, inclusive.
            </summary>
        </member>
        <member name="P:PowerCalculations.AverageFrequency.HighFrequencyThreshold">
            <summary>
            Gets or sets high frequency reasonability threshold, inclusive.
            </summary>
        </member>
        <member name="P:PowerCalculations.AverageFrequency.ReportUnreasonableResultsAsNaN">
            <summary>
            Gets or sets flag that determines if unreasonable results should be reported as NaN.
            </summary>
        </member>
        <member name="P:PowerCalculations.AverageFrequency.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.AverageFrequency"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.AverageFrequency.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.AverageFrequency"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.AverageFrequency.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Calculates the average frequency for all frequencies that have reported in the specified lag time.
            </summary>
            <param name="frame">Single frame of measurement data within a one second sample.</param>
            <param name="index">Index of frame within the one second sample.</param>
        </member>
        <member name="T:PowerCalculations.BulkSequenceCalculator">
            <summary>
            Represents an adapter that manages bulk calculation of positive, negative and zero sequence values based on A, B and C phase data inputs.
            </summary>
        </member>
        <member name="F:PowerCalculations.BulkSequenceCalculator.DefaultInputMeasurementKeys">
            <summary>
            Defines the default value for the <see cref="P:GSF.TimeSeries.Adapters.IndependentActionAdapterManagerBase`1.InputMeasurementKeys"/>.
            </summary>
        </member>
        <member name="M:PowerCalculations.BulkSequenceCalculator.#ctor">
            <summary>
            Creates new <see cref="T:PowerCalculations.BulkSequenceCalculator"/>.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.IncludePositiveSequence">
            <summary>
            Gets or sets flag that determines if positive sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.IncludeNegativeSequence">
            <summary>
            Gets or sets flag that determines if negative sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.IncludeZeroSequence">
            <summary>
            Gets or sets flag that determines if zero sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.PerAdapterInputCount">
            <summary>
            Gets number of input measurements required by each adapter.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.InputMeasurementIndexUsedForName">
            <summary>
            Gets or sets the index into the per adapter input measurements to use for target adapter name.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.PerAdapterOutputNames">
            <summary>
            Gets output measurement names.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.OutputPhases">
            <summary>
            Gets output phase for each output measurement.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.SignalTypes">
            <summary>
            Gets signal type for each output measurement, used when each output needs to be a different type.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.CustomAdapterSettings">
            <summary>
            Gets any custom adapter settings to be added to each adapter connection string. Can be used to add
            settings that are custom per adapter.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.PointTagTemplate">
            <summary>
            Gets or sets template for output measurement point tag names.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.SignalReferenceTemplate">
            <summary>
            Gets or sets template for local signal reference measurement name for source historian point.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.DescriptionTemplate">
            <summary>
            Gets or sets template for output measurement descriptions.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.ParentDeviceAcronymTemplate">
            <summary>
            Gets or sets template for the parent device acronym used to group associated output measurements.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.CurrentDeviceID">
            <summary>
            Gets associated device ID for <see cref="P:GSF.TimeSeries.Adapters.IndependentActionAdapterManagerBase`1.CurrentAdapterIndex"/>, if any, for measurement generation.
            </summary>
        </member>
        <member name="P:PowerCalculations.BulkSequenceCalculator.OutputMeasurements">
            <summary>
            Gets or sets output measurements that the <see cref="T:GSF.TimeSeries.Adapters.IndependentActionAdapterManagerBase`1"/> will produce, if any.
            </summary>
        </member>
        <member name="M:PowerCalculations.BulkSequenceCalculator.ParseConnectionString">
            <summary>
            Parses connection string.
            </summary>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.MeasurementRepository">
            <summary>
            Class used to save measurement objects for power calculation adapter
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.MeasurementRepository.Save(GSF.Data.AdoDataConnection,PowerCalculations.PowerMultiCalculator.PowerMeasurement)">
            <summary>
            Saves measurement back to the configuration database
            </summary>
            <param name="database">Database connection for query. Will be created from config if this value is null.</param>
            <param name="measurement">Measurement to be inserted or updated</param>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.PowerCalculation">
            <summary>
            Model class for power calculations stored in the configuration repository
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.PowerCalculationID">
            <summary>
            ID field for the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.CircuitDescription">
            <summary>
            Circuit Description field for the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.VoltageAngleMeasurementKey">
            <summary>
            Measurement key from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>'s Voltage Angle <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/> 
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.VoltageMagnitudeMeasurementKey">
            <summary>
            Measurement key from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>'s Voltage Magnitude <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/> 
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.CurrentAngleMeasurementKey">
            <summary>
            Measurement key from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>'s Current Angle <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/> 
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.CurrentMagnitudeMeasurementKey">
            <summary>
            Measurement key from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>'s Current Magnitude <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/> 
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.ActivePowerOutputMeasurement">
            <summary>
            Measurement template to be used for active power output values from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.ReactivePowerOutputMeasurement">
            <summary>
            Measurement template to be used for reactive power output values from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerCalculation.ApparentPowerOutputMeasurement">
            <summary>
            Measurement template to be used for apparent power output values from the <see cref="T:PowerCalculations.PowerMultiCalculator.PowerCalculation"/>
            </summary>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation">
            <summary>
            Implements validations for power calculations in the power calculation adapter
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.ValidateDatabaseDefinitions">
            <summary>
            Validates that data operation and adapter instance exist within database.
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.DataOperationExists(GSF.Data.AdoDataConnection)">
            <summary>
            Returns true if a data operation exists to run this class. Returns false otherwise.
            </summary>
            <param name="database">Database connection to use for checking the data operation</param>
            <returns>True or false indicating whether the operation exists</returns>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CreateDataOperation(GSF.Data.AdoDataConnection)">
            <summary>
            Creates a data operation to run the validations in this class.
            </summary>
            <param name="database">Database connection to use for creating the data operation</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.AdapterInstanceExists(GSF.Data.AdoDataConnection)">
            <summary>
            Returns true if a data operation exists to run this class. Returns false otherwise.
            </summary>
            <param name="database">Database connection to use for checking the data operation</param>
            <returns>True or false indicating whether the operation exists</returns>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CreateAdapterInstance(GSF.Data.AdoDataConnection)">
            <summary>
            Creates a data operation to run the validations in this class.
            </summary>
            <param name="database">Database connection to use for creating the data operation</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.ValidatePowerCalculationConfigurations(GSF.Data.AdoDataConnection,System.String,System.UInt64,System.String,System.Action{System.String},System.Action{System.Exception})">
            <summary>
            Data operation to validate power calculation configuration. This method checks that input measurements and non-null output measurements exist, are enabled, and have the correct signal type.
            If null output measurements are found in the configuration, this method will create the output measurements and update the configuration.
            </summary>
            <param name="database">Database connection for configuration information</param>
            <param name="nodeIDQueryString">Node ID for database queries</param>
            <param name="trackingVersion">Not used</param>
            <param name="arguments">Not used</param>
            <param name="statusMessage">Delegate for method to communicate status updates</param>
            <param name="processException">Exception handling delegate</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CreateOutputMeasurementsWhereNull(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Checks power calculation configuration for null output measurements. When found, a new measurement is created, and the configuration is updated to use the new measurement.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for query</param>
            <param name="statusMessage">Delegate for communicating status updates</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CreateMeasurement(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new measurement object for power calculation output measurements
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.UpdatePowerCalculation(GSF.Data.AdoDataConnection,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Updated power calculation to use new Signal IDs for output measurement
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="powerCalculationID">ID of the power calculation to be updated</param>
            <param name="activePowerOutputSignalID">Active power output signal ID, if needed for update</param>
            <param name="reactivePowerOutputSignalID">Reactive power output signal ID, if needed for update</param>
            <param name="apparentPowerOutputSignalID">Apparent power output signal ID, if needed for update</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckOutputMeasurementsSignalType(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Verifies that output measurements are set to calculated signal type. Calculations are disabled if output measurements are not configured correctly.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for query</param>
            <param name="statusMessage">Delegate to communicate status updates</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckOutputMeasurementsAreEnabled(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Verifies that output measurements are enabled. Power calculations will be disabled where outputs are disabled.
            </summary>
            <param name="database"></param>
            <param name="nodeIDQueryString"></param>
            <param name="statusMessage"></param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckOutputMeasurementsExist(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Verifies that output measurements exist in the measurement table. Power calculations are disabled where the configured outputs do not exist.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for query</param>
            <param name="statusMessage">Delegate to communicate status updates</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckInputMeasurementsSignalType(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Validates that input measurements have the correct signal type. Power calculations are disabled where inputs have the wrong signal types.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for database query</param>
            <param name="statusMessage">Delegate for status updates</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckInputMeasurementsAreEnabled(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Verifies that input measurements are enabled. Power calculations are disabled where input measurements are disabled.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for query</param>
            <param name="statusMessage">Delegate for communicating status updates</param>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerCalculationConfigurationValidation.CheckInputMeasurementsExist(GSF.Data.AdoDataConnection,System.String,System.Action{System.String})">
            <summary>
            Verifies that input measurements exist. Power calculations are disabled where input measurements do not exist.
            </summary>
            <param name="database">Configuration database connection</param>
            <param name="nodeIDQueryString">Node ID formatted for query</param>
            <param name="statusMessage">Delegate for communicating status updates</param>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement">
            <summary>
            Simple model class for measurements
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.SignalID">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Signal ID
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.PointTag">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Point Tag
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.Adder">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Adder
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.Multiplier">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Multiplier
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.Description">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s description
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.DeviceID">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Device ID
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.HistorianID">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Historian ID
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.SignalTypeID">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Signal Type ID
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.Enabled">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s Enabled flag
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMeasurement.SignalReference">
            <summary>
            Gets or sets the current <see cref="T:PowerCalculations.PowerMultiCalculator.PowerMeasurement"/>'s signal reference
            </summary>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter">
            <summary>
            Performs MW, MVA, and MVAR calculations based on current and voltage phasors input to the adapter
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.#ctor">
            <summary>
            Creates the adapter
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.TableName">
            <summary>
            Gets or sets the name of the table this adapter will use to obtain its metadata.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.AlwaysProduceResult">
            <summary>
            Gets or sets flag indicating whether or not this adapter will produce a result for all calculations. If this value is true and a calculation fails,
            the adapter will produce NaN for that calculation. If this value is false and a calculation fails, the adapter will not produce any result.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.AdjustmentStrategy">
            <summary>
            Gets or sets the default strategy used to adjust voltage values for based on the nature of the voltage measurements.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.EnableTemporalProcessing">
            <summary>
            Gets or sets flag that determines if adapter should enable temporal processing support.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.Status">
            <summary>
            Returns the adapter status, including real-time statistics about adapter operation
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.Initialize">
            <summary>
            Loads configuration from the database and configures adapter to run with that configuration
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.PowerMultiCalculatorAdapter.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Calculates MW, MVAR and MVA then publishes those measurements
            </summary>
            <param name="frame">Input values for calculation</param>
            <param name="index">Index of frame within second.</param>
        </member>
        <member name="T:PowerCalculations.PowerMultiCalculator.RunningAverage">
            <summary>
            Calculates running average of a value
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerMultiCalculator.RunningAverage.Average">
            <summary>
            Average calculated on values provided so far
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerMultiCalculator.RunningAverage.AddValue(System.Double)">
            <summary>
            Calculates running average based on previous values and the new value
            </summary>
            <param name="value">Value to be added to the running average</param>
            <returns>New running average</returns>
        </member>
        <member name="T:PowerCalculations.AngleDifferenceCalculator">
            <summary>
            Calculates a composed angle difference.
            </summary>
        </member>
        <member name="P:PowerCalculations.AngleDifferenceCalculator.AlwaysProduceResult">
            <summary>
            Gets or sets flag indicating whether or not this adapter will produce a result for all calculations. If this value is true and a calculation fails,
            the adapter will produce NaN for that calculation. If this value is false and a calculation fails, the adapter will not produce any result.
            </summary>
        </member>
        <member name="P:PowerCalculations.AngleDifferenceCalculator.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.AngleDifferenceCalculator"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.AngleDifferenceCalculator.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.AngleDifferenceCalculator"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.AngleDifferenceCalculator.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Calculates an angle difference.
            </summary>
            <param name="frame">Single frame of measurement data within one second samples</param>
            <param name="index">Index of frame within the one second samples</param>
        </member>
        <member name="T:PowerCalculations.ImpedanceCalculator">
            <summary>
            Represents an algorithm that calculates power and stability from a synchrophasor device.
            </summary>
        </member>
        <member name="P:PowerCalculations.ImpedanceCalculator.ApplyLineToLineAdjustment">
            <summary>
            Gets or sets the flag that determines if line-to-line adjustment should be applied.
            </summary>
        </member>
        <member name="P:PowerCalculations.ImpedanceCalculator.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.ImpedanceCalculator"/> monitor.
            </summary>
        </member>
        <member name="M:PowerCalculations.ImpedanceCalculator.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.ImpedanceCalculator"/> monitor.
            </summary>
        </member>
        <member name="M:PowerCalculations.ImpedanceCalculator.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publishes the <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            adapter's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
        </member>
        <member name="T:PowerCalculations.VoltageAdjustmentStrategy">
            <summary>
            Represents the strategy used to adjust voltage values for power
            calculations based on the nature of the voltage measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.VoltageAdjustmentStrategy.LineToNeutral">
            <summary>
            Factor of 3 adjustment (S=3*V*I)
            </summary>
        </member>
        <member name="F:PowerCalculations.VoltageAdjustmentStrategy.LineToLine">
            <summary>
            Factor of Sqrt(3) adjustment (S=Sqrt(3)*V*I)
            </summary>
        </member>
        <member name="F:PowerCalculations.VoltageAdjustmentStrategy.None">
            <summary>
            No adjustment (S=V*I)
            </summary>
        </member>
        <member name="T:PowerCalculations.SequenceCalculator">
            <summary>
            Calculates positive, negative and zero sequences using A, B and C phase voltage or current magnitude and angle signals input to the adapter.
            </summary>
        </member>
        <member name="T:PowerCalculations.SequenceCalculator.Output">
            <summary>
            Defines the output measurements for the <see cref="T:PowerCalculations.SequenceCalculator"/>.
            </summary>
            <remarks>
            One output measurement should be defined for each enumeration value, in order:
            </remarks>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.PositiveSequenceMagnitude">
            <summary>
            Positive sequence magnitude measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.PositiveSequenceAngle">
            <summary>
            Positive sequence angle measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.NegativeSequenceMagnitude">
            <summary>
            Negative sequence magnitude measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.NegativeSequenceAngle">
            <summary>
            Negative sequence angle measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.ZeroSequenceMagnitude">
            <summary>
            Zero sequence magnitude measurement.
            </summary>
        </member>
        <member name="F:PowerCalculations.SequenceCalculator.Output.ZeroSequenceAngle">
            <summary>
            Zero sequence angle measurement.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.TrackRecentValues">
            <summary>
            Gets or sets flag that determines if the last few values should be monitored.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.SampleSize">
            <summary>
            Gets or sets the sample size of the data to be monitored.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.IncludePositiveSequence">
            <summary>
            Gets or sets flag that determines if positive sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.IncludeNegativeSequence">
            <summary>
            Gets or sets flag that determines if negative sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.IncludeZeroSequence">
            <summary>
            Gets or sets flag that determines if zero sequence calculations should be included.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:PowerCalculations.SequenceCalculator.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.PowerCalculator"/>.
            </summary>
        </member>
        <member name="M:PowerCalculations.SequenceCalculator.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.PowerCalculator"/>.
            </summary>
        </member>
        <member name="M:PowerCalculations.SequenceCalculator.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publish frame of time-aligned collection of measurement values that arrived within the defined lag time.
            </summary>
            <param name="frame">Frame of measurements with the same timestamp that arrived within lag time that are ready for processing.</param>
            <param name="index">Index of frame within a second ranging from zero to frames per second - 1.</param>
        </member>
        <member name="T:PowerCalculations.PowerCalculator">
            <summary>
            Calculates MW and MVAR using Voltage and Current Magnitude and Angle signals input to the adapter.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerCalculator.TrackRecentValues">
            <summary>
            Gets or sets flag that determines if the last few values should be monitored.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerCalculator.SampleSize">
            <summary>
            Gets or sets the sample size of the data to be monitored.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerCalculator.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerCalculator.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.PowerCalculator"/>.
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerCalculator.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.PowerCalculator"/>.
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerCalculator.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publish frame of time-aligned collection of measurement values that arrived within the defined lag time.
            </summary>
            <param name="frame">Frame of measurements with the same timestamp that arrived within lag time that are ready for processing.</param>
            <param name="index">Index of frame within a second ranging from zero to frames per second - 1.</param>
        </member>
        <member name="T:PowerCalculations.PowerStability">
            <summary>
            Represents an algorithm that calculates power and stability from a synchrophasor device.
            </summary>
            <remarks>
            <para>
            This algorithm calculates power and its standard deviation in real-time that can be used to
            determine if there is an oscillatory signature in the power output.
            </para>
            <para>
            If multiple voltage phasors are provided as inputs to this algorithm, then they are assumed to be
            redundant values on the same bus, the first energized value will be the voltage phasor that is
            used in the calculation.<br/>
            If multiple current phasors are provided as inputs to this algorithm, then they are assumed to be
            cumulative inputs representing the desired power output summation of the generation source.
            </para>
            <para>
            Individual phase angle and magnitude phasor elements are expected to be defined consecutively.
            That is the definition order of angles and magnitudes must match so that the angle / magnitude
            pair can be matched up appropriately. For example: angle1;mag1;  angle2;mag2;  angle3;mag3.
            </para>
            </remarks>
        </member>
        <member name="P:PowerCalculations.PowerStability.SampleSize">
            <summary>
            Gets or sets the sample size, in seconds, of the data to be monitored.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerStability.EnergizedThreshold">
            <summary>
            Gets or sets the energized bus threshold, in volts. The recommended value is 20% of nominal line-to-neutral voltage.
            </summary>
        </member>
        <member name="P:PowerCalculations.PowerStability.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.PowerStability"/> monitor.
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerStability.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.PowerStability"/> monitor.
            </summary>
        </member>
        <member name="M:PowerCalculations.PowerStability.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publishes the <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            adapter's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
        </member>
        <member name="T:PowerCalculations.EventDetection.ExcursionType">
            <summary>
            Defines the type of frequency excursion detected.
            </summary>
        </member>
        <member name="F:PowerCalculations.EventDetection.ExcursionType.GenerationTrip">
            <summary>
            Generation based frequency excursion.
            </summary>
        </member>
        <member name="F:PowerCalculations.EventDetection.ExcursionType.LoadTrip">
            <summary>
            Load based frequency excursion.
            </summary>
        </member>
        <member name="T:PowerCalculations.EventDetection.FrequencyExcursion">
            <summary>
            Represents an algorithm that detects frequency excursions.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.EstimateTriggerThreshold">
            <summary>
            Gets or sets the threshold for detecting an abnormal excursion in frequency.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.AnalysisWindowSize">
            <summary>
            Gets or sets the number of frames to be analyzed at any given time.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.AnalysisInterval">
            <summary>
            Gets or sets the interval between adjacent calculations.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.ConsecutiveDetections">
            <summary>
            Gets or sets the minimum number of consecutive excursions needed in order to trip the alarm.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.MinimumValidChannels">
            <summary>
            Gets or sets the minimum frequency values needed to perform a valid calculation.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.PowerEstimateRatio">
            <summary>
            Gets or sets the ratio used to calculate the total estimated MW change from frequency.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.AlarmProhibitPeriod">
            <summary>
            Gets or sets the period used to prevent duplicate alarms.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.FrequencyExcursion.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.EventDetection.FrequencyExcursion"/> detector.
            </summary>
        </member>
        <member name="M:PowerCalculations.EventDetection.FrequencyExcursion.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.EventDetection.FrequencyExcursion"/> detector.
            </summary>
        </member>
        <member name="M:PowerCalculations.EventDetection.FrequencyExcursion.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publishes the <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            adapter's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
        </member>
        <member name="T:PowerCalculations.EventDetection.LossOfField">
            <summary>
            Represents an algorithm that detects Loss of Field from a synchrophasor device.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.PSet">
            <summary>
            Gets or sets the threshold of P-set MW.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.QSet">
            <summary>
            Gets or sets the threshold of Q-set MVar.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.QAreaSet">
            <summary>
            Gets or sets the threshold of Q-area MVar-sec.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.VoltageThreshold">
            <summary>
            Gets or sets the threshold of voltage, in volts.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.AnalysisInterval">
            <summary>
            Gets or sets the interval between adjacent calculations.
            </summary>
        </member>
        <member name="P:PowerCalculations.EventDetection.LossOfField.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.EventDetection.LossOfField"/> detector.
            </summary>
        </member>
        <member name="M:PowerCalculations.EventDetection.LossOfField.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.EventDetection.LossOfField"/> detector.
            </summary>
        </member>
        <member name="M:PowerCalculations.EventDetection.LossOfField.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Publishes the <see cref="T:GSF.TimeSeries.IFrame"/> of time-aligned collection of <see cref="T:GSF.TimeSeries.IMeasurement"/> values that arrived within the
            adapter's defined <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/>.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements with the same timestamp that arrived within <see cref="P:GSF.TimeSeries.ConcentratorBase.LagTime"/> that are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within a second ranging from zero to <c><see cref="P:GSF.TimeSeries.ConcentratorBase.FramesPerSecond"/> - 1</c>.</param>
        </member>
        <member name="T:PowerCalculations.ReferenceAngle">
            <summary>
            Calculates a composed reference angle.
            </summary>
        </member>
        <member name="P:PowerCalculations.ReferenceAngle.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.ReferenceAngle"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.ReferenceAngle.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.ReferenceAngle"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.ReferenceAngle.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Calculates a virtual reference angle.
            </summary>
            <param name="frame">Single frame of measurement data within one second samples</param>
            <param name="index">Index of frame within the one second samples</param>
        </member>
        <member name="T:PowerCalculations.ReferenceMagnitude">
            <summary>
            Calculates an average magnitude associated with a composed reference angle.
            </summary>
        </member>
        <member name="P:PowerCalculations.ReferenceMagnitude.Status">
            <summary>
            Returns the detailed status of the <see cref="T:PowerCalculations.ReferenceMagnitude"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.ReferenceMagnitude.Initialize">
            <summary>
            Initializes the <see cref="T:PowerCalculations.ReferenceMagnitude"/> calculator.
            </summary>
        </member>
        <member name="M:PowerCalculations.ReferenceMagnitude.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Calculates the average reference magnitude.
            </summary>
            <param name="frame">Single frame of measurement data within a one second sample.</param>
            <param name="index">Index of frame within the one second sample.</param>
        </member>
    </members>
</doc>
