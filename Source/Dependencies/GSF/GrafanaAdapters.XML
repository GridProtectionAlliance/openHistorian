<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrafanaAdapters</name>
    </assembly>
    <members>
        <member name="T:GrafanaAdapters.Annotation">
            <summary>
            Defines a Grafana annotation.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Annotation.name">
            <summary>
            Annotation name.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Annotation.datasource">
            <summary>
            Annotation data source.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Annotation.enable">
            <summary>
            Annotation enabled flag.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Annotation.iconColor">
            <summary>
            Annotation icon color.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Annotation.query">
            <summary>
            Annotation query.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.AnnotationExtensions">
            <summary>
            Grafana <see cref="T:GrafanaAdapters.Annotation"/> extensions class.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.TableName(GrafanaAdapters.AnnotationType)">
            <summary>
            Gets table name for specified annotation <paramref name="type"/>.
            </summary>
            <param name="type">Annotation type.</param>
            <returns>Table name for specified annotation <paramref name="type"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.TargetFieldName(GrafanaAdapters.AnnotationType)">
            <summary>
            Gets the target field name for Guid based point IDs for table used with specified annotation <paramref name="type"/>.
            </summary>
            <param name="type">Annotation type.</param>
            <returns>Target field name for Guid based point IDs for specified annotation <paramref name="type"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.IsApplicable(GrafanaAdapters.AnnotationType,System.Double[])">
            <summary>
            Determines if the data point is applicable for specified annotation <paramref name="type"/>. 
            </summary>
            <param name="type">Annotation type.</param>
            <param name="datapoint">Time series values data point.</param>
            <returns><c>true</c> if the data point is applicable for specified annotation <paramref name="type"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.PopulateResponse(GrafanaAdapters.AnnotationType,GrafanaAdapters.AnnotationResponse,System.String,System.Data.DataRow,System.Double[],System.Data.DataSet)">
            <summary>
            Populates an annotation response title, text and tags for specified annotation <paramref name="type"/>.
            </summary>
            <param name="type">Annotation type.</param>
            <param name="response">Annotation response.</param>
            <param name="target">Target of annotation response.</param>
            <param name="definition">Associated metadata definition for response.</param>
            <param name="datapoint">Time series values data point for response.</param>
            <param name="source">Metadata of source definitions.</param>
            <returns>Populates an annotation response title, text and tags for specified annotation <paramref name="type"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.ExtractQueryRequest(GrafanaAdapters.AnnotationRequest,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Extracts a Grafana <see cref="T:GrafanaAdapters.QueryRequest"/> from an <see cref="T:GrafanaAdapters.AnnotationRequest"/>.
            </summary>
            <param name="request">Annotation request.</param>
            <param name="targets">List of desired targets.</param>
            <param name="maxDataPoints">Maximum points to return.</param>
            <returns>Grafana query request object from an annotation <paramref name="request"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.ParseQueryType(GrafanaAdapters.Annotation,System.Boolean@)">
            <summary>
            Parses query expression from annotation for annotation type.
            </summary>
            <param name="annotation">Grafana annotation.</param>
            <param name="useFilterExpression">Determines if query is using a filter expression.</param>
            <returns>Parsed annotation type for query expression from <paramref name="annotation"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.ParseQueryType(GrafanaAdapters.AnnotationRequest,System.Boolean@)">
            <summary>
            Parses query expression from annotation request for annotation type.
            </summary>
            <param name="request">Grafana annotation request.</param>
            <param name="useFilterExpression">Determines if query is using a filter expression.</param>
            <returns>Parsed annotation type for query expression from annotation <paramref name="request"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.ParseSourceDefinitions(GrafanaAdapters.Annotation,GrafanaAdapters.AnnotationType,System.Data.DataSet,System.Boolean)">
            <summary>
            Parses source definitions for an annotation query.
            </summary>
            <param name="annotation">Grafana annotation.</param>
            <param name="type">Annotation type.</param>
            <param name="source">Metadata of source definitions.</param>
            <param name="useFilterExpression">Determines if query is using a filter expression.</param>
            <returns>Parsed source definitions from <paramref name="annotation"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.ParseSourceDefinitions(GrafanaAdapters.AnnotationRequest,GrafanaAdapters.AnnotationType,System.Data.DataSet,System.Boolean)">
            <summary>
            Parses source definitions for an annotation query.
            </summary>
            <param name="request">Grafana annotation request.</param>
            <param name="type">Annotation type.</param>
            <param name="source">Metadata of source definitions.</param>
            <param name="useFilterExpression">Determines if query is using a filter expression.</param>
            <returns>Parsed source definitions from annotation <paramref name="request"/>.</returns>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.TagFromKey(GSF.TimeSeries.MeasurementKey,System.Data.DataSet)">
            <summary>
            Looks up point tag from measurement <paramref name="key"/> value.
            </summary>
            <param name="key"><see cref="T:GSF.TimeSeries.MeasurementKey"/> to lookup.</param>
            <param name="source">Source metadata.</param>
            <returns>Point tag name from source metadata.</returns>
            <remarks>
            This function uses the <see cref="M:System.Data.DataTable.Select(System.String)"/> function which uses a linear
            search algorithm that can be slow for large data sets, it is recommended that any results
            for calls to this function be cached to improve performance.
            </remarks>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.KeyFromTag(System.String,System.Data.DataSet,System.String)">
            <summary>
            Looks up measurement key from point tag.
            </summary>
            <param name="pointTag">Point tag to lookup.</param>
            <param name="source">Source metadata.</param>
            <param name="table">Table to search.</param>
            <returns>Measurement key from source metadata.</returns>
            <remarks>
            This function uses the <see cref="M:System.Data.DataTable.Select(System.String)"/> function which uses a linear
            search algorithm that can be slow for large data sets, it is recommended that any results
            for calls to this function be cached to improve performance.
            </remarks>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.KeyAndTagFromSignalID(System.String,System.Data.DataSet,System.String)">
            <summary>
            Looks up measurement key from signal ID.
            </summary>
            <param name="signalID">Signal ID to lookup.</param>
            <param name="source">Source metadata.</param>
            <param name="table">Table to search.</param>
            <returns>Measurement key from source metadata.</returns>
            <remarks>
            This function uses the <see cref="M:System.Data.DataTable.Select(System.String)"/> function which uses a linear
            search algorithm that can be slow for large data sets, it is recommended that any results
            for calls to this function be cached to improve performance.
            </remarks>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.MetadataRecordFromTag(System.String,System.Data.DataSet,System.String)">
            <summary>
            Looks up metadata record from point tag.
            </summary>
            <param name="pointTag">Point tag to lookup.</param>
            <param name="source">Source metadata.</param>
            <param name="table">Table to search.</param>
            <returns>Metadata record from source metadata for provided point tag.</returns>
            <remarks>
            <para>
            Use "table.pointTag" format to specify which table to pull point tag from.
            </para>
            <para>
            This function uses the <see cref="M:System.Data.DataTable.Select(System.String)"/> function which uses a linear
            search algorithm that can be slow for large data sets, it is recommended that any results
            for calls to this function be cached to improve performance.
            </para>
            </remarks>
        </member>
        <member name="M:GrafanaAdapters.AnnotationExtensions.MetadataRecordFromSignalID(System.String,System.Data.DataSet,System.String)">
            <summary>
            Looks up metadata record from signal ID.
            </summary>
            <param name="signalID">Signal ID to lookup.</param>
            <param name="source">Source metadata.</param>
            <param name="table">Table to search.</param>
            <returns>Metadata record from source metadata for provided point tag.</returns>
            <remarks>
            This function uses the <see cref="M:System.Data.DataTable.Select(System.String)"/> function which uses a linear
            search algorithm that can be slow for large data sets, it is recommended that any results
            for calls to this function be cached to improve performance.
            </remarks>
        </member>
        <member name="T:GrafanaAdapters.AnnotationRequest">
            <summary>
            Defines a Grafana annotation request.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationRequest.annotation">
            <summary>
            Annotation request details.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationRequest.range">
            <summary>
            Request range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationRequest.rangeRaw">
            <summary>
            Relative request range.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.AnnotationResponse">
            <summary>
            Defines a Grafana annotation response.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationResponse.annotation">
            <summary>
            Annotation in-response-to request.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationResponse.title">
            <summary>
            Annotation title.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationResponse.time">
            <summary>
            Annotation time.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationResponse.text">
            <summary>
            Annotation text.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AnnotationResponse.tags">
            <summary>
            Annotation tags.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.AnnotationType">
            <summary>
            Supported annotation types for GSF Time-series Framework.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.AnnotationType.RaisedAlarms">
            <summary>
            Raised alarm annotation.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.AnnotationType.ClearedAlarms">
            <summary>
            Cleared alarm annotation.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.AnnotationType.Undefined">
            <summary>
            Undefined annotation.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.Column">
            <summary>
            Defines a Grafana table column.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Column.text">
            <summary>
            Column title.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Column.type">
            <summary>
            Column type, e.g., "time", "mean", "sum", etc.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Column.sort">
            <summary>
            Flag that determines if column is sortable.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Column.desc">
            <summary>
            Flag that determines if column is sorted descending.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.DataSourceValueGroup">
            <summary>
            Defines a class that represents an enumeration of <see cref="T:GrafanaAdapters.DataSourceValue"/> for a given target.
            </summary>
            <remarks>
            This is a group construct keyed on <see cref="F:GrafanaAdapters.DataSourceValueGroup.Target"/> for data source value enumerations.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValueGroup.Target">
            <summary>
            Query target, e.g., a point-tag, representative of all <see cref="F:GrafanaAdapters.DataSourceValueGroup.Source"/> values.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValueGroup.RootTarget">
            <summary>
            Defines the root target expression, without any referenced series functions.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValueGroup.SourceTarget">
            <summary>
            Defines a reference to the original target that was the source of these results.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValueGroup.Source">
            <summary>
            Data source values enumerable.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValueGroup.DropEmptySeries">
            <summary>
            Defines flag that determines if empty series are produced.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.GSFDeviceAlarmStateAdapter">
            <summary>
            Represents an adapter that will monitor and report device alarm states.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GSFDeviceAlarmStateAdapter.DefaultMonitoringRate">
            <summary>
            Defines the default value for the <see cref="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.MonitoringRate"/>.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GSFDeviceAlarmStateAdapter.DefaultAlarmMinutes">
            <summary>
            Defines the default value for the <see cref="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.AlarmMinutes"/>.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GSFDeviceAlarmStateAdapter.DefaultAcknowledgedTransitionHysteresisDelay">
            <summary>
            Defines the default value for the <see cref="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.AcknowledgedTransitionHysteresisDelay"/>.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GSFDeviceAlarmStateAdapter.DefaultExternalDatabaseHysteresisDelay">
            <summary>
            Defines the default value for the <see cref="F:GrafanaAdapters.GSFDeviceAlarmStateAdapter.DefaultExternalDatabaseHysteresisDelay"/>.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.#ctor">
            <summary>
            Creates a new <see cref="T:GrafanaAdapters.GSFDeviceAlarmStateAdapter"/>.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.MonitoringRate">
            <summary>
            Gets or sets monitoring rate, in milliseconds, for devices.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.AlarmMinutes">
            <summary>
            Gets or sets the time, in minutes, for which to change the device state to alarm when no data is received.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.TargetParentDevices">
            <summary>
            Gets or sets the flag that determines if alarm states should only target parent devices, i.e., PDCs and direct connect PMUs, or all devices.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.AcknowledgedTransitionHysteresisDelay">
            <summary>
            Gets or sets delay time, in minutes, before transitioning the Acknowledged state back to Good.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseHysteresisDelay">
            <summary>
            Gets or sets the delay time, in minutes, before reporting the external database state.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseHysteresisMinimumState">
            <summary>
            Gets or sets the minimum state for application of <see cref="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseHysteresisDelay"/>. Defaults to setting Good and Alarm states immediately and applying delay to all other states.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.EnableExternalDatabaseSynchronization">
            <summary>
            Gets or sets the flag that determines if an external database connection should be enabled for synchronization of alarm states.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseConnnectionString">
            <summary>
            Gets or sets the external database connection string used for synchronization of alarm states. Leave blank to use local configuration database defined in "systemSettings".
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseProviderString">
            <summary>
            Gets or sets the external database provider string used for synchronization of alarm states.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseCommand">
            <summary>
            Gets or sets the external database command used for synchronization of alarm states.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseCommandParameters">
            <summary>
            Gets or sets the external database command parameters with value substitutions used for synchronization of alarm states.
            </summary>
            <remarks>
            Examples for composite state reporting:
            <code>
            'openPDC Overall Device Status = {AlarmState}[?{AlarmState}!=Good[ -- for \[{Device.Acronym}\]]]'
            </code>
            <code>
            'Good = {GoodStateCount} / Alarmed = {AlarmStateCount} / Unavailable = {NotAvailableStateCount} / Bad Data = {BadDataStateCount} / Bad Time = {BadTimeStateCount} / Out of Service = {OutOfServiceStateCount}[?{AlarmState}!=Good[ -- \&lt;a href=\"http://localhost:8280/DeviceStatus.cshtml?DeviceID={Device.ID}\"\&gt;\[{Device.Acronym}\] Device Status\&lt;/a\&gt;]]'
            </code>
            </remarks>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseMappedAlarmStates">
            <summary>
            Gets or sets the external database mapped alarm states defining the {MappedAlarmState} command parameter substitution parameter used for synchronization of alarm states.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.ExternalDatabaseReportSingleCompositeState">
            <summary>
            Gets or sets the flag that determines if external database should report a single composite state or a state for each device.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.InputMeasurementKeys">
            <summary>
            Gets or sets primary keys of input measurements the adapter expects, if any.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.OutputMeasurements">
            <summary>
            Gets or sets output measurements that the adapter will produce, if any.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GSFDeviceAlarmStateAdapter.Status">
            <summary>
            Returns the detailed status of the data input source.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GrafanaAdapters.GSFDeviceAlarmStateAdapter"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.Initialize">
            <summary>
            Initializes <see cref="T:GrafanaAdapters.GSFDeviceAlarmStateAdapter" />.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.QueueStateUpdate">
            <summary>
            Queues monitoring operation to update alarm state for immediate execution.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.UpdateAlarmStates">
            <summary>
            Updates alarm states from database.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GSFDeviceAlarmStateAdapter.GetShortStatus(System.Int32)">
            <summary>
            Gets a short one-line status of this adapter.
            </summary>
            <param name="maxLength">Maximum number of available characters for display.</param>
            <returns>A short one-line summary of the current status of this adapter.</returns>
        </member>
        <member name="T:GrafanaAdapters.AlarmState">
            <summary>
            Represents the Alarm State of a connected Device.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmState.ID">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmState.State">
            <summary>
            Description of the <see cref="T:GrafanaAdapters.AlarmState"/>.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmState.Color">
            <summary>
            Color associated with the <see cref="T:GrafanaAdapters.AlarmState"/>.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.AlarmDevice">
            <summary>
            Represents the a connected Device in an AlarmState.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDevice.ID">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDevice.DeviceID">
            <summary>
            Device ID of the Alarmed Device.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDevice.StateID">
            <summary>
            ID of the <see cref="T:GrafanaAdapters.AlarmState"/>.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDevice.TimeStamp">
            <summary>
            Time of the last update.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDevice.DisplayData">
            <summary>
            String to Diplay on the Grafana Alarm Dashboard.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.AlarmDeviceStateView">
            <summary>
            Represents a Grafana Alarm Panel Block
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDeviceStateView.ID">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDeviceStateView.Name">
            <summary>
            name of the Device.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDeviceStateView.State">
            <summary>
            Description of the Device State.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDeviceStateView.Color">
            <summary>
            Color of the Device State.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.AlarmDeviceStateView.DisplayData">
            <summary>
            Additional data to be displayed.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.GrafanaDataService">
            <summary>
            Represents a REST based API for a simple JSON based Grafana data source for the openHistorian 1.0.
            </summary>
            <summary>
            Represents a REST based API for a simple JSON based Grafana data source for the openHistorian 1.0.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.Query(GrafanaAdapters.QueryRequest)">
            <summary>
            Queries openHistorian as a Grafana data source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.GetAlarmState(GrafanaAdapters.QueryRequest)">
            <summary>
            Queries openPDC Alarmstates as a Grafana data source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.GetMetadata(GrafanaAdapters.Target)">
            <summary>
            Queries openHistorian as a Grafana Metadata source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.Search(GrafanaAdapters.Target)">
            <summary>
            Search openHistorian for a target.
            </summary>
            <param name="request">Search target.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.SearchFields(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of columns from a specific table.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.SearchFilters(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of tables.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.SearchOrderBys(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of columns from a specific table.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.Annotations(GrafanaAdapters.AnnotationRequest)">
            <summary>
            Queries openHistorian for annotations in a time-range (e.g., Alarms).
            </summary>
            <param name="request">Annotation request.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.#ctor">
            <summary>
            Creates a new instance of a <see cref="T:GrafanaAdapters.GrafanaDataService"/>.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataService.Enabled">
            <summary>
            Gets or sets a boolean value that indicates whether the web service is currently enabled.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataService.Archive">
            <summary>
            Gets or sets the <see cref="T:GSF.Historian.IArchive"/> used by the web service for its data.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GrafanaAdapters.GrafanaDataService"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.Initialize">
            <summary>
            Initializes the web service.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataService.TestDataSource">
            <summary>
            Validates that openHistorian Grafana data source is responding as expected.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.SeriesFunction">
            <summary>
            Defines available functions that can operate on <see cref="T:GrafanaAdapters.TimeSeriesValues"/>.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Average">
            <summary>
            Returns a single value that represents the mean of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Average(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Average(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Average, Avg, Mean<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Minimum">
            <summary>
            Returns a single value that is the minimum of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Minimum(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Minimum(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Minimum, Min<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Maximum">
            <summary>
            Returns a single value that is the maximum of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Maximum(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Maximum(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Maximum, Max<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Total">
            <summary>
            Returns a single value that represents the sum of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Total(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Total(FILTER ActiveMeasurements WHERE SignalType='IPHM')</c><br/>
            Variants: Total, Sum<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Range">
            <summary>
            Returns a single value that represents the range, i.e., <c>maximum - minimum</c>, of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Range(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Range(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Range<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Count">
            <summary>
            Returns a single value that is the count of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Count(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Count(PPA:1; PPA:2; PPA:3)</c><br/>
            Variants: Count<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Distinct">
            <summary>
            Returns a series of values that represent the unique set of values in the source series.
            </summary>
            <remarks>
            Signature: <c>Distinct(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Distinct(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Distinct, Unique<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.AbsoluteValue">
            <summary>
            Returns a series of values that represent the absolute value each of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>AbsoluteValue(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>AbsoluteValue(FILTER ActiveMeasurements WHERE SignalType='CALC')</c><br/>
            Variants: AbsoluteValue, Abs<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Add">
            <summary>
            Returns a series of values that represent each of the values in the source series added with N.
            N is a floating point value representing an additive offset to be applied to each value the source series.
            N can either be constant value or a named target available from the expression.
            </summary>
            <remarks>
            Signature: <c>Add(N, expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Add(1.5, FILTER ActiveMeasurements WHERE SignalType='CALC')</c><br/>
            Variants: Add<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Subtract">
            <summary>
            Returns a series of values that represent each of the values in the source series subtracted by N.
            N is a floating point value representing an subtractive offset to be applied to each value the source series.
            N can either be constant value or a named target available from the expression.
            </summary>
            <remarks>
            Signature: <c>Subtract(N, expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Subtract(2.2, FILTER ActiveMeasurements WHERE SignalType='CALC')</c><br/>
            Variants: Subtract<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Multiply">
            <summary>
            Returns a series of values that represent each of the values in the source series multiplied by N.
            N is a floating point value representing a multiplicative factor to be applied to each value the source series.
            N can either be constant value or a named target available from the expression.
            </summary>
            <remarks>
            Signature: <c>Multiply(N, expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Multiply(1.5, FILTER ActiveMeasurements WHERE SignalType='CALC')</c><br/>
            Variants: Multiply<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Divide">
            <summary>
            Returns a series of values that represent each of the values in the source series divided by N.
            N is a floating point value representing a divisive factor to be applied to each value the source series.
            N can either be constant value or a named target available from the expression.
            </summary>
            <remarks>
            Signature: <c>Divide(N, expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Divide(1.732, FILTER ActiveMeasurements WHERE SignalType='CALC')</c><br/>
            Variants: Divide<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Round">
            <summary>
            Returns a series of values that represent the rounded value, with N fractional digits, of each of the values in the source series.
            N, optional, is a positive integer value representing the number of decimal places in the return value - defaults to 0.
            </summary>
            <remarks>
            Signature: <c>Round([N = 0], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Round(3, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Round<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Floor">
            <summary>
            Returns a series of values that represent the smallest integral value that is less than or equal to each of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Floor(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Floor(FILTER ActiveMeasurements WHERE SignalType='IPHM')</c><br/>
            Variants: Floor<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Ceiling">
            <summary>
            Returns a series of values that represent the smallest integral value that is greater than or equal to each of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Ceiling(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Ceiling(FILTER ActiveMeasurements WHERE SignalType='IPHM')</c><br/>
            Variants: Ceiling, Ceil<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Truncate">
            <summary>
            Returns a series of values that represent the integral part of each of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Truncate(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Truncate(FILTER ActiveMeasurements WHERE SignalType='IPHM')</c><br/>
            Variants: Truncate, Trunc<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.StandardDeviation">
            <summary>
            Returns a single value that represents the standard deviation of the values in the source series. First parameter,
            optional, is a boolean flag representing if the sample based calculation should be used - defaults to false, which
            means the population based calculation should be used.
            </summary>
            <remarks>
            Signature: <c>StandardDeviation([useSampleCalc = false], expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>StandardDeviation(FILTER ActiveMeasurements WHERE SignalType='VPHM')</c><br/>
            Variants: StandardDeviation, StdDev<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Median">
            <summary>
            Returns a single value that represents the median of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Median(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Median(FILTER ActiveMeasurements WHERE SignalType='ALOG')</c><br/>
            Variants: Median, Med, Mid<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Mode">
            <summary>
            Returns a single value that represents the mode of the values in the source series.
            </summary>
            <remarks>
            Signature: <c>Mode(expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Mode(FILTER TOP 5 ActiveMeasurements WHERE SignalType='DIGI')</c><br/>
            Variants: Mode<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Top">
            <summary>
            Returns a series of N, or N% of total, values that are the largest in the source series.
            N is either a positive integer value, representing a total, that is greater than zero - or - a floating point value,
            suffixed with '%' representing a percentage, that must range from greater than 0 to less than or equal to 100.
            Second parameter, optional, is a boolean flag representing if time in dataset should be normalized - defaults to true.
            N can either be constant value or a named target available from the expression. Any target values that fall between 0
            and 1 will be treated as a percentage.
            </summary>
            <remarks>
            Signature: <c>Top(N|N%, [normalizeTime = true], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Top(50%, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Top, Largest<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Bottom">
            <summary>
            Returns a series of N, or N% of total, values that are the smallest in the source series.
            N is either a positive integer value, representing a total, that is greater than zero - or - a floating point value,
            suffixed with '%' representing a percentage, that must range from greater than 0 to less than or equal to 100.
            Second parameter, optional, is a boolean flag representing if time in dataset should be normalized - defaults to true.
            N can either be constant value or a named target available from the expression. Any target values that fall between 0
            and 1 will be treated as a percentage.
            </summary>
            <remarks>
            Signature: <c>Bottom(N|N%, [normalizeTime = true], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Bottom(100, false, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Bottom, Bot, Smallest<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Random">
            <summary>
            Returns a series of N, or N% of total, values that are a random sample of the values in the source series.
            N is either a positive integer value, representing a total, that is greater than zero - or - a floating point value,
            suffixed with '%' representing a percentage, that must range from greater than 0 to less than or equal to 100.
            Second parameter, optional, is a boolean flag representing if time in dataset should be normalized - defaults to true.
            N can either be constant value or a named target available from the expression. Any target values that fall between 0
            and 1 will be treated as a percentage.
            </summary>
            <remarks>
            Signature: <c>Random(N|N%, [normalizeTime = true], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Random(25%, FILTER ActiveMeasurements WHERE SignalType='VPHM')</c><br/>
            Variants: Random, Rand, Sample<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.First">
            <summary>
            Returns a series of N, or N% of total, values from the start of the source series.
            N, optional, is either a positive integer value, representing a total, that is greater than zero - or - a floating point value,
            suffixed with '%' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.
            N can either be constant value or a named target available from the expression. Any target values that fall between 0
            and 1 will be treated as a percentage.
            </summary>
            <remarks>
            Signature: <c>First([N|N% = 1], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>First(5%, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: First<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Last">
            <summary>
            Returns a series of N, or N% of total, values from the end of the source series.
            N, optional, is either a positive integer value, representing a total, that is greater than zero - or - a floating point value,
            suffixed with '%' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.
            N can either be constant value or a named target available from the expression. Any target values that fall between 0
            and 1 will be treated as a percentage.
            </summary>
            <remarks>
            Signature: <c>Last([N|N% = 1], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Last(150, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Last<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Percentile">
            <summary>
            Returns a single value that represents the Nth order percentile for the sorted values in the source series.
            N is a floating point value, representing a percentage, that must range from 0 to 100.
            </summary>
            <remarks>
            Signature: <c>Percentile(N[%], expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>Percentile(10%, FILTER ActiveMeasurements WHERE SignalType='VPHM')</c><br/>
            Variants: Percentile, Pctl<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Difference">
            <summary>
            Returns a series of values that represent the difference between consecutive values in the source series.
            </summary>
            <remarks>
            Signature: <c>Difference(expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Difference(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Difference, Diff<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.TimeDifference">
            <summary>
            Returns a series of values that represent the time difference, in time units, between consecutive values in the source series. The units
            parameter, optional, specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds,
            Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or
            AtomicUnitsOfTime - defaults to Seconds.
            </summary>
            <remarks>
            Signature: <c>TimeDifference([units = Seconds], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>TimeDifference(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: TimeDifference, TimeDiff, Elapsed<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Derivative">
            <summary>
            Returns a series of values that represent the rate of change, per time units, for the difference between consecutive values in the source
            series. The units parameter, optional, specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds,
            Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals),
            PlanckTime or AtomicUnitsOfTime - defaults to Seconds.
            </summary>
            <remarks>
            Signature: <c>Derivative([units = Seconds], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Derivative(FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: Derivative, Der<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.TimeIntegration">
            <summary>
            Returns a single value that represents the time-based integration, i.e., the sum of <c>V(n) * (T(n) - T(n-1))</c> where time difference is
            calculated in the specified time units, of the values in the source series. The units parameter, optional, specifies the type of time units
            and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional
            Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Hours.
            </summary>
            <remarks>
            Signature: <c>TimeIntegration([units = Hours], expression)</c><br/>
            Returns: Single value.<br/>
            Example: <c>TimeIntegration(FILTER ActiveMeasurements WHERE SignalType='CALC' AND PointTag LIKE '%-MW:%')</c><br/>
            Variants: TimeIntegration, TimeInt<br/>
            Execution: Immediate enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Interval">
            <summary>
            Returns a series of values that represent a decimated set of the values in the source series based on the specified interval N, in time units.
            N is a floating-point value that must be greater than or equal to zero that represents the desired time interval, in time units, for the returned
            data. The units parameter, optional, specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds,
            Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals),
            PlanckTime or AtomicUnitsOfTime - defaults to Seconds. Setting N value to zero will request non-decimated, full resolution data from the data
            source. A zero N value will always produce the most accurate aggregation calculation results but will increase query burden for large time ranges.
            N can either be constant value or a named target available from the expression.
            </summary>
            <remarks>
            Signature: <c>Interval(N, [units = Seconds], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Sum(Interval(0, FILTER ActiveMeasurements WHERE SignalType LIKE '%PHM'))</c><br/>
            Variants: Interval<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.IncludeRange">
            <summary>
            Returns a series of values that represent a filtered set of the values in the source series where each value falls between the specified low and high.
            The low and high parameter values are floating-point numbers that represent the range of values allowed in the return series. Third parameter, optional,
            is a boolean flag that determines if range values are inclusive, i.e., allowed values are &gt;= low and &lt;= high - defaults to false, which means
            values are exclusive, i.e., allowed values are &gt; low and &lt; high. Function allows a fourth optional parameter that is a boolean flag - when four
            parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.
            The low and high parameter values can either be constant values or named targets available from the expression.
            </summary>
            <remarks>
            Signature: <c>IncludeRange(low, high, [inclusive = false], expression)</c> -or- <c>IncludeRange(low, high, [lowInclusive = false], [highInclusive = false], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>IncludeRange(59.90, 60.10, FILTER ActiveMeasurements WHERE SignalType='FREQ')</c><br/>
            Variants: IncludeRange, Include<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.ExcludeRange">
            <summary>
            Returns a series of values that represent a filtered set of the values in the source series where each value falls outside the specified low and high.
            The low and high parameter values are floating-point numbers that represent the range of values excluded in the return series. Third parameter, optional,
            is a boolean flag that determines if range values are inclusive, i.e., excluded values are &lt;= low or &gt;= high - defaults to false, which means
            values are exclusive, i.e., excluded values are &lt; low or &gt; high. Function allows a fourth optional parameter that is a boolean flag - when four
            parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.
            The low and high parameter values can either be constant values or named targets available from the expression.
            </summary>
            <remarks>
            Signature: <c>ExcludeRange(low, high, [inclusive = false], expression)</c> -or- <c>ExcludeRange(low, high, [lowInclusive = false], [highInclusive = false], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>ExcludeRange(-180.0, 180.0, true, false, FILTER ActiveMeasurements WHERE SignalType LIKE '%PHA')</c><br/>
            Variants: ExcludeRange, Exclude<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.FilterNaN">
            <summary>
            Returns a series of values that represent a filtered set of the values in the source series where each value is a real number, i.e., value is not NaN.
            First parameter, optional, is a boolean flag that determines if infinite values should also be excluded - defaults to true.
            </summary>
            <remarks>
            Signature: <c>FilterNaN([alsoFilterInfinity = true], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>FilterNaN(FILTER ActiveMeasurements WHERE SignalType='VPHM')</c><br/>
            Variants: FilterNaN<br/>
            Execution: Deferred enumeration.
            </remarks>        
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.UnwrapAngle">
            <summary>
            Returns a series of values that represent an adjusted set of angles that are unwrapped, per specified angle units, so that a comparable mathematical
            operation can be executed. For example, for angles that wrap between -180 and +180 degrees, this algorithm unwraps the values to make the values
            mathematically comparable. The units parameter, optional, specifies the type of angle units and must be one of the following: Degrees, Radians, Grads,
            ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.
            </summary>
            <remarks>
            Signature: <c>UnwrapAngle([units = Degrees], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>UnwrapAngle(FSX_PMU2-PA1:VH; REA_PMU3-PA2:VH)</c><br/>
            Variants: UnwrapAngle, Unwrap<br/>
            Execution: Immediate in-memory array load.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.WrapAngle">
            <summary>
            Returns a series of values that represent an adjusted set of angles that are wrapped, per specified angle units, so that angle values are consistently
            between -180 and +180 degrees. The units parameter, optional, specifies the type of angle units and must be one of the following: Degrees, Radians,
            Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.
            </summary>
            <remarks>
            Signature: <c>WrapAngle([units = Degrees], expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>WrapAngle(Radians, FILTER TOP 5 ActiveMeasurements WHERE SignalType LIKE '%PHA')</c><br/>
            Variants: WrapAngle, Wrap<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.Label">
            <summary>
            Renames a series with the specified label value. If multiple series are targeted, labels will be indexed starting at one, e.g., if there are three
            series in the target expression with a label value of "Max", series would be labeled as "Max 1", "Max 2" and "Max 3". Group operations on this
            function will be ignored. The label parameter also supports substitutions when root target metadata can be resolved. For series values that directly
            map to a point tag, metadata value substitutions for the tag can be used in the label value - for example: {ID}, {SignalID}, {PointTag}, {AlternateTag},
            {SignalReference}, {Device}, {FramesPerSecond}, {Protocol}, {ProtocolType}, {SignalType}, {EngineeringUnits}, {PhasorType}, {Company}, {Description} -
            where applicable, these substitutions can be used in any combination.
            </summary>
            <remarks>
            Signature: <c>Label(value, expression)</c><br/>
            Returns: Series of values.<br/>
            Example: <c>Label('AvgFreq', SetAvg(FILTER TOP 20 ActiveMeasurements WHERE SignalType='FREQ'))</c><br/>
            Variants: Label, Name<br/>
            Execution: Deferred enumeration.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.SeriesFunction.None">
            <summary>
            Not a recognized function.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.GroupOperation">
            <summary>
            Group series operations.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GroupOperation.Set">
            <summary>
            Operates on each series end-to-end.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GroupOperation.Slice">
            <summary>
            Operates on each series as a group per time-slice.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.GroupOperation.None">
            <summary>
            Performs no group operation on the series set.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.GrafanaDataSourceBase">
            <summary>
            Represents a base implementation for Grafana data sources.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataSourceBase.InstanceName">
            <summary>
            Gets or sets instance name for this <see cref="T:GrafanaAdapters.GrafanaDataSourceBase"/> implementation.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataSourceBase.Metadata">
            <summary>
            Gets or sets <see cref="T:System.Data.DataSet"/> based meta-data source available to this <see cref="T:GrafanaAdapters.GrafanaDataSourceBase"/> implementation.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataSourceBase.MaximumSearchTargetsPerRequest">
            <summary>
            Gets or sets maximum number of search targets to return during a search query.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.GrafanaDataSourceBase.MaximumAnnotationsPerRequest">
            <summary>
            Gets or sets maximum number of annotations to return during an annotations query.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.Search(GrafanaAdapters.Target)">
            <summary>
            Search data source meta-data for a target.
            </summary>
            <param name="request">Search target.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.SearchFields(GrafanaAdapters.Target)">
            <summary>
            Search data source meta-data for a list of columns from a specific table.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.SearchFilters(GrafanaAdapters.Target)">
            <summary>
            Search data source meta-data for a list of tables.
            </summary>
            <param name="request">Request - ignored.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.SearchOrderBys(GrafanaAdapters.Target)">
            <summary>
            Search data source meta-data for a list of columns from a specific table to use for ORDER BY expression.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.Annotations(GrafanaAdapters.AnnotationRequest,System.Threading.CancellationToken)">
            <summary>
            Queries data source for annotations in a time-range (e.g., Alarms).
            </summary>
            <param name="request">Annotation request.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Queried annotations from data source.</returns>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.GetAlarmState(GrafanaAdapters.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Queries current alarm device state.
            </summary>
            <param name="request">Alarm request.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns> Queried device alarm states.</returns>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.Query(GrafanaAdapters.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Queries data source returning data as Grafana time-series data set.
            </summary>
            <param name="request">Query request.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:GrafanaAdapters.GrafanaDataSourceBase.QueryDataSourceValues(System.DateTime,System.DateTime,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.UInt64,System.String})">
            <summary>
            Starts a query that will read data source values, given a set of point IDs and targets, over a time range.
            </summary>
            <param name="startTime">Start-time for query.</param>
            <param name="stopTime">Stop-time for query.</param>
            <param name="interval">Interval from Grafana request.</param>
            <param name="decimate">Flag that determines if data should be decimated over provided time range.</param>
            <param name="targetMap">Set of IDs with associated targets to query.</param>
            <returns>Queried data source data in terms of value and time.</returns>
        </member>
        <member name="T:GrafanaAdapters.IGrafanaDataService">
            <summary>
            Defines needed API calls for a Grafana data source.
            </summary>
            <summary>
            Defines needed API calls for a Grafana data source.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.Query(GrafanaAdapters.QueryRequest)">
            <summary>
            Queries openHistorian as a Grafana data source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.GetAlarmState(GrafanaAdapters.QueryRequest)">
            <summary>
            Queries openPDC Alarmstates as a Grafana data source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.GetMetadata(GrafanaAdapters.Target)">
            <summary>
            Queries openHistorian as a Grafana Metadata source.
            </summary>
            <param name="request">Query request.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.Search(GrafanaAdapters.Target)">
            <summary>
            Search openHistorian for a target.
            </summary>
            <param name="request">Search target.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.SearchFields(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of columns from a specific table.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.SearchFilters(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of tables.
            </summary>
            <param name="request">Request.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.SearchOrderBys(GrafanaAdapters.Target)">
            <summary>
            Search data source for a list of columns from a specific table to use for ORDER BY expression.
            </summary>
            <param name="request">Table Name.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.Annotations(GrafanaAdapters.AnnotationRequest)">
            <summary>
            Queries openHistorian for annotations in a time-range (e.g., Alarms).
            </summary>
            <param name="request">Annotation request.</param>
        </member>
        <member name="M:GrafanaAdapters.IGrafanaDataService.TestDataSource">
            <summary>
            Validates that openHistorian Grafana data source is responding as expected.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.LocationData">
            <summary>
            Defines location meta-data functions for Grafana controllers.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.LocationData.DataSource">
            <summary>
            Gets or sets associated <see cref="T:GrafanaAdapters.GrafanaDataSourceBase"/> instance.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.LocationData.GetLocationData(System.Double,System.Double,System.Collections.Generic.List{GrafanaAdapters.Target},System.Threading.CancellationToken)">
            <summary>
            Queries Grafana data source for location data offsetting duplicate coordinates using a radial distribution.
            </summary>
            <param name="radius">Radius of overlapping coordinate distribution.</param>
            <param name="zoom">Zoom level.</param>
            <param name="request"> Query request.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <returns>JSON serialized location metadata for specified targets.</returns>
        </member>
        <member name="M:GrafanaAdapters.LocationData.GetLocationData(System.Collections.Generic.List{GrafanaAdapters.Target},System.Threading.CancellationToken)">
            <summary>
            Queries Grafana data source for location data.
            </summary>
            <param name="request"> Query request.</param>
            <param name="cancellationToken">Propagates notification from client that operations should be canceled.</param>
            <returns>JSON serialized location metadata for specified targets.</returns>
        </member>
        <member name="T:GrafanaAdapters.QueryRequest">
            <summary>
            Defines a Grafana query request.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.panelId">
            <summary>
            Panel ID of request.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.range">
            <summary>
            Request range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.rangeRaw">
            <summary>
            Relative request range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.interval">
            <summary>
            Request interval.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.targets">
            <summary>
            Request targets.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.format">
            <summary>
            Request format (typically json).
            </summary>
        </member>
        <member name="P:GrafanaAdapters.QueryRequest.maxDataPoints">
            <summary>
            Maximum data points to return.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.Range">
            <summary>
            Defines a Grafana query range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Range.from">
            <summary>
            From time for range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Range.to">
            <summary>
            To time for range. 
            </summary>
        </member>
        <member name="T:GrafanaAdapters.RangeRaw">
            <summary>
            Defines a Grafana relative query range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.RangeRaw.from">
            <summary>
            Relative from time for raw range.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.RangeRaw.to">
            <summary>
            Relative to time for raw range.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.Table">
            <summary>
            Defines a Grafana table.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Table.columns">
            <summary>
            Table columns.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Table.rows">
            <summary>
            Table rows.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Table.type">
            <summary>
            Table type (typically set to "table").
            </summary>
        </member>
        <member name="T:GrafanaAdapters.Target">
            <summary>
            Defines a Grafana query request target.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Target.refId">
            <summary>
            Reference ID.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Target.target">
            <summary>
            Target point/tag name.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Target.excludedFlags">
            <summary>
            Exclude data that have the specified flags set.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.Target.excludeNormalFlags">
            <summary>
            Exclude data that has normal flag set.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.TargetCaches">
            <summary>
            Exposes a method to reinitialize sliding memory caches used by Grafana data sources.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.TargetCaches.ResetAll">
            <summary>
            Resets all sliding memory caches used by Grafana data sources.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.DataSourceValue">
            <summary>
            Defines a structure that represents an individual time-series value from a data source.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValue.Target">
            <summary>
            Query target, e.g., a point-tag.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValue.Value">
            <summary>
            Queried value.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValue.Time">
            <summary>
            Timestamp, in Unix epoch milliseconds, of queried value.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.DataSourceValue.Flags">
            <summary>
            Flags for queried value.
            </summary>
        </member>
        <member name="T:GrafanaAdapters.TimeSeriesValues">
            <summary>
            Defines a Grafana time-series values.
            </summary>
            <remarks>
            This structure is serialized and returned to Grafana via JSON.
            </remarks>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.Value">
            <summary>
            Data point index for value.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.Time">
            <summary>
            Data point index for time.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.target">
            <summary>
            Defines a Grafana time-series value point source.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.rootTarget">
            <summary>
            Defines a Grafana time-series underlying point tag.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.latitude">
            <summary>
            Defines a Grafana time-series underlying point tag latitude.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.longitude">
            <summary>
            Defines a Grafana time-series underlying point tag longitude.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.dropEmptySeries">
            <summary>
            Defines flag that determines if empty series are produced.
            </summary>
        </member>
        <member name="F:GrafanaAdapters.TimeSeriesValues.datapoints">
            <summary>
            Defines a Grafana time-series value data.
            </summary>
            <remarks>
            "datapoints":[
                  [622,1450754160000],
                  [365,1450754220000]
            ]
            </remarks>
        </member>
        <member name="T:GrafanaAdapters.TimeSliceScanner">
            <summary>
            Reads series of <see cref="T:GrafanaAdapters.DataSourceValue"/> instances for the same time interval.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.TimeSliceScanner.#ctor(System.Collections.Generic.IEnumerable{GrafanaAdapters.DataSourceValueGroup},System.Double)">
            <summary>
            Creates a new <see cref="T:GrafanaAdapters.TimeSliceScanner"/>.
            </summary>
            <param name="dataset">Source <see cref="T:GrafanaAdapters.DataSourceValue"/> series to scan.</param>
            <param name="tolerance">Time tolerance for data slices in Unix epoch milliseconds.</param>
        </member>
        <member name="P:GrafanaAdapters.TimeSliceScanner.DataReadComplete">
            <summary>
            Gets a flag that determines if data read has been completed.
            </summary>
        </member>
        <member name="P:GrafanaAdapters.TimeSliceScanner.Tolerance">
            <summary>
            Gets time tolerance for data slices in Unix epoch milliseconds.
            </summary>
        </member>
        <member name="M:GrafanaAdapters.TimeSliceScanner.ReadNextTimeSlice(System.Boolean)">
            <summary>
            Reads next time slice from the series set.
            </summary>
            <param name="lastValue">
            Set to <c>true</c> to only publish last value per-series in time-slice for specified <see cref="P:GrafanaAdapters.TimeSliceScanner.Tolerance"/>;
            otherwise, <c>false</c> to publish all series values since last slice.
            </param>
            <returns>Next time slice.</returns>
        </member>
    </members>
</doc>
